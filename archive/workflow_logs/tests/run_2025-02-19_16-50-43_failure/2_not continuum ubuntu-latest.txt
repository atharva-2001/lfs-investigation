2025-02-24T15:38:20.8637648Z Requested labels: ubuntu-latest
2025-02-24T15:38:20.8637915Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2982/merge
2025-02-24T15:38:20.8638021Z Waiting for a runner to pick up this job...
2025-02-24T15:38:21.2203495Z Job is waiting for a hosted runner to come online.
2025-02-24T15:38:24.2876063Z Job is about to start running on the hosted runner: GitHub Actions 2 (hosted)
2025-02-24T15:38:26.5116065Z Current runner version: '2.322.0'
2025-02-24T15:38:26.5139828Z ##[group]Operating System
2025-02-24T15:38:26.5140684Z Ubuntu
2025-02-24T15:38:26.5141447Z 24.04.1
2025-02-24T15:38:26.5141954Z LTS
2025-02-24T15:38:26.5142534Z ##[endgroup]
2025-02-24T15:38:26.5143078Z ##[group]Runner Image
2025-02-24T15:38:26.5143598Z Image: ubuntu-24.04
2025-02-24T15:38:26.5144196Z Version: 20250209.1.0
2025-02-24T15:38:26.5145230Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250209.1/images/ubuntu/Ubuntu2404-Readme.md
2025-02-24T15:38:26.5146648Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250209.1
2025-02-24T15:38:26.5147603Z ##[endgroup]
2025-02-24T15:38:26.5148137Z ##[group]Runner Image Provisioner
2025-02-24T15:38:26.5148736Z 2.0.422.1
2025-02-24T15:38:26.5149258Z ##[endgroup]
2025-02-24T15:38:26.5151568Z ##[group]GITHUB_TOKEN Permissions
2025-02-24T15:38:26.5153711Z Actions: read
2025-02-24T15:38:26.5154616Z Attestations: read
2025-02-24T15:38:26.5155399Z Checks: read
2025-02-24T15:38:26.5155895Z Contents: read
2025-02-24T15:38:26.5156488Z Deployments: read
2025-02-24T15:38:26.5157057Z Discussions: read
2025-02-24T15:38:26.5157610Z Issues: read
2025-02-24T15:38:26.5158194Z Metadata: read
2025-02-24T15:38:26.5158700Z Packages: read
2025-02-24T15:38:26.5159160Z Pages: read
2025-02-24T15:38:26.5159754Z PullRequests: read
2025-02-24T15:38:26.5160330Z RepositoryProjects: read
2025-02-24T15:38:26.5161155Z SecurityEvents: read
2025-02-24T15:38:26.5161785Z Statuses: read
2025-02-24T15:38:26.5162276Z ##[endgroup]
2025-02-24T15:38:26.5165219Z Secret source: None
2025-02-24T15:38:26.5165975Z Prepare workflow directory
2025-02-24T15:38:26.5792260Z Prepare all required actions
2025-02-24T15:38:26.5828580Z Getting action download info
2025-02-24T15:38:26.8284161Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-02-24T15:38:26.8285408Z Version: 4.2.2
2025-02-24T15:38:26.8286374Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-02-24T15:38:26.8287437Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-02-24T15:38:26.8288060Z ##[endgroup]
2025-02-24T15:38:26.9031475Z ##[group]Download immutable action package 'actions/upload-artifact@v4'
2025-02-24T15:38:26.9032209Z Version: 4.6.1
2025-02-24T15:38:26.9032853Z Digest: sha256:3f6a28e7a1e0b5c8e2249e28da121a049fa5b91863b04390a46a82e4f8e2da98
2025-02-24T15:38:26.9033691Z Source commit SHA: 4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
2025-02-24T15:38:26.9034292Z ##[endgroup]
2025-02-24T15:38:27.3060259Z Complete job name: not continuum ubuntu-latest 
2025-02-24T15:38:27.3720728Z ##[group]Run actions/checkout@v4
2025-02-24T15:38:27.3721847Z with:
2025-02-24T15:38:27.3722268Z   repository: tardis-sn/tardis
2025-02-24T15:38:27.3722906Z   token: ***
2025-02-24T15:38:27.3723302Z   ssh-strict: true
2025-02-24T15:38:27.3723706Z   ssh-user: git
2025-02-24T15:38:27.3724124Z   persist-credentials: true
2025-02-24T15:38:27.3724590Z   clean: true
2025-02-24T15:38:27.3725001Z   sparse-checkout-cone-mode: true
2025-02-24T15:38:27.3725521Z   fetch-depth: 1
2025-02-24T15:38:27.3725924Z   fetch-tags: false
2025-02-24T15:38:27.3726333Z   show-progress: true
2025-02-24T15:38:27.3726754Z   lfs: false
2025-02-24T15:38:27.3727134Z   submodules: false
2025-02-24T15:38:27.3727552Z   set-safe-directory: true
2025-02-24T15:38:27.3728185Z env:
2025-02-24T15:38:27.3728560Z   CACHE_NUMBER: 0
2025-02-24T15:38:27.3729705Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:38:27.3731076Z   CODECOV_TOKEN: 
2025-02-24T15:38:27.3731504Z ##[endgroup]
2025-02-24T15:38:27.5497781Z Syncing repository: tardis-sn/tardis
2025-02-24T15:38:27.5499506Z ##[group]Getting Git version info
2025-02-24T15:38:27.5500174Z Working directory is '/home/runner/work/tardis/tardis'
2025-02-24T15:38:27.5501423Z [command]/usr/bin/git version
2025-02-24T15:38:27.5555193Z git version 2.48.1
2025-02-24T15:38:27.5599980Z ##[endgroup]
2025-02-24T15:38:27.5616026Z Temporarily overriding HOME='/home/runner/work/_temp/7a396f69-f078-4aa0-b716-0e965d39d896' before making global git config changes
2025-02-24T15:38:27.5618446Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T15:38:27.5623207Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-02-24T15:38:27.5659541Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-02-24T15:38:27.5664093Z ##[group]Initializing the repository
2025-02-24T15:38:27.5668586Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-02-24T15:38:27.5734472Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-24T15:38:27.5735733Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-24T15:38:27.5736750Z hint: of your new repositories, which will suppress this warning, call:
2025-02-24T15:38:27.5737436Z hint:
2025-02-24T15:38:27.5737939Z hint: 	git config --global init.defaultBranch <name>
2025-02-24T15:38:27.5738741Z hint:
2025-02-24T15:38:27.5739686Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-24T15:38:27.5740749Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-24T15:38:27.5742255Z hint:
2025-02-24T15:38:27.5742993Z hint: 	git branch -m <name>
2025-02-24T15:38:27.5744269Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-02-24T15:38:27.5752654Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-02-24T15:38:27.5784122Z ##[endgroup]
2025-02-24T15:38:27.5785339Z ##[group]Disabling automatic garbage collection
2025-02-24T15:38:27.5789108Z [command]/usr/bin/git config --local gc.auto 0
2025-02-24T15:38:27.5821537Z ##[endgroup]
2025-02-24T15:38:27.5822282Z ##[group]Setting up auth
2025-02-24T15:38:27.5832447Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T15:38:27.5866781Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T15:38:27.6177970Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T15:38:27.6213236Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T15:38:27.6463768Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-24T15:38:27.6499674Z ##[endgroup]
2025-02-24T15:38:27.6508376Z ##[group]Fetching the repository
2025-02-24T15:38:27.6510900Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +50944b3beaa9421ad7c28c54865249fb1869e541:refs/remotes/pull/2982/merge
2025-02-24T15:38:29.3978272Z From https://github.com/tardis-sn/tardis
2025-02-24T15:38:29.3980393Z  * [new ref]         50944b3beaa9421ad7c28c54865249fb1869e541 -> pull/2982/merge
2025-02-24T15:38:29.4003535Z ##[endgroup]
2025-02-24T15:38:29.4005370Z ##[group]Determining the checkout info
2025-02-24T15:38:29.4008997Z ##[endgroup]
2025-02-24T15:38:29.4014339Z [command]/usr/bin/git sparse-checkout disable
2025-02-24T15:38:29.4054971Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-24T15:38:29.4087283Z ##[group]Checking out the ref
2025-02-24T15:38:29.4091460Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2982/merge
2025-02-24T15:38:29.6092631Z Note: switching to 'refs/remotes/pull/2982/merge'.
2025-02-24T15:38:29.6095634Z 
2025-02-24T15:38:29.6096587Z You are in 'detached HEAD' state. You can look around, make experimental
2025-02-24T15:38:29.6098912Z changes and commit them, and you can discard any commits you make in this
2025-02-24T15:38:29.6101423Z state without impacting any branches by switching back to a branch.
2025-02-24T15:38:29.6103161Z 
2025-02-24T15:38:29.6104052Z If you want to create a new branch to retain commits you create, you may
2025-02-24T15:38:29.6106049Z do so (now or later) by using -c with the switch command. Example:
2025-02-24T15:38:29.6107235Z 
2025-02-24T15:38:29.6107749Z   git switch -c <new-branch-name>
2025-02-24T15:38:29.6108632Z 
2025-02-24T15:38:29.6109147Z Or undo this operation with:
2025-02-24T15:38:29.6109951Z 
2025-02-24T15:38:29.6110402Z   git switch -
2025-02-24T15:38:29.6111228Z 
2025-02-24T15:38:29.6112386Z Turn off this advice by setting config variable advice.detachedHead to false
2025-02-24T15:38:29.6113959Z 
2025-02-24T15:38:29.6115695Z HEAD is now at 50944b3 Merge 26e8a2e16910722ef603a0d10aa238b17514f1d8 into cec8b531cc56e66219fe3ca2efdbf837c008b852
2025-02-24T15:38:29.6121487Z ##[endgroup]
2025-02-24T15:38:29.6157686Z [command]/usr/bin/git log -1 --format=%H
2025-02-24T15:38:29.6181414Z 50944b3beaa9421ad7c28c54865249fb1869e541
2025-02-24T15:38:29.6481456Z Prepare all required actions
2025-02-24T15:38:29.6482492Z Getting action download info
2025-02-24T15:38:29.8289223Z ##[group]Download immutable action package 'actions/cache@v4'
2025-02-24T15:38:29.8289640Z Version: 4.2.1
2025-02-24T15:38:29.8290009Z Digest: sha256:b0404c9628d43aa6855629075b28f32cadf8efc5c26198438149f78500112940
2025-02-24T15:38:29.8290504Z Source commit SHA: 0c907a75c2c80ebcb7f088228285e798b750cf8f
2025-02-24T15:38:29.8290863Z ##[endgroup]
2025-02-24T15:38:30.1523504Z ##[group]Run ./.github/actions/setup_lfs
2025-02-24T15:38:30.1523848Z with:
2025-02-24T15:38:30.1524148Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-02-24T15:38:30.1524512Z   atom-data-sparse: false
2025-02-24T15:38:30.1524763Z env:
2025-02-24T15:38:30.1524976Z   CACHE_NUMBER: 0
2025-02-24T15:38:30.1525623Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:38:30.1526354Z   CODECOV_TOKEN: 
2025-02-24T15:38:30.1526585Z ##[endgroup]
2025-02-24T15:38:30.1667476Z ##[group]Run actions/checkout@v4
2025-02-24T15:38:30.1667779Z with:
2025-02-24T15:38:30.1668044Z   repository: tardis-sn/tardis-regression-data
2025-02-24T15:38:30.1668387Z   path: tardis-regression-data
2025-02-24T15:38:30.1668658Z   lfs: false
2025-02-24T15:38:30.1669031Z   token: ***
2025-02-24T15:38:30.1669266Z   ssh-strict: true
2025-02-24T15:38:30.1669507Z   ssh-user: git
2025-02-24T15:38:30.1669749Z   persist-credentials: true
2025-02-24T15:38:30.1670008Z   clean: true
2025-02-24T15:38:30.1670256Z   sparse-checkout-cone-mode: true
2025-02-24T15:38:30.1670547Z   fetch-depth: 1
2025-02-24T15:38:30.1670789Z   fetch-tags: false
2025-02-24T15:38:30.1671260Z   show-progress: true
2025-02-24T15:38:30.1671505Z   submodules: false
2025-02-24T15:38:30.1671757Z   set-safe-directory: true
2025-02-24T15:38:30.1672014Z env:
2025-02-24T15:38:30.1672230Z   CACHE_NUMBER: 0
2025-02-24T15:38:30.1672906Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:38:30.1673618Z   CODECOV_TOKEN: 
2025-02-24T15:38:30.1673852Z ##[endgroup]
2025-02-24T15:38:30.2636724Z Syncing repository: tardis-sn/tardis-regression-data
2025-02-24T15:38:30.2644571Z ##[group]Getting Git version info
2025-02-24T15:38:30.2647132Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-02-24T15:38:30.2686413Z [command]/usr/bin/git version
2025-02-24T15:38:30.2728444Z git version 2.48.1
2025-02-24T15:38:30.2753348Z ##[endgroup]
2025-02-24T15:38:30.2765525Z Temporarily overriding HOME='/home/runner/work/_temp/cb40992f-eb2b-4214-b0ad-fe077b608067' before making global git config changes
2025-02-24T15:38:30.2766492Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T15:38:30.2770564Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T15:38:30.2800112Z ##[group]Initializing the repository
2025-02-24T15:38:30.2805425Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T15:38:30.2840151Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-24T15:38:30.2841333Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-24T15:38:30.2842211Z hint: of your new repositories, which will suppress this warning, call:
2025-02-24T15:38:30.2842862Z hint:
2025-02-24T15:38:30.2843338Z hint: 	git config --global init.defaultBranch <name>
2025-02-24T15:38:30.2843892Z hint:
2025-02-24T15:38:30.2844395Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-24T15:38:30.2844933Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-24T15:38:30.2845341Z hint:
2025-02-24T15:38:30.2845574Z hint: 	git branch -m <name>
2025-02-24T15:38:30.2846335Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-02-24T15:38:30.2854234Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-02-24T15:38:30.2884087Z ##[endgroup]
2025-02-24T15:38:30.2884889Z ##[group]Disabling automatic garbage collection
2025-02-24T15:38:30.2889395Z [command]/usr/bin/git config --local gc.auto 0
2025-02-24T15:38:30.2917754Z ##[endgroup]
2025-02-24T15:38:30.2918568Z ##[group]Setting up auth
2025-02-24T15:38:30.2924885Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T15:38:30.2954842Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T15:38:30.3178174Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T15:38:30.3208074Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T15:38:30.3434452Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-24T15:38:30.3469993Z ##[endgroup]
2025-02-24T15:38:30.3470531Z ##[group]Determining the default branch
2025-02-24T15:38:30.3474076Z Retrieving the default branch name
2025-02-24T15:38:30.6443367Z Default branch 'main'
2025-02-24T15:38:30.6444720Z ##[endgroup]
2025-02-24T15:38:30.6445443Z ##[group]Fetching the repository
2025-02-24T15:38:30.6450382Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-02-24T15:38:31.2792694Z From https://github.com/tardis-sn/tardis-regression-data
2025-02-24T15:38:31.2793888Z  * [new branch]      main       -> origin/main
2025-02-24T15:38:31.2819727Z ##[endgroup]
2025-02-24T15:38:31.2820613Z ##[group]Determining the checkout info
2025-02-24T15:38:31.2821821Z ##[endgroup]
2025-02-24T15:38:31.2827654Z [command]/usr/bin/git sparse-checkout disable
2025-02-24T15:38:31.2878853Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-24T15:38:31.2908980Z ##[group]Checking out the ref
2025-02-24T15:38:31.2913633Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-02-24T15:38:32.1284546Z Switched to a new branch 'main'
2025-02-24T15:38:32.1285548Z branch 'main' set up to track 'origin/main'.
2025-02-24T15:38:32.1546643Z ##[endgroup]
2025-02-24T15:38:32.1592926Z [command]/usr/bin/git log -1 --format=%H
2025-02-24T15:38:32.1618191Z b2fdf418ac1a3631f8c3d2a5f392b6ebfa09ba0b
2025-02-24T15:38:32.1778584Z ##[group]Run if [ "false" == "true" ]; then
2025-02-24T15:38:32.1778984Z [36;1mif [ "false" == "true" ]; then[0m
2025-02-24T15:38:32.1779295Z [36;1m  echo "Using atom data sparse checkout"[0m
2025-02-24T15:38:32.1779967Z [36;1m  echo "atom_data/kurucz_cd23_chianti_H_He.h5" > .lfs-files-list[0m
2025-02-24T15:38:32.1780313Z [36;1melse[0m
2025-02-24T15:38:32.1780544Z [36;1m  echo "Using full repository checkout"[0m
2025-02-24T15:38:32.1781122Z [36;1m  git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-files-list[0m
2025-02-24T15:38:32.1781502Z [36;1mfi[0m
2025-02-24T15:38:32.2000010Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T15:38:32.2000413Z env:
2025-02-24T15:38:32.2000621Z   CACHE_NUMBER: 0
2025-02-24T15:38:32.2001653Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:38:32.2002477Z   CODECOV_TOKEN: 
2025-02-24T15:38:32.2002702Z ##[endgroup]
2025-02-24T15:38:32.2094916Z Using full repository checkout
2025-02-24T15:38:32.3497122Z ##[group]Run actions/cache/restore@v4
2025-02-24T15:38:32.3497483Z with:
2025-02-24T15:38:32.3497721Z   path: tardis-regression-data/.git/lfs
2025-02-24T15:38:32.3525376Z   key: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T15:38:32.3526053Z   fail-on-cache-miss: true
2025-02-24T15:38:32.3526306Z   enableCrossOsArchive: false
2025-02-24T15:38:32.3526553Z   lookup-only: false
2025-02-24T15:38:32.3526751Z env:
2025-02-24T15:38:32.3526935Z   CACHE_NUMBER: 0
2025-02-24T15:38:32.3527553Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:38:32.3528187Z   CODECOV_TOKEN: 
2025-02-24T15:38:32.3528378Z ##[endgroup]
2025-02-24T15:38:32.7553521Z Cache hit for: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T15:38:34.0648429Z Received 8388608 of 2160718086 (0.4%), 8.0 MBs/sec
2025-02-24T15:38:35.0778234Z Received 134217728 of 2160718086 (6.2%), 63.6 MBs/sec
2025-02-24T15:38:36.0851282Z Received 268435456 of 2160718086 (12.4%), 84.7 MBs/sec
2025-02-24T15:38:37.1069722Z Received 402653184 of 2160718086 (18.6%), 95.0 MBs/sec
2025-02-24T15:38:38.1083839Z Received 532676608 of 2160718086 (24.7%), 100.7 MBs/sec
2025-02-24T15:38:39.1081492Z Received 645922816 of 2160718086 (29.9%), 101.9 MBs/sec
2025-02-24T15:38:40.1093063Z Received 746586112 of 2160718086 (34.6%), 101.1 MBs/sec
2025-02-24T15:38:41.1098815Z Received 855638016 of 2160718086 (39.6%), 101.4 MBs/sec
2025-02-24T15:38:42.1100519Z Received 943718400 of 2160718086 (43.7%), 99.5 MBs/sec
2025-02-24T15:38:43.1097826Z Received 1073741824 of 2160718086 (49.7%), 101.9 MBs/sec
2025-02-24T15:38:44.1106275Z Received 1203765248 of 2160718086 (55.7%), 103.9 MBs/sec
2025-02-24T15:38:45.1163221Z Received 1317011456 of 2160718086 (61.0%), 104.3 MBs/sec
2025-02-24T15:38:46.1109658Z Received 1447034880 of 2160718086 (67.0%), 105.8 MBs/sec
2025-02-24T15:38:47.1117005Z Received 1568669696 of 2160718086 (72.6%), 106.5 MBs/sec
2025-02-24T15:38:48.1106612Z Received 1686110208 of 2160718086 (78.0%), 106.9 MBs/sec
2025-02-24T15:38:49.1108598Z Received 1799356416 of 2160718086 (83.3%), 106.9 MBs/sec
2025-02-24T15:38:50.1119105Z Received 1925185536 of 2160718086 (89.1%), 107.7 MBs/sec
2025-02-24T15:38:51.1122615Z Received 2038431744 of 2160718086 (94.3%), 107.7 MBs/sec
2025-02-24T15:38:52.1133476Z Received 2148135174 of 2160718086 (99.4%), 107.5 MBs/sec
2025-02-24T15:38:52.3250120Z Received 2160718086 of 2160718086 (100.0%), 107.0 MBs/sec
2025-02-24T15:38:52.3253601Z Cache Size: ~2061 MB (2160718086 B)
2025-02-24T15:38:52.3368306Z [command]/usr/bin/tar -xf /home/runner/work/_temp/81820fc3-719c-4166-b806-516828aa74d6/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-24T15:39:02.7146592Z Cache restored successfully
2025-02-24T15:39:03.0903452Z Cache restored from key: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T15:39:03.1030016Z ##[group]Run git lfs checkout
2025-02-24T15:39:03.1030289Z [36;1mgit lfs checkout[0m
2025-02-24T15:39:03.1086899Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T15:39:03.1087244Z env:
2025-02-24T15:39:03.1087433Z   CACHE_NUMBER: 0
2025-02-24T15:39:03.1088093Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:39:03.1088782Z   CODECOV_TOKEN: 
2025-02-24T15:39:03.1088972Z ##[endgroup]
2025-02-24T15:39:23.3702169Z Checking out LFS objects: 100% (204/204), 5.7 GB | 264 MB/s, done.
2025-02-24T15:39:26.7621651Z Prepare all required actions
2025-02-24T15:39:26.7622017Z Getting action download info
2025-02-24T15:39:26.9139332Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-02-24T15:39:27.4139391Z ##[group]Run ./.github/actions/setup_env
2025-02-24T15:39:27.4139658Z with:
2025-02-24T15:39:27.4139869Z   os-label: linux-64
2025-02-24T15:39:27.4140061Z env:
2025-02-24T15:39:27.4140226Z   CACHE_NUMBER: 0
2025-02-24T15:39:27.4140835Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:39:27.4141738Z   CODECOV_TOKEN: 
2025-02-24T15:39:27.4141927Z ##[endgroup]
2025-02-24T15:39:27.4162640Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-02-24T15:39:27.4163133Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-02-24T15:39:27.4163712Z [36;1mecho "file_hash=tardis-conda-env-linux-64-${file_hash}-v1" >> "${GITHUB_OUTPUT}"[0m
2025-02-24T15:39:27.4221747Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T15:39:27.4222071Z env:
2025-02-24T15:39:27.4222248Z   CACHE_NUMBER: 0
2025-02-24T15:39:27.4222872Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:39:27.4223548Z   CODECOV_TOKEN: 
2025-02-24T15:39:27.4223739Z ##[endgroup]
2025-02-24T15:39:27.4698544Z ##[group]Run mamba-org/setup-micromamba@v1
2025-02-24T15:39:27.4698798Z with:
2025-02-24T15:39:27.4698986Z   environment-file: conda-linux-64.lock
2025-02-24T15:39:27.4699536Z   cache-environment-key: tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1
2025-02-24T15:39:27.4700352Z   cache-downloads-key: tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1
2025-02-24T15:39:27.4700890Z   environment-name: tardis
2025-02-24T15:39:27.4701475Z   cache-environment: true
2025-02-24T15:39:27.4701736Z   cache-downloads: true
2025-02-24T15:39:27.4701930Z env:
2025-02-24T15:39:27.4702089Z   CACHE_NUMBER: 0
2025-02-24T15:39:27.4702694Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:39:27.4703331Z   CODECOV_TOKEN: 
2025-02-24T15:39:27.4703508Z ##[endgroup]
2025-02-24T15:39:27.6162491Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-02-24T15:39:27.6173027Z ##[group]Install micromamba
2025-02-24T15:39:28.2658275Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-02-24T15:39:28.2659146Z ##[endgroup]
2025-02-24T15:39:28.2660288Z Adding conda-forge to condarc channels ...
2025-02-24T15:39:28.2674078Z ##[group]Initialize micromamba for bash.
2025-02-24T15:39:28.2699474Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:39:28.2822549Z Modifying RC file "/home/runner/.bashrc"
2025-02-24T15:39:28.2823526Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-02-24T15:39:28.2824178Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-02-24T15:39:28.2825362Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-02-24T15:39:28.2825817Z 
2025-02-24T15:39:28.2825970Z # >>> mamba initialize >>>
2025-02-24T15:39:28.2826463Z # !! Contents within this block are managed by 'mamba init' !!
2025-02-24T15:39:28.2827087Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-02-24T15:39:28.2827679Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-02-24T15:39:28.2828480Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-02-24T15:39:28.2828936Z if [ $? -eq 0 ]; then
2025-02-24T15:39:28.2829377Z     eval "$__mamba_setup"
2025-02-24T15:39:28.2829603Z else
2025-02-24T15:39:28.2829877Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-02-24T15:39:28.2830225Z fi
2025-02-24T15:39:28.2830393Z unset __mamba_setup
2025-02-24T15:39:28.2830594Z # <<< mamba initialize <<<
2025-02-24T15:39:28.2830732Z 
2025-02-24T15:39:28.2842304Z Moving mamba initialize block to .bash_profile
2025-02-24T15:39:28.2852439Z ##[endgroup]
2025-02-24T15:39:28.2853664Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-02-24T15:39:29.8923834Z Received 0 of 356815776 (0.0%), 0.0 MBs/sec
2025-02-24T15:39:30.8931866Z Received 138412032 of 356815776 (38.8%), 66.0 MBs/sec
2025-02-24T15:39:31.8969391Z Received 285212672 of 356815776 (79.9%), 90.6 MBs/sec
2025-02-24T15:39:32.3712324Z Cache Size: ~340 MB (356815776 B)
2025-02-24T15:39:32.3801534Z [command]/usr/bin/tar -xf /home/runner/work/_temp/f232aa06-9c7c-4527-a177-63a55e58f3d0/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-24T15:39:32.8932927Z Received 356815776 of 356815776 (100.0%), 85.0 MBs/sec
2025-02-24T15:39:32.9220439Z Cache restored successfully
2025-02-24T15:39:32.9963978Z Restored cache with key `tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1-linux-64`
2025-02-24T15:39:32.9965473Z ##[endgroup]
2025-02-24T15:39:32.9976269Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-02-24T15:39:34.3595568Z Received 0 of 444032293 (0.0%), 0.0 MBs/sec
2025-02-24T15:39:35.3599831Z Received 150994944 of 444032293 (34.0%), 72.0 MBs/sec
2025-02-24T15:39:36.3601854Z Received 289406976 of 444032293 (65.2%), 92.0 MBs/sec
2025-02-24T15:39:37.3598237Z Received 439837989 of 444032293 (99.1%), 104.8 MBs/sec
2025-02-24T15:39:37.5530257Z Cache Size: ~423 MB (444032293 B)
2025-02-24T15:39:37.5567954Z [command]/usr/bin/tar -xf /home/runner/work/_temp/a8dd1cec-2676-4b47-bf9a-279457114225/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-02-24T15:39:38.3602384Z Received 444032293 of 444032293 (100.0%), 84.7 MBs/sec
2025-02-24T15:39:42.6267604Z Cache restored successfully
2025-02-24T15:39:42.7155429Z Restored cache with key `tardis-conda-env-linux-64-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-v1-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee`
2025-02-24T15:39:42.7172240Z ##[endgroup]
2025-02-24T15:39:42.7172670Z Adding environment tardis to auto-activate bash ...
2025-02-24T15:39:42.7173664Z Generating micromamba run shell.
2025-02-24T15:39:42.7176935Z ##[endgroup]
2025-02-24T15:39:42.7180020Z Set environment variables.
2025-02-24T15:39:42.7189204Z ##[group]micromamba info
2025-02-24T15:39:42.7190567Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-02-24T15:39:42.7419408Z 
2025-02-24T15:39:42.7419628Z        libmamba version : 1.5.10
2025-02-24T15:39:42.7420119Z      micromamba version : 1.5.10
2025-02-24T15:39:42.7420786Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-02-24T15:39:42.7421820Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-02-24T15:39:42.7422491Z        envs directories : /home/runner/micromamba/envs
2025-02-24T15:39:42.7423344Z           package cache : /home/runner/micromamba/pkgs
2025-02-24T15:39:42.7423726Z                           /home/runner/.mamba/pkgs
2025-02-24T15:39:42.7424050Z             environment : tardis
2025-02-24T15:39:42.7424388Z            env location : /home/runner/micromamba/envs/tardis
2025-02-24T15:39:42.7424772Z       user config files : /home/runner/.mambarc
2025-02-24T15:39:42.7425232Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:39:42.7425703Z        virtual packages : __unix=0=0
2025-02-24T15:39:42.7426011Z                           __linux=6.8.0=0
2025-02-24T15:39:42.7426579Z                           __glibc=2.39=0
2025-02-24T15:39:42.7426929Z                           __archspec=1=x86_64_v3
2025-02-24T15:39:42.7427352Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-02-24T15:39:42.7427817Z                           https://conda.anaconda.org/conda-forge/noarch
2025-02-24T15:39:42.7428207Z        base environment : /home/runner/micromamba
2025-02-24T15:39:42.7428545Z                platform : linux-64
2025-02-24T15:39:42.7435753Z ##[endgroup]
2025-02-24T15:39:42.7436243Z ##[group]micromamba list
2025-02-24T15:39:42.7437380Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-02-24T15:39:43.1300533Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-02-24T15:39:43.1301789Z 
2025-02-24T15:39:43.1302088Z   Name                           Version              Build                    Channel    
2025-02-24T15:39:43.1303352Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-02-24T15:39:43.1303920Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-02-24T15:39:43.1304484Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-02-24T15:39:43.1305037Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1305584Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1306106Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1306740Z   argon2-cffi-bindings           21.2.0               py312h98912ed_4          conda-forge
2025-02-24T15:39:43.1307313Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1307820Z   astropy                        6.1.1                py312h085067d_0          conda-forge
2025-02-24T15:39:43.1308404Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1309048Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1309632Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1310166Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1310664Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-02-24T15:39:43.1311317Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-02-24T15:39:43.1311678Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1312220Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-02-24T15:39:43.1312653Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1313007Z   blosc                          1.21.5               hc2324a3_1               conda-forge
2025-02-24T15:39:43.1313367Z   brotli                         1.1.0                hd590300_1               conda-forge
2025-02-24T15:39:43.1313724Z   brotli-bin                     1.1.0                hd590300_1               conda-forge
2025-02-24T15:39:43.1314464Z   brotli-python                  1.1.0                py312h30efb56_1          conda-forge
2025-02-24T15:39:43.1314838Z   bzip2                          1.0.8                hd590300_5               conda-forge
2025-02-24T15:39:43.1315176Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-02-24T15:39:43.1315525Z   c-blosc2                       2.14.4               hb4ffafa_1               conda-forge
2025-02-24T15:39:43.1315917Z   ca-certificates                2024.6.2             hbcca054_0               conda-forge
2025-02-24T15:39:43.1316511Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-02-24T15:39:43.1316933Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-02-24T15:39:43.1317307Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-02-24T15:39:43.1317671Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1318046Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-02-24T15:39:43.1318436Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1318831Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-02-24T15:39:43.1319193Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1319572Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1319925Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1320278Z   commonmark                     0.9.1                py_0                     conda-forge
2025-02-24T15:39:43.1320659Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-02-24T15:39:43.1321213Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-02-24T15:39:43.1321566Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1321928Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-02-24T15:39:43.1322299Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-02-24T15:39:43.1322660Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1323036Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1323404Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-02-24T15:39:43.1323760Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1324125Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1324522Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-02-24T15:39:43.1324907Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1325259Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-02-24T15:39:43.1325656Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-02-24T15:39:43.1326104Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-02-24T15:39:43.1326557Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-02-24T15:39:43.1326989Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-02-24T15:39:43.1327370Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-02-24T15:39:43.1327911Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-02-24T15:39:43.1328327Z   fonts-conda-forge              1                    0                        conda-forge
2025-02-24T15:39:43.1328712Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-02-24T15:39:43.1329063Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1329411Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-02-24T15:39:43.1329874Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-02-24T15:39:43.1330229Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1330586Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-02-24T15:39:43.1331207Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-02-24T15:39:43.1331596Z   git-lfs                        3.5.1                ha770c72_0               conda-forge
2025-02-24T15:39:43.1331927Z   gmp                            6.3.0                h59595ed_1               conda-forge
2025-02-24T15:39:43.1332259Z   gmpy2                          2.1.5                py312h1d5cde6_1          conda-forge
2025-02-24T15:39:43.1332617Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-02-24T15:39:43.1333139Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-02-24T15:39:43.1333711Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-02-24T15:39:43.1334244Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-02-24T15:39:43.1334802Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1335427Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1335983Z   h5py                           3.11.0               nompi_py312hb7ab980_102  conda-forge
2025-02-24T15:39:43.1336558Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-02-24T15:39:43.1337150Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-02-24T15:39:43.1337672Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-02-24T15:39:43.1338234Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1338978Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1339613Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1340151Z   icu                            73.2                 h59595ed_0               conda-forge
2025-02-24T15:39:43.1340729Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1341506Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1342177Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-02-24T15:39:43.1342828Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-02-24T15:39:43.1343568Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1344254Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1344901Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-02-24T15:39:43.1345279Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-02-24T15:39:43.1346044Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:39:43.1346744Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1347369Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1347932Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1348448Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1349163Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1349772Z   jsonpointer                    3.0.0                py312h7900ff3_0          conda-forge
2025-02-24T15:39:43.1350351Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1351251Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1352012Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1352723Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1353344Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1353928Z   jupyter_core                   5.7.2                py312h7900ff3_0          conda-forge
2025-02-24T15:39:43.1354535Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1355157Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1355828Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1356241Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1356645Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:39:43.1357058Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1357469Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1357860Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-02-24T15:39:43.1358225Z   kiwisolver                     1.4.5                py312h8572e83_1          conda-forge
2025-02-24T15:39:43.1358579Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-02-24T15:39:43.1358931Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-02-24T15:39:43.1359294Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-02-24T15:39:43.1359651Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-02-24T15:39:43.1360006Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-02-24T15:39:43.1360337Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-02-24T15:39:43.1360695Z   libblas                        3.9.0                22_linux64_openblas      conda-forge
2025-02-24T15:39:43.1361282Z   libbrotlicommon                1.1.0                hd590300_1               conda-forge
2025-02-24T15:39:43.1361677Z   libbrotlidec                   1.1.0                hd590300_1               conda-forge
2025-02-24T15:39:43.1362075Z   libbrotlienc                   1.1.0                hd590300_1               conda-forge
2025-02-24T15:39:43.1362452Z   libcblas                       3.9.0                22_linux64_openblas      conda-forge
2025-02-24T15:39:43.1362809Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-02-24T15:39:43.1363341Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-02-24T15:39:43.1363721Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-02-24T15:39:43.1364073Z   libev                          4.33                 hd590300_2               conda-forge
2025-02-24T15:39:43.1364411Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-02-24T15:39:43.1364764Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-02-24T15:39:43.1365253Z   libgcc-ng                      13.2.0               h77fa898_10              conda-forge
2025-02-24T15:39:43.1365609Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-02-24T15:39:43.1365974Z   libgfortran-ng                 13.2.0               h69a702a_10              conda-forge
2025-02-24T15:39:43.1366360Z   libgfortran5                   13.2.0               h3d2ce59_10              conda-forge
2025-02-24T15:39:43.1366734Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-02-24T15:39:43.1367084Z   libgomp                        13.2.0               h77fa898_10              conda-forge
2025-02-24T15:39:43.1367437Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-02-24T15:39:43.1367812Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-02-24T15:39:43.1368191Z   liblapack                      3.9.0                22_linux64_openblas      conda-forge
2025-02-24T15:39:43.1368568Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-02-24T15:39:43.1368942Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-02-24T15:39:43.1369297Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-02-24T15:39:43.1369683Z   libopenblas                    0.3.27               pthreads_h413a1c8_0      conda-forge
2025-02-24T15:39:43.1370048Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-02-24T15:39:43.1370396Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-02-24T15:39:43.1370764Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-02-24T15:39:43.1371406Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-02-24T15:39:43.1371771Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-02-24T15:39:43.1372131Z   libstdcxx-ng                   13.2.0               hc0a3c3a_10              conda-forge
2025-02-24T15:39:43.1372504Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-02-24T15:39:43.1372854Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-02-24T15:39:43.1373204Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-02-24T15:39:43.1373565Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-02-24T15:39:43.1373930Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-02-24T15:39:43.1374278Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-02-24T15:39:43.1374634Z   libxml2                        2.12.7               hc051c1a_1               conda-forge
2025-02-24T15:39:43.1374989Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-02-24T15:39:43.1375336Z   libzlib                        1.3.1                h4ab18f5_1               conda-forge
2025-02-24T15:39:43.1375692Z   llvmlite                       0.42.0               py312hb06c811_1          conda-forge
2025-02-24T15:39:43.1376038Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-02-24T15:39:43.1376597Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-02-24T15:39:43.1376916Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-02-24T15:39:43.1377264Z   markupsafe                     2.1.5                py312h98912ed_0          conda-forge
2025-02-24T15:39:43.1377658Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-02-24T15:39:43.1378346Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1378760Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1379106Z   mpc                            1.3.1                hfe3b2da_0               conda-forge
2025-02-24T15:39:43.1379433Z   mpfr                           4.2.1                h9458935_1               conda-forge
2025-02-24T15:39:43.1379775Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1380124Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-02-24T15:39:43.1380493Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-02-24T15:39:43.1380878Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1381446Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1381819Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-02-24T15:39:43.1382200Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-02-24T15:39:43.1382607Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-02-24T15:39:43.1382997Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1383362Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1383715Z   ncurses                        6.5                  h59595ed_0               conda-forge
2025-02-24T15:39:43.1384075Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1384448Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-02-24T15:39:43.1384824Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-02-24T15:39:43.1385174Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1385543Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1385908Z   numba                          0.59.1               py312hacefee8_0          conda-forge
2025-02-24T15:39:43.1386263Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-02-24T15:39:43.1386607Z   numpy                          1.26.4               py312heda63a1_0          conda-forge
2025-02-24T15:39:43.1386965Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:39:43.1387319Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-02-24T15:39:43.1387675Z   openssl                        3.3.1                h4ab18f5_0               conda-forge
2025-02-24T15:39:43.1388038Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1388407Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1388764Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-02-24T15:39:43.1389127Z   pandoc                         3.2                  ha770c72_0               conda-forge
2025-02-24T15:39:43.1389624Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1389990Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-02-24T15:39:43.1390328Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1390679Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1391327Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1391690Z   pcre2                          10.44                h0f59acf_0               conda-forge
2025-02-24T15:39:43.1392035Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1392394Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-02-24T15:39:43.1392762Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-02-24T15:39:43.1393098Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1393430Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-02-24T15:39:43.1393821Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-02-24T15:39:43.1394235Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1394616Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1394968Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1395350Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1395771Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-02-24T15:39:43.1396154Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-02-24T15:39:43.1396520Z   pthread-stubs                  0.4                  h36c2ea0_1001            conda-forge
2025-02-24T15:39:43.1396907Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-02-24T15:39:43.1397276Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1397648Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1398012Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-02-24T15:39:43.1398393Z   pybtex-docutils                1.0.3                py312h7900ff3_1          conda-forge
2025-02-24T15:39:43.1398782Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1399145Z   pyerfa                         2.0.1.4              py312h085067d_1          conda-forge
2025-02-24T15:39:43.1399506Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1399879Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-02-24T15:39:43.1400262Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1400625Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-02-24T15:39:43.1401161Z   pytables                       3.9.2                py312h96d95ec_2          conda-forge
2025-02-24T15:39:43.1401526Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1401891Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1402295Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1402830Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1403223Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1403601Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-02-24T15:39:43.1403977Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1404515Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1404963Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1405369Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1405747Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-02-24T15:39:43.1406106Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1406450Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-02-24T15:39:43.1406789Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-02-24T15:39:43.1407128Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-02-24T15:39:43.1407505Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1407890Z   readline                       8.2                  h8228510_1               conda-forge
2025-02-24T15:39:43.1408257Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1408648Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1409027Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1409420Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1409827Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-02-24T15:39:43.1410200Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-02-24T15:39:43.1410536Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-02-24T15:39:43.1410869Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-02-24T15:39:43.1411453Z   send2trash                     1.8.3                pyh0d859eb_0             conda-forge
2025-02-24T15:39:43.1411837Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1412232Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1412629Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-02-24T15:39:43.1412987Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-02-24T15:39:43.1413335Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1413691Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-02-24T15:39:43.1414050Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1414430Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1414816Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-02-24T15:39:43.1415168Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1415542Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1416140Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-02-24T15:39:43.1416554Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1416964Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1417388Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1417803Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-02-24T15:39:43.1418412Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-02-24T15:39:43.1418874Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1419330Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1419781Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1420236Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1420684Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1421298Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1421737Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1422228Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1422669Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1423028Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-02-24T15:39:43.1423394Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:39:43.1423757Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1424122Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-02-24T15:39:43.1424487Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1424828Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-02-24T15:39:43.1425149Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1425491Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1425839Z   tornado                        6.4.1                py312h9a8786e_0          conda-forge
2025-02-24T15:39:43.1426181Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1426529Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1426899Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-02-24T15:39:43.1427321Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1427768Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-02-24T15:39:43.1428180Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-02-24T15:39:43.1428578Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1428943Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-02-24T15:39:43.1429312Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1429676Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1430161Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1430521Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1430898Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-02-24T15:39:43.1431463Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1431848Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-02-24T15:39:43.1432353Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1432760Z   xorg-kbproto                   1.0.7                h7f98852_1002            conda-forge
2025-02-24T15:39:43.1433137Z   xorg-libice                    1.1.1                hd590300_0               conda-forge
2025-02-24T15:39:43.1433499Z   xorg-libsm                     1.2.4                h7391055_0               conda-forge
2025-02-24T15:39:43.1433882Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-02-24T15:39:43.1434249Z   xorg-libxau                    1.0.11               hd590300_0               conda-forge
2025-02-24T15:39:43.1434626Z   xorg-libxdmcp                  1.1.3                h7f98852_0               conda-forge
2025-02-24T15:39:43.1435006Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-02-24T15:39:43.1435405Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-02-24T15:39:43.1435806Z   xorg-renderproto               0.11.1               h7f98852_1002            conda-forge
2025-02-24T15:39:43.1436208Z   xorg-xextproto                 7.3.0                h0b41bf4_1003            conda-forge
2025-02-24T15:39:43.1436586Z   xorg-xproto                    7.0.31               h7f98852_1007            conda-forge
2025-02-24T15:39:43.1436929Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-02-24T15:39:43.1437247Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-02-24T15:39:43.1437577Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-02-24T15:39:43.1437916Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-02-24T15:39:43.1438248Z   zlib                           1.3.1                h4ab18f5_1               conda-forge
2025-02-24T15:39:43.1438586Z   zlib-ng                        2.0.7                h0b41bf4_0               conda-forge
2025-02-24T15:39:43.1438919Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-02-24T15:39:43.1439501Z ##[endgroup]
2025-02-24T15:39:43.1489708Z ##[group]Run pip install -e . --user
2025-02-24T15:39:43.1490044Z [36;1mpip install -e . --user[0m
2025-02-24T15:39:43.1548091Z shell: /usr/bin/bash -l {0}
2025-02-24T15:39:43.1548341Z env:
2025-02-24T15:39:43.1548527Z   CACHE_NUMBER: 0
2025-02-24T15:39:43.1549174Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:39:43.1549849Z   CODECOV_TOKEN: 
2025-02-24T15:39:43.1550079Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T15:39:43.1550388Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T15:39:43.1550746Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:39:43.1551217Z ##[endgroup]
2025-02-24T15:39:43.8637598Z Obtaining file:///home/runner/work/tardis/tardis
2025-02-24T15:39:43.8672842Z   Installing build dependencies: started
2025-02-24T15:39:46.5329556Z   Installing build dependencies: finished with status 'done'
2025-02-24T15:39:46.5335875Z   Checking if build backend supports build_editable: started
2025-02-24T15:39:46.6547527Z   Checking if build backend supports build_editable: finished with status 'done'
2025-02-24T15:39:46.6555115Z   Getting requirements to build editable: started
2025-02-24T15:39:47.1295872Z   Getting requirements to build editable: finished with status 'done'
2025-02-24T15:39:47.1303870Z   Preparing editable metadata (pyproject.toml): started
2025-02-24T15:39:47.5955866Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-02-24T15:39:47.6534064Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-02-24T15:39:47.6909835Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-02-24T15:39:47.6918730Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-02-24T15:39:47.6929363Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-02-24T15:39:47.6937496Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-02-24T15:39:47.6946684Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-02-24T15:39:47.7033630Z Building wheels for collected packages: tardis
2025-02-24T15:39:47.7042252Z   Building editable for tardis (pyproject.toml): started
2025-02-24T15:39:48.4490411Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-02-24T15:39:48.4497562Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8879 sha256=42531e60ec6ac0ae76aec59a36a44676f5db7605e611a1059dc308aa34ecd042
2025-02-24T15:39:48.4499531Z   Stored in directory: /tmp/pip-ephem-wheel-cache-au4q2y6p/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-02-24T15:39:48.4525634Z Successfully built tardis
2025-02-24T15:39:49.2118129Z Installing collected packages: tardis
2025-02-24T15:39:49.2209640Z Successfully installed tardis-0.0.0
2025-02-24T15:39:49.4127813Z ##[group]Run pip install qgridnext
2025-02-24T15:39:49.4128143Z [36;1mpip install qgridnext[0m
2025-02-24T15:39:49.4182757Z shell: /usr/bin/bash -l {0}
2025-02-24T15:39:49.4182995Z env:
2025-02-24T15:39:49.4183181Z   CACHE_NUMBER: 0
2025-02-24T15:39:49.4183809Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:39:49.4184484Z   CODECOV_TOKEN: 
2025-02-24T15:39:49.4184710Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T15:39:49.4185016Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T15:39:49.4185363Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:39:49.4185694Z ##[endgroup]
2025-02-24T15:39:50.0329792Z Collecting qgridnext
2025-02-24T15:39:50.0490501Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-02-24T15:39:50.0616210Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-02-24T15:39:50.0624058Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-02-24T15:39:50.0633677Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-02-24T15:39:50.0643074Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-02-24T15:39:50.0726562Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-02-24T15:39:50.0734970Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-02-24T15:39:50.0747260Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-02-24T15:39:50.0764782Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-02-24T15:39:50.0778869Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-02-24T15:39:50.1217057Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-02-24T15:39:50.1230124Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-02-24T15:39:50.1238107Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-02-24T15:39:50.1546949Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-02-24T15:39:50.1561376Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-02-24T15:39:50.1569256Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-02-24T15:39:50.1579891Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-02-24T15:39:50.1589070Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-02-24T15:39:50.1598362Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-02-24T15:39:50.1618113Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-02-24T15:39:50.1665281Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-02-24T15:39:50.1721766Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-02-24T15:39:50.1907317Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-02-24T15:39:50.2048391Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-02-24T15:39:50.2061088Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-02-24T15:39:50.2076054Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-02-24T15:39:50.2086288Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-02-24T15:39:50.2094314Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-02-24T15:39:50.2123169Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-02-24T15:39:50.2151355Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-02-24T15:39:50.2284481Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-02-24T15:39:50.2293775Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-02-24T15:39:50.2300766Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-02-24T15:39:50.2633703Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-02-24T15:39:50.2642931Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-02-24T15:39:50.2651643Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-02-24T15:39:50.2662973Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-02-24T15:39:50.2674706Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-02-24T15:39:50.2685235Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-02-24T15:39:50.2695585Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-02-24T15:39:50.2708625Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-02-24T15:39:50.2718465Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-02-24T15:39:50.2727133Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-02-24T15:39:50.2736467Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-02-24T15:39:50.2744759Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-02-24T15:39:50.2754995Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-02-24T15:39:50.2763618Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-02-24T15:39:50.2774631Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-02-24T15:39:50.2791131Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-02-24T15:39:50.3068734Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-02-24T15:39:50.3080120Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-02-24T15:39:50.3091668Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-02-24T15:39:50.3105328Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-02-24T15:39:50.3130611Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-02-24T15:39:50.3317294Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-02-24T15:39:50.3343411Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-02-24T15:39:50.3354351Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-02-24T15:39:50.3372615Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-02-24T15:39:50.3719952Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-02-24T15:39:50.3728557Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-02-24T15:39:50.3872729Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-02-24T15:39:50.4104782Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-02-24T15:39:50.4118952Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-02-24T15:39:50.4195329Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-02-24T15:39:50.4376129Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-02-24T15:39:50.4396873Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-02-24T15:39:50.4411578Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-02-24T15:39:50.4472211Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-02-24T15:39:50.4660602Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-02-24T15:39:50.4670556Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-02-24T15:39:50.4679019Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-02-24T15:39:50.4687917Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-02-24T15:39:50.4945722Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-02-24T15:39:50.5093839Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-02-24T15:39:50.5101849Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-02-24T15:39:50.5111834Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-02-24T15:39:50.5119901Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-02-24T15:39:50.5536448Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-02-24T15:39:50.5554900Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-02-24T15:39:50.5568125Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-02-24T15:39:50.5582190Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-02-24T15:39:50.5593532Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-02-24T15:39:50.5605492Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-02-24T15:39:50.5621545Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-02-24T15:39:50.5630670Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T15:39:50.5747309Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-02-24T15:39:50.6044671Z Requirement already satisfied: charset-normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-02-24T15:39:50.6057861Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-02-24T15:39:50.6816484Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-02-24T15:39:50.7371936Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-02-24T15:39:50.7388709Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-02-24T15:39:50.7402083Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-02-24T15:39:50.7418348Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T15:39:50.7431689Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-02-24T15:39:50.8424162Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-02-24T15:39:50.8517723Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-02-24T15:39:50.9042210Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-02-24T15:39:50.9549156Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T15:39:50.9858154Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-02-24T15:39:51.0092505Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-02-24T15:39:51.0291622Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 72.3 MB/s eta 0:00:00
2025-02-24T15:39:51.8139381Z Installing collected packages: qgridnext
2025-02-24T15:39:51.8868625Z Successfully installed qgridnext-2.0.4
2025-02-24T15:39:52.0640374Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-24T15:39:52.0642174Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-24T15:39:52.0697683Z shell: /usr/bin/bash -l {0}
2025-02-24T15:39:52.0697947Z env:
2025-02-24T15:39:52.0698144Z   CACHE_NUMBER: 0
2025-02-24T15:39:52.0698834Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:39:52.0699560Z   CODECOV_TOKEN: 
2025-02-24T15:39:52.0699805Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-02-24T15:39:52.0700143Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-02-24T15:39:52.0700569Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:39:52.0701096Z ##[endgroup]
2025-02-24T15:40:01.4691943Z ============================= test session starts ==============================
2025-02-24T15:40:01.4692666Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-24T15:40:01.4693276Z rootdir: /home/runner/work/tardis/tardis
2025-02-24T15:40:01.4693777Z configfile: pyproject.toml
2025-02-24T15:40:01.4694374Z plugins: metadata-3.1.1, anyio-4.4.0, doctestplus-1.2.1, cov-5.0.0, html-4.1.1
2025-02-24T15:40:01.4695078Z collected 1796 items / 2 deselected / 1794 selected
2025-02-24T15:40:01.4695413Z 
2025-02-24T15:40:06.4124747Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-24T15:40:09.3826077Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-24T15:40:11.0304422Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-24T15:40:12.8473613Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-24T15:40:12.8566298Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-24T15:40:14.1205943Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-24T15:40:14.4646752Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-24T15:40:14.4662321Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-24T15:40:17.8783520Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-24T15:40:17.8908859Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-24T15:40:17.9174690Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-24T15:40:55.4486928Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-24T15:40:55.4628453Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-24T15:40:55.4734478Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-24T15:40:55.5032736Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-24T15:40:55.5236448Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-24T15:40:55.8205116Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-24T15:40:56.1448000Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-24T15:40:56.1641504Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-24T15:40:56.3607746Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-24T15:40:56.3674750Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-24T15:41:54.0180092Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-24T15:41:55.0193176Z ............                                                             [ 10%]
2025-02-24T15:41:58.0698901Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-24T15:41:58.1179431Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-24T15:41:59.4248795Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-24T15:42:00.7412741Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-24T15:42:02.5898515Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-24T15:42:05.6710009Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-24T15:42:52.1715203Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-24T15:43:03.9357678Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-24T15:43:05.5938517Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-24T15:43:08.9848344Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-24T15:43:11.2518267Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-24T15:43:14.6418113Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-24T15:43:18.0164957Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-24T15:43:19.2309353Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-24T15:43:22.6721849Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-24T15:43:26.5882239Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-24T15:43:30.2312654Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-24T15:43:32.7695239Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-24T15:43:36.0992598Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-24T15:43:39.8071564Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-24T15:43:40.4324742Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-24T15:43:40.6617362Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-24T15:43:40.6732618Z ......                                                                   [ 62%]
2025-02-24T15:43:40.8089540Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-24T15:45:57.1549300Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-24T15:45:57.1574296Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-24T15:46:20.1196724Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-24T15:46:33.7668647Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-24T15:46:34.5214860Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-24T15:46:43.2480139Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-24T15:46:43.2691700Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-24T15:46:43.7526943Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-24T15:46:43.7599351Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-24T15:46:45.3519600Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-24T15:46:45.3715470Z ..........                                                               [ 69%]
2025-02-24T15:46:45.5471219Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-24T15:46:45.5802864Z .........                                                                [ 72%]
2025-02-24T15:47:04.7961317Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-24T15:48:06.6233754Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-24T15:49:31.2083831Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-24T15:49:31.2811398Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-24T15:49:33.9002061Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-24T15:49:41.6674052Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-24T15:49:41.8811771Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-24T15:49:41.8989589Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-24T15:49:41.9395756Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-24T15:49:50.8078148Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-24T15:49:50.8143869Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-24T15:49:56.6085062Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-24T15:49:57.1057852Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-24T15:49:58.1273862Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-24T15:49:58.2633749Z XX.........                                                              [ 84%]
2025-02-24T15:49:58.2930055Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-24T15:49:58.5910481Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-24T15:49:59.0035471Z .....                                                                    [ 85%]
2025-02-24T15:50:35.0426281Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-24T15:50:35.0708481Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-24T15:50:35.0741315Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-24T15:50:37.9844029Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-24T15:50:38.0040284Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-24T15:50:41.5074359Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-24T15:50:41.5075730Z                                                                          [ 86%]
2025-02-24T15:50:42.2381824Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-24T15:50:43.5994072Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-24T15:50:45.7778479Z ......                                                                   [ 88%]
2025-02-24T15:50:50.6497200Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-24T15:50:54.2899255Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-24T15:50:57.1809384Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-24T15:51:04.2357969Z ....                                                                     [ 92%]
2025-02-24T15:51:10.4174286Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-24T15:51:19.4917634Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-24T15:51:19.9272017Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-24T15:51:20.0002045Z ....                                                                     [ 96%]
2025-02-24T15:51:21.0652081Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-24T15:51:21.7086460Z ..................                                                       [ 98%]
2025-02-24T15:52:25.2895800Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-24T15:52:32.3650663Z ......                                                                   [100%]
2025-02-24T15:52:32.3651918Z 
2025-02-24T15:52:32.3652181Z =================================== FAILURES ===================================
2025-02-24T15:52:32.3653012Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-24T15:52:32.3653591Z 
2025-02-24T15:52:32.3653843Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-24T15:52:32.3654594Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-24T15:52:32.3655109Z 
2025-02-24T15:52:32.3655405Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3656075Z         if err_msg is None:
2025-02-24T15:52:32.3656606Z             if left.shape != right.shape:
2025-02-24T15:52:32.3657135Z                 raise_assert_detail(
2025-02-24T15:52:32.3657767Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3658291Z                 )
2025-02-24T15:52:32.3658527Z     
2025-02-24T15:52:32.3658748Z             diff = 0
2025-02-24T15:52:32.3659048Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3659426Z                 # count up differences
2025-02-24T15:52:32.3659870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3660313Z                     diff += 1
2025-02-24T15:52:32.3660585Z     
2025-02-24T15:52:32.3660817Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3661463Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3661979Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3662467Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3662818Z E           
2025-02-24T15:52:32.3663103Z E           numpy array values are different (0.09581 %)
2025-02-24T15:52:32.3663882Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T15:52:32.3665054Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T15:52:32.3665680Z 
2025-02-24T15:52:32.3666097Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3666626Z 
2025-02-24T15:52:32.3666800Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3667192Z 
2025-02-24T15:52:32.3667584Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f885bd9c7d0>
2025-02-24T15:52:32.3668649Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f885e635f10>
2025-02-24T15:52:32.3669293Z 
2025-02-24T15:52:32.3669468Z     def test_calculate_sobolev_line_opacity(
2025-02-24T15:52:32.3669957Z         nb_simulation_verysimple, regression_data
2025-02-24T15:52:32.3670408Z     ):
2025-02-24T15:52:32.3670786Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T15:52:32.3671419Z     
2025-02-24T15:52:32.3671748Z         actual = calculate_sobolev_line_opacity(
2025-02-24T15:52:32.3672210Z             legacy_plasma.lines,
2025-02-24T15:52:32.3672783Z             legacy_plasma.level_number_density,
2025-02-24T15:52:32.3673083Z             legacy_plasma.time_explosion,
2025-02-24T15:52:32.3673387Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T15:52:32.3673775Z         )
2025-02-24T15:52:32.3673998Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.3674321Z >       pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3674517Z 
2025-02-24T15:52:32.3674635Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-24T15:52:32.3674948Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3675304Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3675611Z     ???
2025-02-24T15:52:32.3675819Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3676026Z 
2025-02-24T15:52:32.3676096Z >   ???
2025-02-24T15:52:32.3676320Z E   AssertionError: MultiIndex level [0] are different
2025-02-24T15:52:32.3676605Z E   
2025-02-24T15:52:32.3676837Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-24T15:52:32.3677165Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:52:32.3677439Z E          ...
2025-02-24T15:52:32.3677640Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:52:32.3677946Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:52:32.3678279Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:52:32.3678558Z E          ...
2025-02-24T15:52:32.3678752Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:52:32.3679048Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:52:32.3679368Z E   At positional index 54, first diff: 14 != 12
2025-02-24T15:52:32.3679572Z 
2025-02-24T15:52:32.3679666Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3679988Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.3680670Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.3681692Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.3682321Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T15:52:32.3682575Z 
2025-02-24T15:52:32.3682912Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:12<00:02,  2.69s/it]
2025-02-24T15:52:32.3683186Z 
2025-02-24T15:52:32.3683426Z Packets:                                                                                   4030/? [00:12<00:00, 34206.44it/s][A
2025-02-24T15:52:32.3683814Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.3684588Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.3685516Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-24T15:52:32.3685962Z 
2025-02-24T15:52:32.3686369Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f885bd9c7d0>
2025-02-24T15:52:32.3687134Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f885e635970>
2025-02-24T15:52:32.3687503Z 
2025-02-24T15:52:32.3687700Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-24T15:52:32.3688116Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T15:52:32.3688394Z     
2025-02-24T15:52:32.3688606Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-24T15:52:32.3688897Z             legacy_plasma.lines,
2025-02-24T15:52:32.3689160Z             legacy_plasma.level_number_density,
2025-02-24T15:52:32.3689449Z             legacy_plasma.time_explosion,
2025-02-24T15:52:32.3689891Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T15:52:32.3690165Z         )
2025-02-24T15:52:32.3690374Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-24T15:52:32.3690693Z         expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.3691318Z >       npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.3691505Z 
2025-02-24T15:52:32.3691622Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-24T15:52:32.3691938Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3692145Z 
2025-02-24T15:52:32.3692416Z args = (<function assert_allclose.<locals>.compare at 0x7f888ae83740>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3692855Z        [1., 1., .....,
2025-02-24T15:52:32.3693060Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3693294Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3693530Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T15:52:32.3693947Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.3694283Z 
2025-02-24T15:52:32.3694365Z     @wraps(func)
2025-02-24T15:52:32.3694567Z     def inner(*args, **kwds):
2025-02-24T15:52:32.3694809Z         with self._recreate_cm():
2025-02-24T15:52:32.3695055Z >           return func(*args, **kwds)
2025-02-24T15:52:32.3695307Z E           AssertionError: 
2025-02-24T15:52:32.3695559Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.3695831Z E           
2025-02-24T15:52:32.3696045Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:52:32.3696335Z E           Max absolute difference: 0.99984222
2025-02-24T15:52:32.3696618Z E           Max relative difference: 6337.12154973
2025-02-24T15:52:32.3696898Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3697165Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3697427Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.3697696Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3697957Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.3698219Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.3698397Z 
2025-02-24T15:52:32.3698607Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.3699102Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-24T15:52:32.3699395Z 
2025-02-24T15:52:32.3699620Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-24T15:52:32.3700734Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x7f886279a3f0>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x7f8850ec66f0>, 'electron')]
2025-02-24T15:52:32.3702032Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x7f88760e2ed0>
2025-02-24T15:52:32.3702647Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8885042960>
2025-02-24T15:52:32.3703022Z 
2025-02-24T15:52:32.3703113Z     def test_rate_matrix_solver(
2025-02-24T15:52:32.3703366Z         new_chianti_atomic_dataset_si,
2025-02-24T15:52:32.3703619Z         rate_solver_list,
2025-02-24T15:52:32.3703853Z         collisional_simulation_state,
2025-02-24T15:52:32.3704105Z         regression_data,
2025-02-24T15:52:32.3704332Z     ):
2025-02-24T15:52:32.3704663Z         rate_matrix_solver = RateMatrix(
2025-02-24T15:52:32.3705202Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-24T15:52:32.3705705Z         )
2025-02-24T15:52:32.3705936Z     
2025-02-24T15:52:32.3706151Z         rad_field = DilutePlanckianRadiationField(
2025-02-24T15:52:32.3706465Z             collisional_simulation_state.t_radiative,
2025-02-24T15:52:32.3706845Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-24T15:52:32.3707340Z         )
2025-02-24T15:52:32.3707584Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-24T15:52:32.3707963Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-24T15:52:32.3708389Z         )
2025-02-24T15:52:32.3708557Z     
2025-02-24T15:52:32.3708796Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-24T15:52:32.3709100Z     
2025-02-24T15:52:32.3709319Z >       expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.3709536Z 
2025-02-24T15:52:32.3709751Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-24T15:52:32.3710102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3710471Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-24T15:52:32.3710824Z     return pd.read_hdf(self.fpath, key=key)
2025-02-24T15:52:32.3711531Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-24T15:52:32.3711983Z     return store.select(
2025-02-24T15:52:32.3712376Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-24T15:52:32.3712807Z     return it.get_result()
2025-02-24T15:52:32.3713224Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-24T15:52:32.3713705Z     results = self.func(self.start, self.stop, where)
2025-02-24T15:52:32.3714156Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-24T15:52:32.3714663Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-24T15:52:32.3715175Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-24T15:52:32.3715692Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-24T15:52:32.3716228Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-24T15:52:32.3716686Z     ret = node[0][start:stop]
2025-02-24T15:52:32.3717091Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-24T15:52:32.3717538Z     return self.read(start, stop, step)[0]
2025-02-24T15:52:32.3717950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-24T15:52:32.3718412Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-24T15:52:32.3718744Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3718955Z 
2025-02-24T15:52:32.3719038Z self = ObjectAtom()
2025-02-24T15:52:32.3719306Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-24T15:52:32.3719549Z 
2025-02-24T15:52:32.3719647Z     def fromarray(self, array):
2025-02-24T15:52:32.3719942Z         # We have to check for an empty array because of a possible
2025-02-24T15:52:32.3720304Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-24T15:52:32.3720615Z         # record when in fact it is empty.
2025-02-24T15:52:32.3720872Z         if array.size == 0:
2025-02-24T15:52:32.3721280Z             return None
2025-02-24T15:52:32.3721523Z >       return pickle.loads(array.tobytes())
2025-02-24T15:52:32.3721874Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T15:52:32.3722125Z 
2025-02-24T15:52:32.3722406Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-24T15:52:32.3722925Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.3723461Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.3724754Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.3725998Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.3727324Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.3728264Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-24T15:52:32.3728553Z 
2025-02-24T15:52:32.3728687Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3729045Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3729367Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3729689Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3730048Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3730367Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3730628Z err_msg = None
2025-02-24T15:52:32.3730741Z 
2025-02-24T15:52:32.3730862Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3731464Z         if err_msg is None:
2025-02-24T15:52:32.3731713Z             if left.shape != right.shape:
2025-02-24T15:52:32.3731980Z                 raise_assert_detail(
2025-02-24T15:52:32.3732288Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3732597Z                 )
2025-02-24T15:52:32.3732780Z     
2025-02-24T15:52:32.3732948Z             diff = 0
2025-02-24T15:52:32.3733184Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3733476Z                 # count up differences
2025-02-24T15:52:32.3733815Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3734164Z                     diff += 1
2025-02-24T15:52:32.3734376Z     
2025-02-24T15:52:32.3734558Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3734875Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3735277Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3735659Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3735929Z E           
2025-02-24T15:52:32.3736148Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3736625Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3737251Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3737609Z 
2025-02-24T15:52:32.3737926Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3738322Z 
2025-02-24T15:52:32.3738499Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3738757Z 
2025-02-24T15:52:32.3738990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf32db0>
2025-02-24T15:52:32.3739476Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3739803Z attr = 'lines'
2025-02-24T15:52:32.3739919Z 
2025-02-24T15:52:32.3740062Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3740533Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3740834Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3741170Z         try:
2025-02-24T15:52:32.3741552Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3741923Z         except KeyError:
2025-02-24T15:52:32.3742356Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3742905Z     
2025-02-24T15:52:32.3743215Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3743660Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3744114Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3744645Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3745162Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3745581Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3746060Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3746492Z             else:
2025-02-24T15:52:32.3746706Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.3746993Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3747188Z 
2025-02-24T15:52:32.3747320Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.3747647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3748004Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3748314Z     ???
2025-02-24T15:52:32.3748524Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3748736Z 
2025-02-24T15:52:32.3748806Z >   ???
2025-02-24T15:52:32.3749030Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3749311Z E   
2025-02-24T15:52:32.3749540Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3749876Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3750153Z E          ...
2025-02-24T15:52:32.3750353Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3750663Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3751126Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3751405Z E          ...
2025-02-24T15:52:32.3751597Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3751906Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3752226Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3752417Z 
2025-02-24T15:52:32.3752509Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3752876Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-24T15:52:32.3753186Z 
2025-02-24T15:52:32.3753411Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf32c30>
2025-02-24T15:52:32.3753894Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3754237Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.3754400Z 
2025-02-24T15:52:32.3754546Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3754886Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3755173Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3755394Z         try:
2025-02-24T15:52:32.3755640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3755959Z         except KeyError:
2025-02-24T15:52:32.3756231Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3756522Z     
2025-02-24T15:52:32.3756703Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3756952Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3757216Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3757518Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3757861Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3758107Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3758392Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3758591Z 
2025-02-24T15:52:32.3758854Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3759193Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3759400Z 
2025-02-24T15:52:32.3759542Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.3760036Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.3760313Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3760781Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.3761482Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.3762027Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.3762489Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3762953Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.3763352Z err_msg = None
2025-02-24T15:52:32.3763540Z 
2025-02-24T15:52:32.3763735Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3764164Z         if err_msg is None:
2025-02-24T15:52:32.3764404Z             if left.shape != right.shape:
2025-02-24T15:52:32.3764665Z                 raise_assert_detail(
2025-02-24T15:52:32.3764979Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3765287Z                 )
2025-02-24T15:52:32.3765476Z     
2025-02-24T15:52:32.3765641Z             diff = 0
2025-02-24T15:52:32.3765875Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3766163Z                 # count up differences
2025-02-24T15:52:32.3766501Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3766847Z                     diff += 1
2025-02-24T15:52:32.3767061Z     
2025-02-24T15:52:32.3767241Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3767550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3767952Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3768315Z E           AssertionError: Series are different
2025-02-24T15:52:32.3768575Z E           
2025-02-24T15:52:32.3768794Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.3769360Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.3770155Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3770901Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3771467Z 
2025-02-24T15:52:32.3771788Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3772398Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-24T15:52:32.3772706Z 
2025-02-24T15:52:32.3772935Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf32390>
2025-02-24T15:52:32.3773553Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3773920Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.3774081Z 
2025-02-24T15:52:32.3774228Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3774569Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3775008Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3775246Z         try:
2025-02-24T15:52:32.3775504Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3775830Z         except KeyError:
2025-02-24T15:52:32.3776106Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3776404Z     
2025-02-24T15:52:32.3776588Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3776843Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3777111Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3777415Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3777725Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3777977Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3778261Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3778604Z 
2025-02-24T15:52:32.3778828Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3779423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3779777Z 
2025-02-24T15:52:32.3780017Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.3780555Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.3781163Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.3781644Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.3782162Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.3782524Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.3782805Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.3783079Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.3783314Z err_msg = None
2025-02-24T15:52:32.3783430Z 
2025-02-24T15:52:32.3783546Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3783837Z         if err_msg is None:
2025-02-24T15:52:32.3784078Z             if left.shape != right.shape:
2025-02-24T15:52:32.3784339Z                 raise_assert_detail(
2025-02-24T15:52:32.3784646Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3784959Z                 )
2025-02-24T15:52:32.3785140Z     
2025-02-24T15:52:32.3785308Z             diff = 0
2025-02-24T15:52:32.3785544Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3785836Z                 # count up differences
2025-02-24T15:52:32.3786177Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3786520Z                     diff += 1
2025-02-24T15:52:32.3786738Z     
2025-02-24T15:52:32.3786921Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3787231Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3787628Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3788000Z E           AssertionError: Series are different
2025-02-24T15:52:32.3788259Z E           
2025-02-24T15:52:32.3788466Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.3789032Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.3790020Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.3791095Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.3791566Z 
2025-02-24T15:52:32.3791889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3792475Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-24T15:52:32.3792756Z 
2025-02-24T15:52:32.3792890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3793249Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3793566Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3793884Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3794240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3794555Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3794815Z err_msg = None
2025-02-24T15:52:32.3794931Z 
2025-02-24T15:52:32.3795044Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3795318Z         if err_msg is None:
2025-02-24T15:52:32.3795559Z             if left.shape != right.shape:
2025-02-24T15:52:32.3795821Z                 raise_assert_detail(
2025-02-24T15:52:32.3796127Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3796436Z                 )
2025-02-24T15:52:32.3796618Z     
2025-02-24T15:52:32.3796897Z             diff = 0
2025-02-24T15:52:32.3797299Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3797792Z                 # count up differences
2025-02-24T15:52:32.3798365Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3798947Z                     diff += 1
2025-02-24T15:52:32.3799300Z     
2025-02-24T15:52:32.3799602Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3800115Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3800628Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3801131Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3801400Z E           
2025-02-24T15:52:32.3801618Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3802085Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3802701Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3803058Z 
2025-02-24T15:52:32.3803506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3803905Z 
2025-02-24T15:52:32.3804083Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3804345Z 
2025-02-24T15:52:32.3804682Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf333e0>
2025-02-24T15:52:32.3805206Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>, attr = 'nu'
2025-02-24T15:52:32.3805498Z 
2025-02-24T15:52:32.3805638Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3805978Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3806267Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3806487Z         try:
2025-02-24T15:52:32.3806733Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3807045Z         except KeyError:
2025-02-24T15:52:32.3807320Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3807621Z     
2025-02-24T15:52:32.3807811Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3808060Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3808324Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3808632Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3808941Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3809191Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3809475Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3809672Z 
2025-02-24T15:52:32.3809814Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3810136Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3810485Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3810786Z     ???
2025-02-24T15:52:32.3811102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3811305Z 
2025-02-24T15:52:32.3811380Z >   ???
2025-02-24T15:52:32.3811602Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3811883Z E   
2025-02-24T15:52:32.3812107Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3812449Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3812722Z E          ...
2025-02-24T15:52:32.3812919Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3813231Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3813565Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3813837Z E          ...
2025-02-24T15:52:32.3814031Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3814333Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3814649Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3814840Z 
2025-02-24T15:52:32.3814932Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3815549Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-24T15:52:32.3816086Z 
2025-02-24T15:52:32.3816308Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3816911Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3817449Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3817988Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3818604Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3818962Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3819225Z err_msg = None
2025-02-24T15:52:32.3819336Z 
2025-02-24T15:52:32.3819455Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3819732Z         if err_msg is None:
2025-02-24T15:52:32.3820102Z             if left.shape != right.shape:
2025-02-24T15:52:32.3820376Z                 raise_assert_detail(
2025-02-24T15:52:32.3820686Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3821245Z                 )
2025-02-24T15:52:32.3821434Z     
2025-02-24T15:52:32.3821599Z             diff = 0
2025-02-24T15:52:32.3821832Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3822116Z                 # count up differences
2025-02-24T15:52:32.3822455Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3822797Z                     diff += 1
2025-02-24T15:52:32.3823018Z     
2025-02-24T15:52:32.3823203Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3823525Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3823931Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3824318Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3824591Z E           
2025-02-24T15:52:32.3824813Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3825280Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3825903Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3826260Z 
2025-02-24T15:52:32.3826578Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3826978Z 
2025-02-24T15:52:32.3827150Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3827406Z 
2025-02-24T15:52:32.3827644Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30350>
2025-02-24T15:52:32.3828130Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3828462Z attr = 'wavelength_cm'
2025-02-24T15:52:32.3828591Z 
2025-02-24T15:52:32.3828736Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3829083Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3829372Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3829594Z         try:
2025-02-24T15:52:32.3829845Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3830156Z         except KeyError:
2025-02-24T15:52:32.3830428Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3830727Z     
2025-02-24T15:52:32.3831010Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3831266Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3831532Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3831841Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3832148Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3832407Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3832696Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3832896Z 
2025-02-24T15:52:32.3833030Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3833353Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3833954Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3834356Z     ???
2025-02-24T15:52:32.3834640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3834944Z 
2025-02-24T15:52:32.3835222Z >   ???
2025-02-24T15:52:32.3850623Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3851332Z E   
2025-02-24T15:52:32.3851727Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3852523Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3852982Z E          ...
2025-02-24T15:52:32.3853311Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3853825Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3854391Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3854732Z E          ...
2025-02-24T15:52:32.3854940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3855255Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3855588Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3855784Z 
2025-02-24T15:52:32.3855882Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3856245Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-24T15:52:32.3856530Z 
2025-02-24T15:52:32.3856670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3857032Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3857350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3857668Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3858022Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3858336Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3858591Z err_msg = None
2025-02-24T15:52:32.3858706Z 
2025-02-24T15:52:32.3858823Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3859100Z         if err_msg is None:
2025-02-24T15:52:32.3859440Z             if left.shape != right.shape:
2025-02-24T15:52:32.3859896Z                 raise_assert_detail(
2025-02-24T15:52:32.3860419Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3861085Z                 )
2025-02-24T15:52:32.3861431Z     
2025-02-24T15:52:32.3861727Z             diff = 0
2025-02-24T15:52:32.3862122Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3862610Z                 # count up differences
2025-02-24T15:52:32.3863062Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3863409Z                     diff += 1
2025-02-24T15:52:32.3863630Z     
2025-02-24T15:52:32.3863818Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3864140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3864546Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3864928Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3865201Z E           
2025-02-24T15:52:32.3865425Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3865902Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3866524Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3866870Z 
2025-02-24T15:52:32.3867361Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3867761Z 
2025-02-24T15:52:32.3867943Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3868306Z 
2025-02-24T15:52:32.3868544Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf33a10>
2025-02-24T15:52:32.3869213Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>, attr = 'f_lu'
2025-02-24T15:52:32.3869509Z 
2025-02-24T15:52:32.3869651Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3870001Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3870291Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3870516Z         try:
2025-02-24T15:52:32.3870770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3871236Z         except KeyError:
2025-02-24T15:52:32.3871517Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3871823Z     
2025-02-24T15:52:32.3872012Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3872273Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3872542Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3872859Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3873172Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3873425Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3873716Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3873918Z 
2025-02-24T15:52:32.3874045Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3874373Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3874729Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3875044Z     ???
2025-02-24T15:52:32.3875257Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3875457Z 
2025-02-24T15:52:32.3875539Z >   ???
2025-02-24T15:52:32.3875768Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3876051Z E   
2025-02-24T15:52:32.3876280Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3876618Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3876893Z E          ...
2025-02-24T15:52:32.3877097Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3877404Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3877736Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3878012Z E          ...
2025-02-24T15:52:32.3878213Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3878518Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3878838Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3879034Z 
2025-02-24T15:52:32.3879133Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3879713Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-24T15:52:32.3880237Z 
2025-02-24T15:52:32.3880469Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3881204Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3881749Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3882283Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3882882Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3883306Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3883567Z err_msg = None
2025-02-24T15:52:32.3883687Z 
2025-02-24T15:52:32.3883804Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3884084Z         if err_msg is None:
2025-02-24T15:52:32.3884463Z             if left.shape != right.shape:
2025-02-24T15:52:32.3884740Z                 raise_assert_detail(
2025-02-24T15:52:32.3885050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3885469Z                 )
2025-02-24T15:52:32.3885656Z     
2025-02-24T15:52:32.3885826Z             diff = 0
2025-02-24T15:52:32.3886067Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3886354Z                 # count up differences
2025-02-24T15:52:32.3886696Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3887037Z                     diff += 1
2025-02-24T15:52:32.3887252Z     
2025-02-24T15:52:32.3887441Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3887758Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3888160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3888544Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3888813Z E           
2025-02-24T15:52:32.3889037Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3889509Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3890128Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3890468Z 
2025-02-24T15:52:32.3890790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3891360Z 
2025-02-24T15:52:32.3891538Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3891805Z 
2025-02-24T15:52:32.3892039Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30e00>
2025-02-24T15:52:32.3892530Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3892867Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.3893001Z 
2025-02-24T15:52:32.3893145Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3893488Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3893779Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3894004Z         try:
2025-02-24T15:52:32.3894263Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3894581Z         except KeyError:
2025-02-24T15:52:32.3894859Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3895161Z     
2025-02-24T15:52:32.3895351Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3895607Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3895873Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3896193Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3896505Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3896755Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3897044Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3897317Z             else:
2025-02-24T15:52:32.3897531Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.3897816Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3898012Z 
2025-02-24T15:52:32.3898227Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.3898810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3899584Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3900119Z     ???
2025-02-24T15:52:32.3900469Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3901103Z 
2025-02-24T15:52:32.3901234Z >   ???
2025-02-24T15:52:32.3901615Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3901938Z E   
2025-02-24T15:52:32.3902166Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3902500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3902785Z E          ...
2025-02-24T15:52:32.3902988Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3903297Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3903643Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3903918Z E          ...
2025-02-24T15:52:32.3904119Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3904430Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3904757Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3904955Z 
2025-02-24T15:52:32.3905051Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3905418Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-24T15:52:32.3905714Z 
2025-02-24T15:52:32.3905853Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3906216Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3906539Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3906857Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3907219Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3907540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3907799Z err_msg = None
2025-02-24T15:52:32.3907914Z 
2025-02-24T15:52:32.3908033Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3908318Z         if err_msg is None:
2025-02-24T15:52:32.3908563Z             if left.shape != right.shape:
2025-02-24T15:52:32.3908829Z                 raise_assert_detail(
2025-02-24T15:52:32.3909149Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3909466Z                 )
2025-02-24T15:52:32.3909655Z     
2025-02-24T15:52:32.3909829Z             diff = 0
2025-02-24T15:52:32.3910067Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3910360Z                 # count up differences
2025-02-24T15:52:32.3910704Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3911182Z                     diff += 1
2025-02-24T15:52:32.3911402Z     
2025-02-24T15:52:32.3911592Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3911906Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3912309Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3912694Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3912965Z E           
2025-02-24T15:52:32.3913188Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3913653Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3914391Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3914750Z 
2025-02-24T15:52:32.3915068Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3915595Z 
2025-02-24T15:52:32.3915772Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3916029Z 
2025-02-24T15:52:32.3916258Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30680>
2025-02-24T15:52:32.3917004Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3917591Z attr = 'beta_sobolev'
2025-02-24T15:52:32.3917805Z 
2025-02-24T15:52:32.3918046Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3918619Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3919103Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3919472Z         try:
2025-02-24T15:52:32.3919894Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3920331Z         except KeyError:
2025-02-24T15:52:32.3920612Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3921028Z     
2025-02-24T15:52:32.3921221Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3921478Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3921747Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3922072Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3922385Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3922641Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3922927Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3923196Z             else:
2025-02-24T15:52:32.3923406Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.3923698Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3923895Z 
2025-02-24T15:52:32.3924035Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.3924363Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3924729Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3925034Z     ???
2025-02-24T15:52:32.3925250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3925457Z 
2025-02-24T15:52:32.3925530Z >   ???
2025-02-24T15:52:32.3925761Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3926042Z E   
2025-02-24T15:52:32.3926272Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3926608Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3926889Z E          ...
2025-02-24T15:52:32.3927092Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3927401Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3927740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3928018Z E          ...
2025-02-24T15:52:32.3928215Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3928525Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3928843Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3929034Z 
2025-02-24T15:52:32.3929128Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3929482Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-24T15:52:32.3929771Z 
2025-02-24T15:52:32.3929906Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3930260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3930579Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3931167Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3931556Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3931884Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3932255Z err_msg = None
2025-02-24T15:52:32.3932368Z 
2025-02-24T15:52:32.3932488Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3932768Z         if err_msg is None:
2025-02-24T15:52:32.3933009Z             if left.shape != right.shape:
2025-02-24T15:52:32.3933285Z                 raise_assert_detail(
2025-02-24T15:52:32.3933599Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3933909Z                 )
2025-02-24T15:52:32.3934093Z     
2025-02-24T15:52:32.3934305Z             diff = 0
2025-02-24T15:52:32.3934719Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3935225Z                 # count up differences
2025-02-24T15:52:32.3935810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3936399Z                     diff += 1
2025-02-24T15:52:32.3936759Z     
2025-02-24T15:52:32.3937066Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3937596Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3938147Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3938536Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3938809Z E           
2025-02-24T15:52:32.3939032Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3939497Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3940107Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3940459Z 
2025-02-24T15:52:32.3940774Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3941324Z 
2025-02-24T15:52:32.3941505Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3941762Z 
2025-02-24T15:52:32.3941993Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30ec0>
2025-02-24T15:52:32.3942475Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8876007f80>
2025-02-24T15:52:32.3942804Z attr = 'j_blues'
2025-02-24T15:52:32.3942921Z 
2025-02-24T15:52:32.3943075Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3943417Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3943707Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3943936Z         try:
2025-02-24T15:52:32.3944190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3944498Z         except KeyError:
2025-02-24T15:52:32.3944774Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3945068Z     
2025-02-24T15:52:32.3945253Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3945509Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3945777Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3946086Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3946396Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3946652Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3946941Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3947348Z             else:
2025-02-24T15:52:32.3947566Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.3947855Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3948151Z 
2025-02-24T15:52:32.3948285Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.3948613Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3948964Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3949268Z     ???
2025-02-24T15:52:32.3949482Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3949687Z 
2025-02-24T15:52:32.3949758Z >   ???
2025-02-24T15:52:32.3949983Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3950264Z E   
2025-02-24T15:52:32.3950491Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3950824Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3951230Z E          ...
2025-02-24T15:52:32.3951428Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3951745Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3952085Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3952365Z E          ...
2025-02-24T15:52:32.3952654Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3953185Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3953733Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3954055Z 
2025-02-24T15:52:32.3954216Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3954806Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-24T15:52:32.3955292Z 
2025-02-24T15:52:32.3955515Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3956127Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3956481Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3956799Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.3957163Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3957482Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.3957797Z err_msg = None
2025-02-24T15:52:32.3957908Z 
2025-02-24T15:52:32.3958023Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3958297Z         if err_msg is None:
2025-02-24T15:52:32.3958538Z             if left.shape != right.shape:
2025-02-24T15:52:32.3958800Z                 raise_assert_detail(
2025-02-24T15:52:32.3959111Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3959418Z                 )
2025-02-24T15:52:32.3959604Z     
2025-02-24T15:52:32.3959778Z             diff = 0
2025-02-24T15:52:32.3960015Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3960304Z                 # count up differences
2025-02-24T15:52:32.3960648Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3961102Z                     diff += 1
2025-02-24T15:52:32.3961318Z     
2025-02-24T15:52:32.3961531Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3961846Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3962243Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3962625Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.3962893Z E           
2025-02-24T15:52:32.3963113Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.3963800Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3964515Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3964876Z 
2025-02-24T15:52:32.3965189Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3965603Z 
2025-02-24T15:52:32.3965774Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.3966036Z 
2025-02-24T15:52:32.3966267Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30740>
2025-02-24T15:52:32.3966753Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.3967085Z attr = 'lines'
2025-02-24T15:52:32.3967198Z 
2025-02-24T15:52:32.3967344Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3967691Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3967973Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3968196Z         try:
2025-02-24T15:52:32.3968446Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3968779Z         except KeyError:
2025-02-24T15:52:32.3969057Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3969354Z     
2025-02-24T15:52:32.3969539Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3969795Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3970066Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3970376Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3970693Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3971210Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3971708Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3972183Z             else:
2025-02-24T15:52:32.3972532Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.3973015Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.3973343Z 
2025-02-24T15:52:32.3973562Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.3974114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3974675Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.3974982Z     ???
2025-02-24T15:52:32.3975198Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3975403Z 
2025-02-24T15:52:32.3975475Z >   ???
2025-02-24T15:52:32.3975704Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.3975986Z E   
2025-02-24T15:52:32.3976215Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.3976547Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3976825Z E          ...
2025-02-24T15:52:32.3977027Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3977339Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3977683Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.3977959Z E          ...
2025-02-24T15:52:32.3978154Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.3978459Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.3978777Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.3978964Z 
2025-02-24T15:52:32.3979065Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.3979428Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-24T15:52:32.3979862Z 
2025-02-24T15:52:32.3980105Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf31100>
2025-02-24T15:52:32.3980585Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.3981185Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.3981351Z 
2025-02-24T15:52:32.3981493Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.3981833Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.3982121Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.3982345Z         try:
2025-02-24T15:52:32.3982596Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.3982916Z         except KeyError:
2025-02-24T15:52:32.3983193Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.3983492Z     
2025-02-24T15:52:32.3983679Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.3983929Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.3984199Z             if attr == "selected_atoms":
2025-02-24T15:52:32.3984501Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.3984810Z             elif actual.ndim == 1:
2025-02-24T15:52:32.3985066Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.3985354Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.3985560Z 
2025-02-24T15:52:32.3985686Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.3986013Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.3986222Z 
2025-02-24T15:52:32.3986361Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.3986682Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.3986963Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3987247Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.3987561Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.3987886Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.3988168Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.3988458Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.3988705Z err_msg = None
2025-02-24T15:52:32.3988821Z 
2025-02-24T15:52:32.3988942Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.3989356Z         if err_msg is None:
2025-02-24T15:52:32.3989755Z             if left.shape != right.shape:
2025-02-24T15:52:32.3990217Z                 raise_assert_detail(
2025-02-24T15:52:32.3990735Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.3991395Z                 )
2025-02-24T15:52:32.3991702Z     
2025-02-24T15:52:32.3991985Z             diff = 0
2025-02-24T15:52:32.3992375Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.3992863Z                 # count up differences
2025-02-24T15:52:32.3993306Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.3993655Z                     diff += 1
2025-02-24T15:52:32.3993882Z     
2025-02-24T15:52:32.3994072Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.3994387Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.3994790Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.3995161Z E           AssertionError: Series are different
2025-02-24T15:52:32.3995424Z E           
2025-02-24T15:52:32.3995637Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.3996350Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.3997146Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3998003Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.3998416Z 
2025-02-24T15:52:32.3998742Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.3999351Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-24T15:52:32.3999659Z 
2025-02-24T15:52:32.3999889Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30650>
2025-02-24T15:52:32.4000374Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.4000722Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4000884Z 
2025-02-24T15:52:32.4001159Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4001503Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4001793Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4002018Z         try:
2025-02-24T15:52:32.4002276Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4002589Z         except KeyError:
2025-02-24T15:52:32.4002871Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4003171Z     
2025-02-24T15:52:32.4003359Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4003614Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4003890Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4004199Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4004508Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4004761Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4005048Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4005249Z 
2025-02-24T15:52:32.4005375Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4005701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4005910Z 
2025-02-24T15:52:32.4006049Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4006371Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4006649Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4006941Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4007254Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4007642Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4008131Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4008635Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4009041Z err_msg = None
2025-02-24T15:52:32.4009230Z 
2025-02-24T15:52:32.4009424Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4009888Z         if err_msg is None:
2025-02-24T15:52:32.4010282Z             if left.shape != right.shape:
2025-02-24T15:52:32.4010723Z                 raise_assert_detail(
2025-02-24T15:52:32.4011549Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4011880Z                 )
2025-02-24T15:52:32.4012067Z     
2025-02-24T15:52:32.4012239Z             diff = 0
2025-02-24T15:52:32.4012483Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4012893Z                 # count up differences
2025-02-24T15:52:32.4013239Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4013587Z                     diff += 1
2025-02-24T15:52:32.4013805Z     
2025-02-24T15:52:32.4013996Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4014310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4014711Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4015082Z E           AssertionError: Series are different
2025-02-24T15:52:32.4015345Z E           
2025-02-24T15:52:32.4015557Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4016120Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4016970Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4017808Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4018269Z 
2025-02-24T15:52:32.4018584Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4019167Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-24T15:52:32.4019447Z 
2025-02-24T15:52:32.4019582Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4019937Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4020259Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4020588Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4021081Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4021406Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4021673Z err_msg = None
2025-02-24T15:52:32.4021783Z 
2025-02-24T15:52:32.4021901Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4022176Z         if err_msg is None:
2025-02-24T15:52:32.4022415Z             if left.shape != right.shape:
2025-02-24T15:52:32.4022682Z                 raise_assert_detail(
2025-02-24T15:52:32.4022999Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4023334Z                 )
2025-02-24T15:52:32.4023518Z     
2025-02-24T15:52:32.4023693Z             diff = 0
2025-02-24T15:52:32.4023931Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4024220Z                 # count up differences
2025-02-24T15:52:32.4024683Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4025035Z                     diff += 1
2025-02-24T15:52:32.4025250Z     
2025-02-24T15:52:32.4025522Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4026236Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4026924Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4027567Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4028021Z E           
2025-02-24T15:52:32.4028391Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4029152Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4029778Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4030141Z 
2025-02-24T15:52:32.4030456Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4030869Z 
2025-02-24T15:52:32.4031242Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4031504Z 
2025-02-24T15:52:32.4031737Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf321e0>
2025-02-24T15:52:32.4032254Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>, attr = 'nu'
2025-02-24T15:52:32.4032547Z 
2025-02-24T15:52:32.4032692Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4033035Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4033326Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4033553Z         try:
2025-02-24T15:52:32.4033803Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4034124Z         except KeyError:
2025-02-24T15:52:32.4034400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4034695Z     
2025-02-24T15:52:32.4034882Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4035136Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4035401Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4035709Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4036018Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4036271Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4036567Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4036771Z 
2025-02-24T15:52:32.4036907Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4037236Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4037591Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4037903Z     ???
2025-02-24T15:52:32.4038119Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4038318Z 
2025-02-24T15:52:32.4038396Z >   ???
2025-02-24T15:52:32.4038625Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4038905Z E   
2025-02-24T15:52:32.4039132Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4039465Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4039740Z E          ...
2025-02-24T15:52:32.4039941Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4040251Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4040739Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4041128Z E          ...
2025-02-24T15:52:32.4041329Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4041786Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4042108Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4042296Z 
2025-02-24T15:52:32.4042396Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4042750Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-24T15:52:32.4043041Z 
2025-02-24T15:52:32.4043184Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4043541Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4044052Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4044643Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4045249Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4045781Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4046224Z err_msg = None
2025-02-24T15:52:32.4046413Z 
2025-02-24T15:52:32.4046597Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4047071Z         if err_msg is None:
2025-02-24T15:52:32.4047441Z             if left.shape != right.shape:
2025-02-24T15:52:32.4047710Z                 raise_assert_detail(
2025-02-24T15:52:32.4048021Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4048327Z                 )
2025-02-24T15:52:32.4048512Z     
2025-02-24T15:52:32.4048681Z             diff = 0
2025-02-24T15:52:32.4048919Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4049206Z                 # count up differences
2025-02-24T15:52:32.4049556Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4049645Z                     diff += 1
2025-02-24T15:52:32.4049716Z     
2025-02-24T15:52:32.4049811Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4049953Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4050128Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4050240Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4050319Z E           
2025-02-24T15:52:32.4050433Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4050706Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4051096Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4051106Z 
2025-02-24T15:52:32.4051421Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4051425Z 
2025-02-24T15:52:32.4051603Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4051607Z 
2025-02-24T15:52:32.4051840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf316a0>
2025-02-24T15:52:32.4052009Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.4052099Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4052103Z 
2025-02-24T15:52:32.4052378Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4052511Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4052600Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4052680Z         try:
2025-02-24T15:52:32.4052930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4053022Z         except KeyError:
2025-02-24T15:52:32.4053164Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4053245Z     
2025-02-24T15:52:32.4053340Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4053437Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4053533Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4053669Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4053769Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4053878Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4053997Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4054006Z 
2025-02-24T15:52:32.4054144Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4054274Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4054436Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4054515Z     ???
2025-02-24T15:52:32.4054650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4054654Z 
2025-02-24T15:52:32.4054736Z >   ???
2025-02-24T15:52:32.4054872Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4054950Z E   
2025-02-24T15:52:32.4055087Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4055209Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4055288Z E          ...
2025-02-24T15:52:32.4055379Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4055525Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4055649Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4055727Z E          ...
2025-02-24T15:52:32.4055821Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4055955Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4056069Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4056072Z 
2025-02-24T15:52:32.4056165Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4056362Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-24T15:52:32.4056365Z 
2025-02-24T15:52:32.4056495Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4056634Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4056742Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4056890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4057020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4057118Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4057205Z err_msg = None
2025-02-24T15:52:32.4057209Z 
2025-02-24T15:52:32.4057321Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4057411Z         if err_msg is None:
2025-02-24T15:52:32.4057511Z             if left.shape != right.shape:
2025-02-24T15:52:32.4057604Z                 raise_assert_detail(
2025-02-24T15:52:32.4057750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4057835Z                 )
2025-02-24T15:52:32.4057913Z     
2025-02-24T15:52:32.4057988Z             diff = 0
2025-02-24T15:52:32.4058107Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4058199Z                 # count up differences
2025-02-24T15:52:32.4058465Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4058549Z                     diff += 1
2025-02-24T15:52:32.4058627Z     
2025-02-24T15:52:32.4058792Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4058956Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4059127Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4059247Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4059324Z E           
2025-02-24T15:52:32.4059439Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4059715Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4059980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4059993Z 
2025-02-24T15:52:32.4060306Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4060310Z 
2025-02-24T15:52:32.4060487Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4060491Z 
2025-02-24T15:52:32.4060717Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30380>
2025-02-24T15:52:32.4061046Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>, attr = 'f_lu'
2025-02-24T15:52:32.4061051Z 
2025-02-24T15:52:32.4061196Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4061321Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4061431Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4061511Z         try:
2025-02-24T15:52:32.4061667Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4061751Z         except KeyError:
2025-02-24T15:52:32.4061895Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4061969Z     
2025-02-24T15:52:32.4062063Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4062158Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4062253Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4062387Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4062551Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4062710Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4062908Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4062922Z 
2025-02-24T15:52:32.4063148Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4063346Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4063610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4063731Z     ???
2025-02-24T15:52:32.4063929Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4063935Z 
2025-02-24T15:52:32.4064057Z >   ???
2025-02-24T15:52:32.4064280Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4064400Z E   
2025-02-24T15:52:32.4064624Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4064818Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4064942Z E          ...
2025-02-24T15:52:32.4065098Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4065317Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4065684Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4065815Z E          ...
2025-02-24T15:52:32.4065971Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4066272Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4066388Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4066392Z 
2025-02-24T15:52:32.4066488Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4066694Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-24T15:52:32.4066698Z 
2025-02-24T15:52:32.4066835Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4066968Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4067073Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4067215Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4067346Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4067442Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4067531Z err_msg = None
2025-02-24T15:52:32.4067535Z 
2025-02-24T15:52:32.4067652Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4067737Z         if err_msg is None:
2025-02-24T15:52:32.4067838Z             if left.shape != right.shape:
2025-02-24T15:52:32.4067924Z                 raise_assert_detail(
2025-02-24T15:52:32.4068075Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4068148Z                 )
2025-02-24T15:52:32.4068224Z     
2025-02-24T15:52:32.4068299Z             diff = 0
2025-02-24T15:52:32.4068419Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4068508Z                 # count up differences
2025-02-24T15:52:32.4068693Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4068773Z                     diff += 1
2025-02-24T15:52:32.4068851Z     
2025-02-24T15:52:32.4068947Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4069090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4069271Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4069384Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4069463Z E           
2025-02-24T15:52:32.4069579Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4069852Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4070125Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4070133Z 
2025-02-24T15:52:32.4070444Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4070448Z 
2025-02-24T15:52:32.4070626Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4070630Z 
2025-02-24T15:52:32.4070856Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf307d0>
2025-02-24T15:52:32.4071177Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.4071268Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4071272Z 
2025-02-24T15:52:32.4071549Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4071674Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4071760Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4071837Z         try:
2025-02-24T15:52:32.4072084Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4072171Z         except KeyError:
2025-02-24T15:52:32.4072309Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4072387Z     
2025-02-24T15:52:32.4072476Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4072577Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4072672Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4072806Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4072899Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4072992Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4073114Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4073189Z             else:
2025-02-24T15:52:32.4073292Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4073404Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4073413Z 
2025-02-24T15:52:32.4073546Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4073661Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4073818Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4073897Z     ???
2025-02-24T15:52:32.4074010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4074014Z 
2025-02-24T15:52:32.4074089Z >   ???
2025-02-24T15:52:32.4074216Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4074291Z E   
2025-02-24T15:52:32.4074429Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4088989Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4089153Z E          ...
2025-02-24T15:52:32.4089330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4089565Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4089796Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4089927Z E          ...
2025-02-24T15:52:32.4090081Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4090310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4090491Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4090499Z 
2025-02-24T15:52:32.4090669Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4091169Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-24T15:52:32.4091176Z 
2025-02-24T15:52:32.4091419Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4091650Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4091827Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4092070Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4092291Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4092457Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4092591Z err_msg = None
2025-02-24T15:52:32.4092597Z 
2025-02-24T15:52:32.4092797Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4092884Z         if err_msg is None:
2025-02-24T15:52:32.4092990Z             if left.shape != right.shape:
2025-02-24T15:52:32.4093083Z                 raise_assert_detail(
2025-02-24T15:52:32.4093254Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4093335Z                 )
2025-02-24T15:52:32.4093410Z     
2025-02-24T15:52:32.4093672Z             diff = 0
2025-02-24T15:52:32.4093803Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4093901Z                 # count up differences
2025-02-24T15:52:32.4094194Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4094282Z                     diff += 1
2025-02-24T15:52:32.4094355Z     
2025-02-24T15:52:32.4094454Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4094600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4094785Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4094912Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4094988Z E           
2025-02-24T15:52:32.4095112Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4095389Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4095671Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4095676Z 
2025-02-24T15:52:32.4096016Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4096020Z 
2025-02-24T15:52:32.4096198Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4096202Z 
2025-02-24T15:52:32.4096448Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf30b30>
2025-02-24T15:52:32.4096620Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.4096714Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4096718Z 
2025-02-24T15:52:32.4096872Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4097005Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4097104Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4097179Z         try:
2025-02-24T15:52:32.4097335Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4097420Z         except KeyError:
2025-02-24T15:52:32.4097569Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4097641Z     
2025-02-24T15:52:32.4097739Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4097837Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4097936Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4098080Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4098178Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4098272Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4098395Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4098488Z             else:
2025-02-24T15:52:32.4098642Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4098841Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4098847Z 
2025-02-24T15:52:32.4099069Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4099278Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4099530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4099660Z     ???
2025-02-24T15:52:32.4099854Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4099861Z 
2025-02-24T15:52:32.4099988Z >   ???
2025-02-24T15:52:32.4100339Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4100463Z E   
2025-02-24T15:52:32.4100691Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4100880Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4101307Z E          ...
2025-02-24T15:52:32.4101461Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4101690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4101886Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4102018Z E          ...
2025-02-24T15:52:32.4102172Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4102317Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4102432Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4102436Z 
2025-02-24T15:52:32.4102529Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4102737Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-24T15:52:32.4102742Z 
2025-02-24T15:52:32.4102876Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4103020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4103134Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4103280Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4103414Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4103512Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4103596Z err_msg = None
2025-02-24T15:52:32.4103600Z 
2025-02-24T15:52:32.4103716Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4103810Z         if err_msg is None:
2025-02-24T15:52:32.4103912Z             if left.shape != right.shape:
2025-02-24T15:52:32.4104010Z                 raise_assert_detail(
2025-02-24T15:52:32.4104163Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4104243Z                 )
2025-02-24T15:52:32.4104318Z     
2025-02-24T15:52:32.4104400Z             diff = 0
2025-02-24T15:52:32.4104522Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4104613Z                 # count up differences
2025-02-24T15:52:32.4104792Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4104873Z                     diff += 1
2025-02-24T15:52:32.4104945Z     
2025-02-24T15:52:32.4105045Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4105185Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4105364Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4105489Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4105567Z E           
2025-02-24T15:52:32.4105687Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4105953Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4106228Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4106232Z 
2025-02-24T15:52:32.4106551Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4106680Z 
2025-02-24T15:52:32.4106860Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4106864Z 
2025-02-24T15:52:32.4107095Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bf304a0>
2025-02-24T15:52:32.4107380Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88627bc320>
2025-02-24T15:52:32.4107464Z attr = 'j_blues'
2025-02-24T15:52:32.4107468Z 
2025-02-24T15:52:32.4107611Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4107739Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4107832Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4107906Z         try:
2025-02-24T15:52:32.4108058Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4108142Z         except KeyError:
2025-02-24T15:52:32.4108288Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4108360Z     
2025-02-24T15:52:32.4108461Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4108558Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4108658Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4108794Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4108898Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4108992Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4109114Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4109193Z             else:
2025-02-24T15:52:32.4109293Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4109411Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4109414Z 
2025-02-24T15:52:32.4109542Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4109666Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4109816Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4109891Z     ???
2025-02-24T15:52:32.4110011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4110015Z 
2025-02-24T15:52:32.4110092Z >   ???
2025-02-24T15:52:32.4110226Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4110301Z E   
2025-02-24T15:52:32.4110438Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4110559Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4110640Z E          ...
2025-02-24T15:52:32.4110733Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4110876Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4111136Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4111218Z E          ...
2025-02-24T15:52:32.4111307Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4111439Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4111556Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4111561Z 
2025-02-24T15:52:32.4111654Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4111852Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-24T15:52:32.4111861Z 
2025-02-24T15:52:32.4111994Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4112135Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4112236Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4112378Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4112512Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4112609Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4112693Z err_msg = None
2025-02-24T15:52:32.4112696Z 
2025-02-24T15:52:32.4112928Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4113024Z         if err_msg is None:
2025-02-24T15:52:32.4113125Z             if left.shape != right.shape:
2025-02-24T15:52:32.4113325Z                 raise_assert_detail(
2025-02-24T15:52:32.4113474Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4113554Z                 )
2025-02-24T15:52:32.4113627Z     
2025-02-24T15:52:32.4113708Z             diff = 0
2025-02-24T15:52:32.4113823Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4113921Z                 # count up differences
2025-02-24T15:52:32.4114101Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4114183Z                     diff += 1
2025-02-24T15:52:32.4114260Z     
2025-02-24T15:52:32.4114355Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4114505Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4114680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4114801Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4114885Z E           
2025-02-24T15:52:32.4115005Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4115274Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4115545Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4115549Z 
2025-02-24T15:52:32.4115864Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4115873Z 
2025-02-24T15:52:32.4116051Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4116055Z 
2025-02-24T15:52:32.4116279Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7f080>
2025-02-24T15:52:32.4116450Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4116528Z attr = 'lines'
2025-02-24T15:52:32.4116532Z 
2025-02-24T15:52:32.4116680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4116799Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4116924Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4117059Z         try:
2025-02-24T15:52:32.4117317Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4117475Z         except KeyError:
2025-02-24T15:52:32.4117711Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4117838Z     
2025-02-24T15:52:32.4117988Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4118164Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4118316Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4118527Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4118619Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4118717Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4118830Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4118911Z             else:
2025-02-24T15:52:32.4119008Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4119123Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4119127Z 
2025-02-24T15:52:32.4119261Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4119474Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4119635Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4119786Z     ???
2025-02-24T15:52:32.4119903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4119907Z 
2025-02-24T15:52:32.4119979Z >   ???
2025-02-24T15:52:32.4120114Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4120187Z E   
2025-02-24T15:52:32.4120323Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4120444Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4120519Z E          ...
2025-02-24T15:52:32.4120614Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4120746Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4120867Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4121065Z E          ...
2025-02-24T15:52:32.4121162Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4121289Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4121411Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4121415Z 
2025-02-24T15:52:32.4121508Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4121722Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-24T15:52:32.4121726Z 
2025-02-24T15:52:32.4121959Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7cbc0>
2025-02-24T15:52:32.4122127Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4122224Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4122228Z 
2025-02-24T15:52:32.4122371Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4122502Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4122594Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4122674Z         try:
2025-02-24T15:52:32.4122817Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4122907Z         except KeyError:
2025-02-24T15:52:32.4123060Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4123132Z     
2025-02-24T15:52:32.4123229Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4123322Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4123416Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4123549Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4123645Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4123736Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4123854Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4123858Z 
2025-02-24T15:52:32.4123986Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4124113Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4124116Z 
2025-02-24T15:52:32.4124259Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4124352Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4124468Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4124551Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4124698Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4124783Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4124898Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4124986Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4125067Z err_msg = None
2025-02-24T15:52:32.4125071Z 
2025-02-24T15:52:32.4125187Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4125398Z         if err_msg is None:
2025-02-24T15:52:32.4125505Z             if left.shape != right.shape:
2025-02-24T15:52:32.4125593Z                 raise_assert_detail(
2025-02-24T15:52:32.4125744Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4125943Z                 )
2025-02-24T15:52:32.4126019Z     
2025-02-24T15:52:32.4126098Z             diff = 0
2025-02-24T15:52:32.4126217Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4126309Z                 # count up differences
2025-02-24T15:52:32.4126489Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4126577Z                     diff += 1
2025-02-24T15:52:32.4126649Z     
2025-02-24T15:52:32.4126742Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4126878Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4127058Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4127169Z E           AssertionError: Series are different
2025-02-24T15:52:32.4127250Z E           
2025-02-24T15:52:32.4127355Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4127746Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4128096Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4128444Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4128459Z 
2025-02-24T15:52:32.4128773Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4128987Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-24T15:52:32.4128991Z 
2025-02-24T15:52:32.4129218Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7d3a0>
2025-02-24T15:52:32.4129390Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4129485Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4129493Z 
2025-02-24T15:52:32.4129638Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4129761Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4129851Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4129931Z         try:
2025-02-24T15:52:32.4130077Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4130167Z         except KeyError:
2025-02-24T15:52:32.4130307Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4130385Z     
2025-02-24T15:52:32.4130475Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4130578Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4130671Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4130822Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4131017Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4131118Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4131348Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4131353Z 
2025-02-24T15:52:32.4131489Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4131727Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4131737Z 
2025-02-24T15:52:32.4131877Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4131969Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4132079Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4132167Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4132308Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4132397Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4132504Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4132595Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4132673Z err_msg = None
2025-02-24T15:52:32.4132685Z 
2025-02-24T15:52:32.4132796Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4132891Z         if err_msg is None:
2025-02-24T15:52:32.4132988Z             if left.shape != right.shape:
2025-02-24T15:52:32.4133080Z                 raise_assert_detail(
2025-02-24T15:52:32.4133222Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4133298Z                 )
2025-02-24T15:52:32.4133368Z     
2025-02-24T15:52:32.4133450Z             diff = 0
2025-02-24T15:52:32.4133564Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4133662Z                 # count up differences
2025-02-24T15:52:32.4133836Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4133922Z                     diff += 1
2025-02-24T15:52:32.4134000Z     
2025-02-24T15:52:32.4134094Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4134235Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4134407Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4134522Z E           AssertionError: Series are different
2025-02-24T15:52:32.4134598Z E           
2025-02-24T15:52:32.4134709Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4135082Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4135469Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4135956Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4135965Z 
2025-02-24T15:52:32.4136523Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4136965Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-24T15:52:32.4136972Z 
2025-02-24T15:52:32.4137212Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4137374Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4137569Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4137707Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4137836Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4137937Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4138016Z err_msg = None
2025-02-24T15:52:32.4138020Z 
2025-02-24T15:52:32.4138141Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4138225Z         if err_msg is None:
2025-02-24T15:52:32.4138330Z             if left.shape != right.shape:
2025-02-24T15:52:32.4138426Z                 raise_assert_detail(
2025-02-24T15:52:32.4138583Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4138660Z                 )
2025-02-24T15:52:32.4138742Z     
2025-02-24T15:52:32.4138819Z             diff = 0
2025-02-24T15:52:32.4138940Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4139037Z                 # count up differences
2025-02-24T15:52:32.4139213Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4139301Z                     diff += 1
2025-02-24T15:52:32.4139373Z     
2025-02-24T15:52:32.4139474Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4139616Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4139796Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4139915Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4139999Z E           
2025-02-24T15:52:32.4140116Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4140389Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4140665Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4140670Z 
2025-02-24T15:52:32.4141130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4141142Z 
2025-02-24T15:52:32.4141328Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4141332Z 
2025-02-24T15:52:32.4141564Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7ecc0>
2025-02-24T15:52:32.4141768Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>, attr = 'nu'
2025-02-24T15:52:32.4141772Z 
2025-02-24T15:52:32.4141919Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4142038Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4142131Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4142204Z         try:
2025-02-24T15:52:32.4142354Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4142438Z         except KeyError:
2025-02-24T15:52:32.4142584Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4142661Z     
2025-02-24T15:52:32.4142751Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4142975Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4143073Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4143214Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4143411Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4143509Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4143623Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4143627Z 
2025-02-24T15:52:32.4143761Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4143877Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4144031Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4144109Z     ???
2025-02-24T15:52:32.4144222Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4144225Z 
2025-02-24T15:52:32.4144300Z >   ???
2025-02-24T15:52:32.4144436Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4144515Z E   
2025-02-24T15:52:32.4144647Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4144767Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4144850Z E          ...
2025-02-24T15:52:32.4144948Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4145081Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4145202Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4145282Z E          ...
2025-02-24T15:52:32.4145371Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4145503Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4145611Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4145615Z 
2025-02-24T15:52:32.4145712Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4145917Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-24T15:52:32.4145921Z 
2025-02-24T15:52:32.4146059Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4146196Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4146300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4146704Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4146829Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4146929Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4147006Z err_msg = None
2025-02-24T15:52:32.4147010Z 
2025-02-24T15:52:32.4147127Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4147211Z         if err_msg is None:
2025-02-24T15:52:32.4147313Z             if left.shape != right.shape:
2025-02-24T15:52:32.4147409Z                 raise_assert_detail(
2025-02-24T15:52:32.4147558Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4147638Z                 )
2025-02-24T15:52:32.4147714Z     
2025-02-24T15:52:32.4147795Z             diff = 0
2025-02-24T15:52:32.4147909Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4148005Z                 # count up differences
2025-02-24T15:52:32.4148176Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4148261Z                     diff += 1
2025-02-24T15:52:32.4148333Z     
2025-02-24T15:52:32.4148431Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4148575Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4148749Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4148865Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4149034Z E           
2025-02-24T15:52:32.4149155Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4149416Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4149765Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4149770Z 
2025-02-24T15:52:32.4150082Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4150086Z 
2025-02-24T15:52:32.4150261Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4150265Z 
2025-02-24T15:52:32.4150496Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7ea20>
2025-02-24T15:52:32.4150669Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4150760Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4150765Z 
2025-02-24T15:52:32.4151041Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4151163Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4151255Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4151331Z         try:
2025-02-24T15:52:32.4151479Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4151562Z         except KeyError:
2025-02-24T15:52:32.4151705Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4151775Z     
2025-02-24T15:52:32.4151875Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4151973Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4152070Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4152206Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4152308Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4152404Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4152518Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4152522Z 
2025-02-24T15:52:32.4152653Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4152770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4152920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4152995Z     ???
2025-02-24T15:52:32.4153114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4153118Z 
2025-02-24T15:52:32.4153189Z >   ???
2025-02-24T15:52:32.4153326Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4153402Z E   
2025-02-24T15:52:32.4153535Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4153655Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4153736Z E          ...
2025-02-24T15:52:32.4153831Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4153962Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4154082Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4154155Z E          ...
2025-02-24T15:52:32.4154249Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4154378Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4154490Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4154494Z 
2025-02-24T15:52:32.4154589Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4154919Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-24T15:52:32.4154924Z 
2025-02-24T15:52:32.4155064Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4155194Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4155431Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4155568Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4155700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4155800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4155879Z err_msg = None
2025-02-24T15:52:32.4155883Z 
2025-02-24T15:52:32.4155999Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4156083Z         if err_msg is None:
2025-02-24T15:52:32.4156184Z             if left.shape != right.shape:
2025-02-24T15:52:32.4156278Z                 raise_assert_detail(
2025-02-24T15:52:32.4156431Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4156504Z                 )
2025-02-24T15:52:32.4156588Z     
2025-02-24T15:52:32.4156664Z             diff = 0
2025-02-24T15:52:32.4156784Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4156881Z                 # count up differences
2025-02-24T15:52:32.4157052Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4157139Z                     diff += 1
2025-02-24T15:52:32.4157211Z     
2025-02-24T15:52:32.4157309Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4157445Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4157625Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4157745Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4157826Z E           
2025-02-24T15:52:32.4157940Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4158206Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4158481Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4158486Z 
2025-02-24T15:52:32.4158791Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4158800Z 
2025-02-24T15:52:32.4158977Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4158981Z 
2025-02-24T15:52:32.4159209Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7ce00>
2025-02-24T15:52:32.4159415Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>, attr = 'f_lu'
2025-02-24T15:52:32.4159419Z 
2025-02-24T15:52:32.4159562Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4159680Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4159775Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4159851Z         try:
2025-02-24T15:52:32.4159999Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4160082Z         except KeyError:
2025-02-24T15:52:32.4160227Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4160305Z     
2025-02-24T15:52:32.4160396Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4160592Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4160687Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4160825Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4161097Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4161195Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4161306Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4161310Z 
2025-02-24T15:52:32.4161470Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4161656Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4161912Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4162038Z     ???
2025-02-24T15:52:32.4162238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4162246Z 
2025-02-24T15:52:32.4162375Z >   ???
2025-02-24T15:52:32.4162610Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4162740Z E   
2025-02-24T15:52:32.4162909Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4163026Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4163107Z E          ...
2025-02-24T15:52:32.4163203Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4163334Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4163456Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4163532Z E          ...
2025-02-24T15:52:32.4163619Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4163748Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4163857Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4163861Z 
2025-02-24T15:52:32.4163957Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4164157Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-24T15:52:32.4164162Z 
2025-02-24T15:52:32.4164299Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4164432Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4164535Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4164675Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4164800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4164902Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4164979Z err_msg = None
2025-02-24T15:52:32.4164983Z 
2025-02-24T15:52:32.4165100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4165185Z         if err_msg is None:
2025-02-24T15:52:32.4165287Z             if left.shape != right.shape:
2025-02-24T15:52:32.4165384Z                 raise_assert_detail(
2025-02-24T15:52:32.4165532Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4165611Z                 )
2025-02-24T15:52:32.4165685Z     
2025-02-24T15:52:32.4165768Z             diff = 0
2025-02-24T15:52:32.4165882Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4165977Z                 # count up differences
2025-02-24T15:52:32.4166149Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4166237Z                     diff += 1
2025-02-24T15:52:32.4166309Z     
2025-02-24T15:52:32.4166406Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4166543Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4166721Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4166840Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4167067Z E           
2025-02-24T15:52:32.4167192Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4167453Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4167826Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4167831Z 
2025-02-24T15:52:32.4168140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4168148Z 
2025-02-24T15:52:32.4168318Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4168322Z 
2025-02-24T15:52:32.4168551Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7e1b0>
2025-02-24T15:52:32.4168723Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4168811Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4168815Z 
2025-02-24T15:52:32.4168961Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4169077Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4169169Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4169243Z         try:
2025-02-24T15:52:32.4169388Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4169472Z         except KeyError:
2025-02-24T15:52:32.4169615Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4169687Z     
2025-02-24T15:52:32.4169789Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4169885Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4169982Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4170115Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4170217Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4170314Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4170426Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4170505Z             else:
2025-02-24T15:52:32.4170604Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4170720Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4170723Z 
2025-02-24T15:52:32.4170851Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4171102Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4171254Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4171338Z     ???
2025-02-24T15:52:32.4171449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4171463Z 
2025-02-24T15:52:32.4171534Z >   ???
2025-02-24T15:52:32.4171673Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4171745Z E   
2025-02-24T15:52:32.4171881Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4171993Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4172074Z E          ...
2025-02-24T15:52:32.4172163Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4172299Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4172415Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4172494Z E          ...
2025-02-24T15:52:32.4172582Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4172714Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4172952Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4172957Z 
2025-02-24T15:52:32.4173052Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4173255Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-24T15:52:32.4173362Z 
2025-02-24T15:52:32.4173495Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4173630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4173726Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4173867Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4173997Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4174093Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4174185Z err_msg = None
2025-02-24T15:52:32.4174194Z 
2025-02-24T15:52:32.4174305Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4174395Z         if err_msg is None:
2025-02-24T15:52:32.4174492Z             if left.shape != right.shape:
2025-02-24T15:52:32.4174592Z                 raise_assert_detail(
2025-02-24T15:52:32.4174738Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4174820Z                 )
2025-02-24T15:52:32.4174891Z     
2025-02-24T15:52:32.4174976Z             diff = 0
2025-02-24T15:52:32.4175094Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4175184Z                 # count up differences
2025-02-24T15:52:32.4175363Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4175444Z                     diff += 1
2025-02-24T15:52:32.4175520Z     
2025-02-24T15:52:32.4175615Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4175763Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4175934Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4176051Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4176130Z E           
2025-02-24T15:52:32.4176248Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4176515Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4176782Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4176786Z 
2025-02-24T15:52:32.4177103Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4177111Z 
2025-02-24T15:52:32.4177286Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4177290Z 
2025-02-24T15:52:32.4177514Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7e660>
2025-02-24T15:52:32.4177683Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4177765Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4177768Z 
2025-02-24T15:52:32.4177910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4178027Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4178119Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4178197Z         try:
2025-02-24T15:52:32.4178451Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4178542Z         except KeyError:
2025-02-24T15:52:32.4178681Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4178757Z     
2025-02-24T15:52:32.4178925Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4179030Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4179118Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4179254Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4179342Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4179436Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4179548Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4179629Z             else:
2025-02-24T15:52:32.4179731Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4179840Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4179844Z 
2025-02-24T15:52:32.4179979Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4180093Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4180245Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4180325Z     ???
2025-02-24T15:52:32.4180452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4180460Z 
2025-02-24T15:52:32.4180596Z >   ???
2025-02-24T15:52:32.4180827Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4181081Z E   
2025-02-24T15:52:32.4181306Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4181502Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4181626Z E          ...
2025-02-24T15:52:32.4181777Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4181996Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4182164Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4182240Z E          ...
2025-02-24T15:52:32.4182333Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4182460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4182577Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4182581Z 
2025-02-24T15:52:32.4182679Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4182873Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-24T15:52:32.4182877Z 
2025-02-24T15:52:32.4183016Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4183148Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4183254Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4183389Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4183524Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4183626Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4183706Z err_msg = None
2025-02-24T15:52:32.4183713Z 
2025-02-24T15:52:32.4183830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4183913Z         if err_msg is None:
2025-02-24T15:52:32.4184014Z             if left.shape != right.shape:
2025-02-24T15:52:32.4184101Z                 raise_assert_detail(
2025-02-24T15:52:32.4184255Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4184328Z                 )
2025-02-24T15:52:32.4184406Z     
2025-02-24T15:52:32.4184482Z             diff = 0
2025-02-24T15:52:32.4184606Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4184695Z                 # count up differences
2025-02-24T15:52:32.4185034Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4185128Z                     diff += 1
2025-02-24T15:52:32.4185200Z     
2025-02-24T15:52:32.4185296Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4185432Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4185717Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4185831Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4185910Z E           
2025-02-24T15:52:32.4186028Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4186298Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4186573Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4186584Z 
2025-02-24T15:52:32.4186891Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4186895Z 
2025-02-24T15:52:32.4187069Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4187073Z 
2025-02-24T15:52:32.4187299Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7e0f0>
2025-02-24T15:52:32.4187464Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f886325c350>
2025-02-24T15:52:32.4187548Z attr = 'j_blues'
2025-02-24T15:52:32.4187552Z 
2025-02-24T15:52:32.4187689Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4187815Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4187904Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4187984Z         try:
2025-02-24T15:52:32.4188125Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4188219Z         except KeyError:
2025-02-24T15:52:32.4188360Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4188438Z     
2025-02-24T15:52:32.4188532Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4188628Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4188724Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4188857Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4188950Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4189044Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4189162Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4189234Z             else:
2025-02-24T15:52:32.4189340Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4189449Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4189453Z 
2025-02-24T15:52:32.4189585Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4189711Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4189857Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4189935Z     ???
2025-02-24T15:52:32.4190049Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4190052Z 
2025-02-24T15:52:32.4190130Z >   ???
2025-02-24T15:52:32.4190257Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4190333Z E   
2025-02-24T15:52:32.4190463Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4190582Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4190661Z E          ...
2025-02-24T15:52:32.4190840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4191120Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4191239Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4191436Z E          ...
2025-02-24T15:52:32.4191524Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4191656Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4191762Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4191766Z 
2025-02-24T15:52:32.4191864Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4192064Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-24T15:52:32.4192074Z 
2025-02-24T15:52:32.4192207Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4192340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4192443Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4192582Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4192711Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4192818Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4192900Z err_msg = None
2025-02-24T15:52:32.4192904Z 
2025-02-24T15:52:32.4193020Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4193110Z         if err_msg is None:
2025-02-24T15:52:32.4193208Z             if left.shape != right.shape:
2025-02-24T15:52:32.4193300Z                 raise_assert_detail(
2025-02-24T15:52:32.4193445Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4193520Z                 )
2025-02-24T15:52:32.4193590Z     
2025-02-24T15:52:32.4193666Z             diff = 0
2025-02-24T15:52:32.4193784Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4193877Z                 # count up differences
2025-02-24T15:52:32.4194050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4194142Z                     diff += 1
2025-02-24T15:52:32.4194215Z     
2025-02-24T15:52:32.4194311Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4194454Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4194627Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4194745Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4194820Z E           
2025-02-24T15:52:32.4194939Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4195205Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4195475Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4195485Z 
2025-02-24T15:52:32.4195795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4195799Z 
2025-02-24T15:52:32.4195969Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4195973Z 
2025-02-24T15:52:32.4196202Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7d2e0>
2025-02-24T15:52:32.4196487Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4196574Z attr = 'lines'
2025-02-24T15:52:32.4196578Z 
2025-02-24T15:52:32.4196721Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4196837Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4197024Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4197098Z         try:
2025-02-24T15:52:32.4197244Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4197331Z         except KeyError:
2025-02-24T15:52:32.4197473Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4197546Z     
2025-02-24T15:52:32.4197642Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4197739Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4197835Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4197973Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4198063Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4198165Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4198277Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4198357Z             else:
2025-02-24T15:52:32.4198461Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4198575Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4198579Z 
2025-02-24T15:52:32.4198705Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4198826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4198974Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4199052Z     ???
2025-02-24T15:52:32.4199169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4199173Z 
2025-02-24T15:52:32.4199246Z >   ???
2025-02-24T15:52:32.4199410Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4199541Z E   
2025-02-24T15:52:32.4199780Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4199978Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4200107Z E          ...
2025-02-24T15:52:32.4200265Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4200486Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4200675Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4200806Z E          ...
2025-02-24T15:52:32.4201067Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4201201Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4201311Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4201315Z 
2025-02-24T15:52:32.4201407Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4201645Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-24T15:52:32.4201649Z 
2025-02-24T15:52:32.4201873Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7f5c0>
2025-02-24T15:52:32.4202045Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4202143Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4202151Z 
2025-02-24T15:52:32.4202292Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4202412Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4202499Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4202579Z         try:
2025-02-24T15:52:32.4202727Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4202817Z         except KeyError:
2025-02-24T15:52:32.4202958Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4203036Z     
2025-02-24T15:52:32.4203127Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4203228Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4203325Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4203596Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4203697Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4203790Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4204010Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4204014Z 
2025-02-24T15:52:32.4204141Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4204262Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4204266Z 
2025-02-24T15:52:32.4204405Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4204498Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4204613Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4204700Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4204852Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4204939Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4205048Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4205140Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4205224Z err_msg = None
2025-02-24T15:52:32.4205227Z 
2025-02-24T15:52:32.4205339Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4205426Z         if err_msg is None:
2025-02-24T15:52:32.4205522Z             if left.shape != right.shape:
2025-02-24T15:52:32.4205616Z                 raise_assert_detail(
2025-02-24T15:52:32.4205764Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4205840Z                 )
2025-02-24T15:52:32.4205917Z     
2025-02-24T15:52:32.4205994Z             diff = 0
2025-02-24T15:52:32.4206109Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4206199Z                 # count up differences
2025-02-24T15:52:32.4206386Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4206468Z                     diff += 1
2025-02-24T15:52:32.4206544Z     
2025-02-24T15:52:32.4206638Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4206782Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4206957Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4207063Z E           AssertionError: Series are different
2025-02-24T15:52:32.4207142Z E           
2025-02-24T15:52:32.4207246Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4207633Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4207976Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4208315Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4208320Z 
2025-02-24T15:52:32.4208728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4208964Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-24T15:52:32.4208974Z 
2025-02-24T15:52:32.4209272Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7cd10>
2025-02-24T15:52:32.4209443Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4209539Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4209543Z 
2025-02-24T15:52:32.4209688Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4209804Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4209897Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4209971Z         try:
2025-02-24T15:52:32.4210120Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4210204Z         except KeyError:
2025-02-24T15:52:32.4210353Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4210430Z     
2025-02-24T15:52:32.4210521Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4210622Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4210714Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4210860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4211076Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4211174Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4211287Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4211291Z 
2025-02-24T15:52:32.4211424Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4211541Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4211550Z 
2025-02-24T15:52:32.4211688Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4211782Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4211896Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4211989Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4212131Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4212228Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4212336Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4212424Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4212502Z err_msg = None
2025-02-24T15:52:32.4212511Z 
2025-02-24T15:52:32.4212620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4212708Z         if err_msg is None:
2025-02-24T15:52:32.4212803Z             if left.shape != right.shape:
2025-02-24T15:52:32.4212897Z                 raise_assert_detail(
2025-02-24T15:52:32.4213044Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4213124Z                 )
2025-02-24T15:52:32.4213199Z     
2025-02-24T15:52:32.4213279Z             diff = 0
2025-02-24T15:52:32.4213392Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4213491Z                 # count up differences
2025-02-24T15:52:32.4213666Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4213751Z                     diff += 1
2025-02-24T15:52:32.4213828Z     
2025-02-24T15:52:32.4213939Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4214100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4214274Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4214384Z E           AssertionError: Series are different
2025-02-24T15:52:32.4214462Z E           
2025-02-24T15:52:32.4214573Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4215062Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4215547Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4215932Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4215942Z 
2025-02-24T15:52:32.4216257Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4216453Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-24T15:52:32.4216457Z 
2025-02-24T15:52:32.4216592Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4216721Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4216826Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4216960Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4217094Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4217195Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4217274Z err_msg = None
2025-02-24T15:52:32.4217284Z 
2025-02-24T15:52:32.4217398Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4217481Z         if err_msg is None:
2025-02-24T15:52:32.4217583Z             if left.shape != right.shape:
2025-02-24T15:52:32.4217676Z                 raise_assert_detail(
2025-02-24T15:52:32.4217825Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4217899Z                 )
2025-02-24T15:52:32.4217975Z     
2025-02-24T15:52:32.4218050Z             diff = 0
2025-02-24T15:52:32.4218168Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4218263Z                 # count up differences
2025-02-24T15:52:32.4218581Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4218730Z                     diff += 1
2025-02-24T15:52:32.4218851Z     
2025-02-24T15:52:32.4219011Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4219237Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4219542Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4219734Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4219842Z E           
2025-02-24T15:52:32.4219959Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4220229Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4220597Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4220695Z 
2025-02-24T15:52:32.4221135Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4221140Z 
2025-02-24T15:52:32.4221323Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4221327Z 
2025-02-24T15:52:32.4221555Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7e360>
2025-02-24T15:52:32.4221757Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>, attr = 'nu'
2025-02-24T15:52:32.4221761Z 
2025-02-24T15:52:32.4221904Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4222027Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4222120Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4222197Z         try:
2025-02-24T15:52:32.4222345Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4222434Z         except KeyError:
2025-02-24T15:52:32.4222581Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4222661Z     
2025-02-24T15:52:32.4222751Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4222852Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4222943Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4223082Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4223170Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4223266Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4223379Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4223383Z 
2025-02-24T15:52:32.4223520Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4223641Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4223789Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4223874Z     ???
2025-02-24T15:52:32.4223985Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4223990Z 
2025-02-24T15:52:32.4224065Z >   ???
2025-02-24T15:52:32.4224192Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4224271Z E   
2025-02-24T15:52:32.4224401Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4224522Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4224596Z E          ...
2025-02-24T15:52:32.4224692Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4224829Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4224949Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4225029Z E          ...
2025-02-24T15:52:32.4225118Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4225254Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4225365Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4225369Z 
2025-02-24T15:52:32.4225467Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4225677Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-24T15:52:32.4225681Z 
2025-02-24T15:52:32.4225818Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4225955Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4226053Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4226194Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4226442Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4226547Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4226627Z err_msg = None
2025-02-24T15:52:32.4226731Z 
2025-02-24T15:52:32.4226849Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4226934Z         if err_msg is None:
2025-02-24T15:52:32.4227037Z             if left.shape != right.shape:
2025-02-24T15:52:32.4227129Z                 raise_assert_detail(
2025-02-24T15:52:32.4227272Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4227353Z                 )
2025-02-24T15:52:32.4227423Z     
2025-02-24T15:52:32.4227504Z             diff = 0
2025-02-24T15:52:32.4227617Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4227712Z                 # count up differences
2025-02-24T15:52:32.4227887Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4227973Z                     diff += 1
2025-02-24T15:52:32.4228045Z     
2025-02-24T15:52:32.4228141Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4228279Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4228462Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4228580Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4228654Z E           
2025-02-24T15:52:32.4228772Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4229033Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4229306Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4229316Z 
2025-02-24T15:52:32.4229625Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4229629Z 
2025-02-24T15:52:32.4229799Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4229803Z 
2025-02-24T15:52:32.4230028Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7e9c0>
2025-02-24T15:52:32.4230196Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4230288Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4230292Z 
2025-02-24T15:52:32.4230437Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4230559Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4230651Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4230726Z         try:
2025-02-24T15:52:32.4230873Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4231087Z         except KeyError:
2025-02-24T15:52:32.4231237Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4231310Z     
2025-02-24T15:52:32.4231406Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4231502Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4231598Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4231730Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4231825Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4231922Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4232034Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4232038Z 
2025-02-24T15:52:32.4232290Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4232409Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4232563Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4232735Z     ???
2025-02-24T15:52:32.4232853Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4232857Z 
2025-02-24T15:52:32.4232928Z >   ???
2025-02-24T15:52:32.4233062Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4233138Z E   
2025-02-24T15:52:32.4233267Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4233386Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4233462Z E          ...
2025-02-24T15:52:32.4233558Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4233688Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4233814Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4233889Z E          ...
2025-02-24T15:52:32.4233984Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4234110Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4234227Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4234231Z 
2025-02-24T15:52:32.4234327Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4234526Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-24T15:52:32.4234529Z 
2025-02-24T15:52:32.4234663Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4234791Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4234894Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4235028Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4235167Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4235266Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4235349Z err_msg = None
2025-02-24T15:52:32.4235353Z 
2025-02-24T15:52:32.4235468Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4235553Z         if err_msg is None:
2025-02-24T15:52:32.4235654Z             if left.shape != right.shape:
2025-02-24T15:52:32.4235741Z                 raise_assert_detail(
2025-02-24T15:52:32.4235892Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4235966Z                 )
2025-02-24T15:52:32.4236043Z     
2025-02-24T15:52:32.4236119Z             diff = 0
2025-02-24T15:52:32.4236239Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4236330Z                 # count up differences
2025-02-24T15:52:32.4236512Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4236599Z                     diff += 1
2025-02-24T15:52:32.4236671Z     
2025-02-24T15:52:32.4236768Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4236914Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4237089Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4237264Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4237404Z E           
2025-02-24T15:52:32.4237605Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4238079Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4238664Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4238750Z 
2025-02-24T15:52:32.4239072Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4239077Z 
2025-02-24T15:52:32.4239254Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4239258Z 
2025-02-24T15:52:32.4239485Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7c380>
2025-02-24T15:52:32.4239688Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>, attr = 'f_lu'
2025-02-24T15:52:32.4239692Z 
2025-02-24T15:52:32.4239837Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4239959Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4240055Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4240129Z         try:
2025-02-24T15:52:32.4240275Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4240365Z         except KeyError:
2025-02-24T15:52:32.4240511Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4240590Z     
2025-02-24T15:52:32.4240682Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4240782Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4240874Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4241124Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4241214Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4241310Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4241422Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4241426Z 
2025-02-24T15:52:32.4241562Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4241676Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4241830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4241913Z     ???
2025-02-24T15:52:32.4242024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4242028Z 
2025-02-24T15:52:32.4242105Z >   ???
2025-02-24T15:52:32.4242232Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4242308Z E   
2025-02-24T15:52:32.4242438Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4242558Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4242632Z E          ...
2025-02-24T15:52:32.4242727Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4242857Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4242980Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4243059Z E          ...
2025-02-24T15:52:32.4243148Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4243279Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4243392Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4243395Z 
2025-02-24T15:52:32.4243493Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4243698Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-24T15:52:32.4243701Z 
2025-02-24T15:52:32.4243835Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4243963Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4244065Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4244205Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4244486Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4244591Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4244770Z err_msg = None
2025-02-24T15:52:32.4244775Z 
2025-02-24T15:52:32.4244891Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4244976Z         if err_msg is None:
2025-02-24T15:52:32.4245079Z             if left.shape != right.shape:
2025-02-24T15:52:32.4245166Z                 raise_assert_detail(
2025-02-24T15:52:32.4245317Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4245399Z                 )
2025-02-24T15:52:32.4245471Z     
2025-02-24T15:52:32.4245550Z             diff = 0
2025-02-24T15:52:32.4245664Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4245759Z                 # count up differences
2025-02-24T15:52:32.4245936Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4246022Z                     diff += 1
2025-02-24T15:52:32.4246093Z     
2025-02-24T15:52:32.4246188Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4246333Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4246510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4246630Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4246705Z E           
2025-02-24T15:52:32.4246824Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4247087Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4247358Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4247367Z 
2025-02-24T15:52:32.4247678Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4247681Z 
2025-02-24T15:52:32.4247850Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4247854Z 
2025-02-24T15:52:32.4248083Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7dc70>
2025-02-24T15:52:32.4248252Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4248342Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4248346Z 
2025-02-24T15:52:32.4248485Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4248614Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4248707Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4248783Z         try:
2025-02-24T15:52:32.4248930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4249020Z         except KeyError:
2025-02-24T15:52:32.4249166Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4249238Z     
2025-02-24T15:52:32.4249334Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4249430Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4249525Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4249657Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4249751Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4249848Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4249959Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4250039Z             else:
2025-02-24T15:52:32.4250225Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4250343Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4250347Z 
2025-02-24T15:52:32.4250472Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4250674Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4250821Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4250902Z     ???
2025-02-24T15:52:32.4251148Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4251158Z 
2025-02-24T15:52:32.4251230Z >   ???
2025-02-24T15:52:32.4251365Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4251437Z E   
2025-02-24T15:52:32.4251572Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4251686Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4251764Z E          ...
2025-02-24T15:52:32.4251859Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4251993Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4252109Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4252194Z E          ...
2025-02-24T15:52:32.4252280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4252414Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4252527Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4252531Z 
2025-02-24T15:52:32.4252622Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4252835Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-24T15:52:32.4252839Z 
2025-02-24T15:52:32.4252971Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4253115Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4253213Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4253355Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4253491Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4253588Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4253672Z err_msg = None
2025-02-24T15:52:32.4253676Z 
2025-02-24T15:52:32.4253787Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4253876Z         if err_msg is None:
2025-02-24T15:52:32.4253974Z             if left.shape != right.shape:
2025-02-24T15:52:32.4254066Z                 raise_assert_detail(
2025-02-24T15:52:32.4254209Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4254289Z                 )
2025-02-24T15:52:32.4254361Z     
2025-02-24T15:52:32.4254443Z             diff = 0
2025-02-24T15:52:32.4254568Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4254662Z                 # count up differences
2025-02-24T15:52:32.4254842Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4254932Z                     diff += 1
2025-02-24T15:52:32.4255008Z     
2025-02-24T15:52:32.4255100Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4255246Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4255420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4255547Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4255622Z E           
2025-02-24T15:52:32.4255755Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4256407Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4256898Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4257038Z 
2025-02-24T15:52:32.4257481Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4257487Z 
2025-02-24T15:52:32.4257678Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4257682Z 
2025-02-24T15:52:32.4257915Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888be7c620>
2025-02-24T15:52:32.4258093Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4258177Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4258181Z 
2025-02-24T15:52:32.4258333Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4258461Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4258555Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4258629Z         try:
2025-02-24T15:52:32.4258777Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4258866Z         except KeyError:
2025-02-24T15:52:32.4259007Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4259084Z     
2025-02-24T15:52:32.4259176Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4259278Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4259369Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4259512Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4259608Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4259706Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4259818Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4259897Z             else:
2025-02-24T15:52:32.4260008Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4260118Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4260122Z 
2025-02-24T15:52:32.4260254Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4260371Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4260528Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4260602Z     ???
2025-02-24T15:52:32.4260718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4260722Z 
2025-02-24T15:52:32.4260794Z >   ???
2025-02-24T15:52:32.4261041Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4261125Z E   
2025-02-24T15:52:32.4261266Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4261393Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4261497Z E          ...
2025-02-24T15:52:32.4261604Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4261737Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4261861Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4261937Z E          ...
2025-02-24T15:52:32.4262031Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4262158Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4262276Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4262279Z 
2025-02-24T15:52:32.4262382Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4262589Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-24T15:52:32.4262593Z 
2025-02-24T15:52:32.4262858Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4263000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4263213Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4263351Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4263489Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4263589Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4263673Z err_msg = None
2025-02-24T15:52:32.4263677Z 
2025-02-24T15:52:32.4263799Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4263884Z         if err_msg is None:
2025-02-24T15:52:32.4263986Z             if left.shape != right.shape:
2025-02-24T15:52:32.4264076Z                 raise_assert_detail(
2025-02-24T15:52:32.4264233Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4264307Z                 )
2025-02-24T15:52:32.4264383Z     
2025-02-24T15:52:32.4264459Z             diff = 0
2025-02-24T15:52:32.4264584Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4272824Z                 # count up differences
2025-02-24T15:52:32.4273028Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4273117Z                     diff += 1
2025-02-24T15:52:32.4273196Z     
2025-02-24T15:52:32.4273295Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4273451Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4273636Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4273764Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4273859Z E           
2025-02-24T15:52:32.4274089Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4274590Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4274909Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4274916Z 
2025-02-24T15:52:32.4275255Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4275260Z 
2025-02-24T15:52:32.4275445Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4275449Z 
2025-02-24T15:52:32.4275679Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bee9070>
2025-02-24T15:52:32.4275856Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885e6ce2d0>
2025-02-24T15:52:32.4275939Z attr = 'j_blues'
2025-02-24T15:52:32.4275943Z 
2025-02-24T15:52:32.4276091Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4276211Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4276307Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4276381Z         try:
2025-02-24T15:52:32.4276536Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4276618Z         except KeyError:
2025-02-24T15:52:32.4276765Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4276844Z     
2025-02-24T15:52:32.4276936Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4277230Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4277340Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4277485Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4277580Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4277799Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4277915Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4278000Z             else:
2025-02-24T15:52:32.4278096Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4278214Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4278219Z 
2025-02-24T15:52:32.4278355Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4278473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4278627Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4278701Z     ???
2025-02-24T15:52:32.4278823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4278827Z 
2025-02-24T15:52:32.4278897Z >   ???
2025-02-24T15:52:32.4279033Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4279110Z E   
2025-02-24T15:52:32.4279268Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4279403Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4279480Z E          ...
2025-02-24T15:52:32.4279577Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4279708Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4279828Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4279898Z E          ...
2025-02-24T15:52:32.4279985Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4280112Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4280228Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4280237Z 
2025-02-24T15:52:32.4280336Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4280593Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-24T15:52:32.4280602Z 
2025-02-24T15:52:32.4280746Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4280880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4281109Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4281248Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4281386Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4281479Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4281565Z err_msg = None
2025-02-24T15:52:32.4281569Z 
2025-02-24T15:52:32.4281696Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4281781Z         if err_msg is None:
2025-02-24T15:52:32.4281885Z             if left.shape != right.shape:
2025-02-24T15:52:32.4281973Z                 raise_assert_detail(
2025-02-24T15:52:32.4282133Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4282206Z                 )
2025-02-24T15:52:32.4282283Z     
2025-02-24T15:52:32.4282360Z             diff = 0
2025-02-24T15:52:32.4282480Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4282572Z                 # count up differences
2025-02-24T15:52:32.4282751Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4282832Z                     diff += 1
2025-02-24T15:52:32.4282909Z     
2025-02-24T15:52:32.4283007Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4283145Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4283440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4283560Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4283640Z E           
2025-02-24T15:52:32.4283862Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4284133Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4284402Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4284411Z 
2025-02-24T15:52:32.4284728Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4284732Z 
2025-02-24T15:52:32.4284909Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4284919Z 
2025-02-24T15:52:32.4285148Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beeaae0>
2025-02-24T15:52:32.4285324Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4285404Z attr = 'lines'
2025-02-24T15:52:32.4285409Z 
2025-02-24T15:52:32.4285548Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4285666Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4285756Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4285833Z         try:
2025-02-24T15:52:32.4285975Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4286061Z         except KeyError:
2025-02-24T15:52:32.4286204Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4286280Z     
2025-02-24T15:52:32.4286369Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4286470Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4286569Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4286701Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4286793Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4286886Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4287001Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4287074Z             else:
2025-02-24T15:52:32.4287175Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4287282Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4287286Z 
2025-02-24T15:52:32.4287418Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4287537Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4287690Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4287766Z     ???
2025-02-24T15:52:32.4287877Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4287885Z 
2025-02-24T15:52:32.4287963Z >   ???
2025-02-24T15:52:32.4288088Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4288164Z E   
2025-02-24T15:52:32.4288292Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4288409Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4288482Z E          ...
2025-02-24T15:52:32.4288576Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4288707Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4288827Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4288904Z E          ...
2025-02-24T15:52:32.4289078Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4289210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4289315Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4289393Z 
2025-02-24T15:52:32.4289489Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4289790Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-24T15:52:32.4289794Z 
2025-02-24T15:52:32.4290024Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beebe30>
2025-02-24T15:52:32.4290193Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4290284Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4290287Z 
2025-02-24T15:52:32.4290427Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4290545Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4290635Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4290712Z         try:
2025-02-24T15:52:32.4290856Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4291038Z         except KeyError:
2025-02-24T15:52:32.4291182Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4291259Z     
2025-02-24T15:52:32.4291352Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4291447Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4291542Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4291704Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4291791Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4291886Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4291997Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4292001Z 
2025-02-24T15:52:32.4292129Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4292247Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4292251Z 
2025-02-24T15:52:32.4292393Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4292483Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4292597Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4292683Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4292823Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4292913Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4293018Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4293106Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4293238Z err_msg = None
2025-02-24T15:52:32.4293245Z 
2025-02-24T15:52:32.4293445Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4293590Z         if err_msg is None:
2025-02-24T15:52:32.4293769Z             if left.shape != right.shape:
2025-02-24T15:52:32.4293921Z                 raise_assert_detail(
2025-02-24T15:52:32.4294161Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4294293Z                 )
2025-02-24T15:52:32.4294410Z     
2025-02-24T15:52:32.4294544Z             diff = 0
2025-02-24T15:52:32.4294703Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4294802Z                 # count up differences
2025-02-24T15:52:32.4294972Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4295056Z                     diff += 1
2025-02-24T15:52:32.4295127Z     
2025-02-24T15:52:32.4295222Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4295364Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4295533Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4295780Z E           AssertionError: Series are different
2025-02-24T15:52:32.4295858Z E           
2025-02-24T15:52:32.4295966Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4296336Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4296802Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4297136Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4297147Z 
2025-02-24T15:52:32.4297457Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4297758Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-24T15:52:32.4297762Z 
2025-02-24T15:52:32.4297987Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beeb380>
2025-02-24T15:52:32.4298152Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4298254Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4298258Z 
2025-02-24T15:52:32.4298396Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4298515Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4298605Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4298683Z         try:
2025-02-24T15:52:32.4298825Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4298912Z         except KeyError:
2025-02-24T15:52:32.4299052Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4299123Z     
2025-02-24T15:52:32.4299213Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4299307Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4299401Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4299533Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4299625Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4299717Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4299836Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4299840Z 
2025-02-24T15:52:32.4299963Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4300088Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4300092Z 
2025-02-24T15:52:32.4300234Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4300322Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4300439Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4300519Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4300661Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4300745Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4300856Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4301194Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4301279Z err_msg = None
2025-02-24T15:52:32.4301284Z 
2025-02-24T15:52:32.4301404Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4301595Z         if err_msg is None:
2025-02-24T15:52:32.4301695Z             if left.shape != right.shape:
2025-02-24T15:52:32.4301782Z                 raise_assert_detail(
2025-02-24T15:52:32.4301934Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4302007Z                 )
2025-02-24T15:52:32.4302082Z     
2025-02-24T15:52:32.4302156Z             diff = 0
2025-02-24T15:52:32.4302273Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4302363Z                 # count up differences
2025-02-24T15:52:32.4302538Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4302623Z                     diff += 1
2025-02-24T15:52:32.4302693Z     
2025-02-24T15:52:32.4302789Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4302925Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4303100Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4303209Z E           AssertionError: Series are different
2025-02-24T15:52:32.4303286Z E           
2025-02-24T15:52:32.4303388Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4303766Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4304150Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4304531Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4304541Z 
2025-02-24T15:52:32.4304847Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4305088Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-24T15:52:32.4305093Z 
2025-02-24T15:52:32.4305224Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4305355Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4305457Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4305594Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4305723Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4305818Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4305899Z err_msg = None
2025-02-24T15:52:32.4305902Z 
2025-02-24T15:52:32.4306011Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4306099Z         if err_msg is None:
2025-02-24T15:52:32.4306194Z             if left.shape != right.shape:
2025-02-24T15:52:32.4306388Z                 raise_assert_detail(
2025-02-24T15:52:32.4306535Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4306611Z                 )
2025-02-24T15:52:32.4306782Z     
2025-02-24T15:52:32.4306864Z             diff = 0
2025-02-24T15:52:32.4306979Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4307068Z                 # count up differences
2025-02-24T15:52:32.4307240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4307318Z                     diff += 1
2025-02-24T15:52:32.4307393Z     
2025-02-24T15:52:32.4307488Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4307627Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4307805Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4307940Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4308012Z E           
2025-02-24T15:52:32.4308130Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4308397Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4308679Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4308683Z 
2025-02-24T15:52:32.4308995Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4309003Z 
2025-02-24T15:52:32.4309178Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4309182Z 
2025-02-24T15:52:32.4309409Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beeaf30>
2025-02-24T15:52:32.4309616Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>, attr = 'nu'
2025-02-24T15:52:32.4309620Z 
2025-02-24T15:52:32.4309757Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4309877Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4309962Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4310039Z         try:
2025-02-24T15:52:32.4310183Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4310265Z         except KeyError:
2025-02-24T15:52:32.4310409Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4310483Z     
2025-02-24T15:52:32.4310575Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4310674Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4310768Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4310899Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4311118Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4311209Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4311329Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4311333Z 
2025-02-24T15:52:32.4311462Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4311589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4311744Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4311820Z     ???
2025-02-24T15:52:32.4311931Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4311939Z 
2025-02-24T15:52:32.4312008Z >   ???
2025-02-24T15:52:32.4312391Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4312524Z E   
2025-02-24T15:52:32.4312766Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4312958Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4313232Z E          ...
2025-02-24T15:52:32.4313383Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4313580Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4313704Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4313782Z E          ...
2025-02-24T15:52:32.4313872Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4314007Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4314118Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4314122Z 
2025-02-24T15:52:32.4314218Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4314505Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-24T15:52:32.4314510Z 
2025-02-24T15:52:32.4314644Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4314781Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4314884Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4315021Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4315149Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4315243Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4315323Z err_msg = None
2025-02-24T15:52:32.4315327Z 
2025-02-24T15:52:32.4315440Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4315529Z         if err_msg is None:
2025-02-24T15:52:32.4315628Z             if left.shape != right.shape:
2025-02-24T15:52:32.4315722Z                 raise_assert_detail(
2025-02-24T15:52:32.4315872Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4315948Z                 )
2025-02-24T15:52:32.4316023Z     
2025-02-24T15:52:32.4316103Z             diff = 0
2025-02-24T15:52:32.4316223Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4316311Z                 # count up differences
2025-02-24T15:52:32.4316485Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4316564Z                     diff += 1
2025-02-24T15:52:32.4316639Z     
2025-02-24T15:52:32.4316728Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4316868Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4317040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4317162Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4317234Z E           
2025-02-24T15:52:32.4317350Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4317620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4317889Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4317893Z 
2025-02-24T15:52:32.4318213Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4318303Z 
2025-02-24T15:52:32.4318482Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4318486Z 
2025-02-24T15:52:32.4318712Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beeb560>
2025-02-24T15:52:32.4318979Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4319063Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4319067Z 
2025-02-24T15:52:32.4319207Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4319322Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4319413Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4319484Z         try:
2025-02-24T15:52:32.4319628Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4319714Z         except KeyError:
2025-02-24T15:52:32.4319851Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4319923Z     
2025-02-24T15:52:32.4320016Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4320114Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4320205Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4320341Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4320433Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4320526Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4320635Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4320639Z 
2025-02-24T15:52:32.4320769Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4320888Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4321256Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4321334Z     ???
2025-02-24T15:52:32.4321446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4321451Z 
2025-02-24T15:52:32.4321524Z >   ???
2025-02-24T15:52:32.4321657Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4321729Z E   
2025-02-24T15:52:32.4321856Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4321980Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4322055Z E          ...
2025-02-24T15:52:32.4322143Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4322275Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4322386Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4322462Z E          ...
2025-02-24T15:52:32.4322548Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4322676Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4322782Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4322786Z 
2025-02-24T15:52:32.4322879Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4323125Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-24T15:52:32.4323134Z 
2025-02-24T15:52:32.4323266Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4323402Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4323499Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4323635Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4323761Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4323859Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4323933Z err_msg = None
2025-02-24T15:52:32.4323937Z 
2025-02-24T15:52:32.4324051Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4324138Z         if err_msg is None:
2025-02-24T15:52:32.4324362Z             if left.shape != right.shape:
2025-02-24T15:52:32.4324457Z                 raise_assert_detail(
2025-02-24T15:52:32.4324606Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4324787Z                 )
2025-02-24T15:52:32.4324855Z     
2025-02-24T15:52:32.4324933Z             diff = 0
2025-02-24T15:52:32.4325048Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4325142Z                 # count up differences
2025-02-24T15:52:32.4325318Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4325403Z                     diff += 1
2025-02-24T15:52:32.4325473Z     
2025-02-24T15:52:32.4325568Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4325709Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4325881Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4326005Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4326078Z E           
2025-02-24T15:52:32.4326194Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4326455Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4326725Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4326730Z 
2025-02-24T15:52:32.4327056Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4327059Z 
2025-02-24T15:52:32.4327231Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4327235Z 
2025-02-24T15:52:32.4327470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beeafc0>
2025-02-24T15:52:32.4327672Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>, attr = 'f_lu'
2025-02-24T15:52:32.4327680Z 
2025-02-24T15:52:32.4327819Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4327942Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4328029Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4328104Z         try:
2025-02-24T15:52:32.4328246Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4328331Z         except KeyError:
2025-02-24T15:52:32.4328470Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4328543Z     
2025-02-24T15:52:32.4328635Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4328735Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4328823Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4328957Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4329056Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4329146Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4329265Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4329268Z 
2025-02-24T15:52:32.4329398Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4329516Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4329663Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4329738Z     ???
2025-02-24T15:52:32.4329848Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4329852Z 
2025-02-24T15:52:32.4329925Z >   ???
2025-02-24T15:52:32.4330141Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4330211Z E   
2025-02-24T15:52:32.4330344Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4330535Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4330615Z E          ...
2025-02-24T15:52:32.4330704Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4330838Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4331142Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4331282Z E          ...
2025-02-24T15:52:32.4331431Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4331658Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4331842Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4331849Z 
2025-02-24T15:52:32.4331999Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4332473Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-24T15:52:32.4332480Z 
2025-02-24T15:52:32.4332656Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4332800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4332897Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4333037Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4333169Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4333265Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4333344Z err_msg = None
2025-02-24T15:52:32.4333348Z 
2025-02-24T15:52:32.4333459Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4333545Z         if err_msg is None:
2025-02-24T15:52:32.4333645Z             if left.shape != right.shape:
2025-02-24T15:52:32.4333735Z                 raise_assert_detail(
2025-02-24T15:52:32.4333881Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4333962Z                 )
2025-02-24T15:52:32.4334031Z     
2025-02-24T15:52:32.4334108Z             diff = 0
2025-02-24T15:52:32.4334224Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4334313Z                 # count up differences
2025-02-24T15:52:32.4334489Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4334569Z                     diff += 1
2025-02-24T15:52:32.4334643Z     
2025-02-24T15:52:32.4334731Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4334871Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4335043Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4335161Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4335234Z E           
2025-02-24T15:52:32.4335350Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4335619Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4335885Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4335890Z 
2025-02-24T15:52:32.4336337Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4336342Z 
2025-02-24T15:52:32.4336554Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4336558Z 
2025-02-24T15:52:32.4336950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bee9790>
2025-02-24T15:52:32.4337119Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4337198Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4337202Z 
2025-02-24T15:52:32.4337345Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4337462Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4337554Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4337626Z         try:
2025-02-24T15:52:32.4337771Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4337856Z         except KeyError:
2025-02-24T15:52:32.4337995Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4338073Z     
2025-02-24T15:52:32.4338162Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4338261Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4338350Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4338491Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4338579Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4338672Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4338782Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4338859Z             else:
2025-02-24T15:52:32.4338955Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4339068Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4339072Z 
2025-02-24T15:52:32.4339201Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4339314Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4339470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4339542Z     ???
2025-02-24T15:52:32.4339656Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4339660Z 
2025-02-24T15:52:32.4339736Z >   ???
2025-02-24T15:52:32.4339866Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4339935Z E   
2025-02-24T15:52:32.4340074Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4340193Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4340265Z E          ...
2025-02-24T15:52:32.4340357Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4340485Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4340601Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4340672Z E          ...
2025-02-24T15:52:32.4340760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4340888Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4341146Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4341150Z 
2025-02-24T15:52:32.4341240Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4341517Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-24T15:52:32.4341521Z 
2025-02-24T15:52:32.4341653Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4341779Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4341879Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4342013Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4342141Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4342370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4342453Z err_msg = None
2025-02-24T15:52:32.4342457Z 
2025-02-24T15:52:32.4342570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4342654Z         if err_msg is None:
2025-02-24T15:52:32.4342854Z             if left.shape != right.shape:
2025-02-24T15:52:32.4342939Z                 raise_assert_detail(
2025-02-24T15:52:32.4343089Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4343160Z                 )
2025-02-24T15:52:32.4343233Z     
2025-02-24T15:52:32.4343306Z             diff = 0
2025-02-24T15:52:32.4343420Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4343507Z                 # count up differences
2025-02-24T15:52:32.4343684Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4343766Z                     diff += 1
2025-02-24T15:52:32.4343836Z     
2025-02-24T15:52:32.4343935Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4344070Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4344245Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4344363Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4344439Z E           
2025-02-24T15:52:32.4344551Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4344813Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4345086Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4345090Z 
2025-02-24T15:52:32.4345396Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4345405Z 
2025-02-24T15:52:32.4345578Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4345582Z 
2025-02-24T15:52:32.4345810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beea810>
2025-02-24T15:52:32.4345976Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4346060Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4346064Z 
2025-02-24T15:52:32.4346201Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4346321Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4346407Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4346483Z         try:
2025-02-24T15:52:32.4346628Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4346714Z         except KeyError:
2025-02-24T15:52:32.4346853Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4346937Z     
2025-02-24T15:52:32.4347029Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4347127Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4347220Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4347350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4347444Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4347533Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4347647Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4347720Z             else:
2025-02-24T15:52:32.4347822Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4347928Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4348016Z 
2025-02-24T15:52:32.4348150Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4348266Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4348485Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4348560Z     ???
2025-02-24T15:52:32.4348745Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4348752Z 
2025-02-24T15:52:32.4348884Z >   ???
2025-02-24T15:52:32.4349102Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4349229Z E   
2025-02-24T15:52:32.4349449Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4349640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4349760Z E          ...
2025-02-24T15:52:32.4349911Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4350135Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4350261Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4350336Z E          ...
2025-02-24T15:52:32.4350424Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4350559Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4350663Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4350667Z 
2025-02-24T15:52:32.4350760Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4351141Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-24T15:52:32.4351145Z 
2025-02-24T15:52:32.4351283Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4351415Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4351509Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4351651Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4351775Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4351869Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4351950Z err_msg = None
2025-02-24T15:52:32.4351954Z 
2025-02-24T15:52:32.4352068Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4352150Z         if err_msg is None:
2025-02-24T15:52:32.4352248Z             if left.shape != right.shape:
2025-02-24T15:52:32.4352340Z                 raise_assert_detail(
2025-02-24T15:52:32.4352483Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4352560Z                 )
2025-02-24T15:52:32.4352629Z     
2025-02-24T15:52:32.4352705Z             diff = 0
2025-02-24T15:52:32.4352814Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4352906Z                 # count up differences
2025-02-24T15:52:32.4353079Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4353164Z                     diff += 1
2025-02-24T15:52:32.4353233Z     
2025-02-24T15:52:32.4353327Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4353473Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4353645Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4353759Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4353831Z E           
2025-02-24T15:52:32.4353952Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4354345Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4354622Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4354727Z 
2025-02-24T15:52:32.4355045Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4355049Z 
2025-02-24T15:52:32.4355220Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4355224Z 
2025-02-24T15:52:32.4355452Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888beead20>
2025-02-24T15:52:32.4355618Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885ffcea80>
2025-02-24T15:52:32.4355702Z attr = 'j_blues'
2025-02-24T15:52:32.4355706Z 
2025-02-24T15:52:32.4355857Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4355974Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4356067Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4356141Z         try:
2025-02-24T15:52:32.4356292Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4356373Z         except KeyError:
2025-02-24T15:52:32.4356521Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4356592Z     
2025-02-24T15:52:32.4356691Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4356784Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4356882Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4357020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4357110Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4357208Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4357324Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4357406Z             else:
2025-02-24T15:52:32.4357504Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4357616Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4357625Z 
2025-02-24T15:52:32.4357751Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4357871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4358018Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4358100Z     ???
2025-02-24T15:52:32.4358216Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4358220Z 
2025-02-24T15:52:32.4358291Z >   ???
2025-02-24T15:52:32.4358424Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4358494Z E   
2025-02-24T15:52:32.4358632Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4358749Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4358825Z E          ...
2025-02-24T15:52:32.4358915Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4359049Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4359169Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4359246Z E          ...
2025-02-24T15:52:32.4359337Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4359464Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4359574Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4359578Z 
2025-02-24T15:52:32.4359669Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4359886Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-24T15:52:32.4359889Z 
2025-02-24T15:52:32.4360018Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4360241Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4360345Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4360484Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4360689Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4360782Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4360862Z err_msg = None
2025-02-24T15:52:32.4360866Z 
2025-02-24T15:52:32.4361076Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4361163Z         if err_msg is None:
2025-02-24T15:52:32.4361261Z             if left.shape != right.shape:
2025-02-24T15:52:32.4361353Z                 raise_assert_detail(
2025-02-24T15:52:32.4361526Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4361608Z                 )
2025-02-24T15:52:32.4361683Z     
2025-02-24T15:52:32.4361762Z             diff = 0
2025-02-24T15:52:32.4361878Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4361966Z                 # count up differences
2025-02-24T15:52:32.4362148Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4362227Z                     diff += 1
2025-02-24T15:52:32.4362303Z     
2025-02-24T15:52:32.4362393Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4362534Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4362706Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4362824Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4362900Z E           
2025-02-24T15:52:32.4363011Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4363281Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4363550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4363554Z 
2025-02-24T15:52:32.4363873Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4363877Z 
2025-02-24T15:52:32.4364052Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4364056Z 
2025-02-24T15:52:32.4364285Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcaf30>
2025-02-24T15:52:32.4364455Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4364532Z attr = 'lines'
2025-02-24T15:52:32.4364536Z 
2025-02-24T15:52:32.4364680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4364799Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4364889Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4364966Z         try:
2025-02-24T15:52:32.4365108Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4365198Z         except KeyError:
2025-02-24T15:52:32.4365338Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4365414Z     
2025-02-24T15:52:32.4365502Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4365601Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4365691Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4365964Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4366056Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4366152Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4366267Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4366466Z             else:
2025-02-24T15:52:32.4366569Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4366677Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4366680Z 
2025-02-24T15:52:32.4366811Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4366925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4367076Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4367147Z     ???
2025-02-24T15:52:32.4367260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4367263Z 
2025-02-24T15:52:32.4367351Z >   ???
2025-02-24T15:52:32.4367597Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4367731Z E   
2025-02-24T15:52:32.4367958Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4368155Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4368286Z E          ...
2025-02-24T15:52:32.4368436Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4368652Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4368860Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4368936Z E          ...
2025-02-24T15:52:32.4369027Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4369153Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4369264Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4369268Z 
2025-02-24T15:52:32.4369363Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4369625Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-24T15:52:32.4369630Z 
2025-02-24T15:52:32.4369856Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcaa80>
2025-02-24T15:52:32.4370019Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4370119Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4370123Z 
2025-02-24T15:52:32.4370258Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4370379Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4370473Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4370547Z         try:
2025-02-24T15:52:32.4370691Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4370772Z         except KeyError:
2025-02-24T15:52:32.4371028Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4371100Z     
2025-02-24T15:52:32.4371193Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4371289Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4371386Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4371520Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4371615Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4371704Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4371822Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4371826Z 
2025-02-24T15:52:32.4371956Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4372071Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4372074Z 
2025-02-24T15:52:32.4372215Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4372301Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4372415Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4372498Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4372778Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4372872Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4373084Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4373171Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4373247Z err_msg = None
2025-02-24T15:52:32.4373251Z 
2025-02-24T15:52:32.4373368Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4373448Z         if err_msg is None:
2025-02-24T15:52:32.4373543Z             if left.shape != right.shape:
2025-02-24T15:52:32.4373629Z                 raise_assert_detail(
2025-02-24T15:52:32.4373772Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4373844Z                 )
2025-02-24T15:52:32.4373916Z     
2025-02-24T15:52:32.4373994Z             diff = 0
2025-02-24T15:52:32.4374111Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4374207Z                 # count up differences
2025-02-24T15:52:32.4374379Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4374470Z                     diff += 1
2025-02-24T15:52:32.4374541Z     
2025-02-24T15:52:32.4374635Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4374769Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4374945Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4375050Z E           AssertionError: Series are different
2025-02-24T15:52:32.4375128Z E           
2025-02-24T15:52:32.4375230Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4375610Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4375956Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4376294Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4376302Z 
2025-02-24T15:52:32.4376617Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4376877Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-24T15:52:32.4376885Z 
2025-02-24T15:52:32.4377106Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdca930>
2025-02-24T15:52:32.4377276Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4377372Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4377376Z 
2025-02-24T15:52:32.4377521Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4377641Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4377726Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4377802Z         try:
2025-02-24T15:52:32.4377945Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4378123Z         except KeyError:
2025-02-24T15:52:32.4378263Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4378339Z     
2025-02-24T15:52:32.4378426Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4378602Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4378693Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4378832Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4378924Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4379014Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4379128Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4379132Z 
2025-02-24T15:52:32.4379255Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4379375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4379378Z 
2025-02-24T15:52:32.4379519Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4379611Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4379725Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4379806Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4379955Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4380035Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4380143Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4380221Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4380303Z err_msg = None
2025-02-24T15:52:32.4380306Z 
2025-02-24T15:52:32.4380414Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4380500Z         if err_msg is None:
2025-02-24T15:52:32.4380594Z             if left.shape != right.shape:
2025-02-24T15:52:32.4380688Z                 raise_assert_detail(
2025-02-24T15:52:32.4380839Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4381034Z                 )
2025-02-24T15:52:32.4381112Z     
2025-02-24T15:52:32.4381186Z             diff = 0
2025-02-24T15:52:32.4381303Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4381398Z                 # count up differences
2025-02-24T15:52:32.4381573Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4381653Z                     diff += 1
2025-02-24T15:52:32.4381729Z     
2025-02-24T15:52:32.4381816Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4381956Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4382129Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4382230Z E           AssertionError: Series are different
2025-02-24T15:52:32.4382308Z E           
2025-02-24T15:52:32.4382412Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4382786Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4383171Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4383662Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4383781Z 
2025-02-24T15:52:32.4384098Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4384300Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-24T15:52:32.4384308Z 
2025-02-24T15:52:32.4384435Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4384571Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4384669Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4384814Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4384941Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4385045Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4385123Z err_msg = None
2025-02-24T15:52:32.4385130Z 
2025-02-24T15:52:32.4385239Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4385327Z         if err_msg is None:
2025-02-24T15:52:32.4385421Z             if left.shape != right.shape:
2025-02-24T15:52:32.4385512Z                 raise_assert_detail(
2025-02-24T15:52:32.4385656Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4385734Z                 )
2025-02-24T15:52:32.4385803Z     
2025-02-24T15:52:32.4385882Z             diff = 0
2025-02-24T15:52:32.4386024Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4386206Z                 # count up differences
2025-02-24T15:52:32.4386505Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4386649Z                     diff += 1
2025-02-24T15:52:32.4386773Z     
2025-02-24T15:52:32.4386929Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4387158Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4387455Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4387611Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4387683Z E           
2025-02-24T15:52:32.4387802Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4388068Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4388336Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4388344Z 
2025-02-24T15:52:32.4388655Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4388659Z 
2025-02-24T15:52:32.4388827Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4388831Z 
2025-02-24T15:52:32.4389059Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcb0e0>
2025-02-24T15:52:32.4389264Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>, attr = 'nu'
2025-02-24T15:52:32.4389268Z 
2025-02-24T15:52:32.4389503Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4389625Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4389714Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4389792Z         try:
2025-02-24T15:52:32.4390018Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4390105Z         except KeyError:
2025-02-24T15:52:32.4390245Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4390323Z     
2025-02-24T15:52:32.4390411Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4390515Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4390611Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4390745Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4390838Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4391063Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4391193Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4391198Z 
2025-02-24T15:52:32.4391324Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4391444Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4391598Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4391679Z     ???
2025-02-24T15:52:32.4391790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4391800Z 
2025-02-24T15:52:32.4391870Z >   ???
2025-02-24T15:52:32.4392005Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4392076Z E   
2025-02-24T15:52:32.4392211Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4392321Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4392398Z E          ...
2025-02-24T15:52:32.4392488Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4392628Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4392743Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4392819Z E          ...
2025-02-24T15:52:32.4392906Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4393041Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4393151Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4393155Z 
2025-02-24T15:52:32.4393245Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4393472Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-24T15:52:32.4393476Z 
2025-02-24T15:52:32.4393605Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4393742Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4393842Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4393986Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4394118Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4394218Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4394302Z err_msg = None
2025-02-24T15:52:32.4394306Z 
2025-02-24T15:52:32.4394416Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4394509Z         if err_msg is None:
2025-02-24T15:52:32.4394607Z             if left.shape != right.shape:
2025-02-24T15:52:32.4394697Z                 raise_assert_detail(
2025-02-24T15:52:32.4394847Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4394924Z                 )
2025-02-24T15:52:32.4394993Z     
2025-02-24T15:52:32.4395072Z             diff = 0
2025-02-24T15:52:32.4395190Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4395282Z                 # count up differences
2025-02-24T15:52:32.4395581Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4395664Z                     diff += 1
2025-02-24T15:52:32.4395737Z     
2025-02-24T15:52:32.4395930Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4396075Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4396244Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4396362Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4396435Z E           
2025-02-24T15:52:32.4396552Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4396824Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4397087Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4397097Z 
2025-02-24T15:52:32.4397407Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4397411Z 
2025-02-24T15:52:32.4397586Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4397590Z 
2025-02-24T15:52:32.4397814Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdca450>
2025-02-24T15:52:32.4397985Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4398069Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4398073Z 
2025-02-24T15:52:32.4398229Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4398345Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4398438Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4398518Z         try:
2025-02-24T15:52:32.4398665Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4398752Z         except KeyError:
2025-02-24T15:52:32.4398894Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4398972Z     
2025-02-24T15:52:32.4399061Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4399160Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4399250Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4399387Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4399475Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4399571Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4399687Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4399691Z 
2025-02-24T15:52:32.4399823Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4399944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4400098Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4400182Z     ???
2025-02-24T15:52:32.4400293Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4400297Z 
2025-02-24T15:52:32.4400418Z >   ???
2025-02-24T15:52:32.4400553Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4400627Z E   
2025-02-24T15:52:32.4400757Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4400883Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4401056Z E          ...
2025-02-24T15:52:32.4401146Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4401397Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4401516Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4401592Z E          ...
2025-02-24T15:52:32.4401687Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4401937Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4402044Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4402048Z 
2025-02-24T15:52:32.4402144Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4402347Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-24T15:52:32.4402357Z 
2025-02-24T15:52:32.4402488Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4402620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4402716Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4402857Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4402980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4403086Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4403162Z err_msg = None
2025-02-24T15:52:32.4403166Z 
2025-02-24T15:52:32.4403284Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4403372Z         if err_msg is None:
2025-02-24T15:52:32.4403467Z             if left.shape != right.shape:
2025-02-24T15:52:32.4403557Z                 raise_assert_detail(
2025-02-24T15:52:32.4403699Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4403780Z                 )
2025-02-24T15:52:32.4403850Z     
2025-02-24T15:52:32.4403929Z             diff = 0
2025-02-24T15:52:32.4404041Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4404142Z                 # count up differences
2025-02-24T15:52:32.4404313Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4404400Z                     diff += 1
2025-02-24T15:52:32.4404476Z     
2025-02-24T15:52:32.4404570Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4404713Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4404884Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4405001Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4405073Z E           
2025-02-24T15:52:32.4405194Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4405459Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4405728Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4405736Z 
2025-02-24T15:52:32.4406046Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4406051Z 
2025-02-24T15:52:32.4406220Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4406224Z 
2025-02-24T15:52:32.4406453Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdca150>
2025-02-24T15:52:32.4406662Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>, attr = 'f_lu'
2025-02-24T15:52:32.4406672Z 
2025-02-24T15:52:32.4406896Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4407019Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4407104Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4407273Z         try:
2025-02-24T15:52:32.4407415Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4407498Z         except KeyError:
2025-02-24T15:52:32.4407637Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4407712Z     
2025-02-24T15:52:32.4407800Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4407898Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4407989Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4408127Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4408220Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4408311Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4408432Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4408436Z 
2025-02-24T15:52:32.4408561Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4408678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4408831Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4408912Z     ???
2025-02-24T15:52:32.4409024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4409028Z 
2025-02-24T15:52:32.4409103Z >   ???
2025-02-24T15:52:32.4409235Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4409307Z E   
2025-02-24T15:52:32.4409439Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4409549Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4409626Z E          ...
2025-02-24T15:52:32.4409716Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4409855Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4409968Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4410044Z E          ...
2025-02-24T15:52:32.4410130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4410268Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4410377Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4410381Z 
2025-02-24T15:52:32.4410472Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4410692Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-24T15:52:32.4410696Z 
2025-02-24T15:52:32.4410824Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4411120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4411220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4411475Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4411609Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4411792Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4411934Z err_msg = None
2025-02-24T15:52:32.4411939Z 
2025-02-24T15:52:32.4412121Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4412257Z         if err_msg is None:
2025-02-24T15:52:32.4412409Z             if left.shape != right.shape:
2025-02-24T15:52:32.4412558Z                 raise_assert_detail(
2025-02-24T15:52:32.4412804Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4412933Z                 )
2025-02-24T15:52:32.4413050Z     
2025-02-24T15:52:32.4413182Z             diff = 0
2025-02-24T15:52:32.4413373Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4413671Z                 # count up differences
2025-02-24T15:52:32.4413862Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4413943Z                     diff += 1
2025-02-24T15:52:32.4414018Z     
2025-02-24T15:52:32.4414213Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4414355Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4414524Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4414643Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4414717Z E           
2025-02-24T15:52:32.4414836Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4415106Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4415370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4415380Z 
2025-02-24T15:52:32.4415690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4415694Z 
2025-02-24T15:52:32.4415869Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4415873Z 
2025-02-24T15:52:32.4416095Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcba10>
2025-02-24T15:52:32.4416266Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4416346Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4416350Z 
2025-02-24T15:52:32.4416502Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4416617Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4416711Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4416790Z         try:
2025-02-24T15:52:32.4416936Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4417020Z         except KeyError:
2025-02-24T15:52:32.4417157Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4417233Z     
2025-02-24T15:52:32.4417319Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4417416Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4417505Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4417640Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4417726Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4417821Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4417936Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4418016Z             else:
2025-02-24T15:52:32.4418112Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4418226Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4418234Z 
2025-02-24T15:52:32.4418366Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4418482Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4418633Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4418705Z     ???
2025-02-24T15:52:32.4418823Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4418827Z 
2025-02-24T15:52:32.4418897Z >   ???
2025-02-24T15:52:32.4419027Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4419097Z E   
2025-02-24T15:52:32.4419235Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4419442Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4419519Z E          ...
2025-02-24T15:52:32.4419614Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4419745Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4419940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4420020Z E          ...
2025-02-24T15:52:32.4420111Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4420236Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4420346Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4420350Z 
2025-02-24T15:52:32.4420439Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4420664Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-24T15:52:32.4420668Z 
2025-02-24T15:52:32.4420800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4421049Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4421156Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4421296Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4421441Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4421537Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4421618Z err_msg = None
2025-02-24T15:52:32.4421622Z 
2025-02-24T15:52:32.4421736Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4421818Z         if err_msg is None:
2025-02-24T15:52:32.4421918Z             if left.shape != right.shape:
2025-02-24T15:52:32.4422004Z                 raise_assert_detail(
2025-02-24T15:52:32.4422153Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4422229Z                 )
2025-02-24T15:52:32.4422306Z     
2025-02-24T15:52:32.4422382Z             diff = 0
2025-02-24T15:52:32.4422498Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4422588Z                 # count up differences
2025-02-24T15:52:32.4422767Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4422851Z                     diff += 1
2025-02-24T15:52:32.4422922Z     
2025-02-24T15:52:32.4423017Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4423155Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4423332Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4423444Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4423522Z E           
2025-02-24T15:52:32.4423635Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4423913Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4424183Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4424187Z 
2025-02-24T15:52:32.4424495Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4424499Z 
2025-02-24T15:52:32.4424675Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4424679Z 
2025-02-24T15:52:32.4425038Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcbad0>
2025-02-24T15:52:32.4425217Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4425303Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4425406Z 
2025-02-24T15:52:32.4425545Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4425667Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4425755Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4425832Z         try:
2025-02-24T15:52:32.4425971Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4426059Z         except KeyError:
2025-02-24T15:52:32.4426197Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4426274Z     
2025-02-24T15:52:32.4426362Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4426461Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4426556Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4426691Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4426785Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4426874Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4426997Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4427069Z             else:
2025-02-24T15:52:32.4427170Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4427277Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4427280Z 
2025-02-24T15:52:32.4427407Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4427525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4427670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4427742Z     ???
2025-02-24T15:52:32.4427852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4427856Z 
2025-02-24T15:52:32.4427930Z >   ???
2025-02-24T15:52:32.4428061Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4428135Z E   
2025-02-24T15:52:32.4428263Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4428386Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4428459Z E          ...
2025-02-24T15:52:32.4428551Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4428684Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4428796Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4428874Z E          ...
2025-02-24T15:52:32.4428961Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4429090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4429194Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4429198Z 
2025-02-24T15:52:32.4429546Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4429755Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-24T15:52:32.4429759Z 
2025-02-24T15:52:32.4429897Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4430036Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4430132Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4430273Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4430505Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4430677Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4430808Z err_msg = None
2025-02-24T15:52:32.4430814Z 
2025-02-24T15:52:32.4431137Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4431286Z         if err_msg is None:
2025-02-24T15:52:32.4431646Z             if left.shape != right.shape:
2025-02-24T15:52:32.4431814Z                 raise_assert_detail(
2025-02-24T15:52:32.4432068Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4432343Z                 )
2025-02-24T15:52:32.4432472Z     
2025-02-24T15:52:32.4432613Z             diff = 0
2025-02-24T15:52:32.4432740Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4432835Z                 # count up differences
2025-02-24T15:52:32.4433011Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4433095Z                     diff += 1
2025-02-24T15:52:32.4433165Z     
2025-02-24T15:52:32.4433259Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4433411Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4433582Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4433705Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4433778Z E           
2025-02-24T15:52:32.4433897Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4434162Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4434432Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4434437Z 
2025-02-24T15:52:32.4434758Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4434762Z 
2025-02-24T15:52:32.4434934Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4434938Z 
2025-02-24T15:52:32.4435176Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bdcbc50>
2025-02-24T15:52:32.4435367Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8852fe8350>
2025-02-24T15:52:32.4435452Z attr = 'j_blues'
2025-02-24T15:52:32.4435455Z 
2025-02-24T15:52:32.4435605Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4435722Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4435811Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4435886Z         try:
2025-02-24T15:52:32.4436032Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4436114Z         except KeyError:
2025-02-24T15:52:32.4436257Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4436327Z     
2025-02-24T15:52:32.4436424Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4436518Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4436613Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4436756Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4436845Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4436941Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4437050Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4437129Z             else:
2025-02-24T15:52:32.4437225Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4437337Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4437340Z 
2025-02-24T15:52:32.4437466Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4437588Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4437824Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4437904Z     ???
2025-02-24T15:52:32.4438023Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4438026Z 
2025-02-24T15:52:32.4438095Z >   ???
2025-02-24T15:52:32.4438304Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4438374Z E   
2025-02-24T15:52:32.4438508Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4438619Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4438697Z E          ...
2025-02-24T15:52:32.4438783Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4438917Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4439029Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4439107Z E          ...
2025-02-24T15:52:32.4439198Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4439330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4439445Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4439449Z 
2025-02-24T15:52:32.4439540Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4439754Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-24T15:52:32.4439764Z 
2025-02-24T15:52:32.4439897Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4440034Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4440138Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4440273Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4440402Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4440498Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4440588Z err_msg = None
2025-02-24T15:52:32.4440592Z 
2025-02-24T15:52:32.4440704Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4440794Z         if err_msg is None:
2025-02-24T15:52:32.4440889Z             if left.shape != right.shape:
2025-02-24T15:52:32.4441134Z                 raise_assert_detail(
2025-02-24T15:52:32.4441282Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4441363Z                 )
2025-02-24T15:52:32.4441441Z     
2025-02-24T15:52:32.4441514Z             diff = 0
2025-02-24T15:52:32.4441633Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4441724Z                 # count up differences
2025-02-24T15:52:32.4441902Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4441981Z                     diff += 1
2025-02-24T15:52:32.4442055Z     
2025-02-24T15:52:32.4442147Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4442293Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4442466Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4442585Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4442666Z E           
2025-02-24T15:52:32.4442779Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4443049Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4443436Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4443441Z 
2025-02-24T15:52:32.4443764Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4443868Z 
2025-02-24T15:52:32.4444045Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4444049Z 
2025-02-24T15:52:32.4444272Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98a10>
2025-02-24T15:52:32.4444443Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4444519Z attr = 'lines'
2025-02-24T15:52:32.4444522Z 
2025-02-24T15:52:32.4444665Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4444781Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4444873Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4444950Z         try:
2025-02-24T15:52:32.4445096Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4445184Z         except KeyError:
2025-02-24T15:52:32.4445320Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4452727Z     
2025-02-24T15:52:32.4452924Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4453104Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4453275Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4453445Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4453543Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4453642Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4453772Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4453846Z             else:
2025-02-24T15:52:32.4453952Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4454068Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4454074Z 
2025-02-24T15:52:32.4454224Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4454346Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4454499Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4454580Z     ???
2025-02-24T15:52:32.4454695Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4454699Z 
2025-02-24T15:52:32.4454774Z >   ???
2025-02-24T15:52:32.4454905Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4454980Z E   
2025-02-24T15:52:32.4455113Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4455236Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4455309Z E          ...
2025-02-24T15:52:32.4455407Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4455545Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4455667Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4455746Z E          ...
2025-02-24T15:52:32.4455835Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4455964Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4456075Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4456079Z 
2025-02-24T15:52:32.4456179Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4456450Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-24T15:52:32.4456454Z 
2025-02-24T15:52:32.4456691Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98ad0>
2025-02-24T15:52:32.4456866Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4456962Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4456966Z 
2025-02-24T15:52:32.4457114Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4457406Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4457505Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4457577Z         try:
2025-02-24T15:52:32.4457735Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4457927Z         except KeyError:
2025-02-24T15:52:32.4458075Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4458147Z     
2025-02-24T15:52:32.4458243Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4458344Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4458435Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4458576Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4458664Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4458764Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4458878Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4458882Z 
2025-02-24T15:52:32.4459020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4459138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4459142Z 
2025-02-24T15:52:32.4459286Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4459385Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4459495Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4459580Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4459723Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4459811Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4459917Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4460002Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4460080Z err_msg = None
2025-02-24T15:52:32.4460084Z 
2025-02-24T15:52:32.4460205Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4460297Z         if err_msg is None:
2025-02-24T15:52:32.4460397Z             if left.shape != right.shape:
2025-02-24T15:52:32.4460490Z                 raise_assert_detail(
2025-02-24T15:52:32.4460646Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4460723Z                 )
2025-02-24T15:52:32.4460793Z     
2025-02-24T15:52:32.4460876Z             diff = 0
2025-02-24T15:52:32.4461139Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4461240Z                 # count up differences
2025-02-24T15:52:32.4461419Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4461530Z                     diff += 1
2025-02-24T15:52:32.4461604Z     
2025-02-24T15:52:32.4461700Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4461844Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4462022Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4462133Z E           AssertionError: Series are different
2025-02-24T15:52:32.4462205Z E           
2025-02-24T15:52:32.4462314Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4462693Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4463172Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4463517Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4463626Z 
2025-02-24T15:52:32.4463959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4464226Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-24T15:52:32.4464230Z 
2025-02-24T15:52:32.4464461Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98b90>
2025-02-24T15:52:32.4464634Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4464731Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4464735Z 
2025-02-24T15:52:32.4464877Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4465001Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4465093Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4465172Z         try:
2025-02-24T15:52:32.4465321Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4465404Z         except KeyError:
2025-02-24T15:52:32.4465544Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4465622Z     
2025-02-24T15:52:32.4465711Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4465811Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4465901Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4466039Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4466131Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4466233Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4466345Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4466349Z 
2025-02-24T15:52:32.4466481Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4466608Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4466612Z 
2025-02-24T15:52:32.4466750Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4466840Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4466948Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4467032Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4467172Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4467260Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4467369Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4467454Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4467534Z err_msg = None
2025-02-24T15:52:32.4467537Z 
2025-02-24T15:52:32.4467647Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4467738Z         if err_msg is None:
2025-02-24T15:52:32.4467834Z             if left.shape != right.shape:
2025-02-24T15:52:32.4467923Z                 raise_assert_detail(
2025-02-24T15:52:32.4468067Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4468146Z                 )
2025-02-24T15:52:32.4468216Z     
2025-02-24T15:52:32.4468295Z             diff = 0
2025-02-24T15:52:32.4468408Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4468503Z                 # count up differences
2025-02-24T15:52:32.4468673Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4468760Z                     diff += 1
2025-02-24T15:52:32.4468923Z     
2025-02-24T15:52:32.4469016Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4469156Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4469546Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4469738Z E           AssertionError: Series are different
2025-02-24T15:52:32.4469868Z E           
2025-02-24T15:52:32.4470053Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4470721Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4471265Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4471657Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4471662Z 
2025-02-24T15:52:32.4471977Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4472184Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-24T15:52:32.4472188Z 
2025-02-24T15:52:32.4472321Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4472456Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4472559Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4472691Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4472825Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4472930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4473007Z err_msg = None
2025-02-24T15:52:32.4473010Z 
2025-02-24T15:52:32.4473124Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4473207Z         if err_msg is None:
2025-02-24T15:52:32.4473310Z             if left.shape != right.shape:
2025-02-24T15:52:32.4473398Z                 raise_assert_detail(
2025-02-24T15:52:32.4473548Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4473624Z                 )
2025-02-24T15:52:32.4473699Z     
2025-02-24T15:52:32.4473775Z             diff = 0
2025-02-24T15:52:32.4473892Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4473986Z                 # count up differences
2025-02-24T15:52:32.4474156Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4474240Z                     diff += 1
2025-02-24T15:52:32.4474311Z     
2025-02-24T15:52:32.4474401Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4474536Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4474709Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4474953Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4475034Z E           
2025-02-24T15:52:32.4475146Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4475515Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4475783Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4475788Z 
2025-02-24T15:52:32.4476101Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4476110Z 
2025-02-24T15:52:32.4476282Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4476287Z 
2025-02-24T15:52:32.4476521Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98dd0>
2025-02-24T15:52:32.4476719Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>, attr = 'nu'
2025-02-24T15:52:32.4476723Z 
2025-02-24T15:52:32.4476867Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4476987Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4477077Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4477150Z         try:
2025-02-24T15:52:32.4477299Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4477385Z         except KeyError:
2025-02-24T15:52:32.4477524Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4477600Z     
2025-02-24T15:52:32.4477695Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4477794Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4477883Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4478025Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4478110Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4478203Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4478315Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4478319Z 
2025-02-24T15:52:32.4478447Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4478566Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4478712Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4478788Z     ???
2025-02-24T15:52:32.4478898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4478902Z 
2025-02-24T15:52:32.4478979Z >   ???
2025-02-24T15:52:32.4479106Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4479181Z E   
2025-02-24T15:52:32.4479310Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4479432Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4479505Z E          ...
2025-02-24T15:52:32.4479601Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4479735Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4479848Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4479924Z E          ...
2025-02-24T15:52:32.4480016Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4480149Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4480254Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4480257Z 
2025-02-24T15:52:32.4480352Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4480665Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-24T15:52:32.4480670Z 
2025-02-24T15:52:32.4480811Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4481167Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4481267Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4481405Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4481529Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4481630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4481706Z err_msg = None
2025-02-24T15:52:32.4481709Z 
2025-02-24T15:52:32.4481825Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4481907Z         if err_msg is None:
2025-02-24T15:52:32.4482011Z             if left.shape != right.shape:
2025-02-24T15:52:32.4482104Z                 raise_assert_detail(
2025-02-24T15:52:32.4482249Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4482332Z                 )
2025-02-24T15:52:32.4482402Z     
2025-02-24T15:52:32.4482480Z             diff = 0
2025-02-24T15:52:32.4482594Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4482690Z                 # count up differences
2025-02-24T15:52:32.4482860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4482944Z                     diff += 1
2025-02-24T15:52:32.4483015Z     
2025-02-24T15:52:32.4483110Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4483250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4483421Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4483544Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4483616Z E           
2025-02-24T15:52:32.4483736Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4483997Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4484269Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4484273Z 
2025-02-24T15:52:32.4484595Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4484599Z 
2025-02-24T15:52:32.4484771Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4484775Z 
2025-02-24T15:52:32.4485005Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98e90>
2025-02-24T15:52:32.4485169Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4485256Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4485260Z 
2025-02-24T15:52:32.4485402Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4485519Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4485610Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4485683Z         try:
2025-02-24T15:52:32.4485827Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4485910Z         except KeyError:
2025-02-24T15:52:32.4486053Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4486243Z     
2025-02-24T15:52:32.4486342Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4486437Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4486531Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4486769Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4486861Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4486956Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4487069Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4487073Z 
2025-02-24T15:52:32.4487205Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4487320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4487470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4487542Z     ???
2025-02-24T15:52:32.4487659Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4487663Z 
2025-02-24T15:52:32.4487740Z >   ???
2025-02-24T15:52:32.4487872Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4487946Z E   
2025-02-24T15:52:32.4488074Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4488236Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4488373Z E          ...
2025-02-24T15:52:32.4488534Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4488753Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4488952Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4489074Z E          ...
2025-02-24T15:52:32.4489225Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4489436Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4489623Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4489632Z 
2025-02-24T15:52:32.4489750Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4489965Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-24T15:52:32.4489970Z 
2025-02-24T15:52:32.4490105Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4490241Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4490343Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4490478Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4490606Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4490703Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4490779Z err_msg = None
2025-02-24T15:52:32.4490783Z 
2025-02-24T15:52:32.4490897Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4491086Z         if err_msg is None:
2025-02-24T15:52:32.4491200Z             if left.shape != right.shape:
2025-02-24T15:52:32.4491288Z                 raise_assert_detail(
2025-02-24T15:52:32.4491437Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4491514Z                 )
2025-02-24T15:52:32.4491587Z     
2025-02-24T15:52:32.4491661Z             diff = 0
2025-02-24T15:52:32.4491778Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4491869Z                 # count up differences
2025-02-24T15:52:32.4492040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4492119Z                     diff += 1
2025-02-24T15:52:32.4492193Z     
2025-02-24T15:52:32.4492281Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4492422Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4492595Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4492859Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4492939Z E           
2025-02-24T15:52:32.4493052Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4493426Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4493689Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4493698Z 
2025-02-24T15:52:32.4494010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4494014Z 
2025-02-24T15:52:32.4494191Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4494201Z 
2025-02-24T15:52:32.4494427Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc98f50>
2025-02-24T15:52:32.4494629Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>, attr = 'f_lu'
2025-02-24T15:52:32.4494633Z 
2025-02-24T15:52:32.4494774Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4494888Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4494977Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4495048Z         try:
2025-02-24T15:52:32.4495191Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4495273Z         except KeyError:
2025-02-24T15:52:32.4495413Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4495490Z     
2025-02-24T15:52:32.4495582Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4495675Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4495770Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4495910Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4496000Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4496094Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4496204Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4496207Z 
2025-02-24T15:52:32.4496332Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4496442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4496592Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4496663Z     ???
2025-02-24T15:52:32.4496777Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4496781Z 
2025-02-24T15:52:32.4496854Z >   ???
2025-02-24T15:52:32.4496986Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4497060Z E   
2025-02-24T15:52:32.4497188Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4497310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4497382Z E          ...
2025-02-24T15:52:32.4497474Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4497604Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4497722Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4497794Z E          ...
2025-02-24T15:52:32.4497884Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4498010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4498120Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4498124Z 
2025-02-24T15:52:32.4498217Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4498523Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-24T15:52:32.4498527Z 
2025-02-24T15:52:32.4498659Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4498860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4498961Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4499091Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4499217Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4499314Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4499391Z err_msg = None
2025-02-24T15:52:32.4499394Z 
2025-02-24T15:52:32.4499506Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4499588Z         if err_msg is None:
2025-02-24T15:52:32.4499691Z             if left.shape != right.shape:
2025-02-24T15:52:32.4499776Z                 raise_assert_detail(
2025-02-24T15:52:32.4499924Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4500001Z                 )
2025-02-24T15:52:32.4500074Z     
2025-02-24T15:52:32.4500146Z             diff = 0
2025-02-24T15:52:32.4500259Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4500352Z                 # count up differences
2025-02-24T15:52:32.4500522Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4500602Z                     diff += 1
2025-02-24T15:52:32.4500671Z     
2025-02-24T15:52:32.4500762Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4500899Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4501174Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4501290Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4501366Z E           
2025-02-24T15:52:32.4501477Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4501746Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4502015Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4502019Z 
2025-02-24T15:52:32.4502326Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4502330Z 
2025-02-24T15:52:32.4502502Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4502506Z 
2025-02-24T15:52:32.4502734Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc996d0>
2025-02-24T15:52:32.4502899Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4502985Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4502990Z 
2025-02-24T15:52:32.4503125Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4503244Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4503330Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4503406Z         try:
2025-02-24T15:52:32.4503546Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4503631Z         except KeyError:
2025-02-24T15:52:32.4503771Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4503957Z     
2025-02-24T15:52:32.4504053Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4504148Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4504242Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4504498Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4504589Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4504679Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4504792Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4504865Z             else:
2025-02-24T15:52:32.4504964Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4505069Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4505076Z 
2025-02-24T15:52:32.4505200Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4505315Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4505462Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4505534Z     ???
2025-02-24T15:52:32.4505642Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4505652Z 
2025-02-24T15:52:32.4505723Z >   ???
2025-02-24T15:52:32.4505846Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4505981Z E   
2025-02-24T15:52:32.4506209Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4506408Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4506536Z E          ...
2025-02-24T15:52:32.4506685Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4506904Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4507094Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4507224Z E          ...
2025-02-24T15:52:32.4507356Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4507499Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4507604Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4507609Z 
2025-02-24T15:52:32.4507703Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4507929Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-24T15:52:32.4507937Z 
2025-02-24T15:52:32.4508062Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4508195Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4508289Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4508427Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4508550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4508652Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4508727Z err_msg = None
2025-02-24T15:52:32.4508731Z 
2025-02-24T15:52:32.4508844Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4508930Z         if err_msg is None:
2025-02-24T15:52:32.4509028Z             if left.shape != right.shape:
2025-02-24T15:52:32.4509120Z                 raise_assert_detail(
2025-02-24T15:52:32.4509261Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4509335Z                 )
2025-02-24T15:52:32.4509403Z     
2025-02-24T15:52:32.4509480Z             diff = 0
2025-02-24T15:52:32.4509592Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4509687Z                 # count up differences
2025-02-24T15:52:32.4509855Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4509936Z                     diff += 1
2025-02-24T15:52:32.4510010Z     
2025-02-24T15:52:32.4510198Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4510340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4510508Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4510699Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4510770Z E           
2025-02-24T15:52:32.4510884Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4511260Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4511534Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4511539Z 
2025-02-24T15:52:32.4511855Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4511864Z 
2025-02-24T15:52:32.4512034Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4512038Z 
2025-02-24T15:52:32.4512269Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc99790>
2025-02-24T15:52:32.4512437Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4512516Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4512520Z 
2025-02-24T15:52:32.4512659Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4512772Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4512860Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4512931Z         try:
2025-02-24T15:52:32.4513080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4513161Z         except KeyError:
2025-02-24T15:52:32.4513303Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4513377Z     
2025-02-24T15:52:32.4513469Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4513563Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4513655Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4513793Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4513880Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4513974Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4514084Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4514159Z             else:
2025-02-24T15:52:32.4514254Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4514363Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4514371Z 
2025-02-24T15:52:32.4514494Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4514609Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4514764Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4514835Z     ???
2025-02-24T15:52:32.4514948Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4514952Z 
2025-02-24T15:52:32.4515020Z >   ???
2025-02-24T15:52:32.4515148Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4515216Z E   
2025-02-24T15:52:32.4515346Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4515459Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4515535Z E          ...
2025-02-24T15:52:32.4515622Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4515753Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4515988Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4516064Z E          ...
2025-02-24T15:52:32.4516153Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4516377Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4516486Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4516490Z 
2025-02-24T15:52:32.4516583Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4516795Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-24T15:52:32.4516799Z 
2025-02-24T15:52:32.4516928Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4517058Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4517157Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4517291Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4517417Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4517510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4517594Z err_msg = None
2025-02-24T15:52:32.4517598Z 
2025-02-24T15:52:32.4517706Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4517793Z         if err_msg is None:
2025-02-24T15:52:32.4517887Z             if left.shape != right.shape:
2025-02-24T15:52:32.4517981Z                 raise_assert_detail(
2025-02-24T15:52:32.4518127Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4518198Z                 )
2025-02-24T15:52:32.4518270Z     
2025-02-24T15:52:32.4518343Z             diff = 0
2025-02-24T15:52:32.4518458Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4518547Z                 # count up differences
2025-02-24T15:52:32.4518721Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4518801Z                     diff += 1
2025-02-24T15:52:32.4518873Z     
2025-02-24T15:52:32.4518961Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4519105Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4519278Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4519390Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4519464Z E           
2025-02-24T15:52:32.4519575Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4519837Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4520103Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4520115Z 
2025-02-24T15:52:32.4520419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4520422Z 
2025-02-24T15:52:32.4520595Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4520599Z 
2025-02-24T15:52:32.4520818Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc99910>
2025-02-24T15:52:32.4521108Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885c383350>
2025-02-24T15:52:32.4521183Z attr = 'j_blues'
2025-02-24T15:52:32.4521187Z 
2025-02-24T15:52:32.4521444Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4521564Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4521649Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4521721Z         try:
2025-02-24T15:52:32.4521964Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4522049Z         except KeyError:
2025-02-24T15:52:32.4522185Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4522257Z     
2025-02-24T15:52:32.4522344Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4522440Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4522526Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4522661Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4522746Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4522837Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4522950Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4523026Z             else:
2025-02-24T15:52:32.4523124Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4523230Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4523240Z 
2025-02-24T15:52:32.4523364Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4523475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4523619Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4523689Z     ???
2025-02-24T15:52:32.4523802Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4523805Z 
2025-02-24T15:52:32.4523879Z >   ???
2025-02-24T15:52:32.4524003Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4524072Z E   
2025-02-24T15:52:32.4524201Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4524317Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4524394Z E          ...
2025-02-24T15:52:32.4524534Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4524761Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4524973Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4525096Z E          ...
2025-02-24T15:52:32.4525252Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4525471Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4525645Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4525651Z 
2025-02-24T15:52:32.4525805Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4526155Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-24T15:52:32.4526160Z 
2025-02-24T15:52:32.4526297Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4526431Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4526531Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4526660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4526793Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4526892Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4526967Z err_msg = None
2025-02-24T15:52:32.4526971Z 
2025-02-24T15:52:32.4527086Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4527167Z         if err_msg is None:
2025-02-24T15:52:32.4527264Z             if left.shape != right.shape:
2025-02-24T15:52:32.4527348Z                 raise_assert_detail(
2025-02-24T15:52:32.4527494Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4527565Z                 )
2025-02-24T15:52:32.4527637Z     
2025-02-24T15:52:32.4527832Z             diff = 0
2025-02-24T15:52:32.4527948Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4528039Z                 # count up differences
2025-02-24T15:52:32.4528287Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4528367Z                     diff += 1
2025-02-24T15:52:32.4528436Z     
2025-02-24T15:52:32.4528527Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4528659Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4528833Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4528944Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4529020Z E           
2025-02-24T15:52:32.4529131Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4529400Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4529672Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4529677Z 
2025-02-24T15:52:32.4529981Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4529989Z 
2025-02-24T15:52:32.4530157Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4530161Z 
2025-02-24T15:52:32.4530391Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9a690>
2025-02-24T15:52:32.4530556Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4530634Z attr = 'lines'
2025-02-24T15:52:32.4530638Z 
2025-02-24T15:52:32.4530772Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4530896Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4531098Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4531173Z         try:
2025-02-24T15:52:32.4531316Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4531398Z         except KeyError:
2025-02-24T15:52:32.4531539Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4531611Z     
2025-02-24T15:52:32.4531703Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4531797Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4531888Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4532024Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4532113Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4532202Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4532315Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4532393Z             else:
2025-02-24T15:52:32.4532489Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4532596Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4532600Z 
2025-02-24T15:52:32.4532723Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4532839Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4532988Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4533064Z     ???
2025-02-24T15:52:32.4533174Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4533178Z 
2025-02-24T15:52:32.4533255Z >   ???
2025-02-24T15:52:32.4533512Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4533590Z E   
2025-02-24T15:52:32.4533722Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4533835Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4534014Z E          ...
2025-02-24T15:52:32.4534103Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4534236Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4534351Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4534427Z E          ...
2025-02-24T15:52:32.4534512Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4534643Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4534747Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4534751Z 
2025-02-24T15:52:32.4534845Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4535138Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-24T15:52:32.4535143Z 
2025-02-24T15:52:32.4535364Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9a750>
2025-02-24T15:52:32.4535533Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4535629Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4535633Z 
2025-02-24T15:52:32.4535772Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4535885Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4535974Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4536046Z         try:
2025-02-24T15:52:32.4536190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4536275Z         except KeyError:
2025-02-24T15:52:32.4536409Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4536484Z     
2025-02-24T15:52:32.4536573Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4536676Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4536767Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4536902Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4536993Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4537088Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4537196Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4537205Z 
2025-02-24T15:52:32.4537328Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4537442Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4537446Z 
2025-02-24T15:52:32.4537583Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4537672Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4537780Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4537866Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4538010Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4538100Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4538214Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4538298Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4538380Z err_msg = None
2025-02-24T15:52:32.4538383Z 
2025-02-24T15:52:32.4538493Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4538580Z         if err_msg is None:
2025-02-24T15:52:32.4538672Z             if left.shape != right.shape:
2025-02-24T15:52:32.4538762Z                 raise_assert_detail(
2025-02-24T15:52:32.4538905Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4538980Z                 )
2025-02-24T15:52:32.4539049Z     
2025-02-24T15:52:32.4539126Z             diff = 0
2025-02-24T15:52:32.4539322Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4539420Z                 # count up differences
2025-02-24T15:52:32.4539592Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4539746Z                     diff += 1
2025-02-24T15:52:32.4539819Z     
2025-02-24T15:52:32.4539907Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4540046Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4540215Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4540322Z E           AssertionError: Series are different
2025-02-24T15:52:32.4540393Z E           
2025-02-24T15:52:32.4540501Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4540881Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4541347Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4541685Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4541694Z 
2025-02-24T15:52:32.4542007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4542289Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-24T15:52:32.4542298Z 
2025-02-24T15:52:32.4542524Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9a810>
2025-02-24T15:52:32.4542690Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4542785Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4542789Z 
2025-02-24T15:52:32.4542932Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4543045Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4543133Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4543237Z         try:
2025-02-24T15:52:32.4543493Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4543647Z         except KeyError:
2025-02-24T15:52:32.4543899Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4544027Z     
2025-02-24T15:52:32.4544131Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4544231Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4544328Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4544465Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4544557Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4544650Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4544763Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4544767Z 
2025-02-24T15:52:32.4544897Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4545011Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4545014Z 
2025-02-24T15:52:32.4545292Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4545386Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4545507Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4545720Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4545860Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4545948Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4546053Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4546136Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4546216Z err_msg = None
2025-02-24T15:52:32.4546220Z 
2025-02-24T15:52:32.4546333Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4546416Z         if err_msg is None:
2025-02-24T15:52:32.4546515Z             if left.shape != right.shape:
2025-02-24T15:52:32.4546598Z                 raise_assert_detail(
2025-02-24T15:52:32.4546750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4546825Z                 )
2025-02-24T15:52:32.4546896Z     
2025-02-24T15:52:32.4546975Z             diff = 0
2025-02-24T15:52:32.4547095Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4547188Z                 # count up differences
2025-02-24T15:52:32.4547357Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4547440Z                     diff += 1
2025-02-24T15:52:32.4547511Z     
2025-02-24T15:52:32.4547600Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4547736Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4547913Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4548022Z E           AssertionError: Series are different
2025-02-24T15:52:32.4548095Z E           
2025-02-24T15:52:32.4548206Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4548578Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4548964Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4549350Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4549358Z 
2025-02-24T15:52:32.4549672Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4549894Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-24T15:52:32.4549897Z 
2025-02-24T15:52:32.4550029Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4550157Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4550260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4550495Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4550631Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4550820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4550900Z err_msg = None
2025-02-24T15:52:32.4551026Z 
2025-02-24T15:52:32.4551141Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4551228Z         if err_msg is None:
2025-02-24T15:52:32.4551326Z             if left.shape != right.shape:
2025-02-24T15:52:32.4551411Z                 raise_assert_detail(
2025-02-24T15:52:32.4551558Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4551631Z                 )
2025-02-24T15:52:32.4551704Z     
2025-02-24T15:52:32.4551777Z             diff = 0
2025-02-24T15:52:32.4551892Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4551987Z                 # count up differences
2025-02-24T15:52:32.4552162Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4552240Z                     diff += 1
2025-02-24T15:52:32.4552312Z     
2025-02-24T15:52:32.4552407Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4552545Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4552723Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4552833Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4552908Z E           
2025-02-24T15:52:32.4553020Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4553287Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4553550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4553559Z 
2025-02-24T15:52:32.4553865Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4553869Z 
2025-02-24T15:52:32.4554041Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4554045Z 
2025-02-24T15:52:32.4554266Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9aa50>
2025-02-24T15:52:32.4554467Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>, attr = 'nu'
2025-02-24T15:52:32.4554471Z 
2025-02-24T15:52:32.4554616Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4554732Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4554822Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4554898Z         try:
2025-02-24T15:52:32.4555043Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4555124Z         except KeyError:
2025-02-24T15:52:32.4555268Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4555340Z     
2025-02-24T15:52:32.4555434Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4555528Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4555623Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4555761Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4555848Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4555944Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4556174Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4556179Z 
2025-02-24T15:52:32.4556311Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4556426Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4556682Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4556754Z     ???
2025-02-24T15:52:32.4556868Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4556872Z 
2025-02-24T15:52:32.4556948Z >   ???
2025-02-24T15:52:32.4557077Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4557150Z E   
2025-02-24T15:52:32.4557280Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4557398Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4557473Z E          ...
2025-02-24T15:52:32.4557566Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4557703Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4557822Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4557894Z E          ...
2025-02-24T15:52:32.4557985Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4558114Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4558227Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4558231Z 
2025-02-24T15:52:32.4558326Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4558580Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-24T15:52:32.4558584Z 
2025-02-24T15:52:32.4558717Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4558845Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4558945Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4559083Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4559211Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4559312Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4559388Z err_msg = None
2025-02-24T15:52:32.4559392Z 
2025-02-24T15:52:32.4559507Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4559589Z         if err_msg is None:
2025-02-24T15:52:32.4559685Z             if left.shape != right.shape:
2025-02-24T15:52:32.4559770Z                 raise_assert_detail(
2025-02-24T15:52:32.4559919Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4559990Z                 )
2025-02-24T15:52:32.4560062Z     
2025-02-24T15:52:32.4560135Z             diff = 0
2025-02-24T15:52:32.4560253Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4560350Z                 # count up differences
2025-02-24T15:52:32.4560521Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4560605Z                     diff += 1
2025-02-24T15:52:32.4560675Z     
2025-02-24T15:52:32.4560774Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4561050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4561233Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4561344Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4561422Z E           
2025-02-24T15:52:32.4561560Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4561940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4562444Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4562616Z 
2025-02-24T15:52:32.4563059Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4563065Z 
2025-02-24T15:52:32.4563243Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4563247Z 
2025-02-24T15:52:32.4563473Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9ab10>
2025-02-24T15:52:32.4563637Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4563722Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4563726Z 
2025-02-24T15:52:32.4563870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4563990Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4564076Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4564160Z         try:
2025-02-24T15:52:32.4564304Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4564392Z         except KeyError:
2025-02-24T15:52:32.4564532Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4564603Z     
2025-02-24T15:52:32.4564694Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4564789Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4564881Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4565014Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4565107Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4565196Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4565314Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4565318Z 
2025-02-24T15:52:32.4565441Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4565560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4565718Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4565789Z     ???
2025-02-24T15:52:32.4565904Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4565908Z 
2025-02-24T15:52:32.4565979Z >   ???
2025-02-24T15:52:32.4566107Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4566176Z E   
2025-02-24T15:52:32.4566309Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4566422Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4566498Z E          ...
2025-02-24T15:52:32.4566587Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4566726Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4566846Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4566917Z E          ...
2025-02-24T15:52:32.4567011Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4567137Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4567247Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4567251Z 
2025-02-24T15:52:32.4567341Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4567563Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-24T15:52:32.4567567Z 
2025-02-24T15:52:32.4567703Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4567831Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4567932Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4568156Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4568292Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4568477Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4568557Z err_msg = None
2025-02-24T15:52:32.4568562Z 
2025-02-24T15:52:32.4568670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4568759Z         if err_msg is None:
2025-02-24T15:52:32.4568858Z             if left.shape != right.shape:
2025-02-24T15:52:32.4568946Z                 raise_assert_detail(
2025-02-24T15:52:32.4569093Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4569165Z                 )
2025-02-24T15:52:32.4569243Z     
2025-02-24T15:52:32.4569316Z             diff = 0
2025-02-24T15:52:32.4569430Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4569523Z                 # count up differences
2025-02-24T15:52:32.4569695Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4569773Z                     diff += 1
2025-02-24T15:52:32.4569853Z     
2025-02-24T15:52:32.4569942Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4570082Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4570255Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4570368Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4570446Z E           
2025-02-24T15:52:32.4570559Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4570829Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4571214Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4571229Z 
2025-02-24T15:52:32.4571543Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4571547Z 
2025-02-24T15:52:32.4571719Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4571723Z 
2025-02-24T15:52:32.4571946Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9abd0>
2025-02-24T15:52:32.4572151Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>, attr = 'f_lu'
2025-02-24T15:52:32.4572155Z 
2025-02-24T15:52:32.4572300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4572414Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4572502Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4572578Z         try:
2025-02-24T15:52:32.4572723Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4572806Z         except KeyError:
2025-02-24T15:52:32.4572948Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4573018Z     
2025-02-24T15:52:32.4573109Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4573203Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4573296Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4573426Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4573517Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4573613Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4573847Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4573852Z 
2025-02-24T15:52:32.4573986Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4574098Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4574349Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4574421Z     ???
2025-02-24T15:52:32.4574537Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4574541Z 
2025-02-24T15:52:32.4574610Z >   ???
2025-02-24T15:52:32.4574739Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4574813Z E   
2025-02-24T15:52:32.4574942Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4575057Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4575129Z E          ...
2025-02-24T15:52:32.4575224Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4575358Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4575476Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4575547Z E          ...
2025-02-24T15:52:32.4575635Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4575766Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4575882Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4575886Z 
2025-02-24T15:52:32.4575982Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4576226Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-24T15:52:32.4576231Z 
2025-02-24T15:52:32.4576365Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4576502Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4576607Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4576742Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4576870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4576972Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4577051Z err_msg = None
2025-02-24T15:52:32.4577055Z 
2025-02-24T15:52:32.4577169Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4577251Z         if err_msg is None:
2025-02-24T15:52:32.4577352Z             if left.shape != right.shape:
2025-02-24T15:52:32.4577438Z                 raise_assert_detail(
2025-02-24T15:52:32.4577582Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4577654Z                 )
2025-02-24T15:52:32.4577728Z     
2025-02-24T15:52:32.4577803Z             diff = 0
2025-02-24T15:52:32.4577920Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4578017Z                 # count up differences
2025-02-24T15:52:32.4578190Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4578274Z                     diff += 1
2025-02-24T15:52:32.4578348Z     
2025-02-24T15:52:32.4578443Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4578579Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4578754Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4578865Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4578942Z E           
2025-02-24T15:52:32.4579055Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4579422Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4579695Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4579772Z 
2025-02-24T15:52:32.4580082Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4580085Z 
2025-02-24T15:52:32.4580259Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4580263Z 
2025-02-24T15:52:32.4580488Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9b350>
2025-02-24T15:52:32.4580652Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4580796Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4580813Z 
2025-02-24T15:52:32.4581169Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4581377Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4581535Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4581668Z         try:
2025-02-24T15:52:32.4581906Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4582049Z         except KeyError:
2025-02-24T15:52:32.4582285Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4582404Z     
2025-02-24T15:52:32.4582556Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4582706Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4582803Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4582939Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4583030Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4583121Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4583242Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4583316Z             else:
2025-02-24T15:52:32.4583416Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4583530Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4583539Z 
2025-02-24T15:52:32.4583665Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4583782Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4583927Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4584002Z     ???
2025-02-24T15:52:32.4584114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4584117Z 
2025-02-24T15:52:32.4584195Z >   ???
2025-02-24T15:52:32.4584321Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4584396Z E   
2025-02-24T15:52:32.4584525Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4584645Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4584722Z E          ...
2025-02-24T15:52:32.4584811Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4584953Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4585067Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4585143Z E          ...
2025-02-24T15:52:32.4585229Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4585359Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4585463Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4585467Z 
2025-02-24T15:52:32.4585562Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4585808Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-24T15:52:32.4585816Z 
2025-02-24T15:52:32.4586078Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4586217Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4586311Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4586552Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4586677Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4586775Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4586852Z err_msg = None
2025-02-24T15:52:32.4586856Z 
2025-02-24T15:52:32.4586970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4587055Z         if err_msg is None:
2025-02-24T15:52:32.4587152Z             if left.shape != right.shape:
2025-02-24T15:52:32.4587242Z                 raise_assert_detail(
2025-02-24T15:52:32.4587385Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4587466Z                 )
2025-02-24T15:52:32.4587537Z     
2025-02-24T15:52:32.4587615Z             diff = 0
2025-02-24T15:52:32.4587726Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4587824Z                 # count up differences
2025-02-24T15:52:32.4587995Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4588080Z                     diff += 1
2025-02-24T15:52:32.4588154Z     
2025-02-24T15:52:32.4588245Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4588386Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4588556Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4588671Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4588744Z E           
2025-02-24T15:52:32.4588861Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4589133Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4589404Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4589408Z 
2025-02-24T15:52:32.4589722Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4589726Z 
2025-02-24T15:52:32.4589898Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4589902Z 
2025-02-24T15:52:32.4590131Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9b410>
2025-02-24T15:52:32.4590303Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4590383Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4590391Z 
2025-02-24T15:52:32.4590531Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4590657Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4590747Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4590818Z         try:
2025-02-24T15:52:32.4591108Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4591194Z         except KeyError:
2025-02-24T15:52:32.4591338Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4591408Z     
2025-02-24T15:52:32.4591504Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4591602Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4591692Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4591947Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4592040Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4592136Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4592436Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4592514Z             else:
2025-02-24T15:52:32.4592609Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4592722Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4592726Z 
2025-02-24T15:52:32.4592853Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4592970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4593120Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4593191Z     ???
2025-02-24T15:52:32.4593305Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4593310Z 
2025-02-24T15:52:32.4593383Z >   ???
2025-02-24T15:52:32.4593516Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4593585Z E   
2025-02-24T15:52:32.4593719Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4593839Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4593917Z E          ...
2025-02-24T15:52:32.4594004Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4594137Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4594253Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4594326Z E          ...
2025-02-24T15:52:32.4594416Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4594541Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4594649Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4594653Z 
2025-02-24T15:52:32.4594743Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4595007Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-24T15:52:32.4595012Z 
2025-02-24T15:52:32.4595153Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4595288Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4595387Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4595520Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4595647Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4595741Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4595820Z err_msg = None
2025-02-24T15:52:32.4595824Z 
2025-02-24T15:52:32.4595933Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4596019Z         if err_msg is None:
2025-02-24T15:52:32.4596124Z             if left.shape != right.shape:
2025-02-24T15:52:32.4596214Z                 raise_assert_detail(
2025-02-24T15:52:32.4596372Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4596481Z                 )
2025-02-24T15:52:32.4596565Z     
2025-02-24T15:52:32.4596639Z             diff = 0
2025-02-24T15:52:32.4596756Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4596845Z                 # count up differences
2025-02-24T15:52:32.4597017Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4597097Z                     diff += 1
2025-02-24T15:52:32.4597171Z     
2025-02-24T15:52:32.4597261Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4597404Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4597580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4597777Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4597860Z E           
2025-02-24T15:52:32.4597973Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4598318Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4598580Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4598590Z 
2025-02-24T15:52:32.4598907Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4598910Z 
2025-02-24T15:52:32.4599109Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4599116Z 
2025-02-24T15:52:32.4599529Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bc9b590>
2025-02-24T15:52:32.4599836Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8862511f40>
2025-02-24T15:52:32.4599938Z attr = 'j_blues'
2025-02-24T15:52:32.4599943Z 
2025-02-24T15:52:32.4600087Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4600207Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4600293Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4600369Z         try:
2025-02-24T15:52:32.4600510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4600597Z         except KeyError:
2025-02-24T15:52:32.4600737Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4600817Z     
2025-02-24T15:52:32.4601032Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4601135Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4601224Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4601371Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4601464Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4601554Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4601669Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4601742Z             else:
2025-02-24T15:52:32.4601842Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4601951Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4601955Z 
2025-02-24T15:52:32.4602085Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4602197Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4602349Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4602421Z     ???
2025-02-24T15:52:32.4602536Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4602544Z 
2025-02-24T15:52:32.4602619Z >   ???
2025-02-24T15:52:32.4602746Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4602821Z E   
2025-02-24T15:52:32.4602949Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4603068Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4603142Z E          ...
2025-02-24T15:52:32.4603234Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4603367Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4603484Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4603558Z E          ...
2025-02-24T15:52:32.4603651Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4603915Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4604026Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4604030Z 
2025-02-24T15:52:32.4604125Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4604453Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-24T15:52:32.4604457Z 
2025-02-24T15:52:32.4604590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4604719Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4604818Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4604956Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4605080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4605182Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4605259Z err_msg = None
2025-02-24T15:52:32.4605263Z 
2025-02-24T15:52:32.4605378Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4605461Z         if err_msg is None:
2025-02-24T15:52:32.4605564Z             if left.shape != right.shape:
2025-02-24T15:52:32.4605651Z                 raise_assert_detail(
2025-02-24T15:52:32.4605799Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4605870Z                 )
2025-02-24T15:52:32.4605942Z     
2025-02-24T15:52:32.4606019Z             diff = 0
2025-02-24T15:52:32.4606128Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4606220Z                 # count up differences
2025-02-24T15:52:32.4606390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4606470Z                     diff += 1
2025-02-24T15:52:32.4606540Z     
2025-02-24T15:52:32.4606638Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4606772Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4606946Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4607063Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4607139Z E           
2025-02-24T15:52:32.4607256Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4607516Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4607785Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4607789Z 
2025-02-24T15:52:32.4608094Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4608107Z 
2025-02-24T15:52:32.4608277Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4608282Z 
2025-02-24T15:52:32.4608511Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc350>
2025-02-24T15:52:32.4608675Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4608755Z attr = 'lines'
2025-02-24T15:52:32.4608759Z 
2025-02-24T15:52:32.4608896Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4609016Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4609101Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4609180Z         try:
2025-02-24T15:52:32.4609408Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4609497Z         except KeyError:
2025-02-24T15:52:32.4609644Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4609789Z     
2025-02-24T15:52:32.4609882Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4609977Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4610074Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4610208Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4610299Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4610390Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4610509Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4610582Z             else:
2025-02-24T15:52:32.4610683Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4610796Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4610800Z 
2025-02-24T15:52:32.4611027Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4611148Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4611293Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4611375Z     ???
2025-02-24T15:52:32.4611487Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4611491Z 
2025-02-24T15:52:32.4611567Z >   ???
2025-02-24T15:52:32.4611693Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4611767Z E   
2025-02-24T15:52:32.4611900Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4612010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4612086Z E          ...
2025-02-24T15:52:32.4612173Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4612304Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4612423Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4612499Z E          ...
2025-02-24T15:52:32.4612584Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4612710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4612818Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4612821Z 
2025-02-24T15:52:32.4612916Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4613172Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-24T15:52:32.4613176Z 
2025-02-24T15:52:32.4613398Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc410>
2025-02-24T15:52:32.4613567Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4613656Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4613660Z 
2025-02-24T15:52:32.4613802Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4613920Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4614009Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4614080Z         try:
2025-02-24T15:52:32.4614226Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4614317Z         except KeyError:
2025-02-24T15:52:32.4614451Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4614525Z     
2025-02-24T15:52:32.4614614Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4614711Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4614799Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4614935Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4615021Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4615114Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4615223Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4615231Z 
2025-02-24T15:52:32.4615493Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4615622Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4615626Z 
2025-02-24T15:52:32.4615765Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4615956Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4616065Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4616151Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4616295Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4616382Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4616492Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4616571Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4616650Z err_msg = None
2025-02-24T15:52:32.4616655Z 
2025-02-24T15:52:32.4616766Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4616851Z         if err_msg is None:
2025-02-24T15:52:32.4616945Z             if left.shape != right.shape:
2025-02-24T15:52:32.4617039Z                 raise_assert_detail(
2025-02-24T15:52:32.4617190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4617268Z                 )
2025-02-24T15:52:32.4617338Z     
2025-02-24T15:52:32.4617422Z             diff = 0
2025-02-24T15:52:32.4617536Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4617632Z                 # count up differences
2025-02-24T15:52:32.4617812Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4617931Z                     diff += 1
2025-02-24T15:52:32.4618075Z     
2025-02-24T15:52:32.4618230Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4618470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4618774Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4618954Z E           AssertionError: Series are different
2025-02-24T15:52:32.4619075Z E           
2025-02-24T15:52:32.4619262Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4619702Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4620045Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4620387Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4620397Z 
2025-02-24T15:52:32.4620713Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4621090Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-24T15:52:32.4621095Z 
2025-02-24T15:52:32.4621327Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc4d0>
2025-02-24T15:52:32.4621625Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4621729Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4621734Z 
2025-02-24T15:52:32.4621876Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4622100Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4622191Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4622264Z         try:
2025-02-24T15:52:32.4622415Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4622498Z         except KeyError:
2025-02-24T15:52:32.4622641Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4622711Z     
2025-02-24T15:52:32.4622806Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4622903Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4622997Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4623131Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4623228Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4623329Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4623441Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4623445Z 
2025-02-24T15:52:32.4623582Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4631083Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4631090Z 
2025-02-24T15:52:32.4631262Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4631355Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4631476Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4631562Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4631717Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4631803Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4631925Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4632013Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4632094Z err_msg = None
2025-02-24T15:52:32.4632098Z 
2025-02-24T15:52:32.4632233Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4632318Z         if err_msg is None:
2025-02-24T15:52:32.4632425Z             if left.shape != right.shape:
2025-02-24T15:52:32.4632514Z                 raise_assert_detail(
2025-02-24T15:52:32.4632684Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4632758Z                 )
2025-02-24T15:52:32.4632836Z     
2025-02-24T15:52:32.4632912Z             diff = 0
2025-02-24T15:52:32.4633035Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4633128Z                 # count up differences
2025-02-24T15:52:32.4633313Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4633406Z                     diff += 1
2025-02-24T15:52:32.4633478Z     
2025-02-24T15:52:32.4633578Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4633722Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4633906Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4634014Z E           AssertionError: Series are different
2025-02-24T15:52:32.4634092Z E           
2025-02-24T15:52:32.4634199Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4634583Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4635134Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4635625Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4635636Z 
2025-02-24T15:52:32.4635961Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4636188Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-24T15:52:32.4636191Z 
2025-02-24T15:52:32.4636324Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4636477Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4636624Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4636878Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4637112Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4637292Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4637436Z err_msg = None
2025-02-24T15:52:32.4637442Z 
2025-02-24T15:52:32.4637631Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4637790Z         if err_msg is None:
2025-02-24T15:52:32.4637951Z             if left.shape != right.shape:
2025-02-24T15:52:32.4638102Z                 raise_assert_detail(
2025-02-24T15:52:32.4638330Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4638417Z                 )
2025-02-24T15:52:32.4638495Z     
2025-02-24T15:52:32.4638571Z             diff = 0
2025-02-24T15:52:32.4638690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4638780Z                 # count up differences
2025-02-24T15:52:32.4638956Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4639041Z                     diff += 1
2025-02-24T15:52:32.4639116Z     
2025-02-24T15:52:32.4639205Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4639350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4639523Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4639642Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4639715Z E           
2025-02-24T15:52:32.4639835Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4640108Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4640371Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4640375Z 
2025-02-24T15:52:32.4640796Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4640800Z 
2025-02-24T15:52:32.4641129Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4641252Z 
2025-02-24T15:52:32.4641485Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc710>
2025-02-24T15:52:32.4641692Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>, attr = 'nu'
2025-02-24T15:52:32.4641696Z 
2025-02-24T15:52:32.4641836Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4641962Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4642049Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4642129Z         try:
2025-02-24T15:52:32.4642279Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4642363Z         except KeyError:
2025-02-24T15:52:32.4642511Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4642588Z     
2025-02-24T15:52:32.4642683Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4642778Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4642872Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4643010Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4643098Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4643199Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4643311Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4643315Z 
2025-02-24T15:52:32.4643446Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4643566Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4643719Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4643797Z     ???
2025-02-24T15:52:32.4643908Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4643917Z 
2025-02-24T15:52:32.4643991Z >   ???
2025-02-24T15:52:32.4644119Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4644192Z E   
2025-02-24T15:52:32.4644322Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4644447Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4644520Z E          ...
2025-02-24T15:52:32.4644614Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4644750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4644864Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4644941Z E          ...
2025-02-24T15:52:32.4645027Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4645159Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4645266Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4645270Z 
2025-02-24T15:52:32.4645369Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4645598Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-24T15:52:32.4645603Z 
2025-02-24T15:52:32.4645737Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4645876Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4645974Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4646111Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4646238Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4646336Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4646413Z err_msg = None
2025-02-24T15:52:32.4646417Z 
2025-02-24T15:52:32.4646535Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4646753Z         if err_msg is None:
2025-02-24T15:52:32.4646861Z             if left.shape != right.shape:
2025-02-24T15:52:32.4646957Z                 raise_assert_detail(
2025-02-24T15:52:32.4647105Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4647255Z                 )
2025-02-24T15:52:32.4647324Z     
2025-02-24T15:52:32.4647401Z             diff = 0
2025-02-24T15:52:32.4647511Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4647605Z                 # count up differences
2025-02-24T15:52:32.4647776Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4647861Z                     diff += 1
2025-02-24T15:52:32.4647931Z     
2025-02-24T15:52:32.4648027Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4648163Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4648343Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4648462Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4648535Z E           
2025-02-24T15:52:32.4648655Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4648926Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4649194Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4649199Z 
2025-02-24T15:52:32.4649524Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4649528Z 
2025-02-24T15:52:32.4649894Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4649912Z 
2025-02-24T15:52:32.4650185Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc7d0>
2025-02-24T15:52:32.4650356Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4650443Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4650447Z 
2025-02-24T15:52:32.4650593Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4650710Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4650802Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4650875Z         try:
2025-02-24T15:52:32.4651134Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4651219Z         except KeyError:
2025-02-24T15:52:32.4651367Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4651442Z     
2025-02-24T15:52:32.4651535Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4651629Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4651723Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4651860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4651954Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4652050Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4652162Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4652166Z 
2025-02-24T15:52:32.4652295Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4652411Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4652568Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4652640Z     ???
2025-02-24T15:52:32.4652884Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4652890Z 
2025-02-24T15:52:32.4652962Z >   ???
2025-02-24T15:52:32.4653100Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4653175Z E   
2025-02-24T15:52:32.4653411Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4653533Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4653606Z E          ...
2025-02-24T15:52:32.4653699Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4653830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4653948Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4654021Z E          ...
2025-02-24T15:52:32.4654112Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4654236Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4654348Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4654352Z 
2025-02-24T15:52:32.4654454Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4654659Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-24T15:52:32.4654662Z 
2025-02-24T15:52:32.4654795Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4654928Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4655027Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4655163Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4655361Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4655536Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4655670Z err_msg = None
2025-02-24T15:52:32.4655676Z 
2025-02-24T15:52:32.4655874Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4656029Z         if err_msg is None:
2025-02-24T15:52:32.4656153Z             if left.shape != right.shape:
2025-02-24T15:52:32.4656240Z                 raise_assert_detail(
2025-02-24T15:52:32.4656393Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4656471Z                 )
2025-02-24T15:52:32.4656549Z     
2025-02-24T15:52:32.4656623Z             diff = 0
2025-02-24T15:52:32.4656745Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4656840Z                 # count up differences
2025-02-24T15:52:32.4657011Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4657096Z                     diff += 1
2025-02-24T15:52:32.4657166Z     
2025-02-24T15:52:32.4657262Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4657402Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4657581Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4657693Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4657770Z E           
2025-02-24T15:52:32.4657883Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4658155Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4658422Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4658426Z 
2025-02-24T15:52:32.4658838Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4658843Z 
2025-02-24T15:52:32.4659023Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4659100Z 
2025-02-24T15:52:32.4659334Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbc890>
2025-02-24T15:52:32.4659535Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>, attr = 'f_lu'
2025-02-24T15:52:32.4659539Z 
2025-02-24T15:52:32.4659680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4659796Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4659888Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4659962Z         try:
2025-02-24T15:52:32.4660108Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4660192Z         except KeyError:
2025-02-24T15:52:32.4660340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4660415Z     
2025-02-24T15:52:32.4660504Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4660604Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4660695Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4660838Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4661039Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4661137Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4661249Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4661253Z 
2025-02-24T15:52:32.4661384Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4661520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4661675Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4661752Z     ???
2025-02-24T15:52:32.4661861Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4661870Z 
2025-02-24T15:52:32.4661947Z >   ???
2025-02-24T15:52:32.4662073Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4662149Z E   
2025-02-24T15:52:32.4662277Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4662400Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4662473Z E          ...
2025-02-24T15:52:32.4662567Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4662697Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4662816Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4662892Z E          ...
2025-02-24T15:52:32.4662979Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4663109Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4663215Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4663219Z 
2025-02-24T15:52:32.4663316Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4663532Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-24T15:52:32.4663536Z 
2025-02-24T15:52:32.4663670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4663807Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4663903Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4664040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4664165Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4664266Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4664342Z err_msg = None
2025-02-24T15:52:32.4664346Z 
2025-02-24T15:52:32.4664460Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4664665Z         if err_msg is None:
2025-02-24T15:52:32.4664769Z             if left.shape != right.shape:
2025-02-24T15:52:32.4664856Z                 raise_assert_detail(
2025-02-24T15:52:32.4665003Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4665200Z                 )
2025-02-24T15:52:32.4665270Z     
2025-02-24T15:52:32.4665346Z             diff = 0
2025-02-24T15:52:32.4665455Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4665549Z                 # count up differences
2025-02-24T15:52:32.4665718Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4665801Z                     diff += 1
2025-02-24T15:52:32.4665871Z     
2025-02-24T15:52:32.4665965Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4666102Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4666282Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4666396Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4666469Z E           
2025-02-24T15:52:32.4666586Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4666853Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4667119Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4667123Z 
2025-02-24T15:52:32.4667437Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4667440Z 
2025-02-24T15:52:32.4667609Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4667618Z 
2025-02-24T15:52:32.4667848Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbd010>
2025-02-24T15:52:32.4668013Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4668107Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4668111Z 
2025-02-24T15:52:32.4668247Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4668367Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4668453Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4668531Z         try:
2025-02-24T15:52:32.4668670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4668756Z         except KeyError:
2025-02-24T15:52:32.4668902Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4668974Z     
2025-02-24T15:52:32.4669071Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4669166Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4669264Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4669395Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4669487Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4669578Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4669694Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4669766Z             else:
2025-02-24T15:52:32.4669868Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4669977Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4669985Z 
2025-02-24T15:52:32.4670111Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4670230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4670485Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4670565Z     ???
2025-02-24T15:52:32.4670678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4670754Z 
2025-02-24T15:52:32.4670829Z >   ???
2025-02-24T15:52:32.4671052Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4671127Z E   
2025-02-24T15:52:32.4671254Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4671370Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4671448Z E          ...
2025-02-24T15:52:32.4671535Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4671669Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4671782Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4671859Z E          ...
2025-02-24T15:52:32.4671946Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4672080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4672186Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4672189Z 
2025-02-24T15:52:32.4672288Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4672493Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-24T15:52:32.4672500Z 
2025-02-24T15:52:32.4672626Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4672832Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4673000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4673241Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4673456Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4673628Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4673756Z err_msg = None
2025-02-24T15:52:32.4673762Z 
2025-02-24T15:52:32.4673951Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4674099Z         if err_msg is None:
2025-02-24T15:52:32.4674258Z             if left.shape != right.shape:
2025-02-24T15:52:32.4674354Z                 raise_assert_detail(
2025-02-24T15:52:32.4674501Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4674577Z                 )
2025-02-24T15:52:32.4674647Z     
2025-02-24T15:52:32.4674726Z             diff = 0
2025-02-24T15:52:32.4674837Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4674934Z                 # count up differences
2025-02-24T15:52:32.4675102Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4675183Z                     diff += 1
2025-02-24T15:52:32.4675253Z     
2025-02-24T15:52:32.4675351Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4675492Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4675663Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4675784Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4675856Z E           
2025-02-24T15:52:32.4675973Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4676234Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4676641Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4676647Z 
2025-02-24T15:52:32.4676966Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4677073Z 
2025-02-24T15:52:32.4677246Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4677251Z 
2025-02-24T15:52:32.4677475Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbd250>
2025-02-24T15:52:32.4677644Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887010f500>
2025-02-24T15:52:32.4677720Z attr = 'j_blues'
2025-02-24T15:52:32.4677723Z 
2025-02-24T15:52:32.4677862Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4677977Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4678068Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4678143Z         try:
2025-02-24T15:52:32.4678287Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4678368Z         except KeyError:
2025-02-24T15:52:32.4678510Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4678586Z     
2025-02-24T15:52:32.4678680Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4678773Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4678868Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4679004Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4679093Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4679187Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4679296Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4679376Z             else:
2025-02-24T15:52:32.4679472Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4679587Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4679590Z 
2025-02-24T15:52:32.4679715Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4679833Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4679988Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4680060Z     ???
2025-02-24T15:52:32.4680177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4680180Z 
2025-02-24T15:52:32.4680250Z >   ???
2025-02-24T15:52:32.4680381Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4680451Z E   
2025-02-24T15:52:32.4680593Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4680714Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4680792Z E          ...
2025-02-24T15:52:32.4680881Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4681190Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4681311Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4681393Z E          ...
2025-02-24T15:52:32.4681497Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4681627Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4681739Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4681743Z 
2025-02-24T15:52:32.4681832Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4682045Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-24T15:52:32.4682048Z 
2025-02-24T15:52:32.4682179Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4682311Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4682409Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4682660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4682792Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4682989Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4683070Z err_msg = None
2025-02-24T15:52:32.4683074Z 
2025-02-24T15:52:32.4683182Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4683268Z         if err_msg is None:
2025-02-24T15:52:32.4683362Z             if left.shape != right.shape:
2025-02-24T15:52:32.4683452Z                 raise_assert_detail(
2025-02-24T15:52:32.4683599Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4683670Z                 )
2025-02-24T15:52:32.4683745Z     
2025-02-24T15:52:32.4683817Z             diff = 0
2025-02-24T15:52:32.4683932Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4684021Z                 # count up differences
2025-02-24T15:52:32.4684198Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4684280Z                     diff += 1
2025-02-24T15:52:32.4684353Z     
2025-02-24T15:52:32.4684449Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4684589Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4684761Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4684877Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4684954Z E           
2025-02-24T15:52:32.4685066Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4685334Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4685596Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4685610Z 
2025-02-24T15:52:32.4685917Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4685921Z 
2025-02-24T15:52:32.4686095Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4686099Z 
2025-02-24T15:52:32.4686320Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbdfd0>
2025-02-24T15:52:32.4686486Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4686562Z attr = 'lines'
2025-02-24T15:52:32.4686565Z 
2025-02-24T15:52:32.4686710Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4686831Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4686917Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4686995Z         try:
2025-02-24T15:52:32.4687133Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4687218Z         except KeyError:
2025-02-24T15:52:32.4687355Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4687428Z     
2025-02-24T15:52:32.4687515Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4687612Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4687700Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4687835Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4687921Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4688017Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4688215Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4688290Z             else:
2025-02-24T15:52:32.4688389Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4688497Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4688596Z 
2025-02-24T15:52:32.4688725Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4688838Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4688986Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4689057Z     ???
2025-02-24T15:52:32.4689173Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4689177Z 
2025-02-24T15:52:32.4689251Z >   ???
2025-02-24T15:52:32.4689377Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4689449Z E   
2025-02-24T15:52:32.4689577Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4689699Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4689771Z E          ...
2025-02-24T15:52:32.4689867Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4689996Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4690121Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4690192Z E          ...
2025-02-24T15:52:32.4690280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4690414Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4690518Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4690522Z 
2025-02-24T15:52:32.4690617Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4690880Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-24T15:52:32.4690883Z 
2025-02-24T15:52:32.4691208Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbe090>
2025-02-24T15:52:32.4691378Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4691473Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4691476Z 
2025-02-24T15:52:32.4691684Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4691911Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4692064Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4692190Z         try:
2025-02-24T15:52:32.4692437Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4692575Z         except KeyError:
2025-02-24T15:52:32.4692816Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4692936Z     
2025-02-24T15:52:32.4693089Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4693186Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4693281Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4693414Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4693509Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4693603Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4693711Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4693719Z 
2025-02-24T15:52:32.4693848Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4693960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4693965Z 
2025-02-24T15:52:32.4694104Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4694188Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4694300Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4694383Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4694526Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4694612Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4694851Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4694941Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4695019Z err_msg = None
2025-02-24T15:52:32.4695123Z 
2025-02-24T15:52:32.4695240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4695326Z         if err_msg is None:
2025-02-24T15:52:32.4695424Z             if left.shape != right.shape:
2025-02-24T15:52:32.4695513Z                 raise_assert_detail(
2025-02-24T15:52:32.4695660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4695736Z                 )
2025-02-24T15:52:32.4695806Z     
2025-02-24T15:52:32.4695883Z             diff = 0
2025-02-24T15:52:32.4695994Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4696087Z                 # count up differences
2025-02-24T15:52:32.4696256Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4696343Z                     diff += 1
2025-02-24T15:52:32.4696412Z     
2025-02-24T15:52:32.4696505Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4696639Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4696818Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4696923Z E           AssertionError: Series are different
2025-02-24T15:52:32.4697000Z E           
2025-02-24T15:52:32.4697103Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4697475Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4697814Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4698155Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4698160Z 
2025-02-24T15:52:32.4698473Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4698988Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-24T15:52:32.4698993Z 
2025-02-24T15:52:32.4699221Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbe150>
2025-02-24T15:52:32.4699388Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4699483Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4699487Z 
2025-02-24T15:52:32.4699624Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4699744Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4699831Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4699906Z         try:
2025-02-24T15:52:32.4700048Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4700134Z         except KeyError:
2025-02-24T15:52:32.4700270Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4700344Z     
2025-02-24T15:52:32.4700435Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4700631Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4700728Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4700860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4701195Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4701287Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4701403Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4701408Z 
2025-02-24T15:52:32.4701532Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4701649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4701653Z 
2025-02-24T15:52:32.4701794Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4701879Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4701993Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4702079Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4702227Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4702310Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4702426Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4702507Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4702588Z err_msg = None
2025-02-24T15:52:32.4702591Z 
2025-02-24T15:52:32.4702704Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4702789Z         if err_msg is None:
2025-02-24T15:52:32.4702887Z             if left.shape != right.shape:
2025-02-24T15:52:32.4702972Z                 raise_assert_detail(
2025-02-24T15:52:32.4703118Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4703190Z                 )
2025-02-24T15:52:32.4703261Z     
2025-02-24T15:52:32.4703335Z             diff = 0
2025-02-24T15:52:32.4703455Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4703545Z                 # count up differences
2025-02-24T15:52:32.4703721Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4703806Z                     diff += 1
2025-02-24T15:52:32.4703880Z     
2025-02-24T15:52:32.4703972Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4704106Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4704279Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4704383Z E           AssertionError: Series are different
2025-02-24T15:52:32.4704458Z E           
2025-02-24T15:52:32.4704561Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4704937Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4705319Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4705810Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4705816Z 
2025-02-24T15:52:32.4706132Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4706433Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-24T15:52:32.4706437Z 
2025-02-24T15:52:32.4706565Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4706694Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4706792Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4706930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4707052Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4707157Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4707237Z err_msg = None
2025-02-24T15:52:32.4707240Z 
2025-02-24T15:52:32.4707347Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4707437Z         if err_msg is None:
2025-02-24T15:52:32.4707529Z             if left.shape != right.shape:
2025-02-24T15:52:32.4707618Z                 raise_assert_detail(
2025-02-24T15:52:32.4707758Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4707831Z                 )
2025-02-24T15:52:32.4707899Z     
2025-02-24T15:52:32.4707976Z             diff = 0
2025-02-24T15:52:32.4708086Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4708177Z                 # count up differences
2025-02-24T15:52:32.4708347Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4708426Z                     diff += 1
2025-02-24T15:52:32.4708504Z     
2025-02-24T15:52:32.4708592Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4708730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4708898Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4709019Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4709091Z E           
2025-02-24T15:52:32.4709207Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4709474Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4709738Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4709748Z 
2025-02-24T15:52:32.4710231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4710238Z 
2025-02-24T15:52:32.4710534Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4710545Z 
2025-02-24T15:52:32.4711069Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbe390>
2025-02-24T15:52:32.4711355Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>, attr = 'nu'
2025-02-24T15:52:32.4711361Z 
2025-02-24T15:52:32.4711502Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4711622Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4711709Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4711946Z         try:
2025-02-24T15:52:32.4712096Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4712183Z         except KeyError:
2025-02-24T15:52:32.4712329Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4712505Z     
2025-02-24T15:52:32.4712602Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4712697Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4712794Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4712929Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4713021Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4713110Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4713228Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4713233Z 
2025-02-24T15:52:32.4713359Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4713484Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4713636Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4713708Z     ???
2025-02-24T15:52:32.4713824Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4713834Z 
2025-02-24T15:52:32.4713904Z >   ???
2025-02-24T15:52:32.4714038Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4714108Z E   
2025-02-24T15:52:32.4714243Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4714357Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4714436Z E          ...
2025-02-24T15:52:32.4714525Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4714660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4714780Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4714853Z E          ...
2025-02-24T15:52:32.4714951Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4715077Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4715187Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4715196Z 
2025-02-24T15:52:32.4715285Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4715514Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-24T15:52:32.4715518Z 
2025-02-24T15:52:32.4715644Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4715777Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4715878Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4716010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4716137Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4716236Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4716315Z err_msg = None
2025-02-24T15:52:32.4716319Z 
2025-02-24T15:52:32.4716428Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4716522Z         if err_msg is None:
2025-02-24T15:52:32.4716619Z             if left.shape != right.shape:
2025-02-24T15:52:32.4716710Z                 raise_assert_detail(
2025-02-24T15:52:32.4716861Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4716935Z                 )
2025-02-24T15:52:32.4717011Z     
2025-02-24T15:52:32.4717085Z             diff = 0
2025-02-24T15:52:32.4717203Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4717292Z                 # count up differences
2025-02-24T15:52:32.4717466Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4717546Z                     diff += 1
2025-02-24T15:52:32.4717620Z     
2025-02-24T15:52:32.4717800Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4717944Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4718118Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4718309Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4718384Z E           
2025-02-24T15:52:32.4718496Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4718765Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4719031Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4719040Z 
2025-02-24T15:52:32.4719350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4719354Z 
2025-02-24T15:52:32.4719529Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4719532Z 
2025-02-24T15:52:32.4719759Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbe450>
2025-02-24T15:52:32.4719927Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4720014Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4720018Z 
2025-02-24T15:52:32.4720173Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4720295Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4720386Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4720461Z         try:
2025-02-24T15:52:32.4720602Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4720688Z         except KeyError:
2025-02-24T15:52:32.4720833Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4720904Z     
2025-02-24T15:52:32.4721124Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4721222Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4721310Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4721444Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4721531Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4721626Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4721742Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4721746Z 
2025-02-24T15:52:32.4721871Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4721999Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4722145Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4722222Z     ???
2025-02-24T15:52:32.4722335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4722344Z 
2025-02-24T15:52:32.4722417Z >   ???
2025-02-24T15:52:32.4722542Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4722615Z E   
2025-02-24T15:52:32.4722749Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4722869Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4722947Z E          ...
2025-02-24T15:52:32.4723034Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4723169Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4723283Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4723360Z E          ...
2025-02-24T15:52:32.4723567Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4723703Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4723808Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4723915Z 
2025-02-24T15:52:32.4724011Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4724227Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-24T15:52:32.4724231Z 
2025-02-24T15:52:32.4724359Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4724489Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4724585Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4724724Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4724853Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4724952Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4725035Z err_msg = None
2025-02-24T15:52:32.4725039Z 
2025-02-24T15:52:32.4725146Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4725238Z         if err_msg is None:
2025-02-24T15:52:32.4725332Z             if left.shape != right.shape:
2025-02-24T15:52:32.4725421Z                 raise_assert_detail(
2025-02-24T15:52:32.4725564Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4725640Z                 )
2025-02-24T15:52:32.4725710Z     
2025-02-24T15:52:32.4725787Z             diff = 0
2025-02-24T15:52:32.4725897Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4725991Z                 # count up differences
2025-02-24T15:52:32.4726165Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4726244Z                     diff += 1
2025-02-24T15:52:32.4726324Z     
2025-02-24T15:52:32.4726412Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4726554Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4726729Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4726845Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4726918Z E           
2025-02-24T15:52:32.4727034Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4727296Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4727567Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4727576Z 
2025-02-24T15:52:32.4727886Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4727890Z 
2025-02-24T15:52:32.4728058Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4728062Z 
2025-02-24T15:52:32.4728288Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbe510>
2025-02-24T15:52:32.4728493Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>, attr = 'f_lu'
2025-02-24T15:52:32.4728497Z 
2025-02-24T15:52:32.4728633Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4728754Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4728840Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4729136Z         try:
2025-02-24T15:52:32.4729399Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4729551Z         except KeyError:
2025-02-24T15:52:32.4729792Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4730026Z     
2025-02-24T15:52:32.4730182Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4730347Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4730475Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4730611Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4730702Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4730793Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4731006Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4731011Z 
2025-02-24T15:52:32.4731145Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4731273Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4731420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4731496Z     ???
2025-02-24T15:52:32.4731609Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4731619Z 
2025-02-24T15:52:32.4731689Z >   ???
2025-02-24T15:52:32.4731820Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4731888Z E   
2025-02-24T15:52:32.4732022Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4732135Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4732215Z E          ...
2025-02-24T15:52:32.4732303Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4732438Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4732555Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4732632Z E          ...
2025-02-24T15:52:32.4732727Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4732852Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4732963Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4732970Z 
2025-02-24T15:52:32.4733061Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4733290Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-24T15:52:32.4733294Z 
2025-02-24T15:52:32.4733424Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4733560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4733662Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4733796Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4733931Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4734029Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4734109Z err_msg = None
2025-02-24T15:52:32.4734113Z 
2025-02-24T15:52:32.4734224Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4734318Z         if err_msg is None:
2025-02-24T15:52:32.4734414Z             if left.shape != right.shape:
2025-02-24T15:52:32.4734506Z                 raise_assert_detail(
2025-02-24T15:52:32.4734649Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4734726Z                 )
2025-02-24T15:52:32.4734800Z     
2025-02-24T15:52:32.4734874Z             diff = 0
2025-02-24T15:52:32.4734992Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4735080Z                 # count up differences
2025-02-24T15:52:32.4735257Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4735337Z                     diff += 1
2025-02-24T15:52:32.4735561Z     
2025-02-24T15:52:32.4735658Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4735800Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4736074Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4736191Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4736268Z E           
2025-02-24T15:52:32.4736380Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4736644Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4736911Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4736921Z 
2025-02-24T15:52:32.4737233Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4737238Z 
2025-02-24T15:52:32.4737412Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4737416Z 
2025-02-24T15:52:32.4737639Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbec90>
2025-02-24T15:52:32.4737806Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4737886Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4737890Z 
2025-02-24T15:52:32.4738032Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4738149Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4738246Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4738323Z         try:
2025-02-24T15:52:32.4738463Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4738550Z         except KeyError:
2025-02-24T15:52:32.4738692Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4738767Z     
2025-02-24T15:52:32.4738856Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4738955Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4739046Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4739182Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4739270Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4739363Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4739474Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4739547Z             else:
2025-02-24T15:52:32.4739647Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4739761Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4739765Z 
2025-02-24T15:52:32.4739894Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4740009Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4740164Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4740236Z     ???
2025-02-24T15:52:32.4740350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4740354Z 
2025-02-24T15:52:32.4740430Z >   ???
2025-02-24T15:52:32.4740555Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4740629Z E   
2025-02-24T15:52:32.4740759Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4740877Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4741051Z E          ...
2025-02-24T15:52:32.4741144Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4741390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4741512Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4741584Z E          ...
2025-02-24T15:52:32.4741779Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4741905Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4742015Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4742019Z 
2025-02-24T15:52:32.4742109Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4742330Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-24T15:52:32.4742334Z 
2025-02-24T15:52:32.4742469Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4742594Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4742696Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4742834Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4742962Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4743065Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4743143Z err_msg = None
2025-02-24T15:52:32.4743147Z 
2025-02-24T15:52:32.4743260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4743342Z         if err_msg is None:
2025-02-24T15:52:32.4743441Z             if left.shape != right.shape:
2025-02-24T15:52:32.4743527Z                 raise_assert_detail(
2025-02-24T15:52:32.4743673Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4743745Z                 )
2025-02-24T15:52:32.4743820Z     
2025-02-24T15:52:32.4743897Z             diff = 0
2025-02-24T15:52:32.4744013Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4744112Z                 # count up differences
2025-02-24T15:52:32.4744282Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4744368Z                     diff += 1
2025-02-24T15:52:32.4744444Z     
2025-02-24T15:52:32.4744540Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4744679Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4744852Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4744964Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4745042Z E           
2025-02-24T15:52:32.4745154Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4745425Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4745691Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4745700Z 
2025-02-24T15:52:32.4746007Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4746011Z 
2025-02-24T15:52:32.4746185Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4746189Z 
2025-02-24T15:52:32.4746416Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbed50>
2025-02-24T15:52:32.4746579Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4746664Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4746765Z 
2025-02-24T15:52:32.4746903Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4747024Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4747255Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4747336Z         try:
2025-02-24T15:52:32.4747477Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4747563Z         except KeyError:
2025-02-24T15:52:32.4747718Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4747794Z     
2025-02-24T15:52:32.4747891Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4747988Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4748082Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4748213Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4748304Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4748392Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4748510Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4748583Z             else:
2025-02-24T15:52:32.4748683Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4748803Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4748807Z 
2025-02-24T15:52:32.4748933Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4749050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4749193Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4749269Z     ???
2025-02-24T15:52:32.4749380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4749384Z 
2025-02-24T15:52:32.4749458Z >   ???
2025-02-24T15:52:32.4749583Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4749664Z E   
2025-02-24T15:52:32.4749791Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4749918Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4749995Z E          ...
2025-02-24T15:52:32.4750082Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4750221Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4750334Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4750412Z E          ...
2025-02-24T15:52:32.4750497Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4750625Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4750729Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4750733Z 
2025-02-24T15:52:32.4750827Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4751144Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-24T15:52:32.4751149Z 
2025-02-24T15:52:32.4751282Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4751414Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4751513Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4751652Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4751777Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4751876Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4751952Z err_msg = None
2025-02-24T15:52:32.4751960Z 
2025-02-24T15:52:32.4752070Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4752156Z         if err_msg is None:
2025-02-24T15:52:32.4752254Z             if left.shape != right.shape:
2025-02-24T15:52:32.4752350Z                 raise_assert_detail(
2025-02-24T15:52:32.4752496Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4752709Z                 )
2025-02-24T15:52:32.4752782Z     
2025-02-24T15:52:32.4752861Z             diff = 0
2025-02-24T15:52:32.4752973Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4753227Z                 # count up differences
2025-02-24T15:52:32.4753399Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4753484Z                     diff += 1
2025-02-24T15:52:32.4753560Z     
2025-02-24T15:52:32.4753650Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4753791Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4753964Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4754139Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4754273Z E           
2025-02-24T15:52:32.4754528Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4755076Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4755557Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4755565Z 
2025-02-24T15:52:32.4755959Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4755964Z 
2025-02-24T15:52:32.4756137Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4756141Z 
2025-02-24T15:52:32.4756378Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbeed0>
2025-02-24T15:52:32.4756549Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8871381df0>
2025-02-24T15:52:32.4756626Z attr = 'j_blues'
2025-02-24T15:52:32.4756634Z 
2025-02-24T15:52:32.4756776Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4756892Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4756984Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4757057Z         try:
2025-02-24T15:52:32.4757200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4757281Z         except KeyError:
2025-02-24T15:52:32.4757423Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4757493Z     
2025-02-24T15:52:32.4757588Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4757688Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4757779Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4757920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4758012Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4758106Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4758221Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4758299Z             else:
2025-02-24T15:52:32.4758394Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4758507Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4758511Z 
2025-02-24T15:52:32.4758635Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4758751Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4758901Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4758973Z     ???
2025-02-24T15:52:32.4759089Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4759093Z 
2025-02-24T15:52:32.4759265Z >   ???
2025-02-24T15:52:32.4759403Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4759473Z E   
2025-02-24T15:52:32.4759611Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4759800Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4759878Z E          ...
2025-02-24T15:52:32.4759968Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4760103Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4760223Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4760295Z E          ...
2025-02-24T15:52:32.4760385Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4760514Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4760623Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4760627Z 
2025-02-24T15:52:32.4760716Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4761088Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-24T15:52:32.4761092Z 
2025-02-24T15:52:32.4761229Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4761372Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4761475Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4761636Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4761766Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4761858Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4761942Z err_msg = None
2025-02-24T15:52:32.4761946Z 
2025-02-24T15:52:32.4762057Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4762148Z         if err_msg is None:
2025-02-24T15:52:32.4762250Z             if left.shape != right.shape:
2025-02-24T15:52:32.4762340Z                 raise_assert_detail(
2025-02-24T15:52:32.4762493Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4762568Z                 )
2025-02-24T15:52:32.4762642Z     
2025-02-24T15:52:32.4762715Z             diff = 0
2025-02-24T15:52:32.4762832Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4762922Z                 # count up differences
2025-02-24T15:52:32.4763095Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4763175Z                     diff += 1
2025-02-24T15:52:32.4763253Z     
2025-02-24T15:52:32.4763344Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4763486Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4763664Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4763783Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4763861Z E           
2025-02-24T15:52:32.4763973Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4764245Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4764506Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4764515Z 
2025-02-24T15:52:32.4764946Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4764951Z 
2025-02-24T15:52:32.4765132Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4765136Z 
2025-02-24T15:52:32.4765467Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbfc50>
2025-02-24T15:52:32.4765640Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4765716Z attr = 'lines'
2025-02-24T15:52:32.4765720Z 
2025-02-24T15:52:32.4765860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4765980Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4766068Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4766145Z         try:
2025-02-24T15:52:32.4766285Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4766374Z         except KeyError:
2025-02-24T15:52:32.4766512Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4766593Z     
2025-02-24T15:52:32.4766683Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4766781Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4766873Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4767017Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4767111Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4767202Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4767318Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4767391Z             else:
2025-02-24T15:52:32.4767491Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4767600Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4767604Z 
2025-02-24T15:52:32.4767732Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4767846Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4767999Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4768069Z     ???
2025-02-24T15:52:32.4768186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4768190Z 
2025-02-24T15:52:32.4768269Z >   ???
2025-02-24T15:52:32.4768396Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4768469Z E   
2025-02-24T15:52:32.4768598Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4768715Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4768789Z E          ...
2025-02-24T15:52:32.4768882Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4769011Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4769130Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4769204Z E          ...
2025-02-24T15:52:32.4769295Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4769427Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4769532Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4769535Z 
2025-02-24T15:52:32.4769629Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4769901Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-24T15:52:32.4769905Z 
2025-02-24T15:52:32.4770134Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbfd10>
2025-02-24T15:52:32.4770300Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4770396Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4770400Z 
2025-02-24T15:52:32.4770542Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4770656Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4770748Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4770820Z         try:
2025-02-24T15:52:32.4771207Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4771298Z         except KeyError:
2025-02-24T15:52:32.4771443Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4771512Z     
2025-02-24T15:52:32.4771709Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4771804Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4771898Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4772032Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4772124Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4772218Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4772329Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4772333Z 
2025-02-24T15:52:32.4772460Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4772571Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4772575Z 
2025-02-24T15:52:32.4772720Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4772809Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4772922Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4773013Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4773211Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4773369Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4773555Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4773706Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4773846Z err_msg = None
2025-02-24T15:52:32.4773852Z 
2025-02-24T15:52:32.4774047Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4774185Z         if err_msg is None:
2025-02-24T15:52:32.4774350Z             if left.shape != right.shape:
2025-02-24T15:52:32.4774494Z                 raise_assert_detail(
2025-02-24T15:52:32.4774751Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4774831Z                 )
2025-02-24T15:52:32.4774902Z     
2025-02-24T15:52:32.4774985Z             diff = 0
2025-02-24T15:52:32.4775105Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4775199Z                 # count up differences
2025-02-24T15:52:32.4775373Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4775457Z                     diff += 1
2025-02-24T15:52:32.4775528Z     
2025-02-24T15:52:32.4775622Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4775761Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4775939Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4776048Z E           AssertionError: Series are different
2025-02-24T15:52:32.4776120Z E           
2025-02-24T15:52:32.4776231Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4776600Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4776943Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4777390Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4777486Z 
2025-02-24T15:52:32.4777809Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4778083Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-24T15:52:32.4778087Z 
2025-02-24T15:52:32.4778315Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bcbfdd0>
2025-02-24T15:52:32.4778483Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4778582Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4778586Z 
2025-02-24T15:52:32.4778725Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4778850Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4778934Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4779013Z         try:
2025-02-24T15:52:32.4779155Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4779248Z         except KeyError:
2025-02-24T15:52:32.4779384Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4779462Z     
2025-02-24T15:52:32.4779553Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4779653Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4779747Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4779881Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4779973Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4780062Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4780179Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4780183Z 
2025-02-24T15:52:32.4780312Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4780430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4780434Z 
2025-02-24T15:52:32.4780579Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4780668Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4780781Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4780862Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4781148Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4781233Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4781343Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4781423Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4781506Z err_msg = None
2025-02-24T15:52:32.4781509Z 
2025-02-24T15:52:32.4781632Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4781715Z         if err_msg is None:
2025-02-24T15:52:32.4781813Z             if left.shape != right.shape:
2025-02-24T15:52:32.4781903Z                 raise_assert_detail(
2025-02-24T15:52:32.4782053Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4782125Z                 )
2025-02-24T15:52:32.4782199Z     
2025-02-24T15:52:32.4782273Z             diff = 0
2025-02-24T15:52:32.4782390Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4782480Z                 # count up differences
2025-02-24T15:52:32.4782656Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4782735Z                     diff += 1
2025-02-24T15:52:32.4782810Z     
2025-02-24T15:52:32.4782901Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4783160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4783342Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4783447Z E           AssertionError: Series are different
2025-02-24T15:52:32.4783644Z E           
2025-02-24T15:52:32.4783747Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4784435Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4785125Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4785585Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4785591Z 
2025-02-24T15:52:32.4785914Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4786126Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-24T15:52:32.4786130Z 
2025-02-24T15:52:32.4786264Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4786398Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4786497Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4786638Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4786761Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4786859Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4786941Z err_msg = None
2025-02-24T15:52:32.4786945Z 
2025-02-24T15:52:32.4787055Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4787144Z         if err_msg is None:
2025-02-24T15:52:32.4787241Z             if left.shape != right.shape:
2025-02-24T15:52:32.4787333Z                 raise_assert_detail(
2025-02-24T15:52:32.4787480Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4787558Z                 )
2025-02-24T15:52:32.4787629Z     
2025-02-24T15:52:32.4787711Z             diff = 0
2025-02-24T15:52:32.4787823Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4787920Z                 # count up differences
2025-02-24T15:52:32.4788097Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4788176Z                     diff += 1
2025-02-24T15:52:32.4788250Z     
2025-02-24T15:52:32.4788336Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4788474Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4788643Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4788759Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4788832Z E           
2025-02-24T15:52:32.4788953Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4789318Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4789661Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4789666Z 
2025-02-24T15:52:32.4789978Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4789982Z 
2025-02-24T15:52:32.4790158Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4790172Z 
2025-02-24T15:52:32.4790396Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce0050>
2025-02-24T15:52:32.4790597Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>, attr = 'nu'
2025-02-24T15:52:32.4790606Z 
2025-02-24T15:52:32.4790745Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4790865Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4791065Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4791146Z         try:
2025-02-24T15:52:32.4791287Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4791374Z         except KeyError:
2025-02-24T15:52:32.4791511Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4791587Z     
2025-02-24T15:52:32.4791684Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4791779Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4791873Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4792011Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4792104Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4792194Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4792318Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4792322Z 
2025-02-24T15:52:32.4792447Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4792570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4792723Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4792798Z     ???
2025-02-24T15:52:32.4792912Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4792916Z 
2025-02-24T15:52:32.4792984Z >   ???
2025-02-24T15:52:32.4793118Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4793190Z E   
2025-02-24T15:52:32.4793327Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4793441Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4793520Z E          ...
2025-02-24T15:52:32.4793609Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4793754Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4793872Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4793945Z E          ...
2025-02-24T15:52:32.4794038Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4794162Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4794274Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4794278Z 
2025-02-24T15:52:32.4794371Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4794606Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-24T15:52:32.4794609Z 
2025-02-24T15:52:32.4794859Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4794998Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4795098Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4795341Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4795471Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4795566Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4795646Z err_msg = None
2025-02-24T15:52:32.4795650Z 
2025-02-24T15:52:32.4795757Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4795844Z         if err_msg is None:
2025-02-24T15:52:32.4795938Z             if left.shape != right.shape:
2025-02-24T15:52:32.4796028Z                 raise_assert_detail(
2025-02-24T15:52:32.4796181Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4796253Z                 )
2025-02-24T15:52:32.4796328Z     
2025-02-24T15:52:32.4796403Z             diff = 0
2025-02-24T15:52:32.4796520Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4796614Z                 # count up differences
2025-02-24T15:52:32.4796796Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4796875Z                     diff += 1
2025-02-24T15:52:32.4796952Z     
2025-02-24T15:52:32.4797043Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4797187Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4797359Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4797477Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4797552Z E           
2025-02-24T15:52:32.4797665Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4797941Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4798208Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4798219Z 
2025-02-24T15:52:32.4798530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4798534Z 
2025-02-24T15:52:32.4798712Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4798716Z 
2025-02-24T15:52:32.4798939Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce0110>
2025-02-24T15:52:32.4799110Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4799197Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4799201Z 
2025-02-24T15:52:32.4799347Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4799469Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4799554Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4799635Z         try:
2025-02-24T15:52:32.4799773Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4799859Z         except KeyError:
2025-02-24T15:52:32.4799997Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4800073Z     
2025-02-24T15:52:32.4800163Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4800267Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4800461Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4800604Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4800692Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4800788Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4801112Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4801119Z 
2025-02-24T15:52:32.4801343Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4801549Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4801805Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4801937Z     ???
2025-02-24T15:52:32.4802126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4802132Z 
2025-02-24T15:52:32.4802258Z >   ???
2025-02-24T15:52:32.4802469Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4802604Z E   
2025-02-24T15:52:32.4802765Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4802883Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4802964Z E          ...
2025-02-24T15:52:32.4803054Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4803197Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4803314Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4803393Z E          ...
2025-02-24T15:52:32.4803480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4803614Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4803722Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4803726Z 
2025-02-24T15:52:32.4803824Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4804037Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-24T15:52:32.4804041Z 
2025-02-24T15:52:32.4811878Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4812047Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4812161Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4812306Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4812435Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4812532Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4812612Z err_msg = None
2025-02-24T15:52:32.4812618Z 
2025-02-24T15:52:32.4812744Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4812830Z         if err_msg is None:
2025-02-24T15:52:32.4812937Z             if left.shape != right.shape:
2025-02-24T15:52:32.4813030Z                 raise_assert_detail(
2025-02-24T15:52:32.4813193Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4813272Z                 )
2025-02-24T15:52:32.4813344Z     
2025-02-24T15:52:32.4813429Z             diff = 0
2025-02-24T15:52:32.4813546Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4813646Z                 # count up differences
2025-02-24T15:52:32.4813822Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4813910Z                     diff += 1
2025-02-24T15:52:32.4813982Z     
2025-02-24T15:52:32.4814085Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4814226Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4814412Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4814534Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4814609Z E           
2025-02-24T15:52:32.4814904Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4815181Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4815566Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4815571Z 
2025-02-24T15:52:32.4815897Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4815901Z 
2025-02-24T15:52:32.4816076Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4816086Z 
2025-02-24T15:52:32.4816321Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce01d0>
2025-02-24T15:52:32.4816527Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>, attr = 'f_lu'
2025-02-24T15:52:32.4816537Z 
2025-02-24T15:52:32.4816685Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4816812Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4816902Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4816981Z         try:
2025-02-24T15:52:32.4817127Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4817216Z         except KeyError:
2025-02-24T15:52:32.4817358Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4817438Z     
2025-02-24T15:52:32.4817530Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4817637Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4817737Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4817877Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4817964Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4818061Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4818183Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4818187Z 
2025-02-24T15:52:32.4818318Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4818439Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4818591Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4818671Z     ???
2025-02-24T15:52:32.4818784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4818787Z 
2025-02-24T15:52:32.4818864Z >   ???
2025-02-24T15:52:32.4818998Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4819075Z E   
2025-02-24T15:52:32.4819219Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4819334Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4819415Z E          ...
2025-02-24T15:52:32.4819508Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4819654Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4819771Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4819850Z E          ...
2025-02-24T15:52:32.4819939Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4820069Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4820178Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4820182Z 
2025-02-24T15:52:32.4820305Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4820729Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-24T15:52:32.4820737Z 
2025-02-24T15:52:32.4821270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4821514Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4821821Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4822059Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4822195Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4822298Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4822380Z err_msg = None
2025-02-24T15:52:32.4822384Z 
2025-02-24T15:52:32.4822503Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4822593Z         if err_msg is None:
2025-02-24T15:52:32.4822691Z             if left.shape != right.shape:
2025-02-24T15:52:32.4822782Z                 raise_assert_detail(
2025-02-24T15:52:32.4822939Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4823014Z                 )
2025-02-24T15:52:32.4823084Z     
2025-02-24T15:52:32.4823163Z             diff = 0
2025-02-24T15:52:32.4823277Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4823380Z                 # count up differences
2025-02-24T15:52:32.4823552Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4823631Z                     diff += 1
2025-02-24T15:52:32.4823708Z     
2025-02-24T15:52:32.4823799Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4823941Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4824113Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4824234Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4824311Z E           
2025-02-24T15:52:32.4824428Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4824697Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4824964Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4824969Z 
2025-02-24T15:52:32.4825289Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4825293Z 
2025-02-24T15:52:32.4825472Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4825480Z 
2025-02-24T15:52:32.4825703Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce0950>
2025-02-24T15:52:32.4825874Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4825961Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4825964Z 
2025-02-24T15:52:32.4826110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4826227Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4826319Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4826396Z         try:
2025-02-24T15:52:32.4826538Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4826625Z         except KeyError:
2025-02-24T15:52:32.4826764Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4826838Z     
2025-02-24T15:52:32.4826927Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4827028Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4827207Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4827348Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4827435Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4827606Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4827727Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4827801Z             else:
2025-02-24T15:52:32.4827902Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4828010Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4828014Z 
2025-02-24T15:52:32.4828146Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4828264Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4828414Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4828487Z     ???
2025-02-24T15:52:32.4828609Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4828613Z 
2025-02-24T15:52:32.4828687Z >   ???
2025-02-24T15:52:32.4828816Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4828896Z E   
2025-02-24T15:52:32.4829033Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4829151Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4829223Z E          ...
2025-02-24T15:52:32.4829317Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4829448Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4829568Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4829641Z E          ...
2025-02-24T15:52:32.4829732Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4829858Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4829971Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4829975Z 
2025-02-24T15:52:32.4830076Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4830302Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-24T15:52:32.4830306Z 
2025-02-24T15:52:32.4830444Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4830581Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4830686Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4830821Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4831089Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4831193Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4831269Z err_msg = None
2025-02-24T15:52:32.4831273Z 
2025-02-24T15:52:32.4831391Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4831479Z         if err_msg is None:
2025-02-24T15:52:32.4831580Z             if left.shape != right.shape:
2025-02-24T15:52:32.4831667Z                 raise_assert_detail(
2025-02-24T15:52:32.4831818Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4831895Z                 )
2025-02-24T15:52:32.4831969Z     
2025-02-24T15:52:32.4832043Z             diff = 0
2025-02-24T15:52:32.4832162Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4832255Z                 # count up differences
2025-02-24T15:52:32.4832423Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4832507Z                     diff += 1
2025-02-24T15:52:32.4832577Z     
2025-02-24T15:52:32.4832671Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4832806Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4833127Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4833243Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4833323Z E           
2025-02-24T15:52:32.4833434Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4833803Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4834070Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4834074Z 
2025-02-24T15:52:32.4834384Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4834388Z 
2025-02-24T15:52:32.4834562Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4834571Z 
2025-02-24T15:52:32.4834797Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce0a10>
2025-02-24T15:52:32.4834961Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4835047Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4835051Z 
2025-02-24T15:52:32.4835188Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4835309Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4835395Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4835474Z         try:
2025-02-24T15:52:32.4835612Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4835698Z         except KeyError:
2025-02-24T15:52:32.4835844Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4835914Z     
2025-02-24T15:52:32.4836009Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4836103Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4836202Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4836342Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4836431Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4836520Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4836631Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4836703Z             else:
2025-02-24T15:52:32.4836811Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4836936Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4836940Z 
2025-02-24T15:52:32.4837066Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4837191Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4837337Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4837434Z     ???
2025-02-24T15:52:32.4837565Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4837574Z 
2025-02-24T15:52:32.4837649Z >   ???
2025-02-24T15:52:32.4837785Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4837872Z E   
2025-02-24T15:52:32.4837999Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4838116Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4838192Z E          ...
2025-02-24T15:52:32.4838279Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4838415Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4838527Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4838603Z E          ...
2025-02-24T15:52:32.4838775Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4838911Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4839022Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4839026Z 
2025-02-24T15:52:32.4839196Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4839416Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-24T15:52:32.4839420Z 
2025-02-24T15:52:32.4839549Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4839685Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4839860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4840111Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4840332Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4840514Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4840645Z err_msg = None
2025-02-24T15:52:32.4840657Z 
2025-02-24T15:52:32.4840845Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4841129Z         if err_msg is None:
2025-02-24T15:52:32.4841291Z             if left.shape != right.shape:
2025-02-24T15:52:32.4841448Z                 raise_assert_detail(
2025-02-24T15:52:32.4841599Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4841676Z                 )
2025-02-24T15:52:32.4841746Z     
2025-02-24T15:52:32.4841824Z             diff = 0
2025-02-24T15:52:32.4841936Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4842028Z                 # count up differences
2025-02-24T15:52:32.4842198Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4842281Z                     diff += 1
2025-02-24T15:52:32.4842355Z     
2025-02-24T15:52:32.4842451Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4842594Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4842763Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4842884Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4842960Z E           
2025-02-24T15:52:32.4843076Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4843336Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4843606Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4843610Z 
2025-02-24T15:52:32.4843931Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4843935Z 
2025-02-24T15:52:32.4844106Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4844110Z 
2025-02-24T15:52:32.4844343Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce0b90>
2025-02-24T15:52:32.4844513Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e1610>
2025-02-24T15:52:32.4844589Z attr = 'j_blues'
2025-02-24T15:52:32.4844593Z 
2025-02-24T15:52:32.4844740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4844859Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4844950Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4845154Z         try:
2025-02-24T15:52:32.4845308Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4845390Z         except KeyError:
2025-02-24T15:52:32.4845534Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4845707Z     
2025-02-24T15:52:32.4845799Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4845896Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4845986Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4846124Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4846209Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4846304Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4846413Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4846489Z             else:
2025-02-24T15:52:32.4846585Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4846705Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4846709Z 
2025-02-24T15:52:32.4846834Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4846953Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4847110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4847181Z     ???
2025-02-24T15:52:32.4847297Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4847301Z 
2025-02-24T15:52:32.4847370Z >   ???
2025-02-24T15:52:32.4847499Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4847567Z E   
2025-02-24T15:52:32.4847699Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4847812Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4847889Z E          ...
2025-02-24T15:52:32.4847978Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4848119Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4848237Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4848310Z E          ...
2025-02-24T15:52:32.4848401Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4848543Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4848657Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4848661Z 
2025-02-24T15:52:32.4848752Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4848966Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-24T15:52:32.4848970Z 
2025-02-24T15:52:32.4849099Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4849234Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4849332Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4849474Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4849601Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4849705Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4849786Z err_msg = None
2025-02-24T15:52:32.4849789Z 
2025-02-24T15:52:32.4849899Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4849984Z         if err_msg is None:
2025-02-24T15:52:32.4850079Z             if left.shape != right.shape:
2025-02-24T15:52:32.4850167Z                 raise_assert_detail(
2025-02-24T15:52:32.4850309Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4850383Z                 )
2025-02-24T15:52:32.4850450Z     
2025-02-24T15:52:32.4850528Z             diff = 0
2025-02-24T15:52:32.4850639Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4850821Z                 # count up differences
2025-02-24T15:52:32.4851135Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4851217Z                     diff += 1
2025-02-24T15:52:32.4851290Z     
2025-02-24T15:52:32.4851540Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4851685Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4851858Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4851974Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4852046Z E           
2025-02-24T15:52:32.4852161Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4852430Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4852691Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4852705Z 
2025-02-24T15:52:32.4853018Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4853022Z 
2025-02-24T15:52:32.4853199Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4853203Z 
2025-02-24T15:52:32.4853423Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce1910>
2025-02-24T15:52:32.4853590Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4853664Z attr = 'lines'
2025-02-24T15:52:32.4853668Z 
2025-02-24T15:52:32.4853813Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4853929Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4854019Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4854097Z         try:
2025-02-24T15:52:32.4854241Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4854324Z         except KeyError:
2025-02-24T15:52:32.4854466Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4854539Z     
2025-02-24T15:52:32.4854627Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4854726Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4854818Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4854956Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4855043Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4855137Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4855251Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4855330Z             else:
2025-02-24T15:52:32.4855426Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4855539Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4855547Z 
2025-02-24T15:52:32.4855677Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4855790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4855943Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4856015Z     ???
2025-02-24T15:52:32.4856132Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4856135Z 
2025-02-24T15:52:32.4856204Z >   ???
2025-02-24T15:52:32.4856334Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4856402Z E   
2025-02-24T15:52:32.4856535Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4856772Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4856848Z E          ...
2025-02-24T15:52:32.4856941Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4857071Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4857269Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4857400Z E          ...
2025-02-24T15:52:32.4857564Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4857787Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4857985Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4857992Z 
2025-02-24T15:52:32.4858126Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4858401Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-24T15:52:32.4858405Z 
2025-02-24T15:52:32.4858631Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce19d0>
2025-02-24T15:52:32.4858803Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4858899Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4858903Z 
2025-02-24T15:52:32.4859043Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4859171Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4859255Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4859334Z         try:
2025-02-24T15:52:32.4859477Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4859564Z         except KeyError:
2025-02-24T15:52:32.4859707Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4859777Z     
2025-02-24T15:52:32.4859869Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4859961Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4860054Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4860184Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4860279Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4860369Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4860484Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4860493Z 
2025-02-24T15:52:32.4860617Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4860736Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4860740Z 
2025-02-24T15:52:32.4860882Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4861104Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4861220Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4861300Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4861444Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4861553Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4861668Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4861747Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4861829Z err_msg = None
2025-02-24T15:52:32.4861838Z 
2025-02-24T15:52:32.4861953Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4862036Z         if err_msg is None:
2025-02-24T15:52:32.4862135Z             if left.shape != right.shape:
2025-02-24T15:52:32.4862221Z                 raise_assert_detail(
2025-02-24T15:52:32.4862372Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4862444Z                 )
2025-02-24T15:52:32.4862519Z     
2025-02-24T15:52:32.4862592Z             diff = 0
2025-02-24T15:52:32.4862710Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4862797Z                 # count up differences
2025-02-24T15:52:32.4862969Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4863182Z                     diff += 1
2025-02-24T15:52:32.4863255Z     
2025-02-24T15:52:32.4863347Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4863482Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4863760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4863864Z E           AssertionError: Series are different
2025-02-24T15:52:32.4863940Z E           
2025-02-24T15:52:32.4864043Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4864418Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4864758Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4865100Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4865109Z 
2025-02-24T15:52:32.4865420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4865692Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-24T15:52:32.4865696Z 
2025-02-24T15:52:32.4865918Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce1a90>
2025-02-24T15:52:32.4866094Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4866187Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4866191Z 
2025-02-24T15:52:32.4866333Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4866455Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4866539Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4866616Z         try:
2025-02-24T15:52:32.4866758Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4866845Z         except KeyError:
2025-02-24T15:52:32.4866981Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4867054Z     
2025-02-24T15:52:32.4867147Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4867248Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4867338Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4867477Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4867569Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4867664Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4867778Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4867781Z 
2025-02-24T15:52:32.4867904Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4868024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4868028Z 
2025-02-24T15:52:32.4868163Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4868253Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4868365Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4868534Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4868675Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4868762Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4868942Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4869021Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4869101Z err_msg = None
2025-02-24T15:52:32.4869105Z 
2025-02-24T15:52:32.4869212Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4869298Z         if err_msg is None:
2025-02-24T15:52:32.4869391Z             if left.shape != right.shape:
2025-02-24T15:52:32.4869481Z                 raise_assert_detail(
2025-02-24T15:52:32.4869622Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4869702Z                 )
2025-02-24T15:52:32.4869776Z     
2025-02-24T15:52:32.4869849Z             diff = 0
2025-02-24T15:52:32.4869971Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4870061Z                 # count up differences
2025-02-24T15:52:32.4870232Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4870317Z                     diff += 1
2025-02-24T15:52:32.4870390Z     
2025-02-24T15:52:32.4870475Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4870613Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4870786Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4870895Z E           AssertionError: Series are different
2025-02-24T15:52:32.4871062Z E           
2025-02-24T15:52:32.4871169Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4871548Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4871927Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4872314Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4872318Z 
2025-02-24T15:52:32.4872629Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4872838Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-24T15:52:32.4872842Z 
2025-02-24T15:52:32.4872974Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4873109Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4873206Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4873342Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4873580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4873685Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4873761Z err_msg = None
2025-02-24T15:52:32.4873765Z 
2025-02-24T15:52:32.4873877Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4874081Z         if err_msg is None:
2025-02-24T15:52:32.4874180Z             if left.shape != right.shape:
2025-02-24T15:52:32.4874269Z                 raise_assert_detail(
2025-02-24T15:52:32.4874410Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4874489Z                 )
2025-02-24T15:52:32.4874558Z     
2025-02-24T15:52:32.4874636Z             diff = 0
2025-02-24T15:52:32.4874747Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4874840Z                 # count up differences
2025-02-24T15:52:32.4875009Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4875093Z                     diff += 1
2025-02-24T15:52:32.4875167Z     
2025-02-24T15:52:32.4875258Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4875391Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4875593Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4875711Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4875783Z E           
2025-02-24T15:52:32.4875900Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4876332Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4876759Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4876774Z 
2025-02-24T15:52:32.4877248Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4877255Z 
2025-02-24T15:52:32.4877529Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4877535Z 
2025-02-24T15:52:32.4877892Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce1cd0>
2025-02-24T15:52:32.4878217Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>, attr = 'nu'
2025-02-24T15:52:32.4878225Z 
2025-02-24T15:52:32.4878450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4878656Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4878795Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4878923Z         try:
2025-02-24T15:52:32.4879158Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4879309Z         except KeyError:
2025-02-24T15:52:32.4879546Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4879685Z     
2025-02-24T15:52:32.4879839Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4880013Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4880160Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4880386Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4880536Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4880700Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4881113Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4881124Z 
2025-02-24T15:52:32.4881360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4881808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4882101Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4882243Z     ???
2025-02-24T15:52:32.4882446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4882634Z 
2025-02-24T15:52:32.4882780Z >   ???
2025-02-24T15:52:32.4883025Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4883159Z E   
2025-02-24T15:52:32.4883411Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4883617Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4883756Z E          ...
2025-02-24T15:52:32.4883924Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4884173Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4884388Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4884533Z E          ...
2025-02-24T15:52:32.4884707Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4884953Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4885144Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4885172Z 
2025-02-24T15:52:32.4885341Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4885768Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-24T15:52:32.4885776Z 
2025-02-24T15:52:32.4886005Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4886247Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4886429Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4886685Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4886920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4887097Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4887237Z err_msg = None
2025-02-24T15:52:32.4887243Z 
2025-02-24T15:52:32.4887436Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4887587Z         if err_msg is None:
2025-02-24T15:52:32.4887747Z             if left.shape != right.shape:
2025-02-24T15:52:32.4887891Z                 raise_assert_detail(
2025-02-24T15:52:32.4888139Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4888267Z                 )
2025-02-24T15:52:32.4888393Z     
2025-02-24T15:52:32.4888533Z             diff = 0
2025-02-24T15:52:32.4888735Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4888900Z                 # count up differences
2025-02-24T15:52:32.4889203Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4889342Z                     diff += 1
2025-02-24T15:52:32.4889472Z     
2025-02-24T15:52:32.4889625Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4889863Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4890153Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4890361Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4890485Z E           
2025-02-24T15:52:32.4890688Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4891370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4892055Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4892213Z 
2025-02-24T15:52:32.4892795Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4892805Z 
2025-02-24T15:52:32.4893123Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4893139Z 
2025-02-24T15:52:32.4893536Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce1d90>
2025-02-24T15:52:32.4893827Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4893963Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4893969Z 
2025-02-24T15:52:32.4894213Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4894413Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4894581Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4894708Z         try:
2025-02-24T15:52:32.4894966Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4895110Z         except KeyError:
2025-02-24T15:52:32.4895370Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4895496Z     
2025-02-24T15:52:32.4895652Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4895824Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4895984Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4896227Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4896381Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4896545Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4896737Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4896744Z 
2025-02-24T15:52:32.4896970Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4897185Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4897451Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4897578Z     ???
2025-02-24T15:52:32.4897774Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4897787Z 
2025-02-24T15:52:32.4897910Z >   ???
2025-02-24T15:52:32.4898118Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4898248Z E   
2025-02-24T15:52:32.4898480Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4898687Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4898817Z E          ...
2025-02-24T15:52:32.4898988Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4899215Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4899424Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4899555Z E          ...
2025-02-24T15:52:32.4899715Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4899939Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4900108Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4900120Z 
2025-02-24T15:52:32.4900271Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4900637Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-24T15:52:32.4900645Z 
2025-02-24T15:52:32.4900881Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4901285Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4901467Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4901709Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4902120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4902300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4902445Z err_msg = None
2025-02-24T15:52:32.4902452Z 
2025-02-24T15:52:32.4902670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4902996Z         if err_msg is None:
2025-02-24T15:52:32.4903180Z             if left.shape != right.shape:
2025-02-24T15:52:32.4903340Z                 raise_assert_detail(
2025-02-24T15:52:32.4903515Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4903595Z                 )
2025-02-24T15:52:32.4903666Z     
2025-02-24T15:52:32.4903749Z             diff = 0
2025-02-24T15:52:32.4903867Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4903965Z                 # count up differences
2025-02-24T15:52:32.4904158Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4904249Z                     diff += 1
2025-02-24T15:52:32.4904321Z     
2025-02-24T15:52:32.4904421Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4904560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4904765Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4904886Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4904960Z E           
2025-02-24T15:52:32.4905078Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4905345Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4905618Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4905627Z 
2025-02-24T15:52:32.4905963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4905967Z 
2025-02-24T15:52:32.4906143Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4906147Z 
2025-02-24T15:52:32.4906382Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce1e50>
2025-02-24T15:52:32.4906587Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>, attr = 'f_lu'
2025-02-24T15:52:32.4906591Z 
2025-02-24T15:52:32.4906737Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4906860Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4906957Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4907037Z         try:
2025-02-24T15:52:32.4907185Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4907273Z         except KeyError:
2025-02-24T15:52:32.4907420Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4907495Z     
2025-02-24T15:52:32.4907585Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4907684Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4907776Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4907916Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4908004Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4908100Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4908217Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4908221Z 
2025-02-24T15:52:32.4908351Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4908603Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4908759Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4908837Z     ???
2025-02-24T15:52:32.4908948Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4909034Z 
2025-02-24T15:52:32.4909111Z >   ???
2025-02-24T15:52:32.4909241Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4909330Z E   
2025-02-24T15:52:32.4909470Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4909590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4909669Z E          ...
2025-02-24T15:52:32.4909761Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4909898Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4910012Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4910089Z E          ...
2025-02-24T15:52:32.4910183Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4910314Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4910419Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4910430Z 
2025-02-24T15:52:32.4910526Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4910758Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-24T15:52:32.4910762Z 
2025-02-24T15:52:32.4910897Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4911225Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4911327Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4911464Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4911594Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4911691Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4911770Z err_msg = None
2025-02-24T15:52:32.4911781Z 
2025-02-24T15:52:32.4911898Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4911991Z         if err_msg is None:
2025-02-24T15:52:32.4912091Z             if left.shape != right.shape:
2025-02-24T15:52:32.4912182Z                 raise_assert_detail(
2025-02-24T15:52:32.4912331Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4912409Z                 )
2025-02-24T15:52:32.4912484Z     
2025-02-24T15:52:32.4912561Z             diff = 0
2025-02-24T15:52:32.4912673Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4912765Z                 # count up differences
2025-02-24T15:52:32.4912936Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4913024Z                     diff += 1
2025-02-24T15:52:32.4913106Z     
2025-02-24T15:52:32.4913265Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4913511Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4913826Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4913990Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4914067Z E           
2025-02-24T15:52:32.4914187Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4914451Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4914855Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4914961Z 
2025-02-24T15:52:32.4915287Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4915292Z 
2025-02-24T15:52:32.4915464Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4915468Z 
2025-02-24T15:52:32.4915705Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce25d0>
2025-02-24T15:52:32.4915879Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4915960Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.4915964Z 
2025-02-24T15:52:32.4916109Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4916225Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4916320Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4916393Z         try:
2025-02-24T15:52:32.4916539Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4916624Z         except KeyError:
2025-02-24T15:52:32.4916773Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4916843Z     
2025-02-24T15:52:32.4916936Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4917035Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4917123Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4917262Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4917349Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4917444Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4917555Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4917633Z             else:
2025-02-24T15:52:32.4917731Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4917852Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4917856Z 
2025-02-24T15:52:32.4917984Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4918104Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4918261Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4918334Z     ???
2025-02-24T15:52:32.4918449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4918453Z 
2025-02-24T15:52:32.4918523Z >   ???
2025-02-24T15:52:32.4918658Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4918729Z E   
2025-02-24T15:52:32.4918861Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4918974Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4919055Z E          ...
2025-02-24T15:52:32.4919145Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4919281Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4919400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4919472Z E          ...
2025-02-24T15:52:32.4919570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4919696Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4919807Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4919811Z 
2025-02-24T15:52:32.4919902Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4920136Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-24T15:52:32.4920140Z 
2025-02-24T15:52:32.4920273Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4920406Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4920619Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4920754Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4920884Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4921236Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4921318Z err_msg = None
2025-02-24T15:52:32.4921321Z 
2025-02-24T15:52:32.4921433Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4921518Z         if err_msg is None:
2025-02-24T15:52:32.4921621Z             if left.shape != right.shape:
2025-02-24T15:52:32.4921708Z                 raise_assert_detail(
2025-02-24T15:52:32.4921859Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4921932Z                 )
2025-02-24T15:52:32.4922007Z     
2025-02-24T15:52:32.4922081Z             diff = 0
2025-02-24T15:52:32.4922196Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4922291Z                 # count up differences
2025-02-24T15:52:32.4922469Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4922549Z                     diff += 1
2025-02-24T15:52:32.4922632Z     
2025-02-24T15:52:32.4922721Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4922864Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4923039Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4923152Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4923229Z E           
2025-02-24T15:52:32.4923341Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4923610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4923873Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4923887Z 
2025-02-24T15:52:32.4924196Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4924200Z 
2025-02-24T15:52:32.4924374Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4924379Z 
2025-02-24T15:52:32.4924603Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce2690>
2025-02-24T15:52:32.4924772Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4924856Z attr = 'beta_sobolev'
2025-02-24T15:52:32.4924865Z 
2025-02-24T15:52:32.4925002Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4925123Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4925215Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4925293Z         try:
2025-02-24T15:52:32.4925432Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4925520Z         except KeyError:
2025-02-24T15:52:32.4925659Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4925734Z     
2025-02-24T15:52:32.4925822Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4925924Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4926016Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4926154Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4926250Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4926462Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4926582Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4926655Z             else:
2025-02-24T15:52:32.4926756Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4926955Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4926959Z 
2025-02-24T15:52:32.4927090Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4927204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4927356Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4927428Z     ???
2025-02-24T15:52:32.4927544Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4927548Z 
2025-02-24T15:52:32.4927622Z >   ???
2025-02-24T15:52:32.4927747Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4927822Z E   
2025-02-24T15:52:32.4927959Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4928077Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4928150Z E          ...
2025-02-24T15:52:32.4928244Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4928382Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4928501Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4928573Z E          ...
2025-02-24T15:52:32.4928665Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4928795Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4928901Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4928905Z 
2025-02-24T15:52:32.4929000Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4929211Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-24T15:52:32.4929215Z 
2025-02-24T15:52:32.4929355Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4929483Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4929586Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4929731Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4929855Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4929954Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4930031Z err_msg = None
2025-02-24T15:52:32.4930035Z 
2025-02-24T15:52:32.4930152Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4930235Z         if err_msg is None:
2025-02-24T15:52:32.4930336Z             if left.shape != right.shape:
2025-02-24T15:52:32.4930422Z                 raise_assert_detail(
2025-02-24T15:52:32.4930578Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4930660Z                 )
2025-02-24T15:52:32.4930730Z     
2025-02-24T15:52:32.4930809Z             diff = 0
2025-02-24T15:52:32.4931044Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4931145Z                 # count up differences
2025-02-24T15:52:32.4931316Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4931400Z                     diff += 1
2025-02-24T15:52:32.4931470Z     
2025-02-24T15:52:32.4931565Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4931702Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4931878Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4932029Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4932172Z E           
2025-02-24T15:52:32.4932375Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4933029Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4933599Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4933605Z 
2025-02-24T15:52:32.4933924Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4933929Z 
2025-02-24T15:52:32.4934099Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4934103Z 
2025-02-24T15:52:32.4934336Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce2810>
2025-02-24T15:52:32.4934499Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887f92d850>
2025-02-24T15:52:32.4934586Z attr = 'j_blues'
2025-02-24T15:52:32.4934590Z 
2025-02-24T15:52:32.4934727Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4934849Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4934941Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4935013Z         try:
2025-02-24T15:52:32.4935158Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4935241Z         except KeyError:
2025-02-24T15:52:32.4935382Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4935453Z     
2025-02-24T15:52:32.4935545Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4935640Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4935743Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4935874Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4935967Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4936058Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4936179Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4936257Z             else:
2025-02-24T15:52:32.4936353Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4936470Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4936473Z 
2025-02-24T15:52:32.4936599Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4936718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4936866Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4936945Z     ???
2025-02-24T15:52:32.4937055Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4937058Z 
2025-02-24T15:52:32.4937139Z >   ???
2025-02-24T15:52:32.4937271Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4937341Z E   
2025-02-24T15:52:32.4937478Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4937597Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4937676Z E          ...
2025-02-24T15:52:32.4937766Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4937901Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4938016Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4938092Z E          ...
2025-02-24T15:52:32.4938180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4938310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4938417Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4938426Z 
2025-02-24T15:52:32.4938518Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4938826Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-24T15:52:32.4938830Z 
2025-02-24T15:52:32.4938963Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4939176Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4939275Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4939416Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4939543Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4939644Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4939725Z err_msg = None
2025-02-24T15:52:32.4939728Z 
2025-02-24T15:52:32.4939846Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4939933Z         if err_msg is None:
2025-02-24T15:52:32.4940036Z             if left.shape != right.shape:
2025-02-24T15:52:32.4940126Z                 raise_assert_detail(
2025-02-24T15:52:32.4940272Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4940353Z                 )
2025-02-24T15:52:32.4940423Z     
2025-02-24T15:52:32.4940501Z             diff = 0
2025-02-24T15:52:32.4940612Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4940708Z                 # count up differences
2025-02-24T15:52:32.4940885Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4941085Z                     diff += 1
2025-02-24T15:52:32.4941161Z     
2025-02-24T15:52:32.4941254Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4941398Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4941573Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4941696Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4941768Z E           
2025-02-24T15:52:32.4941885Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4942157Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4942420Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4942425Z 
2025-02-24T15:52:32.4942745Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4942749Z 
2025-02-24T15:52:32.4942924Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4942937Z 
2025-02-24T15:52:32.4943162Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3590>
2025-02-24T15:52:32.4943335Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.4943412Z attr = 'lines'
2025-02-24T15:52:32.4943416Z 
2025-02-24T15:52:32.4943561Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4943681Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4943771Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4943843Z         try:
2025-02-24T15:52:32.4943992Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4944076Z         except KeyError:
2025-02-24T15:52:32.4944220Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4944413Z     
2025-02-24T15:52:32.4944506Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4944607Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4944697Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4944939Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4945026Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4945125Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4945244Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4945323Z             else:
2025-02-24T15:52:32.4945421Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.4945535Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.4945538Z 
2025-02-24T15:52:32.4945670Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.4945785Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4945942Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4946015Z     ???
2025-02-24T15:52:32.4946130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4946140Z 
2025-02-24T15:52:32.4946209Z >   ???
2025-02-24T15:52:32.4946343Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4946412Z E   
2025-02-24T15:52:32.4946549Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4946664Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4946742Z E          ...
2025-02-24T15:52:32.4946836Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4946966Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4947085Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4947159Z E          ...
2025-02-24T15:52:32.4947252Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4947383Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4947497Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4947501Z 
2025-02-24T15:52:32.4947592Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4947873Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-24T15:52:32.4947877Z 
2025-02-24T15:52:32.4948109Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3650>
2025-02-24T15:52:32.4948275Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.4948372Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.4948376Z 
2025-02-24T15:52:32.4948513Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4948633Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4948719Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4948799Z         try:
2025-02-24T15:52:32.4948942Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4949031Z         except KeyError:
2025-02-24T15:52:32.4949176Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4949247Z     
2025-02-24T15:52:32.4949346Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4949441Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4949539Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4949674Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4949766Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4949856Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4949972Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4949976Z 
2025-02-24T15:52:32.4950101Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4950221Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4950225Z 
2025-02-24T15:52:32.4950497Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4950662Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4950864Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4951334Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4951591Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.4951739Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.4951925Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4952063Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.4952150Z err_msg = None
2025-02-24T15:52:32.4952154Z 
2025-02-24T15:52:32.4952278Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4952362Z         if err_msg is None:
2025-02-24T15:52:32.4952466Z             if left.shape != right.shape:
2025-02-24T15:52:32.4952558Z                 raise_assert_detail(
2025-02-24T15:52:32.4952712Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4952786Z                 )
2025-02-24T15:52:32.4952862Z     
2025-02-24T15:52:32.4952947Z             diff = 0
2025-02-24T15:52:32.4953066Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4953157Z                 # count up differences
2025-02-24T15:52:32.4953339Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4953424Z                     diff += 1
2025-02-24T15:52:32.4953496Z     
2025-02-24T15:52:32.4953591Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4953732Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4953912Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4954018Z E           AssertionError: Series are different
2025-02-24T15:52:32.4954095Z E           
2025-02-24T15:52:32.4954203Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.4954585Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4954928Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4955266Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4955281Z 
2025-02-24T15:52:32.4955600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4955879Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-24T15:52:32.4955882Z 
2025-02-24T15:52:32.4956107Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3710>
2025-02-24T15:52:32.4956278Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.4956370Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.4956374Z 
2025-02-24T15:52:32.4956640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4956761Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4956852Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4956933Z         try:
2025-02-24T15:52:32.4957190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4957277Z         except KeyError:
2025-02-24T15:52:32.4957417Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4957493Z     
2025-02-24T15:52:32.4957584Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4957683Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4957774Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4957912Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4958000Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4958097Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4958212Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4958216Z 
2025-02-24T15:52:32.4958348Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4958470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4958481Z 
2025-02-24T15:52:32.4958619Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4958711Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4958818Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4958906Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4959046Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.4959134Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.4959247Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.4959327Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.4959408Z err_msg = None
2025-02-24T15:52:32.4959412Z 
2025-02-24T15:52:32.4959526Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4959613Z         if err_msg is None:
2025-02-24T15:52:32.4959710Z             if left.shape != right.shape:
2025-02-24T15:52:32.4959811Z                 raise_assert_detail(
2025-02-24T15:52:32.4959956Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4960034Z                 )
2025-02-24T15:52:32.4960103Z     
2025-02-24T15:52:32.4960183Z             diff = 0
2025-02-24T15:52:32.4960299Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4960392Z                 # count up differences
2025-02-24T15:52:32.4960568Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4960645Z                     diff += 1
2025-02-24T15:52:32.4960720Z     
2025-02-24T15:52:32.4960809Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4961092Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4961267Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4961380Z E           AssertionError: Series are different
2025-02-24T15:52:32.4961459Z E           
2025-02-24T15:52:32.4961593Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.4961979Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.4962474Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4962961Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.4962966Z 
2025-02-24T15:52:32.4963288Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4963495Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-24T15:52:32.4963499Z 
2025-02-24T15:52:32.4963637Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4963771Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4963875Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4964017Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4964140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4964240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4964316Z err_msg = None
2025-02-24T15:52:32.4964320Z 
2025-02-24T15:52:32.4964434Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4964517Z         if err_msg is None:
2025-02-24T15:52:32.4964618Z             if left.shape != right.shape:
2025-02-24T15:52:32.4964709Z                 raise_assert_detail(
2025-02-24T15:52:32.4964857Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4964934Z                 )
2025-02-24T15:52:32.4965005Z     
2025-02-24T15:52:32.4965087Z             diff = 0
2025-02-24T15:52:32.4965199Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4965301Z                 # count up differences
2025-02-24T15:52:32.4965473Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4965556Z                     diff += 1
2025-02-24T15:52:32.4965628Z     
2025-02-24T15:52:32.4965721Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4965857Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4966033Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4966154Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4966227Z E           
2025-02-24T15:52:32.4966350Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4966614Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4966886Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4966890Z 
2025-02-24T15:52:32.4967202Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4967206Z 
2025-02-24T15:52:32.4967377Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4967464Z 
2025-02-24T15:52:32.4967701Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3950>
2025-02-24T15:52:32.4967902Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>, attr = 'nu'
2025-02-24T15:52:32.4967979Z 
2025-02-24T15:52:32.4968123Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4968328Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4968482Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4968618Z         try:
2025-02-24T15:52:32.4968872Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4968975Z         except KeyError:
2025-02-24T15:52:32.4969118Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4969193Z     
2025-02-24T15:52:32.4969285Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4969386Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4969484Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4969625Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4969715Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4969816Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4969942Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4969946Z 
2025-02-24T15:52:32.4970073Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4970195Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4970344Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4970421Z     ???
2025-02-24T15:52:32.4970535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4970539Z 
2025-02-24T15:52:32.4970614Z >   ???
2025-02-24T15:52:32.4970744Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4970818Z E   
2025-02-24T15:52:32.4971090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4971210Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4971288Z E          ...
2025-02-24T15:52:32.4971377Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4971518Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4971634Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4971711Z E          ...
2025-02-24T15:52:32.4971799Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4971932Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4972039Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4972042Z 
2025-02-24T15:52:32.4972141Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4972384Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-24T15:52:32.4972388Z 
2025-02-24T15:52:32.4972521Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4972654Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4972757Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4972895Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4973021Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4973120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4973203Z err_msg = None
2025-02-24T15:52:32.4973207Z 
2025-02-24T15:52:32.4973318Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4973407Z         if err_msg is None:
2025-02-24T15:52:32.4973503Z             if left.shape != right.shape:
2025-02-24T15:52:32.4973594Z                 raise_assert_detail(
2025-02-24T15:52:32.4973876Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4973958Z                 )
2025-02-24T15:52:32.4974030Z     
2025-02-24T15:52:32.4974109Z             diff = 0
2025-02-24T15:52:32.4974222Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4974439Z                 # count up differences
2025-02-24T15:52:32.4974620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4974700Z                     diff += 1
2025-02-24T15:52:32.4974775Z     
2025-02-24T15:52:32.4974866Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4975008Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4975179Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4975298Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4975370Z E           
2025-02-24T15:52:32.4975494Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4975759Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4976033Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4976038Z 
2025-02-24T15:52:32.4976357Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4976360Z 
2025-02-24T15:52:32.4976532Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4976542Z 
2025-02-24T15:52:32.4976772Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3a10>
2025-02-24T15:52:32.4976949Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.4977036Z attr = 'wavelength_cm'
2025-02-24T15:52:32.4977040Z 
2025-02-24T15:52:32.4977182Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4977299Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4977390Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4977464Z         try:
2025-02-24T15:52:32.4977610Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4977692Z         except KeyError:
2025-02-24T15:52:32.4977833Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4977909Z     
2025-02-24T15:52:32.4977999Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4978098Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4978193Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4978334Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4978421Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4978523Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4978636Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4978640Z 
2025-02-24T15:52:32.4978770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4978885Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4979037Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4979114Z     ???
2025-02-24T15:52:32.4979224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4979228Z 
2025-02-24T15:52:32.4979303Z >   ???
2025-02-24T15:52:32.4979431Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4979505Z E   
2025-02-24T15:52:32.4979738Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4979862Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4979937Z E          ...
2025-02-24T15:52:32.4980107Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4980241Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4980362Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4980440Z E          ...
2025-02-24T15:52:32.4980527Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4980660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4980766Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4980770Z 
2025-02-24T15:52:32.4980866Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4981201Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-24T15:52:32.4981205Z 
2025-02-24T15:52:32.4981346Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4981476Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4981586Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4981724Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4981850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4981949Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4982026Z err_msg = None
2025-02-24T15:52:32.4982030Z 
2025-02-24T15:52:32.4982147Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4982230Z         if err_msg is None:
2025-02-24T15:52:32.4982330Z             if left.shape != right.shape:
2025-02-24T15:52:32.4982416Z                 raise_assert_detail(
2025-02-24T15:52:32.4982573Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4982651Z                 )
2025-02-24T15:52:32.4982720Z     
2025-02-24T15:52:32.4982799Z             diff = 0
2025-02-24T15:52:32.4982918Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4983013Z                 # count up differences
2025-02-24T15:52:32.4983182Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4983267Z                     diff += 1
2025-02-24T15:52:32.4983337Z     
2025-02-24T15:52:32.4983432Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4983570Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4983751Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4983869Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4983942Z E           
2025-02-24T15:52:32.4984064Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4984326Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4984598Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4984603Z 
2025-02-24T15:52:32.4984912Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4984916Z 
2025-02-24T15:52:32.4985204Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4985209Z 
2025-02-24T15:52:32.4985441Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bce3ad0>
2025-02-24T15:52:32.4985645Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>, attr = 'f_lu'
2025-02-24T15:52:32.4985750Z 
2025-02-24T15:52:32.4985896Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.4986011Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.4986104Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.4986183Z         try:
2025-02-24T15:52:32.4986326Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.4986413Z         except KeyError:
2025-02-24T15:52:32.4986551Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.4986626Z     
2025-02-24T15:52:32.4986716Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.4986817Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.4986910Z             if attr == "selected_atoms":
2025-02-24T15:52:32.4987114Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.4987266Z             elif actual.ndim == 1:
2025-02-24T15:52:32.4987441Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.4987633Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.4987639Z 
2025-02-24T15:52:32.4987853Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.4988051Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4988297Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.4988427Z     ???
2025-02-24T15:52:32.4988596Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.4988600Z 
2025-02-24T15:52:32.4988677Z >   ???
2025-02-24T15:52:32.4988806Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.4988880Z E   
2025-02-24T15:52:32.4989328Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.4989453Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4989527Z E          ...
2025-02-24T15:52:32.4989627Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4989757Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4989884Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.4989957Z E          ...
2025-02-24T15:52:32.4990053Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.4990180Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.4990292Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.4990296Z 
2025-02-24T15:52:32.4990395Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.4990628Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-24T15:52:32.4990632Z 
2025-02-24T15:52:32.4990773Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4991026Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4991140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4991278Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.4991411Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.4991505Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.4991589Z err_msg = None
2025-02-24T15:52:32.4991593Z 
2025-02-24T15:52:32.4991712Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.4991795Z         if err_msg is None:
2025-02-24T15:52:32.4991897Z             if left.shape != right.shape:
2025-02-24T15:52:32.4991984Z                 raise_assert_detail(
2025-02-24T15:52:32.4992276Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.4992354Z                 )
2025-02-24T15:52:32.4992431Z     
2025-02-24T15:52:32.4992509Z             diff = 0
2025-02-24T15:52:32.4992733Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.4992824Z                 # count up differences
2025-02-24T15:52:32.4993001Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.4993095Z                     diff += 1
2025-02-24T15:52:32.4993171Z     
2025-02-24T15:52:32.4993265Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.4993404Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.4993581Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.4993693Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.4993773Z E           
2025-02-24T15:52:32.4993892Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.4994161Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4994434Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.4994439Z 
2025-02-24T15:52:32.4994748Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.4994753Z 
2025-02-24T15:52:32.4994937Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.4994941Z 
2025-02-24T15:52:32.4995169Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd10290>
2025-02-24T15:52:32.5003144Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.5003242Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5003248Z 
2025-02-24T15:52:32.5003399Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5003524Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5003613Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5003687Z         try:
2025-02-24T15:52:32.5003835Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5003925Z         except KeyError:
2025-02-24T15:52:32.5004116Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5004258Z     
2025-02-24T15:52:32.5004428Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5004594Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5004770Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5005016Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5005180Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5005341Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5005541Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5005668Z             else:
2025-02-24T15:52:32.5005834Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5006019Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5006026Z 
2025-02-24T15:52:32.5006250Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5006459Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5006711Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5006840Z     ???
2025-02-24T15:52:32.5007266Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5007275Z 
2025-02-24T15:52:32.5007407Z >   ???
2025-02-24T15:52:32.5007630Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5007756Z E   
2025-02-24T15:52:32.5008128Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5008333Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5008462Z E          ...
2025-02-24T15:52:32.5008564Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5008710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5008833Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5008913Z E          ...
2025-02-24T15:52:32.5009002Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5009137Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5009246Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5009250Z 
2025-02-24T15:52:32.5009360Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5009602Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-24T15:52:32.5009606Z 
2025-02-24T15:52:32.5009754Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5009898Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5009998Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5010149Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5010276Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5010376Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5010453Z err_msg = None
2025-02-24T15:52:32.5010457Z 
2025-02-24T15:52:32.5010580Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5010669Z         if err_msg is None:
2025-02-24T15:52:32.5010777Z             if left.shape != right.shape:
2025-02-24T15:52:32.5010870Z                 raise_assert_detail(
2025-02-24T15:52:32.5011189Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5011268Z                 )
2025-02-24T15:52:32.5011340Z     
2025-02-24T15:52:32.5011419Z             diff = 0
2025-02-24T15:52:32.5011536Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5011637Z                 # count up differences
2025-02-24T15:52:32.5011810Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5011895Z                     diff += 1
2025-02-24T15:52:32.5011965Z     
2025-02-24T15:52:32.5012061Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5012204Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5012379Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5012502Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5012574Z E           
2025-02-24T15:52:32.5012696Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5012965Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5013238Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5013243Z 
2025-02-24T15:52:32.5013706Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5013710Z 
2025-02-24T15:52:32.5013889Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5013993Z 
2025-02-24T15:52:32.5014228Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd10350>
2025-02-24T15:52:32.5014400Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.5014483Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5014487Z 
2025-02-24T15:52:32.5014634Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5014751Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5014841Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5014912Z         try:
2025-02-24T15:52:32.5015061Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5015143Z         except KeyError:
2025-02-24T15:52:32.5015298Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5015368Z     
2025-02-24T15:52:32.5015467Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5015566Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5015670Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5015807Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5015899Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5015994Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5016109Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5016187Z             else:
2025-02-24T15:52:32.5016285Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5016399Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5016403Z 
2025-02-24T15:52:32.5016530Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5016656Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5016806Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5016885Z     ???
2025-02-24T15:52:32.5016998Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5017006Z 
2025-02-24T15:52:32.5017081Z >   ???
2025-02-24T15:52:32.5017211Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5017285Z E   
2025-02-24T15:52:32.5017418Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5017536Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5017609Z E          ...
2025-02-24T15:52:32.5017703Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5017838Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5017957Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5018035Z E          ...
2025-02-24T15:52:32.5018127Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5018257Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5018363Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5018371Z 
2025-02-24T15:52:32.5018468Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5018682Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-24T15:52:32.5018686Z 
2025-02-24T15:52:32.5018823Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5018961Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5019061Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5019201Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5019328Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5019512Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5019594Z err_msg = None
2025-02-24T15:52:32.5019598Z 
2025-02-24T15:52:32.5019717Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5019876Z         if err_msg is None:
2025-02-24T15:52:32.5019980Z             if left.shape != right.shape:
2025-02-24T15:52:32.5020066Z                 raise_assert_detail(
2025-02-24T15:52:32.5020226Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5020302Z                 )
2025-02-24T15:52:32.5020372Z     
2025-02-24T15:52:32.5020449Z             diff = 0
2025-02-24T15:52:32.5020560Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5020657Z                 # count up differences
2025-02-24T15:52:32.5020831Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5021042Z                     diff += 1
2025-02-24T15:52:32.5021119Z     
2025-02-24T15:52:32.5021215Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5021352Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5021531Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5021656Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5021729Z E           
2025-02-24T15:52:32.5021848Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5022109Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5022380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5022389Z 
2025-02-24T15:52:32.5022710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5022714Z 
2025-02-24T15:52:32.5022887Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5022891Z 
2025-02-24T15:52:32.5023122Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd104d0>
2025-02-24T15:52:32.5023289Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f888352e390>
2025-02-24T15:52:32.5023370Z attr = 'j_blues'
2025-02-24T15:52:32.5023374Z 
2025-02-24T15:52:32.5023594Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5023810Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5023971Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5024093Z         try:
2025-02-24T15:52:32.5024339Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5024476Z         except KeyError:
2025-02-24T15:52:32.5024722Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5024794Z     
2025-02-24T15:52:32.5024892Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5024988Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5025084Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5025218Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5025310Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5025404Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5025516Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5025596Z             else:
2025-02-24T15:52:32.5025694Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5025940Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5025945Z 
2025-02-24T15:52:32.5026080Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5026205Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5026461Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5026538Z     ???
2025-02-24T15:52:32.5026649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5026658Z 
2025-02-24T15:52:32.5026728Z >   ???
2025-02-24T15:52:32.5026861Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5026930Z E   
2025-02-24T15:52:32.5027064Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5027181Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5027258Z E          ...
2025-02-24T15:52:32.5027347Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5027487Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5027601Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5027677Z E          ...
2025-02-24T15:52:32.5027763Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5027901Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5028014Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5028018Z 
2025-02-24T15:52:32.5028109Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5028387Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-24T15:52:32.5028391Z 
2025-02-24T15:52:32.5028522Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5028656Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5028757Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5028900Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5029031Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5029132Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5029213Z err_msg = None
2025-02-24T15:52:32.5029216Z 
2025-02-24T15:52:32.5029329Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5029416Z         if err_msg is None:
2025-02-24T15:52:32.5029513Z             if left.shape != right.shape:
2025-02-24T15:52:32.5029603Z                 raise_assert_detail(
2025-02-24T15:52:32.5029750Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5029826Z                 )
2025-02-24T15:52:32.5029895Z     
2025-02-24T15:52:32.5029974Z             diff = 0
2025-02-24T15:52:32.5030093Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5030186Z                 # count up differences
2025-02-24T15:52:32.5030365Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5030446Z                     diff += 1
2025-02-24T15:52:32.5030527Z     
2025-02-24T15:52:32.5030617Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5030759Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5031042Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5031164Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5031236Z E           
2025-02-24T15:52:32.5031352Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5031813Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5032084Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5032188Z 
2025-02-24T15:52:32.5032506Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5032510Z 
2025-02-24T15:52:32.5032685Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5032688Z 
2025-02-24T15:52:32.5032911Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11250>
2025-02-24T15:52:32.5033079Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5033155Z attr = 'lines'
2025-02-24T15:52:32.5033163Z 
2025-02-24T15:52:32.5033304Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5033421Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5033516Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5033587Z         try:
2025-02-24T15:52:32.5033731Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5033815Z         except KeyError:
2025-02-24T15:52:32.5033953Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5034027Z     
2025-02-24T15:52:32.5034116Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5034216Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5034305Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5034442Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5034531Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5034626Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5034740Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5034821Z             else:
2025-02-24T15:52:32.5034921Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5035034Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5035038Z 
2025-02-24T15:52:32.5035169Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5035282Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5035435Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5035506Z     ???
2025-02-24T15:52:32.5035623Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5035627Z 
2025-02-24T15:52:32.5035696Z >   ???
2025-02-24T15:52:32.5035828Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5035897Z E   
2025-02-24T15:52:32.5036031Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5036151Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5036223Z E          ...
2025-02-24T15:52:32.5036316Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5036450Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5036568Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5036640Z E          ...
2025-02-24T15:52:32.5036728Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5036854Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5036963Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5036967Z 
2025-02-24T15:52:32.5037063Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5037373Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-24T15:52:32.5037377Z 
2025-02-24T15:52:32.5037691Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11310>
2025-02-24T15:52:32.5037857Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5037953Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5038029Z 
2025-02-24T15:52:32.5038164Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5038286Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5038370Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5038446Z         try:
2025-02-24T15:52:32.5038592Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5038674Z         except KeyError:
2025-02-24T15:52:32.5038816Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5038887Z     
2025-02-24T15:52:32.5038978Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5039075Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5039170Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5039307Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5039399Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5039487Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5039608Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5039611Z 
2025-02-24T15:52:32.5039741Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5039857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5039861Z 
2025-02-24T15:52:32.5040002Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5040086Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5040201Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5040284Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5040427Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5040515Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5040627Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5040711Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5040791Z err_msg = None
2025-02-24T15:52:32.5040795Z 
2025-02-24T15:52:32.5041027Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5041112Z         if err_msg is None:
2025-02-24T15:52:32.5041221Z             if left.shape != right.shape:
2025-02-24T15:52:32.5041316Z                 raise_assert_detail(
2025-02-24T15:52:32.5041471Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5041554Z                 )
2025-02-24T15:52:32.5041628Z     
2025-02-24T15:52:32.5041709Z             diff = 0
2025-02-24T15:52:32.5041831Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5041922Z                 # count up differences
2025-02-24T15:52:32.5042125Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5042206Z                     diff += 1
2025-02-24T15:52:32.5042280Z     
2025-02-24T15:52:32.5042450Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5042709Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5043010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5043185Z E           AssertionError: Series are different
2025-02-24T15:52:32.5043311Z E           
2025-02-24T15:52:32.5043485Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5044036Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5044387Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5044851Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5044856Z 
2025-02-24T15:52:32.5045185Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5045500Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-24T15:52:32.5045504Z 
2025-02-24T15:52:32.5045736Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd113d0>
2025-02-24T15:52:32.5045906Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5045999Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5046003Z 
2025-02-24T15:52:32.5046146Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5046260Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5046348Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5046421Z         try:
2025-02-24T15:52:32.5046565Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5046651Z         except KeyError:
2025-02-24T15:52:32.5046795Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5046871Z     
2025-02-24T15:52:32.5046960Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5047057Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5047145Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5047284Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5047371Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5047462Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5047571Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5047575Z 
2025-02-24T15:52:32.5047704Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5047820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5047824Z 
2025-02-24T15:52:32.5047959Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5048045Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5048156Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5048240Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5048379Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5048471Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5048575Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5048659Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5048738Z err_msg = None
2025-02-24T15:52:32.5048741Z 
2025-02-24T15:52:32.5048849Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5048933Z         if err_msg is None:
2025-02-24T15:52:32.5049027Z             if left.shape != right.shape:
2025-02-24T15:52:32.5049118Z                 raise_assert_detail(
2025-02-24T15:52:32.5049263Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5049339Z                 )
2025-02-24T15:52:32.5049493Z     
2025-02-24T15:52:32.5049575Z             diff = 0
2025-02-24T15:52:32.5049687Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5049781Z                 # count up differences
2025-02-24T15:52:32.5050049Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5050129Z                     diff += 1
2025-02-24T15:52:32.5050203Z     
2025-02-24T15:52:32.5050289Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5050429Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5050600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5050707Z E           AssertionError: Series are different
2025-02-24T15:52:32.5050780Z E           
2025-02-24T15:52:32.5050885Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5051403Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5051786Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5052169Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5052178Z 
2025-02-24T15:52:32.5052492Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5052749Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-24T15:52:32.5052754Z 
2025-02-24T15:52:32.5052887Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5053013Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5053115Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5053254Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5053380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5053479Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5053560Z err_msg = None
2025-02-24T15:52:32.5053564Z 
2025-02-24T15:52:32.5053676Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5053758Z         if err_msg is None:
2025-02-24T15:52:32.5053856Z             if left.shape != right.shape:
2025-02-24T15:52:32.5053941Z                 raise_assert_detail(
2025-02-24T15:52:32.5054092Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5054165Z                 )
2025-02-24T15:52:32.5054239Z     
2025-02-24T15:52:32.5054315Z             diff = 0
2025-02-24T15:52:32.5054424Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5054518Z                 # count up differences
2025-02-24T15:52:32.5054805Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5054892Z                     diff += 1
2025-02-24T15:52:32.5054961Z     
2025-02-24T15:52:32.5055052Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5055290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5055463Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5055576Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5055652Z E           
2025-02-24T15:52:32.5055773Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5056034Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5056306Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5056318Z 
2025-02-24T15:52:32.5056621Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5056632Z 
2025-02-24T15:52:32.5056802Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5056806Z 
2025-02-24T15:52:32.5057037Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11610>
2025-02-24T15:52:32.5057238Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>, attr = 'nu'
2025-02-24T15:52:32.5057241Z 
2025-02-24T15:52:32.5057384Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5057502Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5057593Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5057664Z         try:
2025-02-24T15:52:32.5057808Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5057900Z         except KeyError:
2025-02-24T15:52:32.5058037Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5058110Z     
2025-02-24T15:52:32.5058199Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5058297Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5058387Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5058524Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5058613Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5058707Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5058816Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5058820Z 
2025-02-24T15:52:32.5058953Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5059069Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5059215Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5059292Z     ???
2025-02-24T15:52:32.5059402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5059406Z 
2025-02-24T15:52:32.5059480Z >   ???
2025-02-24T15:52:32.5059606Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5059679Z E   
2025-02-24T15:52:32.5059808Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5059927Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5060005Z E          ...
2025-02-24T15:52:32.5060092Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5060307Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5060644Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5060776Z E          ...
2025-02-24T15:52:32.5061050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5061275Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5061631Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5061636Z 
2025-02-24T15:52:32.5061739Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5062046Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-24T15:52:32.5062069Z 
2025-02-24T15:52:32.5062219Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5062357Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5062453Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5062591Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5062721Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5062819Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5062900Z err_msg = None
2025-02-24T15:52:32.5062904Z 
2025-02-24T15:52:32.5063021Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5063107Z         if err_msg is None:
2025-02-24T15:52:32.5063202Z             if left.shape != right.shape:
2025-02-24T15:52:32.5063290Z                 raise_assert_detail(
2025-02-24T15:52:32.5063433Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5063509Z                 )
2025-02-24T15:52:32.5063579Z     
2025-02-24T15:52:32.5063658Z             diff = 0
2025-02-24T15:52:32.5063768Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5063863Z                 # count up differences
2025-02-24T15:52:32.5064036Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5064120Z                     diff += 1
2025-02-24T15:52:32.5064188Z     
2025-02-24T15:52:32.5064280Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5064427Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5064597Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5064714Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5064786Z E           
2025-02-24T15:52:32.5064905Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5065168Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5065456Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5065471Z 
2025-02-24T15:52:32.5065792Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5065795Z 
2025-02-24T15:52:32.5065965Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5065970Z 
2025-02-24T15:52:32.5066198Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd116d0>
2025-02-24T15:52:32.5066361Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5066447Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5066451Z 
2025-02-24T15:52:32.5066711Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5066830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5066920Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5066990Z         try:
2025-02-24T15:52:32.5067211Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5067293Z         except KeyError:
2025-02-24T15:52:32.5067436Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5067505Z     
2025-02-24T15:52:32.5067599Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5067692Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5067786Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5067920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5068007Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5068102Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5068212Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5068221Z 
2025-02-24T15:52:32.5068351Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5068464Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5068618Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5068690Z     ???
2025-02-24T15:52:32.5068806Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5068810Z 
2025-02-24T15:52:32.5068882Z >   ???
2025-02-24T15:52:32.5069009Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5069082Z E   
2025-02-24T15:52:32.5069208Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5069322Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5069395Z E          ...
2025-02-24T15:52:32.5069486Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5069616Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5069740Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5069812Z E          ...
2025-02-24T15:52:32.5069905Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5070040Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5070149Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5070153Z 
2025-02-24T15:52:32.5070246Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5070512Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-24T15:52:32.5070517Z 
2025-02-24T15:52:32.5070650Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5070777Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5070879Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5071159Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5071285Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5071383Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5071464Z err_msg = None
2025-02-24T15:52:32.5071468Z 
2025-02-24T15:52:32.5071581Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5071662Z         if err_msg is None:
2025-02-24T15:52:32.5071761Z             if left.shape != right.shape:
2025-02-24T15:52:32.5071846Z                 raise_assert_detail(
2025-02-24T15:52:32.5071994Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5072068Z                 )
2025-02-24T15:52:32.5072145Z     
2025-02-24T15:52:32.5072222Z             diff = 0
2025-02-24T15:52:32.5072334Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5072426Z                 # count up differences
2025-02-24T15:52:32.5072714Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5072803Z                     diff += 1
2025-02-24T15:52:32.5072872Z     
2025-02-24T15:52:32.5073089Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5073226Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5073402Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5073515Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5073590Z E           
2025-02-24T15:52:32.5073706Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5073974Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5074240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5074251Z 
2025-02-24T15:52:32.5074560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5074568Z 
2025-02-24T15:52:32.5074736Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5074741Z 
2025-02-24T15:52:32.5074971Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11790>
2025-02-24T15:52:32.5075176Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>, attr = 'f_lu'
2025-02-24T15:52:32.5075180Z 
2025-02-24T15:52:32.5075326Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5075442Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5075532Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5075602Z         try:
2025-02-24T15:52:32.5075755Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5075841Z         except KeyError:
2025-02-24T15:52:32.5075979Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5076054Z     
2025-02-24T15:52:32.5076142Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5076239Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5076330Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5076466Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5076552Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5076646Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5076757Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5076765Z 
2025-02-24T15:52:32.5076895Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5077013Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5077165Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5077240Z     ???
2025-02-24T15:52:32.5077350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5077354Z 
2025-02-24T15:52:32.5077428Z >   ???
2025-02-24T15:52:32.5077554Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5077628Z E   
2025-02-24T15:52:32.5077755Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5077872Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5077943Z E          ...
2025-02-24T15:52:32.5078034Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5078168Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5078367Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5078448Z E          ...
2025-02-24T15:52:32.5078534Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5078742Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5078850Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5078854Z 
2025-02-24T15:52:32.5078948Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5079270Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-24T15:52:32.5079280Z 
2025-02-24T15:52:32.5079500Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11d90>
2025-02-24T15:52:32.5079795Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5079955Z attr = 'stimulated_emission_factor'
2025-02-24T15:52:32.5079962Z 
2025-02-24T15:52:32.5080202Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5080392Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5080537Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5080658Z         try:
2025-02-24T15:52:32.5080860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5081060Z         except KeyError:
2025-02-24T15:52:32.5081206Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5081283Z     
2025-02-24T15:52:32.5081371Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5081470Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5081558Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5081693Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5081778Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5081872Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5081979Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5082061Z             else:
2025-02-24T15:52:32.5082158Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5082278Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5082286Z 
2025-02-24T15:52:32.5082418Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5082533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5082683Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5082755Z     ???
2025-02-24T15:52:32.5082871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5082874Z 
2025-02-24T15:52:32.5082944Z >   ???
2025-02-24T15:52:32.5083130Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5083200Z E   
2025-02-24T15:52:32.5083371Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T15:52:32.5083747Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5088491Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T15:52:32.5093399Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T15:52:32.5093601Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T15:52:32.5093606Z 
2025-02-24T15:52:32.5093702Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5094010Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-24T15:52:32.5094018Z 
2025-02-24T15:52:32.5094158Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5094291Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5094396Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5094529Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5094659Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5094756Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5094839Z err_msg = None
2025-02-24T15:52:32.5094955Z 
2025-02-24T15:52:32.5095077Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5095161Z         if err_msg is None:
2025-02-24T15:52:32.5095262Z             if left.shape != right.shape:
2025-02-24T15:52:32.5095451Z                 raise_assert_detail(
2025-02-24T15:52:32.5095611Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5095684Z                 )
2025-02-24T15:52:32.5095759Z     
2025-02-24T15:52:32.5095834Z             diff = 0
2025-02-24T15:52:32.5095952Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5096047Z                 # count up differences
2025-02-24T15:52:32.5096224Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5096310Z                     diff += 1
2025-02-24T15:52:32.5096379Z     
2025-02-24T15:52:32.5096475Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5096618Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5096793Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5096910Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5096994Z E           
2025-02-24T15:52:32.5097107Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5097376Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5097648Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5097653Z 
2025-02-24T15:52:32.5097963Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5097971Z 
2025-02-24T15:52:32.5098151Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5098155Z 
2025-02-24T15:52:32.5098549Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11e50>
2025-02-24T15:52:32.5098835Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5098991Z attr = 'previous_beta_sobolev'
2025-02-24T15:52:32.5098997Z 
2025-02-24T15:52:32.5099227Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5099437Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5099532Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5099609Z         try:
2025-02-24T15:52:32.5099762Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5099849Z         except KeyError:
2025-02-24T15:52:32.5099997Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5100066Z     
2025-02-24T15:52:32.5100165Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5100259Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5100354Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5100488Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5100580Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5100670Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5100786Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5100859Z             else:
2025-02-24T15:52:32.5101063Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5101179Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5101183Z 
2025-02-24T15:52:32.5101461Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5101593Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5101745Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5101929Z     ???
2025-02-24T15:52:32.5102041Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5102045Z 
2025-02-24T15:52:32.5102118Z >   ???
2025-02-24T15:52:32.5102246Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5102320Z E   
2025-02-24T15:52:32.5102451Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5102568Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5102645Z E          ...
2025-02-24T15:52:32.5102735Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5102872Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5102990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5103069Z E          ...
2025-02-24T15:52:32.5103155Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5103286Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5103398Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5103402Z 
2025-02-24T15:52:32.5103497Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5103782Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-24T15:52:32.5103786Z 
2025-02-24T15:52:32.5103917Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5104049Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5104146Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5104285Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5104414Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5104512Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5104599Z err_msg = None
2025-02-24T15:52:32.5104603Z 
2025-02-24T15:52:32.5104716Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5104803Z         if err_msg is None:
2025-02-24T15:52:32.5104900Z             if left.shape != right.shape:
2025-02-24T15:52:32.5104989Z                 raise_assert_detail(
2025-02-24T15:52:32.5105135Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5105212Z                 )
2025-02-24T15:52:32.5105282Z     
2025-02-24T15:52:32.5105361Z             diff = 0
2025-02-24T15:52:32.5105472Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5105565Z                 # count up differences
2025-02-24T15:52:32.5105745Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5105828Z                     diff += 1
2025-02-24T15:52:32.5105897Z     
2025-02-24T15:52:32.5105988Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5106132Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5106303Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5106420Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5106492Z E           
2025-02-24T15:52:32.5106608Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5106868Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5107227Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5107323Z 
2025-02-24T15:52:32.5107644Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5107648Z 
2025-02-24T15:52:32.5107820Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5107824Z 
2025-02-24T15:52:32.5108053Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11f10>
2025-02-24T15:52:32.5108226Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5108307Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5108310Z 
2025-02-24T15:52:32.5108457Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5108572Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5108661Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5108733Z         try:
2025-02-24T15:52:32.5108889Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5108970Z         except KeyError:
2025-02-24T15:52:32.5109113Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5109182Z     
2025-02-24T15:52:32.5109276Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5109377Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5109465Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5109601Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5109687Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5109782Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5109893Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5109974Z             else:
2025-02-24T15:52:32.5110070Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5110181Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5110185Z 
2025-02-24T15:52:32.5110315Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5110433Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5110583Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5110655Z     ???
2025-02-24T15:52:32.5110770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5110774Z 
2025-02-24T15:52:32.5110844Z >   ???
2025-02-24T15:52:32.5111076Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5111145Z E   
2025-02-24T15:52:32.5111280Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5111391Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5111471Z E          ...
2025-02-24T15:52:32.5111564Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5111694Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5111815Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5111891Z E          ...
2025-02-24T15:52:32.5111983Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5112106Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5112216Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5112220Z 
2025-02-24T15:52:32.5112309Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5112590Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-24T15:52:32.5112594Z 
2025-02-24T15:52:32.5112729Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5112988Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5113095Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5113230Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5113461Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5113554Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5113633Z err_msg = None
2025-02-24T15:52:32.5113637Z 
2025-02-24T15:52:32.5113748Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5113834Z         if err_msg is None:
2025-02-24T15:52:32.5113936Z             if left.shape != right.shape:
2025-02-24T15:52:32.5114022Z                 raise_assert_detail(
2025-02-24T15:52:32.5114171Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5114244Z                 )
2025-02-24T15:52:32.5114316Z     
2025-02-24T15:52:32.5114394Z             diff = 0
2025-02-24T15:52:32.5114510Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5114598Z                 # count up differences
2025-02-24T15:52:32.5114778Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5114856Z                     diff += 1
2025-02-24T15:52:32.5114932Z     
2025-02-24T15:52:32.5115021Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5115162Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5115338Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5115452Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5115529Z E           
2025-02-24T15:52:32.5115639Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5115909Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5116183Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5116187Z 
2025-02-24T15:52:32.5116490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5116494Z 
2025-02-24T15:52:32.5116667Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5116671Z 
2025-02-24T15:52:32.5116896Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd11fd0>
2025-02-24T15:52:32.5117067Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5117148Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5117157Z 
2025-02-24T15:52:32.5117294Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5117487Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5117635Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5117761Z         try:
2025-02-24T15:52:32.5117999Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5118140Z         except KeyError:
2025-02-24T15:52:32.5118370Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5118494Z     
2025-02-24T15:52:32.5118635Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5118736Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5118825Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5119057Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5119153Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5119243Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5119359Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5119508Z             else:
2025-02-24T15:52:32.5119609Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5119717Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5119721Z 
2025-02-24T15:52:32.5119853Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5119966Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5120116Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5120190Z     ???
2025-02-24T15:52:32.5120301Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5120305Z 
2025-02-24T15:52:32.5120380Z >   ???
2025-02-24T15:52:32.5120513Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5120587Z E   
2025-02-24T15:52:32.5120716Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5120831Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5121040Z E          ...
2025-02-24T15:52:32.5121138Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5121268Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5121384Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5121461Z E          ...
2025-02-24T15:52:32.5121548Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5121678Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5121782Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5121785Z 
2025-02-24T15:52:32.5121881Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5122157Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-24T15:52:32.5122161Z 
2025-02-24T15:52:32.5122294Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5122421Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5122527Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5122668Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5122792Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5122891Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5122970Z err_msg = None
2025-02-24T15:52:32.5122973Z 
2025-02-24T15:52:32.5123090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5123172Z         if err_msg is None:
2025-02-24T15:52:32.5123274Z             if left.shape != right.shape:
2025-02-24T15:52:32.5123365Z                 raise_assert_detail(
2025-02-24T15:52:32.5123515Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5123591Z                 )
2025-02-24T15:52:32.5123667Z     
2025-02-24T15:52:32.5123745Z             diff = 0
2025-02-24T15:52:32.5123857Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5123949Z                 # count up differences
2025-02-24T15:52:32.5124120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5124207Z                     diff += 1
2025-02-24T15:52:32.5124276Z     
2025-02-24T15:52:32.5124368Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5124504Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5124678Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5124936Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5125013Z E           
2025-02-24T15:52:32.5125129Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5125389Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5125762Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5125766Z 
2025-02-24T15:52:32.5126075Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5126086Z 
2025-02-24T15:52:32.5126254Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5126259Z 
2025-02-24T15:52:32.5126482Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd12150>
2025-02-24T15:52:32.5126655Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f88835623f0>
2025-02-24T15:52:32.5126735Z attr = 'j_blues'
2025-02-24T15:52:32.5126739Z 
2025-02-24T15:52:32.5126874Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5126993Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5127082Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5127155Z         try:
2025-02-24T15:52:32.5127297Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5127378Z         except KeyError:
2025-02-24T15:52:32.5127516Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5127586Z     
2025-02-24T15:52:32.5127685Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5127779Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5127874Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5128004Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5128100Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5128190Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5128308Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5128386Z             else:
2025-02-24T15:52:32.5128481Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5128595Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5128598Z 
2025-02-24T15:52:32.5128724Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5128844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5128988Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5129068Z     ???
2025-02-24T15:52:32.5129179Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5129183Z 
2025-02-24T15:52:32.5129258Z >   ???
2025-02-24T15:52:32.5129393Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5129462Z E   
2025-02-24T15:52:32.5129595Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5129704Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5129783Z E          ...
2025-02-24T15:52:32.5129871Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5130008Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5130118Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5130194Z E          ...
2025-02-24T15:52:32.5130280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5130410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5130604Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5130609Z 
2025-02-24T15:52:32.5130700Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5131080Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-24T15:52:32.5131193Z 
2025-02-24T15:52:32.5131329Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5131460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5131556Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5131694Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5131820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5131914Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5131998Z err_msg = None
2025-02-24T15:52:32.5132002Z 
2025-02-24T15:52:32.5132112Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5132197Z         if err_msg is None:
2025-02-24T15:52:32.5132292Z             if left.shape != right.shape:
2025-02-24T15:52:32.5132386Z                 raise_assert_detail(
2025-02-24T15:52:32.5132533Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5132607Z                 )
2025-02-24T15:52:32.5132676Z     
2025-02-24T15:52:32.5132754Z             diff = 0
2025-02-24T15:52:32.5132869Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5132957Z                 # count up differences
2025-02-24T15:52:32.5133133Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5133211Z                     diff += 1
2025-02-24T15:52:32.5133286Z     
2025-02-24T15:52:32.5133374Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5133519Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5133691Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5133806Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5133884Z E           
2025-02-24T15:52:32.5134002Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5134267Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5134532Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5134536Z 
2025-02-24T15:52:32.5134847Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5134855Z 
2025-02-24T15:52:32.5135029Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5135033Z 
2025-02-24T15:52:32.5135258Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd12ed0>
2025-02-24T15:52:32.5135430Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5135506Z attr = 'lines'
2025-02-24T15:52:32.5135510Z 
2025-02-24T15:52:32.5135652Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5135764Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5135854Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5135926Z         try:
2025-02-24T15:52:32.5136313Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5136468Z         except KeyError:
2025-02-24T15:52:32.5136705Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5136828Z     
2025-02-24T15:52:32.5137074Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5137254Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5137350Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5137500Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5137589Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5137690Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5137807Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5137885Z             else:
2025-02-24T15:52:32.5137984Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5138099Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5138104Z 
2025-02-24T15:52:32.5138242Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5138359Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5138513Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5138592Z     ???
2025-02-24T15:52:32.5138711Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5138715Z 
2025-02-24T15:52:32.5138785Z >   ???
2025-02-24T15:52:32.5138919Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5138989Z E   
2025-02-24T15:52:32.5139126Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5139245Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5139317Z E          ...
2025-02-24T15:52:32.5139412Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5139544Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5139668Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5139740Z E          ...
2025-02-24T15:52:32.5139833Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5139958Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5140074Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5140077Z 
2025-02-24T15:52:32.5140170Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5140478Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-24T15:52:32.5140483Z 
2025-02-24T15:52:32.5140713Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd12f90>
2025-02-24T15:52:32.5140882Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5141084Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5141088Z 
2025-02-24T15:52:32.5141228Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5141353Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5141439Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5141516Z         try:
2025-02-24T15:52:32.5141662Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5141754Z         except KeyError:
2025-02-24T15:52:32.5141896Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5141965Z     
2025-02-24T15:52:32.5142059Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5142153Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5142247Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5142381Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5142472Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5142562Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5142677Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5142681Z 
2025-02-24T15:52:32.5142931Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5143050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5143054Z 
2025-02-24T15:52:32.5143197Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5143404Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5143519Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5143613Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5143763Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5143846Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5143956Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5144042Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5144120Z err_msg = None
2025-02-24T15:52:32.5144123Z 
2025-02-24T15:52:32.5144244Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5144327Z         if err_msg is None:
2025-02-24T15:52:32.5144425Z             if left.shape != right.shape:
2025-02-24T15:52:32.5144511Z                 raise_assert_detail(
2025-02-24T15:52:32.5144666Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5144739Z                 )
2025-02-24T15:52:32.5144814Z     
2025-02-24T15:52:32.5144889Z             diff = 0
2025-02-24T15:52:32.5145006Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5145096Z                 # count up differences
2025-02-24T15:52:32.5145275Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5145358Z                     diff += 1
2025-02-24T15:52:32.5145428Z     
2025-02-24T15:52:32.5145518Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5145655Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5145834Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5145940Z E           AssertionError: Series are different
2025-02-24T15:52:32.5146014Z E           
2025-02-24T15:52:32.5146122Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5146502Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5146842Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5147175Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5147189Z 
2025-02-24T15:52:32.5147508Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5147806Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-24T15:52:32.5147810Z 
2025-02-24T15:52:32.5148034Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13050>
2025-02-24T15:52:32.5148294Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5148391Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5148395Z 
2025-02-24T15:52:32.5148542Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5148735Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5148822Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5148900Z         try:
2025-02-24T15:52:32.5149042Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5149128Z         except KeyError:
2025-02-24T15:52:32.5149264Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5149342Z     
2025-02-24T15:52:32.5149430Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5149533Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5149623Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5149761Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5149852Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5149949Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5150073Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5150090Z 
2025-02-24T15:52:32.5150215Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5150334Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5150346Z 
2025-02-24T15:52:32.5150496Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5150587Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5150710Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5150800Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5151047Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5151133Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5151248Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5151328Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5151408Z err_msg = None
2025-02-24T15:52:32.5151418Z 
2025-02-24T15:52:32.5151527Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5151614Z         if err_msg is None:
2025-02-24T15:52:32.5151712Z             if left.shape != right.shape:
2025-02-24T15:52:32.5151802Z                 raise_assert_detail(
2025-02-24T15:52:32.5151948Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5152025Z                 )
2025-02-24T15:52:32.5152099Z     
2025-02-24T15:52:32.5152173Z             diff = 0
2025-02-24T15:52:32.5152291Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5152381Z                 # count up differences
2025-02-24T15:52:32.5152558Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5152640Z                     diff += 1
2025-02-24T15:52:32.5152714Z     
2025-02-24T15:52:32.5152802Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5152943Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5153119Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5153229Z E           AssertionError: Series are different
2025-02-24T15:52:32.5153307Z E           
2025-02-24T15:52:32.5153409Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5153782Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5154373Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5155213Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5155222Z 
2025-02-24T15:52:32.5155596Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5155856Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-24T15:52:32.5155865Z 
2025-02-24T15:52:32.5155999Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5156140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5156241Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5156379Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5156502Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5156600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5156676Z err_msg = None
2025-02-24T15:52:32.5156679Z 
2025-02-24T15:52:32.5156795Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5156887Z         if err_msg is None:
2025-02-24T15:52:32.5156987Z             if left.shape != right.shape:
2025-02-24T15:52:32.5157080Z                 raise_assert_detail(
2025-02-24T15:52:32.5157233Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5157316Z                 )
2025-02-24T15:52:32.5157387Z     
2025-02-24T15:52:32.5157465Z             diff = 0
2025-02-24T15:52:32.5157578Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5157673Z                 # count up differences
2025-02-24T15:52:32.5157846Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5157929Z                     diff += 1
2025-02-24T15:52:32.5158009Z     
2025-02-24T15:52:32.5158099Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5158242Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5158417Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5158537Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5158609Z E           
2025-02-24T15:52:32.5158729Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5158997Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5159263Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5159267Z 
2025-02-24T15:52:32.5159665Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5159670Z 
2025-02-24T15:52:32.5159846Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5159923Z 
2025-02-24T15:52:32.5160157Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13290>
2025-02-24T15:52:32.5160358Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>, attr = 'nu'
2025-02-24T15:52:32.5160362Z 
2025-02-24T15:52:32.5160505Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5160627Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5160715Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5160791Z         try:
2025-02-24T15:52:32.5161064Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5161155Z         except KeyError:
2025-02-24T15:52:32.5161300Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5161378Z     
2025-02-24T15:52:32.5161467Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5161569Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5161688Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5161828Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5161922Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5162015Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5162131Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5162135Z 
2025-02-24T15:52:32.5162260Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5162381Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5162528Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5162605Z     ???
2025-02-24T15:52:32.5162717Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5162733Z 
2025-02-24T15:52:32.5162803Z >   ???
2025-02-24T15:52:32.5162937Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5163007Z E   
2025-02-24T15:52:32.5163141Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5163260Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5163336Z E          ...
2025-02-24T15:52:32.5163428Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5163568Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5163683Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5163761Z E          ...
2025-02-24T15:52:32.5163848Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5163978Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5164093Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5164097Z 
2025-02-24T15:52:32.5164192Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5164469Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-24T15:52:32.5164473Z 
2025-02-24T15:52:32.5164608Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5164742Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5164838Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5164979Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5165109Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5165204Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5165285Z err_msg = None
2025-02-24T15:52:32.5165289Z 
2025-02-24T15:52:32.5165401Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5165625Z         if err_msg is None:
2025-02-24T15:52:32.5165725Z             if left.shape != right.shape:
2025-02-24T15:52:32.5165817Z                 raise_assert_detail(
2025-02-24T15:52:32.5165962Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5166161Z                 )
2025-02-24T15:52:32.5166232Z     
2025-02-24T15:52:32.5166313Z             diff = 0
2025-02-24T15:52:32.5166430Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5166518Z                 # count up differences
2025-02-24T15:52:32.5166694Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5166774Z                     diff += 1
2025-02-24T15:52:32.5166848Z     
2025-02-24T15:52:32.5166935Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5167074Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5167250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5167370Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5167443Z E           
2025-02-24T15:52:32.5167560Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5167833Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5168096Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5168101Z 
2025-02-24T15:52:32.5168422Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5168425Z 
2025-02-24T15:52:32.5168602Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5168611Z 
2025-02-24T15:52:32.5168834Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13350>
2025-02-24T15:52:32.5169004Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5169087Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5169091Z 
2025-02-24T15:52:32.5169232Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5169346Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5169436Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5169508Z         try:
2025-02-24T15:52:32.5169653Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5169740Z         except KeyError:
2025-02-24T15:52:32.5169883Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5169957Z     
2025-02-24T15:52:32.5170045Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5170146Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5170242Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5170379Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5170466Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5170562Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5170672Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5170677Z 
2025-02-24T15:52:32.5170807Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5171046Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5171202Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5171278Z     ???
2025-02-24T15:52:32.5171508Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5171513Z 
2025-02-24T15:52:32.5171590Z >   ???
2025-02-24T15:52:32.5171719Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5171896Z E   
2025-02-24T15:52:32.5172028Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5172145Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5172226Z E          ...
2025-02-24T15:52:32.5172316Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5172452Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5172566Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5172642Z E          ...
2025-02-24T15:52:32.5172729Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5172860Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5173047Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5173062Z 
2025-02-24T15:52:32.5173226Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5173659Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-24T15:52:32.5173679Z 
2025-02-24T15:52:32.5173897Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5174126Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5174237Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5174377Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5174501Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5174600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5174677Z err_msg = None
2025-02-24T15:52:32.5174681Z 
2025-02-24T15:52:32.5174803Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5174890Z         if err_msg is None:
2025-02-24T15:52:32.5174986Z             if left.shape != right.shape:
2025-02-24T15:52:32.5175077Z                 raise_assert_detail(
2025-02-24T15:52:32.5175222Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5175296Z                 )
2025-02-24T15:52:32.5175365Z     
2025-02-24T15:52:32.5175445Z             diff = 0
2025-02-24T15:52:32.5175555Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5175648Z                 # count up differences
2025-02-24T15:52:32.5175817Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5175901Z                     diff += 1
2025-02-24T15:52:32.5175973Z     
2025-02-24T15:52:32.5176067Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5176206Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5176380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5176501Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5176574Z E           
2025-02-24T15:52:32.5176699Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5176959Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5177229Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5177326Z 
2025-02-24T15:52:32.5177647Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5177651Z 
2025-02-24T15:52:32.5177898Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5177903Z 
2025-02-24T15:52:32.5178136Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13410>
2025-02-24T15:52:32.5178337Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>, attr = 'f_lu'
2025-02-24T15:52:32.5178346Z 
2025-02-24T15:52:32.5178483Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5178602Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5178688Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5178765Z         try:
2025-02-24T15:52:32.5178907Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5178996Z         except KeyError:
2025-02-24T15:52:32.5179142Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5179217Z     
2025-02-24T15:52:32.5179307Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5179406Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5179502Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5179640Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5179735Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5179825Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5179943Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5179947Z 
2025-02-24T15:52:32.5180073Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5180191Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5180338Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5180415Z     ???
2025-02-24T15:52:32.5180531Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5180540Z 
2025-02-24T15:52:32.5180608Z >   ???
2025-02-24T15:52:32.5180744Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5180818Z E   
2025-02-24T15:52:32.5181061Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5181177Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5181252Z E          ...
2025-02-24T15:52:32.5181343Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5181481Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5181595Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5181672Z E          ...
2025-02-24T15:52:32.5181760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5181895Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5182005Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5182014Z 
2025-02-24T15:52:32.5182106Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5182423Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-24T15:52:32.5182431Z 
2025-02-24T15:52:32.5182655Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13a10>
2025-02-24T15:52:32.5182828Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5182922Z attr = 'stimulated_emission_factor'
2025-02-24T15:52:32.5182926Z 
2025-02-24T15:52:32.5183067Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5183188Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5183274Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5183352Z         try:
2025-02-24T15:52:32.5183493Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5183584Z         except KeyError:
2025-02-24T15:52:32.5183841Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5183922Z     
2025-02-24T15:52:32.5184011Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5184110Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5184305Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5184444Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5184532Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5184626Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5184741Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5184815Z             else:
2025-02-24T15:52:32.5184914Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5185022Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5185026Z 
2025-02-24T15:52:32.5185155Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5185275Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5185425Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5185498Z     ???
2025-02-24T15:52:32.5185612Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5185623Z 
2025-02-24T15:52:32.5193020Z >   ???
2025-02-24T15:52:32.5193399Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5193531Z E   
2025-02-24T15:52:32.5193845Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:52:32.5194517Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5199544Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.5204883Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.5205196Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:52:32.5205203Z 
2025-02-24T15:52:32.5205308Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5205613Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-24T15:52:32.5205619Z 
2025-02-24T15:52:32.5205763Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5205904Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5206016Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5206156Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5206287Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5206388Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5206473Z err_msg = None
2025-02-24T15:52:32.5206477Z 
2025-02-24T15:52:32.5206603Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5206688Z         if err_msg is None:
2025-02-24T15:52:32.5206798Z             if left.shape != right.shape:
2025-02-24T15:52:32.5206891Z                 raise_assert_detail(
2025-02-24T15:52:32.5207049Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5207129Z                 )
2025-02-24T15:52:32.5207205Z     
2025-02-24T15:52:32.5207281Z             diff = 0
2025-02-24T15:52:32.5207402Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5207501Z                 # count up differences
2025-02-24T15:52:32.5207677Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5207763Z                     diff += 1
2025-02-24T15:52:32.5207835Z     
2025-02-24T15:52:32.5207932Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5208074Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5208255Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5208456Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5208538Z E           
2025-02-24T15:52:32.5208655Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5208927Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5209275Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5209280Z 
2025-02-24T15:52:32.5209604Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5209608Z 
2025-02-24T15:52:32.5209791Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5209795Z 
2025-02-24T15:52:32.5210027Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13ad0>
2025-02-24T15:52:32.5210200Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5210295Z attr = 'previous_beta_sobolev'
2025-02-24T15:52:32.5210299Z 
2025-02-24T15:52:32.5210441Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5210567Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5210654Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5210793Z         try:
2025-02-24T15:52:32.5211171Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5211327Z         except KeyError:
2025-02-24T15:52:32.5211578Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5211663Z     
2025-02-24T15:52:32.5211762Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5211858Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5211953Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5212094Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5212187Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5212281Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5212399Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5212474Z             else:
2025-02-24T15:52:32.5212577Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5212692Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5212697Z 
2025-02-24T15:52:32.5212827Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5212954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5213108Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5213188Z     ???
2025-02-24T15:52:32.5213302Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5213306Z 
2025-02-24T15:52:32.5213386Z >   ???
2025-02-24T15:52:32.5213518Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5213593Z E   
2025-02-24T15:52:32.5213731Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5213847Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5213926Z E          ...
2025-02-24T15:52:32.5214018Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5214150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5214272Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5214346Z E          ...
2025-02-24T15:52:32.5214439Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5214702Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5214819Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5214823Z 
2025-02-24T15:52:32.5214918Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5215301Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-24T15:52:32.5215306Z 
2025-02-24T15:52:32.5215442Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5215578Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5215682Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5215825Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5215960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5216065Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5216149Z err_msg = None
2025-02-24T15:52:32.5216152Z 
2025-02-24T15:52:32.5216273Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5216359Z         if err_msg is None:
2025-02-24T15:52:32.5216469Z             if left.shape != right.shape:
2025-02-24T15:52:32.5216557Z                 raise_assert_detail(
2025-02-24T15:52:32.5216713Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5216787Z                 )
2025-02-24T15:52:32.5216862Z     
2025-02-24T15:52:32.5216940Z             diff = 0
2025-02-24T15:52:32.5217067Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5217161Z                 # count up differences
2025-02-24T15:52:32.5217342Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5217430Z                     diff += 1
2025-02-24T15:52:32.5217501Z     
2025-02-24T15:52:32.5217606Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5217747Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5217925Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5218046Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5218126Z E           
2025-02-24T15:52:32.5218242Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5218522Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5218816Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5218821Z 
2025-02-24T15:52:32.5219151Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5219159Z 
2025-02-24T15:52:32.5219337Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5219341Z 
2025-02-24T15:52:32.5219573Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13b90>
2025-02-24T15:52:32.5219743Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5219829Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5219833Z 
2025-02-24T15:52:32.5219974Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5220095Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5220183Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5220261Z         try:
2025-02-24T15:52:32.5220501Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5220592Z         except KeyError:
2025-02-24T15:52:32.5220732Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5220889Z     
2025-02-24T15:52:32.5221138Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5221236Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5221330Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5221462Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5221555Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5221643Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5221758Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5221832Z             else:
2025-02-24T15:52:32.5221936Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5222044Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5222079Z 
2025-02-24T15:52:32.5222242Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5222364Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5222531Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5222626Z     ???
2025-02-24T15:52:32.5222739Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5222743Z 
2025-02-24T15:52:32.5222818Z >   ???
2025-02-24T15:52:32.5222947Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5223022Z E   
2025-02-24T15:52:32.5223151Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5223270Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5223343Z E          ...
2025-02-24T15:52:32.5223437Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5223573Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5223692Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5223770Z E          ...
2025-02-24T15:52:32.5223858Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5223995Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5224101Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5224105Z 
2025-02-24T15:52:32.5224201Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5224474Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-24T15:52:32.5224478Z 
2025-02-24T15:52:32.5224621Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5224758Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5224858Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5225005Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5225131Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5225234Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5225316Z err_msg = None
2025-02-24T15:52:32.5225320Z 
2025-02-24T15:52:32.5225438Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5225521Z         if err_msg is None:
2025-02-24T15:52:32.5225622Z             if left.shape != right.shape:
2025-02-24T15:52:32.5225713Z                 raise_assert_detail(
2025-02-24T15:52:32.5225860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5225935Z                 )
2025-02-24T15:52:32.5226006Z     
2025-02-24T15:52:32.5226087Z             diff = 0
2025-02-24T15:52:32.5226197Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5226294Z                 # count up differences
2025-02-24T15:52:32.5226604Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5226694Z                     diff += 1
2025-02-24T15:52:32.5226764Z     
2025-02-24T15:52:32.5226963Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5227105Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5227279Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5227396Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5227471Z E           
2025-02-24T15:52:32.5227587Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5227852Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5228123Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5228135Z 
2025-02-24T15:52:32.5228452Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5228456Z 
2025-02-24T15:52:32.5228623Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5228628Z 
2025-02-24T15:52:32.5228863Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13c50>
2025-02-24T15:52:32.5229127Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5229280Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5229286Z 
2025-02-24T15:52:32.5229548Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5229756Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5229908Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5230039Z         try:
2025-02-24T15:52:32.5230288Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5230431Z         except KeyError:
2025-02-24T15:52:32.5230609Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5230682Z     
2025-02-24T15:52:32.5230779Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5230877Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5231075Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5231220Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5231308Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5231402Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5231520Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5231597Z             else:
2025-02-24T15:52:32.5231694Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5231809Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5231817Z 
2025-02-24T15:52:32.5231947Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5232070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5232220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5232298Z     ???
2025-02-24T15:52:32.5232419Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5232422Z 
2025-02-24T15:52:32.5232495Z >   ???
2025-02-24T15:52:32.5232631Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5232702Z E   
2025-02-24T15:52:32.5232837Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5233086Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5233170Z E          ...
2025-02-24T15:52:32.5233262Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5233398Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5233618Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5233698Z E          ...
2025-02-24T15:52:32.5233793Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5233920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5234031Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5234035Z 
2025-02-24T15:52:32.5234128Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5234398Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-24T15:52:32.5234403Z 
2025-02-24T15:52:32.5234539Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5234681Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5234786Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5234926Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5235057Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5235153Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5235234Z err_msg = None
2025-02-24T15:52:32.5235238Z 
2025-02-24T15:52:32.5235354Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5235442Z         if err_msg is None:
2025-02-24T15:52:32.5235540Z             if left.shape != right.shape:
2025-02-24T15:52:32.5235632Z                 raise_assert_detail(
2025-02-24T15:52:32.5235789Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5235868Z                 )
2025-02-24T15:52:32.5235947Z     
2025-02-24T15:52:32.5236023Z             diff = 0
2025-02-24T15:52:32.5236142Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5236232Z                 # count up differences
2025-02-24T15:52:32.5236418Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5236500Z                     diff += 1
2025-02-24T15:52:32.5236576Z     
2025-02-24T15:52:32.5236666Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5236809Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5236982Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5237100Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5237179Z E           
2025-02-24T15:52:32.5237292Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5237565Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5237834Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5237843Z 
2025-02-24T15:52:32.5238161Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5238165Z 
2025-02-24T15:52:32.5238345Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5238349Z 
2025-02-24T15:52:32.5238688Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd13dd0>
2025-02-24T15:52:32.5238867Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f887b6e2600>
2025-02-24T15:52:32.5238945Z attr = 'j_blues'
2025-02-24T15:52:32.5239021Z 
2025-02-24T15:52:32.5239167Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5239284Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5239376Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5239454Z         try:
2025-02-24T15:52:32.5239596Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5239683Z         except KeyError:
2025-02-24T15:52:32.5239824Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5239901Z     
2025-02-24T15:52:32.5240001Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5240107Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5240199Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5240341Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5240429Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5240523Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5240633Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5240717Z             else:
2025-02-24T15:52:32.5240815Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5241056Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5241061Z 
2025-02-24T15:52:32.5241195Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5241312Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5241462Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5241535Z     ???
2025-02-24T15:52:32.5241650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5241654Z 
2025-02-24T15:52:32.5241724Z >   ???
2025-02-24T15:52:32.5241859Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5241930Z E   
2025-02-24T15:52:32.5242061Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5242175Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5242257Z E          ...
2025-02-24T15:52:32.5242350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5242482Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5242602Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5242674Z E          ...
2025-02-24T15:52:32.5242765Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5242891Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5243002Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5243005Z 
2025-02-24T15:52:32.5243096Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5243301Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-24T15:52:32.5243304Z 
2025-02-24T15:52:32.5243436Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5243573Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5243676Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5243809Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5243939Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5244034Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5244116Z err_msg = None
2025-02-24T15:52:32.5244120Z 
2025-02-24T15:52:32.5244231Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5244318Z         if err_msg is None:
2025-02-24T15:52:32.5244536Z             if left.shape != right.shape:
2025-02-24T15:52:32.5244629Z                 raise_assert_detail(
2025-02-24T15:52:32.5244778Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5244851Z                 )
2025-02-24T15:52:32.5245049Z     
2025-02-24T15:52:32.5245124Z             diff = 0
2025-02-24T15:52:32.5245239Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5245333Z                 # count up differences
2025-02-24T15:52:32.5245509Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5245589Z                     diff += 1
2025-02-24T15:52:32.5245663Z     
2025-02-24T15:52:32.5245753Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5245895Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5246070Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5246190Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5246266Z E           
2025-02-24T15:52:32.5246379Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5246646Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5246917Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5246921Z 
2025-02-24T15:52:32.5247241Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5247245Z 
2025-02-24T15:52:32.5247422Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5247426Z 
2025-02-24T15:52:32.5247666Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd38b90>
2025-02-24T15:52:32.5247976Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5248104Z attr = 'lines'
2025-02-24T15:52:32.5248118Z 
2025-02-24T15:52:32.5248356Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5248557Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5248700Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5248829Z         try:
2025-02-24T15:52:32.5249064Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5249215Z         except KeyError:
2025-02-24T15:52:32.5249365Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5249439Z     
2025-02-24T15:52:32.5249537Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5249636Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5249728Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5249866Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5249963Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5250054Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5250168Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5250241Z             else:
2025-02-24T15:52:32.5250340Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5250447Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5250451Z 
2025-02-24T15:52:32.5250581Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5250696Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5250850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5251168Z     ???
2025-02-24T15:52:32.5251290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5251294Z 
2025-02-24T15:52:32.5251368Z >   ???
2025-02-24T15:52:32.5251603Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5251678Z E   
2025-02-24T15:52:32.5251809Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5251924Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5251997Z E          ...
2025-02-24T15:52:32.5252091Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5252220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5252336Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5252412Z E          ...
2025-02-24T15:52:32.5252499Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5252636Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5252743Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5252748Z 
2025-02-24T15:52:32.5252842Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5253079Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-24T15:52:32.5253088Z 
2025-02-24T15:52:32.5253317Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd38c50>
2025-02-24T15:52:32.5253488Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5253582Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5253586Z 
2025-02-24T15:52:32.5253730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5253844Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5253932Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5254006Z         try:
2025-02-24T15:52:32.5254151Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5254239Z         except KeyError:
2025-02-24T15:52:32.5254380Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5254452Z     
2025-02-24T15:52:32.5254544Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5254644Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5254737Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5254871Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5254959Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5255056Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5255167Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5255171Z 
2025-02-24T15:52:32.5255299Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5255413Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5255417Z 
2025-02-24T15:52:32.5255564Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5255650Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5255761Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5255852Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5255993Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5256081Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5256186Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5256270Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5256345Z err_msg = None
2025-02-24T15:52:32.5256349Z 
2025-02-24T15:52:32.5256459Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5256541Z         if err_msg is None:
2025-02-24T15:52:32.5256642Z             if left.shape != right.shape:
2025-02-24T15:52:32.5256732Z                 raise_assert_detail(
2025-02-24T15:52:32.5256961Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5257044Z                 )
2025-02-24T15:52:32.5257116Z     
2025-02-24T15:52:32.5257195Z             diff = 0
2025-02-24T15:52:32.5257383Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5257478Z                 # count up differences
2025-02-24T15:52:32.5257651Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5257733Z                     diff += 1
2025-02-24T15:52:32.5257805Z     
2025-02-24T15:52:32.5257896Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5258032Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5258207Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5258316Z E           AssertionError: Series are different
2025-02-24T15:52:32.5258390Z E           
2025-02-24T15:52:32.5258504Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5258879Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5259223Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5259562Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5259572Z 
2025-02-24T15:52:32.5259887Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5260127Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-24T15:52:32.5260131Z 
2025-02-24T15:52:32.5260358Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd38d10>
2025-02-24T15:52:32.5260527Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5260624Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5260628Z 
2025-02-24T15:52:32.5260765Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5260887Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5261094Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5261171Z         try:
2025-02-24T15:52:32.5261313Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5261407Z         except KeyError:
2025-02-24T15:52:32.5261543Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5261653Z     
2025-02-24T15:52:32.5261746Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5261841Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5261933Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5262066Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5262155Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5262245Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5262357Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5262361Z 
2025-02-24T15:52:32.5262608Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5262732Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5262735Z 
2025-02-24T15:52:32.5262875Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5263064Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5263175Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5263256Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5263399Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5263484Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5263597Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5263677Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5263756Z err_msg = None
2025-02-24T15:52:32.5263760Z 
2025-02-24T15:52:32.5263876Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5263960Z         if err_msg is None:
2025-02-24T15:52:32.5264059Z             if left.shape != right.shape:
2025-02-24T15:52:32.5264145Z                 raise_assert_detail(
2025-02-24T15:52:32.5264298Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5264372Z                 )
2025-02-24T15:52:32.5264445Z     
2025-02-24T15:52:32.5264519Z             diff = 0
2025-02-24T15:52:32.5264635Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5264726Z                 # count up differences
2025-02-24T15:52:32.5264901Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5264982Z                     diff += 1
2025-02-24T15:52:32.5265060Z     
2025-02-24T15:52:32.5265151Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5265288Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5265468Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5265574Z E           AssertionError: Series are different
2025-02-24T15:52:32.5265650Z E           
2025-02-24T15:52:32.5265754Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5266135Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5266850Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5267527Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5267550Z 
2025-02-24T15:52:32.5267903Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5268103Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-24T15:52:32.5268106Z 
2025-02-24T15:52:32.5268237Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5268469Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5268573Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5268808Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5268931Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5269032Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5269112Z err_msg = None
2025-02-24T15:52:32.5269115Z 
2025-02-24T15:52:32.5269224Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5269312Z         if err_msg is None:
2025-02-24T15:52:32.5269409Z             if left.shape != right.shape:
2025-02-24T15:52:32.5269499Z                 raise_assert_detail(
2025-02-24T15:52:32.5269647Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5269729Z                 )
2025-02-24T15:52:32.5269799Z     
2025-02-24T15:52:32.5269877Z             diff = 0
2025-02-24T15:52:32.5269989Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5270090Z                 # count up differences
2025-02-24T15:52:32.5270264Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5270344Z                     diff += 1
2025-02-24T15:52:32.5270419Z     
2025-02-24T15:52:32.5270507Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5270646Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5270815Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5271046Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5271122Z E           
2025-02-24T15:52:32.5271239Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5271508Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5271778Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5271782Z 
2025-02-24T15:52:32.5272096Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5272100Z 
2025-02-24T15:52:32.5272277Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5272281Z 
2025-02-24T15:52:32.5272509Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd38f50>
2025-02-24T15:52:32.5272716Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>, attr = 'nu'
2025-02-24T15:52:32.5272720Z 
2025-02-24T15:52:32.5272866Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5272987Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5273073Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5273150Z         try:
2025-02-24T15:52:32.5273293Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5273378Z         except KeyError:
2025-02-24T15:52:32.5273520Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5273589Z     
2025-02-24T15:52:32.5273684Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5273780Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5273874Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5274126Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5274221Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5274313Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5274428Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5274537Z 
2025-02-24T15:52:32.5274667Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5274786Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5274938Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5275010Z     ???
2025-02-24T15:52:32.5275126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5275130Z 
2025-02-24T15:52:32.5275198Z >   ???
2025-02-24T15:52:32.5275328Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5275397Z E   
2025-02-24T15:52:32.5275528Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5275647Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5275723Z E          ...
2025-02-24T15:52:32.5275810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5275945Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5276068Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5276141Z E          ...
2025-02-24T15:52:32.5276233Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5276357Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5276465Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5276469Z 
2025-02-24T15:52:32.5276560Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5276768Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-24T15:52:32.5276772Z 
2025-02-24T15:52:32.5276902Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5277042Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5277144Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5277283Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5277416Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5277511Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5277592Z err_msg = None
2025-02-24T15:52:32.5277596Z 
2025-02-24T15:52:32.5277708Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5277795Z         if err_msg is None:
2025-02-24T15:52:32.5277891Z             if left.shape != right.shape:
2025-02-24T15:52:32.5277980Z                 raise_assert_detail(
2025-02-24T15:52:32.5278127Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5278203Z                 )
2025-02-24T15:52:32.5278277Z     
2025-02-24T15:52:32.5278352Z             diff = 0
2025-02-24T15:52:32.5278468Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5278559Z                 # count up differences
2025-02-24T15:52:32.5278739Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5278818Z                     diff += 1
2025-02-24T15:52:32.5278894Z     
2025-02-24T15:52:32.5278985Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5279126Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5279299Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5279413Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5279489Z E           
2025-02-24T15:52:32.5279606Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5279957Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5280296Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5280304Z 
2025-02-24T15:52:32.5280615Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5280620Z 
2025-02-24T15:52:32.5280791Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5280795Z 
2025-02-24T15:52:32.5281148Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd39010>
2025-02-24T15:52:32.5281323Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5281404Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5281413Z 
2025-02-24T15:52:32.5281556Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5281676Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5281763Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5281839Z         try:
2025-02-24T15:52:32.5281980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5282065Z         except KeyError:
2025-02-24T15:52:32.5282203Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5282278Z     
2025-02-24T15:52:32.5282368Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5282466Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5282555Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5282695Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5282784Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5282878Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5283000Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5283003Z 
2025-02-24T15:52:32.5283128Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5283250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5283398Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5283475Z     ???
2025-02-24T15:52:32.5283588Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5283592Z 
2025-02-24T15:52:32.5283666Z >   ???
2025-02-24T15:52:32.5283794Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5283870Z E   
2025-02-24T15:52:32.5284004Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5284120Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5284198Z E          ...
2025-02-24T15:52:32.5284287Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5284429Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5284544Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5284685Z E          ...
2025-02-24T15:52:32.5284840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5285069Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5285250Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5285265Z 
2025-02-24T15:52:32.5285424Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5285768Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-24T15:52:32.5285774Z 
2025-02-24T15:52:32.5285993Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5286331Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5286441Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5286684Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5286809Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5286908Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5286990Z err_msg = None
2025-02-24T15:52:32.5286994Z 
2025-02-24T15:52:32.5287105Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5287194Z         if err_msg is None:
2025-02-24T15:52:32.5287291Z             if left.shape != right.shape:
2025-02-24T15:52:32.5287385Z                 raise_assert_detail(
2025-02-24T15:52:32.5287532Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5287615Z                 )
2025-02-24T15:52:32.5287686Z     
2025-02-24T15:52:32.5287766Z             diff = 0
2025-02-24T15:52:32.5287880Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5287983Z                 # count up differences
2025-02-24T15:52:32.5288159Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5288241Z                     diff += 1
2025-02-24T15:52:32.5288318Z     
2025-02-24T15:52:32.5288410Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5288553Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5288725Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5288842Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5288916Z E           
2025-02-24T15:52:32.5289035Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5289303Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5289578Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5289582Z 
2025-02-24T15:52:32.5289894Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5289899Z 
2025-02-24T15:52:32.5290069Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5290078Z 
2025-02-24T15:52:32.5290309Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd390d0>
2025-02-24T15:52:32.5290521Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>, attr = 'f_lu'
2025-02-24T15:52:32.5290528Z 
2025-02-24T15:52:32.5290667Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5290787Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5290874Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5291059Z         try:
2025-02-24T15:52:32.5291204Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5291293Z         except KeyError:
2025-02-24T15:52:32.5291431Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5291505Z     
2025-02-24T15:52:32.5291602Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5291697Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5291795Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5292077Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5292176Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5292267Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5292506Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5292510Z 
2025-02-24T15:52:32.5292638Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5292754Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5292905Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5292982Z     ???
2025-02-24T15:52:32.5293097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5293101Z 
2025-02-24T15:52:32.5293171Z >   ???
2025-02-24T15:52:32.5293303Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5293373Z E   
2025-02-24T15:52:32.5293508Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5293625Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5293704Z E          ...
2025-02-24T15:52:32.5293794Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5293935Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5294048Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5294128Z E          ...
2025-02-24T15:52:32.5294218Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5294345Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5294453Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5294457Z 
2025-02-24T15:52:32.5294546Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5294795Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-24T15:52:32.5294799Z 
2025-02-24T15:52:32.5295032Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd396d0>
2025-02-24T15:52:32.5295207Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5295307Z attr = 'stimulated_emission_factor'
2025-02-24T15:52:32.5295311Z 
2025-02-24T15:52:32.5295452Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5295573Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5295660Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5295737Z         try:
2025-02-24T15:52:32.5295880Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5295967Z         except KeyError:
2025-02-24T15:52:32.5296105Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5296181Z     
2025-02-24T15:52:32.5296271Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5296369Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5296459Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5296602Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5296694Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5296786Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5296901Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5296978Z             else:
2025-02-24T15:52:32.5297077Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5297187Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5297191Z 
2025-02-24T15:52:32.5297322Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5297436Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5297588Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5297663Z     ???
2025-02-24T15:52:32.5297773Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5297777Z 
2025-02-24T15:52:32.5297852Z >   ???
2025-02-24T15:52:32.5298116Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5298194Z E   
2025-02-24T15:52:32.5298364Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:52:32.5298816Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5304198Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.5309242Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.5309603Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:52:32.5309617Z 
2025-02-24T15:52:32.5309779Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5310188Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-24T15:52:32.5310197Z 
2025-02-24T15:52:32.5310424Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5310656Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5310829Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5311196Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5311420Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5311545Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5311629Z err_msg = None
2025-02-24T15:52:32.5311633Z 
2025-02-24T15:52:32.5311749Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5311838Z         if err_msg is None:
2025-02-24T15:52:32.5311936Z             if left.shape != right.shape:
2025-02-24T15:52:32.5312026Z                 raise_assert_detail(
2025-02-24T15:52:32.5312172Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5312250Z                 )
2025-02-24T15:52:32.5312321Z     
2025-02-24T15:52:32.5312400Z             diff = 0
2025-02-24T15:52:32.5312519Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5312618Z                 # count up differences
2025-02-24T15:52:32.5312796Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5312881Z                     diff += 1
2025-02-24T15:52:32.5312957Z     
2025-02-24T15:52:32.5313049Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5313191Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5313361Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5313479Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5313552Z E           
2025-02-24T15:52:32.5313670Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5313943Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5314208Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5314216Z 
2025-02-24T15:52:32.5314529Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5314533Z 
2025-02-24T15:52:32.5314710Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5314714Z 
2025-02-24T15:52:32.5314938Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd39790>
2025-02-24T15:52:32.5315112Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5315343Z attr = 'previous_beta_sobolev'
2025-02-24T15:52:32.5315349Z 
2025-02-24T15:52:32.5315500Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5315619Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5315814Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5315891Z         try:
2025-02-24T15:52:32.5316036Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5316120Z         except KeyError:
2025-02-24T15:52:32.5316263Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5316337Z     
2025-02-24T15:52:32.5316427Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5316523Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5316616Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5316753Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5316842Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5316943Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5317057Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5317136Z             else:
2025-02-24T15:52:32.5317234Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5317353Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5317357Z 
2025-02-24T15:52:32.5317489Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5317606Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5317758Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5317833Z     ???
2025-02-24T15:52:32.5317948Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5317952Z 
2025-02-24T15:52:32.5318024Z >   ???
2025-02-24T15:52:32.5318158Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5318233Z E   
2025-02-24T15:52:32.5318375Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5318496Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5318572Z E          ...
2025-02-24T15:52:32.5318670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5318806Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5318927Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5319001Z E          ...
2025-02-24T15:52:32.5319092Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5319217Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5319328Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5319331Z 
2025-02-24T15:52:32.5319422Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5319632Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-24T15:52:32.5319636Z 
2025-02-24T15:52:32.5319775Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5319904Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5320011Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5320148Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5320279Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5320376Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5320459Z err_msg = None
2025-02-24T15:52:32.5320463Z 
2025-02-24T15:52:32.5320579Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5320664Z         if err_msg is None:
2025-02-24T15:52:32.5320765Z             if left.shape != right.shape:
2025-02-24T15:52:32.5320853Z                 raise_assert_detail(
2025-02-24T15:52:32.5321267Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5321345Z                 )
2025-02-24T15:52:32.5321421Z     
2025-02-24T15:52:32.5321497Z             diff = 0
2025-02-24T15:52:32.5321617Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5321811Z                 # count up differences
2025-02-24T15:52:32.5321989Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5322069Z                     diff += 1
2025-02-24T15:52:32.5322145Z     
2025-02-24T15:52:32.5322239Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5322376Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5322551Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5322664Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5322741Z E           
2025-02-24T15:52:32.5322862Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5323128Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5323406Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5323410Z 
2025-02-24T15:52:32.5323714Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5323718Z 
2025-02-24T15:52:32.5323890Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5323899Z 
2025-02-24T15:52:32.5324122Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd39850>
2025-02-24T15:52:32.5324294Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5324386Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5324391Z 
2025-02-24T15:52:32.5324532Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5324653Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5324740Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5324816Z         try:
2025-02-24T15:52:32.5324958Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5325044Z         except KeyError:
2025-02-24T15:52:32.5325183Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5325259Z     
2025-02-24T15:52:32.5325349Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5325448Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5325545Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5325678Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5325770Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5325867Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5325983Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5326061Z             else:
2025-02-24T15:52:32.5326160Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5326268Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5326271Z 
2025-02-24T15:52:32.5326402Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5326516Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5326667Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5326743Z     ???
2025-02-24T15:52:32.5326941Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5326946Z 
2025-02-24T15:52:32.5327023Z >   ???
2025-02-24T15:52:32.5327151Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5327225Z E   
2025-02-24T15:52:32.5327436Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5327558Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5327631Z E          ...
2025-02-24T15:52:32.5327725Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5327859Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5327977Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5328055Z E          ...
2025-02-24T15:52:32.5328142Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5328275Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5328383Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5328387Z 
2025-02-24T15:52:32.5328550Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5328915Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-24T15:52:32.5328923Z 
2025-02-24T15:52:32.5329156Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5329392Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5329551Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5329783Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5329992Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5330095Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5330173Z err_msg = None
2025-02-24T15:52:32.5330177Z 
2025-02-24T15:52:32.5330293Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5330382Z         if err_msg is None:
2025-02-24T15:52:32.5330484Z             if left.shape != right.shape:
2025-02-24T15:52:32.5330575Z                 raise_assert_detail(
2025-02-24T15:52:32.5330721Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5330804Z                 )
2025-02-24T15:52:32.5330875Z     
2025-02-24T15:52:32.5331056Z             diff = 0
2025-02-24T15:52:32.5331172Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5331266Z                 # count up differences
2025-02-24T15:52:32.5331436Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5331519Z                     diff += 1
2025-02-24T15:52:32.5331590Z     
2025-02-24T15:52:32.5331684Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5331821Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5332001Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5332120Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5332193Z E           
2025-02-24T15:52:32.5332310Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5332575Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5332845Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5332850Z 
2025-02-24T15:52:32.5333293Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5333298Z 
2025-02-24T15:52:32.5333474Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5333578Z 
2025-02-24T15:52:32.5333810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd39910>
2025-02-24T15:52:32.5333980Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5334065Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5334069Z 
2025-02-24T15:52:32.5334211Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5334327Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5334418Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5334494Z         try:
2025-02-24T15:52:32.5334640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5334722Z         except KeyError:
2025-02-24T15:52:32.5334871Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5334943Z     
2025-02-24T15:52:32.5335037Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5335133Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5335235Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5335367Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5335458Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5335552Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5335663Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5335741Z             else:
2025-02-24T15:52:32.5335838Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5335950Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5335954Z 
2025-02-24T15:52:32.5336085Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5336211Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5336359Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5336436Z     ???
2025-02-24T15:52:32.5336553Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5336561Z 
2025-02-24T15:52:32.5336632Z >   ???
2025-02-24T15:52:32.5336767Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5336838Z E   
2025-02-24T15:52:32.5336972Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5337086Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5337164Z E          ...
2025-02-24T15:52:32.5337252Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5337385Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5337500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5337574Z E          ...
2025-02-24T15:52:32.5337666Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5337797Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5337908Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5337912Z 
2025-02-24T15:52:32.5338008Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5338216Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-24T15:52:32.5338219Z 
2025-02-24T15:52:32.5338351Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5338484Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5338583Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5338724Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5338854Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5339033Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5339118Z err_msg = None
2025-02-24T15:52:32.5339122Z 
2025-02-24T15:52:32.5339233Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5339416Z         if err_msg is None:
2025-02-24T15:52:32.5339514Z             if left.shape != right.shape:
2025-02-24T15:52:32.5339604Z                 raise_assert_detail(
2025-02-24T15:52:32.5339749Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5339830Z                 )
2025-02-24T15:52:32.5339906Z     
2025-02-24T15:52:32.5339981Z             diff = 0
2025-02-24T15:52:32.5340098Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5340188Z                 # count up differences
2025-02-24T15:52:32.5340362Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5340443Z                     diff += 1
2025-02-24T15:52:32.5340517Z     
2025-02-24T15:52:32.5340612Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5340753Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5341044Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5341171Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5341244Z E           
2025-02-24T15:52:32.5341361Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5341626Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5341894Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5341899Z 
2025-02-24T15:52:32.5342214Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5342217Z 
2025-02-24T15:52:32.5342395Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5342399Z 
2025-02-24T15:52:32.5342621Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd39a90>
2025-02-24T15:52:32.5342794Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8861ed66c0>
2025-02-24T15:52:32.5342870Z attr = 'j_blues'
2025-02-24T15:52:32.5342874Z 
2025-02-24T15:52:32.5343017Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5343135Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5343227Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5343303Z         try:
2025-02-24T15:52:32.5343449Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5343536Z         except KeyError:
2025-02-24T15:52:32.5343686Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5343803Z     
2025-02-24T15:52:32.5343893Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5343994Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5344085Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5344222Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5344310Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5344405Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5344515Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5344593Z             else:
2025-02-24T15:52:32.5344694Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5344922Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5344927Z 
2025-02-24T15:52:32.5345059Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5345172Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5345428Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5345502Z     ???
2025-02-24T15:52:32.5345617Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5345621Z 
2025-02-24T15:52:32.5345691Z >   ???
2025-02-24T15:52:32.5345822Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5345899Z E   
2025-02-24T15:52:32.5346028Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5346147Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5346221Z E          ...
2025-02-24T15:52:32.5346313Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5346448Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5346568Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5346641Z E          ...
2025-02-24T15:52:32.5346733Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5346867Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5346978Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5346982Z 
2025-02-24T15:52:32.5347076Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5347306Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-24T15:52:32.5347310Z 
2025-02-24T15:52:32.5347443Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5347571Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5347671Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5347811Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5348019Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5348205Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5348340Z err_msg = None
2025-02-24T15:52:32.5348346Z 
2025-02-24T15:52:32.5348535Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5348676Z         if err_msg is None:
2025-02-24T15:52:32.5348839Z             if left.shape != right.shape:
2025-02-24T15:52:32.5348982Z                 raise_assert_detail(
2025-02-24T15:52:32.5349228Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5349351Z                 )
2025-02-24T15:52:32.5349480Z     
2025-02-24T15:52:32.5349559Z             diff = 0
2025-02-24T15:52:32.5349679Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5349769Z                 # count up differences
2025-02-24T15:52:32.5349951Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5350036Z                     diff += 1
2025-02-24T15:52:32.5350108Z     
2025-02-24T15:52:32.5350206Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5350344Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5350520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5350632Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5350709Z E           
2025-02-24T15:52:32.5350822Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5351332Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5351611Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5351721Z 
2025-02-24T15:52:32.5352031Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5352035Z 
2025-02-24T15:52:32.5352210Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5352214Z 
2025-02-24T15:52:32.5352444Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3a810>
2025-02-24T15:52:32.5352612Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5352692Z attr = 'lines'
2025-02-24T15:52:32.5352697Z 
2025-02-24T15:52:32.5352841Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5352962Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5353047Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5353130Z         try:
2025-02-24T15:52:32.5353272Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5353358Z         except KeyError:
2025-02-24T15:52:32.5353501Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5353578Z     
2025-02-24T15:52:32.5353671Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5353765Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5353858Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5353992Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5354082Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5354173Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5354291Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5354366Z             else:
2025-02-24T15:52:32.5354466Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5354573Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5354586Z 
2025-02-24T15:52:32.5354712Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5354833Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5354982Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5355059Z     ???
2025-02-24T15:52:32.5355171Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5355176Z 
2025-02-24T15:52:32.5355250Z >   ???
2025-02-24T15:52:32.5355377Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5355452Z E   
2025-02-24T15:52:32.5355581Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5355702Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5355779Z E          ...
2025-02-24T15:52:32.5355870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5356004Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5356123Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5356201Z E          ...
2025-02-24T15:52:32.5356290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5356421Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5356529Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5356533Z 
2025-02-24T15:52:32.5356630Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5356861Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-24T15:52:32.5356870Z 
2025-02-24T15:52:32.5357093Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3a8d0>
2025-02-24T15:52:32.5357354Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5357449Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5357453Z 
2025-02-24T15:52:32.5357598Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5357807Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5357897Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5357970Z         try:
2025-02-24T15:52:32.5358116Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5358199Z         except KeyError:
2025-02-24T15:52:32.5358344Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5358420Z     
2025-02-24T15:52:32.5358509Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5358610Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5358700Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5358836Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5358929Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5359024Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5359134Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5359143Z 
2025-02-24T15:52:32.5359274Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5359388Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5359396Z 
2025-02-24T15:52:32.5359535Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5359627Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5359739Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5359826Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5359966Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5360058Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5360167Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5360252Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5360330Z err_msg = None
2025-02-24T15:52:32.5360343Z 
2025-02-24T15:52:32.5360453Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5360542Z         if err_msg is None:
2025-02-24T15:52:32.5360640Z             if left.shape != right.shape:
2025-02-24T15:52:32.5360733Z                 raise_assert_detail(
2025-02-24T15:52:32.5360880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5361079Z                 )
2025-02-24T15:52:32.5361152Z     
2025-02-24T15:52:32.5361231Z             diff = 0
2025-02-24T15:52:32.5361343Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5361437Z                 # count up differences
2025-02-24T15:52:32.5361610Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5361725Z                     diff += 1
2025-02-24T15:52:32.5361801Z     
2025-02-24T15:52:32.5361891Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5362031Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5362207Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5362315Z E           AssertionError: Series are different
2025-02-24T15:52:32.5362389Z E           
2025-02-24T15:52:32.5362497Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5362870Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5363327Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5363788Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5363793Z 
2025-02-24T15:52:32.5364115Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5364346Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-24T15:52:32.5364350Z 
2025-02-24T15:52:32.5364575Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3a990>
2025-02-24T15:52:32.5364749Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5364846Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5364850Z 
2025-02-24T15:52:32.5364989Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5365109Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5365199Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5365273Z         try:
2025-02-24T15:52:32.5365419Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5365502Z         except KeyError:
2025-02-24T15:52:32.5365644Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5365715Z     
2025-02-24T15:52:32.5365809Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5365909Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5366006Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5366138Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5366234Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5366325Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5366441Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5366445Z 
2025-02-24T15:52:32.5366576Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5366691Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5366701Z 
2025-02-24T15:52:32.5366950Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5367098Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5367293Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5367445Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5367693Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5367842Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5368030Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5368171Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5368290Z err_msg = None
2025-02-24T15:52:32.5368295Z 
2025-02-24T15:52:32.5368410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5368494Z         if err_msg is None:
2025-02-24T15:52:32.5368593Z             if left.shape != right.shape:
2025-02-24T15:52:32.5368680Z                 raise_assert_detail(
2025-02-24T15:52:32.5368829Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5368903Z                 )
2025-02-24T15:52:32.5368978Z     
2025-02-24T15:52:32.5369052Z             diff = 0
2025-02-24T15:52:32.5369267Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5369367Z                 # count up differences
2025-02-24T15:52:32.5369537Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5369707Z                     diff += 1
2025-02-24T15:52:32.5369779Z     
2025-02-24T15:52:32.5369875Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5370012Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5370191Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5370295Z E           AssertionError: Series are different
2025-02-24T15:52:32.5370373Z E           
2025-02-24T15:52:32.5370478Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5370860Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5371360Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5371751Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5371756Z 
2025-02-24T15:52:32.5372069Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5372275Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-24T15:52:32.5372279Z 
2025-02-24T15:52:32.5372411Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5372545Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5372651Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5372786Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5372917Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5373016Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5373098Z err_msg = None
2025-02-24T15:52:32.5373102Z 
2025-02-24T15:52:32.5373211Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5373304Z         if err_msg is None:
2025-02-24T15:52:32.5373402Z             if left.shape != right.shape:
2025-02-24T15:52:32.5373491Z                 raise_assert_detail(
2025-02-24T15:52:32.5373640Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5373712Z                 )
2025-02-24T15:52:32.5373787Z     
2025-02-24T15:52:32.5373861Z             diff = 0
2025-02-24T15:52:32.5373985Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5374073Z                 # count up differences
2025-02-24T15:52:32.5374250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5374335Z                     diff += 1
2025-02-24T15:52:32.5374413Z     
2025-02-24T15:52:32.5374625Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5374770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5374942Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5375162Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5375240Z E           
2025-02-24T15:52:32.5375359Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5375625Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5375893Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5375903Z 
2025-02-24T15:52:32.5376209Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5376213Z 
2025-02-24T15:52:32.5376390Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5376394Z 
2025-02-24T15:52:32.5376619Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3abd0>
2025-02-24T15:52:32.5376824Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>, attr = 'nu'
2025-02-24T15:52:32.5376828Z 
2025-02-24T15:52:32.5376968Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5377090Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5377182Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5377260Z         try:
2025-02-24T15:52:32.5377411Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5377494Z         except KeyError:
2025-02-24T15:52:32.5377639Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5377716Z     
2025-02-24T15:52:32.5377811Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5377906Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5378004Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5378137Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5378231Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5378322Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5378436Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5378440Z 
2025-02-24T15:52:32.5378569Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5378691Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5378844Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5378931Z     ???
2025-02-24T15:52:32.5379049Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5379057Z 
2025-02-24T15:52:32.5379129Z >   ???
2025-02-24T15:52:32.5379262Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5379334Z E   
2025-02-24T15:52:32.5379474Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5379593Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5379666Z E          ...
2025-02-24T15:52:32.5379761Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5379892Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5380017Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5380097Z E          ...
2025-02-24T15:52:32.5380274Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5380405Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5380516Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5380520Z 
2025-02-24T15:52:32.5380690Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5380898Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-24T15:52:32.5380901Z 
2025-02-24T15:52:32.5381162Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5381294Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5381403Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5381540Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5381670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5381771Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5381854Z err_msg = None
2025-02-24T15:52:32.5381858Z 
2025-02-24T15:52:32.5381978Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5382067Z         if err_msg is None:
2025-02-24T15:52:32.5382168Z             if left.shape != right.shape:
2025-02-24T15:52:32.5382255Z                 raise_assert_detail(
2025-02-24T15:52:32.5382406Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5382480Z                 )
2025-02-24T15:52:32.5382555Z     
2025-02-24T15:52:32.5382630Z             diff = 0
2025-02-24T15:52:32.5382748Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5382838Z                 # count up differences
2025-02-24T15:52:32.5383014Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5383100Z                     diff += 1
2025-02-24T15:52:32.5383174Z     
2025-02-24T15:52:32.5383277Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5383415Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5383593Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5383710Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5383788Z E           
2025-02-24T15:52:32.5383903Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5384171Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5384443Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5384448Z 
2025-02-24T15:52:32.5384762Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5384767Z 
2025-02-24T15:52:32.5384944Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5384948Z 
2025-02-24T15:52:32.5385177Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3ac90>
2025-02-24T15:52:32.5385352Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5385441Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5385445Z 
2025-02-24T15:52:32.5385584Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5385703Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5385793Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5386013Z         try:
2025-02-24T15:52:32.5386159Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5386250Z         except KeyError:
2025-02-24T15:52:32.5386391Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5386570Z     
2025-02-24T15:52:32.5386668Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5430045Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5430258Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5430521Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5430676Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5430849Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5431184Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5431198Z 
2025-02-24T15:52:32.5431427Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5431640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5431897Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5431977Z     ???
2025-02-24T15:52:32.5432097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5432110Z 
2025-02-24T15:52:32.5432182Z >   ???
2025-02-24T15:52:32.5432326Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5432399Z E   
2025-02-24T15:52:32.5432543Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5432663Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5432743Z E          ...
2025-02-24T15:52:32.5432835Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5432975Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5433100Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5433175Z E          ...
2025-02-24T15:52:32.5433274Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5433412Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5433522Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5433531Z 
2025-02-24T15:52:32.5433630Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5433840Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-24T15:52:32.5433844Z 
2025-02-24T15:52:32.5433979Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5434116Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5434217Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5434357Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5434481Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5434581Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5434657Z err_msg = None
2025-02-24T15:52:32.5434664Z 
2025-02-24T15:52:32.5434780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5434874Z         if err_msg is None:
2025-02-24T15:52:32.5434975Z             if left.shape != right.shape:
2025-02-24T15:52:32.5435065Z                 raise_assert_detail(
2025-02-24T15:52:32.5435218Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5435293Z                 )
2025-02-24T15:52:32.5435362Z     
2025-02-24T15:52:32.5435441Z             diff = 0
2025-02-24T15:52:32.5435556Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5435648Z                 # count up differences
2025-02-24T15:52:32.5435821Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5435905Z                     diff += 1
2025-02-24T15:52:32.5436162Z     
2025-02-24T15:52:32.5436259Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5436403Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5436580Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5436815Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5436888Z E           
2025-02-24T15:52:32.5437006Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5437273Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5437546Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5437557Z 
2025-02-24T15:52:32.5437885Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5437889Z 
2025-02-24T15:52:32.5438062Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5438067Z 
2025-02-24T15:52:32.5438293Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3ad50>
2025-02-24T15:52:32.5438501Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>, attr = 'f_lu'
2025-02-24T15:52:32.5438505Z 
2025-02-24T15:52:32.5438646Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5438768Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5438854Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5438936Z         try:
2025-02-24T15:52:32.5439080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5439164Z         except KeyError:
2025-02-24T15:52:32.5439305Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5439382Z     
2025-02-24T15:52:32.5439470Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5439567Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5439661Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5439795Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5439889Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5439981Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5440096Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5440100Z 
2025-02-24T15:52:32.5440228Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5440350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5440501Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5440575Z     ???
2025-02-24T15:52:32.5440685Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5440697Z 
2025-02-24T15:52:32.5440765Z >   ???
2025-02-24T15:52:32.5440895Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5441158Z E   
2025-02-24T15:52:32.5441336Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5441451Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5441526Z E          ...
2025-02-24T15:52:32.5441615Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5441749Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5441863Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5441938Z E          ...
2025-02-24T15:52:32.5442153Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5442287Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5442398Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5442505Z 
2025-02-24T15:52:32.5442599Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5442810Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-24T15:52:32.5442814Z 
2025-02-24T15:52:32.5442944Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5443078Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5443177Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5443314Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5443441Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5443542Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5443623Z err_msg = None
2025-02-24T15:52:32.5443626Z 
2025-02-24T15:52:32.5443745Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5443836Z         if err_msg is None:
2025-02-24T15:52:32.5443936Z             if left.shape != right.shape:
2025-02-24T15:52:32.5444027Z                 raise_assert_detail(
2025-02-24T15:52:32.5444178Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5444251Z                 )
2025-02-24T15:52:32.5444320Z     
2025-02-24T15:52:32.5444396Z             diff = 0
2025-02-24T15:52:32.5444512Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5444601Z                 # count up differences
2025-02-24T15:52:32.5444776Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5444856Z                     diff += 1
2025-02-24T15:52:32.5444926Z     
2025-02-24T15:52:32.5445021Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5445163Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5445334Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5445458Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5445531Z E           
2025-02-24T15:52:32.5445646Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5445912Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5446178Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5446183Z 
2025-02-24T15:52:32.5446504Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5446507Z 
2025-02-24T15:52:32.5446682Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5446686Z 
2025-02-24T15:52:32.5446909Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3b4d0>
2025-02-24T15:52:32.5447079Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5447157Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5447161Z 
2025-02-24T15:52:32.5447303Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5447418Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5447593Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5447668Z         try:
2025-02-24T15:52:32.5447815Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5447899Z         except KeyError:
2025-02-24T15:52:32.5448116Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5448187Z     
2025-02-24T15:52:32.5448275Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5448370Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5448461Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5448597Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5448683Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5448775Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5448884Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5448957Z             else:
2025-02-24T15:52:32.5449058Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5449170Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5449174Z 
2025-02-24T15:52:32.5449304Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5449418Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5449573Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5449644Z     ???
2025-02-24T15:52:32.5449757Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5449761Z 
2025-02-24T15:52:32.5449830Z >   ???
2025-02-24T15:52:32.5449960Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5450027Z E   
2025-02-24T15:52:32.5450158Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5450269Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5450342Z E          ...
2025-02-24T15:52:32.5450433Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5450567Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5450698Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5450836Z E          ...
2025-02-24T15:52:32.5451117Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5451352Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5451552Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5451559Z 
2025-02-24T15:52:32.5451676Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5451883Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-24T15:52:32.5451887Z 
2025-02-24T15:52:32.5452023Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5452155Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5452257Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5452397Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5452522Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5452621Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5452701Z err_msg = None
2025-02-24T15:52:32.5452705Z 
2025-02-24T15:52:32.5452821Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5452903Z         if err_msg is None:
2025-02-24T15:52:32.5453002Z             if left.shape != right.shape:
2025-02-24T15:52:32.5453088Z                 raise_assert_detail(
2025-02-24T15:52:32.5453237Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5453309Z                 )
2025-02-24T15:52:32.5453381Z     
2025-02-24T15:52:32.5453455Z             diff = 0
2025-02-24T15:52:32.5453568Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5453815Z                 # count up differences
2025-02-24T15:52:32.5453998Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5454081Z                     diff += 1
2025-02-24T15:52:32.5454252Z     
2025-02-24T15:52:32.5454345Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5454483Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5454658Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5454769Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5454843Z E           
2025-02-24T15:52:32.5454953Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5455220Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5455487Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5455501Z 
2025-02-24T15:52:32.5455814Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5455818Z 
2025-02-24T15:52:32.5455988Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5455991Z 
2025-02-24T15:52:32.5456218Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3b590>
2025-02-24T15:52:32.5456382Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5456465Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5456473Z 
2025-02-24T15:52:32.5456612Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5456729Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5456815Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5456897Z         try:
2025-02-24T15:52:32.5457037Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5457123Z         except KeyError:
2025-02-24T15:52:32.5457259Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5457332Z     
2025-02-24T15:52:32.5457423Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5457517Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5457610Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5457743Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5457832Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5457922Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5458039Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5458113Z             else:
2025-02-24T15:52:32.5458211Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5458317Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5458325Z 
2025-02-24T15:52:32.5458453Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5458571Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5458715Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5458787Z     ???
2025-02-24T15:52:32.5458896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5458900Z 
2025-02-24T15:52:32.5458970Z >   ???
2025-02-24T15:52:32.5459095Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5459165Z E   
2025-02-24T15:52:32.5459292Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5459514Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5459589Z E          ...
2025-02-24T15:52:32.5459682Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5459893Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5460006Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5460080Z E          ...
2025-02-24T15:52:32.5460166Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5460294Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5460399Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5460403Z 
2025-02-24T15:52:32.5460494Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5460692Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-24T15:52:32.5460695Z 
2025-02-24T15:52:32.5460827Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5461115Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5461215Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5461355Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5461478Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5461573Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5461680Z err_msg = None
2025-02-24T15:52:32.5461684Z 
2025-02-24T15:52:32.5461803Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5461888Z         if err_msg is None:
2025-02-24T15:52:32.5461984Z             if left.shape != right.shape:
2025-02-24T15:52:32.5462071Z                 raise_assert_detail(
2025-02-24T15:52:32.5462216Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5462295Z                 )
2025-02-24T15:52:32.5462365Z     
2025-02-24T15:52:32.5462439Z             diff = 0
2025-02-24T15:52:32.5462549Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5462645Z                 # count up differences
2025-02-24T15:52:32.5462814Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5462896Z                     diff += 1
2025-02-24T15:52:32.5462965Z     
2025-02-24T15:52:32.5463056Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5463195Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5463365Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5463480Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5463552Z E           
2025-02-24T15:52:32.5463664Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5463927Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5464198Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5464202Z 
2025-02-24T15:52:32.5464511Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5464515Z 
2025-02-24T15:52:32.5464686Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5464691Z 
2025-02-24T15:52:32.5465054Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd3b710>
2025-02-24T15:52:32.5465232Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f8885225ee0>
2025-02-24T15:52:32.5465311Z attr = 'j_blues'
2025-02-24T15:52:32.5465416Z 
2025-02-24T15:52:32.5465564Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5465683Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5465772Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5465844Z         try:
2025-02-24T15:52:32.5465994Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5466078Z         except KeyError:
2025-02-24T15:52:32.5466221Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5466291Z     
2025-02-24T15:52:32.5466382Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5466477Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5466570Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5466712Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5466800Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5466891Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5467009Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5467083Z             else:
2025-02-24T15:52:32.5467179Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5467290Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5467294Z 
2025-02-24T15:52:32.5467419Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5467538Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5467689Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5467762Z     ???
2025-02-24T15:52:32.5467876Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5467880Z 
2025-02-24T15:52:32.5467948Z >   ???
2025-02-24T15:52:32.5468084Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5468153Z E   
2025-02-24T15:52:32.5468284Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5468404Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5468480Z E          ...
2025-02-24T15:52:32.5468569Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5468705Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5468819Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5468893Z E          ...
2025-02-24T15:52:32.5468980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5469103Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5469210Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5469214Z 
2025-02-24T15:52:32.5469305Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5469504Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-24T15:52:32.5469508Z 
2025-02-24T15:52:32.5469637Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5469775Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5469877Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5470012Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5470140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5470234Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5470313Z err_msg = None
2025-02-24T15:52:32.5470317Z 
2025-02-24T15:52:32.5470430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5470514Z         if err_msg is None:
2025-02-24T15:52:32.5470700Z             if left.shape != right.shape:
2025-02-24T15:52:32.5470857Z                 raise_assert_detail(
2025-02-24T15:52:32.5471103Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5471311Z                 )
2025-02-24T15:52:32.5471383Z     
2025-02-24T15:52:32.5471458Z             diff = 0
2025-02-24T15:52:32.5471583Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5471676Z                 # count up differences
2025-02-24T15:52:32.5471862Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5471942Z                     diff += 1
2025-02-24T15:52:32.5472017Z     
2025-02-24T15:52:32.5472108Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5472256Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5472429Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5472554Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5472632Z E           
2025-02-24T15:52:32.5472747Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5473017Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5473287Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5473292Z 
2025-02-24T15:52:32.5473616Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5473620Z 
2025-02-24T15:52:32.5473797Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5473801Z 
2025-02-24T15:52:32.5474025Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd604d0>
2025-02-24T15:52:32.5474201Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5474277Z attr = 'lines'
2025-02-24T15:52:32.5474281Z 
2025-02-24T15:52:32.5474425Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5474543Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5474633Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5474710Z         try:
2025-02-24T15:52:32.5474853Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5474939Z         except KeyError:
2025-02-24T15:52:32.5475081Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5475153Z     
2025-02-24T15:52:32.5475246Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5475346Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5475440Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5475582Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5475674Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5475771Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5475889Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5475961Z             else:
2025-02-24T15:52:32.5476063Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5476171Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5476175Z 
2025-02-24T15:52:32.5476304Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5476420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5476687Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5476783Z     ???
2025-02-24T15:52:32.5476999Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5477006Z 
2025-02-24T15:52:32.5477262Z >   ???
2025-02-24T15:52:32.5477433Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5477508Z E   
2025-02-24T15:52:32.5477647Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5477770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5477843Z E          ...
2025-02-24T15:52:32.5477936Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5478069Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5478185Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5478258Z E          ...
2025-02-24T15:52:32.5478347Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5478479Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5478591Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5478595Z 
2025-02-24T15:52:32.5478689Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5478928Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-24T15:52:32.5478932Z 
2025-02-24T15:52:32.5479159Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd60590>
2025-02-24T15:52:32.5479326Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5479421Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5479425Z 
2025-02-24T15:52:32.5479566Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5479686Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5479778Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5479852Z         try:
2025-02-24T15:52:32.5480001Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5480089Z         except KeyError:
2025-02-24T15:52:32.5480231Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5480301Z     
2025-02-24T15:52:32.5480395Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5480495Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5480590Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5480724Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5480816Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5481059Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5481248Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5481253Z 
2025-02-24T15:52:32.5481386Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5481499Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5481504Z 
2025-02-24T15:52:32.5481653Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5481740Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5481853Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5481943Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5482088Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5482176Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5482280Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5482361Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5482438Z err_msg = None
2025-02-24T15:52:32.5482441Z 
2025-02-24T15:52:32.5482557Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5482643Z         if err_msg is None:
2025-02-24T15:52:32.5482740Z             if left.shape != right.shape:
2025-02-24T15:52:32.5482826Z                 raise_assert_detail(
2025-02-24T15:52:32.5483110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5483187Z                 )
2025-02-24T15:52:32.5483260Z     
2025-02-24T15:52:32.5483341Z             diff = 0
2025-02-24T15:52:32.5483559Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5483651Z                 # count up differences
2025-02-24T15:52:32.5483825Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5483912Z                     diff += 1
2025-02-24T15:52:32.5483981Z     
2025-02-24T15:52:32.5484071Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5484210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5484387Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5484493Z E           AssertionError: Series are different
2025-02-24T15:52:32.5484570Z E           
2025-02-24T15:52:32.5484684Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5485059Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5485402Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5485743Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5485751Z 
2025-02-24T15:52:32.5486065Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5486294Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-24T15:52:32.5486299Z 
2025-02-24T15:52:32.5486523Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd60650>
2025-02-24T15:52:32.5486697Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5486793Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5486797Z 
2025-02-24T15:52:32.5486936Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5487068Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5487221Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5487353Z         try:
2025-02-24T15:52:32.5487611Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5487767Z         except KeyError:
2025-02-24T15:52:32.5487999Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5488119Z     
2025-02-24T15:52:32.5488267Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5488438Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5488558Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5488696Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5488786Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5488876Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5488991Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5488996Z 
2025-02-24T15:52:32.5489221Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5489345Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5489350Z 
2025-02-24T15:52:32.5489486Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5489653Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5489768Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5489850Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5489995Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5490078Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5490188Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5490267Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5490347Z err_msg = None
2025-02-24T15:52:32.5490351Z 
2025-02-24T15:52:32.5490470Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5490556Z         if err_msg is None:
2025-02-24T15:52:32.5490649Z             if left.shape != right.shape:
2025-02-24T15:52:32.5490737Z                 raise_assert_detail(
2025-02-24T15:52:32.5490888Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5491259Z                 )
2025-02-24T15:52:32.5491333Z     
2025-02-24T15:52:32.5491407Z             diff = 0
2025-02-24T15:52:32.5491526Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5491614Z                 # count up differences
2025-02-24T15:52:32.5491802Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5491882Z                     diff += 1
2025-02-24T15:52:32.5491953Z     
2025-02-24T15:52:32.5492040Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5492180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5492361Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5492467Z E           AssertionError: Series are different
2025-02-24T15:52:32.5492543Z E           
2025-02-24T15:52:32.5492653Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5493025Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5493406Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5493793Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5493807Z 
2025-02-24T15:52:32.5494165Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5494369Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-24T15:52:32.5494373Z 
2025-02-24T15:52:32.5494507Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5494767Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5494874Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5495132Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5495256Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5495356Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5495432Z err_msg = None
2025-02-24T15:52:32.5495440Z 
2025-02-24T15:52:32.5495552Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5495637Z         if err_msg is None:
2025-02-24T15:52:32.5495735Z             if left.shape != right.shape:
2025-02-24T15:52:32.5495826Z                 raise_assert_detail(
2025-02-24T15:52:32.5495976Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5496056Z                 )
2025-02-24T15:52:32.5496128Z     
2025-02-24T15:52:32.5496204Z             diff = 0
2025-02-24T15:52:32.5496315Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5496426Z                 # count up differences
2025-02-24T15:52:32.5496736Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5496878Z                     diff += 1
2025-02-24T15:52:32.5497012Z     
2025-02-24T15:52:32.5497156Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5497305Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5497475Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5497593Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5497666Z E           
2025-02-24T15:52:32.5497784Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5498054Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5498330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5498334Z 
2025-02-24T15:52:32.5498650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5498654Z 
2025-02-24T15:52:32.5498828Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5498832Z 
2025-02-24T15:52:32.5499065Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd60890>
2025-02-24T15:52:32.5499270Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>, attr = 'nu'
2025-02-24T15:52:32.5499278Z 
2025-02-24T15:52:32.5499419Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5499540Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5499627Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5499703Z         try:
2025-02-24T15:52:32.5499847Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5499946Z         except KeyError:
2025-02-24T15:52:32.5500088Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5500162Z     
2025-02-24T15:52:32.5500253Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5500354Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5500449Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5500681Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5500777Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5500869Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5501117Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5501239Z 
2025-02-24T15:52:32.5501377Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5501497Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5501648Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5501725Z     ???
2025-02-24T15:52:32.5501837Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5501845Z 
2025-02-24T15:52:32.5501913Z >   ???
2025-02-24T15:52:32.5502045Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5502115Z E   
2025-02-24T15:52:32.5502247Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5502366Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5502446Z E          ...
2025-02-24T15:52:32.5502535Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5502684Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5502799Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5502874Z E          ...
2025-02-24T15:52:32.5502962Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5503089Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5503198Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5503202Z 
2025-02-24T15:52:32.5503291Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5503498Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-24T15:52:32.5503502Z 
2025-02-24T15:52:32.5503632Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5503769Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5503868Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5504012Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5504139Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5504233Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5504313Z err_msg = None
2025-02-24T15:52:32.5504317Z 
2025-02-24T15:52:32.5504427Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5504512Z         if err_msg is None:
2025-02-24T15:52:32.5504608Z             if left.shape != right.shape:
2025-02-24T15:52:32.5504697Z                 raise_assert_detail(
2025-02-24T15:52:32.5504841Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5504920Z                 )
2025-02-24T15:52:32.5504990Z     
2025-02-24T15:52:32.5505067Z             diff = 0
2025-02-24T15:52:32.5505182Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5505277Z                 # count up differences
2025-02-24T15:52:32.5505452Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5505532Z                     diff += 1
2025-02-24T15:52:32.5505603Z     
2025-02-24T15:52:32.5505693Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5505834Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5506005Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5506120Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5506193Z E           
2025-02-24T15:52:32.5506313Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5506696Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5507037Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5507043Z 
2025-02-24T15:52:32.5507359Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5507362Z 
2025-02-24T15:52:32.5507540Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5507544Z 
2025-02-24T15:52:32.5507773Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd60950>
2025-02-24T15:52:32.5507943Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5508026Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5508035Z 
2025-02-24T15:52:32.5508177Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5508294Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5508383Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5508454Z         try:
2025-02-24T15:52:32.5508599Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5508684Z         except KeyError:
2025-02-24T15:52:32.5508822Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5508894Z     
2025-02-24T15:52:32.5508982Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5509080Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5509171Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5509312Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5509400Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5509494Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5509609Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5509617Z 
2025-02-24T15:52:32.5509744Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5509859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5510006Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5510089Z     ???
2025-02-24T15:52:32.5510203Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5510208Z 
2025-02-24T15:52:32.5510288Z >   ???
2025-02-24T15:52:32.5510423Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5510494Z E   
2025-02-24T15:52:32.5510641Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5510760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5510836Z E          ...
2025-02-24T15:52:32.5511053Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5511202Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5511325Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5511402Z E          ...
2025-02-24T15:52:32.5511489Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5511620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5511727Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5511731Z 
2025-02-24T15:52:32.5511830Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5512028Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-24T15:52:32.5512035Z 
2025-02-24T15:52:32.5512288Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5512426Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5512523Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5512766Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5512891Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5512993Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5513069Z err_msg = None
2025-02-24T15:52:32.5513072Z 
2025-02-24T15:52:32.5513186Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5513273Z         if err_msg is None:
2025-02-24T15:52:32.5513370Z             if left.shape != right.shape:
2025-02-24T15:52:32.5513460Z                 raise_assert_detail(
2025-02-24T15:52:32.5513613Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5513689Z                 )
2025-02-24T15:52:32.5513759Z     
2025-02-24T15:52:32.5513837Z             diff = 0
2025-02-24T15:52:32.5513947Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5514047Z                 # count up differences
2025-02-24T15:52:32.5514219Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5514301Z                     diff += 1
2025-02-24T15:52:32.5514370Z     
2025-02-24T15:52:32.5514464Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5514604Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5514775Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5514892Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5514966Z E           
2025-02-24T15:52:32.5515092Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5515360Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5515634Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5515638Z 
2025-02-24T15:52:32.5515953Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5515957Z 
2025-02-24T15:52:32.5516129Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5516133Z 
2025-02-24T15:52:32.5516369Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd60a10>
2025-02-24T15:52:32.5516575Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>, attr = 'f_lu'
2025-02-24T15:52:32.5516587Z 
2025-02-24T15:52:32.5516726Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5516847Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5516934Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5517010Z         try:
2025-02-24T15:52:32.5517155Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5517242Z         except KeyError:
2025-02-24T15:52:32.5517383Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5517457Z     
2025-02-24T15:52:32.5517549Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5517649Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5517739Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5517996Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5518092Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5518181Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5518371Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5518376Z 
2025-02-24T15:52:32.5518501Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5518622Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5518769Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5518844Z     ???
2025-02-24T15:52:32.5518954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5518962Z 
2025-02-24T15:52:32.5519031Z >   ???
2025-02-24T15:52:32.5519161Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5519231Z E   
2025-02-24T15:52:32.5519365Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5519490Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5519569Z E          ...
2025-02-24T15:52:32.5519658Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5519801Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5519916Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5519991Z E          ...
2025-02-24T15:52:32.5520078Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5520213Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5520323Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5520327Z 
2025-02-24T15:52:32.5520419Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5520622Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-24T15:52:32.5520626Z 
2025-02-24T15:52:32.5520756Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5520898Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5521118Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5521265Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5521396Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5521493Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5521573Z err_msg = None
2025-02-24T15:52:32.5521577Z 
2025-02-24T15:52:32.5521689Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5521833Z         if err_msg is None:
2025-02-24T15:52:32.5521999Z             if left.shape != right.shape:
2025-02-24T15:52:32.5522153Z                 raise_assert_detail(
2025-02-24T15:52:32.5522402Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5522538Z                 )
2025-02-24T15:52:32.5522657Z     
2025-02-24T15:52:32.5522786Z             diff = 0
2025-02-24T15:52:32.5522979Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5523133Z                 # count up differences
2025-02-24T15:52:32.5523382Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5523462Z                     diff += 1
2025-02-24T15:52:32.5523535Z     
2025-02-24T15:52:32.5523624Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5523767Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5523938Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5524054Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5524125Z E           
2025-02-24T15:52:32.5524239Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5524638Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5525005Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5525010Z 
2025-02-24T15:52:32.5525323Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5525327Z 
2025-02-24T15:52:32.5525498Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5525502Z 
2025-02-24T15:52:32.5525730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd61190>
2025-02-24T15:52:32.5525899Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5525982Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5525991Z 
2025-02-24T15:52:32.5526133Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5526249Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5526338Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5526410Z         try:
2025-02-24T15:52:32.5526554Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5526640Z         except KeyError:
2025-02-24T15:52:32.5526780Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5526854Z     
2025-02-24T15:52:32.5526943Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5527041Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5527132Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5527274Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5527363Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5527456Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5527573Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5527649Z             else:
2025-02-24T15:52:32.5527746Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5527859Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5527862Z 
2025-02-24T15:52:32.5527992Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5528107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5528259Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5528330Z     ???
2025-02-24T15:52:32.5528446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5528450Z 
2025-02-24T15:52:32.5528524Z >   ???
2025-02-24T15:52:32.5528654Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5528723Z E   
2025-02-24T15:52:32.5528858Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5528980Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5529054Z E          ...
2025-02-24T15:52:32.5529148Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5529278Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5529394Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5529467Z E          ...
2025-02-24T15:52:32.5529557Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5529683Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5529794Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5529798Z 
2025-02-24T15:52:32.5529889Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5530179Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-24T15:52:32.5530183Z 
2025-02-24T15:52:32.5530319Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5530524Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5530623Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5530757Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5530883Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5531093Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5531175Z err_msg = None
2025-02-24T15:52:32.5531179Z 
2025-02-24T15:52:32.5531292Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5531374Z         if err_msg is None:
2025-02-24T15:52:32.5531479Z             if left.shape != right.shape:
2025-02-24T15:52:32.5531564Z                 raise_assert_detail(
2025-02-24T15:52:32.5531713Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5531823Z                 )
2025-02-24T15:52:32.5531952Z     
2025-02-24T15:52:32.5532082Z             diff = 0
2025-02-24T15:52:32.5532281Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5532421Z                 # count up differences
2025-02-24T15:52:32.5532704Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5532839Z                     diff += 1
2025-02-24T15:52:32.5532952Z     
2025-02-24T15:52:32.5533104Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5533337Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5533629Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5533818Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5533953Z E           
2025-02-24T15:52:32.5534140Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5534480Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5534751Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5534756Z 
2025-02-24T15:52:32.5535072Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5535076Z 
2025-02-24T15:52:32.5535251Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5535255Z 
2025-02-24T15:52:32.5535489Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd61250>
2025-02-24T15:52:32.5535659Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5535743Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5535747Z 
2025-02-24T15:52:32.5535890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5536013Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5536100Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5536176Z         try:
2025-02-24T15:52:32.5536325Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5536424Z         except KeyError:
2025-02-24T15:52:32.5536566Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5536784Z     
2025-02-24T15:52:32.5536884Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5536981Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5537077Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5537317Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5537413Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5537504Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5537637Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5537711Z             else:
2025-02-24T15:52:32.5537812Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5537922Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5537926Z 
2025-02-24T15:52:32.5538058Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5538176Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5538331Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5538406Z     ???
2025-02-24T15:52:32.5538518Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5538527Z 
2025-02-24T15:52:32.5538601Z >   ???
2025-02-24T15:52:32.5538730Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5538803Z E   
2025-02-24T15:52:32.5538933Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5539051Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5539125Z E          ...
2025-02-24T15:52:32.5539219Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5539354Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5539466Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5539542Z E          ...
2025-02-24T15:52:32.5539631Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5539764Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5539871Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5539875Z 
2025-02-24T15:52:32.5539970Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5540173Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-24T15:52:32.5540177Z 
2025-02-24T15:52:32.5540313Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5540450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5540550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5540689Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5540813Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5541056Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5541138Z err_msg = None
2025-02-24T15:52:32.5541142Z 
2025-02-24T15:52:32.5541258Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5541345Z         if err_msg is None:
2025-02-24T15:52:32.5541447Z             if left.shape != right.shape:
2025-02-24T15:52:32.5541536Z                 raise_assert_detail(
2025-02-24T15:52:32.5541686Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5541762Z                 )
2025-02-24T15:52:32.5541833Z     
2025-02-24T15:52:32.5541912Z             diff = 0
2025-02-24T15:52:32.5542025Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5542119Z                 # count up differences
2025-02-24T15:52:32.5542292Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5542379Z                     diff += 1
2025-02-24T15:52:32.5542449Z     
2025-02-24T15:52:32.5542545Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5542824Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5542999Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5543219Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5543291Z E           
2025-02-24T15:52:32.5543407Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5543668Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5543942Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5543947Z 
2025-02-24T15:52:32.5544271Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5544282Z 
2025-02-24T15:52:32.5544454Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5544458Z 
2025-02-24T15:52:32.5544684Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd613d0>
2025-02-24T15:52:32.5544854Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885fb85820>
2025-02-24T15:52:32.5544934Z attr = 'j_blues'
2025-02-24T15:52:32.5544938Z 
2025-02-24T15:52:32.5545080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5545201Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5545289Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5545361Z         try:
2025-02-24T15:52:32.5545509Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5545594Z         except KeyError:
2025-02-24T15:52:32.5545737Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5545813Z     
2025-02-24T15:52:32.5545906Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5546002Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5546096Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5546234Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5546322Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5546416Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5546529Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5546608Z             else:
2025-02-24T15:52:32.5546703Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5546817Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5546820Z 
2025-02-24T15:52:32.5546952Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5547069Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5547215Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5547297Z     ???
2025-02-24T15:52:32.5547412Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5547416Z 
2025-02-24T15:52:32.5547485Z >   ???
2025-02-24T15:52:32.5547617Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5547686Z E   
2025-02-24T15:52:32.5547819Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5547932Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5548009Z E          ...
2025-02-24T15:52:32.5548098Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5548231Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5548431Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5548512Z E          ...
2025-02-24T15:52:32.5548601Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5548728Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5548911Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5548915Z 
2025-02-24T15:52:32.5549007Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5549220Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-24T15:52:32.5549224Z 
2025-02-24T15:52:32.5549353Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5549486Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5549586Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5549727Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5549938Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5550107Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5550253Z err_msg = None
2025-02-24T15:52:32.5550259Z 
2025-02-24T15:52:32.5550449Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5550597Z         if err_msg is None:
2025-02-24T15:52:32.5550756Z             if left.shape != right.shape:
2025-02-24T15:52:32.5550904Z                 raise_assert_detail(
2025-02-24T15:52:32.5551289Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5551415Z                 )
2025-02-24T15:52:32.5551526Z     
2025-02-24T15:52:32.5551603Z             diff = 0
2025-02-24T15:52:32.5551720Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5551809Z                 # count up differences
2025-02-24T15:52:32.5551994Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5552074Z                     diff += 1
2025-02-24T15:52:32.5552146Z     
2025-02-24T15:52:32.5552236Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5552382Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5552556Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5552671Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5552747Z E           
2025-02-24T15:52:32.5552858Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5553123Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5553389Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5553400Z 
2025-02-24T15:52:32.5553718Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5553722Z 
2025-02-24T15:52:32.5553896Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5553901Z 
2025-02-24T15:52:32.5554124Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62150>
2025-02-24T15:52:32.5554296Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5554372Z attr = 'lines'
2025-02-24T15:52:32.5554375Z 
2025-02-24T15:52:32.5554674Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5554796Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5554891Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5554965Z         try:
2025-02-24T15:52:32.5555211Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5555297Z         except KeyError:
2025-02-24T15:52:32.5555436Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5555507Z     
2025-02-24T15:52:32.5555596Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5555694Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5555786Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5555924Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5556012Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5556106Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5556222Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5556299Z             else:
2025-02-24T15:52:32.5556398Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5556506Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5556516Z 
2025-02-24T15:52:32.5556646Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5556762Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5556912Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5556985Z     ???
2025-02-24T15:52:32.5557099Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5557103Z 
2025-02-24T15:52:32.5557176Z >   ???
2025-02-24T15:52:32.5557308Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5557382Z E   
2025-02-24T15:52:32.5557512Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5557633Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5557711Z E          ...
2025-02-24T15:52:32.5557805Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5557936Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5558060Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5558133Z E          ...
2025-02-24T15:52:32.5558223Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5558350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5558459Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5558463Z 
2025-02-24T15:52:32.5558559Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5558811Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-24T15:52:32.5558815Z 
2025-02-24T15:52:32.5559046Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62210>
2025-02-24T15:52:32.5559218Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5559316Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5559320Z 
2025-02-24T15:52:32.5559456Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5559579Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5559669Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5559741Z         try:
2025-02-24T15:52:32.5559889Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5559970Z         except KeyError:
2025-02-24T15:52:32.5560114Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5560185Z     
2025-02-24T15:52:32.5560278Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5560372Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5560468Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5560599Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5560690Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5560870Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5561119Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5561123Z 
2025-02-24T15:52:32.5561256Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5561507Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5561511Z 
2025-02-24T15:52:32.5561681Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5561769Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5561884Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5561968Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5562112Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5562201Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5562311Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5562395Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5562472Z err_msg = None
2025-02-24T15:52:32.5562475Z 
2025-02-24T15:52:32.5562590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5562679Z         if err_msg is None:
2025-02-24T15:52:32.5562781Z             if left.shape != right.shape:
2025-02-24T15:52:32.5562868Z                 raise_assert_detail(
2025-02-24T15:52:32.5563020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5563093Z                 )
2025-02-24T15:52:32.5563166Z     
2025-02-24T15:52:32.5563245Z             diff = 0
2025-02-24T15:52:32.5563359Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5563453Z                 # count up differences
2025-02-24T15:52:32.5563622Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5563709Z                     diff += 1
2025-02-24T15:52:32.5563786Z     
2025-02-24T15:52:32.5563883Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5564022Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5564205Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5564312Z E           AssertionError: Series are different
2025-02-24T15:52:32.5564397Z E           
2025-02-24T15:52:32.5564510Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5564883Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5565226Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5565571Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5565576Z 
2025-02-24T15:52:32.5565891Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5566270Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-24T15:52:32.5566275Z 
2025-02-24T15:52:32.5566506Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd622d0>
2025-02-24T15:52:32.5566683Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5566864Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5566869Z 
2025-02-24T15:52:32.5567048Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5567240Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5567487Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5567663Z         try:
2025-02-24T15:52:32.5567841Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5567990Z         except KeyError:
2025-02-24T15:52:32.5568163Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5568341Z     
2025-02-24T15:52:32.5568494Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5568665Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5568789Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5568993Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5569178Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5569344Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5569526Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5569530Z 
2025-02-24T15:52:32.5569688Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5569871Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5569875Z 
2025-02-24T15:52:32.5570029Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5570259Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5570439Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5570558Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5570773Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5570874Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5571382Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5571510Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5571657Z err_msg = None
2025-02-24T15:52:32.5571662Z 
2025-02-24T15:52:32.5571810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5571948Z         if err_msg is None:
2025-02-24T15:52:32.5572195Z             if left.shape != right.shape:
2025-02-24T15:52:32.5572316Z                 raise_assert_detail(
2025-02-24T15:52:32.5572533Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5572640Z                 )
2025-02-24T15:52:32.5572777Z     
2025-02-24T15:52:32.5572930Z             diff = 0
2025-02-24T15:52:32.5573137Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5573262Z                 # count up differences
2025-02-24T15:52:32.5573506Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5573663Z                     diff += 1
2025-02-24T15:52:32.5573808Z     
2025-02-24T15:52:32.5573979Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5574152Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5574392Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5574548Z E           AssertionError: Series are different
2025-02-24T15:52:32.5574716Z E           
2025-02-24T15:52:32.5574870Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5575439Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5576045Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5576463Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5576490Z 
2025-02-24T15:52:32.5576889Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5577184Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-24T15:52:32.5577189Z 
2025-02-24T15:52:32.5577372Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5577572Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5577706Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5577938Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5578161Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5578297Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5578443Z err_msg = None
2025-02-24T15:52:32.5578447Z 
2025-02-24T15:52:32.5578592Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5578771Z         if err_msg is None:
2025-02-24T15:52:32.5578927Z             if left.shape != right.shape:
2025-02-24T15:52:32.5579099Z                 raise_assert_detail(
2025-02-24T15:52:32.5579315Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5579421Z                 )
2025-02-24T15:52:32.5579583Z     
2025-02-24T15:52:32.5579723Z             diff = 0
2025-02-24T15:52:32.5579905Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5580027Z                 # count up differences
2025-02-24T15:52:32.5580263Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5580361Z                     diff += 1
2025-02-24T15:52:32.5580570Z     
2025-02-24T15:52:32.5580697Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5581048Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5581305Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5581444Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5581664Z E           
2025-02-24T15:52:32.5581814Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5582145Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5582564Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5582607Z 
2025-02-24T15:52:32.5582954Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5583060Z 
2025-02-24T15:52:32.5583537Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5583547Z 
2025-02-24T15:52:32.5584011Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62510>
2025-02-24T15:52:32.5584312Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>, attr = 'nu'
2025-02-24T15:52:32.5584317Z 
2025-02-24T15:52:32.5584622Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5584780Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5584935Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5585039Z         try:
2025-02-24T15:52:32.5585242Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5585420Z         except KeyError:
2025-02-24T15:52:32.5585644Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5585755Z     
2025-02-24T15:52:32.5585912Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5586043Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5586271Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5586492Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5586613Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5586769Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5586914Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5586919Z 
2025-02-24T15:52:32.5587163Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5587329Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5587555Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5587698Z     ???
2025-02-24T15:52:32.5587857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5587865Z 
2025-02-24T15:52:32.5588028Z >   ???
2025-02-24T15:52:32.5588207Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5588342Z E   
2025-02-24T15:52:32.5588506Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5588706Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5588798Z E          ...
2025-02-24T15:52:32.5589009Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5589175Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5589357Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5589512Z E          ...
2025-02-24T15:52:32.5589618Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5589869Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5590010Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5590014Z 
2025-02-24T15:52:32.5590171Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5590446Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-24T15:52:32.5590451Z 
2025-02-24T15:52:32.5590633Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5590887Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5591156Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5591383Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5591551Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5591835Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5592006Z err_msg = None
2025-02-24T15:52:32.5592010Z 
2025-02-24T15:52:32.5592209Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5592379Z         if err_msg is None:
2025-02-24T15:52:32.5592617Z             if left.shape != right.shape:
2025-02-24T15:52:32.5592757Z                 raise_assert_detail(
2025-02-24T15:52:32.5592983Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5593154Z                 )
2025-02-24T15:52:32.5593258Z     
2025-02-24T15:52:32.5593399Z             diff = 0
2025-02-24T15:52:32.5593545Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5593734Z                 # count up differences
2025-02-24T15:52:32.5593972Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5594121Z                     diff += 1
2025-02-24T15:52:32.5594259Z     
2025-02-24T15:52:32.5594393Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5594625Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5594862Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5595049Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5595154Z E           
2025-02-24T15:52:32.5595337Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5595618Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5596028Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5596033Z 
2025-02-24T15:52:32.5596419Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5596428Z 
2025-02-24T15:52:32.5596634Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5596638Z 
2025-02-24T15:52:32.5596934Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd625d0>
2025-02-24T15:52:32.5597212Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5597343Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5597347Z 
2025-02-24T15:52:32.5597551Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5597702Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5597856Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5597964Z         try:
2025-02-24T15:52:32.5598248Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5598364Z         except KeyError:
2025-02-24T15:52:32.5598571Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5598726Z     
2025-02-24T15:52:32.5598834Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5599055Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5599180Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5599378Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5599498Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5599657Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5599839Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5599844Z 
2025-02-24T15:52:32.5600051Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5600233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5600510Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5600640Z     ???
2025-02-24T15:52:32.5600829Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5601043Z 
2025-02-24T15:52:32.5601206Z >   ???
2025-02-24T15:52:32.5601397Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5601537Z E   
2025-02-24T15:52:32.5601701Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5601920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5602094Z E          ...
2025-02-24T15:52:32.5602218Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5602421Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5602568Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5602735Z E          ...
2025-02-24T15:52:32.5602871Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5603091Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5603230Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5603234Z 
2025-02-24T15:52:32.5603401Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5603707Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-24T15:52:32.5603712Z 
2025-02-24T15:52:32.5603909Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5604106Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5604239Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5604442Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5604584Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5604835Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5604981Z err_msg = None
2025-02-24T15:52:32.5604985Z 
2025-02-24T15:52:32.5605130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5605286Z         if err_msg is None:
2025-02-24T15:52:32.5605401Z             if left.shape != right.shape:
2025-02-24T15:52:32.5605633Z                 raise_assert_detail(
2025-02-24T15:52:32.5605815Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5605955Z                 )
2025-02-24T15:52:32.5606058Z     
2025-02-24T15:52:32.5606187Z             diff = 0
2025-02-24T15:52:32.5606390Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5606566Z                 # count up differences
2025-02-24T15:52:32.5606806Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5606920Z                     diff += 1
2025-02-24T15:52:32.5607042Z     
2025-02-24T15:52:32.5607230Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5607453Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5607658Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5607844Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5607950Z E           
2025-02-24T15:52:32.5608180Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5608527Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5608939Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5608944Z 
2025-02-24T15:52:32.5609353Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5609458Z 
2025-02-24T15:52:32.5609691Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5609696Z 
2025-02-24T15:52:32.5610003Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62690>
2025-02-24T15:52:32.5610298Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>, attr = 'f_lu'
2025-02-24T15:52:32.5610303Z 
2025-02-24T15:52:32.5610475Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5610676Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5610797Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5611161Z         try:
2025-02-24T15:52:32.5611456Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5611595Z         except KeyError:
2025-02-24T15:52:32.5611812Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5611921Z     
2025-02-24T15:52:32.5612134Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5612282Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5612456Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5612626Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5612784Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5612893Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5613134Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5613138Z 
2025-02-24T15:52:32.5613357Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5613505Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5613726Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5613816Z     ???
2025-02-24T15:52:32.5614051Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5614060Z 
2025-02-24T15:52:32.5614179Z >   ???
2025-02-24T15:52:32.5614382Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5614483Z E   
2025-02-24T15:52:32.5614666Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5614919Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5615026Z E          ...
2025-02-24T15:52:32.5615182Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5615346Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5615514Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5615660Z E          ...
2025-02-24T15:52:32.5615849Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5616012Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5616188Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5616193Z 
2025-02-24T15:52:32.5616402Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5616843Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-24T15:52:32.5616851Z 
2025-02-24T15:52:32.5617198Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5623435Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5623652Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5623903Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5624134Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5624463Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5624557Z err_msg = None
2025-02-24T15:52:32.5624564Z 
2025-02-24T15:52:32.5624691Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5624947Z         if err_msg is None:
2025-02-24T15:52:32.5625053Z             if left.shape != right.shape:
2025-02-24T15:52:32.5625144Z                 raise_assert_detail(
2025-02-24T15:52:32.5625308Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5625387Z                 )
2025-02-24T15:52:32.5625460Z     
2025-02-24T15:52:32.5625540Z             diff = 0
2025-02-24T15:52:32.5625663Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5625756Z                 # count up differences
2025-02-24T15:52:32.5625935Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5626015Z                     diff += 1
2025-02-24T15:52:32.5626088Z     
2025-02-24T15:52:32.5626187Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5626331Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5626507Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5626633Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5626706Z E           
2025-02-24T15:52:32.5626825Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5627095Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5627363Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5627368Z 
2025-02-24T15:52:32.5627688Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5627696Z 
2025-02-24T15:52:32.5627878Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5627882Z 
2025-02-24T15:52:32.5628108Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62e10>
2025-02-24T15:52:32.5628281Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5628364Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5628368Z 
2025-02-24T15:52:32.5628517Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5628638Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5628734Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5628812Z         try:
2025-02-24T15:52:32.5628968Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5629057Z         except KeyError:
2025-02-24T15:52:32.5629199Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5629276Z     
2025-02-24T15:52:32.5629367Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5629469Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5629561Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5629704Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5629794Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5629889Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5630002Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5630077Z             else:
2025-02-24T15:52:32.5630174Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5630289Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5630382Z 
2025-02-24T15:52:32.5630518Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5630636Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5630867Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5631120Z     ???
2025-02-24T15:52:32.5631240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5631245Z 
2025-02-24T15:52:32.5631315Z >   ???
2025-02-24T15:52:32.5631447Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5631516Z E   
2025-02-24T15:52:32.5631652Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5631770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5631843Z E          ...
2025-02-24T15:52:32.5631936Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5632076Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5632194Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5632266Z E          ...
2025-02-24T15:52:32.5632356Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5632487Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5632598Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5632601Z 
2025-02-24T15:52:32.5632694Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5632914Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-24T15:52:32.5632918Z 
2025-02-24T15:52:32.5633052Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5633186Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5633289Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5633430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5633559Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5633653Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5633739Z err_msg = None
2025-02-24T15:52:32.5633743Z 
2025-02-24T15:52:32.5633863Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5633946Z         if err_msg is None:
2025-02-24T15:52:32.5634048Z             if left.shape != right.shape:
2025-02-24T15:52:32.5634137Z                 raise_assert_detail(
2025-02-24T15:52:32.5634290Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5634362Z                 )
2025-02-24T15:52:32.5634439Z     
2025-02-24T15:52:32.5634514Z             diff = 0
2025-02-24T15:52:32.5634631Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5634722Z                 # count up differences
2025-02-24T15:52:32.5634901Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5634985Z                     diff += 1
2025-02-24T15:52:32.5635054Z     
2025-02-24T15:52:32.5635152Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5635289Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5635466Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5635580Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5635656Z E           
2025-02-24T15:52:32.5635770Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5636185Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5636460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5636569Z 
2025-02-24T15:52:32.5636885Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5636890Z 
2025-02-24T15:52:32.5637065Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5637069Z 
2025-02-24T15:52:32.5637294Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd62ed0>
2025-02-24T15:52:32.5637465Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5637551Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5637555Z 
2025-02-24T15:52:32.5637698Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5637823Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5637908Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5637989Z         try:
2025-02-24T15:52:32.5638133Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5638218Z         except KeyError:
2025-02-24T15:52:32.5638360Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5638433Z     
2025-02-24T15:52:32.5638526Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5638625Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5638717Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5638851Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5638940Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5639030Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5639148Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5639221Z             else:
2025-02-24T15:52:32.5639323Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5639433Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5639441Z 
2025-02-24T15:52:32.5639575Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5639693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5639842Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5639917Z     ???
2025-02-24T15:52:32.5640030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5640033Z 
2025-02-24T15:52:32.5640108Z >   ???
2025-02-24T15:52:32.5640236Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5640308Z E   
2025-02-24T15:52:32.5640436Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5640554Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5640626Z E          ...
2025-02-24T15:52:32.5640719Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5640852Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5641133Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5641211Z E          ...
2025-02-24T15:52:32.5641298Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5641425Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5641529Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5641533Z 
2025-02-24T15:52:32.5641625Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5641832Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-24T15:52:32.5641836Z 
2025-02-24T15:52:32.5641970Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5642228Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5642330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5642466Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5642694Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5642791Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5642868Z err_msg = None
2025-02-24T15:52:32.5642872Z 
2025-02-24T15:52:32.5642989Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5643071Z         if err_msg is None:
2025-02-24T15:52:32.5643175Z             if left.shape != right.shape:
2025-02-24T15:52:32.5643266Z                 raise_assert_detail(
2025-02-24T15:52:32.5643414Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5643490Z                 )
2025-02-24T15:52:32.5643564Z     
2025-02-24T15:52:32.5643641Z             diff = 0
2025-02-24T15:52:32.5643754Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5643846Z                 # count up differences
2025-02-24T15:52:32.5644022Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5644107Z                     diff += 1
2025-02-24T15:52:32.5644177Z     
2025-02-24T15:52:32.5644272Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5644410Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5644586Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5644705Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5644778Z E           
2025-02-24T15:52:32.5644895Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5645161Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5645431Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5645436Z 
2025-02-24T15:52:32.5645752Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5645756Z 
2025-02-24T15:52:32.5645926Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5645929Z 
2025-02-24T15:52:32.5646170Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd63050>
2025-02-24T15:52:32.5646349Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bd5f9e0>
2025-02-24T15:52:32.5646430Z attr = 'j_blues'
2025-02-24T15:52:32.5646434Z 
2025-02-24T15:52:32.5646582Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5646700Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5646791Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5646863Z         try:
2025-02-24T15:52:32.5647010Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5647093Z         except KeyError:
2025-02-24T15:52:32.5647236Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5647306Z     
2025-02-24T15:52:32.5647400Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5647494Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5647588Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5647804Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5647901Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5647995Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5648105Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5648259Z             else:
2025-02-24T15:52:32.5648355Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5648466Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5648469Z 
2025-02-24T15:52:32.5648596Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5648716Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5648862Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5648937Z     ???
2025-02-24T15:52:32.5649053Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5649057Z 
2025-02-24T15:52:32.5649126Z >   ???
2025-02-24T15:52:32.5649262Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5649333Z E   
2025-02-24T15:52:32.5649465Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5649580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5649660Z E          ...
2025-02-24T15:52:32.5649751Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5649892Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5650004Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5650081Z E          ...
2025-02-24T15:52:32.5650172Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5650301Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5650460Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5650468Z 
2025-02-24T15:52:32.5650614Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5651181Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-24T15:52:32.5651188Z 
2025-02-24T15:52:32.5651396Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5651601Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5651765Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5651988Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5652214Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5652374Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5652496Z err_msg = None
2025-02-24T15:52:32.5652502Z 
2025-02-24T15:52:32.5652677Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5652813Z         if err_msg is None:
2025-02-24T15:52:32.5652968Z             if left.shape != right.shape:
2025-02-24T15:52:32.5653109Z                 raise_assert_detail(
2025-02-24T15:52:32.5653346Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5653471Z                 )
2025-02-24T15:52:32.5653594Z     
2025-02-24T15:52:32.5653709Z             diff = 0
2025-02-24T15:52:32.5653898Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5654037Z                 # count up differences
2025-02-24T15:52:32.5654307Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5654440Z                     diff += 1
2025-02-24T15:52:32.5654550Z     
2025-02-24T15:52:32.5654694Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5654922Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5655262Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5655645Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5655736Z E           
2025-02-24T15:52:32.5655854Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5656125Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5656519Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5656525Z 
2025-02-24T15:52:32.5656869Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5656879Z 
2025-02-24T15:52:32.5657059Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5657063Z 
2025-02-24T15:52:32.5657286Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd63dd0>
2025-02-24T15:52:32.5657465Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5657542Z attr = 'lines'
2025-02-24T15:52:32.5657546Z 
2025-02-24T15:52:32.5657690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5657809Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5657900Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5657980Z         try:
2025-02-24T15:52:32.5658123Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5658210Z         except KeyError:
2025-02-24T15:52:32.5658348Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5658421Z     
2025-02-24T15:52:32.5658514Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5658614Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5658703Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5658840Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5658934Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5659034Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5659145Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5659223Z             else:
2025-02-24T15:52:32.5659323Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5659431Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5659436Z 
2025-02-24T15:52:32.5659564Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5659679Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5659830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5659906Z     ???
2025-02-24T15:52:32.5660020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5660024Z 
2025-02-24T15:52:32.5660094Z >   ???
2025-02-24T15:52:32.5660229Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5660302Z E   
2025-02-24T15:52:32.5660433Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5660550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5660623Z E          ...
2025-02-24T15:52:32.5661313Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5661454Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5661572Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5661645Z E          ...
2025-02-24T15:52:32.5661767Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5661895Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5662159Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5662167Z 
2025-02-24T15:52:32.5662267Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5662799Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-24T15:52:32.5662960Z 
2025-02-24T15:52:32.5663354Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd63e90>
2025-02-24T15:52:32.5663627Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5663725Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5663730Z 
2025-02-24T15:52:32.5663869Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5663992Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5664080Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5664154Z         try:
2025-02-24T15:52:32.5664296Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5664385Z         except KeyError:
2025-02-24T15:52:32.5664526Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5664597Z     
2025-02-24T15:52:32.5664688Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5664789Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5664885Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5665026Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5665116Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5665206Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5665321Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5665325Z 
2025-02-24T15:52:32.5665454Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5665567Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5665571Z 
2025-02-24T15:52:32.5665719Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5665807Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5665921Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5666007Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5666151Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:52:32.5666238Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:52:32.5666348Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5666434Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:52:32.5666510Z err_msg = None
2025-02-24T15:52:32.5666514Z 
2025-02-24T15:52:32.5666632Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5666715Z         if err_msg is None:
2025-02-24T15:52:32.5666816Z             if left.shape != right.shape:
2025-02-24T15:52:32.5666904Z                 raise_assert_detail(
2025-02-24T15:52:32.5667061Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5667133Z                 )
2025-02-24T15:52:32.5667205Z     
2025-02-24T15:52:32.5667278Z             diff = 0
2025-02-24T15:52:32.5667400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5667495Z                 # count up differences
2025-02-24T15:52:32.5667666Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5667751Z                     diff += 1
2025-02-24T15:52:32.5667821Z     
2025-02-24T15:52:32.5667912Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5668050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5668227Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5668335Z E           AssertionError: Series are different
2025-02-24T15:52:32.5668413Z E           
2025-02-24T15:52:32.5668606Z E           Series values are different (4.04858 %)
2025-02-24T15:52:32.5668987Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5669400Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5669734Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5669748Z 
2025-02-24T15:52:32.5670062Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5670381Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-24T15:52:32.5670385Z 
2025-02-24T15:52:32.5670608Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bd63f50>
2025-02-24T15:52:32.5670780Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5670872Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5670876Z 
2025-02-24T15:52:32.5671306Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5671436Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5671525Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5671602Z         try:
2025-02-24T15:52:32.5671744Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5671836Z         except KeyError:
2025-02-24T15:52:32.5671975Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5672048Z     
2025-02-24T15:52:32.5672138Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5672283Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5672434Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5672667Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5672822Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5672975Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5673164Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5673170Z 
2025-02-24T15:52:32.5673350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5673472Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5673476Z 
2025-02-24T15:52:32.5673621Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5673712Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5673823Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5673911Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5674056Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:52:32.5674141Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:52:32.5674252Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:52:32.5674333Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:52:32.5674419Z err_msg = None
2025-02-24T15:52:32.5674423Z 
2025-02-24T15:52:32.5674669Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5674762Z         if err_msg is None:
2025-02-24T15:52:32.5674861Z             if left.shape != right.shape:
2025-02-24T15:52:32.5674953Z                 raise_assert_detail(
2025-02-24T15:52:32.5675206Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5675285Z                 )
2025-02-24T15:52:32.5675360Z     
2025-02-24T15:52:32.5675434Z             diff = 0
2025-02-24T15:52:32.5675550Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5675641Z                 # count up differences
2025-02-24T15:52:32.5675816Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5675896Z                     diff += 1
2025-02-24T15:52:32.5675970Z     
2025-02-24T15:52:32.5676058Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5676201Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5676380Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5676490Z E           AssertionError: Series are different
2025-02-24T15:52:32.5676566Z E           
2025-02-24T15:52:32.5676677Z E           Series values are different (6.47773 %)
2025-02-24T15:52:32.5677048Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5677426Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5677806Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.5677814Z 
2025-02-24T15:52:32.5678129Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5678378Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-24T15:52:32.5678382Z 
2025-02-24T15:52:32.5678525Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5678661Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5678764Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5678908Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5679032Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5679132Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5679210Z err_msg = None
2025-02-24T15:52:32.5679214Z 
2025-02-24T15:52:32.5679327Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5679414Z         if err_msg is None:
2025-02-24T15:52:32.5679510Z             if left.shape != right.shape:
2025-02-24T15:52:32.5679599Z                 raise_assert_detail(
2025-02-24T15:52:32.5679822Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5679903Z                 )
2025-02-24T15:52:32.5679972Z     
2025-02-24T15:52:32.5680049Z             diff = 0
2025-02-24T15:52:32.5680163Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5680352Z                 # count up differences
2025-02-24T15:52:32.5680519Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5680603Z                     diff += 1
2025-02-24T15:52:32.5680672Z     
2025-02-24T15:52:32.5680765Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5681063Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5681311Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5681434Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5681508Z E           
2025-02-24T15:52:32.5681628Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5681897Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5682172Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5682176Z 
2025-02-24T15:52:32.5682484Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5682488Z 
2025-02-24T15:52:32.5682659Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5682667Z 
2025-02-24T15:52:32.5682899Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb941d0>
2025-02-24T15:52:32.5683101Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>, attr = 'nu'
2025-02-24T15:52:32.5683116Z 
2025-02-24T15:52:32.5683253Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5683373Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5683460Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5683534Z         try:
2025-02-24T15:52:32.5683675Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5683762Z         except KeyError:
2025-02-24T15:52:32.5683903Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5683975Z     
2025-02-24T15:52:32.5684064Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5684163Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5684252Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5684390Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5684484Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5684574Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5684698Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5684702Z 
2025-02-24T15:52:32.5684830Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5684949Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5685100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5685175Z     ???
2025-02-24T15:52:32.5685289Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5685293Z 
2025-02-24T15:52:32.5685368Z >   ???
2025-02-24T15:52:32.5685505Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5685575Z E   
2025-02-24T15:52:32.5685836Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5685955Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5686030Z E          ...
2025-02-24T15:52:32.5686120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5686358Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5686474Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5686551Z E          ...
2025-02-24T15:52:32.5686638Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5686772Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5686885Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5686889Z 
2025-02-24T15:52:32.5686982Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5687277Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-24T15:52:32.5687281Z 
2025-02-24T15:52:32.5687419Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5687553Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5687653Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5687797Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5687927Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5688023Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5688106Z err_msg = None
2025-02-24T15:52:32.5688109Z 
2025-02-24T15:52:32.5688219Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5688307Z         if err_msg is None:
2025-02-24T15:52:32.5688403Z             if left.shape != right.shape:
2025-02-24T15:52:32.5688492Z                 raise_assert_detail(
2025-02-24T15:52:32.5688646Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5688726Z                 )
2025-02-24T15:52:32.5688797Z     
2025-02-24T15:52:32.5688877Z             diff = 0
2025-02-24T15:52:32.5688990Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5689111Z                 # count up differences
2025-02-24T15:52:32.5689420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5689553Z                     diff += 1
2025-02-24T15:52:32.5689675Z     
2025-02-24T15:52:32.5689825Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5690057Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5690292Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5690412Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5690485Z E           
2025-02-24T15:52:32.5690601Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5690874Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5691305Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5691310Z 
2025-02-24T15:52:32.5691636Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5691640Z 
2025-02-24T15:52:32.5691816Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5691965Z 
2025-02-24T15:52:32.5692200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb94290>
2025-02-24T15:52:32.5692371Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5692563Z attr = 'wavelength_cm'
2025-02-24T15:52:32.5692567Z 
2025-02-24T15:52:32.5692712Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5692831Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5692922Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5692996Z         try:
2025-02-24T15:52:32.5693144Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5693232Z         except KeyError:
2025-02-24T15:52:32.5693372Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5693448Z     
2025-02-24T15:52:32.5693538Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5693639Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5693750Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5693893Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5693982Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5694085Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5694197Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5694201Z 
2025-02-24T15:52:32.5694333Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5694456Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5694609Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5694689Z     ???
2025-02-24T15:52:32.5694801Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5694805Z 
2025-02-24T15:52:32.5694880Z >   ???
2025-02-24T15:52:32.5695009Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5695084Z E   
2025-02-24T15:52:32.5695218Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5695337Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5695412Z E          ...
2025-02-24T15:52:32.5695512Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5695648Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5695763Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5695845Z E          ...
2025-02-24T15:52:32.5695933Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5696084Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5696192Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5696196Z 
2025-02-24T15:52:32.5696295Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5696554Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-24T15:52:32.5696558Z 
2025-02-24T15:52:32.5696700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5696836Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5696942Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5697082Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5697208Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5697310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5697390Z err_msg = None
2025-02-24T15:52:32.5697394Z 
2025-02-24T15:52:32.5697513Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5697598Z         if err_msg is None:
2025-02-24T15:52:32.5697703Z             if left.shape != right.shape:
2025-02-24T15:52:32.5697797Z                 raise_assert_detail(
2025-02-24T15:52:32.5698034Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5698117Z                 )
2025-02-24T15:52:32.5698188Z     
2025-02-24T15:52:32.5698269Z             diff = 0
2025-02-24T15:52:32.5698463Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5698559Z                 # count up differences
2025-02-24T15:52:32.5698733Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5698819Z                     diff += 1
2025-02-24T15:52:32.5698890Z     
2025-02-24T15:52:32.5698986Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5699124Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5699300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5699451Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5699575Z E           
2025-02-24T15:52:32.5699778Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5700235Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5700642Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5700647Z 
2025-02-24T15:52:32.5701180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5701185Z 
2025-02-24T15:52:32.5701371Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5701376Z 
2025-02-24T15:52:32.5701608Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb94350>
2025-02-24T15:52:32.5701814Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>, attr = 'f_lu'
2025-02-24T15:52:32.5701823Z 
2025-02-24T15:52:32.5701968Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5702091Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5702177Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5702253Z         try:
2025-02-24T15:52:32.5702396Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5702481Z         except KeyError:
2025-02-24T15:52:32.5702621Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5702695Z     
2025-02-24T15:52:32.5702785Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5702884Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5702979Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5703121Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5703213Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5703310Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5703427Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5703430Z 
2025-02-24T15:52:32.5703558Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:52:32.5703677Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5703825Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5703900Z     ???
2025-02-24T15:52:32.5704014Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5704018Z 
2025-02-24T15:52:32.5704096Z >   ???
2025-02-24T15:52:32.5704229Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5704300Z E   
2025-02-24T15:52:32.5704565Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5704682Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5704760Z E          ...
2025-02-24T15:52:32.5705032Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5705168Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5705281Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5705361Z E          ...
2025-02-24T15:52:32.5705450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5705583Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5705692Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5705700Z 
2025-02-24T15:52:32.5705791Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5706083Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-24T15:52:32.5706087Z 
2025-02-24T15:52:32.5706227Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5706363Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5706469Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5706609Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5706741Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5706844Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5706929Z err_msg = None
2025-02-24T15:52:32.5706932Z 
2025-02-24T15:52:32.5707049Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5707138Z         if err_msg is None:
2025-02-24T15:52:32.5707237Z             if left.shape != right.shape:
2025-02-24T15:52:32.5707328Z                 raise_assert_detail(
2025-02-24T15:52:32.5707483Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5707562Z                 )
2025-02-24T15:52:32.5707632Z     
2025-02-24T15:52:32.5707714Z             diff = 0
2025-02-24T15:52:32.5707833Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5707932Z                 # count up differences
2025-02-24T15:52:32.5708110Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5708191Z                     diff += 1
2025-02-24T15:52:32.5708266Z     
2025-02-24T15:52:32.5708358Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5708501Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5708674Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5708791Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5708864Z E           
2025-02-24T15:52:32.5708986Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5709256Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5709532Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5709537Z 
2025-02-24T15:52:32.5709860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5709864Z 
2025-02-24T15:52:32.5710124Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5710135Z 
2025-02-24T15:52:32.5710382Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb94ad0>
2025-02-24T15:52:32.5710555Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5710712Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5710716Z 
2025-02-24T15:52:32.5710859Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5711140Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5711235Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5711307Z         try:
2025-02-24T15:52:32.5711452Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5711535Z         except KeyError:
2025-02-24T15:52:32.5711679Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5711757Z     
2025-02-24T15:52:32.5711846Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5711951Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5712041Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5712180Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5712267Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5712369Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5712479Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5712557Z             else:
2025-02-24T15:52:32.5712653Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5712765Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5712769Z 
2025-02-24T15:52:32.5712902Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5713020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5713172Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5713245Z     ???
2025-02-24T15:52:32.5713364Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5713368Z 
2025-02-24T15:52:32.5713439Z >   ???
2025-02-24T15:52:32.5713571Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5713674Z E   
2025-02-24T15:52:32.5713827Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5713944Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5714017Z E          ...
2025-02-24T15:52:32.5714112Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5714245Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5714362Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5714440Z E          ...
2025-02-24T15:52:32.5714531Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5714660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5714769Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5714778Z 
2025-02-24T15:52:32.5714869Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5715156Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-24T15:52:32.5715164Z 
2025-02-24T15:52:32.5715300Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5715429Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5715531Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5715669Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5715796Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5715890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5715972Z err_msg = None
2025-02-24T15:52:32.5715976Z 
2025-02-24T15:52:32.5716236Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5716324Z         if err_msg is None:
2025-02-24T15:52:32.5716423Z             if left.shape != right.shape:
2025-02-24T15:52:32.5716509Z                 raise_assert_detail(
2025-02-24T15:52:32.5716765Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5716837Z                 )
2025-02-24T15:52:32.5716910Z     
2025-02-24T15:52:32.5716984Z             diff = 0
2025-02-24T15:52:32.5717098Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5717186Z                 # count up differences
2025-02-24T15:52:32.5717361Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5717441Z                     diff += 1
2025-02-24T15:52:32.5717514Z     
2025-02-24T15:52:32.5717607Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5717745Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5717928Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5718042Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5718120Z E           
2025-02-24T15:52:32.5718241Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5718506Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5718891Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5718906Z 
2025-02-24T15:52:32.5719435Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5719442Z 
2025-02-24T15:52:32.5719746Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5719751Z 
2025-02-24T15:52:32.5720034Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb94b90>
2025-02-24T15:52:32.5720208Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5720291Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5720296Z 
2025-02-24T15:52:32.5720436Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5720554Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5720639Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5720714Z         try:
2025-02-24T15:52:32.5720855Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5721099Z         except KeyError:
2025-02-24T15:52:32.5721247Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5721324Z     
2025-02-24T15:52:32.5721416Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5721522Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5721616Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5721754Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5721848Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5721939Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5722057Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5722131Z             else:
2025-02-24T15:52:32.5722231Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5722343Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5722347Z 
2025-02-24T15:52:32.5722478Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5722726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5722882Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5722958Z     ???
2025-02-24T15:52:32.5723177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5723181Z 
2025-02-24T15:52:32.5723256Z >   ???
2025-02-24T15:52:32.5723386Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5723461Z E   
2025-02-24T15:52:32.5723595Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5723713Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5723786Z E          ...
2025-02-24T15:52:32.5723880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5724018Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5724133Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5724211Z E          ...
2025-02-24T15:52:32.5724309Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5724441Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5724549Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5724560Z 
2025-02-24T15:52:32.5724657Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5724926Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-24T15:52:32.5724930Z 
2025-02-24T15:52:32.5725070Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5725207Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5725305Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5725445Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:52:32.5725574Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:52:32.5725672Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:52:32.5725748Z err_msg = None
2025-02-24T15:52:32.5725752Z 
2025-02-24T15:52:32.5725874Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:52:32.5725956Z         if err_msg is None:
2025-02-24T15:52:32.5726057Z             if left.shape != right.shape:
2025-02-24T15:52:32.5726151Z                 raise_assert_detail(
2025-02-24T15:52:32.5726298Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:52:32.5726373Z                 )
2025-02-24T15:52:32.5726441Z     
2025-02-24T15:52:32.5726516Z             diff = 0
2025-02-24T15:52:32.5726629Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:52:32.5726724Z                 # count up differences
2025-02-24T15:52:32.5726898Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:52:32.5726986Z                     diff += 1
2025-02-24T15:52:32.5727056Z     
2025-02-24T15:52:32.5727152Z             diff = diff * 100.0 / left.size
2025-02-24T15:52:32.5727290Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:52:32.5727468Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:52:32.5727584Z E           AssertionError: numpy array are different
2025-02-24T15:52:32.5727659Z E           
2025-02-24T15:52:32.5727775Z E           numpy array values are different (4.04858 %)
2025-02-24T15:52:32.5728037Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5728408Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.5728487Z 
2025-02-24T15:52:32.5728799Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:52:32.5728803Z 
2025-02-24T15:52:32.5728976Z During handling of the above exception, another exception occurred:
2025-02-24T15:52:32.5728980Z 
2025-02-24T15:52:32.5729213Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x7f888bb94d10>
2025-02-24T15:52:32.5729379Z plasma = <tardis.plasma.base.BasePlasma object at 0x7f885bb29a30>
2025-02-24T15:52:32.5729459Z attr = 'j_blues'
2025-02-24T15:52:32.5729463Z 
2025-02-24T15:52:32.5729606Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:52:32.5729724Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:52:32.5729821Z         key = f"plasma/{attr}"
2025-02-24T15:52:32.5729894Z         try:
2025-02-24T15:52:32.5730040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:52:32.5730131Z         except KeyError:
2025-02-24T15:52:32.5730276Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:52:32.5730346Z     
2025-02-24T15:52:32.5730440Z         if hasattr(plasma, attr):
2025-02-24T15:52:32.5730536Z             actual = getattr(plasma, attr)
2025-02-24T15:52:32.5730631Z             if attr == "selected_atoms":
2025-02-24T15:52:32.5730765Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:52:32.5730855Z             elif actual.ndim == 1:
2025-02-24T15:52:32.5731107Z                 actual = pd.Series(actual)
2025-02-24T15:52:32.5731223Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:52:32.5731302Z             else:
2025-02-24T15:52:32.5731406Z                 actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5731530Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:52:32.5731535Z 
2025-02-24T15:52:32.5731660Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:52:32.5731786Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5731935Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5732011Z     ???
2025-02-24T15:52:32.5732128Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5732132Z 
2025-02-24T15:52:32.5732203Z >   ???
2025-02-24T15:52:32.5732335Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.5732409Z E   
2025-02-24T15:52:32.5732547Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.5732660Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5732737Z E          ...
2025-02-24T15:52:32.5732828Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5732964Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5733076Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.5733157Z E          ...
2025-02-24T15:52:32.5733250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.5733377Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.5733488Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.5733491Z 
2025-02-24T15:52:32.5733583Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5733758Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-24T15:52:32.5733761Z 
2025-02-24T15:52:32.5733991Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5734090Z attr = 'stimulated_emission_factor'
2025-02-24T15:52:32.5734363Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f888beeb050>
2025-02-24T15:52:32.5734493Z 
2025-02-24T15:52:32.5734646Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5734820Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5735047Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5735184Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5735305Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5735401Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5735495Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5735606Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5735610Z 
2025-02-24T15:52:32.5735717Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5735836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5735839Z 
2025-02-24T15:52:32.5736170Z args = (<function assert_allclose.<locals>.compare at 0x7f885e2740e0>, array([[0.        , 0.        , 0.        , ..., 0.   ...1,
2025-02-24T15:52:32.5736245Z         0.01476858],
2025-02-24T15:52:32.5736385Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-24T15:52:32.5736466Z         0.01473787]]))
2025-02-24T15:52:32.5736718Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5736722Z 
2025-02-24T15:52:32.5736797Z     @wraps(func)
2025-02-24T15:52:32.5736890Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5736982Z         with self._recreate_cm():
2025-02-24T15:52:32.5737073Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5737166Z E           AssertionError: 
2025-02-24T15:52:32.5737277Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5737353Z E           
2025-02-24T15:52:32.5737460Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T15:52:32.5737564Z E           Max absolute difference: 1.
2025-02-24T15:52:32.5737658Z E           Max relative difference: 1.
2025-02-24T15:52:32.5737795Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.5737907Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.5738017Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:52:32.5738145Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.5738251Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.5738357Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:52:32.5738361Z 
2025-02-24T15:52:32.5738568Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5738739Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-24T15:52:32.5738743Z 
2025-02-24T15:52:32.5738969Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5739062Z attr = 'lines_lower_level_index'
2025-02-24T15:52:32.5739342Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f885e61ce30>
2025-02-24T15:52:32.5739346Z 
2025-02-24T15:52:32.5739496Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5739668Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5739792Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5739928Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5740049Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5740144Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5740237Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5740437Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5740442Z 
2025-02-24T15:52:32.5740555Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5740671Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5740748Z 
2025-02-24T15:52:32.5741370Z args = (<function assert_allclose.<locals>.compare at 0x7f888ac1bba0>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-24T15:52:32.5741628Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5741633Z 
2025-02-24T15:52:32.5741715Z     @wraps(func)
2025-02-24T15:52:32.5741802Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5741893Z         with self._recreate_cm():
2025-02-24T15:52:32.5741987Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5742076Z E           AssertionError: 
2025-02-24T15:52:32.5742189Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5742266Z E           
2025-02-24T15:52:32.5742377Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T15:52:32.5742472Z E           Max absolute difference: 4005
2025-02-24T15:52:32.5742576Z E           Max relative difference: 26.00649351
2025-02-24T15:52:32.5742692Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:52:32.5742801Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:52:32.5742805Z 
2025-02-24T15:52:32.5743013Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5743180Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-24T15:52:32.5743184Z 
2025-02-24T15:52:32.5743416Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5743508Z attr = 'lines_upper_level_index'
2025-02-24T15:52:32.5743787Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8883bba480>
2025-02-24T15:52:32.5743791Z 
2025-02-24T15:52:32.5743938Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5744107Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5744237Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5744376Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5744502Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5744591Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5744687Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5744790Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5744794Z 
2025-02-24T15:52:32.5744904Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5745045Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5745051Z 
2025-02-24T15:52:32.5745762Z args = (<function assert_allclose.<locals>.compare at 0x7f888a48d120>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-24T15:52:32.5746172Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5746181Z 
2025-02-24T15:52:32.5746260Z     @wraps(func)
2025-02-24T15:52:32.5746351Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5746438Z         with self._recreate_cm():
2025-02-24T15:52:32.5746530Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5746617Z E           AssertionError: 
2025-02-24T15:52:32.5746728Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5746799Z E           
2025-02-24T15:52:32.5746906Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T15:52:32.5746999Z E           Max absolute difference: 4046
2025-02-24T15:52:32.5747102Z E           Max relative difference: 24.82208589
2025-02-24T15:52:32.5747347Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:52:32.5747458Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:52:32.5747463Z 
2025-02-24T15:52:32.5747670Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5747927Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-24T15:52:32.5747931Z 
2025-02-24T15:52:32.5748164Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5748244Z attr = 'beta_sobolev'
2025-02-24T15:52:32.5748516Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8883bba3f0>
2025-02-24T15:52:32.5748520Z 
2025-02-24T15:52:32.5748669Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5748834Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5748958Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5749091Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5749215Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5749309Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5749412Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5749513Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5749517Z 
2025-02-24T15:52:32.5749623Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5749740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5749744Z 
2025-02-24T15:52:32.5750014Z args = (<function assert_allclose.<locals>.compare at 0x7f8885161760>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5750093Z        [1., 1., .....,
2025-02-24T15:52:32.5750173Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5750258Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5750338Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T15:52:32.5750592Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5750596Z 
2025-02-24T15:52:32.5750673Z     @wraps(func)
2025-02-24T15:52:32.5750770Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5750865Z         with self._recreate_cm():
2025-02-24T15:52:32.5751353Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5751451Z E           AssertionError: 
2025-02-24T15:52:32.5751559Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5751637Z E           
2025-02-24T15:52:32.5751744Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:52:32.5751849Z E           Max absolute difference: 0.99984222
2025-02-24T15:52:32.5751950Z E           Max relative difference: 6337.12154973
2025-02-24T15:52:32.5752047Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5752133Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5752231Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.5752321Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5752411Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.5752507Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.5752511Z 
2025-02-24T15:52:32.5752714Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5752862Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-24T15:52:32.5752865Z 
2025-02-24T15:52:32.5753089Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5753170Z attr = 'lines'
2025-02-24T15:52:32.5753439Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f888bbf46b0>
2025-02-24T15:52:32.5753446Z 
2025-02-24T15:52:32.5753591Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5753899Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5754025Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5754165Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5754390Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5754486Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5754578Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5754683Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5754688Z 
2025-02-24T15:52:32.5754794Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5754913Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5754917Z 
2025-02-24T15:52:32.5755383Z args = (<function assert_allclose.<locals>.compare at 0x7f888a694220>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02...       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-24T15:52:32.5755498Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-24T15:52:32.5755751Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5755764Z 
2025-02-24T15:52:32.5755842Z     @wraps(func)
2025-02-24T15:52:32.5755933Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5756021Z         with self._recreate_cm():
2025-02-24T15:52:32.5756114Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5756206Z E           AssertionError: 
2025-02-24T15:52:32.5756315Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5756393Z E           
2025-02-24T15:52:32.5756497Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T15:52:32.5756605Z E           Max absolute difference: 4.25260542e+12
2025-02-24T15:52:32.5756704Z E           Max relative difference: 18196.0085861
2025-02-24T15:52:32.5756863Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:52:32.5756960Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T15:52:32.5757107Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:52:32.5757254Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:52:32.5757355Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T15:52:32.5757496Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:52:32.5757500Z 
2025-02-24T15:52:32.5757702Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5757850Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-24T15:52:32.5757854Z 
2025-02-24T15:52:32.5758078Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5758160Z attr = 'f_lu'
2025-02-24T15:52:32.5758433Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f888bbf4350>
2025-02-24T15:52:32.5758437Z 
2025-02-24T15:52:32.5758588Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5758758Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5758885Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5759022Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5759143Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5759238Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5759331Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5759435Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5759439Z 
2025-02-24T15:52:32.5759546Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5759665Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5759669Z 
2025-02-24T15:52:32.5760226Z args = (<function assert_allclose.<locals>.compare at 0x7f8885161b20>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02,...), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-24T15:52:32.5760338Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-24T15:52:32.5760661Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5760665Z 
2025-02-24T15:52:32.5760742Z     @wraps(func)
2025-02-24T15:52:32.5760831Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5761051Z         with self._recreate_cm():
2025-02-24T15:52:32.5761149Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5761240Z E           AssertionError: 
2025-02-24T15:52:32.5761347Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5761426Z E           
2025-02-24T15:52:32.5761529Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T15:52:32.5761633Z E           Max absolute difference: 2.92713618
2025-02-24T15:52:32.5761765Z E           Max relative difference: 18196.0085861
2025-02-24T15:52:32.5761923Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:52:32.5762011Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T15:52:32.5762167Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:52:32.5762252Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T15:52:32.5762261Z 
2025-02-24T15:52:32.5762464Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5762623Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-24T15:52:32.5762626Z 
2025-02-24T15:52:32.5762855Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x7f888558f020>
2025-02-24T15:52:32.5762942Z attr = 'tau_sobolevs'
2025-02-24T15:52:32.5763209Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f885bbf85f0>
2025-02-24T15:52:32.5763218Z 
2025-02-24T15:52:32.5763367Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:52:32.5763534Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:52:32.5763665Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:52:32.5763800Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:52:32.5763920Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:52:32.5764017Z             if hasattr(actual, "cgs"):
2025-02-24T15:52:32.5764107Z                 actual = actual.cgs.value
2025-02-24T15:52:32.5764214Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:52:32.5764218Z 
2025-02-24T15:52:32.5764322Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:52:32.5764440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5764443Z 
2025-02-24T15:52:32.5764909Z args = (<function assert_allclose.<locals>.compare at 0x7f885e2740e0>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00...       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-24T15:52:32.5765021Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-24T15:52:32.5765273Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5765277Z 
2025-02-24T15:52:32.5765352Z     @wraps(func)
2025-02-24T15:52:32.5765442Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5765531Z         with self._recreate_cm():
2025-02-24T15:52:32.5765623Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5765710Z E           AssertionError: 
2025-02-24T15:52:32.5765822Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5765895Z E           
2025-02-24T15:52:32.5766004Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T15:52:32.5766112Z E           Max absolute difference: 282815.33818472
2025-02-24T15:52:32.5766331Z E           Max relative difference: 4.12352828e+47
2025-02-24T15:52:32.5766493Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:52:32.5766581Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T15:52:32.5766828Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:52:32.5766975Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:52:32.5767066Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T15:52:32.5767200Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:52:32.5767204Z 
2025-02-24T15:52:32.5767410Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5767581Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-24T15:52:32.5767585Z 
2025-02-24T15:52:32.5767806Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5767894Z attr = 'iterations_w'
2025-02-24T15:52:32.5768165Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8877880290>
2025-02-24T15:52:32.5768170Z 
2025-02-24T15:52:32.5768278Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5768352Z         "attr",
2025-02-24T15:52:32.5768430Z         [
2025-02-24T15:52:32.5768514Z             "iterations_w",
2025-02-24T15:52:32.5768603Z             "iterations_t_rad",
2025-02-24T15:52:32.5768709Z             "iterations_electron_densities",
2025-02-24T15:52:32.5768796Z             "iterations_t_inner",
2025-02-24T15:52:32.5768872Z         ],
2025-02-24T15:52:32.5768943Z     )
2025-02-24T15:52:32.5769148Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5769258Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T15:52:32.5769354Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5769441Z             actual = actual.value
2025-02-24T15:52:32.5769544Z         actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5769670Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5769857Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5769866Z 
2025-02-24T15:52:32.5769989Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T15:52:32.5770103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5770258Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5770331Z     ???
2025-02-24T15:52:32.5770447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5770451Z 
2025-02-24T15:52:32.5770521Z >   ???
2025-02-24T15:52:32.5770708Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5770777Z E   
2025-02-24T15:52:32.5771191Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.5771338Z E   [index]: [0, 1]
2025-02-24T15:52:32.5771510Z E   [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T15:52:32.5771686Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T15:52:32.5771992Z E   At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T15:52:32.5771999Z 
2025-02-24T15:52:32.5772142Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5772302Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.5772738Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.5773190Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.5773349Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T15:52:32.5773354Z 
2025-02-24T15:52:32.5773357Z 
2025-02-24T15:52:32.5773732Z Packets:                                                                                   4031/? [04:47<00:00, 10.45it/s]   [A
2025-02-24T15:52:32.5773738Z 
2025-02-24T15:52:32.5773973Z Packets:                                                                                   14378/? [04:47<00:00, 61.82it/s][A
2025-02-24T15:52:32.5774100Z 
2025-02-24T15:52:32.5774334Z Packets:                                                                                   25103/? [04:47<00:00, 137.80it/s][A
2025-02-24T15:52:32.5774339Z 
2025-02-24T15:52:32.5774562Z Packets:                                                                                   35779/? [04:47<00:00, 245.66it/s][A
2025-02-24T15:52:32.5775291Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [04:47<00:00, 101.25s/it]
2025-02-24T15:52:32.5775301Z 
2025-02-24T15:52:32.5775558Z Packets:                                                                                   44030/? [04:47<00:00, 245.66it/s][A
2025-02-24T15:52:32.5775562Z 
2025-02-24T15:52:32.5775798Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-24T15:52:32.5775802Z 
2025-02-24T15:52:32.5776075Z Packets:   ███████████████████▎                                                            9643/40000 [00:00<00:00, 35166.02it/s][A
2025-02-24T15:52:32.5776090Z 
2025-02-24T15:52:32.5776362Z Packets:   ██████████████████████████▎                                                     13167/40000 [00:00<00:00, 35189.88it/s][A
2025-02-24T15:52:32.5776366Z 
2025-02-24T15:52:32.5776645Z Packets:   █████████████████████████████████▍                                              16693/40000 [00:00<00:00, 35211.02it/s][A
2025-02-24T15:52:32.5776649Z 
2025-02-24T15:52:32.5776955Z Packets:   ████████████████████████████████████████▍                                       20216/40000 [00:00<00:00, 35163.75it/s][A
2025-02-24T15:52:32.5776958Z 
2025-02-24T15:52:32.5777261Z Packets:   ███████████████████████████████████████████████▌                                23756/40000 [00:00<00:00, 35236.42it/s][A
2025-02-24T15:52:32.5777265Z 
2025-02-24T15:52:32.5777557Z Packets:   ██████████████████████████████████████████████████████▋                         27323/40000 [00:00<00:00, 35368.71it/s][A
2025-02-24T15:52:32.5777575Z 
2025-02-24T15:52:32.5777886Z Packets:   █████████████████████████████████████████████████████████████▋                  30869/40000 [00:00<00:00, 35393.91it/s][A
2025-02-24T15:52:32.5777890Z 
2025-02-24T15:52:32.5778197Z Packets:   ████████████████████████████████████████████████████████████████████▊           34410/40000 [00:00<00:00, 35342.50it/s][A
2025-02-24T15:52:32.5778201Z 
2025-02-24T15:52:32.5778518Z Packets:   ███████████████████████████████████████████████████████████████████████████▉    37979/40000 [00:01<00:00, 35442.68it/s][A
2025-02-24T15:52:32.5778673Z Iterations:                                                                                6/? [04:50<00:00, 67.62s/it] 
2025-02-24T15:52:32.5778805Z 
2025-02-24T15:52:32.5779133Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 35442.68it/s][A
2025-02-24T15:52:32.5779300Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.5779909Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.5780085Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-24T15:52:32.5780089Z 
2025-02-24T15:52:32.5780310Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5780401Z attr = 'iterations_t_rad'
2025-02-24T15:52:32.5780676Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f885ae82390>
2025-02-24T15:52:32.5780679Z 
2025-02-24T15:52:32.5780776Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5780867Z         "attr",
2025-02-24T15:52:32.5781085Z         [
2025-02-24T15:52:32.5781177Z             "iterations_w",
2025-02-24T15:52:32.5781262Z             "iterations_t_rad",
2025-02-24T15:52:32.5781372Z             "iterations_electron_densities",
2025-02-24T15:52:32.5781467Z             "iterations_t_inner",
2025-02-24T15:52:32.5781547Z         ],
2025-02-24T15:52:32.5781623Z     )
2025-02-24T15:52:32.5781825Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5781942Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T15:52:32.5782033Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5782127Z             actual = actual.value
2025-02-24T15:52:32.5782221Z         actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5782353Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5782533Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5782537Z 
2025-02-24T15:52:32.5782670Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T15:52:32.5782789Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5782943Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5783025Z     ???
2025-02-24T15:52:32.5783136Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5783140Z 
2025-02-24T15:52:32.5783217Z >   ???
2025-02-24T15:52:32.5783404Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5783481Z E   
2025-02-24T15:52:32.5783648Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.5783730Z E   [index]: [0, 1]
2025-02-24T15:52:32.5783832Z E   [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T15:52:32.5783938Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T15:52:32.5784120Z E   At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T15:52:32.5784124Z 
2025-02-24T15:52:32.5784217Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5784408Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-24T15:52:32.5784416Z 
2025-02-24T15:52:32.5784636Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5784745Z attr = 'iterations_electron_densities'
2025-02-24T15:52:32.5785013Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f88627bf290>
2025-02-24T15:52:32.5785017Z 
2025-02-24T15:52:32.5785119Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5785193Z         "attr",
2025-02-24T15:52:32.5785272Z         [
2025-02-24T15:52:32.5785359Z             "iterations_w",
2025-02-24T15:52:32.5785443Z             "iterations_t_rad",
2025-02-24T15:52:32.5785549Z             "iterations_electron_densities",
2025-02-24T15:52:32.5785635Z             "iterations_t_inner",
2025-02-24T15:52:32.5785712Z         ],
2025-02-24T15:52:32.5785907Z     )
2025-02-24T15:52:32.5786115Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5786227Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T15:52:32.5786422Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5786507Z             actual = actual.value
2025-02-24T15:52:32.5786609Z         actual = pd.DataFrame(actual)
2025-02-24T15:52:32.5786735Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5786918Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5786922Z 
2025-02-24T15:52:32.5787050Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T15:52:32.5787162Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5787318Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5787390Z     ???
2025-02-24T15:52:32.5787509Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5787513Z 
2025-02-24T15:52:32.5787583Z >   ???
2025-02-24T15:52:32.5787768Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.5787845Z E   
2025-02-24T15:52:32.5788012Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.5788095Z E   [index]: [0, 1]
2025-02-24T15:52:32.5788196Z E   [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T15:52:32.5788303Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T15:52:32.5788476Z E   At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T15:52:32.5788481Z 
2025-02-24T15:52:32.5788576Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5788741Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-24T15:52:32.5788745Z 
2025-02-24T15:52:32.5788970Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5789063Z attr = 'nu_bar_estimator'
2025-02-24T15:52:32.5789330Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f88627bffb0>
2025-02-24T15:52:32.5789334Z 
2025-02-24T15:52:32.5789437Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5789511Z         "attr",
2025-02-24T15:52:32.5789588Z         [
2025-02-24T15:52:32.5789673Z             "nu_bar_estimator",
2025-02-24T15:52:32.5789758Z             "j_estimator",
2025-02-24T15:52:32.5789841Z             "t_radiative",
2025-02-24T15:52:32.5789973Z             "dilution_factor",
2025-02-24T15:52:32.5790115Z             "output_nus",
2025-02-24T15:52:32.5790258Z             "output_energies",
2025-02-24T15:52:32.5790378Z         ],
2025-02-24T15:52:32.5790501Z     )
2025-02-24T15:52:32.5790814Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5791121Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5791271Z             actual = getattr(
2025-02-24T15:52:32.5791476Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5791558Z                 attr,
2025-02-24T15:52:32.5791630Z             )
2025-02-24T15:52:32.5791760Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5791913Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5792035Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5792117Z             actual = getattr(
2025-02-24T15:52:32.5792295Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5792374Z                 attr,
2025-02-24T15:52:32.5792445Z             )
2025-02-24T15:52:32.5792521Z         else:
2025-02-24T15:52:32.5792660Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5792736Z     
2025-02-24T15:52:32.5792827Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5793047Z             actual = actual.value
2025-02-24T15:52:32.5793143Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5793274Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5793457Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5793566Z 
2025-02-24T15:52:32.5793694Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5793814Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5793963Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5794040Z     ???
2025-02-24T15:52:32.5794155Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5794159Z 
2025-02-24T15:52:32.5794233Z >   ???
2025-02-24T15:52:32.5794332Z E   AssertionError: Series are different
2025-02-24T15:52:32.5794407Z E   
2025-02-24T15:52:32.5794504Z E   Series values are different (100.0 %)
2025-02-24T15:52:32.5794644Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.5795880Z E   [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T15:52:32.5797099Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T15:52:32.5797298Z E   At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T15:52:32.5797303Z 
2025-02-24T15:52:32.5797406Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5797565Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-24T15:52:32.5797569Z 
2025-02-24T15:52:32.5797789Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5797871Z attr = 'j_estimator'
2025-02-24T15:52:32.5798145Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8851963110>
2025-02-24T15:52:32.5798149Z 
2025-02-24T15:52:32.5798242Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5798321Z         "attr",
2025-02-24T15:52:32.5798392Z         [
2025-02-24T15:52:32.5798481Z             "nu_bar_estimator",
2025-02-24T15:52:32.5798567Z             "j_estimator",
2025-02-24T15:52:32.5798647Z             "t_radiative",
2025-02-24T15:52:32.5798743Z             "dilution_factor",
2025-02-24T15:52:32.5798824Z             "output_nus",
2025-02-24T15:52:32.5798910Z             "output_energies",
2025-02-24T15:52:32.5798982Z         ],
2025-02-24T15:52:32.5799060Z     )
2025-02-24T15:52:32.5799242Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5799360Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5799441Z             actual = getattr(
2025-02-24T15:52:32.5799638Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5799712Z                 attr,
2025-02-24T15:52:32.5799787Z             )
2025-02-24T15:52:32.5799911Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5800062Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5800181Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5800347Z             actual = getattr(
2025-02-24T15:52:32.5800529Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5800605Z                 attr,
2025-02-24T15:52:32.5800681Z             )
2025-02-24T15:52:32.5800849Z         else:
2025-02-24T15:52:32.5801116Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5801190Z     
2025-02-24T15:52:32.5801284Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5801370Z             actual = actual.value
2025-02-24T15:52:32.5801466Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5801601Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5801784Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5801788Z 
2025-02-24T15:52:32.5801917Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5802030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5802187Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5802259Z     ???
2025-02-24T15:52:32.5802372Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5802382Z 
2025-02-24T15:52:32.5802451Z >   ???
2025-02-24T15:52:32.5802556Z E   AssertionError: Series are different
2025-02-24T15:52:32.5802630Z E   
2025-02-24T15:52:32.5802724Z E   Series values are different (100.0 %)
2025-02-24T15:52:32.5802858Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.5803844Z E   [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T15:52:32.5804823Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T15:52:32.5805003Z E   At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T15:52:32.5805007Z 
2025-02-24T15:52:32.5805097Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5805260Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-24T15:52:32.5805264Z 
2025-02-24T15:52:32.5805482Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5805565Z attr = 't_radiative'
2025-02-24T15:52:32.5805832Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f88519626c0>
2025-02-24T15:52:32.5805929Z 
2025-02-24T15:52:32.5806206Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5806313Z         "attr",
2025-02-24T15:52:32.5806454Z         [
2025-02-24T15:52:32.5806587Z             "nu_bar_estimator",
2025-02-24T15:52:32.5806751Z             "j_estimator",
2025-02-24T15:52:32.5806911Z             "t_radiative",
2025-02-24T15:52:32.5807078Z             "dilution_factor",
2025-02-24T15:52:32.5807190Z             "output_nus",
2025-02-24T15:52:32.5807358Z             "output_energies",
2025-02-24T15:52:32.5807464Z         ],
2025-02-24T15:52:32.5807633Z     )
2025-02-24T15:52:32.5807900Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5808046Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5808216Z             actual = getattr(
2025-02-24T15:52:32.5808439Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5808608Z                 attr,
2025-02-24T15:52:32.5808977Z             )
2025-02-24T15:52:32.5809277Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5816149Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5816637Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5816768Z             actual = getattr(
2025-02-24T15:52:32.5816975Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5817052Z                 attr,
2025-02-24T15:52:32.5817128Z             )
2025-02-24T15:52:32.5817199Z         else:
2025-02-24T15:52:32.5817354Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5817425Z     
2025-02-24T15:52:32.5817524Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5817611Z             actual = actual.value
2025-02-24T15:52:32.5817706Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5817836Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5818038Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5818044Z 
2025-02-24T15:52:32.5818172Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5818306Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5818463Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5818534Z     ???
2025-02-24T15:52:32.5818649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5818653Z 
2025-02-24T15:52:32.5818721Z >   ???
2025-02-24T15:52:32.5818827Z E   AssertionError: Series are different
2025-02-24T15:52:32.5818898Z E   
2025-02-24T15:52:32.5819000Z E   Series values are different (90.0 %)
2025-02-24T15:52:32.5819134Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.5820153Z E   [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T15:52:32.5821322Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T15:52:32.5821505Z E   At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T15:52:32.5821511Z 
2025-02-24T15:52:32.5821609Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5821785Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-24T15:52:32.5821789Z 
2025-02-24T15:52:32.5822010Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5822099Z attr = 'dilution_factor'
2025-02-24T15:52:32.5822380Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8851963ad0>
2025-02-24T15:52:32.5822384Z 
2025-02-24T15:52:32.5822484Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5822559Z         "attr",
2025-02-24T15:52:32.5822635Z         [
2025-02-24T15:52:32.5822720Z             "nu_bar_estimator",
2025-02-24T15:52:32.5822804Z             "j_estimator",
2025-02-24T15:52:32.5822884Z             "t_radiative",
2025-02-24T15:52:32.5822967Z             "dilution_factor",
2025-02-24T15:52:32.5823050Z             "output_nus",
2025-02-24T15:52:32.5823132Z             "output_energies",
2025-02-24T15:52:32.5823207Z         ],
2025-02-24T15:52:32.5823276Z     )
2025-02-24T15:52:32.5823591Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5823723Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5823810Z             actual = getattr(
2025-02-24T15:52:32.5824012Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5824194Z                 attr,
2025-02-24T15:52:32.5824267Z             )
2025-02-24T15:52:32.5824391Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5824549Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5824665Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5824750Z             actual = getattr(
2025-02-24T15:52:32.5824928Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5825005Z                 attr,
2025-02-24T15:52:32.5825077Z             )
2025-02-24T15:52:32.5825156Z         else:
2025-02-24T15:52:32.5825300Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5825375Z     
2025-02-24T15:52:32.5825466Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5825557Z             actual = actual.value
2025-02-24T15:52:32.5825654Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5825783Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5825969Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5825973Z 
2025-02-24T15:52:32.5826096Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5826222Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5826374Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5826450Z     ???
2025-02-24T15:52:32.5826560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5826564Z 
2025-02-24T15:52:32.5826639Z >   ???
2025-02-24T15:52:32.5826743Z E   AssertionError: Series are different
2025-02-24T15:52:32.5826818Z E   
2025-02-24T15:52:32.5826916Z E   Series values are different (95.0 %)
2025-02-24T15:52:32.5827048Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.5828769Z E   [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T15:52:32.5829882Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T15:52:32.5830069Z E   At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T15:52:32.5830078Z 
2025-02-24T15:52:32.5830174Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5830334Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-24T15:52:32.5830338Z 
2025-02-24T15:52:32.5830559Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5830639Z attr = 'output_nus'
2025-02-24T15:52:32.5831017Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8863233d10>
2025-02-24T15:52:32.5831022Z 
2025-02-24T15:52:32.5831127Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5831200Z         "attr",
2025-02-24T15:52:32.5831274Z         [
2025-02-24T15:52:32.5831357Z             "nu_bar_estimator",
2025-02-24T15:52:32.5831575Z             "j_estimator",
2025-02-24T15:52:32.5831658Z             "t_radiative",
2025-02-24T15:52:32.5831746Z             "dilution_factor",
2025-02-24T15:52:32.5831828Z             "output_nus",
2025-02-24T15:52:32.5832018Z             "output_energies",
2025-02-24T15:52:32.5832089Z         ],
2025-02-24T15:52:32.5832163Z     )
2025-02-24T15:52:32.5832348Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5832470Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5832557Z             actual = getattr(
2025-02-24T15:52:32.5832752Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5832830Z                 attr,
2025-02-24T15:52:32.5832905Z             )
2025-02-24T15:52:32.5833028Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5833181Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5833303Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5833384Z             actual = getattr(
2025-02-24T15:52:32.5833560Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5833642Z                 attr,
2025-02-24T15:52:32.5833719Z             )
2025-02-24T15:52:32.5833790Z         else:
2025-02-24T15:52:32.5833929Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5834002Z     
2025-02-24T15:52:32.5834092Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5834180Z             actual = actual.value
2025-02-24T15:52:32.5834270Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5834399Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5834581Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5834585Z 
2025-02-24T15:52:32.5834709Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5834828Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5834981Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5835051Z     ???
2025-02-24T15:52:32.5835163Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5835172Z 
2025-02-24T15:52:32.5835247Z >   ???
2025-02-24T15:52:32.5835346Z E   AssertionError: Series are different
2025-02-24T15:52:32.5835419Z E   
2025-02-24T15:52:32.5835518Z E   Series values are different (5.1125 %)
2025-02-24T15:52:32.5835894Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5841319Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T15:52:32.5846828Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T15:52:32.5847170Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T15:52:32.5847178Z 
2025-02-24T15:52:32.5847335Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5847629Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-24T15:52:32.5847635Z 
2025-02-24T15:52:32.5847969Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x7f885bd12c90>
2025-02-24T15:52:32.5848066Z attr = 'output_energies'
2025-02-24T15:52:32.5848342Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f88593d11c0>
2025-02-24T15:52:32.5848346Z 
2025-02-24T15:52:32.5848444Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.5848518Z         "attr",
2025-02-24T15:52:32.5848593Z         [
2025-02-24T15:52:32.5848683Z             "nu_bar_estimator",
2025-02-24T15:52:32.5848764Z             "j_estimator",
2025-02-24T15:52:32.5848847Z             "t_radiative",
2025-02-24T15:52:32.5848931Z             "dilution_factor",
2025-02-24T15:52:32.5849016Z             "output_nus",
2025-02-24T15:52:32.5849102Z             "output_energies",
2025-02-24T15:52:32.5849186Z         ],
2025-02-24T15:52:32.5849374Z     )
2025-02-24T15:52:32.5849567Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:52:32.5849685Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:52:32.5849889Z             actual = getattr(
2025-02-24T15:52:32.5850089Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:52:32.5850168Z                 attr,
2025-02-24T15:52:32.5850248Z             )
2025-02-24T15:52:32.5850368Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:52:32.5850529Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:52:32.5850645Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:52:32.5850732Z             actual = getattr(
2025-02-24T15:52:32.5851052Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:52:32.5851192Z                 attr,
2025-02-24T15:52:32.5851273Z             )
2025-02-24T15:52:32.5851350Z         else:
2025-02-24T15:52:32.5851488Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:52:32.5851563Z     
2025-02-24T15:52:32.5851654Z         if hasattr(actual, "value"):
2025-02-24T15:52:32.5851752Z             actual = actual.value
2025-02-24T15:52:32.5851846Z         actual = pd.Series(actual)
2025-02-24T15:52:32.5851971Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:52:32.5852158Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:52:32.5852163Z 
2025-02-24T15:52:32.5852291Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:52:32.5852413Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5852570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:52:32.5852647Z     ???
2025-02-24T15:52:32.5852760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5852774Z 
2025-02-24T15:52:32.5852846Z >   ???
2025-02-24T15:52:32.5852953Z E   AssertionError: Series are different
2025-02-24T15:52:32.5853024Z E   
2025-02-24T15:52:32.5853127Z E   Series values are different (1.3025 %)
2025-02-24T15:52:32.5853502Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.5859967Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:52:32.5866639Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:52:32.5866867Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T15:52:32.5866872Z 
2025-02-24T15:52:32.5866970Z testing.pyx:173: AssertionError
2025-02-24T15:52:32.5867163Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-24T15:52:32.5867172Z 
2025-02-24T15:52:32.5867439Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f888bab0200>
2025-02-24T15:52:32.5867755Z simulation = <tardis.simulation.base.Simulation object at 0x7f8877047b90>
2025-02-24T15:52:32.5867760Z 
2025-02-24T15:52:32.5867890Z     def test_spectrum_real_packets(self, simulation):
2025-02-24T15:52:32.5868044Z         transport_state = simulation.transport.transport_state
2025-02-24T15:52:32.5868341Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T15:52:32.5868417Z     
2025-02-24T15:52:32.5868606Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T15:52:32.5868735Z         result = solver.spectrum_real_packets.luminosity
2025-02-24T15:52:32.5868910Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T15:52:32.5869013Z         expected = self.get_expected_data(key)
2025-02-24T15:52:32.5869086Z     
2025-02-24T15:52:32.5869197Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.5869270Z     
2025-02-24T15:52:32.5869358Z >       assert_quantity_allclose(
2025-02-24T15:52:32.5869436Z             result,
2025-02-24T15:52:32.5869519Z             luminosity,
2025-02-24T15:52:32.5869595Z         )
2025-02-24T15:52:32.5869599Z 
2025-02-24T15:52:32.5869726Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-24T15:52:32.5869845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5870201Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.5870301Z     np.testing.assert_allclose(
2025-02-24T15:52:32.5870418Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5870422Z 
2025-02-24T15:52:32.5870896Z args = (<function assert_allclose.<locals>.compare at 0x7f8860059440>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T15:52:32.5871109Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.5871364Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5871369Z 
2025-02-24T15:52:32.5871451Z     @wraps(func)
2025-02-24T15:52:32.5871541Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5871634Z         with self._recreate_cm():
2025-02-24T15:52:32.5871728Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5871818Z E           AssertionError: 
2025-02-24T15:52:32.5871934Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5872008Z E           
2025-02-24T15:52:32.5872118Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:52:32.5872221Z E           Max absolute difference: 4.30543741e+37
2025-02-24T15:52:32.5872319Z E           Max relative difference: 1.
2025-02-24T15:52:32.5872475Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5872568Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5872719Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5872850Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5872857Z 
2025-02-24T15:52:32.5873229Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5873579Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-24T15:52:32.5873586Z 
2025-02-24T15:52:32.5874027Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f888bab28d0>
2025-02-24T15:52:32.5874228Z simulation = <tardis.simulation.base.Simulation object at 0x7f8877047b90>
2025-02-24T15:52:32.5874233Z 
2025-02-24T15:52:32.5874390Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-24T15:52:32.5874544Z         transport_state = simulation.transport.transport_state
2025-02-24T15:52:32.5874736Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T15:52:32.5874811Z     
2025-02-24T15:52:32.5875124Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T15:52:32.5875289Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-24T15:52:32.5875497Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-24T15:52:32.5875725Z         expected = self.get_expected_data(key)
2025-02-24T15:52:32.5875795Z     
2025-02-24T15:52:32.5875907Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.5875977Z     
2025-02-24T15:52:32.5876071Z >       assert_quantity_allclose(
2025-02-24T15:52:32.5876146Z             result,
2025-02-24T15:52:32.5876228Z             luminosity,
2025-02-24T15:52:32.5876304Z         )
2025-02-24T15:52:32.5876308Z 
2025-02-24T15:52:32.5876434Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-24T15:52:32.5876550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5876895Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.5876990Z     np.testing.assert_allclose(
2025-02-24T15:52:32.5877101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5877111Z 
2025-02-24T15:52:32.5877585Z args = (<function assert_allclose.<locals>.compare at 0x7f8859233600>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38,...), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-24T15:52:32.5877694Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.5877938Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5877942Z 
2025-02-24T15:52:32.5878022Z     @wraps(func)
2025-02-24T15:52:32.5878108Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5878200Z         with self._recreate_cm():
2025-02-24T15:52:32.5878289Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5878380Z E           AssertionError: 
2025-02-24T15:52:32.5878494Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5878572Z E           
2025-02-24T15:52:32.5878676Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T15:52:32.5878779Z E           Max absolute difference: 4.15247374e+37
2025-02-24T15:52:32.5878882Z E           Max relative difference: 1.
2025-02-24T15:52:32.5879034Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5879127Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5879274Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5879363Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5879367Z 
2025-02-24T15:52:32.5879570Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5879739Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-24T15:52:32.5879743Z 
2025-02-24T15:52:32.5880006Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x7f888bab0d70>
2025-02-24T15:52:32.5880200Z simulation = <tardis.simulation.base.Simulation object at 0x7f8877047b90>
2025-02-24T15:52:32.5880208Z 
2025-02-24T15:52:32.5880303Z     def test_solve(self, simulation):
2025-02-24T15:52:32.5880450Z         transport_state = simulation.transport.transport_state
2025-02-24T15:52:32.5880643Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T15:52:32.5880715Z     
2025-02-24T15:52:32.5881013Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T15:52:32.5881176Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-24T15:52:32.5881265Z             transport_state
2025-02-24T15:52:32.5881341Z         )
2025-02-24T15:52:32.5881524Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T15:52:32.5881767Z         expected_real = self.get_expected_data(key_real)
2025-02-24T15:52:32.5881840Z     
2025-02-24T15:52:32.5881978Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-24T15:52:32.5882050Z     
2025-02-24T15:52:32.5882142Z >       assert_quantity_allclose(
2025-02-24T15:52:32.5882336Z             result_real.luminosity,
2025-02-24T15:52:32.5882423Z             luminosity_real,
2025-02-24T15:52:32.5882501Z         )
2025-02-24T15:52:32.5882505Z 
2025-02-24T15:52:32.5882633Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-24T15:52:32.5882750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5883087Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.5883182Z     np.testing.assert_allclose(
2025-02-24T15:52:32.5883294Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5883298Z 
2025-02-24T15:52:32.5883774Z args = (<function assert_allclose.<locals>.compare at 0x7f8859230fe0>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38,...), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T15:52:32.5883885Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.5884140Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5884144Z 
2025-02-24T15:52:32.5884224Z     @wraps(func)
2025-02-24T15:52:32.5884310Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5884402Z         with self._recreate_cm():
2025-02-24T15:52:32.5884494Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5884584Z E           AssertionError: 
2025-02-24T15:52:32.5884696Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5884774Z E           
2025-02-24T15:52:32.5884879Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:52:32.5884982Z E           Max absolute difference: 4.30543741e+37
2025-02-24T15:52:32.5885083Z E           Max relative difference: 1.
2025-02-24T15:52:32.5885238Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5885329Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5885478Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.5885567Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5885572Z 
2025-02-24T15:52:32.5885771Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5885958Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-24T15:52:32.5885962Z 
2025-02-24T15:52:32.5886174Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f888bab11c0>
2025-02-24T15:52:32.5886368Z simulation = <tardis.simulation.base.Simulation object at 0x7f88602570b0>
2025-02-24T15:52:32.5886372Z 
2025-02-24T15:52:32.5886487Z     def test_j_blue_estimators(self, simulation):
2025-02-24T15:52:32.5886647Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-24T15:52:32.5886754Z         expected = self.get_expected_data(key)
2025-02-24T15:52:32.5886825Z     
2025-02-24T15:52:32.5886921Z >       npt.assert_allclose(
2025-02-24T15:52:32.5887145Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-24T15:52:32.5887233Z             expected.values,
2025-02-24T15:52:32.5887309Z         )
2025-02-24T15:52:32.5887313Z 
2025-02-24T15:52:32.5887412Z tardis/tests/test_tardis_full.py:70: 
2025-02-24T15:52:32.5887530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5887533Z 
2025-02-24T15:52:32.5887804Z args = (<function assert_allclose.<locals>.compare at 0x7f886005ba60>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5887884Z        [0., 0., .....,
2025-02-24T15:52:32.5887963Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5888131Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5888215Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:52:32.5888464Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5888541Z 
2025-02-24T15:52:32.5888621Z     @wraps(func)
2025-02-24T15:52:32.5888707Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5888799Z         with self._recreate_cm():
2025-02-24T15:52:32.5888888Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5888977Z E           AssertionError: 
2025-02-24T15:52:32.5889086Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5889167Z E           
2025-02-24T15:52:32.5889276Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T15:52:32.5889384Z E           Max absolute difference: 5.32418652e-19
2025-02-24T15:52:32.5889485Z E           Max relative difference: 12.23359055
2025-02-24T15:52:32.5889584Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5889683Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5889772Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.5889868Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5889959Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.5890049Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.5890053Z 
2025-02-24T15:52:32.5890256Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5890418Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.5890674Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5890753Z 	
2025-02-24T15:52:32.5891432Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-24T15:52:32.5891615Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5892050Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-24T15:52:32.5892220Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5892714Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-24T15:52:32.5892956Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.5893403Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.5893587Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5893800Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:52:32.5893970Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5894041Z 	
2025-02-24T15:52:32.5894207Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-24T15:52:32.5894369Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5894442Z 	
2025-02-24T15:52:32.5894537Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T15:52:32.5894642Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T15:52:32.5894734Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5894845Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.5895006Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5895081Z 	
2025-02-24T15:52:32.5895235Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:52:32.5895395Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5895470Z 	
2025-02-24T15:52:32.5895576Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T15:52:32.5895671Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T15:52:32.5895754Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T15:52:32.5895962Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T15:52:32.5896050Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T15:52:32.5896167Z  ([1mbase.py[0m:650)
2025-02-24T15:52:32.5896329Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5896504Z 	
2025-02-24T15:52:32.5896596Z 	Current t_inner = 9974.969 K
2025-02-24T15:52:32.5896722Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T15:52:32.5896838Z  ([1mbase.py[0m:652)
2025-02-24T15:52:32.5897000Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5897074Z 	
2025-02-24T15:52:32.5897226Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-24T15:52:32.5897392Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5897462Z 	
2025-02-24T15:52:32.5897559Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T15:52:32.5897652Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T15:52:32.5897749Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5897853Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.5898022Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5898092Z 	
2025-02-24T15:52:32.5898243Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:52:32.5898406Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5898483Z 	
2025-02-24T15:52:32.5898666Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5898814Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T15:52:32.5898963Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T15:52:32.5899111Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T15:52:32.5899259Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T15:52:32.5899444Z  ([1mbase.py[0m:650)
2025-02-24T15:52:32.5899730Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5899801Z 	
2025-02-24T15:52:32.5899894Z 	Current t_inner = 10736.790 K
2025-02-24T15:52:32.5900011Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T15:52:32.5900127Z  ([1mbase.py[0m:652)
2025-02-24T15:52:32.5900289Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5900359Z 	
2025-02-24T15:52:32.5900514Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-24T15:52:32.5900676Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5900748Z 	
2025-02-24T15:52:32.5900838Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T15:52:32.5901058Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T15:52:32.5901152Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5901263Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.5901421Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5901642Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T15:52:32.5901804Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5901874Z 	
2025-02-24T15:52:32.5902019Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:52:32.5902181Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5902253Z 	
2025-02-24T15:52:32.5902357Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5902446Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T15:52:32.5902534Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T15:52:32.5902622Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T15:52:32.5902708Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T15:52:32.5902815Z  ([1mbase.py[0m:650)
2025-02-24T15:52:32.5902974Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5903046Z 	
2025-02-24T15:52:32.5903133Z 	Current t_inner = 10718.574 K
2025-02-24T15:52:32.5903246Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T15:52:32.5903353Z  ([1mbase.py[0m:652)
2025-02-24T15:52:32.5903510Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5903580Z 	
2025-02-24T15:52:32.5903727Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-24T15:52:32.5904039Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5904113Z 	
2025-02-24T15:52:32.5904211Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T15:52:32.5904302Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T15:52:32.5904500Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5904609Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.5904771Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5904988Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T15:52:32.5905146Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5905219Z 	
2025-02-24T15:52:32.5905362Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:52:32.5905525Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5905596Z 	
2025-02-24T15:52:32.5905704Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5905792Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T15:52:32.5905886Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T15:52:32.5905974Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T15:52:32.5906061Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T15:52:32.5906176Z  ([1mbase.py[0m:650)
2025-02-24T15:52:32.5906335Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5906408Z 	
2025-02-24T15:52:32.5906492Z 	Current t_inner = 10696.150 K
2025-02-24T15:52:32.5906609Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T15:52:32.5906713Z  ([1mbase.py[0m:652)
2025-02-24T15:52:32.5906874Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5906945Z 	
2025-02-24T15:52:32.5907046Z 	Simulation finished in 4 iterations 
2025-02-24T15:52:32.5907133Z 	Simulation took 12.70 s
2025-02-24T15:52:32.5907239Z  ([1mbase.py[0m:542)
2025-02-24T15:52:32.5907397Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5907471Z 	
2025-02-24T15:52:32.5907625Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-24T15:52:32.5907790Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.5907864Z 	
2025-02-24T15:52:32.5907955Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T15:52:32.5908058Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T15:52:32.5908150Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5908256Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.5908418Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T15:52:32.5908424Z 
2025-02-24T15:52:32.5908427Z 
2025-02-24T15:52:32.5908680Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T15:52:32.5908685Z 
2025-02-24T15:52:32.5908909Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-24T15:52:32.5908914Z 
2025-02-24T15:52:32.5909181Z Packets:   ████▏                                                                           10556/200000 [00:00<00:01, 105550.03it/s][A
2025-02-24T15:52:32.5909186Z 
2025-02-24T15:52:32.5909444Z Packets:   ████████▍                                                                       21112/200000 [00:00<00:01, 102893.92it/s][A
2025-02-24T15:52:32.5909454Z 
2025-02-24T15:52:32.5909705Z Packets:   ████████████▊                                                                   31915/200000 [00:00<00:01, 105205.63it/s][A
2025-02-24T15:52:32.5909715Z 
2025-02-24T15:52:32.5909967Z Packets:   █████████████████                                                               42745/200000 [00:00<00:01, 106413.69it/s][A
2025-02-24T15:52:32.5909971Z 
2025-02-24T15:52:32.5910231Z Packets:   █████████████████████▍                                                          53448/200000 [00:00<00:01, 106634.67it/s][A
2025-02-24T15:52:32.5910234Z 
2025-02-24T15:52:32.5910589Z Packets:   █████████████████████████▋                                                      64363/200000 [00:00<00:01, 107484.15it/s][A
2025-02-24T15:52:32.5910594Z 
2025-02-24T15:52:32.5910873Z Packets:   ██████████████████████████████                                                  75150/200000 [00:00<00:01, 107608.35it/s][A
2025-02-24T15:52:32.5911086Z 
2025-02-24T15:52:32.5911378Z Packets:   ██████████████████████████████████▍                                             86089/200000 [00:00<00:01, 108173.39it/s][A
2025-02-24T15:52:32.5911382Z 
2025-02-24T15:52:32.5911661Z Packets:   ██████████████████████████████████████▊                                         96917/200000 [00:00<00:00, 108205.59it/s][A
2025-02-24T15:52:32.5911666Z 
2025-02-24T15:52:32.5911959Z Packets:   ███████████████████████████████████████████                                     107760/200000 [00:01<00:00, 108273.17it/s][A
2025-02-24T15:52:32.5911963Z 
2025-02-24T15:52:32.5912256Z Packets:   ███████████████████████████████████████████████▍                                118684/200000 [00:01<00:00, 108568.22it/s][A
2025-02-24T15:52:32.5912279Z 
2025-02-24T15:52:32.5912591Z Packets:   ███████████████████████████████████████████████████▊                            129542/200000 [00:01<00:00, 108213.14it/s][A
2025-02-24T15:52:32.5912595Z 
2025-02-24T15:52:32.5912915Z Packets:   ████████████████████████████████████████████████████████▏                       140364/200000 [00:01<00:00, 108188.04it/s][A
2025-02-24T15:52:32.5912920Z 
2025-02-24T15:52:32.5913225Z Packets:   ████████████████████████████████████████████████████████████▍                   151204/200000 [00:01<00:00, 108250.18it/s][A
2025-02-24T15:52:32.5913229Z 
2025-02-24T15:52:32.5913544Z Packets:   ████████████████████████████████████████████████████████████████▊               162030/200000 [00:01<00:00, 107989.12it/s][A
2025-02-24T15:52:32.5913548Z 
2025-02-24T15:52:32.5913865Z Packets:   █████████████████████████████████████████████████████████████████████▏          172830/200000 [00:01<00:00, 107862.80it/s][A
2025-02-24T15:52:32.5913869Z 
2025-02-24T15:52:32.5914203Z Packets:   █████████████████████████████████████████████████████████████████████████▍      183617/200000 [00:01<00:00, 107826.75it/s][A
2025-02-24T15:52:32.5914207Z 
2025-02-24T15:52:32.5914534Z Packets:   █████████████████████████████████████████████████████████████████████████████▊  194492/200000 [00:01<00:00, 108100.68it/s][A
2025-02-24T15:52:32.5914701Z Iterations:                                                                                13/? [05:51<00:00, 12.16s/it]
2025-02-24T15:52:32.5914710Z 
2025-02-24T15:52:32.5915042Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:01<00:00, 108100.68it/s][A
2025-02-24T15:52:32.5915047Z 
2025-02-24T15:52:32.5915287Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T15:52:32.5915291Z 
2025-02-24T15:52:32.5915655Z Packets:   ████▎                                                                           10811/200000 [00:00<00:01, 107189.58it/s][A
2025-02-24T15:52:32.5915660Z 
2025-02-24T15:52:32.5915914Z Packets:   ████████▋                                                                       21835/200000 [00:00<00:01, 108974.03it/s][A
2025-02-24T15:52:32.5916014Z 
2025-02-24T15:52:32.5916268Z Packets:   █████████████                                                                   32734/200000 [00:00<00:01, 108758.48it/s][A
2025-02-24T15:52:32.5916272Z 
2025-02-24T15:52:32.5916531Z Packets:   █████████████████▍                                                              43611/200000 [00:00<00:01, 108526.03it/s][A
2025-02-24T15:52:32.5916536Z 
2025-02-24T15:52:32.5916795Z Packets:   █████████████████████▊                                                          54464/200000 [00:00<00:01, 98635.81it/s] [A
2025-02-24T15:52:32.5916800Z 
2025-02-24T15:52:32.5917059Z Packets:   ██████████████████████████                                                      65296/200000 [00:00<00:01, 101714.65it/s][A
2025-02-24T15:52:32.5917079Z 
2025-02-24T15:52:32.5917348Z Packets:   ██████████████████████████████▍                                                 76193/200000 [00:00<00:01, 103981.36it/s][A
2025-02-24T15:52:32.5917363Z 
2025-02-24T15:52:32.5917640Z Packets:   ██████████████████████████████████▊                                             87080/200000 [00:00<00:01, 105488.66it/s][A
2025-02-24T15:52:32.5917645Z 
2025-02-24T15:52:32.5917923Z Packets:   ███████████████████████████████████████▏                                        97890/200000 [00:00<00:00, 106285.23it/s][A
2025-02-24T15:52:32.5917927Z 
2025-02-24T15:52:32.5918217Z Packets:   ███████████████████████████████████████████▌                                    108752/200000 [00:01<00:00, 106993.67it/s][A
2025-02-24T15:52:32.5918222Z 
2025-02-24T15:52:32.5918519Z Packets:   ███████████████████████████████████████████████▊                                119541/200000 [00:01<00:00, 107264.35it/s][A
2025-02-24T15:52:32.5918523Z 
2025-02-24T15:52:32.5918832Z Packets:   ████████████████████████████████████████████████████▏                           130461/200000 [00:01<00:00, 107846.68it/s][A
2025-02-24T15:52:32.5918837Z 
2025-02-24T15:52:32.5919141Z Packets:   ████████████████████████████████████████████████████████▌                       141325/200000 [00:01<00:00, 108084.82it/s][A
2025-02-24T15:52:32.5919158Z 
2025-02-24T15:52:32.5919469Z Packets:   ████████████████████████████████████████████████████████████▉                   152220/200000 [00:01<00:00, 108345.18it/s][A
2025-02-24T15:52:32.5919473Z 
2025-02-24T15:52:32.5919784Z Packets:   █████████████████████████████████████████████████████████████████▎              163158/200000 [00:01<00:00, 108654.89it/s][A
2025-02-24T15:52:32.5919788Z 
2025-02-24T15:52:32.5920108Z Packets:   █████████████████████████████████████████████████████████████████████▌          174030/200000 [00:01<00:00, 108550.45it/s][A
2025-02-24T15:52:32.5920112Z 
2025-02-24T15:52:32.5920529Z Packets:   █████████████████████████████████████████████████████████████████████████▉      184890/200000 [00:01<00:00, 108488.04it/s][A
2025-02-24T15:52:32.5920534Z 
2025-02-24T15:52:32.5920866Z Packets:   ██████████████████████████████████████████████████████████████████████████████▎ 195834/200000 [00:01<00:00, 108772.49it/s][A
2025-02-24T15:52:32.5921253Z Iterations:                                                                                14/? [05:54<00:00,  9.45s/it]
2025-02-24T15:52:32.5921257Z 
2025-02-24T15:52:32.5921594Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 108772.49it/s][A
2025-02-24T15:52:32.5921598Z 
2025-02-24T15:52:32.5921837Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T15:52:32.5921841Z 
2025-02-24T15:52:32.5922095Z Packets:   ████▍                                                                           11063/200000 [00:00<00:01, 110629.84it/s][A
2025-02-24T15:52:32.5922099Z 
2025-02-24T15:52:32.5922340Z Packets:   ████████▊                                                                       22126/200000 [00:00<00:01, 110605.80it/s][A
2025-02-24T15:52:32.5922357Z 
2025-02-24T15:52:32.5922608Z Packets:   █████████████▎                                                                  33187/200000 [00:00<00:01, 110517.66it/s][A
2025-02-24T15:52:32.5922613Z 
2025-02-24T15:52:32.5922863Z Packets:   █████████████████▋                                                              44263/200000 [00:00<00:01, 110611.65it/s][A
2025-02-24T15:52:32.5922867Z 
2025-02-24T15:52:32.5923129Z Packets:   ██████████████████████▏                                                         55325/200000 [00:00<00:01, 110588.09it/s][A
2025-02-24T15:52:32.5923133Z 
2025-02-24T15:52:32.5923401Z Packets:   ██████████████████████████▌                                                     66384/200000 [00:00<00:01, 110529.93it/s][A
2025-02-24T15:52:32.5923405Z 
2025-02-24T15:52:32.5923681Z Packets:   ██████████████████████████████▉                                                 77438/200000 [00:00<00:01, 110479.56it/s][A
2025-02-24T15:52:32.5923685Z 
2025-02-24T15:52:32.5924103Z Packets:   ███████████████████████████████████▍                                            88535/200000 [00:00<00:01, 110634.85it/s][A
2025-02-24T15:52:32.5924107Z 
2025-02-24T15:52:32.5924392Z Packets:   ███████████████████████████████████████▊                                        99651/200000 [00:00<00:00, 110796.57it/s][A
2025-02-24T15:52:32.5924396Z 
2025-02-24T15:52:32.5924803Z Packets:   ████████████████████████████████████████████▎                                   110731/200000 [00:01<00:00, 110266.50it/s][A
2025-02-24T15:52:32.5924811Z 
2025-02-24T15:52:32.5925366Z Packets:   ████████████████████████████████████████████████▋                               121759/200000 [00:01<00:00, 109649.38it/s][A
2025-02-24T15:52:32.5925373Z 
2025-02-24T15:52:32.5926018Z Packets:   █████████████████████████████████████████████████████                           132810/200000 [00:01<00:00, 109907.40it/s][A
2025-02-24T15:52:32.5926030Z 
2025-02-24T15:52:32.5926353Z Packets:   █████████████████████████████████████████████████████████▌                      143840/200000 [00:01<00:00, 110022.98it/s][A
2025-02-24T15:52:32.5926371Z 
2025-02-24T15:52:32.5926688Z Packets:   █████████████████████████████████████████████████████████████▉                  154929/200000 [00:01<00:00, 110282.72it/s][A
2025-02-24T15:52:32.5926691Z 
2025-02-24T15:52:32.5927006Z Packets:   ██████████████████████████████████████████████████████████████████▍             165958/200000 [00:01<00:00, 110123.06it/s][A
2025-02-24T15:52:32.5927010Z 
2025-02-24T15:52:32.5927332Z Packets:   ██████████████████████████████████████████████████████████████████████▊         176971/200000 [00:01<00:00, 110002.11it/s][A
2025-02-24T15:52:32.5927336Z 
2025-02-24T15:52:32.5927682Z Packets:   ███████████████████████████████████████████████████████████████████████████▏    187972/200000 [00:01<00:00, 109893.39it/s][A
2025-02-24T15:52:32.5927686Z 
2025-02-24T15:52:32.5928016Z Packets:   ███████████████████████████████████████████████████████████████████████████████▌199004/200000 [00:01<00:00, 110021.13it/s][A
2025-02-24T15:52:32.5928184Z Iterations:                                                                                15/? [05:57<00:00,  7.55s/it]
2025-02-24T15:52:32.5928188Z 
2025-02-24T15:52:32.5928518Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 110021.13it/s][A
2025-02-24T15:52:32.5928522Z 
2025-02-24T15:52:32.5928759Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T15:52:32.5928763Z 
2025-02-24T15:52:32.5929004Z Packets:   ████▍                                                                           11003/200000 [00:00<00:01, 108408.74it/s][A
2025-02-24T15:52:32.5929097Z 
2025-02-24T15:52:32.5929345Z Packets:   ████████▋                                                                       21844/200000 [00:00<00:01, 107585.50it/s][A
2025-02-24T15:52:32.5929350Z 
2025-02-24T15:52:32.5929681Z Packets:   █████████████                                                                   32673/200000 [00:00<00:01, 107902.15it/s][A
2025-02-24T15:52:32.5929686Z 
2025-02-24T15:52:32.5929942Z Packets:   █████████████████▍                                                              43464/200000 [00:00<00:01, 107768.25it/s][A
2025-02-24T15:52:32.5929946Z 
2025-02-24T15:52:32.5930204Z Packets:   █████████████████████▊                                                          54379/200000 [00:00<00:01, 108263.12it/s][A
2025-02-24T15:52:32.5930208Z 
2025-02-24T15:52:32.5930474Z Packets:   ██████████████████████████                                                      65283/200000 [00:00<00:01, 108524.89it/s][A
2025-02-24T15:52:32.5930479Z 
2025-02-24T15:52:32.5930759Z Packets:   ██████████████████████████████▍                                                 76218/200000 [00:00<00:01, 108791.00it/s][A
2025-02-24T15:52:32.5930767Z 
2025-02-24T15:52:32.5931162Z Packets:   ██████████████████████████████████▊                                             87166/200000 [00:00<00:01, 109009.71it/s][A
2025-02-24T15:52:32.5931181Z 
2025-02-24T15:52:32.5931469Z Packets:   ███████████████████████████████████████▏                                        98081/200000 [00:00<00:00, 109050.56it/s][A
2025-02-24T15:52:32.5931473Z 
2025-02-24T15:52:32.5931763Z Packets:   ███████████████████████████████████████████▌                                    108987/200000 [00:01<00:00, 108823.03it/s][A
2025-02-24T15:52:32.5931767Z 
2025-02-24T15:52:32.5932063Z Packets:   ███████████████████████████████████████████████▉                                119870/200000 [00:01<00:00, 108699.87it/s][A
2025-02-24T15:52:32.5932067Z 
2025-02-24T15:52:32.5932383Z Packets:   ████████████████████████████████████████████████████▎                           130756/200000 [00:01<00:00, 108747.49it/s][A
2025-02-24T15:52:32.5932387Z 
2025-02-24T15:52:32.5932690Z Packets:   ████████████████████████████████████████████████████████▋                       141631/200000 [00:01<00:00, 108675.86it/s][A
2025-02-24T15:52:32.5932708Z 
2025-02-24T15:52:32.5933018Z Packets:   █████████████████████████████████████████████████████████████                   152603/200000 [00:01<00:00, 108990.57it/s][A
2025-02-24T15:52:32.5933023Z 
2025-02-24T15:52:32.5933336Z Packets:   █████████████████████████████████████████████████████████████████▍              163533/200000 [00:01<00:00, 109083.30it/s][A
2025-02-24T15:52:32.5933344Z 
2025-02-24T15:52:32.5933660Z Packets:   █████████████████████████████████████████████████████████████████████▊          174475/200000 [00:01<00:00, 109181.55it/s][A
2025-02-24T15:52:32.5933665Z 
2025-02-24T15:52:32.5934119Z Packets:   ██████████████████████████████████████████████████████████████████████████▏     185394/200000 [00:01<00:00, 109036.30it/s][A
2025-02-24T15:52:32.5934125Z 
2025-02-24T15:52:32.5934457Z Packets:   ██████████████████████████████████████████████████████████████████████████████▌ 196298/200000 [00:01<00:00, 108889.34it/s][A
2025-02-24T15:52:32.5934721Z Iterations:                                                                                16/? [06:00<00:00,  6.22s/it]
2025-02-24T15:52:32.5934725Z 
2025-02-24T15:52:32.5935057Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 108889.34it/s][A
2025-02-24T15:52:32.5935061Z 
2025-02-24T15:52:32.5935295Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-02-24T15:52:32.5935299Z 
2025-02-24T15:52:32.5935541Z Packets:   █▋                                                                              10890/500000 [00:00<00:13, 35740.98it/s][A
2025-02-24T15:52:32.5935546Z 
2025-02-24T15:52:32.5935792Z Packets:   ██▎                                                                             14465/500000 [00:00<00:13, 35591.94it/s][A
2025-02-24T15:52:32.5935800Z 
2025-02-24T15:52:32.5936033Z Packets:   ██▉                                                                             18012/500000 [00:00<00:13, 35311.72it/s][A
2025-02-24T15:52:32.5936046Z 
2025-02-24T15:52:32.5936283Z Packets:   ███▍                                                                            21525/500000 [00:00<00:13, 34942.55it/s][A
2025-02-24T15:52:32.5936288Z 
2025-02-24T15:52:32.5936523Z Packets:   ████                                                                            25113/500000 [00:00<00:13, 35226.27it/s][A
2025-02-24T15:52:32.5936527Z 
2025-02-24T15:52:32.5936766Z Packets:   ████▌                                                                           28668/500000 [00:00<00:13, 35321.91it/s][A
2025-02-24T15:52:32.5936770Z 
2025-02-24T15:52:32.5937016Z Packets:   █████▏                                                                          32243/500000 [00:00<00:13, 35448.80it/s][A
2025-02-24T15:52:32.5937020Z 
2025-02-24T15:52:32.5937255Z Packets:   █████▋                                                                          35825/500000 [00:01<00:13, 35556.67it/s][A
2025-02-24T15:52:32.5937269Z 
2025-02-24T15:52:32.5937508Z Packets:   ██████▎                                                                         39435/500000 [00:01<00:12, 35718.33it/s][A
2025-02-24T15:52:32.5937513Z 
2025-02-24T15:52:32.5937750Z Packets:   ██████▉                                                                         43041/500000 [00:01<00:12, 35819.51it/s][A
2025-02-24T15:52:32.5937754Z 
2025-02-24T15:52:32.5937991Z Packets:   ███████▍                                                                        46624/500000 [00:01<00:12, 35789.97it/s][A
2025-02-24T15:52:32.5937995Z 
2025-02-24T15:52:32.5938242Z Packets:   ████████                                                                        50228/500000 [00:01<00:12, 35857.33it/s][A
2025-02-24T15:52:32.5938246Z 
2025-02-24T15:52:32.5938486Z Packets:   ████████▌                                                                       53838/500000 [00:01<00:12, 35929.03it/s][A
2025-02-24T15:52:32.5938577Z 
2025-02-24T15:52:32.5938825Z Packets:   █████████▏                                                                      57449/500000 [00:01<00:12, 35982.97it/s][A
2025-02-24T15:52:32.5938829Z 
2025-02-24T15:52:32.5939072Z Packets:   █████████▊                                                                      61048/500000 [00:01<00:12, 35921.50it/s][A
2025-02-24T15:52:32.5939075Z 
2025-02-24T15:52:32.5939317Z Packets:   ██████████▎                                                                     64641/500000 [00:01<00:12, 35575.34it/s][A
2025-02-24T15:52:32.5939321Z 
2025-02-24T15:52:32.5939564Z Packets:   ██████████▉                                                                     68205/500000 [00:01<00:12, 35593.94it/s][A
2025-02-24T15:52:32.5939666Z 
2025-02-24T15:52:32.5939919Z Packets:   ███████████▍                                                                    71765/500000 [00:02<00:12, 35572.20it/s][A
2025-02-24T15:52:32.5939923Z 
2025-02-24T15:52:32.5940176Z Packets:   ████████████                                                                    75357/500000 [00:02<00:11, 35674.84it/s][A
2025-02-24T15:52:32.5940180Z 
2025-02-24T15:52:32.5940428Z Packets:   ████████████▋                                                                   78945/500000 [00:02<00:11, 35735.34it/s][A
2025-02-24T15:52:32.5940432Z 
2025-02-24T15:52:32.5940678Z Packets:   █████████████▏                                                                  82522/500000 [00:02<00:11, 35743.64it/s][A
2025-02-24T15:52:32.5940682Z 
2025-02-24T15:52:32.5941057Z Packets:   █████████████▊                                                                  86097/500000 [00:02<00:11, 35706.21it/s][A
2025-02-24T15:52:32.5941062Z 
2025-02-24T15:52:32.5941332Z Packets:   ██████████████▎                                                                 89672/500000 [00:02<00:11, 35717.34it/s][A
2025-02-24T15:52:32.5941336Z 
2025-02-24T15:52:32.5941584Z Packets:   ██████████████▉                                                                 93244/500000 [00:02<00:11, 35567.39it/s][A
2025-02-24T15:52:32.5941596Z 
2025-02-24T15:52:32.5941848Z Packets:   ███████████████▍                                                                96801/500000 [00:02<00:11, 35518.12it/s][A
2025-02-24T15:52:32.5941852Z 
2025-02-24T15:52:32.5942108Z Packets:   ████████████████                                                                100353/500000 [00:02<00:11, 34700.72it/s][A
2025-02-24T15:52:32.5942112Z 
2025-02-24T15:52:32.5942364Z Packets:   ████████████████▋                                                               103926/500000 [00:02<00:11, 35000.24it/s][A
2025-02-24T15:52:32.5942368Z 
2025-02-24T15:52:32.5942633Z Packets:   █████████████████▏                                                              107545/500000 [00:03<00:11, 35349.51it/s][A
2025-02-24T15:52:32.5942637Z 
2025-02-24T15:52:32.5942890Z Packets:   █████████████████▊                                                              111128/500000 [00:03<00:10, 35491.53it/s][A
2025-02-24T15:52:32.5942907Z 
2025-02-24T15:52:32.5943160Z Packets:   ██████████████████▎                                                             114722/500000 [00:03<00:10, 35622.18it/s][A
2025-02-24T15:52:32.5943164Z 
2025-02-24T15:52:32.5943421Z Packets:   ██████████████████▉                                                             118286/500000 [00:03<00:10, 35553.13it/s][A
2025-02-24T15:52:32.5943425Z 
2025-02-24T15:52:32.5943679Z Packets:   ███████████████████▍                                                            121856/500000 [00:03<00:10, 35595.32it/s][A
2025-02-24T15:52:32.5943683Z 
2025-02-24T15:52:32.5944064Z Packets:   ████████████████████                                                            125428/500000 [00:03<00:10, 35631.51it/s][A
2025-02-24T15:52:32.5944069Z 
2025-02-24T15:52:32.5944335Z Packets:   ████████████████████▋                                                           129018/500000 [00:03<00:10, 35711.37it/s][A
2025-02-24T15:52:32.5944444Z 
2025-02-24T15:52:32.5944706Z Packets:   █████████████████████▏                                                          132590/500000 [00:03<00:10, 35542.00it/s][A
2025-02-24T15:52:32.5944711Z 
2025-02-24T15:52:32.5944972Z Packets:   █████████████████████▊                                                          136145/500000 [00:03<00:10, 35457.47it/s][A
2025-02-24T15:52:32.5944976Z 
2025-02-24T15:52:32.5945234Z Packets:   ██████████████████████▎                                                         139724/500000 [00:03<00:10, 35553.08it/s][A
2025-02-24T15:52:32.5945241Z 
2025-02-24T15:52:32.5945501Z Packets:   ██████████████████████▉                                                         143280/500000 [00:04<00:10, 35543.69it/s][A
2025-02-24T15:52:32.5945505Z 
2025-02-24T15:52:32.5945782Z Packets:   ███████████████████████▍                                                        146835/500000 [00:04<00:09, 35537.63it/s][A
2025-02-24T15:52:32.5945786Z 
2025-02-24T15:52:32.5946059Z Packets:   ████████████████████████                                                        150445/500000 [00:04<00:09, 35702.54it/s][A
2025-02-24T15:52:32.5946063Z 
2025-02-24T15:52:32.5946327Z Packets:   ████████████████████████▋                                                       154046/500000 [00:04<00:09, 35793.32it/s][A
2025-02-24T15:52:32.5946331Z 
2025-02-24T15:52:32.5946601Z Packets:   █████████████████████████▏                                                      157636/500000 [00:04<00:09, 35823.28it/s][A
2025-02-24T15:52:32.5946605Z 
2025-02-24T15:52:32.5946869Z Packets:   █████████████████████████▊                                                      161219/500000 [00:04<00:09, 35806.11it/s][A
2025-02-24T15:52:32.5946873Z 
2025-02-24T15:52:32.5947153Z Packets:   ██████████████████████████▎                                                     164800/500000 [00:04<00:09, 35788.75it/s][A
2025-02-24T15:52:32.5947158Z 
2025-02-24T15:52:32.5947427Z Packets:   ██████████████████████████▉                                                     168379/500000 [00:04<00:09, 35776.66it/s][A
2025-02-24T15:52:32.5947442Z 
2025-02-24T15:52:32.5947707Z Packets:   ███████████████████████████▌                                                    171998/500000 [00:04<00:09, 35899.22it/s][A
2025-02-24T15:52:32.5947712Z 
2025-02-24T15:52:32.5947986Z Packets:   ████████████████████████████                                                    175588/500000 [00:04<00:09, 35880.54it/s][A
2025-02-24T15:52:32.5947990Z 
2025-02-24T15:52:32.5948257Z Packets:   ████████████████████████████▋                                                   179177/500000 [00:05<00:08, 35878.74it/s][A
2025-02-24T15:52:32.5948261Z 
2025-02-24T15:52:32.5948625Z Packets:   █████████████████████████████▏                                                  182765/500000 [00:05<00:08, 35859.34it/s][A
2025-02-24T15:52:32.5948630Z 
2025-02-24T15:52:32.5948907Z Packets:   █████████████████████████████▊                                                  186351/500000 [00:05<00:08, 35745.95it/s][A
2025-02-24T15:52:32.5949012Z 
2025-02-24T15:52:32.5949284Z Packets:   ██████████████████████████████▍                                                 189928/500000 [00:05<00:08, 35751.70it/s][A
2025-02-24T15:52:32.5949289Z 
2025-02-24T15:52:32.5949562Z Packets:   ██████████████████████████████▉                                                 193512/500000 [00:05<00:08, 35774.47it/s][A
2025-02-24T15:52:32.5949566Z 
2025-02-24T15:52:32.5949842Z Packets:   ███████████████████████████████▌                                                197090/500000 [00:05<00:08, 35511.91it/s][A
2025-02-24T15:52:32.5949846Z 
2025-02-24T15:52:32.5950130Z Packets:   ████████████████████████████████                                                200691/500000 [00:05<00:08, 35659.61it/s][A
2025-02-24T15:52:32.5950134Z 
2025-02-24T15:52:32.5950606Z Packets:   ████████████████████████████████▋                                               204258/500000 [00:05<00:08, 35538.71it/s][A
2025-02-24T15:52:32.5950632Z 
2025-02-24T15:52:32.5951257Z Packets:   █████████████████████████████████▎                                              207851/500000 [00:05<00:08, 35655.31it/s][A
2025-02-24T15:52:32.5951271Z 
2025-02-24T15:52:32.5951675Z Packets:   █████████████████████████████████▊                                              211417/500000 [00:05<00:08, 34500.44it/s][A
2025-02-24T15:52:32.5951680Z 
2025-02-24T15:52:32.5951963Z Packets:   ██████████████████████████████████▍                                             214977/500000 [00:06<00:08, 34820.44it/s][A
2025-02-24T15:52:32.5951967Z 
2025-02-24T15:52:32.5952242Z Packets:   ██████████████████████████████████▉                                             218608/500000 [00:06<00:07, 35259.19it/s][A
2025-02-24T15:52:32.5952246Z 
2025-02-24T15:52:32.5952541Z Packets:   ███████████████████████████████████▌                                            222140/500000 [00:06<00:07, 35266.53it/s][A
2025-02-24T15:52:32.5952545Z 
2025-02-24T15:52:32.5952836Z Packets:   ████████████████████████████████████                                            225692/500000 [00:06<00:07, 35339.13it/s][A
2025-02-24T15:52:32.5952840Z 
2025-02-24T15:52:32.5953117Z Packets:   ████████████████████████████████████▋                                           229229/500000 [00:06<00:07, 35284.53it/s][A
2025-02-24T15:52:32.5953121Z 
2025-02-24T15:52:32.5953403Z Packets:   █████████████████████████████████████▏                                          232807/500000 [00:06<00:07, 35431.79it/s][A
2025-02-24T15:52:32.5953407Z 
2025-02-24T15:52:32.5953682Z Packets:   █████████████████████████████████████▊                                          236404/500000 [00:06<00:07, 35592.12it/s][A
2025-02-24T15:52:32.5953690Z 
2025-02-24T15:52:32.5954108Z Packets:   ██████████████████████████████████████▍                                         239965/500000 [00:06<00:07, 35553.00it/s][A
2025-02-24T15:52:32.5954113Z 
2025-02-24T15:52:32.5954402Z Packets:   ██████████████████████████████████████▉                                         243522/500000 [00:06<00:07, 35431.37it/s][A
2025-02-24T15:52:32.5954517Z 
2025-02-24T15:52:32.5954802Z Packets:   ███████████████████████████████████████▌                                        247066/500000 [00:06<00:07, 35198.27it/s][A
2025-02-24T15:52:32.5954806Z 
2025-02-24T15:52:32.5955090Z Packets:   ████████████████████████████████████████                                        250620/500000 [00:07<00:07, 35299.67it/s][A
2025-02-24T15:52:32.5955095Z 
2025-02-24T15:52:32.5955383Z Packets:   ████████████████████████████████████████▋                                       254180/500000 [00:07<00:06, 35387.35it/s][A
2025-02-24T15:52:32.5955387Z 
2025-02-24T15:52:32.5955683Z Packets:   █████████████████████████████████████████▏                                      257720/500000 [00:07<00:06, 35354.41it/s][A
2025-02-24T15:52:32.5955688Z 
2025-02-24T15:52:32.5955974Z Packets:   █████████████████████████████████████████▊                                      261256/500000 [00:07<00:06, 35347.63it/s][A
2025-02-24T15:52:32.5955992Z 
2025-02-24T15:52:32.5956281Z Packets:   ██████████████████████████████████████████▎                                     264795/500000 [00:07<00:06, 35359.13it/s][A
2025-02-24T15:52:32.5956285Z 
2025-02-24T15:52:32.5956568Z Packets:   ██████████████████████████████████████████▉                                     268345/500000 [00:07<00:06, 35399.73it/s][A
2025-02-24T15:52:32.5956571Z 
2025-02-24T15:52:32.5956861Z Packets:   ███████████████████████████████████████████▌                                    271907/500000 [00:07<00:06, 35464.39it/s][A
2025-02-24T15:52:32.5956865Z 
2025-02-24T15:52:32.5957161Z Packets:   ████████████████████████████████████████████                                    275454/500000 [00:07<00:06, 35352.05it/s][A
2025-02-24T15:52:32.5957165Z 
2025-02-24T15:52:32.5957454Z Packets:   ████████████████████████████████████████████▋                                   278990/500000 [00:07<00:06, 35202.48it/s][A
2025-02-24T15:52:32.5957471Z 
2025-02-24T15:52:32.5957762Z Packets:   █████████████████████████████████████████████▏                                  282599/500000 [00:07<00:06, 35466.09it/s][A
2025-02-24T15:52:32.5957766Z 
2025-02-24T15:52:32.5958051Z Packets:   █████████████████████████████████████████████▊                                  286154/500000 [00:08<00:06, 35487.56it/s][A
2025-02-24T15:52:32.5958056Z 
2025-02-24T15:52:32.5958345Z Packets:   ██████████████████████████████████████████████▎                                 289718/500000 [00:08<00:05, 35532.15it/s][A
2025-02-24T15:52:32.5958349Z 
2025-02-24T15:52:32.5958640Z Packets:   ██████████████████████████████████████████████▉                                 293272/500000 [00:08<00:05, 35395.62it/s][A
2025-02-24T15:52:32.5958644Z 
2025-02-24T15:52:32.5959025Z Packets:   ███████████████████████████████████████████████▍                                296845/500000 [00:08<00:05, 35490.66it/s][A
2025-02-24T15:52:32.5959030Z 
2025-02-24T15:52:32.5959428Z Packets:   ████████████████████████████████████████████████                                300418/500000 [00:08<00:05, 35561.45it/s][A
2025-02-24T15:52:32.5959432Z 
2025-02-24T15:52:32.5959723Z Packets:   ████████████████████████████████████████████████▋                               304079/500000 [00:08<00:05, 35869.60it/s][A
2025-02-24T15:52:32.5959732Z 
2025-02-24T15:52:32.5960024Z Packets:   █████████████████████████████████████████████████▏                              307667/500000 [00:08<00:05, 35679.10it/s][A
2025-02-24T15:52:32.5960028Z 
2025-02-24T15:52:32.5960322Z Packets:   █████████████████████████████████████████████████▊                              311236/500000 [00:08<00:05, 35638.25it/s][A
2025-02-24T15:52:32.5960326Z 
2025-02-24T15:52:32.5960633Z Packets:   ██████████████████████████████████████████████████▎                             314821/500000 [00:08<00:05, 35699.66it/s][A
2025-02-24T15:52:32.5960637Z 
2025-02-24T15:52:32.5961060Z Packets:   ██████████████████████████████████████████████████▉                             318423/500000 [00:08<00:05, 35795.43it/s][A
2025-02-24T15:52:32.5961079Z 
2025-02-24T15:52:32.5961384Z Packets:   ███████████████████████████████████████████████████▌                            322015/500000 [00:09<00:04, 35831.17it/s][A
2025-02-24T15:52:32.5961389Z 
2025-02-24T15:52:32.5961682Z Packets:   ████████████████████████████████████████████████████                            325599/500000 [00:09<00:04, 35605.45it/s][A
2025-02-24T15:52:32.5961687Z 
2025-02-24T15:52:32.5962014Z Packets:   ████████████████████████████████████████████████████▋                           329160/500000 [00:09<00:04, 35205.43it/s][A
2025-02-24T15:52:32.5962018Z 
2025-02-24T15:52:32.5962327Z Packets:   █████████████████████████████████████████████████████▏                          332682/500000 [00:09<00:04, 35088.87it/s][A
2025-02-24T15:52:32.5962335Z 
2025-02-24T15:52:32.5962630Z Packets:   █████████████████████████████████████████████████████▊                          336284/500000 [00:09<00:04, 35362.84it/s][A
2025-02-24T15:52:32.5962767Z 
2025-02-24T15:52:32.5963075Z Packets:   ██████████████████████████████████████████████████████▍                         339851/500000 [00:09<00:04, 35453.82it/s][A
2025-02-24T15:52:32.5963079Z 
2025-02-24T15:52:32.5963376Z Packets:   ██████████████████████████████████████████████████████▉                         343463/500000 [00:09<00:04, 35652.07it/s][A
2025-02-24T15:52:32.5963381Z 
2025-02-24T15:52:32.5963681Z Packets:   ███████████████████████████████████████████████████████▌                        347029/500000 [00:09<00:04, 35584.31it/s][A
2025-02-24T15:52:32.5963685Z 
2025-02-24T15:52:32.5964097Z Packets:   ████████████████████████████████████████████████████████                        350613/500000 [00:09<00:04, 35658.64it/s][A
2025-02-24T15:52:32.5964102Z 
2025-02-24T15:52:32.5964408Z Packets:   ████████████████████████████████████████████████████████▋                       354182/500000 [00:09<00:04, 35665.79it/s][A
2025-02-24T15:52:32.5964426Z 
2025-02-24T15:52:32.5964731Z Packets:   █████████████████████████████████████████████████████████▏                      357768/500000 [00:10<00:03, 35723.34it/s][A
2025-02-24T15:52:32.5964735Z 
2025-02-24T15:52:32.5965043Z Packets:   █████████████████████████████████████████████████████████▊                      361349/500000 [00:10<00:03, 35747.98it/s][A
2025-02-24T15:52:32.5965047Z 
2025-02-24T15:52:32.5965352Z Packets:   ██████████████████████████████████████████████████████████▍                     364924/500000 [00:10<00:03, 35655.43it/s][A
2025-02-24T15:52:32.5965356Z 
2025-02-24T15:52:32.5965663Z Packets:   ██████████████████████████████████████████████████████████▉                     368490/500000 [00:10<00:03, 35588.56it/s][A
2025-02-24T15:52:32.5965667Z 
2025-02-24T15:52:32.5965985Z Packets:   ███████████████████████████████████████████████████████████▌                    372086/500000 [00:10<00:03, 35697.51it/s][A
2025-02-24T15:52:32.5965988Z 
2025-02-24T15:52:32.5966294Z Packets:   ████████████████████████████████████████████████████████████                    375666/500000 [00:10<00:03, 35726.52it/s][A
2025-02-24T15:52:32.5966312Z 
2025-02-24T15:52:32.5966621Z Packets:   ████████████████████████████████████████████████████████████▋                   379239/500000 [00:10<00:03, 35573.30it/s][A
2025-02-24T15:52:32.5966625Z 
2025-02-24T15:52:32.5966931Z Packets:   █████████████████████████████████████████████████████████████▏                  382797/500000 [00:10<00:03, 35476.93it/s][A
2025-02-24T15:52:32.5966935Z 
2025-02-24T15:52:32.5967243Z Packets:   █████████████████████████████████████████████████████████████▊                  386345/500000 [00:10<00:03, 35395.95it/s][A
2025-02-24T15:52:32.5967247Z 
2025-02-24T15:52:32.5967650Z Packets:   ██████████████████████████████████████████████████████████████▍                 389916/500000 [00:10<00:03, 35489.33it/s][A
2025-02-24T15:52:32.5967655Z 
2025-02-24T15:52:32.5967964Z Packets:   ██████████████████████████████████████████████████████████████▉                 393466/500000 [00:11<00:03, 35187.38it/s][A
2025-02-24T15:52:32.5968055Z 
2025-02-24T15:52:32.5968366Z Packets:   ███████████████████████████████████████████████████████████████▌                397029/500000 [00:11<00:02, 35315.57it/s][A
2025-02-24T15:52:32.5968371Z 
2025-02-24T15:52:32.5968678Z Packets:   ████████████████████████████████████████████████████████████████                400577/500000 [00:11<00:02, 35361.42it/s][A
2025-02-24T15:52:32.5968698Z 
2025-02-24T15:52:32.5969014Z Packets:   ████████████████████████████████████████████████████████████████▋               404114/500000 [00:11<00:02, 35342.70it/s][A
2025-02-24T15:52:32.5969018Z 
2025-02-24T15:52:32.5969347Z Packets:   █████████████████████████████████████████████████████████████████▏              407657/500000 [00:11<00:02, 35368.68it/s][A
2025-02-24T15:52:32.5969351Z 
2025-02-24T15:52:32.5969659Z Packets:   █████████████████████████████████████████████████████████████████▊              411234/500000 [00:11<00:02, 35481.94it/s][A
2025-02-24T15:52:32.5969679Z 
2025-02-24T15:52:32.5969995Z Packets:   ██████████████████████████████████████████████████████████████████▎             414799/500000 [00:11<00:02, 35530.91it/s][A
2025-02-24T15:52:32.5969999Z 
2025-02-24T15:52:32.5970314Z Packets:   ██████████████████████████████████████████████████████████████████▉             418355/500000 [00:11<00:02, 35537.88it/s][A
2025-02-24T15:52:32.5970318Z 
2025-02-24T15:52:32.5970631Z Packets:   ███████████████████████████████████████████████████████████████████▌            421932/500000 [00:11<00:02, 35598.84it/s][A
2025-02-24T15:52:32.5970635Z 
2025-02-24T15:52:32.5971063Z Packets:   ████████████████████████████████████████████████████████████████████            425552/500000 [00:11<00:02, 35778.36it/s][A
2025-02-24T15:52:32.5971067Z 
2025-02-24T15:52:32.5971382Z Packets:   ████████████████████████████████████████████████████████████████████▋           429130/500000 [00:12<00:01, 35517.63it/s][A
2025-02-24T15:52:32.5971544Z 
2025-02-24T15:52:32.5971865Z Packets:   █████████████████████████████████████████████████████████████████████▏          432683/500000 [00:12<00:01, 35496.03it/s][A
2025-02-24T15:52:32.5971870Z 
2025-02-24T15:52:32.5972191Z Packets:   █████████████████████████████████████████████████████████████████████▊          436234/500000 [00:12<00:01, 35496.93it/s][A
2025-02-24T15:52:32.5972195Z 
2025-02-24T15:52:32.5972512Z Packets:   ██████████████████████████████████████████████████████████████████████▎         439806/500000 [00:12<00:01, 35563.12it/s][A
2025-02-24T15:52:32.5972517Z 
2025-02-24T15:52:32.5972837Z Packets:   ██████████████████████████████████████████████████████████████████████▉         443363/500000 [00:12<00:01, 35549.64it/s][A
2025-02-24T15:52:32.5972841Z 
2025-02-24T15:52:32.5973277Z Packets:   ███████████████████████████████████████████████████████████████████████▌        446919/500000 [00:12<00:01, 35347.71it/s][A
2025-02-24T15:52:32.5973282Z 
2025-02-24T15:52:32.5973602Z Packets:   ████████████████████████████████████████████████████████████████████████        450479/500000 [00:12<00:01, 35421.51it/s][A
2025-02-24T15:52:32.5973624Z 
2025-02-24T15:52:32.5973946Z Packets:   ████████████████████████████████████████████████████████████████████████▋       454027/500000 [00:12<00:01, 35435.67it/s][A
2025-02-24T15:52:32.5973951Z 
2025-02-24T15:52:32.5974274Z Packets:   █████████████████████████████████████████████████████████████████████████▏      457625/500000 [00:12<00:01, 35596.61it/s][A
2025-02-24T15:52:32.5974278Z 
2025-02-24T15:52:32.5974593Z Packets:   █████████████████████████████████████████████████████████████████████████▊      461185/500000 [00:12<00:01, 35453.77it/s][A
2025-02-24T15:52:32.5974597Z 
2025-02-24T15:52:32.5974936Z Packets:   ██████████████████████████████████████████████████████████████████████████▎     464732/500000 [00:13<00:00, 35456.84it/s][A
2025-02-24T15:52:32.5974940Z 
2025-02-24T15:52:32.5975257Z Packets:   ██████████████████████████████████████████████████████████████████████████▉     468279/500000 [00:13<00:00, 35457.35it/s][A
2025-02-24T15:52:32.5975277Z 
2025-02-24T15:52:32.5975600Z Packets:   ███████████████████████████████████████████████████████████████████████████▍    471825/500000 [00:13<00:00, 35328.22it/s][A
2025-02-24T15:52:32.5975604Z 
2025-02-24T15:52:32.5975927Z Packets:   ████████████████████████████████████████████████████████████████████████████    475358/500000 [00:13<00:00, 35296.78it/s][A
2025-02-24T15:52:32.5975931Z 
2025-02-24T15:52:32.5976252Z Packets:   ████████████████████████████████████████████████████████████████████████████▌   478888/500000 [00:13<00:00, 35258.00it/s][A
2025-02-24T15:52:32.5976256Z 
2025-02-24T15:52:32.5976693Z Packets:   █████████████████████████████████████████████████████████████████████████████▏  482472/500000 [00:13<00:00, 35431.61it/s][A
2025-02-24T15:52:32.5976698Z 
2025-02-24T15:52:32.5977036Z Packets:   █████████████████████████████████████████████████████████████████████████████▊  486016/500000 [00:13<00:00, 35251.07it/s][A
2025-02-24T15:52:32.5977125Z 
2025-02-24T15:52:32.5977458Z Packets:   ██████████████████████████████████████████████████████████████████████████████▎ 489555/500000 [00:13<00:00, 35291.74it/s][A
2025-02-24T15:52:32.5977462Z 
2025-02-24T15:52:32.5977787Z Packets:   ██████████████████████████████████████████████████████████████████████████████▉ 493107/500000 [00:13<00:00, 35355.97it/s][A
2025-02-24T15:52:32.5977791Z 
2025-02-24T15:52:32.5978115Z Packets:   ███████████████████████████████████████████████████████████████████████████████▍496669/500000 [00:13<00:00, 35434.37it/s][A
2025-02-24T15:52:32.5978272Z Iterations:                                                                                17/? [06:16<00:00,  9.18s/it]
2025-02-24T15:52:32.5978276Z 
2025-02-24T15:52:32.5978624Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:14<00:00, 35434.37it/s][A
2025-02-24T15:52:32.5978799Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.5978982Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-24T15:52:32.5979350Z 	Reading Atomic Data from /home/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-24T15:52:32.5979740Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-24T15:52:32.5980188Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-24T15:52:32.5980699Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.5981050Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:52:32.5981168Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.5981394Z 	Starting iteration 1 of 5
2025-02-24T15:52:32.5981505Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.5981606Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T15:52:32.5981699Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T15:52:32.5981796Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5981800Z 
2025-02-24T15:52:32.5981910Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:52:32.5981999Z 	Plasma stratification:
2025-02-24T15:52:32.5982107Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:52:32.5982220Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T15:52:32.5982311Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T15:52:32.5982512Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T15:52:32.5982608Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T15:52:32.5982694Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T15:52:32.5982705Z 
2025-02-24T15:52:32.5982815Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:52:32.5982904Z 	Current t_inner = 9974.969 K
2025-02-24T15:52:32.5983029Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T15:52:32.5983033Z 
2025-02-24T15:52:32.5983141Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.5983227Z 	Starting iteration 2 of 5
2025-02-24T15:52:32.5983333Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.5983480Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T15:52:32.5983646Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T15:52:32.5983808Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5983814Z 
2025-02-24T15:52:32.5983995Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:52:32.5984149Z 	Plasma stratification:
2025-02-24T15:52:32.5984333Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:52:32.5984526Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5984637Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T15:52:32.5984734Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T15:52:32.5984821Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T15:52:32.5984910Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T15:52:32.5984914Z 
2025-02-24T15:52:32.5985019Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:52:32.5985110Z 	Current t_inner = 10736.790 K
2025-02-24T15:52:32.5985224Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T15:52:32.5985228Z 
2025-02-24T15:52:32.5985334Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.5985420Z 	Starting iteration 3 of 5
2025-02-24T15:52:32.5985527Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.5985629Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T15:52:32.5985722Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T15:52:32.5985817Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5985820Z 
2025-02-24T15:52:32.5986039Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-24T15:52:32.5986155Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:52:32.5986240Z 	Plasma stratification:
2025-02-24T15:52:32.5986350Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:52:32.5986454Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5986545Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T15:52:32.5986630Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T15:52:32.5986719Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T15:52:32.5986807Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T15:52:32.5986811Z 
2025-02-24T15:52:32.5986914Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:52:32.5987008Z 	Current t_inner = 10718.574 K
2025-02-24T15:52:32.5987125Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T15:52:32.5987129Z 
2025-02-24T15:52:32.5987239Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.5987423Z 	Starting iteration 4 of 5
2025-02-24T15:52:32.5987532Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.5987623Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T15:52:32.5987722Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T15:52:32.5987819Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5987822Z 
2025-02-24T15:52:32.5988038Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-24T15:52:32.5988146Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:52:32.5988231Z 	Plasma stratification:
2025-02-24T15:52:32.5988341Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:52:32.5988447Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:52:32.5988612Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T15:52:32.5988700Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T15:52:32.5988789Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T15:52:32.5988875Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T15:52:32.5988889Z 
2025-02-24T15:52:32.5988995Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:52:32.5989083Z 	Current t_inner = 10696.150 K
2025-02-24T15:52:32.5989196Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T15:52:32.5989200Z 
2025-02-24T15:52:32.5989306Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:52:32.5989402Z 	Simulation finished in 4 iterations 
2025-02-24T15:52:32.5989494Z 	Simulation took 12.70 s
2025-02-24T15:52:32.5989498Z 
2025-02-24T15:52:32.5989602Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.5989694Z 	Starting iteration 5 of 5
2025-02-24T15:52:32.5989797Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.5989898Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T15:52:32.5989996Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T15:52:32.5990090Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.5990273Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-24T15:52:32.5990282Z 
2025-02-24T15:52:32.5990499Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f888bab1610>
2025-02-24T15:52:32.5990704Z simulation = <tardis.simulation.base.Simulation object at 0x7f88602570b0>
2025-02-24T15:52:32.5990708Z 
2025-02-24T15:52:32.5990808Z     def test_spectrum(self, simulation):
2025-02-24T15:52:32.5991104Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T15:52:32.5991215Z         expected = self.get_expected_data(key)
2025-02-24T15:52:32.5991288Z     
2025-02-24T15:52:32.5991402Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.5991473Z     
2025-02-24T15:52:32.5991568Z >       assert_quantity_allclose(
2025-02-24T15:52:32.5991743Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-24T15:52:32.5991827Z             luminosity,
2025-02-24T15:52:32.5991899Z         )
2025-02-24T15:52:32.5991903Z 
2025-02-24T15:52:32.5992008Z tardis/tests/test_tardis_full.py:81: 
2025-02-24T15:52:32.5992125Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5992486Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.5992580Z     np.testing.assert_allclose(
2025-02-24T15:52:32.5992693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5992697Z 
2025-02-24T15:52:32.5993186Z args = (<function assert_allclose.<locals>.compare at 0x7f885c4c8540>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39,...), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-24T15:52:32.5993300Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.5993553Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5993557Z 
2025-02-24T15:52:32.5993635Z     @wraps(func)
2025-02-24T15:52:32.5993857Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5993950Z         with self._recreate_cm():
2025-02-24T15:52:32.5994040Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5994131Z E           AssertionError: 
2025-02-24T15:52:32.5994243Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5994323Z E           
2025-02-24T15:52:32.5994427Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T15:52:32.5994533Z E           Max absolute difference: 1.38672909e+39
2025-02-24T15:52:32.5994631Z E           Max relative difference: 5.25284451
2025-02-24T15:52:32.5994793Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.5994985Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5995141Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.5995230Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.5995244Z 
2025-02-24T15:52:32.5995449Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.5995639Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-24T15:52:32.5995643Z 
2025-02-24T15:52:32.5995851Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x7f888bab1850>
2025-02-24T15:52:32.5996048Z simulation = <tardis.simulation.base.Simulation object at 0x7f88602570b0>
2025-02-24T15:52:32.5996052Z 
2025-02-24T15:52:32.5996163Z     def test_virtual_spectrum(self, simulation):
2025-02-24T15:52:32.5996351Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-24T15:52:32.5996457Z         expected = self.get_expected_data(key)
2025-02-24T15:52:32.5996529Z     
2025-02-24T15:52:32.5996647Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.5996717Z     
2025-02-24T15:52:32.5996810Z >       assert_quantity_allclose(
2025-02-24T15:52:32.5996987Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-24T15:52:32.5997074Z             luminosity,
2025-02-24T15:52:32.5997146Z         )
2025-02-24T15:52:32.5997150Z 
2025-02-24T15:52:32.5997250Z tardis/tests/test_tardis_full.py:92: 
2025-02-24T15:52:32.5997364Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5997713Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.5997813Z     np.testing.assert_allclose(
2025-02-24T15:52:32.5997934Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.5997937Z 
2025-02-24T15:52:32.5998415Z args = (<function assert_allclose.<locals>.compare at 0x7f887e7a0ea0>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39,...), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-24T15:52:32.5998524Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.5998775Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.5998779Z 
2025-02-24T15:52:32.5998856Z     @wraps(func)
2025-02-24T15:52:32.5998945Z     def inner(*args, **kwds):
2025-02-24T15:52:32.5999036Z         with self._recreate_cm():
2025-02-24T15:52:32.5999126Z >           return func(*args, **kwds)
2025-02-24T15:52:32.5999217Z E           AssertionError: 
2025-02-24T15:52:32.5999325Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.5999401Z E           
2025-02-24T15:52:32.5999501Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T15:52:32.5999607Z E           Max absolute difference: 5.26760031e+38
2025-02-24T15:52:32.5999712Z E           Max relative difference: 35562.41947434
2025-02-24T15:52:32.5999868Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.5999957Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6000218Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6000310Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6000314Z 
2025-02-24T15:52:32.6000516Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6000757Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-24T15:52:32.6000761Z 
2025-02-24T15:52:32.6001252Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab20f0>
2025-02-24T15:52:32.6001564Z simulation = <tardis.simulation.base.Simulation object at 0x7f8863ad6ab0>
2025-02-24T15:52:32.6002073Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-24T15:52:32.6002090Z 
2025-02-24T15:52:32.6002346Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:52:32.6002542Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6002692Z         j_blue_estimator = (
2025-02-24T15:52:32.6003072Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:52:32.6003194Z         )
2025-02-24T15:52:32.6003405Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:52:32.6003526Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:52:32.6003531Z 
2025-02-24T15:52:32.6003670Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:52:32.6003784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6003788Z 
2025-02-24T15:52:32.6004067Z args = (<function assert_allclose.<locals>.compare at 0x7f885fffa8e0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6004155Z        [0., 0., .....,
2025-02-24T15:52:32.6004237Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6004318Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6004396Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:52:32.6004652Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6004656Z 
2025-02-24T15:52:32.6004731Z     @wraps(func)
2025-02-24T15:52:32.6004818Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6004906Z         with self._recreate_cm():
2025-02-24T15:52:32.6004997Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6005092Z E           AssertionError: 
2025-02-24T15:52:32.6005198Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6005274Z E           
2025-02-24T15:52:32.6005383Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:52:32.6005493Z E           Max absolute difference: 7.03072887e-19
2025-02-24T15:52:32.6005612Z E           Max relative difference: 7.72237896
2025-02-24T15:52:32.6005710Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6005797Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6005894Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6005984Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6006073Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6006163Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6006166Z 
2025-02-24T15:52:32.6006374Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6006598Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-24T15:52:32.6006601Z 
2025-02-24T15:52:32.6006923Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab2720>
2025-02-24T15:52:32.6007124Z simulation = <tardis.simulation.base.Simulation object at 0x7f8863ad6ab0>
2025-02-24T15:52:32.6007302Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-24T15:52:32.6007306Z 
2025-02-24T15:52:32.6007419Z     def test_spectrum(self, simulation, request):
2025-02-24T15:52:32.6007654Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6007850Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:52:32.6008013Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6008118Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6008243Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6008247Z 
2025-02-24T15:52:32.6008381Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:52:32.6008496Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6008922Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6009021Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6009136Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6009150Z 
2025-02-24T15:52:32.6009626Z args = (<function assert_allclose.<locals>.compare at 0x7f886001f740>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T15:52:32.6009735Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6009986Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6009991Z 
2025-02-24T15:52:32.6010072Z     @wraps(func)
2025-02-24T15:52:32.6010157Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6010248Z         with self._recreate_cm():
2025-02-24T15:52:32.6010340Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6010426Z E           AssertionError: 
2025-02-24T15:52:32.6010542Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6010613Z E           
2025-02-24T15:52:32.6010747Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:52:32.6010853Z E           Max absolute difference: 2.09719426e+39
2025-02-24T15:52:32.6011072Z E           Max relative difference: 4.0036592
2025-02-24T15:52:32.6011241Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6011337Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6011493Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6011583Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6011587Z 
2025-02-24T15:52:32.6011795Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6012025Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-24T15:52:32.6012030Z 
2025-02-24T15:52:32.6012367Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab2e70>
2025-02-24T15:52:32.6012562Z simulation = <tardis.simulation.base.Simulation object at 0x7f8863ad6ab0>
2025-02-24T15:52:32.6012777Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-24T15:52:32.6012781Z 
2025-02-24T15:52:32.6012923Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:52:32.6013036Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6013231Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:52:32.6013391Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6013498Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6013618Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6013622Z 
2025-02-24T15:52:32.6013763Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:52:32.6013881Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6014221Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6014439Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6014550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6014553Z 
2025-02-24T15:52:32.6015028Z args = (<function assert_allclose.<locals>.compare at 0x7f885ff42e80>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39,...), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-24T15:52:32.6015134Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-24T15:52:32.6015381Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6015386Z 
2025-02-24T15:52:32.6015461Z     @wraps(func)
2025-02-24T15:52:32.6015657Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6015754Z         with self._recreate_cm():
2025-02-24T15:52:32.6015846Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6015936Z E           AssertionError: 
2025-02-24T15:52:32.6016057Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6016134Z E           
2025-02-24T15:52:32.6016237Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.6016343Z E           Max absolute difference: 5.00661745e+37
2025-02-24T15:52:32.6016443Z E           Max relative difference: 17.51202125
2025-02-24T15:52:32.6016600Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T15:52:32.6016687Z E                  2.279436e+31, 2.243943e+31])
2025-02-24T15:52:32.6016840Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T15:52:32.6016929Z E                  2.292907e+31, 2.257206e+31])
2025-02-24T15:52:32.6016933Z 
2025-02-24T15:52:32.6017137Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6017296Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:52:32.6017301Z 
2025-02-24T15:52:32.6017308Z 
2025-02-24T15:52:32.6017699Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:13<00:00, 110385.34it/s][A
2025-02-24T15:52:32.6017930Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-24T15:52:32.6017934Z 
2025-02-24T15:52:32.6018257Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab2900>
2025-02-24T15:52:32.6018452Z simulation = <tardis.simulation.base.Simulation object at 0x7f885c36df40>
2025-02-24T15:52:32.6018655Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-24T15:52:32.6018659Z 
2025-02-24T15:52:32.6018790Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:52:32.6018909Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6018993Z         j_blue_estimator = (
2025-02-24T15:52:32.6019219Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:52:32.6019298Z         )
2025-02-24T15:52:32.6019448Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:52:32.6019571Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:52:32.6019576Z 
2025-02-24T15:52:32.6019708Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:52:32.6019826Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6019830Z 
2025-02-24T15:52:32.6020103Z args = (<function assert_allclose.<locals>.compare at 0x7f885167d300>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6020183Z        [0., 0., .....,
2025-02-24T15:52:32.6020265Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6020436Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6020519Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:52:32.6020766Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6020861Z 
2025-02-24T15:52:32.6021067Z     @wraps(func)
2025-02-24T15:52:32.6021155Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6021248Z         with self._recreate_cm():
2025-02-24T15:52:32.6021338Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6021430Z E           AssertionError: 
2025-02-24T15:52:32.6021539Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6021617Z E           
2025-02-24T15:52:32.6021727Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:52:32.6021838Z E           Max absolute difference: 4.67863561e-19
2025-02-24T15:52:32.6021936Z E           Max relative difference: 3.25828651
2025-02-24T15:52:32.6022033Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6022129Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6022221Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6022316Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6022407Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6022501Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6022505Z 
2025-02-24T15:52:32.6022708Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6022930Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-24T15:52:32.6022934Z 
2025-02-24T15:52:32.6023253Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab3020>
2025-02-24T15:52:32.6023452Z simulation = <tardis.simulation.base.Simulation object at 0x7f885c36df40>
2025-02-24T15:52:32.6023633Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-24T15:52:32.6023642Z 
2025-02-24T15:52:32.6023752Z     def test_spectrum(self, simulation, request):
2025-02-24T15:52:32.6023861Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6024056Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:52:32.6024226Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6024327Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6024452Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6024456Z 
2025-02-24T15:52:32.6024592Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:52:32.6024701Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6025040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6025131Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6025251Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6025255Z 
2025-02-24T15:52:32.6025733Z args = (<function assert_allclose.<locals>.compare at 0x7f885d8cd620>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T15:52:32.6025846Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6026095Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6026098Z 
2025-02-24T15:52:32.6026174Z     @wraps(func)
2025-02-24T15:52:32.6026265Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6026351Z         with self._recreate_cm():
2025-02-24T15:52:32.6026446Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6026532Z E           AssertionError: 
2025-02-24T15:52:32.6026644Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6026716Z E           
2025-02-24T15:52:32.6026943Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:52:32.6027051Z E           Max absolute difference: 8.5486318e+38
2025-02-24T15:52:32.6027150Z E           Max relative difference: 1.86186015
2025-02-24T15:52:32.6027416Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6027503Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6027654Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6027739Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6027743Z 
2025-02-24T15:52:32.6027952Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6028198Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-24T15:52:32.6028204Z 
2025-02-24T15:52:32.6028808Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab3680>
2025-02-24T15:52:32.6029155Z simulation = <tardis.simulation.base.Simulation object at 0x7f885c36df40>
2025-02-24T15:52:32.6029465Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-24T15:52:32.6029476Z 
2025-02-24T15:52:32.6029624Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:52:32.6029731Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6029926Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:52:32.6030084Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6030192Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6030310Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6030320Z 
2025-02-24T15:52:32.6030451Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:52:32.6030569Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6031006Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6031105Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6031216Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6031225Z 
2025-02-24T15:52:32.6031697Z args = (<function assert_allclose.<locals>.compare at 0x7f885d8cd9e0>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39,...), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-24T15:52:32.6031807Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-24T15:52:32.6032051Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6032056Z 
2025-02-24T15:52:32.6032135Z     @wraps(func)
2025-02-24T15:52:32.6032223Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6032316Z         with self._recreate_cm():
2025-02-24T15:52:32.6032409Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6032503Z E           AssertionError: 
2025-02-24T15:52:32.6032611Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6032687Z E           
2025-02-24T15:52:32.6032791Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.6032902Z E           Max absolute difference: 2.90101642e+37
2025-02-24T15:52:32.6033006Z E           Max relative difference: 0.98973757
2025-02-24T15:52:32.6033159Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T15:52:32.6033250Z E                  1.330497e+31, 1.294462e+31])
2025-02-24T15:52:32.6033398Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T15:52:32.6033490Z E                  1.375141e+31, 1.337928e+31])
2025-02-24T15:52:32.6033494Z 
2025-02-24T15:52:32.6033692Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6034069Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-24T15:52:32.6034075Z 
2025-02-24T15:52:32.6034399Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab2b70>
2025-02-24T15:52:32.6034703Z simulation = <tardis.simulation.base.Simulation object at 0x7f88760b9b20>
2025-02-24T15:52:32.6034905Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-24T15:52:32.6034909Z 
2025-02-24T15:52:32.6035038Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:52:32.6035148Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6035232Z         j_blue_estimator = (
2025-02-24T15:52:32.6035457Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:52:32.6035529Z         )
2025-02-24T15:52:32.6035684Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:52:32.6035808Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:52:32.6035823Z 
2025-02-24T15:52:32.6035956Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:52:32.6036074Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6036084Z 
2025-02-24T15:52:32.6036357Z args = (<function assert_allclose.<locals>.compare at 0x7f885d8cdee0>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6036436Z        [0., 0., .....,
2025-02-24T15:52:32.6036518Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6036602Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6036686Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:52:32.6036936Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6036940Z 
2025-02-24T15:52:32.6037024Z     @wraps(func)
2025-02-24T15:52:32.6037110Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6037202Z         with self._recreate_cm():
2025-02-24T15:52:32.6037296Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6037386Z E           AssertionError: 
2025-02-24T15:52:32.6037493Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6037571Z E           
2025-02-24T15:52:32.6037685Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:52:32.6037794Z E           Max absolute difference: 4.67863561e-19
2025-02-24T15:52:32.6037890Z E           Max relative difference: 3.25828651
2025-02-24T15:52:32.6037986Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6038073Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6038161Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6038256Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6038340Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6038431Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6038435Z 
2025-02-24T15:52:32.6038639Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6038863Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-24T15:52:32.6038866Z 
2025-02-24T15:52:32.6039192Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab3290>
2025-02-24T15:52:32.6039390Z simulation = <tardis.simulation.base.Simulation object at 0x7f88760b9b20>
2025-02-24T15:52:32.6039568Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-24T15:52:32.6039573Z 
2025-02-24T15:52:32.6039683Z     def test_spectrum(self, simulation, request):
2025-02-24T15:52:32.6039791Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6039985Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:52:32.6040146Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6040250Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6040458Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6040463Z 
2025-02-24T15:52:32.6040600Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:52:32.6040713Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6041231Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6041322Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6041439Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6041443Z 
2025-02-24T15:52:32.6041921Z args = (<function assert_allclose.<locals>.compare at 0x7f885c4cbec0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39,...), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T15:52:32.6042034Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6042287Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6042291Z 
2025-02-24T15:52:32.6042366Z     @wraps(func)
2025-02-24T15:52:32.6042455Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6042550Z         with self._recreate_cm():
2025-02-24T15:52:32.6042644Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6042730Z E           AssertionError: 
2025-02-24T15:52:32.6042841Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6042913Z E           
2025-02-24T15:52:32.6043017Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:52:32.6043117Z E           Max absolute difference: 8.5486318e+38
2025-02-24T15:52:32.6043219Z E           Max relative difference: 1.86186015
2025-02-24T15:52:32.6043376Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6043463Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6043618Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6043703Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6043707Z 
2025-02-24T15:52:32.6043914Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6044149Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-24T15:52:32.6044153Z 
2025-02-24T15:52:32.6044480Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab3890>
2025-02-24T15:52:32.6044682Z simulation = <tardis.simulation.base.Simulation object at 0x7f88760b9b20>
2025-02-24T15:52:32.6044883Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-24T15:52:32.6044887Z 
2025-02-24T15:52:32.6045031Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:52:32.6045137Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6045334Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:52:32.6045491Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6045601Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6045722Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6045732Z 
2025-02-24T15:52:32.6045863Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:52:32.6045980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6046310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6046409Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6046521Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6046525Z 
2025-02-24T15:52:32.6047477Z args = (<function assert_allclose.<locals>.compare at 0x7f888a99a840>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39,...), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-24T15:52:32.6047658Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-24T15:52:32.6047981Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6048115Z 
2025-02-24T15:52:32.6048199Z     @wraps(func)
2025-02-24T15:52:32.6048284Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6048377Z         with self._recreate_cm():
2025-02-24T15:52:32.6048468Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6048562Z E           AssertionError: 
2025-02-24T15:52:32.6048668Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6048744Z E           
2025-02-24T15:52:32.6048842Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.6048950Z E           Max absolute difference: 2.99183385e+37
2025-02-24T15:52:32.6049053Z E           Max relative difference: 0.98992197
2025-02-24T15:52:32.6049209Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T15:52:32.6049298Z E                  1.260980e+31, 1.222587e+31])
2025-02-24T15:52:32.6049443Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T15:52:32.6049536Z E                  1.193005e+31, 1.164854e+31])
2025-02-24T15:52:32.6049540Z 
2025-02-24T15:52:32.6049740Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6049900Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:52:32.6049904Z 
2025-02-24T15:52:32.6049908Z 
2025-02-24T15:52:32.6050292Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:11<00:00, 108624.29it/s][A
2025-02-24T15:52:32.6050520Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-24T15:52:32.6050524Z 
2025-02-24T15:52:32.6050856Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab2a50>
2025-02-24T15:52:32.6051162Z simulation = <tardis.simulation.base.Simulation object at 0x7f88778c3410>
2025-02-24T15:52:32.6051367Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-24T15:52:32.6051381Z 
2025-02-24T15:52:32.6051510Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:52:32.6051621Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6051711Z         j_blue_estimator = (
2025-02-24T15:52:32.6051932Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:52:32.6052011Z         )
2025-02-24T15:52:32.6052158Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:52:32.6052289Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:52:32.6052294Z 
2025-02-24T15:52:32.6052427Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:52:32.6052547Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6052551Z 
2025-02-24T15:52:32.6052818Z args = (<function assert_allclose.<locals>.compare at 0x7f885faada80>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6052905Z        [0., 0., .....,
2025-02-24T15:52:32.6052989Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6053067Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6053151Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:52:32.6053396Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6053400Z 
2025-02-24T15:52:32.6053479Z     @wraps(func)
2025-02-24T15:52:32.6053563Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6053654Z         with self._recreate_cm():
2025-02-24T15:52:32.6053742Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6053833Z E           AssertionError: 
2025-02-24T15:52:32.6054062Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6054143Z E           
2025-02-24T15:52:32.6054257Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:52:32.6054359Z E           Max absolute difference: 7.03072887e-19
2025-02-24T15:52:32.6054566Z E           Max relative difference: 7.72237896
2025-02-24T15:52:32.6054658Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6054751Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6054839Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6054935Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6055020Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.6055111Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.6055114Z 
2025-02-24T15:52:32.6055319Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6055541Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-24T15:52:32.6055545Z 
2025-02-24T15:52:32.6055871Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab31a0>
2025-02-24T15:52:32.6056071Z simulation = <tardis.simulation.base.Simulation object at 0x7f88778c3410>
2025-02-24T15:52:32.6056252Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-24T15:52:32.6056257Z 
2025-02-24T15:52:32.6056367Z     def test_spectrum(self, simulation, request):
2025-02-24T15:52:32.6056480Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6056679Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:52:32.6056837Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6056942Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6057060Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6057064Z 
2025-02-24T15:52:32.6057209Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:52:32.6057320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6057668Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6057764Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6057880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6057885Z 
2025-02-24T15:52:32.6058362Z args = (<function assert_allclose.<locals>.compare at 0x7f885d8cdc60>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39,...), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T15:52:32.6058468Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6058717Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6058722Z 
2025-02-24T15:52:32.6058802Z     @wraps(func)
2025-02-24T15:52:32.6058897Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6058983Z         with self._recreate_cm():
2025-02-24T15:52:32.6059076Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6059170Z E           AssertionError: 
2025-02-24T15:52:32.6059278Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6059357Z E           
2025-02-24T15:52:32.6059458Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:52:32.6059564Z E           Max absolute difference: 2.09719426e+39
2025-02-24T15:52:32.6059662Z E           Max relative difference: 4.0036592
2025-02-24T15:52:32.6059818Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6059905Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6060055Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.6060140Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6060144Z 
2025-02-24T15:52:32.6060433Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6060672Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-24T15:52:32.6060748Z 
2025-02-24T15:52:32.6061197Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x7f888bab37d0>
2025-02-24T15:52:32.6061402Z simulation = <tardis.simulation.base.Simulation object at 0x7f88778c3410>
2025-02-24T15:52:32.6061613Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-24T15:52:32.6061617Z 
2025-02-24T15:52:32.6061794Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:52:32.6062225Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6062415Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:52:32.6062575Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:52:32.6062682Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:52:32.6062804Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:52:32.6062809Z 
2025-02-24T15:52:32.6062940Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:52:32.6063062Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6063400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:52:32.6063495Z     np.testing.assert_allclose(
2025-02-24T15:52:32.6063611Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6063615Z 
2025-02-24T15:52:32.6064084Z args = (<function assert_allclose.<locals>.compare at 0x7f888a999bc0>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39,...), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-24T15:52:32.6064191Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-24T15:52:32.6064436Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6064440Z 
2025-02-24T15:52:32.6064518Z     @wraps(func)
2025-02-24T15:52:32.6064608Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6064793Z         with self._recreate_cm():
2025-02-24T15:52:32.6064973Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6065091Z E           AssertionError: 
2025-02-24T15:52:32.6065249Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6065595Z E           
2025-02-24T15:52:32.6065836Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.6066179Z E           Max absolute difference: 5.0153284e+37
2025-02-24T15:52:32.6066409Z E           Max relative difference: 4.90769503
2025-02-24T15:52:32.6066810Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T15:52:32.6067016Z E                  2.088676e+31, 2.060278e+31])
2025-02-24T15:52:32.6067222Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T15:52:32.6067415Z E                  2.124305e+31, 2.101081e+31])
2025-02-24T15:52:32.6067426Z 
2025-02-24T15:52:32.6067685Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6067893Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-24T15:52:32.6067898Z 
2025-02-24T15:52:32.6074375Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T15:52:32.6074708Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f8880307b60>
2025-02-24T15:52:32.6075243Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T15:52:32.6075251Z 
2025-02-24T15:52:32.6075353Z     def test_montecarlo_main_loop(
2025-02-24T15:52:32.6075450Z         montecarlo_main_loop_config,
2025-02-24T15:52:32.6075645Z         regression_data,
2025-02-24T15:52:32.6075730Z         atomic_dataset,
2025-02-24T15:52:32.6075802Z     ):
2025-02-24T15:52:32.6075921Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T15:52:32.6076081Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T15:52:32.6076177Z             montecarlo_main_loop_config,
2025-02-24T15:52:32.6076272Z             atom_data=atomic_dataset,
2025-02-24T15:52:32.6076368Z             virtual_packet_logging=False,
2025-02-24T15:52:32.6076460Z             legacy_mode_enabled=True,
2025-02-24T15:52:32.6076533Z         )
2025-02-24T15:52:32.6076670Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T15:52:32.6076788Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T15:52:32.6076869Z     
2025-02-24T15:52:32.6077004Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T15:52:32.6077107Z             montecarlo_main_loop_simulation
2025-02-24T15:52:32.6077179Z         )
2025-02-24T15:52:32.6077263Z     
2025-02-24T15:52:32.6077364Z         # Load compare data from refdata
2025-02-24T15:52:32.6077437Z     
2025-02-24T15:52:32.6077542Z         expected_nu = expected_hdf_store[
2025-02-24T15:52:32.6077674Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T15:52:32.6077749Z         ]
2025-02-24T15:52:32.6077849Z         expected_energy = expected_hdf_store[
2025-02-24T15:52:32.6077990Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T15:52:32.6078061Z         ]
2025-02-24T15:52:32.6078186Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T15:52:32.6078334Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T15:52:32.6078410Z         ]
2025-02-24T15:52:32.6078526Z         expected_j_estimator = expected_hdf_store[
2025-02-24T15:52:32.6078662Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T15:52:32.6078737Z         ]
2025-02-24T15:52:32.6078831Z         expected_hdf_store.close()
2025-02-24T15:52:32.6079054Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-24T15:52:32.6079228Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T15:52:32.6079374Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T15:52:32.6079465Z         actual_nu_bar_estimator = (
2025-02-24T15:52:32.6079618Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T15:52:32.6079688Z         )
2025-02-24T15:52:32.6079878Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T15:52:32.6079952Z     
2025-02-24T15:52:32.6080030Z         # Compare
2025-02-24T15:52:32.6080123Z >       npt.assert_allclose(
2025-02-24T15:52:32.6080290Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-24T15:52:32.6080365Z         )
2025-02-24T15:52:32.6080370Z 
2025-02-24T15:52:32.6080562Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-24T15:52:32.6080692Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6080696Z 
2025-02-24T15:52:32.6081281Z args = (<function assert_allclose.<locals>.compare at 0x7f885c41a160>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28,....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-24T15:52:32.6081431Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-24T15:52:32.6081685Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-24T15:52:32.6081690Z 
2025-02-24T15:52:32.6081768Z     @wraps(func)
2025-02-24T15:52:32.6081857Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6081947Z         with self._recreate_cm():
2025-02-24T15:52:32.6082220Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6082314Z E           AssertionError: 
2025-02-24T15:52:32.6082431Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T15:52:32.6082607Z E           
2025-02-24T15:52:32.6082713Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T15:52:32.6082817Z E           Max absolute difference: 2.25821059e+25
2025-02-24T15:52:32.6082919Z E           Max relative difference: 0.00054426
2025-02-24T15:52:32.6083067Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T15:52:32.6083190Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T15:52:32.6083319Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T15:52:32.6083452Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T15:52:32.6083573Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T15:52:32.6083699Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T15:52:32.6083704Z 
2025-02-24T15:52:32.6083920Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6084088Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T15:52:32.6084382Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.6084837Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.6085023Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6085243Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:52:32.6085411Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6085487Z 	
2025-02-24T15:52:32.6085587Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6085679Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6085788Z  ([1mbase.py[0m:542)
2025-02-24T15:52:32.6085955Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6086033Z 	
2025-02-24T15:52:32.6086189Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T15:52:32.6086362Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6086432Z 	
2025-02-24T15:52:32.6086532Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:52:32.6086626Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:52:32.6086722Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6086829Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.6086988Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:52:32.6086992Z 
2025-02-24T15:52:32.6086996Z 
2025-02-24T15:52:32.6087234Z Packets:                                                                                   11198/? [00:10<00:00, 1025.73it/s][A
2025-02-24T15:52:32.6087241Z 
2025-02-24T15:52:32.6087469Z Packets:                                                                                   21752/? [00:11<00:00, 2375.70it/s][A
2025-02-24T15:52:32.6087474Z 
2025-02-24T15:52:32.6087696Z Packets:                                                                                   32476/? [00:11<00:00, 4275.62it/s][A
2025-02-24T15:52:32.6087703Z 
2025-02-24T15:52:32.6087922Z Packets:                                                                                   43434/? [00:11<00:00, 6932.43it/s][A
2025-02-24T15:52:32.6087926Z 
2025-02-24T15:52:32.6088151Z Packets:                                                                                   54370/? [00:11<00:00, 10495.73it/s][A
2025-02-24T15:52:32.6088155Z 
2025-02-24T15:52:32.6088379Z Packets:                                                                                   65320/? [00:11<00:00, 15183.07it/s][A
2025-02-24T15:52:32.6088383Z 
2025-02-24T15:52:32.6088689Z Packets:                                                                                   76206/? [00:11<00:00, 21107.97it/s][A
2025-02-24T15:52:32.6088694Z 
2025-02-24T15:52:32.6088922Z Packets:                                                                                   87082/? [00:11<00:00, 28379.16it/s][A
2025-02-24T15:52:32.6089002Z 
2025-02-24T15:52:32.6089234Z Packets:                                                                                   98019/? [00:11<00:00, 36960.24it/s][A
2025-02-24T15:52:32.6089388Z Iterations:                                                                                40/? [07:55<00:00,  5.64s/it]
2025-02-24T15:52:32.6089392Z 
2025-02-24T15:52:32.6089624Z Packets:                                                                                   104009/? [00:11<00:00, 36960.24it/s][A
2025-02-24T15:52:32.6089781Z ------------------------------ Captured log call -------------------------------
2025-02-24T15:52:32.6090303Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.6090533Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:52:32.6090649Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:52:32.6090758Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6090843Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6090847Z 
2025-02-24T15:52:32.6091069Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.6091168Z 	Starting iteration 1 of 1
2025-02-24T15:52:32.6091362Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.6091523Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:52:32.6091688Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:52:32.6091846Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6092136Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-24T15:52:32.6092142Z 
2025-02-24T15:52:32.6092997Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T15:52:32.6093282Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f887be81640>
2025-02-24T15:52:32.6093642Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T15:52:32.6093646Z 
2025-02-24T15:52:32.6093755Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-24T15:52:32.6093850Z         montecarlo_main_loop_config,
2025-02-24T15:52:32.6093933Z         regression_data,
2025-02-24T15:52:32.6094018Z         atomic_dataset,
2025-02-24T15:52:32.6094091Z     ):
2025-02-24T15:52:32.6094199Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T15:52:32.6094376Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-24T15:52:32.6094451Z     
2025-02-24T15:52:32.6094604Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T15:52:32.6094698Z             montecarlo_main_loop_config,
2025-02-24T15:52:32.6094791Z             atom_data=atomic_dataset,
2025-02-24T15:52:32.6094886Z             virtual_packet_logging=True,
2025-02-24T15:52:32.6094977Z             legacy_mode_enabled=True,
2025-02-24T15:52:32.6095047Z         )
2025-02-24T15:52:32.6095178Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T15:52:32.6095286Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T15:52:32.6095358Z     
2025-02-24T15:52:32.6095500Z         transport = montecarlo_main_loop_simulation.transport
2025-02-24T15:52:32.6095570Z     
2025-02-24T15:52:32.6095777Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-24T15:52:32.6095847Z     
2025-02-24T15:52:32.6095980Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T15:52:32.6096210Z             montecarlo_main_loop_simulation
2025-02-24T15:52:32.6096291Z         )
2025-02-24T15:52:32.6096359Z     
2025-02-24T15:52:32.6096455Z         expected_nu = expected_hdf_store[
2025-02-24T15:52:32.6096581Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T15:52:32.6096762Z         ]
2025-02-24T15:52:32.6096862Z         expected_energy = expected_hdf_store[
2025-02-24T15:52:32.6096999Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T15:52:32.6097073Z         ]
2025-02-24T15:52:32.6097192Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T15:52:32.6097340Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T15:52:32.6097410Z         ]
2025-02-24T15:52:32.6097520Z         expected_j_estimator = expected_hdf_store[
2025-02-24T15:52:32.6097647Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T15:52:32.6097721Z         ]
2025-02-24T15:52:32.6097841Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-24T15:52:32.6097987Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-24T15:52:32.6098058Z         ]
2025-02-24T15:52:32.6098192Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-24T15:52:32.6098360Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-24T15:52:32.6098431Z         ]
2025-02-24T15:52:32.6098504Z     
2025-02-24T15:52:32.6098618Z         transport_state = transport.transport_state
2025-02-24T15:52:32.6098691Z     
2025-02-24T15:52:32.6098860Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T15:52:32.6099005Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T15:52:32.6099149Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-24T15:52:32.6099273Z         actual_j_estimator = transport_state.j_estimator
2025-02-24T15:52:32.6099425Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-24T15:52:32.6099615Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-24T15:52:32.6099688Z     
2025-02-24T15:52:32.6099785Z         expected_hdf_store.close()
2025-02-24T15:52:32.6099868Z         # Compare
2025-02-24T15:52:32.6099956Z >       npt.assert_allclose(
2025-02-24T15:52:32.6100048Z             actual_nu_bar_estimator,
2025-02-24T15:52:32.6100140Z             expected_nu_bar_estimator,
2025-02-24T15:52:32.6100226Z             rtol=1e-12,
2025-02-24T15:52:32.6100304Z             atol=1e-15,
2025-02-24T15:52:32.6100378Z         )
2025-02-24T15:52:32.6100382Z 
2025-02-24T15:52:32.6100573Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-24T15:52:32.6100693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6100697Z 
2025-02-24T15:52:32.6101296Z args = (<function assert_allclose.<locals>.compare at 0x7f886121e340>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28,....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-24T15:52:32.6101441Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-24T15:52:32.6101710Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-24T15:52:32.6101719Z 
2025-02-24T15:52:32.6101796Z     @wraps(func)
2025-02-24T15:52:32.6101886Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6101974Z         with self._recreate_cm():
2025-02-24T15:52:32.6102067Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6102153Z E           AssertionError: 
2025-02-24T15:52:32.6102274Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T15:52:32.6102352Z E           
2025-02-24T15:52:32.6102452Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T15:52:32.6102558Z E           Max absolute difference: 1.93283629e+25
2025-02-24T15:52:32.6102655Z E           Max relative difference: 0.00029148
2025-02-24T15:52:32.6102922Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T15:52:32.6103047Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T15:52:32.6103175Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T15:52:32.6103432Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T15:52:32.6103552Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T15:52:32.6103675Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T15:52:32.6103679Z 
2025-02-24T15:52:32.6103882Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6104040Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T15:52:32.6104305Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.6104763Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.6104944Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6105160Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:52:32.6105332Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6105407Z 	
2025-02-24T15:52:32.6105509Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6105591Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6105702Z  ([1mbase.py[0m:542)
2025-02-24T15:52:32.6105864Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6105937Z 	
2025-02-24T15:52:32.6106092Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T15:52:32.6106255Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6106325Z 	
2025-02-24T15:52:32.6106424Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T15:52:32.6106519Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T15:52:32.6106620Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6106725Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.6106883Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:52:32.6106896Z 
2025-02-24T15:52:32.6106899Z 
2025-02-24T15:52:32.6107142Z Packets:                                                                                   108907/? [00:14<00:00, 10478.49it/s][A
2025-02-24T15:52:32.6107146Z 
2025-02-24T15:52:32.6107374Z Packets:                                                                                   116517/? [00:14<00:00, 12556.58it/s][A
2025-02-24T15:52:32.6107378Z 
2025-02-24T15:52:32.6107605Z Packets:                                                                                   122867/? [00:14<00:00, 14615.86it/s][A
2025-02-24T15:52:32.6107608Z 
2025-02-24T15:52:32.6107834Z Packets:                                                                                   128350/? [00:14<00:00, 16570.52it/s][A
2025-02-24T15:52:32.6107838Z 
2025-02-24T15:52:32.6108063Z Packets:                                                                                   133163/? [00:15<00:00, 18604.03it/s][A
2025-02-24T15:52:32.6108067Z 
2025-02-24T15:52:32.6108293Z Packets:                                                                                   137562/? [00:15<00:00, 20690.35it/s][A
2025-02-24T15:52:32.6108300Z 
2025-02-24T15:52:32.6108522Z Packets:                                                                                   141687/? [00:15<00:00, 22794.44it/s][A
2025-02-24T15:52:32.6108526Z 
2025-02-24T15:52:32.6108748Z Packets:                                                                                   145629/? [00:15<00:00, 24837.20it/s][A
2025-02-24T15:52:32.6108752Z 
2025-02-24T15:52:32.6108977Z Packets:                                                                                   149442/? [00:15<00:00, 26770.28it/s][A
2025-02-24T15:52:32.6108980Z 
2025-02-24T15:52:32.6109304Z Packets:                                                                                   153168/? [00:15<00:00, 28433.56it/s][A
2025-02-24T15:52:32.6109309Z 
2025-02-24T15:52:32.6109542Z Packets:                                                                                   156819/? [00:15<00:00, 29810.79it/s][A
2025-02-24T15:52:32.6109621Z 
2025-02-24T15:52:32.6109929Z Packets:                                                                                   160410/? [00:15<00:00, 31002.39it/s][A
2025-02-24T15:52:32.6109935Z 
2025-02-24T15:52:32.6110355Z Packets:                                                                                   163967/? [00:16<00:00, 31550.11it/s][A
2025-02-24T15:52:32.6110361Z 
2025-02-24T15:52:32.6110765Z Packets:                                                                                   167492/? [00:16<00:00, 32505.03it/s][A
2025-02-24T15:52:32.6110771Z 
2025-02-24T15:52:32.6111287Z Packets:                                                                                   171007/? [00:16<00:00, 33219.42it/s][A
2025-02-24T15:52:32.6111305Z 
2025-02-24T15:52:32.6111536Z Packets:                                                                                   174508/? [00:16<00:00, 33550.52it/s][A
2025-02-24T15:52:32.6111546Z 
2025-02-24T15:52:32.6111774Z Packets:                                                                                   178026/? [00:16<00:00, 34012.16it/s][A
2025-02-24T15:52:32.6111778Z 
2025-02-24T15:52:32.6111996Z Packets:                                                                                   181534/? [00:16<00:00, 34319.35it/s][A
2025-02-24T15:52:32.6112000Z 
2025-02-24T15:52:32.6112223Z Packets:                                                                                   185055/? [00:16<00:00, 34576.64it/s][A
2025-02-24T15:52:32.6112227Z 
2025-02-24T15:52:32.6112450Z Packets:                                                                                   188567/? [00:16<00:00, 34734.68it/s][A
2025-02-24T15:52:32.6112454Z 
2025-02-24T15:52:32.6112679Z Packets:                                                                                   192096/? [00:16<00:00, 34897.34it/s][A
2025-02-24T15:52:32.6112683Z 
2025-02-24T15:52:32.6112906Z Packets:                                                                                   195609/? [00:16<00:00, 34771.46it/s][A
2025-02-24T15:52:32.6112913Z 
2025-02-24T15:52:32.6113130Z Packets:                                                                                   199103/? [00:17<00:00, 34407.57it/s][A
2025-02-24T15:52:32.6113138Z 
2025-02-24T15:52:32.6113356Z Packets:                                                                                   202632/? [00:17<00:00, 34665.43it/s][A
2025-02-24T15:52:32.6113508Z Iterations:                                                                                41/? [08:00<00:00,  5.58s/it]
2025-02-24T15:52:32.6113512Z 
2025-02-24T15:52:32.6113732Z Packets:                                                                                   204009/? [00:17<00:00, 34665.43it/s][A
2025-02-24T15:52:32.6113891Z ------------------------------ Captured log call -------------------------------
2025-02-24T15:52:32.6114400Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.6114631Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:52:32.6114744Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:52:32.6114842Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6114929Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6114933Z 
2025-02-24T15:52:32.6115038Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.6115131Z 	Starting iteration 1 of 1
2025-02-24T15:52:32.6115235Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.6115331Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T15:52:32.6115421Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T15:52:32.6115654Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6115820Z __________________________ test_boundary_interactions __________________________
2025-02-24T15:52:32.6115824Z 
2025-02-24T15:52:32.6116726Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#7f889ef34500<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float...PacketTracker object at 0x7f887d0f9db0>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x7f888a8c3d60>])
2025-02-24T15:52:32.6117005Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f887d18b1d0>
2025-02-24T15:52:32.6117009Z 
2025-02-24T15:52:32.6117180Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-24T15:52:32.6117286Z         no_of_packets = len(rpacket_tracker)
2025-02-24T15:52:32.6117356Z     
2025-02-24T15:52:32.6117460Z         # Hard coding the number of columns
2025-02-24T15:52:32.6117617Z         # Based on the largest size of boundary_interaction array (60)
2025-02-24T15:52:32.6117733Z         obtained_boundary_interaction = np.full(
2025-02-24T15:52:32.6117824Z             (no_of_packets, 64),
2025-02-24T15:52:32.6117897Z             [-1],
2025-02-24T15:52:32.6118038Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-24T15:52:32.6118115Z         )
2025-02-24T15:52:32.6118185Z     
2025-02-24T15:52:32.6118300Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-24T15:52:32.6118402Z             obtained_boundary_interaction[
2025-02-24T15:52:32.6118511Z                 i, : tracker.boundary_interaction.size
2025-02-24T15:52:32.6118615Z             ] = tracker.boundary_interaction
2025-02-24T15:52:32.6118685Z     
2025-02-24T15:52:32.6118846Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-24T15:52:32.6118942Z             obtained_boundary_interaction
2025-02-24T15:52:32.6119012Z         )
2025-02-24T15:52:32.6119103Z >       npt.assert_array_equal(
2025-02-24T15:52:32.6119269Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-24T15:52:32.6119344Z         )
2025-02-24T15:52:32.6119347Z 
2025-02-24T15:52:32.6119524Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-24T15:52:32.6119648Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6119652Z 
2025-02-24T15:52:32.6119869Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:52:32.6119976Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-24T15:52:32.6120164Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-24T15:52:32.6120356Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-24T15:52:32.6120360Z 
2025-02-24T15:52:32.6120439Z     @wraps(func)
2025-02-24T15:52:32.6120526Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6120622Z         with self._recreate_cm():
2025-02-24T15:52:32.6120717Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6120809Z E           AssertionError: 
2025-02-24T15:52:32.6120893Z E           Arrays are not equal
2025-02-24T15:52:32.6121104Z E           
2025-02-24T15:52:32.6121214Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T15:52:32.6121353Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:52:32.6121449Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:52:32.6121559Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:52:32.6121688Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:52:32.6121775Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:52:32.6121884Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:52:32.6121888Z 
2025-02-24T15:52:32.6122211Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6122382Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-24T15:52:32.6122386Z 
2025-02-24T15:52:32.6123075Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T15:52:32.6123452Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x7f886ead4a70>
2025-02-24T15:52:32.6123811Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T15:52:32.6124207Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x7f88643a93d0>
2025-02-24T15:52:32.6124211Z 
2025-02-24T15:52:32.6124321Z     def test_montecarlo_main_loop_weighted(
2025-02-24T15:52:32.6124423Z         montecarlo_main_loop_config,
2025-02-24T15:52:32.6124507Z         regression_data,
2025-02-24T15:52:32.6124589Z         atomic_dataset,
2025-02-24T15:52:32.6124683Z         simple_weighted_packet_source,
2025-02-24T15:52:32.6124761Z     ):
2025-02-24T15:52:32.6124868Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T15:52:32.6125049Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-24T15:52:32.6125143Z             montecarlo_main_loop_config,
2025-02-24T15:52:32.6125238Z             atom_data=atomic_dataset,
2025-02-24T15:52:32.6125331Z             virtual_packet_logging=False,
2025-02-24T15:52:32.6125423Z             legacy_mode_enabled=True,
2025-02-24T15:52:32.6125494Z         )
2025-02-24T15:52:32.6125653Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-24T15:52:32.6125750Z             simple_weighted_packet_source
2025-02-24T15:52:32.6125825Z         )
2025-02-24T15:52:32.6125982Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-24T15:52:32.6126117Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-24T15:52:32.6126190Z     
2025-02-24T15:52:32.6126302Z         # Get the montecarlo simple regression data
2025-02-24T15:52:32.6126398Z         regression_data_dir = (
2025-02-24T15:52:32.6126579Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-24T15:52:32.6126726Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-24T15:52:32.6126796Z         )
2025-02-24T15:52:32.6126960Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-24T15:52:32.6127038Z     
2025-02-24T15:52:32.6127132Z         # Load compare data from refdata
2025-02-24T15:52:32.6127205Z     
2025-02-24T15:52:32.6127300Z         expected_nu = expected_hdf_store[
2025-02-24T15:52:32.6127430Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T15:52:32.6127500Z         ]
2025-02-24T15:52:32.6127607Z         expected_energy = expected_hdf_store[
2025-02-24T15:52:32.6127739Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T15:52:32.6127814Z         ]
2025-02-24T15:52:32.6127935Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T15:52:32.6128088Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T15:52:32.6128161Z         ]
2025-02-24T15:52:32.6128273Z         expected_j_estimator = expected_hdf_store[
2025-02-24T15:52:32.6128404Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T15:52:32.6128475Z         ]
2025-02-24T15:52:32.6128572Z         expected_hdf_store.close()
2025-02-24T15:52:32.6128658Z         transport_state = (
2025-02-24T15:52:32.6128841Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-24T15:52:32.6128911Z         )
2025-02-24T15:52:32.6129089Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T15:52:32.6129317Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T15:52:32.6129416Z         actual_nu_bar_estimator = (
2025-02-24T15:52:32.6129563Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T15:52:32.6129731Z         )
2025-02-24T15:52:32.6129920Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T15:52:32.6129990Z     
2025-02-24T15:52:32.6130067Z         # Compare
2025-02-24T15:52:32.6130153Z         npt.assert_allclose(
2025-02-24T15:52:32.6130310Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-24T15:52:32.6130382Z         )
2025-02-24T15:52:32.6130571Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-24T15:52:32.6130726Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-24T15:52:32.6130731Z 
2025-02-24T15:52:32.6131066Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-24T15:52:32.6131186Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6131194Z 
2025-02-24T15:52:32.6131663Z args = (<function assert_allclose.<locals>.compare at 0x7f88637fba60>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-24T15:52:32.6131788Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-24T15:52:32.6132033Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-24T15:52:32.6132037Z 
2025-02-24T15:52:32.6132117Z     @wraps(func)
2025-02-24T15:52:32.6132204Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6132298Z         with self._recreate_cm():
2025-02-24T15:52:32.6132387Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6132478Z E           AssertionError: 
2025-02-24T15:52:32.6132590Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-24T15:52:32.6132663Z E           
2025-02-24T15:52:32.6132777Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T15:52:32.6132881Z E           Max absolute difference: 2.00640487e-05
2025-02-24T15:52:32.6132985Z E           Max relative difference: 2.06329455
2025-02-24T15:52:32.6133198Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:52:32.6133363Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T15:52:32.6133630Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:52:32.6133784Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T15:52:32.6133790Z 
2025-02-24T15:52:32.6134140Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6134375Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T15:52:32.6134645Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:52:32.6135098Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:52:32.6135289Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6135510Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:52:32.6135686Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6135763Z 	
2025-02-24T15:52:32.6135871Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6135956Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6136066Z  ([1mbase.py[0m:542)
2025-02-24T15:52:32.6136232Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6136302Z 	
2025-02-24T15:52:32.6136458Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T15:52:32.6136620Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6136690Z 	
2025-02-24T15:52:32.6136787Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:52:32.6136887Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:52:32.6137108Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6137227Z  ([1mbase.py[0m:657)
2025-02-24T15:52:32.6137383Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:52:32.6137489Z 
2025-02-24T15:52:32.6137497Z 
2025-02-24T15:52:32.6137740Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-24T15:52:32.6137745Z 
2025-02-24T15:52:32.6137973Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-24T15:52:32.6137977Z 
2025-02-24T15:52:32.6138244Z Packets:   ████████▍                                                                       10575/100000 [00:00<00:00, 105734.72it/s][A
2025-02-24T15:52:32.6138249Z 
2025-02-24T15:52:32.6138513Z Packets:   █████████████████                                                               21359/100000 [00:00<00:00, 106966.96it/s][A
2025-02-24T15:52:32.6138528Z 
2025-02-24T15:52:32.6138796Z Packets:   █████████████████████████▋                                                      32162/100000 [00:00<00:00, 107450.86it/s][A
2025-02-24T15:52:32.6138810Z 
2025-02-24T15:52:32.6139086Z Packets:   ██████████████████████████████████▍                                             43003/100000 [00:00<00:00, 107828.73it/s][A
2025-02-24T15:52:32.6139091Z 
2025-02-24T15:52:32.6139377Z Packets:   ███████████████████████████████████████████                                     53848/100000 [00:00<00:00, 108052.24it/s][A
2025-02-24T15:52:32.6139380Z 
2025-02-24T15:52:32.6139672Z Packets:   ███████████████████████████████████████████████████▋                            64654/100000 [00:00<00:00, 107761.41it/s][A
2025-02-24T15:52:32.6139680Z 
2025-02-24T15:52:32.6139981Z Packets:   ████████████████████████████████████████████████████████████▎                   75431/100000 [00:00<00:00, 104219.99it/s][A
2025-02-24T15:52:32.6139986Z 
2025-02-24T15:52:32.6140316Z Packets:   ████████████████████████████████████████████████████████████████████▊           86054/100000 [00:00<00:00, 104843.53it/s][A
2025-02-24T15:52:32.6140321Z 
2025-02-24T15:52:32.6140640Z Packets:   █████████████████████████████████████████████████████████████████████████████▌  96875/100000 [00:00<00:00, 105877.30it/s][A
2025-02-24T15:52:32.6140813Z Iterations:                                                                                45/? [08:51<00:00,  8.12s/it]
2025-02-24T15:52:32.6140818Z 
2025-02-24T15:52:32.6141326Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:01<00:00, 105877.30it/s][A
2025-02-24T15:52:32.6141484Z ------------------------------ Captured log call -------------------------------
2025-02-24T15:52:32.6141999Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:52:32.6142357Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:52:32.6142479Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:52:32.6142576Z 	Simulation finished in 0 iterations 
2025-02-24T15:52:32.6142776Z 	Simulation took 0.00 s
2025-02-24T15:52:32.6142781Z 
2025-02-24T15:52:32.6142894Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:52:32.6142984Z 	Starting iteration 1 of 1
2025-02-24T15:52:32.6143097Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:52:32.6143190Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:52:32.6143289Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:52:32.6143383Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:52:32.6143604Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-24T15:52:32.6143608Z 
2025-02-24T15:52:32.6143872Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b877bf0>
2025-02-24T15:52:32.6144166Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6144449Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-24T15:52:32.6144541Z attribute = 'plot_data'
2025-02-24T15:52:32.6144545Z 
2025-02-24T15:52:32.6144645Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6144721Z         "attribute",
2025-02-24T15:52:32.6144797Z         [
2025-02-24T15:52:32.6144875Z             "plot_data",
2025-02-24T15:52:32.6144959Z             "plot_colors",
2025-02-24T15:52:32.6145037Z             "new_bin_edges",
2025-02-24T15:52:32.6145112Z         ],
2025-02-24T15:52:32.6145180Z     )
2025-02-24T15:52:32.6145274Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6145347Z         self,
2025-02-24T15:52:32.6145443Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6145519Z         request,
2025-02-24T15:52:32.6145594Z         attribute,
2025-02-24T15:52:32.6145669Z     ):
2025-02-24T15:52:32.6145744Z         """
2025-02-24T15:52:32.6145888Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6145957Z     
2025-02-24T15:52:32.6146038Z         Parameters:
2025-02-24T15:52:32.6146121Z         -----------
2025-02-24T15:52:32.6146304Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6146403Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6146578Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6146650Z         """
2025-02-24T15:52:32.6146763Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6146903Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6147058Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6147227Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6147383Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6147511Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6147634Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6147762Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6147766Z 
2025-02-24T15:52:32.6147911Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6148032Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6148036Z 
2025-02-24T15:52:32.6148525Z args = (<function assert_allclose.<locals>.compare at 0x7f887d11d9e0>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T15:52:32.6148629Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T15:52:32.6148880Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6148969Z 
2025-02-24T15:52:32.6149048Z     @wraps(func)
2025-02-24T15:52:32.6149137Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6149226Z         with self._recreate_cm():
2025-02-24T15:52:32.6149321Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6149481Z E           AssertionError: 
2025-02-24T15:52:32.6149596Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6149672Z E           
2025-02-24T15:52:32.6149764Z E           (shapes (508,), (515,) mismatch)
2025-02-24T15:52:32.6149907Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.6150027Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.6150154Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.6150287Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.6150414Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.6150538Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.6150550Z 
2025-02-24T15:52:32.6150752Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6151017Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6151257Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6151520Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6151672Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6151982Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6152193Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-24T15:52:32.6152197Z 
2025-02-24T15:52:32.6152468Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b94a4e0>
2025-02-24T15:52:32.6152754Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6153031Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-24T15:52:32.6153122Z attribute = 'plot_data'
2025-02-24T15:52:32.6153126Z 
2025-02-24T15:52:32.6153222Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6153303Z         "attribute",
2025-02-24T15:52:32.6153375Z         [
2025-02-24T15:52:32.6153458Z             "plot_data",
2025-02-24T15:52:32.6153539Z             "plot_colors",
2025-02-24T15:52:32.6153625Z             "new_bin_edges",
2025-02-24T15:52:32.6153696Z         ],
2025-02-24T15:52:32.6153773Z     )
2025-02-24T15:52:32.6153865Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6153938Z         self,
2025-02-24T15:52:32.6154033Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6154110Z         request,
2025-02-24T15:52:32.6154190Z         attribute,
2025-02-24T15:52:32.6154260Z     ):
2025-02-24T15:52:32.6154333Z         """
2025-02-24T15:52:32.6154472Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6154550Z     
2025-02-24T15:52:32.6154627Z         Parameters:
2025-02-24T15:52:32.6154707Z         -----------
2025-02-24T15:52:32.6154883Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6154984Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6155152Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6155222Z         """
2025-02-24T15:52:32.6155334Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6155474Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6155624Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6155905Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6156068Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6156193Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6156444Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6156565Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6156573Z 
2025-02-24T15:52:32.6156718Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6156836Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6156840Z 
2025-02-24T15:52:32.6157288Z args = (<function assert_allclose.<locals>.compare at 0x7f887d16b1a0>, array([12955.14169787, 12955.14169787, 12955.14169787,...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-24T15:52:32.6157432Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T15:52:32.6157683Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6157688Z 
2025-02-24T15:52:32.6157768Z     @wraps(func)
2025-02-24T15:52:32.6157857Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6157952Z         with self._recreate_cm():
2025-02-24T15:52:32.6158048Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6158135Z E           AssertionError: 
2025-02-24T15:52:32.6158249Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6158322Z E           
2025-02-24T15:52:32.6158419Z E           (shapes (558,), (560,) mismatch)
2025-02-24T15:52:32.6158556Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.6158678Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.6158799Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.6158938Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.6159057Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.6159178Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.6159187Z 
2025-02-24T15:52:32.6159393Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6159607Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-24T15:52:32.6159611Z 
2025-02-24T15:52:32.6159877Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b948140>
2025-02-24T15:52:32.6160153Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6160426Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-24T15:52:32.6160513Z attribute = 'plot_data'
2025-02-24T15:52:32.6160518Z 
2025-02-24T15:52:32.6160612Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6160696Z         "attribute",
2025-02-24T15:52:32.6160767Z         [
2025-02-24T15:52:32.6160847Z             "plot_data",
2025-02-24T15:52:32.6161098Z             "plot_colors",
2025-02-24T15:52:32.6161190Z             "new_bin_edges",
2025-02-24T15:52:32.6161264Z         ],
2025-02-24T15:52:32.6161337Z     )
2025-02-24T15:52:32.6161425Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6161502Z         self,
2025-02-24T15:52:32.6161594Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6161672Z         request,
2025-02-24T15:52:32.6161778Z         attribute,
2025-02-24T15:52:32.6161850Z     ):
2025-02-24T15:52:32.6161924Z         """
2025-02-24T15:52:32.6162059Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6162132Z     
2025-02-24T15:52:32.6162209Z         Parameters:
2025-02-24T15:52:32.6162287Z         -----------
2025-02-24T15:52:32.6162468Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6162695Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6162864Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6162939Z         """
2025-02-24T15:52:32.6163147Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6163289Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6163441Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6163600Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6163751Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6163875Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6163998Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6164117Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6164122Z 
2025-02-24T15:52:32.6164273Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6164387Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6164397Z 
2025-02-24T15:52:32.6164844Z args = (<function assert_allclose.<locals>.compare at 0x7f887d16a160>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T15:52:32.6164989Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T15:52:32.6165234Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6165238Z 
2025-02-24T15:52:32.6165318Z     @wraps(func)
2025-02-24T15:52:32.6165403Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6165495Z         with self._recreate_cm():
2025-02-24T15:52:32.6165585Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6165675Z E           AssertionError: 
2025-02-24T15:52:32.6165793Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6165865Z E           
2025-02-24T15:52:32.6165961Z E           (shapes (147,), (136,) mismatch)
2025-02-24T15:52:32.6166098Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.6166224Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.6166346Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.6166485Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.6166600Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.6166730Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.6166734Z 
2025-02-24T15:52:32.6166938Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6167094Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6167338Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6167591Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6167755Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6168061Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6168272Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-24T15:52:32.6168277Z 
2025-02-24T15:52:32.6168541Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b948380>
2025-02-24T15:52:32.6168824Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6169100Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-24T15:52:32.6169277Z attribute = 'plot_data'
2025-02-24T15:52:32.6169281Z 
2025-02-24T15:52:32.6169381Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6169458Z         "attribute",
2025-02-24T15:52:32.6169534Z         [
2025-02-24T15:52:32.6169704Z             "plot_data",
2025-02-24T15:52:32.6169790Z             "plot_colors",
2025-02-24T15:52:32.6169871Z             "new_bin_edges",
2025-02-24T15:52:32.6169946Z         ],
2025-02-24T15:52:32.6170035Z     )
2025-02-24T15:52:32.6170128Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6170204Z         self,
2025-02-24T15:52:32.6170295Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6170372Z         request,
2025-02-24T15:52:32.6170445Z         attribute,
2025-02-24T15:52:32.6170516Z     ):
2025-02-24T15:52:32.6170585Z         """
2025-02-24T15:52:32.6170737Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6170816Z     
2025-02-24T15:52:32.6170895Z         Parameters:
2025-02-24T15:52:32.6171086Z         -----------
2025-02-24T15:52:32.6171277Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6171375Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6171542Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6171624Z         """
2025-02-24T15:52:32.6171731Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6171873Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6172020Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6172183Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6172334Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6172460Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6172582Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6172708Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6172712Z 
2025-02-24T15:52:32.6172858Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6172972Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6172982Z 
2025-02-24T15:52:32.6173368Z args = (<function assert_allclose.<locals>.compare at 0x7f887d16afc0>, array([12079.52986884, 11966.99134279, 11263.63770779,...210447, 12126.50399598,
2025-02-24T15:52:32.6173510Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T15:52:32.6173604Z        11042.97481792]))
2025-02-24T15:52:32.6173850Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6173854Z 
2025-02-24T15:52:32.6173935Z     @wraps(func)
2025-02-24T15:52:32.6174023Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6174112Z         with self._recreate_cm():
2025-02-24T15:52:32.6174208Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6174295Z E           AssertionError: 
2025-02-24T15:52:32.6174409Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6174484Z E           
2025-02-24T15:52:32.6174593Z E           (shapes (159,), (153,) mismatch)
2025-02-24T15:52:32.6174731Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.6174856Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.6174978Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.6175115Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.6175233Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.6175355Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.6175359Z 
2025-02-24T15:52:32.6175693Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6175910Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-24T15:52:32.6175915Z 
2025-02-24T15:52:32.6176178Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b9485f0>
2025-02-24T15:52:32.6176578Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6176853Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-24T15:52:32.6176967Z attribute = 'plot_data'
2025-02-24T15:52:32.6176971Z 
2025-02-24T15:52:32.6177073Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6177153Z         "attribute",
2025-02-24T15:52:32.6177223Z         [
2025-02-24T15:52:32.6177304Z             "plot_data",
2025-02-24T15:52:32.6177383Z             "plot_colors",
2025-02-24T15:52:32.6177467Z             "new_bin_edges",
2025-02-24T15:52:32.6177538Z         ],
2025-02-24T15:52:32.6177619Z     )
2025-02-24T15:52:32.6177708Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6177784Z         self,
2025-02-24T15:52:32.6177875Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6177953Z         request,
2025-02-24T15:52:32.6178038Z         attribute,
2025-02-24T15:52:32.6178107Z     ):
2025-02-24T15:52:32.6178180Z         """
2025-02-24T15:52:32.6178316Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6178389Z     
2025-02-24T15:52:32.6178469Z         Parameters:
2025-02-24T15:52:32.6178549Z         -----------
2025-02-24T15:52:32.6178726Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6178827Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6178990Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6179065Z         """
2025-02-24T15:52:32.6179239Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6179499Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6179761Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6180032Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6180301Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6180510Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6180715Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6181037Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6181046Z 
2025-02-24T15:52:32.6181302Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6181493Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6181504Z 
2025-02-24T15:52:32.6182364Z args = (<function assert_allclose.<locals>.compare at 0x7f887d16a8e0>, array([12955.14169787, 12955.14169787, 12955.14169787,...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T15:52:32.6182541Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T15:52:32.6182965Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6182978Z 
2025-02-24T15:52:32.6183112Z     @wraps(func)
2025-02-24T15:52:32.6183250Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6183408Z         with self._recreate_cm():
2025-02-24T15:52:32.6183557Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6183701Z E           AssertionError: 
2025-02-24T15:52:32.6183884Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6184004Z E           
2025-02-24T15:52:32.6184159Z E           (shapes (508,), (515,) mismatch)
2025-02-24T15:52:32.6184388Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.6184791Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.6185000Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.6185246Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.6185590Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.6185809Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.6185816Z 
2025-02-24T15:52:32.6186166Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6186431Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6186856Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6187295Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6187560Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6188100Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6188486Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-24T15:52:32.6188500Z 
2025-02-24T15:52:32.6188965Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b948830>
2025-02-24T15:52:32.6189464Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6189939Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-24T15:52:32.6190084Z attribute = 'plot_data'
2025-02-24T15:52:32.6190091Z 
2025-02-24T15:52:32.6190230Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6190310Z         "attribute",
2025-02-24T15:52:32.6190386Z         [
2025-02-24T15:52:32.6190464Z             "plot_data",
2025-02-24T15:52:32.6190549Z             "plot_colors",
2025-02-24T15:52:32.6190640Z             "new_bin_edges",
2025-02-24T15:52:32.6190712Z         ],
2025-02-24T15:52:32.6190785Z     )
2025-02-24T15:52:32.6190875Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6191084Z         self,
2025-02-24T15:52:32.6191184Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6191261Z         request,
2025-02-24T15:52:32.6191336Z         attribute,
2025-02-24T15:52:32.6191412Z     ):
2025-02-24T15:52:32.6191482Z         """
2025-02-24T15:52:32.6191629Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6191700Z     
2025-02-24T15:52:32.6191781Z         Parameters:
2025-02-24T15:52:32.6191857Z         -----------
2025-02-24T15:52:32.6192040Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6192143Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6192316Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6192397Z         """
2025-02-24T15:52:32.6192509Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6192654Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6192916Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6193111Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6193263Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6193392Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6193522Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6193643Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6193648Z 
2025-02-24T15:52:32.6193797Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6193914Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6193918Z 
2025-02-24T15:52:32.6194533Z args = (<function assert_allclose.<locals>.compare at 0x7f887d16a2a0>, array([13692.75973672, 11362.93720064, 12466.53861691,...), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-24T15:52:32.6194738Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T15:52:32.6194994Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6194998Z 
2025-02-24T15:52:32.6195079Z     @wraps(func)
2025-02-24T15:52:32.6195166Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6195258Z         with self._recreate_cm():
2025-02-24T15:52:32.6195349Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6195475Z E           AssertionError: 
2025-02-24T15:52:32.6195663Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6195788Z E           
2025-02-24T15:52:32.6195948Z E           (shapes (1466,), (1481,) mismatch)
2025-02-24T15:52:32.6196125Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T15:52:32.6196216Z E                  11152.962595, 11172.044815])
2025-02-24T15:52:32.6196371Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T15:52:32.6196465Z E                  11398.237865, 11111.204868])
2025-02-24T15:52:32.6196469Z 
2025-02-24T15:52:32.6196678Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6196835Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6197088Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6197425Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6197576Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6198047Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6198423Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-24T15:52:32.6198436Z 
2025-02-24T15:52:32.6198892Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b948a70>
2025-02-24T15:52:32.6199185Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6199458Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-24T15:52:32.6199547Z attribute = 'plot_data'
2025-02-24T15:52:32.6199551Z 
2025-02-24T15:52:32.6199644Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6199725Z         "attribute",
2025-02-24T15:52:32.6199800Z         [
2025-02-24T15:52:32.6199880Z             "plot_data",
2025-02-24T15:52:32.6199964Z             "plot_colors",
2025-02-24T15:52:32.6200044Z             "new_bin_edges",
2025-02-24T15:52:32.6200123Z         ],
2025-02-24T15:52:32.6200194Z     )
2025-02-24T15:52:32.6200287Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6200360Z         self,
2025-02-24T15:52:32.6200455Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6200533Z         request,
2025-02-24T15:52:32.6200612Z         attribute,
2025-02-24T15:52:32.6200684Z     ):
2025-02-24T15:52:32.6200760Z         """
2025-02-24T15:52:32.6200898Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6201111Z     
2025-02-24T15:52:32.6201191Z         Parameters:
2025-02-24T15:52:32.6201275Z         -----------
2025-02-24T15:52:32.6201460Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6201558Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6201731Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6201803Z         """
2025-02-24T15:52:32.6201917Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6202199Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6202362Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6202628Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6202784Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6202917Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6203037Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6203161Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6203165Z 
2025-02-24T15:52:32.6203308Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6203426Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6203430Z 
2025-02-24T15:52:32.6203879Z args = (<function assert_allclose.<locals>.compare at 0x7f887d11dee0>, array([12079.52986884, 11966.99134279, 11263.63770779,...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T15:52:32.6204023Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T15:52:32.6204359Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6204366Z 
2025-02-24T15:52:32.6204505Z     @wraps(func)
2025-02-24T15:52:32.6204641Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6204732Z         with self._recreate_cm():
2025-02-24T15:52:32.6204826Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6204913Z E           AssertionError: 
2025-02-24T15:52:32.6205028Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6205102Z E           
2025-02-24T15:52:32.6205201Z E           (shapes (147,), (136,) mismatch)
2025-02-24T15:52:32.6205339Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.6205469Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.6205596Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.6205729Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.6205856Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.6205979Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.6205983Z 
2025-02-24T15:52:32.6206189Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6206342Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6206597Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6206853Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6207009Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6207316Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6207527Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-24T15:52:32.6207535Z 
2025-02-24T15:52:32.6207801Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b948c50>
2025-02-24T15:52:32.6208079Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>
2025-02-24T15:52:32.6208354Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-24T15:52:32.6208442Z attribute = 'plot_data'
2025-02-24T15:52:32.6208446Z 
2025-02-24T15:52:32.6208540Z     @pytest.mark.parametrize(
2025-02-24T15:52:32.6208621Z         "attribute",
2025-02-24T15:52:32.6208694Z         [
2025-02-24T15:52:32.6208777Z             "plot_data",
2025-02-24T15:52:32.6208949Z             "plot_colors",
2025-02-24T15:52:32.6209038Z             "new_bin_edges",
2025-02-24T15:52:32.6209110Z         ],
2025-02-24T15:52:32.6209184Z     )
2025-02-24T15:52:32.6209273Z     def test_prepare_plot_data(
2025-02-24T15:52:32.6209426Z         self,
2025-02-24T15:52:32.6209518Z         plotter_prepare_plot_data,
2025-02-24T15:52:32.6209596Z         request,
2025-02-24T15:52:32.6209673Z         attribute,
2025-02-24T15:52:32.6209750Z     ):
2025-02-24T15:52:32.6209824Z         """
2025-02-24T15:52:32.6209962Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:52:32.6210035Z     
2025-02-24T15:52:32.6210111Z         Parameters:
2025-02-24T15:52:32.6210191Z         -----------
2025-02-24T15:52:32.6210371Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:52:32.6210475Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6210638Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:52:32.6210719Z         """
2025-02-24T15:52:32.6210828Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6211089Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:52:32.6211247Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:52:32.6211459Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:52:32.6211715Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:52:32.6211845Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:52:32.6211970Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:52:32.6212092Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:52:32.6212096Z 
2025-02-24T15:52:32.6212244Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:52:32.6212370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6212380Z 
2025-02-24T15:52:32.6212763Z args = (<function assert_allclose.<locals>.compare at 0x7f887d11c7c0>, array([12466.53861691, 14269.7609746 , 11910.79400472,...210447, 12126.50399598,
2025-02-24T15:52:32.6212913Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T15:52:32.6212988Z        11042.97481792]))
2025-02-24T15:52:32.6213240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6213244Z 
2025-02-24T15:52:32.6213323Z     @wraps(func)
2025-02-24T15:52:32.6213408Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6213501Z         with self._recreate_cm():
2025-02-24T15:52:32.6213590Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6213680Z E           AssertionError: 
2025-02-24T15:52:32.6213792Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6213868Z E           
2025-02-24T15:52:32.6213962Z E           (shapes (379,), (381,) mismatch)
2025-02-24T15:52:32.6214108Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T15:52:32.6214227Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T15:52:32.6214358Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T15:52:32.6214493Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T15:52:32.6214608Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T15:52:32.6214735Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T15:52:32.6214739Z 
2025-02-24T15:52:32.6214939Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6215099Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6215337Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6215766Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6215928Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6216248Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6216700Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-24T15:52:32.6216708Z 
2025-02-24T15:52:32.6216991Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b9490d0>
2025-02-24T15:52:32.6217304Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f88778b61b0>
2025-02-24T15:52:32.6217799Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6218054Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-24T15:52:32.6218059Z 
2025-02-24T15:52:32.6218156Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6218319Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:52:32.6218402Z     ):
2025-02-24T15:52:32.6218476Z         """
2025-02-24T15:52:32.6218614Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6218684Z     
2025-02-24T15:52:32.6218818Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6218887Z     
2025-02-24T15:52:32.6218970Z         Parameters:
2025-02-24T15:52:32.6219046Z         -----------
2025-02-24T15:52:32.6219212Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:52:32.6219365Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:52:32.6219463Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6219540Z         """
2025-02-24T15:52:32.6219641Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:52:32.6219752Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6219921Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:52:32.6220080Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6220178Z             expected_values = expected.get(
2025-02-24T15:52:32.6220270Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6220359Z             ).values.flatten()
2025-02-24T15:52:32.6220499Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:52:32.6220573Z     
2025-02-24T15:52:32.6220702Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6220800Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6220885Z                     expected_values,
2025-02-24T15:52:32.6221112Z                     actual_values,
2025-02-24T15:52:32.6221192Z                     rtol=0.3,
2025-02-24T15:52:32.6221278Z                     atol=3,
2025-02-24T15:52:32.6221351Z                 )
2025-02-24T15:52:32.6221430Z             else:
2025-02-24T15:52:32.6221565Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6221645Z     
2025-02-24T15:52:32.6221756Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T15:52:32.6221884Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T15:52:32.6221989Z             if isinstance(data.get_label(), str):
2025-02-24T15:52:32.6222067Z                 assert (
2025-02-24T15:52:32.6222192Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T15:52:32.6222279Z                     == data.get_label()
2025-02-24T15:52:32.6222355Z                 )
2025-02-24T15:52:32.6222449Z             if isinstance(data, Line2D):
2025-02-24T15:52:32.6222548Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6222699Z                     data.get_xydata(),
2025-02-24T15:52:32.6223053Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T15:52:32.6223140Z                     rtol=0.3,
2025-02-24T15:52:32.6223221Z                     atol=3,
2025-02-24T15:52:32.6223294Z                 )
2025-02-24T15:52:32.6223405Z 
2025-02-24T15:52:32.6223559Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T15:52:32.6223680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6223684Z 
2025-02-24T15:52:32.6223932Z args = (<function assert_allclose.<locals>.compare at 0x7f88706462a0>, array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.6224016Z        [1.19e+04, 1.67e+0...,
2025-02-24T15:52:32.6224093Z        [1.82e+04, 0.00e+00],
2025-02-24T15:52:32.6224171Z        [1.91e+04, 0.00e+00],
2025-02-24T15:52:32.6224245Z        [1.91e+04, 0.00e+00],
2025-02-24T15:52:32.6224326Z        [2.00e+04, 0.00e+00]]))
2025-02-24T15:52:32.6224572Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6224580Z 
2025-02-24T15:52:32.6224659Z     @wraps(func)
2025-02-24T15:52:32.6224746Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6224835Z         with self._recreate_cm():
2025-02-24T15:52:32.6224934Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6225019Z E           AssertionError: 
2025-02-24T15:52:32.6225128Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6225202Z E           
2025-02-24T15:52:32.6225305Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.6225399Z E           Max absolute difference: 22.
2025-02-24T15:52:32.6225498Z E           Max relative difference: 0.8
2025-02-24T15:52:32.6225590Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.6225676Z E                  [1.19e+04, 1.67e+02],
2025-02-24T15:52:32.6225763Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T15:52:32.6225851Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:52:32.6225940Z E                  [1.19e+04, 1.89e+02],
2025-02-24T15:52:32.6226023Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T15:52:32.6226027Z 
2025-02-24T15:52:32.6226239Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6226400Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6226649Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6227083Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-24T15:52:32.6227241Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6227682Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T15:52:32.6227884Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-24T15:52:32.6227888Z 
2025-02-24T15:52:32.6228159Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b949190>
2025-02-24T15:52:32.6228612Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f887705b4a0>
2025-02-24T15:52:32.6229120Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6229372Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-24T15:52:32.6229376Z 
2025-02-24T15:52:32.6229465Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6229631Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:52:32.6229702Z     ):
2025-02-24T15:52:32.6229779Z         """
2025-02-24T15:52:32.6229911Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6229985Z     
2025-02-24T15:52:32.6230207Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6230284Z     
2025-02-24T15:52:32.6230364Z         Parameters:
2025-02-24T15:52:32.6230445Z         -----------
2025-02-24T15:52:32.6230606Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:52:32.6230836Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:52:32.6231067Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6231141Z         """
2025-02-24T15:52:32.6231241Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:52:32.6231348Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6231517Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:52:32.6231667Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6231766Z             expected_values = expected.get(
2025-02-24T15:52:32.6231853Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6231949Z             ).values.flatten()
2025-02-24T15:52:32.6232082Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:52:32.6232157Z     
2025-02-24T15:52:32.6232291Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6232393Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6232484Z                     expected_values,
2025-02-24T15:52:32.6232568Z                     actual_values,
2025-02-24T15:52:32.6232650Z                     rtol=0.3,
2025-02-24T15:52:32.6232727Z                     atol=3,
2025-02-24T15:52:32.6232804Z                 )
2025-02-24T15:52:32.6232877Z             else:
2025-02-24T15:52:32.6233016Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6233086Z     
2025-02-24T15:52:32.6233200Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T15:52:32.6233323Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T15:52:32.6233432Z             if isinstance(data.get_label(), str):
2025-02-24T15:52:32.6233514Z                 assert (
2025-02-24T15:52:32.6233635Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T15:52:32.6233724Z                     == data.get_label()
2025-02-24T15:52:32.6233799Z                 )
2025-02-24T15:52:32.6233895Z             if isinstance(data, Line2D):
2025-02-24T15:52:32.6233989Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6234080Z                     data.get_xydata(),
2025-02-24T15:52:32.6234216Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T15:52:32.6234298Z                     rtol=0.3,
2025-02-24T15:52:32.6234374Z                     atol=3,
2025-02-24T15:52:32.6234449Z                 )
2025-02-24T15:52:32.6234453Z 
2025-02-24T15:52:32.6234604Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T15:52:32.6234720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6234724Z 
2025-02-24T15:52:32.6234979Z args = (<function assert_allclose.<locals>.compare at 0x7f8853e65580>, array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.6235059Z        [1.19e+04, 1.67e+0...,
2025-02-24T15:52:32.6235141Z        [1.82e+04, 0.00e+00],
2025-02-24T15:52:32.6235223Z        [1.91e+04, 0.00e+00],
2025-02-24T15:52:32.6235307Z        [1.91e+04, 0.00e+00],
2025-02-24T15:52:32.6235386Z        [2.00e+04, 0.00e+00]]))
2025-02-24T15:52:32.6235634Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6235638Z 
2025-02-24T15:52:32.6235719Z     @wraps(func)
2025-02-24T15:52:32.6235802Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6235895Z         with self._recreate_cm():
2025-02-24T15:52:32.6236056Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6236214Z E           AssertionError: 
2025-02-24T15:52:32.6236328Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6236405Z E           
2025-02-24T15:52:32.6236630Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.6236734Z E           Max absolute difference: 22.
2025-02-24T15:52:32.6236827Z E           Max relative difference: 0.8
2025-02-24T15:52:32.6237046Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.6237129Z E                  [1.19e+04, 1.67e+02],
2025-02-24T15:52:32.6237220Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T15:52:32.6237310Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:52:32.6237392Z E                  [1.19e+04, 1.89e+02],
2025-02-24T15:52:32.6237477Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T15:52:32.6237481Z 
2025-02-24T15:52:32.6237689Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6237900Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-24T15:52:32.6237904Z 
2025-02-24T15:52:32.6238172Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b949580>
2025-02-24T15:52:32.6238479Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f88632d9d00>
2025-02-24T15:52:32.6238988Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6239239Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-24T15:52:32.6239244Z 
2025-02-24T15:52:32.6239339Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6239500Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:52:32.6239577Z     ):
2025-02-24T15:52:32.6239651Z         """
2025-02-24T15:52:32.6239786Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6239857Z     
2025-02-24T15:52:32.6239990Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6240066Z     
2025-02-24T15:52:32.6240149Z         Parameters:
2025-02-24T15:52:32.6240229Z         -----------
2025-02-24T15:52:32.6240387Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:52:32.6240541Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:52:32.6240643Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6240719Z         """
2025-02-24T15:52:32.6240814Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:52:32.6241036Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6241205Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:52:32.6241359Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6241458Z             expected_values = expected.get(
2025-02-24T15:52:32.6241549Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6241702Z             ).values.flatten()
2025-02-24T15:52:32.6241921Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:52:32.6242001Z     
2025-02-24T15:52:32.6242140Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6242241Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6242334Z                     expected_values,
2025-02-24T15:52:32.6242423Z                     actual_values,
2025-02-24T15:52:32.6242503Z                     rtol=0.3,
2025-02-24T15:52:32.6242585Z                     atol=3,
2025-02-24T15:52:32.6242658Z                 )
2025-02-24T15:52:32.6242662Z 
2025-02-24T15:52:32.6242817Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-24T15:52:32.6242937Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6242942Z 
2025-02-24T15:52:32.6243374Z args = (<function assert_allclose.<locals>.compare at 0x7f887151fd80>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.6243605Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T15:52:32.6243851Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6243855Z 
2025-02-24T15:52:32.6244044Z     @wraps(func)
2025-02-24T15:52:32.6244129Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6244223Z         with self._recreate_cm():
2025-02-24T15:52:32.6244317Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6244405Z E           AssertionError: 
2025-02-24T15:52:32.6244517Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6244591Z E           
2025-02-24T15:52:32.6244693Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.6244787Z E           Max absolute difference: 34
2025-02-24T15:52:32.6244891Z E           Max relative difference: 0.71428571
2025-02-24T15:52:32.6245037Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.6245140Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6245280Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.6245373Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6245383Z 
2025-02-24T15:52:32.6245596Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6245752Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6246155Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6246419Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6246575Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6246881Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6247093Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-24T15:52:32.6247097Z 
2025-02-24T15:52:32.6247360Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b949640>
2025-02-24T15:52:32.6247661Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f885181c9b0>
2025-02-24T15:52:32.6248158Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6248400Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-24T15:52:32.6248405Z 
2025-02-24T15:52:32.6248499Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6248659Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:52:32.6248737Z     ):
2025-02-24T15:52:32.6248814Z         """
2025-02-24T15:52:32.6248944Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6249027Z     
2025-02-24T15:52:32.6249156Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6249232Z     
2025-02-24T15:52:32.6249309Z         Parameters:
2025-02-24T15:52:32.6249391Z         -----------
2025-02-24T15:52:32.6249555Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:52:32.6249709Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:52:32.6249807Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6249884Z         """
2025-02-24T15:52:32.6249981Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:52:32.6250093Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6250262Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:52:32.6250409Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6250513Z             expected_values = expected.get(
2025-02-24T15:52:32.6250692Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6250791Z             ).values.flatten()
2025-02-24T15:52:32.6251042Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:52:32.6251119Z     
2025-02-24T15:52:32.6251369Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6251472Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6251558Z                     expected_values,
2025-02-24T15:52:32.6251647Z                     actual_values,
2025-02-24T15:52:32.6251732Z                     rtol=0.3,
2025-02-24T15:52:32.6251857Z                     atol=3,
2025-02-24T15:52:32.6251987Z                 )
2025-02-24T15:52:32.6252122Z             else:
2025-02-24T15:52:32.6252284Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6252355Z     
2025-02-24T15:52:32.6252470Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T15:52:32.6252596Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T15:52:32.6252710Z             if isinstance(data.get_label(), str):
2025-02-24T15:52:32.6252787Z                 assert (
2025-02-24T15:52:32.6252915Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T15:52:32.6253009Z                     == data.get_label()
2025-02-24T15:52:32.6253083Z                 )
2025-02-24T15:52:32.6253178Z             if isinstance(data, Line2D):
2025-02-24T15:52:32.6253274Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6253364Z                     data.get_xydata(),
2025-02-24T15:52:32.6253503Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T15:52:32.6253585Z                     rtol=0.3,
2025-02-24T15:52:32.6253661Z                     atol=3,
2025-02-24T15:52:32.6253739Z                 )
2025-02-24T15:52:32.6253744Z 
2025-02-24T15:52:32.6253888Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T15:52:32.6254012Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6254015Z 
2025-02-24T15:52:32.6254268Z args = (<function assert_allclose.<locals>.compare at 0x7f887669db20>, array([[1.10e+04, 2.72e+02],
2025-02-24T15:52:32.6254347Z        [1.19e+04, 2.72e+0...,
2025-02-24T15:52:32.6254436Z        [1.82e+04, 5.00e+00],
2025-02-24T15:52:32.6254514Z        [1.91e+04, 5.00e+00],
2025-02-24T15:52:32.6254595Z        [1.91e+04, 0.00e+00],
2025-02-24T15:52:32.6254674Z        [2.00e+04, 0.00e+00]]))
2025-02-24T15:52:32.6254921Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6254925Z 
2025-02-24T15:52:32.6255002Z     @wraps(func)
2025-02-24T15:52:32.6255090Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6255179Z         with self._recreate_cm():
2025-02-24T15:52:32.6255272Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6255362Z E           AssertionError: 
2025-02-24T15:52:32.6255467Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6255550Z E           
2025-02-24T15:52:32.6255648Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.6255746Z E           Max absolute difference: 34.
2025-02-24T15:52:32.6255845Z E           Max relative difference: 0.65
2025-02-24T15:52:32.6255942Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-24T15:52:32.6256024Z E                  [1.19e+04, 2.72e+02],
2025-02-24T15:52:32.6256111Z E                  [1.19e+04, 1.10e+02],...
2025-02-24T15:52:32.6256197Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-24T15:52:32.6256283Z E                  [1.19e+04, 3.06e+02],
2025-02-24T15:52:32.6256364Z E                  [1.19e+04, 1.18e+02],...
2025-02-24T15:52:32.6256373Z 
2025-02-24T15:52:32.6256578Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6256736Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6256980Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6257574Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6257754Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6258217Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6258437Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-24T15:52:32.6258447Z 
2025-02-24T15:52:32.6258714Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b94a4b0>
2025-02-24T15:52:32.6259032Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f887d007650>
2025-02-24T15:52:32.6259143Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6259320Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:52:32.6259458Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:52:32.6259666Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6259928Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-24T15:52:32.6259937Z 
2025-02-24T15:52:32.6260039Z     def test_generate_plot_ply(
2025-02-24T15:52:32.6260213Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6260285Z     ):
2025-02-24T15:52:32.6260364Z         """
2025-02-24T15:52:32.6260498Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6260575Z     
2025-02-24T15:52:32.6260704Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6260781Z     
2025-02-24T15:52:32.6260861Z         Parameters:
2025-02-24T15:52:32.6261060Z         ----------
2025-02-24T15:52:32.6261231Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:52:32.6261378Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:52:32.6261555Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6261699Z         """
2025-02-24T15:52:32.6261848Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6261965Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6262151Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6262222Z     
2025-02-24T15:52:32.6262377Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6262476Z             expected_values = expected.get(
2025-02-24T15:52:32.6262571Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6262659Z             ).values.flatten()
2025-02-24T15:52:32.6262806Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:52:32.6262879Z     
2025-02-24T15:52:32.6263023Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6272233Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6272434Z                     expected_values,
2025-02-24T15:52:32.6272553Z                     actual_values,
2025-02-24T15:52:32.6272649Z                     rtol=0.3,
2025-02-24T15:52:32.6272735Z                     atol=3,
2025-02-24T15:52:32.6272810Z                 )
2025-02-24T15:52:32.6272888Z             else:
2025-02-24T15:52:32.6273046Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6273165Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6273278Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6273376Z             if data.stackgroup:
2025-02-24T15:52:32.6273455Z                 assert (
2025-02-24T15:52:32.6273548Z                     data.stackgroup
2025-02-24T15:52:32.6273632Z                     == getattr(
2025-02-24T15:52:32.6273921Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6274039Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6274124Z                     ).decode()
2025-02-24T15:52:32.6274200Z                 )
2025-02-24T15:52:32.6274423Z             if data.name:
2025-02-24T15:52:32.6274506Z                 assert (
2025-02-24T15:52:32.6274585Z                     data.name
2025-02-24T15:52:32.6274669Z                     == getattr(
2025-02-24T15:52:32.6274785Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6274887Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6274968Z                     ).decode()
2025-02-24T15:52:32.6275045Z                 )
2025-02-24T15:52:32.6275149Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6275226Z                 data.x,
2025-02-24T15:52:32.6275349Z                 expected.get(group + "x").values.flatten(),
2025-02-24T15:52:32.6275427Z                 rtol=0.3,
2025-02-24T15:52:32.6275513Z                 atol=3,
2025-02-24T15:52:32.6275586Z             )
2025-02-24T15:52:32.6275685Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6275760Z                 data.y,
2025-02-24T15:52:32.6275898Z                 expected.get(group + "y").values.flatten(),
2025-02-24T15:52:32.6276051Z                 rtol=0.3,
2025-02-24T15:52:32.6276193Z                 atol=3,
2025-02-24T15:52:32.6276272Z             )
2025-02-24T15:52:32.6276278Z 
2025-02-24T15:52:32.6276445Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T15:52:32.6276575Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6276580Z 
2025-02-24T15:52:32.6276991Z args = (<function assert_allclose.<locals>.compare at 0x7f885af602c0>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.6277082Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T15:52:32.6277338Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6277343Z 
2025-02-24T15:52:32.6277423Z     @wraps(func)
2025-02-24T15:52:32.6277509Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6277607Z         with self._recreate_cm():
2025-02-24T15:52:32.6277701Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6277794Z E           AssertionError: 
2025-02-24T15:52:32.6277907Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6277978Z E           
2025-02-24T15:52:32.6278084Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.6278180Z E           Max absolute difference: 22
2025-02-24T15:52:32.6278279Z E           Max relative difference: 0.8
2025-02-24T15:52:32.6278426Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:52:32.6278524Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.6278661Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.6278754Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.6278758Z 
2025-02-24T15:52:32.6278977Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6279143Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6279424Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6279858Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-24T15:52:32.6280018Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6280461Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T15:52:32.6280758Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-24T15:52:32.6280763Z 
2025-02-24T15:52:32.6281162Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b94a5a0>
2025-02-24T15:52:32.6281487Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f887cf97a70>
2025-02-24T15:52:32.6281717Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6281987Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:52:32.6282170Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:52:32.6282374Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6282627Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-24T15:52:32.6282632Z 
2025-02-24T15:52:32.6282730Z     def test_generate_plot_ply(
2025-02-24T15:52:32.6282903Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6282986Z     ):
2025-02-24T15:52:32.6283060Z         """
2025-02-24T15:52:32.6283198Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6283269Z     
2025-02-24T15:52:32.6283412Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6283481Z     
2025-02-24T15:52:32.6283567Z         Parameters:
2025-02-24T15:52:32.6283644Z         ----------
2025-02-24T15:52:32.6283812Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:52:32.6283953Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:52:32.6284058Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6284135Z         """
2025-02-24T15:52:32.6284231Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6284346Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6284522Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6284601Z     
2025-02-24T15:52:32.6284756Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6284863Z             expected_values = expected.get(
2025-02-24T15:52:32.6284953Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6285055Z             ).values.flatten()
2025-02-24T15:52:32.6285200Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:52:32.6285274Z     
2025-02-24T15:52:32.6285411Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6285510Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6285602Z                     expected_values,
2025-02-24T15:52:32.6285687Z                     actual_values,
2025-02-24T15:52:32.6285775Z                     rtol=0.3,
2025-02-24T15:52:32.6285852Z                     atol=3,
2025-02-24T15:52:32.6285929Z                 )
2025-02-24T15:52:32.6286004Z             else:
2025-02-24T15:52:32.6286146Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6286254Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6286368Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6286459Z             if data.stackgroup:
2025-02-24T15:52:32.6286545Z                 assert (
2025-02-24T15:52:32.6286636Z                     data.stackgroup
2025-02-24T15:52:32.6286715Z                     == getattr(
2025-02-24T15:52:32.6286830Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6286933Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6287017Z                     ).decode()
2025-02-24T15:52:32.6287089Z                 )
2025-02-24T15:52:32.6287173Z             if data.name:
2025-02-24T15:52:32.6287250Z                 assert (
2025-02-24T15:52:32.6287333Z                     data.name
2025-02-24T15:52:32.6287410Z                     == getattr(
2025-02-24T15:52:32.6287524Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6287743Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6287834Z                     ).decode()
2025-02-24T15:52:32.6287913Z                 )
2025-02-24T15:52:32.6288008Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6288165Z                 data.x,
2025-02-24T15:52:32.6288276Z                 expected.get(group + "x").values.flatten(),
2025-02-24T15:52:32.6288359Z                 rtol=0.3,
2025-02-24T15:52:32.6288435Z                 atol=3,
2025-02-24T15:52:32.6288515Z             )
2025-02-24T15:52:32.6288607Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6288688Z                 data.y,
2025-02-24T15:52:32.6288821Z                 expected.get(group + "y").values.flatten(),
2025-02-24T15:52:32.6288971Z                 rtol=0.3,
2025-02-24T15:52:32.6289102Z                 atol=3,
2025-02-24T15:52:32.6289198Z             )
2025-02-24T15:52:32.6289202Z 
2025-02-24T15:52:32.6289358Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T15:52:32.6289481Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6289485Z 
2025-02-24T15:52:32.6289899Z args = (<function assert_allclose.<locals>.compare at 0x7f885af63a60>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.6289991Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T15:52:32.6290240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6290244Z 
2025-02-24T15:52:32.6290322Z     @wraps(func)
2025-02-24T15:52:32.6290418Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6290513Z         with self._recreate_cm():
2025-02-24T15:52:32.6290604Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6290700Z E           AssertionError: 
2025-02-24T15:52:32.6290805Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6290892Z E           
2025-02-24T15:52:32.6291177Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.6291277Z E           Max absolute difference: 22
2025-02-24T15:52:32.6291374Z E           Max relative difference: 0.8
2025-02-24T15:52:32.6291525Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:52:32.6291622Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.6291762Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.6291857Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.6291861Z 
2025-02-24T15:52:32.6292071Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6292280Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-24T15:52:32.6292284Z 
2025-02-24T15:52:32.6292548Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b94a9c0>
2025-02-24T15:52:32.6292874Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f88518ac4d0>
2025-02-24T15:52:32.6292972Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6293150Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:52:32.6293391Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:52:32.6293727Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6293990Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-24T15:52:32.6293995Z 
2025-02-24T15:52:32.6294086Z     def test_generate_plot_ply(
2025-02-24T15:52:32.6294260Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6294332Z     ):
2025-02-24T15:52:32.6294409Z         """
2025-02-24T15:52:32.6294540Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6294748Z     
2025-02-24T15:52:32.6294884Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6294961Z     
2025-02-24T15:52:32.6295046Z         Parameters:
2025-02-24T15:52:32.6295124Z         ----------
2025-02-24T15:52:32.6295392Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:52:32.6295534Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:52:32.6295640Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6295712Z         """
2025-02-24T15:52:32.6295813Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6295921Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6296101Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6296171Z     
2025-02-24T15:52:32.6296328Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6296431Z             expected_values = expected.get(
2025-02-24T15:52:32.6296527Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6296620Z             ).values.flatten()
2025-02-24T15:52:32.6296762Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:52:32.6296844Z     
2025-02-24T15:52:32.6297057Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6297219Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6297310Z                     expected_values,
2025-02-24T15:52:32.6297400Z                     actual_values,
2025-02-24T15:52:32.6297480Z                     rtol=0.3,
2025-02-24T15:52:32.6297560Z                     atol=3,
2025-02-24T15:52:32.6297631Z                 )
2025-02-24T15:52:32.6297638Z 
2025-02-24T15:52:32.6297787Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-24T15:52:32.6297909Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6297914Z 
2025-02-24T15:52:32.6298348Z args = (<function assert_allclose.<locals>.compare at 0x7f885af63920>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  1...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.6298439Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T15:52:32.6298689Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6298693Z 
2025-02-24T15:52:32.6298775Z     @wraps(func)
2025-02-24T15:52:32.6298868Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6298956Z         with self._recreate_cm():
2025-02-24T15:52:32.6299053Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6299140Z E           AssertionError: 
2025-02-24T15:52:32.6299248Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6299321Z E           
2025-02-24T15:52:32.6299425Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.6299517Z E           Max absolute difference: 34
2025-02-24T15:52:32.6299624Z E           Max relative difference: 0.71428571
2025-02-24T15:52:32.6299770Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.6299869Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6300010Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.6300103Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6300107Z 
2025-02-24T15:52:32.6300323Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6300481Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6300737Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6301130Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6301292Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6301747Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6301964Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-24T15:52:32.6302068Z 
2025-02-24T15:52:32.6302338Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x7f888b94aab0>
2025-02-24T15:52:32.6302806Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x7f887993a1e0>
2025-02-24T15:52:32.6302916Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6303066Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:52:32.6303206Z               'mode': 'lines...'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:52:32.6303409Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x7f886f118500>)
2025-02-24T15:52:32.6303657Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-24T15:52:32.6303668Z 
2025-02-24T15:52:32.6303765Z     def test_generate_plot_ply(
2025-02-24T15:52:32.6303935Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6304020Z     ):
2025-02-24T15:52:32.6304094Z         """
2025-02-24T15:52:32.6304230Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:52:32.6304301Z     
2025-02-24T15:52:32.6304432Z         Compares generated plot data with regression data.
2025-02-24T15:52:32.6304501Z     
2025-02-24T15:52:32.6304584Z         Parameters:
2025-02-24T15:52:32.6304662Z         ----------
2025-02-24T15:52:32.6304828Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:52:32.6304967Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:52:32.6305070Z         request: Pytest's request fixture.
2025-02-24T15:52:32.6305147Z         """
2025-02-24T15:52:32.6305242Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6305364Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6305541Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6305616Z     
2025-02-24T15:52:32.6305763Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:52:32.6305872Z             expected_values = expected.get(
2025-02-24T15:52:32.6305961Z                 "plot_data_hdf/" + item
2025-02-24T15:52:32.6306053Z             ).values.flatten()
2025-02-24T15:52:32.6306193Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:52:32.6306273Z     
2025-02-24T15:52:32.6306404Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:52:32.6306506Z                 np.testing.assert_allclose(
2025-02-24T15:52:32.6306591Z                     expected_values,
2025-02-24T15:52:32.6306679Z                     actual_values,
2025-02-24T15:52:32.6306758Z                     rtol=0.3,
2025-02-24T15:52:32.6306844Z                     atol=3,
2025-02-24T15:52:32.6306922Z                 )
2025-02-24T15:52:32.6306995Z             else:
2025-02-24T15:52:32.6307133Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:52:32.6307241Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6307352Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6307440Z             if data.stackgroup:
2025-02-24T15:52:32.6307521Z                 assert (
2025-02-24T15:52:32.6307608Z                     data.stackgroup
2025-02-24T15:52:32.6307691Z                     == getattr(
2025-02-24T15:52:32.6307872Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6308039Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6308120Z                     ).decode()
2025-02-24T15:52:32.6308196Z                 )
2025-02-24T15:52:32.6308280Z             if data.name:
2025-02-24T15:52:32.6308358Z                 assert (
2025-02-24T15:52:32.6308533Z                     data.name
2025-02-24T15:52:32.6308612Z                     == getattr(
2025-02-24T15:52:32.6308723Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6308816Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6308976Z                     ).decode()
2025-02-24T15:52:32.6309048Z                 )
2025-02-24T15:52:32.6309144Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6309219Z                 data.x,
2025-02-24T15:52:32.6309334Z                 expected.get(group + "x").values.flatten(),
2025-02-24T15:52:32.6309411Z                 rtol=0.3,
2025-02-24T15:52:32.6309491Z                 atol=3,
2025-02-24T15:52:32.6309568Z             )
2025-02-24T15:52:32.6309659Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6309737Z                 data.y,
2025-02-24T15:52:32.6309846Z                 expected.get(group + "y").values.flatten(),
2025-02-24T15:52:32.6309926Z                 rtol=0.3,
2025-02-24T15:52:32.6310006Z                 atol=3,
2025-02-24T15:52:32.6310082Z             )
2025-02-24T15:52:32.6310086Z 
2025-02-24T15:52:32.6310229Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T15:52:32.6310352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6310362Z 
2025-02-24T15:52:32.6310793Z args = (<function assert_allclose.<locals>.compare at 0x7f885af62d40>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.6310881Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T15:52:32.6311267Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:52:32.6311272Z 
2025-02-24T15:52:32.6311350Z     @wraps(func)
2025-02-24T15:52:32.6311440Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6311530Z         with self._recreate_cm():
2025-02-24T15:52:32.6311674Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6311830Z E           AssertionError: 
2025-02-24T15:52:32.6311971Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.6312044Z E           
2025-02-24T15:52:32.6312155Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.6312257Z E           Max absolute difference: 34
2025-02-24T15:52:32.6312359Z E           Max relative difference: 0.65
2025-02-24T15:52:32.6312507Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.6312599Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6312741Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.6312829Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.6312833Z 
2025-02-24T15:52:32.6313052Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6313213Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:52:32.6313505Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:52:32.6313840Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:52:32.6313999Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:52:32.6314356Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T15:52:32.6314582Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-24T15:52:32.6314587Z 
2025-02-24T15:52:32.6314866Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9523c0>
2025-02-24T15:52:32.6315192Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6315683Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8883852090>
2025-02-24T15:52:32.6316114Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-24T15:52:32.6316242Z 
2025-02-24T15:52:32.6316347Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6316426Z         self,
2025-02-24T15:52:32.6316524Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6316620Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6316695Z         request,
2025-02-24T15:52:32.6316769Z     ):
2025-02-24T15:52:32.6316880Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6317072Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6317165Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6317342Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6317442Z             plot_object = getattr(
2025-02-24T15:52:32.6317570Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6317646Z             )
2025-02-24T15:52:32.6317747Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6317921Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6318029Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6318131Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6318261Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6318341Z                 )
2025-02-24T15:52:32.6318345Z 
2025-02-24T15:52:32.6318497Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6318611Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6318614Z 
2025-02-24T15:52:32.6319097Z args = (<function assert_allclose.<locals>.compare at 0x7f885954b1a0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:52:32.6319201Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6319572Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6319589Z 
2025-02-24T15:52:32.6319687Z     @wraps(func)
2025-02-24T15:52:32.6319775Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6319869Z         with self._recreate_cm():
2025-02-24T15:52:32.6319960Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6320052Z E           AssertionError: 
2025-02-24T15:52:32.6320163Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6320238Z E           
2025-02-24T15:52:32.6320340Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6320447Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.6320548Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6320711Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6320799Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6321064Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6321163Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6321166Z 
2025-02-24T15:52:32.6321375Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6321602Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-24T15:52:32.6321606Z 
2025-02-24T15:52:32.6321879Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b952ae0>
2025-02-24T15:52:32.6322195Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6322677Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8870641d90>
2025-02-24T15:52:32.6322971Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-24T15:52:32.6322975Z 
2025-02-24T15:52:32.6323180Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6323269Z         self,
2025-02-24T15:52:32.6323375Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6323466Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6323542Z         request,
2025-02-24T15:52:32.6323613Z     ):
2025-02-24T15:52:32.6323728Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6323913Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6324016Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6324197Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6324284Z             plot_object = getattr(
2025-02-24T15:52:32.6324422Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6324493Z             )
2025-02-24T15:52:32.6324599Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6324761Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6324878Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6324975Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6325124Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6325253Z                 )
2025-02-24T15:52:32.6325260Z 
2025-02-24T15:52:32.6325506Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6325630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6325634Z 
2025-02-24T15:52:32.6326101Z args = (<function assert_allclose.<locals>.compare at 0x7f88595711c0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:52:32.6326213Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6326460Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6326469Z 
2025-02-24T15:52:32.6326550Z     @wraps(func)
2025-02-24T15:52:32.6326640Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6326744Z         with self._recreate_cm():
2025-02-24T15:52:32.6326841Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6326929Z E           AssertionError: 
2025-02-24T15:52:32.6327047Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6327118Z E           
2025-02-24T15:52:32.6327224Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6327326Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.6327430Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6327580Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6327674Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6327820Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6327909Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6327917Z 
2025-02-24T15:52:32.6328124Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6328346Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-24T15:52:32.6328350Z 
2025-02-24T15:52:32.6328627Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b952f90>
2025-02-24T15:52:32.6328936Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6329264Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8870640470>
2025-02-24T15:52:32.6329657Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-24T15:52:32.6329662Z 
2025-02-24T15:52:32.6329761Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6329837Z         self,
2025-02-24T15:52:32.6330010Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6330106Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6330179Z         request,
2025-02-24T15:52:32.6330254Z     ):
2025-02-24T15:52:32.6330367Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6330604Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6330747Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6331263Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6331523Z             plot_object = getattr(
2025-02-24T15:52:32.6331655Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6331731Z             )
2025-02-24T15:52:32.6331841Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6332008Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6332116Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6332224Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6332353Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6332431Z                 )
2025-02-24T15:52:32.6332436Z 
2025-02-24T15:52:32.6332583Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6332705Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6332709Z 
2025-02-24T15:52:32.6333178Z args = (<function assert_allclose.<locals>.compare at 0x7f8859537b00>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:52:32.6333282Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6333533Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6333538Z 
2025-02-24T15:52:32.6333613Z     @wraps(func)
2025-02-24T15:52:32.6333714Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6333802Z         with self._recreate_cm():
2025-02-24T15:52:32.6333899Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6333991Z E           AssertionError: 
2025-02-24T15:52:32.6334099Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6334179Z E           
2025-02-24T15:52:32.6334280Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6334386Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.6334486Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6334742Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6334875Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6335034Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6335119Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6335128Z 
2025-02-24T15:52:32.6335335Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6335562Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-24T15:52:32.6335566Z 
2025-02-24T15:52:32.6335837Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953080>
2025-02-24T15:52:32.6336151Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6336479Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887f815430>
2025-02-24T15:52:32.6336762Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-24T15:52:32.6336767Z 
2025-02-24T15:52:32.6337004Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6337082Z         self,
2025-02-24T15:52:32.6337185Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6337276Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6337458Z         request,
2025-02-24T15:52:32.6337531Z     ):
2025-02-24T15:52:32.6337643Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6337826Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6337919Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6338094Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6338188Z             plot_object = getattr(
2025-02-24T15:52:32.6338315Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6338393Z             )
2025-02-24T15:52:32.6338497Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6338663Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6338774Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6338871Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6339009Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6339081Z                 )
2025-02-24T15:52:32.6339085Z 
2025-02-24T15:52:32.6339236Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6339351Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6339355Z 
2025-02-24T15:52:32.6339855Z args = (<function assert_allclose.<locals>.compare at 0x7f88595374c0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06,...), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:52:32.6340046Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6340334Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6340339Z 
2025-02-24T15:52:32.6340425Z     @wraps(func)
2025-02-24T15:52:32.6340512Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6340605Z         with self._recreate_cm():
2025-02-24T15:52:32.6340702Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6340794Z E           AssertionError: 
2025-02-24T15:52:32.6340902Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6341155Z E           
2025-02-24T15:52:32.6341264Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6341367Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.6341470Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6341621Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6341712Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6341856Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6341950Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6341953Z 
2025-02-24T15:52:32.6342153Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6342382Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-24T15:52:32.6342386Z 
2025-02-24T15:52:32.6342662Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953140>
2025-02-24T15:52:32.6342968Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6343297Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8861b3e720>
2025-02-24T15:52:32.6343572Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-24T15:52:32.6343577Z 
2025-02-24T15:52:32.6343676Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6343909Z         self,
2025-02-24T15:52:32.6344103Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6344233Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6344308Z         request,
2025-02-24T15:52:32.6344505Z     ):
2025-02-24T15:52:32.6344615Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6344801Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6344887Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6345064Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6345151Z             plot_object = getattr(
2025-02-24T15:52:32.6345279Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6345350Z             )
2025-02-24T15:52:32.6345454Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6345617Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6345729Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6345832Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6345960Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6346043Z                 )
2025-02-24T15:52:32.6346047Z 
2025-02-24T15:52:32.6346194Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6346313Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6346317Z 
2025-02-24T15:52:32.6346778Z args = (<function assert_allclose.<locals>.compare at 0x7f8848d11da0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:52:32.6346885Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6347138Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6347143Z 
2025-02-24T15:52:32.6347222Z     @wraps(func)
2025-02-24T15:52:32.6347313Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6347402Z         with self._recreate_cm():
2025-02-24T15:52:32.6347497Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6347588Z E           AssertionError: 
2025-02-24T15:52:32.6347737Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6347871Z E           
2025-02-24T15:52:32.6348031Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6348141Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.6348239Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6348395Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6348483Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6348630Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6348716Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6348724Z 
2025-02-24T15:52:32.6348930Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6349153Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-24T15:52:32.6349164Z 
2025-02-24T15:52:32.6349432Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953200>
2025-02-24T15:52:32.6349741Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6350068Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887d0e7bf0>
2025-02-24T15:52:32.6350352Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-24T15:52:32.6350356Z 
2025-02-24T15:52:32.6350450Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6350528Z         self,
2025-02-24T15:52:32.6350626Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6350811Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6350890Z         request,
2025-02-24T15:52:32.6351090Z     ):
2025-02-24T15:52:32.6351202Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6351523Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6351614Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6351788Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6351881Z             plot_object = getattr(
2025-02-24T15:52:32.6352008Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6352086Z             )
2025-02-24T15:52:32.6352189Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6352353Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6352465Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6352570Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6352704Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6352811Z                 )
2025-02-24T15:52:32.6352818Z 
2025-02-24T15:52:32.6353083Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6353203Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6353207Z 
2025-02-24T15:52:32.6353681Z args = (<function assert_allclose.<locals>.compare at 0x7f8859570720>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:52:32.6353788Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6354029Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6354034Z 
2025-02-24T15:52:32.6354114Z     @wraps(func)
2025-02-24T15:52:32.6354201Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6354296Z         with self._recreate_cm():
2025-02-24T15:52:32.6354386Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6354476Z E           AssertionError: 
2025-02-24T15:52:32.6354584Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6354667Z E           
2025-02-24T15:52:32.6354768Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6354874Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.6354977Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6355127Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6355219Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6355363Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6355463Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6355467Z 
2025-02-24T15:52:32.6355673Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6355901Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-24T15:52:32.6355905Z 
2025-02-24T15:52:32.6356176Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9532c0>
2025-02-24T15:52:32.6356495Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6356970Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8870130b00>
2025-02-24T15:52:32.6357255Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-24T15:52:32.6357260Z 
2025-02-24T15:52:32.6357361Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6357434Z         self,
2025-02-24T15:52:32.6357538Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6357630Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6357835Z         request,
2025-02-24T15:52:32.6357910Z     ):
2025-02-24T15:52:32.6358023Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6358206Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6358368Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6358550Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6358640Z             plot_object = getattr(
2025-02-24T15:52:32.6358772Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6358845Z             )
2025-02-24T15:52:32.6358953Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6359120Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6359234Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6359333Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6359475Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6359553Z                 )
2025-02-24T15:52:32.6359556Z 
2025-02-24T15:52:32.6359706Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6359829Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6359839Z 
2025-02-24T15:52:32.6360450Z args = (<function assert_allclose.<locals>.compare at 0x7f8859571120>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:52:32.6360566Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6360818Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6360828Z 
2025-02-24T15:52:32.6361000Z     @wraps(func)
2025-02-24T15:52:32.6361096Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6361186Z         with self._recreate_cm():
2025-02-24T15:52:32.6361290Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6361379Z E           AssertionError: 
2025-02-24T15:52:32.6361494Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6361567Z E           
2025-02-24T15:52:32.6361679Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6361780Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.6361919Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6362081Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6362171Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6362322Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6362408Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6362412Z 
2025-02-24T15:52:32.6362623Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6362851Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-24T15:52:32.6362855Z 
2025-02-24T15:52:32.6363131Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953380>
2025-02-24T15:52:32.6363447Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6363780Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8870131340>
2025-02-24T15:52:32.6364069Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-24T15:52:32.6364073Z 
2025-02-24T15:52:32.6364171Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6364253Z         self,
2025-02-24T15:52:32.6364354Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6364452Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6364526Z         request,
2025-02-24T15:52:32.6364604Z     ):
2025-02-24T15:52:32.6364836Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6365031Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6365125Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6365408Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6365502Z             plot_object = getattr(
2025-02-24T15:52:32.6365631Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6365707Z             )
2025-02-24T15:52:32.6365808Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6365977Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6366083Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6366185Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6366394Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6366539Z                 )
2025-02-24T15:52:32.6366553Z 
2025-02-24T15:52:32.6366720Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6366868Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6366884Z 
2025-02-24T15:52:32.6367475Z args = (<function assert_allclose.<locals>.compare at 0x7f8859573240>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06,...), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:52:32.6367582Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6367834Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6367838Z 
2025-02-24T15:52:32.6367918Z     @wraps(func)
2025-02-24T15:52:32.6368005Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6368097Z         with self._recreate_cm():
2025-02-24T15:52:32.6368187Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6368279Z E           AssertionError: 
2025-02-24T15:52:32.6368393Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6368469Z E           
2025-02-24T15:52:32.6368569Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6368675Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.6368776Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6368929Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6369017Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6369164Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.6369254Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6369258Z 
2025-02-24T15:52:32.6369462Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6369688Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-24T15:52:32.6369692Z 
2025-02-24T15:52:32.6369964Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953440>
2025-02-24T15:52:32.6370275Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6370606Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f886171f680>
2025-02-24T15:52:32.6370886Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-24T15:52:32.6370890Z 
2025-02-24T15:52:32.6371120Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6371194Z         self,
2025-02-24T15:52:32.6371295Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6371386Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6371464Z         request,
2025-02-24T15:52:32.6371533Z     ):
2025-02-24T15:52:32.6371642Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6371955Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6372053Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6372233Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6372421Z             plot_object = getattr(
2025-02-24T15:52:32.6372550Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6372620Z             )
2025-02-24T15:52:32.6372723Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6372889Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6372998Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6373095Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6373333Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6373461Z                 )
2025-02-24T15:52:32.6373466Z 
2025-02-24T15:52:32.6373624Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6373747Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6373751Z 
2025-02-24T15:52:32.6374222Z args = (<function assert_allclose.<locals>.compare at 0x7f88595360c0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:52:32.6374334Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6374578Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6374582Z 
2025-02-24T15:52:32.6374664Z     @wraps(func)
2025-02-24T15:52:32.6374750Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6374843Z         with self._recreate_cm():
2025-02-24T15:52:32.6374937Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6375022Z E           AssertionError: 
2025-02-24T15:52:32.6375136Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6375212Z E           
2025-02-24T15:52:32.6375317Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6375419Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.6375519Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6375674Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6375763Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6375910Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6375997Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6376000Z 
2025-02-24T15:52:32.6376207Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6376427Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-24T15:52:32.6376431Z 
2025-02-24T15:52:32.6376706Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953500>
2025-02-24T15:52:32.6377167Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6377506Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f888362aab0>
2025-02-24T15:52:32.6377795Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-24T15:52:32.6377800Z 
2025-02-24T15:52:32.6377892Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6377968Z         self,
2025-02-24T15:52:32.6378065Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6378159Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6378232Z         request,
2025-02-24T15:52:32.6378306Z     ):
2025-02-24T15:52:32.6378411Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6378593Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6378769Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6378954Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6379041Z             plot_object = getattr(
2025-02-24T15:52:32.6379262Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6379337Z             )
2025-02-24T15:52:32.6379436Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6379598Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6379703Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6379803Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6379930Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6380007Z                 )
2025-02-24T15:52:32.6380011Z 
2025-02-24T15:52:32.6380156Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6380275Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6380279Z 
2025-02-24T15:52:32.6380750Z args = (<function assert_allclose.<locals>.compare at 0x7f88598d9bc0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:52:32.6380865Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6381347Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6381354Z 
2025-02-24T15:52:32.6381431Z     @wraps(func)
2025-02-24T15:52:32.6381520Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6381605Z         with self._recreate_cm():
2025-02-24T15:52:32.6381697Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6381789Z E           AssertionError: 
2025-02-24T15:52:32.6381897Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6381971Z E           
2025-02-24T15:52:32.6382071Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6382181Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.6382280Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6382436Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6382527Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6382680Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6382766Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6382774Z 
2025-02-24T15:52:32.6382974Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6383202Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-24T15:52:32.6383206Z 
2025-02-24T15:52:32.6383473Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9535c0>
2025-02-24T15:52:32.6383788Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6384112Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887f883e60>
2025-02-24T15:52:32.6384405Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-24T15:52:32.6384409Z 
2025-02-24T15:52:32.6384509Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6384583Z         self,
2025-02-24T15:52:32.6384684Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6384774Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6384851Z         request,
2025-02-24T15:52:32.6384921Z     ):
2025-02-24T15:52:32.6385031Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6385216Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6385306Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6385606Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6385704Z             plot_object = getattr(
2025-02-24T15:52:32.6385832Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6386029Z             )
2025-02-24T15:52:32.6386136Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6386295Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6386416Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6386587Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6386781Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6386855Z                 )
2025-02-24T15:52:32.6386859Z 
2025-02-24T15:52:32.6387011Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6387124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6387137Z 
2025-02-24T15:52:32.6387612Z args = (<function assert_allclose.<locals>.compare at 0x7f8859573ba0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:52:32.6387719Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6387966Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6387970Z 
2025-02-24T15:52:32.6388051Z     @wraps(func)
2025-02-24T15:52:32.6388136Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6388229Z         with self._recreate_cm():
2025-02-24T15:52:32.6388318Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6388409Z E           AssertionError: 
2025-02-24T15:52:32.6388516Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6388593Z E           
2025-02-24T15:52:32.6388698Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6388801Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.6388910Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6389059Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6389149Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6389297Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6389389Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6389393Z 
2025-02-24T15:52:32.6389591Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6389816Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-24T15:52:32.6389820Z 
2025-02-24T15:52:32.6390089Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9536b0>
2025-02-24T15:52:32.6390399Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6390732Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887f881610>
2025-02-24T15:52:32.6391136Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-24T15:52:32.6391144Z 
2025-02-24T15:52:32.6391244Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6391317Z         self,
2025-02-24T15:52:32.6391417Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6391511Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6391584Z         request,
2025-02-24T15:52:32.6391659Z     ):
2025-02-24T15:52:32.6391766Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6392049Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6392176Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6392359Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6392570Z             plot_object = getattr(
2025-02-24T15:52:32.6392705Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6392776Z             )
2025-02-24T15:52:32.6392880Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6393146Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6393254Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6393352Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6393479Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6393556Z                 )
2025-02-24T15:52:32.6393560Z 
2025-02-24T15:52:32.6393703Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6393819Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6393822Z 
2025-02-24T15:52:32.6394290Z args = (<function assert_allclose.<locals>.compare at 0x7f88595713a0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46,...), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:52:32.6394398Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6394643Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6394652Z 
2025-02-24T15:52:32.6394728Z     @wraps(func)
2025-02-24T15:52:32.6394824Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6394910Z         with self._recreate_cm():
2025-02-24T15:52:32.6395003Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6395087Z E           AssertionError: 
2025-02-24T15:52:32.6395200Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6395272Z E           
2025-02-24T15:52:32.6395380Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.6395487Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.6395588Z E           Max relative difference: 4.76021355
2025-02-24T15:52:32.6395747Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6395833Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6395982Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6396070Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6396073Z 
2025-02-24T15:52:32.6396276Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6396498Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-24T15:52:32.6396507Z 
2025-02-24T15:52:32.6396772Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953770>
2025-02-24T15:52:32.6397085Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6397408Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8870601640>
2025-02-24T15:52:32.6397695Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-24T15:52:32.6397699Z 
2025-02-24T15:52:32.6397798Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6397877Z         self,
2025-02-24T15:52:32.6397975Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6398069Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6398146Z         request,
2025-02-24T15:52:32.6398216Z     ):
2025-02-24T15:52:32.6398383Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6398659Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6398750Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6398921Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6399012Z             plot_object = getattr(
2025-02-24T15:52:32.6399223Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6399300Z             )
2025-02-24T15:52:32.6399400Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6399561Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6399747Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6399842Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6399974Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6400045Z                 )
2025-02-24T15:52:32.6400049Z 
2025-02-24T15:52:32.6400199Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6400312Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6400315Z 
2025-02-24T15:52:32.6400784Z args = (<function assert_allclose.<locals>.compare at 0x7f8870885300>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:52:32.6400893Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6401247Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6401259Z 
2025-02-24T15:52:32.6401338Z     @wraps(func)
2025-02-24T15:52:32.6401422Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6401512Z         with self._recreate_cm():
2025-02-24T15:52:32.6401600Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6401691Z E           AssertionError: 
2025-02-24T15:52:32.6401801Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6401877Z E           
2025-02-24T15:52:32.6401977Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6402108Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.6402291Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6402481Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6402578Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6402723Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6402813Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6402822Z 
2025-02-24T15:52:32.6403023Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6403245Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-24T15:52:32.6403249Z 
2025-02-24T15:52:32.6403513Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953860>
2025-02-24T15:52:32.6403824Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6404154Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8882dd0410>
2025-02-24T15:52:32.6404437Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-24T15:52:32.6404442Z 
2025-02-24T15:52:32.6404539Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6404610Z         self,
2025-02-24T15:52:32.6404714Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6404804Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6404881Z         request,
2025-02-24T15:52:32.6404950Z     ):
2025-02-24T15:52:32.6405060Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6405245Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6405329Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6405506Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6405592Z             plot_object = getattr(
2025-02-24T15:52:32.6405727Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6405798Z             )
2025-02-24T15:52:32.6406089Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6406371Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6406492Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6406711Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6406849Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6406929Z                 )
2025-02-24T15:52:32.6406933Z 
2025-02-24T15:52:32.6407081Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6407204Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6407208Z 
2025-02-24T15:52:32.6407677Z args = (<function assert_allclose.<locals>.compare at 0x7f8870886f20>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:52:32.6407785Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6408033Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6408043Z 
2025-02-24T15:52:32.6408119Z     @wraps(func)
2025-02-24T15:52:32.6408217Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6408305Z         with self._recreate_cm():
2025-02-24T15:52:32.6408402Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6408487Z E           AssertionError: 
2025-02-24T15:52:32.6408604Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6408676Z E           
2025-02-24T15:52:32.6408781Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6408881Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.6408983Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6409141Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6409231Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6409386Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6409472Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6409476Z 
2025-02-24T15:52:32.6409683Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6409900Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-24T15:52:32.6409904Z 
2025-02-24T15:52:32.6410175Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953980>
2025-02-24T15:52:32.6410483Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6410817Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f88805244d0>
2025-02-24T15:52:32.6411215Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-24T15:52:32.6411224Z 
2025-02-24T15:52:32.6411320Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6411397Z         self,
2025-02-24T15:52:32.6411493Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6411595Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6411667Z         request,
2025-02-24T15:52:32.6411744Z     ):
2025-02-24T15:52:32.6411849Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6412036Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6412127Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6412302Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6412393Z             plot_object = getattr(
2025-02-24T15:52:32.6412519Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6412596Z             )
2025-02-24T15:52:32.6412693Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6412970Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6413079Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6413180Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6413413Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6413492Z                 )
2025-02-24T15:52:32.6413496Z 
2025-02-24T15:52:32.6413649Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6413762Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6413766Z 
2025-02-24T15:52:32.6414237Z args = (<function assert_allclose.<locals>.compare at 0x7f8848d11da0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:52:32.6414340Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6414593Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6414596Z 
2025-02-24T15:52:32.6414684Z     @wraps(func)
2025-02-24T15:52:32.6414769Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6414864Z         with self._recreate_cm():
2025-02-24T15:52:32.6414958Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6415049Z E           AssertionError: 
2025-02-24T15:52:32.6415157Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6415237Z E           
2025-02-24T15:52:32.6415338Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6415443Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.6415541Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6415696Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6415783Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6415941Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6416033Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6416037Z 
2025-02-24T15:52:32.6416237Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6416471Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-24T15:52:32.6416475Z 
2025-02-24T15:52:32.6416738Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953aa0>
2025-02-24T15:52:32.6417050Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>
2025-02-24T15:52:32.6417382Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8862e7dfa0>
2025-02-24T15:52:32.6417662Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-24T15:52:32.6417666Z 
2025-02-24T15:52:32.6417768Z     def test_calculate_plotting_data(
2025-02-24T15:52:32.6417845Z         self,
2025-02-24T15:52:32.6417951Z         plotter_calculate_plotting_data,
2025-02-24T15:52:32.6418040Z         calculate_plotting_data_hdf,
2025-02-24T15:52:32.6418119Z         request,
2025-02-24T15:52:32.6418193Z     ):
2025-02-24T15:52:32.6418306Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6418490Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:52:32.6418587Z         group = "plot_data_hdf/"
2025-02-24T15:52:32.6418765Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:52:32.6418852Z             plot_object = getattr(
2025-02-24T15:52:32.6418984Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:52:32.6419056Z             )
2025-02-24T15:52:32.6419160Z             if attribute_type == "attributes_np":
2025-02-24T15:52:32.6419320Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:52:32.6419516Z                     plot_object = plot_object.cgs.value
2025-02-24T15:52:32.6419618Z >               np.testing.assert_allclose(
2025-02-24T15:52:32.6419755Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:52:32.6419901Z                 )
2025-02-24T15:52:32.6419905Z 
2025-02-24T15:52:32.6420052Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:52:32.6420169Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6420173Z 
2025-02-24T15:52:32.6420636Z args = (<function assert_allclose.<locals>.compare at 0x7f8859573ba0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46,...), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:52:32.6420746Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6421087Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6421091Z 
2025-02-24T15:52:32.6421180Z     @wraps(func)
2025-02-24T15:52:32.6421267Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6421360Z         with self._recreate_cm():
2025-02-24T15:52:32.6421455Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6421546Z E           AssertionError: 
2025-02-24T15:52:32.6421658Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6421730Z E           
2025-02-24T15:52:32.6421837Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.6421938Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.6422041Z E           Max relative difference: 178.93768705
2025-02-24T15:52:32.6422189Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6422282Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6422426Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.6422516Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6422525Z 
2025-02-24T15:52:32.6422731Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6422938Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-24T15:52:32.6422946Z 
2025-02-24T15:52:32.6423218Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b952a20>
2025-02-24T15:52:32.6423531Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887e721c40>
2025-02-24T15:52:32.6423634Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6423724Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6423832Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6423969Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6424178Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6424437Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-24T15:52:32.6424441Z 
2025-02-24T15:52:32.6424530Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6424706Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6424781Z     ):
2025-02-24T15:52:32.6424883Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6424989Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6425170Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6425247Z     
2025-02-24T15:52:32.6425356Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6425459Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6425606Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6425718Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6425790Z             )
2025-02-24T15:52:32.6425864Z     
2025-02-24T15:52:32.6426087Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6426205Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6426293Z             if data.stackgroup:
2025-02-24T15:52:32.6426479Z                 assert (
2025-02-24T15:52:32.6426568Z                     data.stackgroup
2025-02-24T15:52:32.6426654Z                     == getattr(
2025-02-24T15:52:32.6426770Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6426872Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6426960Z                     ).decode()
2025-02-24T15:52:32.6427033Z                 )
2025-02-24T15:52:32.6427119Z             if data.name:
2025-02-24T15:52:32.6427196Z                 assert (
2025-02-24T15:52:32.6427281Z                     data.name
2025-02-24T15:52:32.6427360Z                     == getattr(
2025-02-24T15:52:32.6427473Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6427573Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6427656Z                     ).decode()
2025-02-24T15:52:32.6427729Z                 )
2025-02-24T15:52:32.6427831Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6427976Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6428048Z             )
2025-02-24T15:52:32.6428147Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6428269Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6428345Z             )
2025-02-24T15:52:32.6428349Z 
2025-02-24T15:52:32.6428501Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6428621Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6428625Z 
2025-02-24T15:52:32.6429100Z args = (<function assert_allclose.<locals>.compare at 0x7f88708bdf80>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:52:32.6429212Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6429467Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6429477Z 
2025-02-24T15:52:32.6429554Z     @wraps(func)
2025-02-24T15:52:32.6429650Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6429741Z         with self._recreate_cm():
2025-02-24T15:52:32.6429838Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6429926Z E           AssertionError: 
2025-02-24T15:52:32.6430046Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6430119Z E           
2025-02-24T15:52:32.6430230Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6430342Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.6430442Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6430603Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6430691Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6430843Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6431060Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6431064Z 
2025-02-24T15:52:32.6431278Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6431481Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-24T15:52:32.6431492Z 
2025-02-24T15:52:32.6431761Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b953ec0>
2025-02-24T15:52:32.6432082Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f885fa73950>
2025-02-24T15:52:32.6432180Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6432275Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6432516Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6432626Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6432830Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6433184Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-24T15:52:32.6433187Z 
2025-02-24T15:52:32.6433280Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6433450Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6433526Z     ):
2025-02-24T15:52:32.6433623Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6433733Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6433911Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6433988Z     
2025-02-24T15:52:32.6434098Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6434201Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6434351Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6434469Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6434548Z             )
2025-02-24T15:52:32.6434622Z     
2025-02-24T15:52:32.6434730Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6434840Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6434932Z             if data.stackgroup:
2025-02-24T15:52:32.6435009Z                 assert (
2025-02-24T15:52:32.6435104Z                     data.stackgroup
2025-02-24T15:52:32.6435183Z                     == getattr(
2025-02-24T15:52:32.6435297Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6435394Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6435477Z                     ).decode()
2025-02-24T15:52:32.6435552Z                 )
2025-02-24T15:52:32.6435636Z             if data.name:
2025-02-24T15:52:32.6435720Z                 assert (
2025-02-24T15:52:32.6435806Z                     data.name
2025-02-24T15:52:32.6435890Z                     == getattr(
2025-02-24T15:52:32.6435996Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6436102Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6436180Z                     ).decode()
2025-02-24T15:52:32.6436260Z                 )
2025-02-24T15:52:32.6436356Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6436490Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6436564Z             )
2025-02-24T15:52:32.6436661Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6436785Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6436862Z             )
2025-02-24T15:52:32.6436866Z 
2025-02-24T15:52:32.6437021Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6437140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6437144Z 
2025-02-24T15:52:32.6437620Z args = (<function assert_allclose.<locals>.compare at 0x7f88708beb60>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:52:32.6437727Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6437981Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6437985Z 
2025-02-24T15:52:32.6438062Z     @wraps(func)
2025-02-24T15:52:32.6438157Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6438253Z         with self._recreate_cm():
2025-02-24T15:52:32.6438343Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6438434Z E           AssertionError: 
2025-02-24T15:52:32.6438543Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6438622Z E           
2025-02-24T15:52:32.6438820Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6438936Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.6439034Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6439189Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6439350Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6439507Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6439598Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6439602Z 
2025-02-24T15:52:32.6439805Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6440014Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-24T15:52:32.6440017Z 
2025-02-24T15:52:32.6440283Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b933c50>
2025-02-24T15:52:32.6440608Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f885fa6bcb0>
2025-02-24T15:52:32.6440706Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6440802Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6441044Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6441149Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6441362Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6441607Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-24T15:52:32.6441611Z 
2025-02-24T15:52:32.6441705Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6441874Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6441952Z     ):
2025-02-24T15:52:32.6442049Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6442163Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6442349Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6442421Z     
2025-02-24T15:52:32.6442538Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6442640Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6442789Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6442900Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6442977Z             )
2025-02-24T15:52:32.6443050Z     
2025-02-24T15:52:32.6443158Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6443263Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6443353Z             if data.stackgroup:
2025-02-24T15:52:32.6443428Z                 assert (
2025-02-24T15:52:32.6443517Z                     data.stackgroup
2025-02-24T15:52:32.6443597Z                     == getattr(
2025-02-24T15:52:32.6443703Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6443810Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6443890Z                     ).decode()
2025-02-24T15:52:32.6443968Z                 )
2025-02-24T15:52:32.6444052Z             if data.name:
2025-02-24T15:52:32.6444135Z                 assert (
2025-02-24T15:52:32.6444213Z                     data.name
2025-02-24T15:52:32.6444295Z                     == getattr(
2025-02-24T15:52:32.6444399Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6444497Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6444576Z                     ).decode()
2025-02-24T15:52:32.6444652Z                 )
2025-02-24T15:52:32.6444752Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6444881Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6444959Z             )
2025-02-24T15:52:32.6445051Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6445297Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6445372Z             )
2025-02-24T15:52:32.6445376Z 
2025-02-24T15:52:32.6445529Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6445744Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6445748Z 
2025-02-24T15:52:32.6446221Z args = (<function assert_allclose.<locals>.compare at 0x7f88708be8e0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:52:32.6446329Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6446574Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6446579Z 
2025-02-24T15:52:32.6446665Z     @wraps(func)
2025-02-24T15:52:32.6446749Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6446843Z         with self._recreate_cm():
2025-02-24T15:52:32.6446937Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6447028Z E           AssertionError: 
2025-02-24T15:52:32.6447137Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6447215Z E           
2025-02-24T15:52:32.6447329Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6447432Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.6447537Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6447723Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6447815Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6447982Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6448073Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6448077Z 
2025-02-24T15:52:32.6448286Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6448498Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-24T15:52:32.6448502Z 
2025-02-24T15:52:32.6448774Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b933ce0>
2025-02-24T15:52:32.6449096Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887548c1d0>
2025-02-24T15:52:32.6449208Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6449305Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6449417Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6449516Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6449728Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6449970Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-24T15:52:32.6449981Z 
2025-02-24T15:52:32.6450070Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6450246Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6450318Z     ):
2025-02-24T15:52:32.6450421Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6450528Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6450712Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6450793Z     
2025-02-24T15:52:32.6451022Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6451124Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6451275Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6451387Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6451464Z             )
2025-02-24T15:52:32.6451541Z     
2025-02-24T15:52:32.6451641Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6451753Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6451955Z             if data.stackgroup:
2025-02-24T15:52:32.6452041Z                 assert (
2025-02-24T15:52:32.6452126Z                     data.stackgroup
2025-02-24T15:52:32.6452209Z                     == getattr(
2025-02-24T15:52:32.6452457Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6452559Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6452636Z                     ).decode()
2025-02-24T15:52:32.6452713Z                 )
2025-02-24T15:52:32.6452790Z             if data.name:
2025-02-24T15:52:32.6452871Z                 assert (
2025-02-24T15:52:32.6452952Z                     data.name
2025-02-24T15:52:32.6453029Z                     == getattr(
2025-02-24T15:52:32.6453138Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6453229Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6453310Z                     ).decode()
2025-02-24T15:52:32.6453381Z                 )
2025-02-24T15:52:32.6453490Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6453617Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6453694Z             )
2025-02-24T15:52:32.6453786Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6453920Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6453996Z             )
2025-02-24T15:52:32.6454000Z 
2025-02-24T15:52:32.6454147Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6454268Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6454271Z 
2025-02-24T15:52:32.6454738Z args = (<function assert_allclose.<locals>.compare at 0x7f885954b100>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14,...), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:52:32.6454845Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6455098Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6455102Z 
2025-02-24T15:52:32.6455186Z     @wraps(func)
2025-02-24T15:52:32.6455275Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6455372Z         with self._recreate_cm():
2025-02-24T15:52:32.6455586Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6455703Z E           AssertionError: 
2025-02-24T15:52:32.6455846Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6456145Z E           
2025-02-24T15:52:32.6456331Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6456465Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.6456629Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6456798Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6457013Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6457211Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6457364Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6457368Z 
2025-02-24T15:52:32.6457603Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6457860Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-24T15:52:32.6457865Z 
2025-02-24T15:52:32.6458345Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b952840>
2025-02-24T15:52:32.6458693Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f888a8829c0>
2025-02-24T15:52:32.6458857Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6458977Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6459131Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6459305Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6459690Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6460008Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-24T15:52:32.6460012Z 
2025-02-24T15:52:32.6460205Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6460442Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6460594Z     ):
2025-02-24T15:52:32.6460776Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6461023Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6461270Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6461389Z     
2025-02-24T15:52:32.6461598Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6461778Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6461982Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6462172Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6462281Z             )
2025-02-24T15:52:32.6462452Z     
2025-02-24T15:52:32.6462599Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6462772Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6462896Z             if data.stackgroup:
2025-02-24T15:52:32.6463056Z                 assert (
2025-02-24T15:52:32.6463247Z                     data.stackgroup
2025-02-24T15:52:32.6463371Z                     == getattr(
2025-02-24T15:52:32.6463529Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6471230Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6471352Z                     ).decode()
2025-02-24T15:52:32.6471429Z                 )
2025-02-24T15:52:32.6471517Z             if data.name:
2025-02-24T15:52:32.6471600Z                 assert (
2025-02-24T15:52:32.6471682Z                     data.name
2025-02-24T15:52:32.6471766Z                     == getattr(
2025-02-24T15:52:32.6471897Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6472001Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6472083Z                     ).decode()
2025-02-24T15:52:32.6472169Z                 )
2025-02-24T15:52:32.6472268Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6472415Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6472489Z             )
2025-02-24T15:52:32.6472594Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6472718Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6472797Z             )
2025-02-24T15:52:32.6472803Z 
2025-02-24T15:52:32.6472973Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6473097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6473101Z 
2025-02-24T15:52:32.6473596Z args = (<function assert_allclose.<locals>.compare at 0x7f88708dc720>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:52:32.6473706Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6473967Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6473972Z 
2025-02-24T15:52:32.6474054Z     @wraps(func)
2025-02-24T15:52:32.6474144Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6474239Z         with self._recreate_cm():
2025-02-24T15:52:32.6474333Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6474429Z E           AssertionError: 
2025-02-24T15:52:32.6474542Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6474621Z E           
2025-02-24T15:52:32.6474724Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6474835Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.6475103Z E           Max relative difference: 15766.1580412
2025-02-24T15:52:32.6475275Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6475368Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6475647Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6475742Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6475747Z 
2025-02-24T15:52:32.6475963Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6476181Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-24T15:52:32.6476185Z 
2025-02-24T15:52:32.6476457Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9508c0>
2025-02-24T15:52:32.6476779Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f885eef4c50>
2025-02-24T15:52:32.6476878Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6476980Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6477093Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6477197Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6477417Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6477670Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-24T15:52:32.6477674Z 
2025-02-24T15:52:32.6477771Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6477941Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6478020Z     ):
2025-02-24T15:52:32.6478120Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6478237Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6478419Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6478491Z     
2025-02-24T15:52:32.6478614Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6478715Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6478870Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6478989Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6479067Z             )
2025-02-24T15:52:32.6479137Z     
2025-02-24T15:52:32.6479246Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6479355Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6479452Z             if data.stackgroup:
2025-02-24T15:52:32.6479532Z                 assert (
2025-02-24T15:52:32.6479625Z                     data.stackgroup
2025-02-24T15:52:32.6479713Z                     == getattr(
2025-02-24T15:52:32.6479826Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6479933Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6480015Z                     ).decode()
2025-02-24T15:52:32.6480098Z                 )
2025-02-24T15:52:32.6480181Z             if data.name:
2025-02-24T15:52:32.6480268Z                 assert (
2025-02-24T15:52:32.6480350Z                     data.name
2025-02-24T15:52:32.6480439Z                     == getattr(
2025-02-24T15:52:32.6480546Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6480646Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6480724Z                     ).decode()
2025-02-24T15:52:32.6480805Z                 )
2025-02-24T15:52:32.6481093Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6481237Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6481315Z             )
2025-02-24T15:52:32.6481413Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6481544Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6481621Z             )
2025-02-24T15:52:32.6481625Z 
2025-02-24T15:52:32.6481922Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6482083Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6482088Z 
2025-02-24T15:52:32.6482601Z args = (<function assert_allclose.<locals>.compare at 0x7f88708de700>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:52:32.6482825Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6483077Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6483081Z 
2025-02-24T15:52:32.6483162Z     @wraps(func)
2025-02-24T15:52:32.6483250Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6483346Z         with self._recreate_cm():
2025-02-24T15:52:32.6483440Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6483534Z E           AssertionError: 
2025-02-24T15:52:32.6483651Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6483730Z E           
2025-02-24T15:52:32.6483838Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6483942Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.6484055Z E           Max relative difference: 15766.1580412
2025-02-24T15:52:32.6484213Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6484311Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6484462Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6484555Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6484559Z 
2025-02-24T15:52:32.6484773Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6484985Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-24T15:52:32.6484989Z 
2025-02-24T15:52:32.6485283Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930110>
2025-02-24T15:52:32.6485602Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8851821a90>
2025-02-24T15:52:32.6485716Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6485806Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6485918Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6486021Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6486250Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6486499Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-24T15:52:32.6486508Z 
2025-02-24T15:52:32.6486600Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6486776Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6486849Z     ):
2025-02-24T15:52:32.6486958Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6487067Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6487250Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6487325Z     
2025-02-24T15:52:32.6487444Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6487544Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6487694Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6487809Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6487882Z             )
2025-02-24T15:52:32.6487958Z     
2025-02-24T15:52:32.6488061Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6488175Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6488263Z             if data.stackgroup:
2025-02-24T15:52:32.6488347Z                 assert (
2025-02-24T15:52:32.6488436Z                     data.stackgroup
2025-02-24T15:52:32.6488605Z                     == getattr(
2025-02-24T15:52:32.6488720Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6488824Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6488982Z                     ).decode()
2025-02-24T15:52:32.6489060Z                 )
2025-02-24T15:52:32.6489146Z             if data.name:
2025-02-24T15:52:32.6489223Z                 assert (
2025-02-24T15:52:32.6489308Z                     data.name
2025-02-24T15:52:32.6489385Z                     == getattr(
2025-02-24T15:52:32.6489494Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6489588Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6489672Z                     ).decode()
2025-02-24T15:52:32.6489745Z                 )
2025-02-24T15:52:32.6489846Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6489975Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6490054Z             )
2025-02-24T15:52:32.6490153Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6490281Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6490361Z             )
2025-02-24T15:52:32.6490373Z 
2025-02-24T15:52:32.6490525Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6490649Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6490653Z 
2025-02-24T15:52:32.6491240Z args = (<function assert_allclose.<locals>.compare at 0x7f8870886480>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:52:32.6491351Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6491598Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6491609Z 
2025-02-24T15:52:32.6491686Z     @wraps(func)
2025-02-24T15:52:32.6491782Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6491874Z         with self._recreate_cm():
2025-02-24T15:52:32.6491982Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6492071Z E           AssertionError: 
2025-02-24T15:52:32.6492190Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6492264Z E           
2025-02-24T15:52:32.6492373Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6492474Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.6492580Z E           Max relative difference: 15766.1580412
2025-02-24T15:52:32.6492735Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6492830Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6492980Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6493068Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6493072Z 
2025-02-24T15:52:32.6493286Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6493492Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-24T15:52:32.6493496Z 
2025-02-24T15:52:32.6493774Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9301d0>
2025-02-24T15:52:32.6494097Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887e881a60>
2025-02-24T15:52:32.6494202Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6494298Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6494403Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6494509Z               '...\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:52:32.6494717Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6494970Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-24T15:52:32.6495090Z 
2025-02-24T15:52:32.6495262Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6495437Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6495612Z     ):
2025-02-24T15:52:32.6495717Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6495831Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6496006Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6496082Z     
2025-02-24T15:52:32.6496192Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6496296Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6496439Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6496555Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6496626Z             )
2025-02-24T15:52:32.6496701Z     
2025-02-24T15:52:32.6496802Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6496919Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6497006Z             if data.stackgroup:
2025-02-24T15:52:32.6497090Z                 assert (
2025-02-24T15:52:32.6497191Z                     data.stackgroup
2025-02-24T15:52:32.6497271Z                     == getattr(
2025-02-24T15:52:32.6497386Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6497486Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6497572Z                     ).decode()
2025-02-24T15:52:32.6497646Z                 )
2025-02-24T15:52:32.6497731Z             if data.name:
2025-02-24T15:52:32.6497808Z                 assert (
2025-02-24T15:52:32.6498554Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6498565Z 
2025-02-24T15:52:32.6499247Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-24T15:52:32.6499251Z 
2025-02-24T15:52:32.6499578Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6499589Z 
2025-02-24T15:52:32.6500291Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-24T15:52:32.6500295Z 
2025-02-24T15:52:32.6500618Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6500621Z 
2025-02-24T15:52:32.6501472Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-24T15:52:32.6501477Z 
2025-02-24T15:52:32.6501793Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6501797Z 
2025-02-24T15:52:32.6502458Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-24T15:52:32.6502466Z 
2025-02-24T15:52:32.6502783Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6502787Z 
2025-02-24T15:52:32.6503432Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-24T15:52:32.6503437Z 
2025-02-24T15:52:32.6503752Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6503755Z 
2025-02-24T15:52:32.6504655Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-24T15:52:32.6504827Z 
2025-02-24T15:52:32.6505142Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6505146Z 
2025-02-24T15:52:32.6505802Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-24T15:52:32.6505806Z 
2025-02-24T15:52:32.6506120Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6506124Z 
2025-02-24T15:52:32.6506787Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-24T15:52:32.6506792Z 
2025-02-24T15:52:32.6507107Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6507116Z 
2025-02-24T15:52:32.6507772Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-24T15:52:32.6507776Z 
2025-02-24T15:52:32.6508105Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6508109Z 
2025-02-24T15:52:32.6508814Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-24T15:52:32.6508818Z 
2025-02-24T15:52:32.6509133Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6509137Z 
2025-02-24T15:52:32.6509801Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-24T15:52:32.6509810Z 
2025-02-24T15:52:32.6510124Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6510128Z 
2025-02-24T15:52:32.6510823Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-24T15:52:32.6510827Z 
2025-02-24T15:52:32.6511259Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6511264Z 
2025-02-24T15:52:32.6511930Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-24T15:52:32.6511941Z 
2025-02-24T15:52:32.6512258Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6512266Z 
2025-02-24T15:52:32.6512929Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-24T15:52:32.6512933Z 
2025-02-24T15:52:32.6513248Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6513252Z 
2025-02-24T15:52:32.6513912Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-24T15:52:32.6514032Z 
2025-02-24T15:52:32.6514350Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6514354Z 
2025-02-24T15:52:32.6515069Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-24T15:52:32.6515174Z 
2025-02-24T15:52:32.6515495Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6515500Z 
2025-02-24T15:52:32.6516202Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-24T15:52:32.6516206Z 
2025-02-24T15:52:32.6516522Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6516526Z 
2025-02-24T15:52:32.6517194Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-24T15:52:32.6517204Z 
2025-02-24T15:52:32.6517513Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6517517Z 
2025-02-24T15:52:32.6518182Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-24T15:52:32.6518186Z 
2025-02-24T15:52:32.6518495Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6518499Z 
2025-02-24T15:52:32.6519215Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-24T15:52:32.6519219Z 
2025-02-24T15:52:32.6519535Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6519543Z 
2025-02-24T15:52:32.6520242Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-24T15:52:32.6520246Z 
2025-02-24T15:52:32.6520557Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6520560Z 
2025-02-24T15:52:32.6521360Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-24T15:52:32.6521370Z 
2025-02-24T15:52:32.6521682Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6521686Z 
2025-02-24T15:52:32.6522347Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-24T15:52:32.6522357Z 
2025-02-24T15:52:32.6522666Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6522675Z 
2025-02-24T15:52:32.6523331Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-24T15:52:32.6523335Z 
2025-02-24T15:52:32.6523654Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6523770Z 
2025-02-24T15:52:32.6524486Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-24T15:52:32.6524595Z 
2025-02-24T15:52:32.6524904Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6524908Z 
2025-02-24T15:52:32.6525574Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-24T15:52:32.6525578Z 
2025-02-24T15:52:32.6525888Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6525892Z 
2025-02-24T15:52:32.6526614Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-24T15:52:32.6526619Z 
2025-02-24T15:52:32.6526937Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6526946Z 
2025-02-24T15:52:32.6527639Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-24T15:52:32.6527643Z 
2025-02-24T15:52:32.6527961Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6527965Z 
2025-02-24T15:52:32.6528619Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-24T15:52:32.6528623Z 
2025-02-24T15:52:32.6528936Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6528940Z 
2025-02-24T15:52:32.6529637Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-24T15:52:32.6529646Z 
2025-02-24T15:52:32.6529956Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6529965Z 
2025-02-24T15:52:32.6530673Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-24T15:52:32.6530677Z 
2025-02-24T15:52:32.6531158Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6531165Z 
2025-02-24T15:52:32.6531825Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-24T15:52:32.6531833Z 
2025-02-24T15:52:32.6532146Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6532150Z 
2025-02-24T15:52:32.6532803Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-24T15:52:32.6532807Z 
2025-02-24T15:52:32.6533118Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6533122Z 
2025-02-24T15:52:32.6533951Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-24T15:52:32.6533956Z 
2025-02-24T15:52:32.6534276Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6534383Z 
2025-02-24T15:52:32.6535063Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-24T15:52:32.6535067Z 
2025-02-24T15:52:32.6535386Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6535390Z 
2025-02-24T15:52:32.6536065Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-24T15:52:32.6536070Z 
2025-02-24T15:52:32.6536384Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6536387Z 
2025-02-24T15:52:32.6537050Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-24T15:52:32.6537059Z 
2025-02-24T15:52:32.6537367Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6537376Z 
2025-02-24T15:52:32.6538028Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-24T15:52:32.6538032Z 
2025-02-24T15:52:32.6538344Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6538348Z 
2025-02-24T15:52:32.6539046Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-24T15:52:32.6539053Z 
2025-02-24T15:52:32.6539367Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6539371Z 
2025-02-24T15:52:32.6540077Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-24T15:52:32.6540084Z 
2025-02-24T15:52:32.6540395Z /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:52:32.6540398Z 
2025-02-24T15:52:32.6541167Z Closing remaining open file: /home/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-24T15:52:32.6541172Z 
2025-02-24T15:52:32.6541261Z                     data.name
2025-02-24T15:52:32.6541342Z                     == getattr(
2025-02-24T15:52:32.6541466Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6541564Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6541651Z                     ).decode()
2025-02-24T15:52:32.6541724Z                 )
2025-02-24T15:52:32.6541827Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6541959Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6542037Z             )
2025-02-24T15:52:32.6542133Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6542270Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6542351Z             )
2025-02-24T15:52:32.6542355Z 
2025-02-24T15:52:32.6542507Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6542852Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6542859Z 
2025-02-24T15:52:32.6543386Z args = (<function assert_allclose.<locals>.compare at 0x7f88708bf7e0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14,...), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:52:32.6543606Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6543877Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6543882Z 
2025-02-24T15:52:32.6543995Z     @wraps(func)
2025-02-24T15:52:32.6544089Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6544179Z         with self._recreate_cm():
2025-02-24T15:52:32.6544278Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6544369Z E           AssertionError: 
2025-02-24T15:52:32.6544486Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6544565Z E           
2025-02-24T15:52:32.6544676Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6544780Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.6544889Z E           Max relative difference: 15766.1580412
2025-02-24T15:52:32.6545051Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6545149Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6545302Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.6545391Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6545395Z 
2025-02-24T15:52:32.6545612Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6545818Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-24T15:52:32.6545822Z 
2025-02-24T15:52:32.6546101Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930290>
2025-02-24T15:52:32.6546423Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f885a8fda60>
2025-02-24T15:52:32.6546532Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6546637Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6546745Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6546859Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6547070Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6547328Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-24T15:52:32.6547332Z 
2025-02-24T15:52:32.6547422Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6547599Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6547672Z     ):
2025-02-24T15:52:32.6547779Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6547893Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6548077Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6548168Z     
2025-02-24T15:52:32.6548310Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6548417Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6548562Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6548680Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6548754Z             )
2025-02-24T15:52:32.6548832Z     
2025-02-24T15:52:32.6548937Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6549053Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6549142Z             if data.stackgroup:
2025-02-24T15:52:32.6549228Z                 assert (
2025-02-24T15:52:32.6549321Z                     data.stackgroup
2025-02-24T15:52:32.6549401Z                     == getattr(
2025-02-24T15:52:32.6549602Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6549706Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6549793Z                     ).decode()
2025-02-24T15:52:32.6549946Z                 )
2025-02-24T15:52:32.6550032Z             if data.name:
2025-02-24T15:52:32.6550109Z                 assert (
2025-02-24T15:52:32.6550195Z                     data.name
2025-02-24T15:52:32.6550273Z                     == getattr(
2025-02-24T15:52:32.6550391Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6550484Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6550569Z                     ).decode()
2025-02-24T15:52:32.6550650Z                 )
2025-02-24T15:52:32.6550748Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6550882Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6551055Z             )
2025-02-24T15:52:32.6551162Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6551285Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6551366Z             )
2025-02-24T15:52:32.6551370Z 
2025-02-24T15:52:32.6551522Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6551641Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6551645Z 
2025-02-24T15:52:32.6552128Z args = (<function assert_allclose.<locals>.compare at 0x7f88708df7e0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:52:32.6552233Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6552488Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6552492Z 
2025-02-24T15:52:32.6552570Z     @wraps(func)
2025-02-24T15:52:32.6552662Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6552757Z         with self._recreate_cm():
2025-02-24T15:52:32.6552855Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6552942Z E           AssertionError: 
2025-02-24T15:52:32.6553060Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6553138Z E           
2025-02-24T15:52:32.6553247Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6553356Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.6553456Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6553615Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6553705Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6553859Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6553944Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6553948Z 
2025-02-24T15:52:32.6554165Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6554370Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-24T15:52:32.6554381Z 
2025-02-24T15:52:32.6554647Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930380>
2025-02-24T15:52:32.6554977Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8862727bf0>
2025-02-24T15:52:32.6555076Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6555175Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6555281Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6555393Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6555601Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6555856Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-24T15:52:32.6555861Z 
2025-02-24T15:52:32.6556075Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6556252Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6556331Z     ):
2025-02-24T15:52:32.6556428Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6556647Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6556824Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6556901Z     
2025-02-24T15:52:32.6557014Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6557117Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6557261Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6557376Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6557458Z             )
2025-02-24T15:52:32.6557529Z     
2025-02-24T15:52:32.6557638Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6557752Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6557848Z             if data.stackgroup:
2025-02-24T15:52:32.6557927Z                 assert (
2025-02-24T15:52:32.6558023Z                     data.stackgroup
2025-02-24T15:52:32.6558113Z                     == getattr(
2025-02-24T15:52:32.6558228Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6558327Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6558414Z                     ).decode()
2025-02-24T15:52:32.6558489Z                 )
2025-02-24T15:52:32.6558579Z             if data.name:
2025-02-24T15:52:32.6558663Z                 assert (
2025-02-24T15:52:32.6558745Z                     data.name
2025-02-24T15:52:32.6558830Z                     == getattr(
2025-02-24T15:52:32.6558937Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6559039Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6559118Z                     ).decode()
2025-02-24T15:52:32.6559204Z                 )
2025-02-24T15:52:32.6559297Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6559435Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6559512Z             )
2025-02-24T15:52:32.6559612Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6559749Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6559834Z             )
2025-02-24T15:52:32.6559838Z 
2025-02-24T15:52:32.6559990Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6560105Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6560109Z 
2025-02-24T15:52:32.6560584Z args = (<function assert_allclose.<locals>.compare at 0x7f88708dcc20>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:52:32.6560687Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6561044Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6561049Z 
2025-02-24T15:52:32.6561134Z     @wraps(func)
2025-02-24T15:52:32.6561225Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6561320Z         with self._recreate_cm():
2025-02-24T15:52:32.6561414Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6561510Z E           AssertionError: 
2025-02-24T15:52:32.6561620Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6561700Z E           
2025-02-24T15:52:32.6561799Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6561941Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.6562039Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6562200Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6562292Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6562563Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6562658Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6562662Z 
2025-02-24T15:52:32.6562989Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6563201Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-24T15:52:32.6563206Z 
2025-02-24T15:52:32.6563473Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930440>
2025-02-24T15:52:32.6563793Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f886272f050>
2025-02-24T15:52:32.6563893Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6563986Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6564096Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6564206Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6564420Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6564669Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-24T15:52:32.6564679Z 
2025-02-24T15:52:32.6564775Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6564949Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6565027Z     ):
2025-02-24T15:52:32.6565127Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6565241Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6565420Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6565493Z     
2025-02-24T15:52:32.6565611Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6565709Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6565857Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6565971Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6566053Z             )
2025-02-24T15:52:32.6566124Z     
2025-02-24T15:52:32.6566232Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6566345Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6566439Z             if data.stackgroup:
2025-02-24T15:52:32.6566524Z                 assert (
2025-02-24T15:52:32.6566613Z                     data.stackgroup
2025-02-24T15:52:32.6566700Z                     == getattr(
2025-02-24T15:52:32.6566809Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6566914Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6566994Z                     ).decode()
2025-02-24T15:52:32.6567074Z                 )
2025-02-24T15:52:32.6567155Z             if data.name:
2025-02-24T15:52:32.6567238Z                 assert (
2025-02-24T15:52:32.6567319Z                     data.name
2025-02-24T15:52:32.6567411Z                     == getattr(
2025-02-24T15:52:32.6567517Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6567620Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6567711Z                     ).decode()
2025-02-24T15:52:32.6567787Z                 )
2025-02-24T15:52:32.6567890Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6568018Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6568098Z             )
2025-02-24T15:52:32.6568192Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6568321Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6568396Z             )
2025-02-24T15:52:32.6568400Z 
2025-02-24T15:52:32.6568554Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6568671Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6568675Z 
2025-02-24T15:52:32.6569241Z args = (<function assert_allclose.<locals>.compare at 0x7f88708df2e0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:52:32.6569426Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6569674Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6569678Z 
2025-02-24T15:52:32.6569763Z     @wraps(func)
2025-02-24T15:52:32.6569851Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6569948Z         with self._recreate_cm():
2025-02-24T15:52:32.6570039Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6570131Z E           AssertionError: 
2025-02-24T15:52:32.6570242Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6570321Z E           
2025-02-24T15:52:32.6570428Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6570531Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.6570637Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6570789Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6570887Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6571139Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6571231Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6571235Z 
2025-02-24T15:52:32.6571438Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6571651Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-24T15:52:32.6571655Z 
2025-02-24T15:52:32.6571928Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930500>
2025-02-24T15:52:32.6572244Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f88627240e0>
2025-02-24T15:52:32.6572353Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6572444Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6572551Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6572659Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6572873Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6573130Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-24T15:52:32.6573135Z 
2025-02-24T15:52:32.6573224Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6573404Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6573477Z     ):
2025-02-24T15:52:32.6573581Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6573693Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6573872Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6573947Z     
2025-02-24T15:52:32.6574064Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6574165Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6574312Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6574430Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6574504Z             )
2025-02-24T15:52:32.6574582Z     
2025-02-24T15:52:32.6574683Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6574795Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6574883Z             if data.stackgroup:
2025-02-24T15:52:32.6574967Z                 assert (
2025-02-24T15:52:32.6575055Z                     data.stackgroup
2025-02-24T15:52:32.6575139Z                     == getattr(
2025-02-24T15:52:32.6575248Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6575353Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6575551Z                     ).decode()
2025-02-24T15:52:32.6575635Z                 )
2025-02-24T15:52:32.6575722Z             if data.name:
2025-02-24T15:52:32.6575801Z                 assert (
2025-02-24T15:52:32.6575988Z                     data.name
2025-02-24T15:52:32.6576069Z                     == getattr(
2025-02-24T15:52:32.6576180Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6576274Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6576360Z                     ).decode()
2025-02-24T15:52:32.6576434Z                 )
2025-02-24T15:52:32.6576534Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6576662Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6576741Z             )
2025-02-24T15:52:32.6576835Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6576967Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6577047Z             )
2025-02-24T15:52:32.6577056Z 
2025-02-24T15:52:32.6577206Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6577327Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6577339Z 
2025-02-24T15:52:32.6577813Z args = (<function assert_allclose.<locals>.compare at 0x7f88708beac0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38,...), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:52:32.6577924Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6578170Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6578181Z 
2025-02-24T15:52:32.6578264Z     @wraps(func)
2025-02-24T15:52:32.6578357Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6578447Z         with self._recreate_cm():
2025-02-24T15:52:32.6578542Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6578628Z E           AssertionError: 
2025-02-24T15:52:32.6578748Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6578824Z E           
2025-02-24T15:52:32.6578929Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.6579039Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.6579143Z E           Max relative difference: 3.01858991
2025-02-24T15:52:32.6579293Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6579385Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6579537Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6579623Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6579627Z 
2025-02-24T15:52:32.6579836Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6580040Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-24T15:52:32.6580044Z 
2025-02-24T15:52:32.6580319Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b9305c0>
2025-02-24T15:52:32.6580632Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f887d02c830>
2025-02-24T15:52:32.6580740Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6580835Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6581043Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6581149Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6581352Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6581604Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-24T15:52:32.6581609Z 
2025-02-24T15:52:32.6581697Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6581873Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6582062Z     ):
2025-02-24T15:52:32.6582169Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6582285Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6582461Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6582639Z     
2025-02-24T15:52:32.6582753Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6582854Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6582999Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6583112Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6583185Z             )
2025-02-24T15:52:32.6583264Z     
2025-02-24T15:52:32.6583368Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6583480Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6583572Z             if data.stackgroup:
2025-02-24T15:52:32.6583650Z                 assert (
2025-02-24T15:52:32.6583748Z                     data.stackgroup
2025-02-24T15:52:32.6583825Z                     == getattr(
2025-02-24T15:52:32.6583938Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6584040Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6584123Z                     ).decode()
2025-02-24T15:52:32.6584196Z                 )
2025-02-24T15:52:32.6584282Z             if data.name:
2025-02-24T15:52:32.6584359Z                 assert (
2025-02-24T15:52:32.6584442Z                     data.name
2025-02-24T15:52:32.6584519Z                     == getattr(
2025-02-24T15:52:32.6584631Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6584729Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6584809Z                     ).decode()
2025-02-24T15:52:32.6584887Z                 )
2025-02-24T15:52:32.6584981Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6585118Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6585191Z             )
2025-02-24T15:52:32.6585303Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6585430Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6585513Z             )
2025-02-24T15:52:32.6585517Z 
2025-02-24T15:52:32.6585663Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6585784Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6585788Z 
2025-02-24T15:52:32.6586259Z args = (<function assert_allclose.<locals>.compare at 0x7f8870887420>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:52:32.6586362Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6586612Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6586617Z 
2025-02-24T15:52:32.6586697Z     @wraps(func)
2025-02-24T15:52:32.6586789Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6586883Z         with self._recreate_cm():
2025-02-24T15:52:32.6586980Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6587070Z E           AssertionError: 
2025-02-24T15:52:32.6587188Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6587268Z E           
2025-02-24T15:52:32.6587372Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6587479Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.6587578Z E           Max relative difference: 15766.15804934
2025-02-24T15:52:32.6587734Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6587822Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6587974Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6588147Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6588153Z 
2025-02-24T15:52:32.6588398Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6588614Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-24T15:52:32.6588709Z 
2025-02-24T15:52:32.6588977Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930680>
2025-02-24T15:52:32.6589298Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f8885091b20>
2025-02-24T15:52:32.6589398Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6589496Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6589599Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6589705Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6589910Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6590164Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-24T15:52:32.6590169Z 
2025-02-24T15:52:32.6590262Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6590434Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6590519Z     ):
2025-02-24T15:52:32.6590615Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6590729Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6590902Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6591085Z     
2025-02-24T15:52:32.6591195Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6591298Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6591449Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6591558Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6591637Z             )
2025-02-24T15:52:32.6591708Z     
2025-02-24T15:52:32.6591818Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6591925Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6592017Z             if data.stackgroup:
2025-02-24T15:52:32.6592101Z                 assert (
2025-02-24T15:52:32.6592193Z                     data.stackgroup
2025-02-24T15:52:32.6592271Z                     == getattr(
2025-02-24T15:52:32.6592384Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6592481Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6592568Z                     ).decode()
2025-02-24T15:52:32.6592650Z                 )
2025-02-24T15:52:32.6592731Z             if data.name:
2025-02-24T15:52:32.6592812Z                 assert (
2025-02-24T15:52:32.6592891Z                     data.name
2025-02-24T15:52:32.6592973Z                     == getattr(
2025-02-24T15:52:32.6593077Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6593178Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6593258Z                     ).decode()
2025-02-24T15:52:32.6593337Z                 )
2025-02-24T15:52:32.6593431Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6593567Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6593640Z             )
2025-02-24T15:52:32.6593739Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6593870Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6593943Z             )
2025-02-24T15:52:32.6593947Z 
2025-02-24T15:52:32.6594099Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6594214Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6594218Z 
2025-02-24T15:52:32.6594814Z args = (<function assert_allclose.<locals>.compare at 0x7f88708de3e0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:52:32.6594924Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6595178Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6595284Z 
2025-02-24T15:52:32.6595369Z     @wraps(func)
2025-02-24T15:52:32.6595455Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6595550Z         with self._recreate_cm():
2025-02-24T15:52:32.6595645Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6595737Z E           AssertionError: 
2025-02-24T15:52:32.6595845Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6595924Z E           
2025-02-24T15:52:32.6596027Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6596135Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.6596234Z E           Max relative difference: 15766.15804934
2025-02-24T15:52:32.6596398Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6596495Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6596642Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6596742Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6596746Z 
2025-02-24T15:52:32.6596948Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6597162Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-24T15:52:32.6597165Z 
2025-02-24T15:52:32.6597430Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930740>
2025-02-24T15:52:32.6597751Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f88638ed430>
2025-02-24T15:52:32.6597855Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6597944Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6598058Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6598158Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6598367Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6598624Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-24T15:52:32.6598629Z 
2025-02-24T15:52:32.6598723Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6598893Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6598973Z     ):
2025-02-24T15:52:32.6599076Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6599184Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6599366Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6599438Z     
2025-02-24T15:52:32.6599553Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6599654Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6599805Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6599914Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6599996Z             )
2025-02-24T15:52:32.6600068Z     
2025-02-24T15:52:32.6600173Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6600289Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6600376Z             if data.stackgroup:
2025-02-24T15:52:32.6600460Z                 assert (
2025-02-24T15:52:32.6600547Z                     data.stackgroup
2025-02-24T15:52:32.6600631Z                     == getattr(
2025-02-24T15:52:32.6600737Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6600843Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6601024Z                     ).decode()
2025-02-24T15:52:32.6601104Z                 )
2025-02-24T15:52:32.6601183Z             if data.name:
2025-02-24T15:52:32.6601380Z                 assert (
2025-02-24T15:52:32.6601462Z                     data.name
2025-02-24T15:52:32.6601547Z                     == getattr(
2025-02-24T15:52:32.6601663Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6601859Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6601942Z                     ).decode()
2025-02-24T15:52:32.6602016Z                 )
2025-02-24T15:52:32.6602115Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6602243Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6602320Z             )
2025-02-24T15:52:32.6602412Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6602541Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6602614Z             )
2025-02-24T15:52:32.6602618Z 
2025-02-24T15:52:32.6602773Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6602903Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6602907Z 
2025-02-24T15:52:32.6603379Z args = (<function assert_allclose.<locals>.compare at 0x7f885954b100>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:52:32.6603493Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6603738Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6603742Z 
2025-02-24T15:52:32.6603825Z     @wraps(func)
2025-02-24T15:52:32.6603912Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6604007Z         with self._recreate_cm():
2025-02-24T15:52:32.6604098Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6604189Z E           AssertionError: 
2025-02-24T15:52:32.6604305Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6604378Z E           
2025-02-24T15:52:32.6604490Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6604592Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.6604697Z E           Max relative difference: 15766.15804934
2025-02-24T15:52:32.6604855Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6604948Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6605096Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6605189Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6605193Z 
2025-02-24T15:52:32.6605404Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6605613Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-24T15:52:32.6605617Z 
2025-02-24T15:52:32.6605888Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7f888b930800>
2025-02-24T15:52:32.6606207Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x7f885eed6a50>
2025-02-24T15:52:32.6606312Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:52:32.6606404Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:52:32.6606519Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:52:32.6606621Z               '...g\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:52:32.6606834Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x7f88834deae0>)
2025-02-24T15:52:32.6607087Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-24T15:52:32.6607091Z 
2025-02-24T15:52:32.6607181Z     def test_generate_plot_mpl(
2025-02-24T15:52:32.6607355Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:52:32.6607431Z     ):
2025-02-24T15:52:32.6607534Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:52:32.6607746Z         regression_data = RegressionData(request)
2025-02-24T15:52:32.6607929Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:52:32.6608000Z     
2025-02-24T15:52:32.6608128Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:52:32.6608368Z             np.testing.assert_array_equal(
2025-02-24T15:52:32.6608512Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:52:32.6608626Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:52:32.6608699Z             )
2025-02-24T15:52:32.6608775Z     
2025-02-24T15:52:32.6608879Z         for index, data in enumerate(fig.data):
2025-02-24T15:52:32.6608991Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:52:32.6609080Z             if data.stackgroup:
2025-02-24T15:52:32.6609163Z                 assert (
2025-02-24T15:52:32.6609248Z                     data.stackgroup
2025-02-24T15:52:32.6609332Z                     == getattr(
2025-02-24T15:52:32.6609448Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6609551Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:52:32.6609636Z                     ).decode()
2025-02-24T15:52:32.6609710Z                 )
2025-02-24T15:52:32.6609802Z             if data.name:
2025-02-24T15:52:32.6609880Z                 assert (
2025-02-24T15:52:32.6609967Z                     data.name
2025-02-24T15:52:32.6610044Z                     == getattr(
2025-02-24T15:52:32.6610156Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:52:32.6610248Z                         "_" + str(index) + "name",
2025-02-24T15:52:32.6610334Z                     ).decode()
2025-02-24T15:52:32.6610406Z                 )
2025-02-24T15:52:32.6610507Z             np.testing.assert_allclose(
2025-02-24T15:52:32.6610636Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:52:32.6610718Z             )
2025-02-24T15:52:32.6610819Z >           np.testing.assert_allclose(
2025-02-24T15:52:32.6611048Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:52:32.6611131Z             )
2025-02-24T15:52:32.6611135Z 
2025-02-24T15:52:32.6611284Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:52:32.6611414Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:52:32.6611418Z 
2025-02-24T15:52:32.6611886Z args = (<function assert_allclose.<locals>.compare at 0x7f88708df060>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38,...), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:52:32.6611992Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:52:32.6612241Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:52:32.6612245Z 
2025-02-24T15:52:32.6612322Z     @wraps(func)
2025-02-24T15:52:32.6612413Z     def inner(*args, **kwds):
2025-02-24T15:52:32.6612502Z         with self._recreate_cm():
2025-02-24T15:52:32.6612601Z >           return func(*args, **kwds)
2025-02-24T15:52:32.6612689Z E           AssertionError: 
2025-02-24T15:52:32.6612806Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6612884Z E           
2025-02-24T15:52:32.6612991Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.6613092Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.6613196Z E           Max relative difference: 15766.15804934
2025-02-24T15:52:32.6613356Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6613444Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6613597Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.6613683Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.6613687Z 
2025-02-24T15:52:32.6613897Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:52:32.6614153Z =============================== warnings summary ===============================
2025-02-24T15:52:32.6614277Z tardis/io/configuration/config_validator.py:6
2025-02-24T15:52:32.6614388Z tardis/io/configuration/config_validator.py:6
2025-02-24T15:52:32.6614806Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-24T15:52:32.6614891Z   
2025-02-24T15:52:32.6616016Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-24T15:52:32.6616021Z 
2025-02-24T15:52:32.6616266Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-24T15:52:32.6616635Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-24T15:52:32.6616712Z   
2025-02-24T15:52:32.6616873Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-24T15:52:32.6617036Z   given by the platformdirs library.  To remove this warning and
2025-02-24T15:52:32.6617209Z   see the appropriate new directories, set the environment variable
2025-02-24T15:52:32.6617359Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-24T15:52:32.6617519Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-24T15:52:32.6617523Z 
2025-02-24T15:52:32.6621991Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-24T15:52:32.6622295Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:52:32.6622523Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-24T15:52:32.6622601Z   
2025-02-24T15:52:32.6622676Z   
2025-02-24T15:52:32.6622906Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T15:52:32.6623174Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T15:52:32.6623186Z 
2025-02-24T15:52:32.6623394Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-24T15:52:32.6623623Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-24T15:52:32.6623863Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-24T15:52:32.6624047Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-24T15:52:32.6624367Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-24T15:52:32.6624445Z   
2025-02-24T15:52:32.6624565Z   The current CMFGEN model parser is deprecated
2025-02-24T15:52:32.6624570Z 
2025-02-24T15:52:32.6624683Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-24T15:52:32.6624870Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-24T15:52:32.6625184Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-24T15:52:32.6625264Z   
2025-02-24T15:52:32.6625373Z   The current CMFGEN model parser is deprecated
2025-02-24T15:52:32.6625377Z 
2025-02-24T15:52:32.6625589Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-24T15:52:32.6625960Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-24T15:52:32.6626035Z   
2025-02-24T15:52:32.6626490Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-24T15:52:32.6626494Z 
2025-02-24T15:52:32.6626601Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T15:52:32.6626725Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T15:52:32.6627092Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T15:52:32.6627388Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-24T15:52:32.6627461Z   
2025-02-24T15:52:32.6627578Z   v_inner_boundary < 0, assuming default value
2025-02-24T15:52:32.6627688Z 
2025-02-24T15:52:32.6627802Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T15:52:32.6627921Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T15:52:32.6628101Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T15:52:32.6628368Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-24T15:52:32.6628443Z   
2025-02-24T15:52:32.6628547Z   v_outer_boundary < 0, assuming default value
2025-02-24T15:52:32.6628551Z 
2025-02-24T15:52:32.6629022Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-24T15:52:32.6629340Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-24T15:52:32.6629416Z   
2025-02-24T15:52:32.6629699Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-24T15:52:32.6630153Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-24T15:52:32.6630227Z   
2025-02-24T15:52:32.6630749Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-24T15:52:32.6630754Z 
2025-02-24T15:52:32.6631101Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-24T15:52:32.6631312Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-24T15:52:32.6631528Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-24T15:52:32.6631778Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-24T15:52:32.6631851Z   
2025-02-24T15:52:32.6632058Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-24T15:52:32.6632062Z 
2025-02-24T15:52:32.6632273Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T15:52:32.6632477Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-24T15:52:32.6632547Z   
2025-02-24T15:52:32.6632884Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-24T15:52:32.6632889Z 
2025-02-24T15:52:32.6633103Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T15:52:32.6633305Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-24T15:52:32.6633381Z   
2025-02-24T15:52:32.6633733Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-24T15:52:32.6633738Z 
2025-02-24T15:52:32.6633955Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-24T15:52:32.6634079Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-24T15:52:32.6634153Z   
2025-02-24T15:52:32.6635201Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-24T15:52:32.6635289Z   Exception origin:
2025-02-24T15:52:32.6635553Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-24T15:52:32.6635645Z       raise TypeError(msg) from None
2025-02-24T15:52:32.6635744Z   [0m[0m
2025-02-24T15:52:32.6635748Z 
2025-02-24T15:52:32.6636221Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-24T15:52:32.6636518Z   /home/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-24T15:52:32.6636695Z   
2025-02-24T15:52:32.6637578Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-24T15:52:32.6637583Z 
2025-02-24T15:52:32.6637945Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6638297Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6638651Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6638993Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6639339Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6639689Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6640041Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T15:52:32.6640117Z   
2025-02-24T15:52:32.6640310Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-24T15:52:32.6640502Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T15:52:32.6640740Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T15:52:32.6640744Z 
2025-02-24T15:52:32.6641215Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6641567Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6641919Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T15:52:32.6641994Z   
2025-02-24T15:52:32.6642176Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-24T15:52:32.6642352Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T15:52:32.6642593Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T15:52:32.6642597Z 
2025-02-24T15:52:32.6642955Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:52:32.6643309Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T15:52:32.6643379Z   
2025-02-24T15:52:32.6643565Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-24T15:52:32.6643739Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T15:52:32.6643974Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T15:52:32.6643978Z 
2025-02-24T15:52:32.6644404Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-24T15:52:32.6644734Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:814: DeprecationWarning:
2025-02-24T15:52:32.6644804Z   
2025-02-24T15:52:32.6645047Z   QgridWidget._df_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-24T15:52:32.6645051Z 
2025-02-24T15:52:32.6645434Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:52:32.6645651Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-24T15:52:32.6645728Z   
2025-02-24T15:52:32.6645901Z   
2025-02-24T15:52:32.6646111Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T15:52:32.6646372Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T15:52:32.6646377Z 
2025-02-24T15:52:32.6646641Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:52:32.6646854Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-24T15:52:32.6646925Z   
2025-02-24T15:52:32.6646998Z   
2025-02-24T15:52:32.6647197Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T15:52:32.6647378Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-24T15:52:32.6647388Z 
2025-02-24T15:52:32.6647639Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:52:32.6647887Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-24T15:52:32.6647963Z   
2025-02-24T15:52:32.6648158Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-24T15:52:32.6648162Z 
2025-02-24T15:52:32.6648360Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-24T15:52:32.6648364Z 
2025-02-24T15:52:32.6648530Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-02-24T15:52:32.6648659Z Coverage HTML written to dir coverage_html_report
2025-02-24T15:52:32.6648762Z Coverage XML written to file coverage.xml
2025-02-24T15:52:32.6648766Z 
2025-02-24T15:52:32.6648898Z =========================== short test summary info ============================
2025-02-24T15:52:32.6649314Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-24T15:52:32.6649323Z 
2025-02-24T15:52:32.6649454Z MultiIndex level [0] values are different (0.09581 %)
2025-02-24T15:52:32.6649578Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:52:32.6649651Z        ...
2025-02-24T15:52:32.6649743Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:52:32.6649870Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:52:32.6649991Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:52:32.6650062Z        ...
2025-02-24T15:52:32.6650151Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:52:32.6650268Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:52:32.6650378Z At positional index 54, first diff: 14 != 12
2025-02-24T15:52:32.6650657Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-24T15:52:32.6650768Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.6650772Z 
2025-02-24T15:52:32.6650876Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:52:32.6651103Z Max absolute difference: 0.99984222
2025-02-24T15:52:32.6651211Z Max relative difference: 6337.12154973
2025-02-24T15:52:32.6651297Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.6651385Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.6651465Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.6651554Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.6651632Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.6651716Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.6652327Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T15:52:32.6652962Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6652969Z 
2025-02-24T15:52:32.6653108Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6653322Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6653399Z        ...
2025-02-24T15:52:32.6653485Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6653619Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6653730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6653805Z        ...
2025-02-24T15:52:32.6653892Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6654015Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6654122Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6654647Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6654652Z 
2025-02-24T15:52:32.6654750Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6655118Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6655457Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6655799Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6656309Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6656314Z 
2025-02-24T15:52:32.6656408Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6656776Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6657145Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6657525Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6658085Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6658090Z 
2025-02-24T15:52:32.6658219Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6658408Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6658484Z        ...
2025-02-24T15:52:32.6658566Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6658694Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6658803Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6658878Z        ...
2025-02-24T15:52:32.6658960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6659085Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6659185Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6659717Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6659722Z 
2025-02-24T15:52:32.6659851Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6659956Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6660042Z        ...
2025-02-24T15:52:32.6660125Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6660251Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6660359Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6660438Z        ...
2025-02-24T15:52:32.6660519Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6660645Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6660745Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6661343Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6661348Z 
2025-02-24T15:52:32.6661483Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6661589Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6661665Z        ...
2025-02-24T15:52:32.6661753Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6661908Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6662016Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6662090Z        ...
2025-02-24T15:52:32.6662171Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6662297Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6662402Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6662916Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6662920Z 
2025-02-24T15:52:32.6663055Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6663162Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6663236Z        ...
2025-02-24T15:52:32.6663318Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6663449Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6663557Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6663635Z        ...
2025-02-24T15:52:32.6663717Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6663845Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6663949Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6664459Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6664463Z 
2025-02-24T15:52:32.6664592Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6664826Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6664907Z        ...
2025-02-24T15:52:32.6664989Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6665116Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6665336Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6665408Z        ...
2025-02-24T15:52:32.6665495Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6665618Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6665722Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6666216Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6666220Z 
2025-02-24T15:52:32.6666350Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6666456Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6666537Z        ...
2025-02-24T15:52:32.6666620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6666744Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6666866Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6666937Z        ...
2025-02-24T15:52:32.6667023Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6667144Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6667247Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6667719Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6667723Z 
2025-02-24T15:52:32.6667851Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6667958Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6668034Z        ...
2025-02-24T15:52:32.6668124Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6668244Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6668358Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6668434Z        ...
2025-02-24T15:52:32.6668521Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6668639Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6668741Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6669228Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6669232Z 
2025-02-24T15:52:32.6669332Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6669705Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6670034Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6670363Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6671062Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6671069Z 
2025-02-24T15:52:32.6671286Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6671659Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6672040Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6672412Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6672902Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6672906Z 
2025-02-24T15:52:32.6673036Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6673144Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6673220Z        ...
2025-02-24T15:52:32.6673307Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6673437Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6673548Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6673632Z        ...
2025-02-24T15:52:32.6673714Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6673842Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6673947Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6674449Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6674454Z 
2025-02-24T15:52:32.6674584Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6674689Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6674764Z        ...
2025-02-24T15:52:32.6674847Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6674977Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6675086Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6675161Z        ...
2025-02-24T15:52:32.6675257Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6675379Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6675485Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6675949Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6675953Z 
2025-02-24T15:52:32.6676088Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6676197Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6676273Z        ...
2025-02-24T15:52:32.6676356Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6676589Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6676707Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6676778Z        ...
2025-02-24T15:52:32.6676864Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6677084Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6677192Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6677694Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6677699Z 
2025-02-24T15:52:32.6677828Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6677933Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6678008Z        ...
2025-02-24T15:52:32.6678095Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6678217Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6678338Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6678409Z        ...
2025-02-24T15:52:32.6678495Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6678614Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6678723Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6679215Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6679219Z 
2025-02-24T15:52:32.6679346Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6679456Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6679526Z        ...
2025-02-24T15:52:32.6679614Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6679735Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6679852Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6679927Z        ...
2025-02-24T15:52:32.6680016Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6680135Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6680238Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6680717Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6680727Z 
2025-02-24T15:52:32.6680848Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6681065Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6681137Z        ...
2025-02-24T15:52:32.6681224Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6681343Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6681461Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6681531Z        ...
2025-02-24T15:52:32.6681622Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6681741Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6681844Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6682324Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6682333Z 
2025-02-24T15:52:32.6682456Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6682567Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6682636Z        ...
2025-02-24T15:52:32.6682723Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6682844Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6682958Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6683027Z        ...
2025-02-24T15:52:32.6683112Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6683349Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6683459Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6683947Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6684052Z 
2025-02-24T15:52:32.6684146Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6684514Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6684850Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6685181Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6685670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6685675Z 
2025-02-24T15:52:32.6685767Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6686136Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6686511Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6686886Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6687350Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6687358Z 
2025-02-24T15:52:32.6687488Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6687596Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6687672Z        ...
2025-02-24T15:52:32.6687754Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6687881Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6687996Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6688068Z        ...
2025-02-24T15:52:32.6688156Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6688355Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6688462Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6688967Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6689048Z 
2025-02-24T15:52:32.6689178Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6689285Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6689365Z        ...
2025-02-24T15:52:32.6689456Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6689581Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6689696Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6689766Z        ...
2025-02-24T15:52:32.6689854Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6689974Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6690083Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6690544Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6690553Z 
2025-02-24T15:52:32.6690682Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6690792Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6690865Z        ...
2025-02-24T15:52:32.6691064Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6691189Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6691305Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6691376Z        ...
2025-02-24T15:52:32.6691467Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6691588Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6691695Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6692196Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6692210Z 
2025-02-24T15:52:32.6692335Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6692446Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6692518Z        ...
2025-02-24T15:52:32.6692604Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6692725Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6692840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6692911Z        ...
2025-02-24T15:52:32.6693000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6693119Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6693224Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6693729Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6693733Z 
2025-02-24T15:52:32.6693856Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6693977Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6694049Z        ...
2025-02-24T15:52:32.6694137Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6694260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6694373Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6694443Z        ...
2025-02-24T15:52:32.6694532Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6694651Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6694757Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6695359Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6695365Z 
2025-02-24T15:52:32.6695492Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6695605Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6695797Z        ...
2025-02-24T15:52:32.6695886Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6696006Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6696119Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6696190Z        ...
2025-02-24T15:52:32.6696279Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6696404Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6696502Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6697017Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6697022Z 
2025-02-24T15:52:32.6697146Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6697258Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6697336Z        ...
2025-02-24T15:52:32.6697425Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6697547Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6697663Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6697739Z        ...
2025-02-24T15:52:32.6697822Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6697948Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6698047Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6698570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6698575Z 
2025-02-24T15:52:32.6698674Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6699045Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6699384Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6699712Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6700250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6700255Z 
2025-02-24T15:52:32.6700355Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6700717Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6701312Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6701790Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6702288Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6702292Z 
2025-02-24T15:52:32.6702423Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6702535Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6702612Z        ...
2025-02-24T15:52:32.6702702Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6702825Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6702941Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6703012Z        ...
2025-02-24T15:52:32.6703106Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6703226Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6703333Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6703859Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6703869Z 
2025-02-24T15:52:32.6703997Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6704110Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6704181Z        ...
2025-02-24T15:52:32.6704274Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6704397Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6704514Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6704586Z        ...
2025-02-24T15:52:32.6704798Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6711382Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6711525Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6712072Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6712078Z 
2025-02-24T15:52:32.6712223Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6712338Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6712414Z        ...
2025-02-24T15:52:32.6712504Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6712643Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6712758Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6712831Z        ...
2025-02-24T15:52:32.6712917Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6713046Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6713154Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6713693Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6713698Z 
2025-02-24T15:52:32.6713827Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6714098Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6714177Z        ...
2025-02-24T15:52:32.6714262Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6714387Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6714628Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6714702Z        ...
2025-02-24T15:52:32.6714788Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6714916Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6715021Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6715543Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6715548Z 
2025-02-24T15:52:32.6715679Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6715795Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6715867Z        ...
2025-02-24T15:52:32.6715950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6716077Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6716195Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6716270Z        ...
2025-02-24T15:52:32.6716359Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6716482Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6716589Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6717096Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6717101Z 
2025-02-24T15:52:32.6717233Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6717344Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6717422Z        ...
2025-02-24T15:52:32.6717511Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6717641Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6717756Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6717837Z        ...
2025-02-24T15:52:32.6717926Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6718047Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6718152Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6718724Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6718728Z 
2025-02-24T15:52:32.6718858Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6718968Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6719045Z        ...
2025-02-24T15:52:32.6719142Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6719266Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6719384Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6719461Z        ...
2025-02-24T15:52:32.6719550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6719672Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6719780Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6720370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6720375Z 
2025-02-24T15:52:32.6720476Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6721069Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6721508Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6721842Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6722441Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6722450Z 
2025-02-24T15:52:32.6722544Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6722918Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6723294Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6723666Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6724227Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6724231Z 
2025-02-24T15:52:32.6724362Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6724472Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6724553Z        ...
2025-02-24T15:52:32.6724640Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6724768Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6724883Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6724960Z        ...
2025-02-24T15:52:32.6725046Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6725174Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6725285Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6725879Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6725884Z 
2025-02-24T15:52:32.6726014Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6726122Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6726300Z        ...
2025-02-24T15:52:32.6726387Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6726516Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6726634Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6726786Z        ...
2025-02-24T15:52:32.6726876Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6726997Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6727103Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6727669Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6727674Z 
2025-02-24T15:52:32.6727817Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6727939Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6728018Z        ...
2025-02-24T15:52:32.6728115Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6728254Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6728378Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6728458Z        ...
2025-02-24T15:52:32.6728555Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6728678Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6728785Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6729375Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6729379Z 
2025-02-24T15:52:32.6729512Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6729621Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6729699Z        ...
2025-02-24T15:52:32.6729792Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6729915Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6730031Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6730109Z        ...
2025-02-24T15:52:32.6730198Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6730319Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6730426Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6731120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6731130Z 
2025-02-24T15:52:32.6731256Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6731371Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6731443Z        ...
2025-02-24T15:52:32.6731531Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6731660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6731777Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6731848Z        ...
2025-02-24T15:52:32.6731942Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6732064Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6732170Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6732748Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6732753Z 
2025-02-24T15:52:32.6732879Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6732993Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6733065Z        ...
2025-02-24T15:52:32.6733155Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6733398Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6733521Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6733594Z        ...
2025-02-24T15:52:32.6733683Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6733907Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6734014Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6734547Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6734551Z 
2025-02-24T15:52:32.6734678Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6734790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6734863Z        ...
2025-02-24T15:52:32.6734952Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6735080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6735194Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6735265Z        ...
2025-02-24T15:52:32.6735354Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6735488Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6735588Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6736130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6736135Z 
2025-02-24T15:52:32.6736231Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6736608Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6736944Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6737281Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6737830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6737835Z 
2025-02-24T15:52:32.6737935Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6738297Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6738763Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6739146Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6739763Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6739767Z 
2025-02-24T15:52:32.6739898Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6740014Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6740087Z        ...
2025-02-24T15:52:32.6740178Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6740308Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6740427Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6740500Z        ...
2025-02-24T15:52:32.6740591Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6740721Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6740829Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6741492Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6741502Z 
2025-02-24T15:52:32.6741626Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6741741Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6741815Z        ...
2025-02-24T15:52:32.6741905Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6742029Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6742150Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6742222Z        ...
2025-02-24T15:52:32.6742312Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6742441Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6742546Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6743065Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6743075Z 
2025-02-24T15:52:32.6743202Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6743320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6743393Z        ...
2025-02-24T15:52:32.6743484Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6743616Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6743735Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6743807Z        ...
2025-02-24T15:52:32.6743897Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6744021Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6744132Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6744681Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6744685Z 
2025-02-24T15:52:32.6744808Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6744922Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6744995Z        ...
2025-02-24T15:52:32.6745084Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6745205Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6745320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6745512Z        ...
2025-02-24T15:52:32.6745607Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6745736Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6745959Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6746507Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6746511Z 
2025-02-24T15:52:32.6746636Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6746748Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6746821Z        ...
2025-02-24T15:52:32.6746909Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6747032Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6747150Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6747227Z        ...
2025-02-24T15:52:32.6747317Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6747445Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6747545Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6748079Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6748083Z 
2025-02-24T15:52:32.6748206Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6748320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6748394Z        ...
2025-02-24T15:52:32.6748482Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6748609Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6748721Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6748800Z        ...
2025-02-24T15:52:32.6748889Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6749017Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6749117Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6749650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6749660Z 
2025-02-24T15:52:32.6749784Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6749897Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6749973Z        ...
2025-02-24T15:52:32.6750057Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6750183Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6750295Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6750372Z        ...
2025-02-24T15:52:32.6750457Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6750587Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6750687Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6751345Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6751354Z 
2025-02-24T15:52:32.6751456Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6751821Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6752272Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6752704Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6753242Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6753246Z 
2025-02-24T15:52:32.6753341Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6753708Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6754085Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6754466Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6754996Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6755001Z 
2025-02-24T15:52:32.6755128Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6755244Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6755317Z        ...
2025-02-24T15:52:32.6755409Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6755536Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6755658Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6755730Z        ...
2025-02-24T15:52:32.6755819Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6755951Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6756052Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6756615Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6756624Z 
2025-02-24T15:52:32.6756749Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6756865Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6756938Z        ...
2025-02-24T15:52:32.6757027Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6757147Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6757262Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6757340Z        ...
2025-02-24T15:52:32.6757423Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6757642Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6757743Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6758265Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6758342Z 
2025-02-24T15:52:32.6758469Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6758581Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6758653Z        ...
2025-02-24T15:52:32.6758742Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6758869Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6758980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6759057Z        ...
2025-02-24T15:52:32.6759141Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6759268Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6759374Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6759929Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6759939Z 
2025-02-24T15:52:32.6760064Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6760184Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6760265Z        ...
2025-02-24T15:52:32.6760358Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6760490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6760629Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6760701Z        ...
2025-02-24T15:52:32.6760789Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6761021Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6761133Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6761686Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6761696Z 
2025-02-24T15:52:32.6761820Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6761964Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6762052Z        ...
2025-02-24T15:52:32.6762141Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6762262Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6762377Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6762448Z        ...
2025-02-24T15:52:32.6762537Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6762663Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6762763Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6763301Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6763310Z 
2025-02-24T15:52:32.6763433Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6763544Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6763617Z        ...
2025-02-24T15:52:32.6763704Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6763826Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6763941Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6764017Z        ...
2025-02-24T15:52:32.6764100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6764225Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6764324Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6765017Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6765022Z 
2025-02-24T15:52:32.6765150Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6765360Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6765432Z        ...
2025-02-24T15:52:32.6765522Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6765648Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6765757Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6765831Z        ...
2025-02-24T15:52:32.6765916Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6766040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6766140Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6766714Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6766719Z 
2025-02-24T15:52:32.6766815Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6767189Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6767529Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6767858Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6768447Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6768451Z 
2025-02-24T15:52:32.6768556Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6768921Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6769292Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6769672Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6770289Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6770371Z 
2025-02-24T15:52:32.6770498Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6770612Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6770685Z        ...
2025-02-24T15:52:32.6770778Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6770901Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6771150Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6771221Z        ...
2025-02-24T15:52:32.6771310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6771432Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6771537Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6772127Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6772132Z 
2025-02-24T15:52:32.6772263Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6772374Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6772446Z        ...
2025-02-24T15:52:32.6772533Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6772654Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6772769Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6772841Z        ...
2025-02-24T15:52:32.6772929Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6773055Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6773156Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6773707Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6773712Z 
2025-02-24T15:52:32.6773836Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6773955Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6774027Z        ...
2025-02-24T15:52:32.6774115Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6774237Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6774353Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6774431Z        ...
2025-02-24T15:52:32.6774515Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6774639Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6774737Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6775316Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6775321Z 
2025-02-24T15:52:32.6775443Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6775558Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6775659Z        ...
2025-02-24T15:52:32.6775814Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6776023Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6776208Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6776286Z        ...
2025-02-24T15:52:32.6776370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6776498Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6776602Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6777318Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6777323Z 
2025-02-24T15:52:32.6777452Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6777566Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6777749Z        ...
2025-02-24T15:52:32.6777834Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6777959Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6778068Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6778145Z        ...
2025-02-24T15:52:32.6778228Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6778352Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6778450Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6779019Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6779024Z 
2025-02-24T15:52:32.6779152Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6779257Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6779338Z        ...
2025-02-24T15:52:32.6779420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6779546Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6779654Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6779729Z        ...
2025-02-24T15:52:32.6779811Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6779935Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6780033Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6780556Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6780565Z 
2025-02-24T15:52:32.6780694Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6780799Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6780876Z        ...
2025-02-24T15:52:32.6781080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6781209Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6781318Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6781393Z        ...
2025-02-24T15:52:32.6781476Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6781602Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6781700Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6782245Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6782250Z 
2025-02-24T15:52:32.6782352Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6782715Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6783049Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6783499Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6784130Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6784134Z 
2025-02-24T15:52:32.6784233Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6784603Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6784975Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6785357Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6785869Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6785874Z 
2025-02-24T15:52:32.6785999Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6786111Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6786188Z        ...
2025-02-24T15:52:32.6786278Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6786404Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6786516Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6786591Z        ...
2025-02-24T15:52:32.6786678Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6786802Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6786901Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6787467Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6787472Z 
2025-02-24T15:52:32.6787599Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6787711Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6787786Z        ...
2025-02-24T15:52:32.6787873Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6787996Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6788105Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6788184Z        ...
2025-02-24T15:52:32.6788266Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6788392Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6788491Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6789011Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6789015Z 
2025-02-24T15:52:32.6789246Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6789357Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6789433Z        ...
2025-02-24T15:52:32.6789517Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6789717Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6789826Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6789903Z        ...
2025-02-24T15:52:32.6789985Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6790110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6790208Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6790751Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6790756Z 
2025-02-24T15:52:32.6790884Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6791117Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6791194Z        ...
2025-02-24T15:52:32.6791278Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6791407Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6791525Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6791604Z        ...
2025-02-24T15:52:32.6791687Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6791813Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6791911Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6792452Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6792456Z 
2025-02-24T15:52:32.6792584Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6792700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6792792Z        ...
2025-02-24T15:52:32.6792885Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6793012Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6793126Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6793203Z        ...
2025-02-24T15:52:32.6793285Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6793410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6793512Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6794048Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6794052Z 
2025-02-24T15:52:32.6794181Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6794287Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6794367Z        ...
2025-02-24T15:52:32.6794451Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6794578Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6794686Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6794766Z        ...
2025-02-24T15:52:32.6794853Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6794973Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6795075Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6795623Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6795627Z 
2025-02-24T15:52:32.6795726Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6796209Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6796644Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6796983Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6797533Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6797542Z 
2025-02-24T15:52:32.6797637Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6798003Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6798381Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6798757Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6799277Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6799282Z 
2025-02-24T15:52:32.6799413Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6799527Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6799606Z        ...
2025-02-24T15:52:32.6799690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6799818Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6799931Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6800007Z        ...
2025-02-24T15:52:32.6800090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6800214Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6800313Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6800873Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6800877Z 
2025-02-24T15:52:32.6801110Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6801219Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6801408Z        ...
2025-02-24T15:52:32.6801495Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6801621Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6801727Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6801907Z        ...
2025-02-24T15:52:32.6801991Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6802118Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6802218Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6802753Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6802757Z 
2025-02-24T15:52:32.6802888Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6802995Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6803069Z        ...
2025-02-24T15:52:32.6803159Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6803286Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6803397Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6803480Z        ...
2025-02-24T15:52:32.6803565Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6803688Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6803790Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6804337Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6804341Z 
2025-02-24T15:52:32.6804468Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6804574Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6804646Z        ...
2025-02-24T15:52:32.6804731Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6804861Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6804974Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6805049Z        ...
2025-02-24T15:52:32.6805141Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6805261Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6805364Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6805912Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6805917Z 
2025-02-24T15:52:32.6806044Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6806152Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6806228Z        ...
2025-02-24T15:52:32.6806314Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6806445Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6806560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6806631Z        ...
2025-02-24T15:52:32.6806717Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6806841Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6806946Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6807475Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6807479Z 
2025-02-24T15:52:32.6807608Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6807715Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6807791Z        ...
2025-02-24T15:52:32.6807878Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6808000Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6808218Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6808293Z        ...
2025-02-24T15:52:32.6808379Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6808592Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6808698Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6809236Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6809241Z 
2025-02-24T15:52:32.6809367Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6809478Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6809550Z        ...
2025-02-24T15:52:32.6809636Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6809757Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6809875Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6809946Z        ...
2025-02-24T15:52:32.6810034Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6810154Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6810263Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6810816Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6810825Z 
2025-02-24T15:52:32.6811016Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6811397Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6811725Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6812060Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6812611Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6812615Z 
2025-02-24T15:52:32.6812707Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6813075Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6813452Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6813936Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6814556Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6814561Z 
2025-02-24T15:52:32.6814688Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6814797Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6814873Z        ...
2025-02-24T15:52:32.6814958Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6815085Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6815198Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6815275Z        ...
2025-02-24T15:52:32.6815364Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6815490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6815593Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6816150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6816154Z 
2025-02-24T15:52:32.6816283Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6816391Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6816466Z        ...
2025-02-24T15:52:32.6816553Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6816683Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6816809Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6816881Z        ...
2025-02-24T15:52:32.6816972Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6817096Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6817212Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6817746Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6817750Z 
2025-02-24T15:52:32.6817884Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6818001Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6818079Z        ...
2025-02-24T15:52:32.6818170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6818294Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6818412Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6818488Z        ...
2025-02-24T15:52:32.6818579Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6818702Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6818813Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6819376Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6819380Z 
2025-02-24T15:52:32.6819512Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6819626Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6819702Z        ...
2025-02-24T15:52:32.6819790Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6819911Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6820026Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6820101Z        ...
2025-02-24T15:52:32.6820275Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6820400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6820505Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6821239Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6821250Z 
2025-02-24T15:52:32.6821375Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6821487Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6821559Z        ...
2025-02-24T15:52:32.6821647Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6821767Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6821883Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6821956Z        ...
2025-02-24T15:52:32.6822050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6822171Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6822279Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6822828Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6822833Z 
2025-02-24T15:52:32.6822958Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6823070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6823144Z        ...
2025-02-24T15:52:32.6823232Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6823353Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6823469Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6823544Z        ...
2025-02-24T15:52:32.6823633Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6823765Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6823866Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6824415Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6824424Z 
2025-02-24T15:52:32.6824548Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6824662Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6824734Z        ...
2025-02-24T15:52:32.6824822Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6824946Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6825062Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6825140Z        ...
2025-02-24T15:52:32.6825224Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6825357Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6825458Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6826021Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6826033Z 
2025-02-24T15:52:32.6826131Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6826512Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6826964Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6827399Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6827950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6827954Z 
2025-02-24T15:52:32.6828054Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6828423Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6828799Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6829181Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6829705Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6829709Z 
2025-02-24T15:52:32.6829839Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6829954Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6830026Z        ...
2025-02-24T15:52:32.6830116Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6830240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6830356Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6830427Z        ...
2025-02-24T15:52:32.6830515Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6830642Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6830749Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6831414Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6831429Z 
2025-02-24T15:52:32.6831555Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6831668Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6831740Z        ...
2025-02-24T15:52:32.6831829Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6831952Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6832067Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6832140Z        ...
2025-02-24T15:52:32.6832228Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6832469Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6832579Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6833111Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6833233Z 
2025-02-24T15:52:32.6833362Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6833474Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6833547Z        ...
2025-02-24T15:52:32.6833635Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6833756Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6833872Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6833944Z        ...
2025-02-24T15:52:32.6834034Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6834161Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6834266Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6834825Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6834836Z 
2025-02-24T15:52:32.6834960Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6835074Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6835146Z        ...
2025-02-24T15:52:32.6835236Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6835359Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6835474Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6835550Z        ...
2025-02-24T15:52:32.6835633Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6835758Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6835862Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6836421Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6836431Z 
2025-02-24T15:52:32.6836555Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6836666Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6836738Z        ...
2025-02-24T15:52:32.6836831Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6836958Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6837071Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6837148Z        ...
2025-02-24T15:52:32.6837232Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6837356Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6837455Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6838002Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6838007Z 
2025-02-24T15:52:32.6838136Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6838249Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6838328Z        ...
2025-02-24T15:52:32.6838412Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6838537Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6838647Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6838724Z        ...
2025-02-24T15:52:32.6838808Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6838933Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6839032Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6839659Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6839665Z 
2025-02-24T15:52:32.6839796Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6839977Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6840055Z        ...
2025-02-24T15:52:32.6840139Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6840265Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6840374Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6840451Z        ...
2025-02-24T15:52:32.6840533Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6840659Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6840759Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6841427Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6841432Z 
2025-02-24T15:52:32.6841533Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6841906Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6842240Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6842575Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6843131Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6843135Z 
2025-02-24T15:52:32.6843234Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6843608Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6843977Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6844361Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6845012Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6845017Z 
2025-02-24T15:52:32.6845242Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6845357Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6845429Z        ...
2025-02-24T15:52:32.6845519Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6845642Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6845759Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6845838Z        ...
2025-02-24T15:52:32.6845921Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6846048Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6846151Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6846723Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6846727Z 
2025-02-24T15:52:32.6846854Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6846973Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6847046Z        ...
2025-02-24T15:52:32.6847135Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6847264Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6847377Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6847455Z        ...
2025-02-24T15:52:32.6847539Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6847665Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6847765Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6848297Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6848301Z 
2025-02-24T15:52:32.6848426Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6848544Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6848621Z        ...
2025-02-24T15:52:32.6848705Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6848832Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6848943Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6849019Z        ...
2025-02-24T15:52:32.6849102Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6849227Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6849328Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6849901Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6849906Z 
2025-02-24T15:52:32.6850035Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6850142Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6850223Z        ...
2025-02-24T15:52:32.6850305Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6850430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6850540Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6850617Z        ...
2025-02-24T15:52:32.6850700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6850824Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6851028Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6851719Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6851725Z 
2025-02-24T15:52:32.6851856Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6851965Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6852153Z        ...
2025-02-24T15:52:32.6852235Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6852362Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6852471Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6852550Z        ...
2025-02-24T15:52:32.6852634Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6852762Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6852862Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6853404Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6853414Z 
2025-02-24T15:52:32.6853542Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6853651Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6853729Z        ...
2025-02-24T15:52:32.6853818Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6853945Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6854055Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6854131Z        ...
2025-02-24T15:52:32.6854218Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6854343Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6854448Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6855028Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6855033Z 
2025-02-24T15:52:32.6855173Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6855282Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6855358Z        ...
2025-02-24T15:52:32.6855447Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6855575Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6855685Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6855763Z        ...
2025-02-24T15:52:32.6855851Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6855974Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6856078Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6856657Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6856662Z 
2025-02-24T15:52:32.6856765Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6857131Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6857467Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6857903Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6858567Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6858572Z 
2025-02-24T15:52:32.6858667Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6859034Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6859413Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6859790Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6860351Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6860356Z 
2025-02-24T15:52:32.6860488Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6860597Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6860679Z        ...
2025-02-24T15:52:32.6860764Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6860894Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6861105Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6861183Z        ...
2025-02-24T15:52:32.6861266Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6861393Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6861494Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6862132Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6862137Z 
2025-02-24T15:52:32.6862267Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6862373Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6862455Z        ...
2025-02-24T15:52:32.6862541Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6862668Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6862778Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6862855Z        ...
2025-02-24T15:52:32.6862938Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6863065Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6863171Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6863843Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6863849Z 
2025-02-24T15:52:32.6863982Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6864091Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6864269Z        ...
2025-02-24T15:52:32.6864352Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6864482Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6864592Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6864670Z        ...
2025-02-24T15:52:32.6864758Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6864880Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6864988Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6865702Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.6865706Z 
2025-02-24T15:52:32.6865884Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T15:52:32.6866256Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6870892Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T15:52:32.6875790Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T15:52:32.6876084Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T15:52:32.6876725Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6876729Z 
2025-02-24T15:52:32.6876857Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6876972Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6877045Z        ...
2025-02-24T15:52:32.6877141Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6877268Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6877385Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6877461Z        ...
2025-02-24T15:52:32.6877551Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6877673Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6877782Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6878385Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6878390Z 
2025-02-24T15:52:32.6878513Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6878627Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6878700Z        ...
2025-02-24T15:52:32.6878789Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6878912Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6879028Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6879109Z        ...
2025-02-24T15:52:32.6879194Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6879321Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6879423Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6880017Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6880021Z 
2025-02-24T15:52:32.6880146Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6880258Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6880331Z        ...
2025-02-24T15:52:32.6880420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6880548Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6880659Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6880737Z        ...
2025-02-24T15:52:32.6881002Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6881137Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6881238Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6881926Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6881931Z 
2025-02-24T15:52:32.6882056Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6882169Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6882249Z        ...
2025-02-24T15:52:32.6882333Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6882463Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6882574Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6882652Z        ...
2025-02-24T15:52:32.6882741Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6882867Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6882967Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6883535Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6883539Z 
2025-02-24T15:52:32.6883670Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6883779Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6883857Z        ...
2025-02-24T15:52:32.6883940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6884072Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6884183Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6884263Z        ...
2025-02-24T15:52:32.6884356Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6884485Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6884589Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6885161Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6885170Z 
2025-02-24T15:52:32.6885273Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6885640Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6885983Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6886325Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6886900Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6886904Z 
2025-02-24T15:52:32.6887137Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6887512Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6887960Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6888344Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6888899Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6888904Z 
2025-02-24T15:52:32.6889031Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6889149Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6889223Z        ...
2025-02-24T15:52:32.6889314Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6889439Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6889560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6889639Z        ...
2025-02-24T15:52:32.6889723Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6889852Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6889961Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6890545Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6890550Z 
2025-02-24T15:52:32.6890675Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6890791Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6890867Z        ...
2025-02-24T15:52:32.6891062Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6891197Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6891310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6891392Z        ...
2025-02-24T15:52:32.6891476Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6891603Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6891711Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6892258Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6892262Z 
2025-02-24T15:52:32.6892392Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6892499Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6892578Z        ...
2025-02-24T15:52:32.6892663Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6892790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6892902Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6892981Z        ...
2025-02-24T15:52:32.6893197Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6893330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6893432Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6894232Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.6894237Z 
2025-02-24T15:52:32.6894412Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:52:32.6894785Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6899732Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.6904979Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.6905272Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:52:32.6905886Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6905891Z 
2025-02-24T15:52:32.6906024Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6906147Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6906222Z        ...
2025-02-24T15:52:32.6906315Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6906442Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6906562Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6906646Z        ...
2025-02-24T15:52:32.6906760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6906884Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6906992Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6907573Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6907586Z 
2025-02-24T15:52:32.6907712Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6907833Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6907907Z        ...
2025-02-24T15:52:32.6908002Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6908127Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6908244Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6908317Z        ...
2025-02-24T15:52:32.6908408Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6908530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6908639Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6909221Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6909226Z 
2025-02-24T15:52:32.6909352Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6909471Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6909546Z        ...
2025-02-24T15:52:32.6909641Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6909765Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6909883Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6909958Z        ...
2025-02-24T15:52:32.6910051Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6910181Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6910285Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6911058Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6911064Z 
2025-02-24T15:52:32.6911198Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6911316Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6911518Z        ...
2025-02-24T15:52:32.6911609Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6911734Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6911853Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6911934Z        ...
2025-02-24T15:52:32.6912020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6912150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6912254Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6912758Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6912763Z 
2025-02-24T15:52:32.6912891Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6913011Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6913088Z        ...
2025-02-24T15:52:32.6913179Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6913306Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6913418Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6913495Z        ...
2025-02-24T15:52:32.6913579Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6913704Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6913806Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6914314Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6914319Z 
2025-02-24T15:52:32.6914420Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6914793Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6915135Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6915466Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6915978Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6915982Z 
2025-02-24T15:52:32.6916084Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6916453Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6916944Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6917419Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6917900Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6917911Z 
2025-02-24T15:52:32.6918041Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6918156Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6918236Z        ...
2025-02-24T15:52:32.6918329Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6918454Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6918572Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6918645Z        ...
2025-02-24T15:52:32.6918735Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6918857Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6918966Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6919477Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6919486Z 
2025-02-24T15:52:32.6919615Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6919728Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6919806Z        ...
2025-02-24T15:52:32.6919898Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6920020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6920137Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6920212Z        ...
2025-02-24T15:52:32.6920304Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6920432Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6920532Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6921123Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6921129Z 
2025-02-24T15:52:32.6921262Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6921376Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6921450Z        ...
2025-02-24T15:52:32.6921539Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6921668Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6921788Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6921867Z        ...
2025-02-24T15:52:32.6921952Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6922080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6922182Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6922802Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.6922807Z 
2025-02-24T15:52:32.6923095Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:52:32.6923471Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6928523Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.6933865Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:52:32.6934153Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:52:32.6934689Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6934694Z 
2025-02-24T15:52:32.6934831Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6934942Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6935022Z        ...
2025-02-24T15:52:32.6935108Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6935242Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6935361Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6935443Z        ...
2025-02-24T15:52:32.6935541Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6935666Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6935783Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6936287Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6936291Z 
2025-02-24T15:52:32.6936425Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6936534Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6936615Z        ...
2025-02-24T15:52:32.6936701Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6936830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6936948Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6937027Z        ...
2025-02-24T15:52:32.6937119Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6937242Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6937348Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6937857Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6937862Z 
2025-02-24T15:52:32.6937992Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6938101Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6938180Z        ...
2025-02-24T15:52:32.6938267Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6938388Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6938506Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6938579Z        ...
2025-02-24T15:52:32.6938671Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6938793Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6938901Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6939395Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6939399Z 
2025-02-24T15:52:32.6939527Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6939641Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6939715Z        ...
2025-02-24T15:52:32.6939807Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6939929Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6940048Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6940121Z        ...
2025-02-24T15:52:32.6940212Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6940419Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6940528Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6941138Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6941294Z 
2025-02-24T15:52:32.6941424Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6941541Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6941613Z        ...
2025-02-24T15:52:32.6941703Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6941826Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6941943Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6942017Z        ...
2025-02-24T15:52:32.6942109Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6942237Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6942350Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6942869Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6942879Z 
2025-02-24T15:52:32.6942981Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6943354Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6943691Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6944030Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6944542Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6944546Z 
2025-02-24T15:52:32.6944642Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6945019Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6945403Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6945889Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6946372Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6946452Z 
2025-02-24T15:52:32.6946585Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6946694Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6946774Z        ...
2025-02-24T15:52:32.6946861Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6946992Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6947110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6947185Z        ...
2025-02-24T15:52:32.6947274Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6947403Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6947510Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6948039Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6948049Z 
2025-02-24T15:52:32.6948183Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6948290Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6948370Z        ...
2025-02-24T15:52:32.6948454Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6948585Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6948704Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6948776Z        ...
2025-02-24T15:52:32.6948865Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6948986Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6949095Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6949579Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6949587Z 
2025-02-24T15:52:32.6949720Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6949828Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6949935Z        ...
2025-02-24T15:52:32.6950027Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6950151Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6950270Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6950343Z        ...
2025-02-24T15:52:32.6950433Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6950554Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6950664Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6951300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6951311Z 
2025-02-24T15:52:32.6951446Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6951563Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6951638Z        ...
2025-02-24T15:52:32.6951741Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6951874Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6951991Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6952063Z        ...
2025-02-24T15:52:32.6952152Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6952275Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6952382Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6953017Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6953030Z 
2025-02-24T15:52:32.6953259Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6953373Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6953446Z        ...
2025-02-24T15:52:32.6953534Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6953656Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6953773Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6953845Z        ...
2025-02-24T15:52:32.6953932Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6954053Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6954160Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6954673Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6954677Z 
2025-02-24T15:52:32.6954806Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6954925Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6954998Z        ...
2025-02-24T15:52:32.6955090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6955213Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6955330Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6955403Z        ...
2025-02-24T15:52:32.6955495Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6955623Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6955723Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6956220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6956224Z 
2025-02-24T15:52:32.6956351Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6956464Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6956544Z        ...
2025-02-24T15:52:32.6956634Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6956756Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6956873Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6956951Z        ...
2025-02-24T15:52:32.6957036Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6957165Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6957265Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6957771Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6957778Z 
2025-02-24T15:52:32.6957876Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6958246Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6958585Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6959001Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6959574Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6959578Z 
2025-02-24T15:52:32.6959683Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6960054Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6960428Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6960812Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6961613Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6961619Z 
2025-02-24T15:52:32.6961756Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6961874Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6961981Z        ...
2025-02-24T15:52:32.6962073Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6962200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6962318Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6962392Z        ...
2025-02-24T15:52:32.6962484Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6962607Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6962718Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6963237Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6963252Z 
2025-02-24T15:52:32.6963379Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6963495Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6963572Z        ...
2025-02-24T15:52:32.6963663Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6963788Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6963905Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6963978Z        ...
2025-02-24T15:52:32.6964069Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6964191Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6964298Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6964781Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6964786Z 
2025-02-24T15:52:32.6965063Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6965184Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6965257Z        ...
2025-02-24T15:52:32.6965350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6965577Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6965695Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6965768Z        ...
2025-02-24T15:52:32.6965859Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6965988Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6966087Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6966601Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6966605Z 
2025-02-24T15:52:32.6966736Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6966858Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6966938Z        ...
2025-02-24T15:52:32.6967032Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6967161Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6967280Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6967358Z        ...
2025-02-24T15:52:32.6967444Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6967619Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6967796Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6968598Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6968604Z 
2025-02-24T15:52:32.6968741Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6968865Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6968939Z        ...
2025-02-24T15:52:32.6969034Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6969164Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6969285Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6969364Z        ...
2025-02-24T15:52:32.6969449Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6969579Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6969681Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6970190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6970194Z 
2025-02-24T15:52:32.6970322Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6970442Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6970524Z        ...
2025-02-24T15:52:32.6970608Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6970737Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6970851Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6975952Z        ...
2025-02-24T15:52:32.6976068Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6976213Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6976327Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6976880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6976886Z 
2025-02-24T15:52:32.6977024Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6977142Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6977218Z        ...
2025-02-24T15:52:32.6977473Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6977620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6977739Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6977920Z        ...
2025-02-24T15:52:32.6978014Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6978139Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6978253Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6978810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6978814Z 
2025-02-24T15:52:32.6978914Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6979289Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6979625Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6979958Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6980507Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6980516Z 
2025-02-24T15:52:32.6980609Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6981128Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6981508Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6981876Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6982403Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6982407Z 
2025-02-24T15:52:32.6982540Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6982651Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6982842Z        ...
2025-02-24T15:52:32.6982933Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6983065Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6983175Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6983354Z        ...
2025-02-24T15:52:32.6983438Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6983563Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6983666Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6984221Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6984226Z 
2025-02-24T15:52:32.6984356Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6984461Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6984538Z        ...
2025-02-24T15:52:32.6984625Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6984751Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6984860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6984941Z        ...
2025-02-24T15:52:32.6985023Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6985147Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6985253Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6985771Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6985776Z 
2025-02-24T15:52:32.6985903Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6986009Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6986084Z        ...
2025-02-24T15:52:32.6986166Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6986294Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6986401Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6986476Z        ...
2025-02-24T15:52:32.6986567Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6986684Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6986790Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6987333Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6987338Z 
2025-02-24T15:52:32.6987467Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6987570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6987645Z        ...
2025-02-24T15:52:32.6987727Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6987858Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6987973Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6988042Z        ...
2025-02-24T15:52:32.6988128Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6988252Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6988358Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6988904Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6988908Z 
2025-02-24T15:52:32.6989034Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6989140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6989215Z        ...
2025-02-24T15:52:32.6989303Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6989421Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6989622Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6989696Z        ...
2025-02-24T15:52:32.6989782Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6989978Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6990084Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6990619Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6990623Z 
2025-02-24T15:52:32.6990751Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6990861Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6991032Z        ...
2025-02-24T15:52:32.6991120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6991240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6991359Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6991430Z        ...
2025-02-24T15:52:32.6991516Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6991635Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6991744Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6992346Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6992356Z 
2025-02-24T15:52:32.6992479Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6992589Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6992659Z        ...
2025-02-24T15:52:32.6992748Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6992872Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6992984Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6993059Z        ...
2025-02-24T15:52:32.6993145Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6993262Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6993371Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6993972Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6993976Z 
2025-02-24T15:52:32.6994071Z Series values are different (4.04858 %)
2025-02-24T15:52:32.6994447Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6994774Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6995109Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:52:32.6995844Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:52:32.6995850Z 
2025-02-24T15:52:32.6995944Z Series values are different (6.47773 %)
2025-02-24T15:52:32.6996316Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.6996793Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6997174Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:52:32.6997753Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6997758Z 
2025-02-24T15:52:32.6997887Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6997995Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6998071Z        ...
2025-02-24T15:52:32.6998155Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6998285Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6998404Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6998475Z        ...
2025-02-24T15:52:32.6998562Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6998692Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.6998795Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.6999404Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.6999409Z 
2025-02-24T15:52:32.6999539Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.6999647Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.6999722Z        ...
2025-02-24T15:52:32.6999808Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.6999927Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7000044Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7000115Z        ...
2025-02-24T15:52:32.7000201Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7000317Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7000426Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.7001107Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.7001113Z 
2025-02-24T15:52:32.7001241Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.7001350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7001419Z        ...
2025-02-24T15:52:32.7001505Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7001624Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7001858Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7001931Z        ...
2025-02-24T15:52:32.7002021Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7002142Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7002349Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.7002955Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.7002965Z 
2025-02-24T15:52:32.7003088Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.7003199Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7003270Z        ...
2025-02-24T15:52:32.7003356Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7003479Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7003599Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7003669Z        ...
2025-02-24T15:52:32.7003755Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7003877Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7003989Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.7004600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.7004605Z 
2025-02-24T15:52:32.7004729Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.7004841Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7004911Z        ...
2025-02-24T15:52:32.7004996Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7005115Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7005228Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7005302Z        ...
2025-02-24T15:52:32.7005388Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7005511Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7005616Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.7006213Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:52:32.7006218Z 
2025-02-24T15:52:32.7006340Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:52:32.7006449Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7006520Z        ...
2025-02-24T15:52:32.7006606Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7006726Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7006840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:52:32.7006915Z        ...
2025-02-24T15:52:32.7007002Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:52:32.7007128Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:52:32.7007228Z At positional index 75, first diff: 6 != 7
2025-02-24T15:52:32.7007552Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-24T15:52:32.7007653Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7007657Z 
2025-02-24T15:52:32.7007759Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T15:52:32.7007851Z Max absolute difference: 1.
2025-02-24T15:52:32.7007942Z Max relative difference: 1.
2025-02-24T15:52:32.7008069Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.7008176Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.7008281Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:52:32.7008481Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.7008588Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:52:32.7008684Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:52:32.7009081Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-24T15:52:32.7009179Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7009183Z 
2025-02-24T15:52:32.7009283Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T15:52:32.7009379Z Max absolute difference: 4005
2025-02-24T15:52:32.7009472Z Max relative difference: 26.00649351
2025-02-24T15:52:32.7009582Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:52:32.7009682Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:52:32.7009971Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-24T15:52:32.7010074Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7010078Z 
2025-02-24T15:52:32.7010178Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T15:52:32.7010266Z Max absolute difference: 4046
2025-02-24T15:52:32.7010365Z Max relative difference: 24.82208589
2025-02-24T15:52:32.7010465Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:52:32.7010567Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:52:32.7010834Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-24T15:52:32.7011037Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7011042Z 
2025-02-24T15:52:32.7011142Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:52:32.7011239Z Max absolute difference: 0.99984222
2025-02-24T15:52:32.7011341Z Max relative difference: 6337.12154973
2025-02-24T15:52:32.7011425Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.7011511Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.7011596Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.7011682Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.7011764Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:52:32.7011851Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:52:32.7012096Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-24T15:52:32.7012190Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7012194Z 
2025-02-24T15:52:32.7012295Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T15:52:32.7012388Z Max absolute difference: 4.25260542e+12
2025-02-24T15:52:32.7012485Z Max relative difference: 18196.0085861
2025-02-24T15:52:32.7012635Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:52:32.7012721Z         4.043917e+10, 6.677200e-07],
2025-02-24T15:52:32.7012860Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:52:32.7013010Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:52:32.7013094Z         4.043917e+10, 6.677200e-07],
2025-02-24T15:52:32.7013223Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:52:32.7013470Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-24T15:52:32.7013566Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7013570Z 
2025-02-24T15:52:32.7013665Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T15:52:32.7013757Z Max absolute difference: 2.92713618
2025-02-24T15:52:32.7013855Z Max relative difference: 18196.0085861
2025-02-24T15:52:32.7013997Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:52:32.7014083Z        1.126883e+00, 4.414472e-04])
2025-02-24T15:52:32.7014228Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:52:32.7014306Z        1.126883e+00, 4.414472e-04])
2025-02-24T15:52:32.7014687Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-24T15:52:32.7014787Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7014790Z 
2025-02-24T15:52:32.7014887Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T15:52:32.7015100Z Max absolute difference: 282815.33818472
2025-02-24T15:52:32.7015197Z Max relative difference: 4.12352828e+47
2025-02-24T15:52:32.7015340Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:52:32.7015425Z         0.000000e+00, 0.000000e+00],
2025-02-24T15:52:32.7015555Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:52:32.7015698Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:52:32.7015784Z         0.000000e+00, 0.000000e+00],
2025-02-24T15:52:32.7015910Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:52:32.7016417Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.7016422Z 
2025-02-24T15:52:32.7016585Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.7016673Z [index]: [0, 1]
2025-02-24T15:52:32.7016774Z [left]:  [0.40039163797855976, 0.45006901732183335]
2025-02-24T15:52:32.7016880Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T15:52:32.7017065Z At positional index 1, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T15:52:32.7017562Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.7017567Z 
2025-02-24T15:52:32.7017731Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.7017806Z [index]: [0, 1]
2025-02-24T15:52:32.7017909Z [left]:  [9967.488442185557, 10091.396322818857]
2025-02-24T15:52:32.7018011Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T15:52:32.7018188Z At positional index 1, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T15:52:32.7018728Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:52:32.7018743Z 
2025-02-24T15:52:32.7018900Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:52:32.7018983Z [index]: [0, 1]
2025-02-24T15:52:32.7019078Z [left]:  [2869544645.3209715, 2881024886.0882797]
2025-02-24T15:52:32.7019182Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T15:52:32.7019345Z At positional index 1, first diff: 2881024886.0882797 != 2880986026.9779425
2025-02-24T15:52:32.7019733Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-24T15:52:32.7019737Z 
2025-02-24T15:52:32.7019846Z Series values are different (100.0 %)
2025-02-24T15:52:32.7019982Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.7021323Z [left]:  [1.020204277799175e+29, 8.604643039338653e+28, 7.621843612415334e+28, 6.887796775939623e+28, 6.338143063845976e+28, 5.9617708329702514e+28, 5.583215038688496e+28, 5.2621420110438605e+28, 5.007194689998156e+28, 4.79514420355033e+28, 4.630537292368222e+28, 4.4256902590810215e+28, 4.270865369572798e+28, 4.0945442836573385e+28, 3.972280940559009e+28, 3.88415238527491e+28, 3.7498225331847816e+28, 3.6666118688506595e+28, 3.5319738797726317e+28, 3.4372707153252074e+28]
2025-02-24T15:52:32.7022645Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T15:52:32.7022848Z At positional index 0, first diff: 1.020204277799175e+29 != 1.0190851489144414e+29
2025-02-24T15:52:32.7023325Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-24T15:52:32.7023330Z 
2025-02-24T15:52:32.7023425Z Series values are different (100.0 %)
2025-02-24T15:52:32.7023550Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.7024535Z [left]:  [116635492761989.14, 98171051632121.9, 86872515261187.03, 78289696965689.94, 72209193315676.52, 67743848273202.75, 63510940656107.945, 60117004438842.41, 57572723670164.85, 55316097836075.21, 53398108009568.72, 51391839595543.516, 49914799926154.26, 48252386019894.586, 46984233483222.11, 46076787175987.375, 45005288890715.836, 44179675761282.96, 43040066710169.75, 42141149121109.805]
2025-02-24T15:52:32.7025515Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T15:52:32.7025694Z At positional index 0, first diff: 116635492761989.14 != 116548101693134.0
2025-02-24T15:52:32.7026049Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-24T15:52:32.7026053Z 
2025-02-24T15:52:32.7026158Z Series values are different (90.0 %)
2025-02-24T15:52:32.7026276Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.7027306Z [left]:  [10091.396322818857, 10113.672762424394, 10138.572146470884, 10142.407829541042, 10149.471061360666, 10124.731447668684, 10084.96501000204, 10057.884801342841, 10073.983914823792, 10031.92450183089, 10029.890159447663, 9982.658841271634, 9943.375727608094, 9914.259749796103, 9893.924180562473, 9854.860600288928, 9802.891513260804, 9774.848565783679, 9735.162327402864, 9698.91109582603]
2025-02-24T15:52:32.7028332Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T15:52:32.7028502Z At positional index 0, first diff: 10091.396322818857 != 10090.925208074616
2025-02-24T15:52:32.7028883Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-24T15:52:32.7028888Z 
2025-02-24T15:52:32.7028981Z Series values are different (95.0 %)
2025-02-24T15:52:32.7029108Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:52:32.7030232Z [left]:  [0.45006901732183335, 0.3591778672440068, 0.2993157944909688, 0.2578615845098733, 0.22544220327867867, 0.2010999763061898, 0.18257381854718469, 0.16658101749462778, 0.15049754388199085, 0.13975435818105253, 0.1286220608480736, 0.12092168181342128, 0.11342334056954673, 0.10650389106044367, 0.10016109465785494, 0.09484390983006774, 0.09052533757303853, 0.0858591268281399, 0.08203028321765116, 0.07824287530618096]
2025-02-24T15:52:32.7031547Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T15:52:32.7031733Z At positional index 0, first diff: 0.45006901732183335 != 0.45013644671958974
2025-02-24T15:52:32.7032092Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-24T15:52:32.7032204Z 
2025-02-24T15:52:32.7032302Z Series values are different (5.1125 %)
2025-02-24T15:52:32.7032675Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.7037922Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.8, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.4, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313315.0, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T15:52:32.7043334Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T15:52:32.7043621Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T15:52:32.7044011Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-24T15:52:32.7044016Z 
2025-02-24T15:52:32.7044116Z Series values are different (1.3025 %)
2025-02-24T15:52:32.7044484Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:52:32.7050729Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503756e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.558071221185956e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.2709056323648205e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544446e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.5337925181007677e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:52:32.7057239Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:52:32.7057584Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T15:52:32.7057967Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-24T15:52:32.7058074Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7058078Z 
2025-02-24T15:52:32.7058173Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:52:32.7058266Z Max absolute difference: 4.30543741e+37
2025-02-24T15:52:32.7058364Z Max relative difference: 1.
2025-02-24T15:52:32.7058519Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7058608Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7058761Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7058839Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7059234Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-24T15:52:32.7059338Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7059342Z 
2025-02-24T15:52:32.7059440Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T15:52:32.7059533Z Max absolute difference: 4.15247374e+37
2025-02-24T15:52:32.7059625Z Max relative difference: 1.
2025-02-24T15:52:32.7059766Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7059848Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7059991Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7060067Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7060374Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-24T15:52:32.7060555Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7060559Z 
2025-02-24T15:52:32.7060656Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:52:32.7060746Z Max absolute difference: 4.30543741e+37
2025-02-24T15:52:32.7061019Z Max relative difference: 1.
2025-02-24T15:52:32.7061161Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7061244Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7061382Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7061466Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7061763Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-24T15:52:32.7061862Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7061866Z 
2025-02-24T15:52:32.7062002Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T15:52:32.7062096Z Max absolute difference: 5.32418652e-19
2025-02-24T15:52:32.7062198Z Max relative difference: 12.23359055
2025-02-24T15:52:32.7062281Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7062369Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7062448Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7062546Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7062631Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7062709Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7062977Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-24T15:52:32.7063072Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7063076Z 
2025-02-24T15:52:32.7063173Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T15:52:32.7063266Z Max absolute difference: 1.38672909e+39
2025-02-24T15:52:32.7063362Z Max relative difference: 5.25284451
2025-02-24T15:52:32.7063503Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7063596Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7063737Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7063820Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7064117Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-24T15:52:32.7064214Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7064218Z 
2025-02-24T15:52:32.7064314Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T15:52:32.7064406Z Max absolute difference: 5.26760031e+38
2025-02-24T15:52:32.7064501Z Max relative difference: 35562.41947434
2025-02-24T15:52:32.7064639Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7064724Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7064861Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7064944Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7065407Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-24T15:52:32.7065506Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7065514Z 
2025-02-24T15:52:32.7065619Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:52:32.7065710Z Max absolute difference: 7.03072887e-19
2025-02-24T15:52:32.7065809Z Max relative difference: 7.72237896
2025-02-24T15:52:32.7065892Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7065976Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7066061Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7066157Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7066240Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7066318Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7066749Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-24T15:52:32.7066960Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7066965Z 
2025-02-24T15:52:32.7067066Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:52:32.7067161Z Max absolute difference: 2.09719426e+39
2025-02-24T15:52:32.7067362Z Max relative difference: 4.0036592
2025-02-24T15:52:32.7067505Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7067591Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7067732Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7067817Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7068272Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-24T15:52:32.7068367Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7068371Z 
2025-02-24T15:52:32.7068467Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.7068566Z Max absolute difference: 5.00661745e+37
2025-02-24T15:52:32.7068661Z Max relative difference: 17.51202125
2025-02-24T15:52:32.7068799Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T15:52:32.7068887Z        2.279436e+31, 2.243943e+31])
2025-02-24T15:52:32.7069025Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T15:52:32.7069108Z        2.292907e+31, 2.257206e+31])
2025-02-24T15:52:32.7069554Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-24T15:52:32.7069649Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7069652Z 
2025-02-24T15:52:32.7069757Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:52:32.7069849Z Max absolute difference: 4.67863561e-19
2025-02-24T15:52:32.7069944Z Max relative difference: 3.25828651
2025-02-24T15:52:32.7070026Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7070118Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7070197Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7070284Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7070365Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7070447Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7070863Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-24T15:52:32.7071066Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7071071Z 
2025-02-24T15:52:32.7071170Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:52:32.7071264Z Max absolute difference: 8.5486318e+38
2025-02-24T15:52:32.7071361Z Max relative difference: 1.86186015
2025-02-24T15:52:32.7071501Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7071584Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7071728Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7071811Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7072266Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-24T15:52:32.7072366Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7072370Z 
2025-02-24T15:52:32.7072467Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.7072558Z Max absolute difference: 2.90101642e+37
2025-02-24T15:52:32.7072653Z Max relative difference: 0.98973757
2025-02-24T15:52:32.7072792Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T15:52:32.7072878Z        1.330497e+31, 1.294462e+31])
2025-02-24T15:52:32.7073013Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T15:52:32.7073096Z        1.375141e+31, 1.337928e+31])
2025-02-24T15:52:32.7073651Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-24T15:52:32.7073754Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7073758Z 
2025-02-24T15:52:32.7073864Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:52:32.7074061Z Max absolute difference: 4.67863561e-19
2025-02-24T15:52:32.7074157Z Max relative difference: 3.25828651
2025-02-24T15:52:32.7074240Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7074328Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7074407Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7074497Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7074581Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7074659Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7075079Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-24T15:52:32.7075177Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7075186Z 
2025-02-24T15:52:32.7075286Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:52:32.7075379Z Max absolute difference: 8.5486318e+38
2025-02-24T15:52:32.7075476Z Max relative difference: 1.86186015
2025-02-24T15:52:32.7075623Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7075707Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7075851Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7075928Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7076376Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-24T15:52:32.7076472Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7076476Z 
2025-02-24T15:52:32.7076573Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.7076666Z Max absolute difference: 2.99183385e+37
2025-02-24T15:52:32.7076764Z Max relative difference: 0.98992197
2025-02-24T15:52:32.7076903Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T15:52:32.7076989Z        1.260980e+31, 1.222587e+31])
2025-02-24T15:52:32.7077131Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T15:52:32.7077213Z        1.193005e+31, 1.164854e+31])
2025-02-24T15:52:32.7077657Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-24T15:52:32.7077753Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7077757Z 
2025-02-24T15:52:32.7077864Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:52:32.7077955Z Max absolute difference: 7.03072887e-19
2025-02-24T15:52:32.7078050Z Max relative difference: 7.72237896
2025-02-24T15:52:32.7078132Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7078220Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7078303Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7078393Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7078476Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:52:32.7078554Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:52:32.7078977Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-24T15:52:32.7079072Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7079076Z 
2025-02-24T15:52:32.7079174Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:52:32.7079268Z Max absolute difference: 2.09719426e+39
2025-02-24T15:52:32.7079365Z Max relative difference: 4.0036592
2025-02-24T15:52:32.7079504Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7079586Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7079731Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:52:32.7079913Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7080362Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-24T15:52:32.7080540Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7080544Z 
2025-02-24T15:52:32.7080639Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:52:32.7080731Z Max absolute difference: 5.0153284e+37
2025-02-24T15:52:32.7080823Z Max relative difference: 4.90769503
2025-02-24T15:52:32.7081070Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T15:52:32.7081153Z        2.088676e+31, 2.060278e+31])
2025-02-24T15:52:32.7081296Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T15:52:32.7081372Z        2.124305e+31, 2.101081e+31])
2025-02-24T15:52:32.7081729Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-24T15:52:32.7081831Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T15:52:32.7081835Z 
2025-02-24T15:52:32.7081930Z Mismatched elements: 20 / 20 (100%)
2025-02-24T15:52:32.7082025Z Max absolute difference: 2.25821059e+25
2025-02-24T15:52:32.7082117Z Max relative difference: 0.00054426
2025-02-24T15:52:32.7082259Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T15:52:32.7082386Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T15:52:32.7082512Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T15:52:32.7082642Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T15:52:32.7082761Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T15:52:32.7082881Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T15:52:32.7083271Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-24T15:52:32.7083384Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T15:52:32.7083388Z 
2025-02-24T15:52:32.7083480Z Mismatched elements: 20 / 20 (100%)
2025-02-24T15:52:32.7083572Z Max absolute difference: 1.93283629e+25
2025-02-24T15:52:32.7083667Z Max relative difference: 0.00029148
2025-02-24T15:52:32.7083807Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T15:52:32.7083919Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T15:52:32.7084044Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T15:52:32.7084171Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T15:52:32.7084287Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T15:52:32.7084404Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T15:52:32.7084747Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-24T15:52:32.7084828Z Arrays are not equal
2025-02-24T15:52:32.7084836Z 
2025-02-24T15:52:32.7084931Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T15:52:32.7085068Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:52:32.7085152Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:52:32.7085264Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:52:32.7085386Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:52:32.7085473Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:52:32.7085571Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:52:32.7085999Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-24T15:52:32.7086095Z Not equal to tolerance rtol=0.01, atol=0
2025-02-24T15:52:32.7086099Z 
2025-02-24T15:52:32.7086197Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T15:52:32.7086436Z Max absolute difference: 2.00640487e-05
2025-02-24T15:52:32.7086531Z Max relative difference: 2.06329455
2025-02-24T15:52:32.7086698Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:52:32.7086784Z        -9.757136e-06,  1.019764e-05])
2025-02-24T15:52:32.7087042Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:52:32.7087123Z        -9.757136e-06,  1.019764e-05])
2025-02-24T15:52:32.7087594Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-24T15:52:32.7087695Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7087699Z 
2025-02-24T15:52:32.7087792Z (shapes (508,), (515,) mismatch)
2025-02-24T15:52:32.7087931Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.7088045Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.7088175Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.7088302Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.7088421Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.7088545Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.7089006Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-24T15:52:32.7089106Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7089109Z 
2025-02-24T15:52:32.7089205Z (shapes (558,), (560,) mismatch)
2025-02-24T15:52:32.7089341Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.7089453Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.7089574Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.7089707Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.7089823Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.7089939Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.7090403Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-24T15:52:32.7090499Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7090514Z 
2025-02-24T15:52:32.7090597Z (shapes (147,), (136,) mismatch)
2025-02-24T15:52:32.7090730Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.7090840Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.7091072Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.7091198Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.7091311Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.7091430Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.7091883Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-24T15:52:32.7091992Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7091996Z 
2025-02-24T15:52:32.7092077Z (shapes (159,), (153,) mismatch)
2025-02-24T15:52:32.7092208Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.7092316Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.7092435Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.7092559Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.7092673Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.7092787Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.7093362Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-24T15:52:32.7093467Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7093570Z 
2025-02-24T15:52:32.7093654Z (shapes (508,), (515,) mismatch)
2025-02-24T15:52:32.7093787Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:52:32.7093898Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:52:32.7094021Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:52:32.7094146Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:52:32.7094260Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:52:32.7094373Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:52:32.7094838Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-24T15:52:32.7094940Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7094944Z 
2025-02-24T15:52:32.7095029Z (shapes (1466,), (1481,) mismatch)
2025-02-24T15:52:32.7095187Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T15:52:32.7095265Z        11152.962595, 11172.044815])
2025-02-24T15:52:32.7095410Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T15:52:32.7095486Z        11398.237865, 11111.204868])
2025-02-24T15:52:32.7095938Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-24T15:52:32.7096038Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7096042Z 
2025-02-24T15:52:32.7096123Z (shapes (147,), (136,) mismatch)
2025-02-24T15:52:32.7096254Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:52:32.7096369Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:52:32.7096490Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:52:32.7096616Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:52:32.7096734Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:52:32.7096850Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:52:32.7097307Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-24T15:52:32.7097409Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7097413Z 
2025-02-24T15:52:32.7097495Z (shapes (379,), (381,) mismatch)
2025-02-24T15:52:32.7097627Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T15:52:32.7097736Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T15:52:32.7097861Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T15:52:32.7097986Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T15:52:32.7098105Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T15:52:32.7098223Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T15:52:32.7098650Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-24T15:52:32.7098751Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7098755Z 
2025-02-24T15:52:32.7098844Z Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.7098940Z Max absolute difference: 22.
2025-02-24T15:52:32.7099027Z Max relative difference: 0.8
2025-02-24T15:52:32.7099116Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.7099192Z        [1.19e+04, 1.67e+02],
2025-02-24T15:52:32.7099276Z        [1.19e+04, 7.60e+01],...
2025-02-24T15:52:32.7099355Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:52:32.7099523Z        [1.19e+04, 1.89e+02],
2025-02-24T15:52:32.7099603Z        [1.19e+04, 8.20e+01],...
2025-02-24T15:52:32.7100029Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-24T15:52:32.7100205Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7100209Z 
2025-02-24T15:52:32.7100296Z Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.7100389Z Max absolute difference: 22.
2025-02-24T15:52:32.7100475Z Max relative difference: 0.8
2025-02-24T15:52:32.7100562Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:52:32.7100638Z        [1.19e+04, 1.67e+02],
2025-02-24T15:52:32.7100724Z        [1.19e+04, 7.60e+01],...
2025-02-24T15:52:32.7100803Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:52:32.7100889Z        [1.19e+04, 1.89e+02],
2025-02-24T15:52:32.7101077Z        [1.19e+04, 8.20e+01],...
2025-02-24T15:52:32.7101501Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-24T15:52:32.7101599Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7101603Z 
2025-02-24T15:52:32.7101688Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.7101789Z Max absolute difference: 34
2025-02-24T15:52:32.7101877Z Max relative difference: 0.71428571
2025-02-24T15:52:32.7102019Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.7102103Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7102237Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.7102316Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7102737Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-24T15:52:32.7102832Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7102836Z 
2025-02-24T15:52:32.7102925Z Mismatched elements: 4 / 40 (10%)
2025-02-24T15:52:32.7103016Z Max absolute difference: 34.
2025-02-24T15:52:32.7103103Z Max relative difference: 0.65
2025-02-24T15:52:32.7103187Z  x: array([[1.10e+04, 2.72e+02],
2025-02-24T15:52:32.7103268Z        [1.19e+04, 2.72e+02],
2025-02-24T15:52:32.7103349Z        [1.19e+04, 1.10e+02],...
2025-02-24T15:52:32.7103426Z  y: array([[1.10e+04, 3.06e+02],
2025-02-24T15:52:32.7103504Z        [1.19e+04, 3.06e+02],
2025-02-24T15:52:32.7103579Z        [1.19e+04, 1.18e+02],...
2025-02-24T15:52:32.7103991Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T15:52:32.7104088Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7104092Z 
2025-02-24T15:52:32.7104177Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.7104266Z Max absolute difference: 22
2025-02-24T15:52:32.7104351Z Max relative difference: 0.8
2025-02-24T15:52:32.7104490Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:52:32.7104573Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.7104706Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.7104790Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.7105208Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T15:52:32.7105305Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7105308Z 
2025-02-24T15:52:32.7105394Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.7105485Z Max absolute difference: 22
2025-02-24T15:52:32.7105571Z Max relative difference: 0.8
2025-02-24T15:52:32.7105704Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:52:32.7105784Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.7105911Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:52:32.7106126Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:52:32.7106563Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T15:52:32.7106765Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7106769Z 
2025-02-24T15:52:32.7106869Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.7106958Z Max absolute difference: 34
2025-02-24T15:52:32.7107046Z Max relative difference: 0.71428571
2025-02-24T15:52:32.7107183Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.7107260Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7107391Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.7107468Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7107889Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T15:52:32.7107987Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:52:32.7107991Z 
2025-02-24T15:52:32.7108077Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:52:32.7108167Z Max absolute difference: 34
2025-02-24T15:52:32.7108260Z Max relative difference: 0.65
2025-02-24T15:52:32.7108394Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:52:32.7108471Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7108601Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:52:32.7108678Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:52:32.7109155Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-24T15:52:32.7109256Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7109260Z 
2025-02-24T15:52:32.7109350Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7109453Z Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.7109542Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7109695Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7109778Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7109923Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7109999Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7110472Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-24T15:52:32.7110573Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7110577Z 
2025-02-24T15:52:32.7110670Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7110767Z Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.7110854Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7111104Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7111182Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7111325Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7111401Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7111874Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-24T15:52:32.7111970Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7111979Z 
2025-02-24T15:52:32.7112070Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7112166Z Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.7112253Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7112395Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7112470Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7112609Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7112801Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7113276Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-24T15:52:32.7113476Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7113485Z 
2025-02-24T15:52:32.7113574Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7113669Z Max absolute difference: 4.3299331e-05
2025-02-24T15:52:32.7113756Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7113898Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7113977Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7114118Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7114194Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7114665Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-24T15:52:32.7114762Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7114771Z 
2025-02-24T15:52:32.7114858Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7114959Z Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.7115051Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7115194Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7115269Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7115416Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7115492Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7115959Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-24T15:52:32.7116055Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7116065Z 
2025-02-24T15:52:32.7116154Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7116254Z Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.7116346Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7116488Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7116569Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7116709Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7116785Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7117252Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-24T15:52:32.7117347Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7117356Z 
2025-02-24T15:52:32.7117443Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7117539Z Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.7117630Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7117774Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7117851Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7117991Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7118072Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7118537Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-24T15:52:32.7118634Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7118643Z 
2025-02-24T15:52:32.7118732Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7118828Z Max absolute difference: 3.16368526e-05
2025-02-24T15:52:32.7118918Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7119063Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7119139Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7119278Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:52:32.7119441Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7119920Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-24T15:52:32.7120088Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7120098Z 
2025-02-24T15:52:32.7120184Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7120282Z Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.7120369Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7120513Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7120588Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7120728Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7120804Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7121393Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-24T15:52:32.7121490Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7121498Z 
2025-02-24T15:52:32.7121586Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7121689Z Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.7121777Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7121918Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7121994Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7122136Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7122212Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7122684Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-24T15:52:32.7122778Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7122781Z 
2025-02-24T15:52:32.7122880Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7122978Z Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.7123066Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7123208Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7123289Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7123431Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7123511Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7123990Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-24T15:52:32.7124086Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7124090Z 
2025-02-24T15:52:32.7124184Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:52:32.7124278Z Max absolute difference: 5.1807441e+47
2025-02-24T15:52:32.7124367Z Max relative difference: 4.76021355
2025-02-24T15:52:32.7124513Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7124589Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7124731Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7124811Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7125282Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-24T15:52:32.7125376Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7125380Z 
2025-02-24T15:52:32.7125474Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7125575Z Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.7125666Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7125811Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7125886Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7126145Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7126227Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7126698Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-24T15:52:32.7126915Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7126919Z 
2025-02-24T15:52:32.7127013Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7127108Z Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.7127198Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7127341Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7127417Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7127557Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7127633Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7128113Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-24T15:52:32.7128208Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7128211Z 
2025-02-24T15:52:32.7128305Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7128406Z Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.7128495Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7128636Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7128712Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7128852Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7128928Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7129399Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-24T15:52:32.7129497Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7129500Z 
2025-02-24T15:52:32.7129595Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:52:32.7129689Z Max absolute difference: 3.78533417e+47
2025-02-24T15:52:32.7129778Z Max relative difference: 178.93768705
2025-02-24T15:52:32.7129919Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7129999Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7130140Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:52:32.7130215Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7130645Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T15:52:32.7130740Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7130744Z 
2025-02-24T15:52:32.7130837Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7131033Z Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.7131124Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7131272Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7131348Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7131489Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7131569Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7131996Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T15:52:32.7132091Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7132094Z 
2025-02-24T15:52:32.7132187Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7132282Z Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.7132370Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7132512Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7132587Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7132846Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7132927Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7133352Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-24T15:52:32.7133549Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7133552Z 
2025-02-24T15:52:32.7133644Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7133733Z Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.7133825Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7133967Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7134042Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7134183Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7134259Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7134688Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-24T15:52:32.7134784Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7134788Z 
2025-02-24T15:52:32.7134880Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7134978Z Max absolute difference: 2.08771842e-13
2025-02-24T15:52:32.7135068Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7135209Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7135284Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7135423Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7135499Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7135924Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T15:52:32.7136021Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7136024Z 
2025-02-24T15:52:32.7136119Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7136216Z Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.7136311Z Max relative difference: 15766.1580412
2025-02-24T15:52:32.7136454Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7136534Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7136675Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7136750Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7137173Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T15:52:32.7137268Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7137271Z 
2025-02-24T15:52:32.7137362Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7137452Z Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.7137548Z Max relative difference: 15766.1580412
2025-02-24T15:52:32.7137693Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7137770Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7137914Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7137995Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7138417Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-24T15:52:32.7138513Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7138517Z 
2025-02-24T15:52:32.7138607Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7138694Z Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.7138787Z Max relative difference: 15766.1580412
2025-02-24T15:52:32.7138927Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7139003Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7139145Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7139309Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7139744Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-24T15:52:32.7139913Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7139917Z 
2025-02-24T15:52:32.7140010Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7140100Z Max absolute difference: 3.02728422e-13
2025-02-24T15:52:32.7140195Z Max relative difference: 15766.1580412
2025-02-24T15:52:32.7140335Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7140412Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7140554Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:52:32.7140629Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7141165Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-24T15:52:32.7141262Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7141266Z 
2025-02-24T15:52:32.7141359Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7141449Z Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.7141548Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7141690Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7141766Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7141906Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7141982Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7142405Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-24T15:52:32.7142500Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7142504Z 
2025-02-24T15:52:32.7142597Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7142690Z Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.7142782Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7142920Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7143009Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7143149Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7143225Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7143657Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-24T15:52:32.7143752Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7143756Z 
2025-02-24T15:52:32.7143847Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7143937Z Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.7144030Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7144166Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7144253Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7144393Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7144468Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7144900Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-24T15:52:32.7144999Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7145003Z 
2025-02-24T15:52:32.7145093Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:52:32.7145183Z Max absolute difference: 2.49794504e+39
2025-02-24T15:52:32.7145276Z Max relative difference: 3.01858991
2025-02-24T15:52:32.7145411Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7145493Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7145633Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7145708Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7146254Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-24T15:52:32.7146353Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7146455Z 
2025-02-24T15:52:32.7146550Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7146640Z Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.7146733Z Max relative difference: 15766.15804934
2025-02-24T15:52:32.7146870Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7146952Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7147093Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7147169Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7147599Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-24T15:52:32.7147703Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7147707Z 
2025-02-24T15:52:32.7147800Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7147891Z Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.7147990Z Max relative difference: 15766.15804934
2025-02-24T15:52:32.7148128Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7148209Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7148351Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7148428Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7148863Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-24T15:52:32.7148960Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7148964Z 
2025-02-24T15:52:32.7149057Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7149147Z Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.7149247Z Max relative difference: 15766.15804934
2025-02-24T15:52:32.7149385Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7149468Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7149613Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7149689Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7150115Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-24T15:52:32.7150213Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:52:32.7150217Z 
2025-02-24T15:52:32.7150313Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:52:32.7150403Z Max absolute difference: 3.62213099e+39
2025-02-24T15:52:32.7150499Z Max relative difference: 15766.15804934
2025-02-24T15:52:32.7150637Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7150726Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7150869Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:52:32.7151071Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:52:32.7151362Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 752.79s (0:12:32) =
2025-02-24T15:52:34.9385562Z ##[error]Process completed with exit code 1.
2025-02-24T15:52:34.9461240Z Post job cleanup.
2025-02-24T15:52:34.9493181Z Post job cleanup.
2025-02-24T15:52:35.0841688Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-02-24T15:52:35.0849003Z Removing micromamba run shell ...
2025-02-24T15:52:35.0853120Z ##[group]Deinitialize micromamba for bash
2025-02-24T15:52:35.0871922Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:52:35.0968768Z Resetting RC file "/home/runner/.bashrc"
2025-02-24T15:52:35.0969330Z Deleting config for root prefix 
2025-02-24T15:52:35.0969859Z Clearing mamba executable environment variable
2025-02-24T15:52:35.0971545Z Removing the following in your "/home/runner/.bashrc" file
2025-02-24T15:52:35.0972327Z # >>> mamba initialize >>>
2025-02-24T15:52:35.0972550Z ...
2025-02-24T15:52:35.0972733Z # <<< mamba initialize <<<
2025-02-24T15:52:35.1001735Z Removing mamba initialize block from .bash_profile
2025-02-24T15:52:35.1016625Z ##[endgroup]
2025-02-24T15:52:35.1020778Z Removing environment tardis from auto-activate bash ...
2025-02-24T15:52:35.1141287Z Post job cleanup.
2025-02-24T15:52:35.1178657Z Post job cleanup.
2025-02-24T15:52:35.2210573Z [command]/usr/bin/git version
2025-02-24T15:52:35.2247052Z git version 2.48.1
2025-02-24T15:52:35.2297206Z Temporarily overriding HOME='/home/runner/work/_temp/64fbf72a-7cab-4c83-86ee-aebc1b63bc9a' before making global git config changes
2025-02-24T15:52:35.2298559Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T15:52:35.2303772Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T15:52:35.2338895Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T15:52:35.2371435Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T15:52:35.2601192Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T15:52:35.2621815Z http.https://github.com/.extraheader
2025-02-24T15:52:35.2634600Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-02-24T15:52:35.2666570Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T15:52:35.3025098Z Post job cleanup.
2025-02-24T15:52:35.3994161Z [command]/usr/bin/git version
2025-02-24T15:52:35.4030582Z git version 2.48.1
2025-02-24T15:52:35.4080325Z Temporarily overriding HOME='/home/runner/work/_temp/701e613c-0061-4363-b965-49ceb01533cc' before making global git config changes
2025-02-24T15:52:35.4082012Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T15:52:35.4086754Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-02-24T15:52:35.4121480Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T15:52:35.4153410Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T15:52:35.4387611Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T15:52:35.4409194Z http.https://github.com/.extraheader
2025-02-24T15:52:35.4421827Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-02-24T15:52:35.4451734Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T15:52:35.4780540Z Cleaning up orphan processes
