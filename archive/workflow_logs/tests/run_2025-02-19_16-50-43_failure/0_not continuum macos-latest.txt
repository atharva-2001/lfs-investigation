2025-02-24T15:38:20.9199339Z Requested labels: macos-latest
2025-02-24T15:38:20.9199751Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2982/merge
2025-02-24T15:38:20.9199898Z Waiting for a runner to pick up this job...
2025-02-24T15:42:20.1073029Z Job is waiting for a hosted runner to come online.
2025-02-24T15:42:23.8791518Z Job is about to start running on the hosted runner: GitHub Actions 34 (hosted)
2025-02-24T15:42:25.0690760Z Current runner version: '2.322.0'
2025-02-24T15:42:25.0711390Z ##[group]Operating System
2025-02-24T15:42:25.0711880Z macOS
2025-02-24T15:42:25.0712200Z 14.7.2
2025-02-24T15:42:25.0712500Z 23H311
2025-02-24T15:42:25.0712800Z ##[endgroup]
2025-02-24T15:42:25.0713120Z ##[group]Runner Image
2025-02-24T15:42:25.0713460Z Image: macos-14-arm64
2025-02-24T15:42:25.0713790Z Version: 20250120.774
2025-02-24T15:42:25.0714460Z Included Software: https://github.com/actions/runner-images/blob/macos-14-arm64/20250120.774/images/macos/macos-14-arm64-Readme.md
2025-02-24T15:42:25.0715400Z Image Release: https://github.com/actions/runner-images/releases/tag/macos-14-arm64%2F20250120.774
2025-02-24T15:42:25.0715980Z ##[endgroup]
2025-02-24T15:42:25.0716300Z ##[group]Runner Image Provisioner
2025-02-24T15:42:25.0716720Z 2.0.422.1+55c30c14fe2a0a1547db1b656933ae07d97649a9
2025-02-24T15:42:25.0717130Z ##[endgroup]
2025-02-24T15:42:25.0718460Z ##[group]GITHUB_TOKEN Permissions
2025-02-24T15:42:25.0719530Z Actions: read
2025-02-24T15:42:25.0719880Z Attestations: read
2025-02-24T15:42:25.0720200Z Checks: read
2025-02-24T15:42:25.0720510Z Contents: read
2025-02-24T15:42:25.0720830Z Deployments: read
2025-02-24T15:42:25.0721140Z Discussions: read
2025-02-24T15:42:25.0721440Z Issues: read
2025-02-24T15:42:25.0721730Z Metadata: read
2025-02-24T15:42:25.0722030Z Packages: read
2025-02-24T15:42:25.0722330Z Pages: read
2025-02-24T15:42:25.0722640Z PullRequests: read
2025-02-24T15:42:25.0722960Z RepositoryProjects: read
2025-02-24T15:42:25.0723300Z SecurityEvents: read
2025-02-24T15:42:25.0723620Z Statuses: read
2025-02-24T15:42:25.0723930Z ##[endgroup]
2025-02-24T15:42:25.0725770Z Secret source: None
2025-02-24T15:42:25.0726220Z Prepare workflow directory
2025-02-24T15:42:25.1070380Z Prepare all required actions
2025-02-24T15:42:25.1099290Z Getting action download info
2025-02-24T15:42:25.3075940Z ##[group]Download immutable action package 'actions/checkout@v4'
2025-02-24T15:42:25.3076910Z Version: 4.2.2
2025-02-24T15:42:25.3077850Z Digest: sha256:ccb2698953eaebd21c7bf6268a94f9c26518a7e38e27e0b83c1fe1ad049819b1
2025-02-24T15:42:25.3079020Z Source commit SHA: 11bd71901bbe5b1630ceea73d27597364c9af683
2025-02-24T15:42:25.3079690Z ##[endgroup]
2025-02-24T15:42:25.5563800Z ##[group]Download immutable action package 'actions/upload-artifact@v4'
2025-02-24T15:42:25.5564380Z Version: 4.6.1
2025-02-24T15:42:25.5564900Z Digest: sha256:3f6a28e7a1e0b5c8e2249e28da121a049fa5b91863b04390a46a82e4f8e2da98
2025-02-24T15:42:25.5565540Z Source commit SHA: 4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
2025-02-24T15:42:25.5566030Z ##[endgroup]
2025-02-24T15:42:26.2008800Z Complete job name: not continuum macos-latest 
2025-02-24T15:42:26.2472670Z ##[group]Run actions/checkout@v4
2025-02-24T15:42:26.2473230Z with:
2025-02-24T15:42:26.2473540Z   repository: tardis-sn/tardis
2025-02-24T15:42:26.2474120Z   token: ***
2025-02-24T15:42:26.2474410Z   ssh-strict: true
2025-02-24T15:42:26.2474700Z   ssh-user: git
2025-02-24T15:42:26.2475000Z   persist-credentials: true
2025-02-24T15:42:26.2475360Z   clean: true
2025-02-24T15:42:26.2475660Z   sparse-checkout-cone-mode: true
2025-02-24T15:42:26.2476010Z   fetch-depth: 1
2025-02-24T15:42:26.2476300Z   fetch-tags: false
2025-02-24T15:42:26.2476600Z   show-progress: true
2025-02-24T15:42:26.2476910Z   lfs: false
2025-02-24T15:42:26.2477190Z   submodules: false
2025-02-24T15:42:26.2477500Z   set-safe-directory: true
2025-02-24T15:42:26.2477930Z env:
2025-02-24T15:42:26.2478210Z   CACHE_NUMBER: 0
2025-02-24T15:42:26.2479000Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:42:26.2479860Z   CODECOV_TOKEN: 
2025-02-24T15:42:26.2480150Z ##[endgroup]
2025-02-24T15:42:26.5497380Z Syncing repository: tardis-sn/tardis
2025-02-24T15:42:26.5498780Z ##[group]Getting Git version info
2025-02-24T15:42:26.5499350Z Working directory is '/Users/runner/work/tardis/tardis'
2025-02-24T15:42:26.5500110Z [command]/opt/homebrew/bin/git version
2025-02-24T15:42:26.6023880Z git version 2.48.1
2025-02-24T15:42:26.6048220Z ##[endgroup]
2025-02-24T15:42:26.6056550Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/1dbeb45c-2354-43d5-a027-33f340714355/.gitconfig'
2025-02-24T15:42:26.6062360Z Temporarily overriding HOME='/Users/runner/work/_temp/1dbeb45c-2354-43d5-a027-33f340714355' before making global git config changes
2025-02-24T15:42:26.6063800Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T15:42:26.6066150Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis
2025-02-24T15:42:26.6274820Z Deleting the contents of '/Users/runner/work/tardis/tardis'
2025-02-24T15:42:26.6276770Z ##[group]Initializing the repository
2025-02-24T15:42:26.6281120Z [command]/opt/homebrew/bin/git init /Users/runner/work/tardis/tardis
2025-02-24T15:42:26.6459700Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-24T15:42:26.6461380Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-24T15:42:26.6462230Z hint: of your new repositories, which will suppress this warning, call:
2025-02-24T15:42:26.6462800Z hint:
2025-02-24T15:42:26.6463190Z hint: 	git config --global init.defaultBranch <name>
2025-02-24T15:42:26.6463690Z hint:
2025-02-24T15:42:26.6464130Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-24T15:42:26.6464840Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-24T15:42:26.6465400Z hint:
2025-02-24T15:42:26.6465730Z hint: 	git branch -m <name>
2025-02-24T15:42:26.6466300Z Initialized empty Git repository in /Users/runner/work/tardis/tardis/.git/
2025-02-24T15:42:26.6468340Z [command]/opt/homebrew/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-02-24T15:42:26.6534190Z ##[endgroup]
2025-02-24T15:42:26.6534930Z ##[group]Disabling automatic garbage collection
2025-02-24T15:42:26.6535530Z [command]/opt/homebrew/bin/git config --local gc.auto 0
2025-02-24T15:42:26.6579460Z ##[endgroup]
2025-02-24T15:42:26.6580110Z ##[group]Setting up auth
2025-02-24T15:42:26.6586280Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T15:42:26.6640850Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T15:42:26.7596930Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T15:42:26.7649780Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T15:42:26.8150160Z [command]/opt/homebrew/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-24T15:42:26.8270950Z ##[endgroup]
2025-02-24T15:42:26.8288950Z ##[group]Fetching the repository
2025-02-24T15:42:26.8299120Z [command]/opt/homebrew/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +50944b3beaa9421ad7c28c54865249fb1869e541:refs/remotes/pull/2982/merge
2025-02-24T15:42:28.7554710Z From https://github.com/tardis-sn/tardis
2025-02-24T15:42:28.7556330Z  * [new ref]         50944b3beaa9421ad7c28c54865249fb1869e541 -> pull/2982/merge
2025-02-24T15:42:28.7619160Z ##[endgroup]
2025-02-24T15:42:28.7619980Z ##[group]Determining the checkout info
2025-02-24T15:42:28.7620850Z ##[endgroup]
2025-02-24T15:42:28.7624500Z [command]/opt/homebrew/bin/git sparse-checkout disable
2025-02-24T15:42:28.7687160Z [command]/opt/homebrew/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-24T15:42:28.7739680Z ##[group]Checking out the ref
2025-02-24T15:42:28.7741840Z [command]/opt/homebrew/bin/git checkout --progress --force refs/remotes/pull/2982/merge
2025-02-24T15:42:28.9916240Z HEAD is now at 50944b3 Merge 26e8a2e16910722ef603a0d10aa238b17514f1d8 into cec8b531cc56e66219fe3ca2efdbf837c008b852
2025-02-24T15:42:28.9924970Z ##[endgroup]
2025-02-24T15:42:28.9990440Z [command]/opt/homebrew/bin/git log -1 --format=%H
2025-02-24T15:42:29.0041170Z 50944b3beaa9421ad7c28c54865249fb1869e541
2025-02-24T15:42:29.0297700Z Prepare all required actions
2025-02-24T15:42:29.0298560Z Getting action download info
2025-02-24T15:42:29.2124890Z ##[group]Download immutable action package 'actions/cache@v4'
2025-02-24T15:42:29.2125930Z Version: 4.2.1
2025-02-24T15:42:29.2126920Z Digest: sha256:b0404c9628d43aa6855629075b28f32cadf8efc5c26198438149f78500112940
2025-02-24T15:42:29.2128260Z Source commit SHA: 0c907a75c2c80ebcb7f088228285e798b750cf8f
2025-02-24T15:42:29.2129190Z ##[endgroup]
2025-02-24T15:42:29.8027320Z ##[group]Run ./.github/actions/setup_lfs
2025-02-24T15:42:29.8027540Z with:
2025-02-24T15:42:29.8027730Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-02-24T15:42:29.8028020Z   atom-data-sparse: false
2025-02-24T15:42:29.8028200Z env:
2025-02-24T15:42:29.8028330Z   CACHE_NUMBER: 0
2025-02-24T15:42:29.8028830Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:42:29.8029470Z   CODECOV_TOKEN: 
2025-02-24T15:42:29.8029650Z ##[endgroup]
2025-02-24T15:42:29.8145490Z ##[group]Run actions/checkout@v4
2025-02-24T15:42:29.8145700Z with:
2025-02-24T15:42:29.8145860Z   repository: tardis-sn/tardis-regression-data
2025-02-24T15:42:29.8146090Z   path: tardis-regression-data
2025-02-24T15:42:29.8146260Z   lfs: false
2025-02-24T15:42:29.8146500Z   token: ***
2025-02-24T15:42:29.8146630Z   ssh-strict: true
2025-02-24T15:42:29.8146760Z   ssh-user: git
2025-02-24T15:42:29.8146910Z   persist-credentials: true
2025-02-24T15:42:29.8147070Z   clean: true
2025-02-24T15:42:29.8147210Z   sparse-checkout-cone-mode: true
2025-02-24T15:42:29.8147390Z   fetch-depth: 1
2025-02-24T15:42:29.8147550Z   fetch-tags: false
2025-02-24T15:42:29.8147690Z   show-progress: true
2025-02-24T15:42:29.8147830Z   submodules: false
2025-02-24T15:42:29.8147980Z   set-safe-directory: true
2025-02-24T15:42:29.8148130Z env:
2025-02-24T15:42:29.8148250Z   CACHE_NUMBER: 0
2025-02-24T15:42:29.8148750Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:42:29.8149250Z   CODECOV_TOKEN: 
2025-02-24T15:42:29.8149380Z ##[endgroup]
2025-02-24T15:42:29.9270840Z Syncing repository: tardis-sn/tardis-regression-data
2025-02-24T15:42:29.9271610Z ##[group]Getting Git version info
2025-02-24T15:42:29.9271980Z Working directory is '/Users/runner/work/tardis/tardis/tardis-regression-data'
2025-02-24T15:42:29.9291700Z [command]/opt/homebrew/bin/git version
2025-02-24T15:42:29.9384310Z git version 2.48.1
2025-02-24T15:42:29.9398760Z ##[endgroup]
2025-02-24T15:42:29.9400270Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/545d2469-858b-4377-9d2e-75cac23a4356/.gitconfig'
2025-02-24T15:42:29.9410590Z Temporarily overriding HOME='/Users/runner/work/_temp/545d2469-858b-4377-9d2e-75cac23a4356' before making global git config changes
2025-02-24T15:42:29.9411510Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T15:42:29.9416210Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T15:42:29.9770070Z ##[group]Initializing the repository
2025-02-24T15:42:29.9773020Z [command]/opt/homebrew/bin/git init /Users/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T15:42:29.9908010Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-02-24T15:42:29.9923880Z hint: is subject to change. To configure the initial branch name to use in all
2025-02-24T15:42:29.9924490Z hint: of your new repositories, which will suppress this warning, call:
2025-02-24T15:42:29.9925260Z hint:
2025-02-24T15:42:29.9925500Z hint: 	git config --global init.defaultBranch <name>
2025-02-24T15:42:29.9925740Z hint:
2025-02-24T15:42:29.9925960Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-02-24T15:42:29.9926710Z hint: 'development'. The just-created branch can be renamed via this command:
2025-02-24T15:42:29.9927040Z hint:
2025-02-24T15:42:29.9927210Z hint: 	git branch -m <name>
2025-02-24T15:42:29.9927620Z Initialized empty Git repository in /Users/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-02-24T15:42:29.9928610Z [command]/opt/homebrew/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-02-24T15:42:29.9975960Z ##[endgroup]
2025-02-24T15:42:29.9976480Z ##[group]Disabling automatic garbage collection
2025-02-24T15:42:29.9977930Z [command]/opt/homebrew/bin/git config --local gc.auto 0
2025-02-24T15:42:30.0031670Z ##[endgroup]
2025-02-24T15:42:30.0032020Z ##[group]Setting up auth
2025-02-24T15:42:30.0036480Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T15:42:30.0090240Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T15:42:30.0639620Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T15:42:30.0683340Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T15:42:30.1355860Z [command]/opt/homebrew/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-02-24T15:42:30.1482500Z ##[endgroup]
2025-02-24T15:42:30.1483480Z ##[group]Determining the default branch
2025-02-24T15:42:30.1484210Z Retrieving the default branch name
2025-02-24T15:42:30.5859390Z Default branch 'main'
2025-02-24T15:42:30.5863070Z ##[endgroup]
2025-02-24T15:42:30.5900520Z ##[group]Fetching the repository
2025-02-24T15:42:30.5904300Z [command]/opt/homebrew/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-02-24T15:42:31.6297500Z From https://github.com/tardis-sn/tardis-regression-data
2025-02-24T15:42:31.6298060Z  * [new branch]      main       -> origin/main
2025-02-24T15:42:31.6615920Z ##[endgroup]
2025-02-24T15:42:31.6617020Z ##[group]Determining the checkout info
2025-02-24T15:42:31.6618740Z ##[endgroup]
2025-02-24T15:42:31.6620810Z [command]/opt/homebrew/bin/git sparse-checkout disable
2025-02-24T15:42:31.6661880Z [command]/opt/homebrew/bin/git config --local --unset-all extensions.worktreeConfig
2025-02-24T15:42:31.6715380Z ##[group]Checking out the ref
2025-02-24T15:42:31.6719040Z [command]/opt/homebrew/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-02-24T15:42:32.2246560Z Switched to a new branch 'main'
2025-02-24T15:42:32.2250110Z branch 'main' set up to track 'origin/main'.
2025-02-24T15:42:32.3305570Z ##[endgroup]
2025-02-24T15:42:32.3369800Z [command]/opt/homebrew/bin/git log -1 --format=%H
2025-02-24T15:42:32.3437640Z b2fdf418ac1a3631f8c3d2a5f392b6ebfa09ba0b
2025-02-24T15:42:32.3833310Z ##[group]Run if [ "false" == "true" ]; then
2025-02-24T15:42:32.3833690Z [36;1mif [ "false" == "true" ]; then[0m
2025-02-24T15:42:32.3833950Z [36;1m  echo "Using atom data sparse checkout"[0m
2025-02-24T15:42:32.3834260Z [36;1m  echo "atom_data/kurucz_cd23_chianti_H_He.h5" > .lfs-files-list[0m
2025-02-24T15:42:32.3834560Z [36;1melse[0m
2025-02-24T15:42:32.3834710Z [36;1m  echo "Using full repository checkout"[0m
2025-02-24T15:42:32.3834980Z [36;1m  git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-files-list[0m
2025-02-24T15:42:32.3835220Z [36;1mfi[0m
2025-02-24T15:42:32.3995120Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T15:42:32.3996340Z env:
2025-02-24T15:42:32.3999570Z   CACHE_NUMBER: 0
2025-02-24T15:42:32.4000150Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:42:32.4000700Z   CODECOV_TOKEN: 
2025-02-24T15:42:32.4001680Z ##[endgroup]
2025-02-24T15:42:32.4555310Z Using full repository checkout
2025-02-24T15:42:32.7303440Z ##[group]Run actions/cache/restore@v4
2025-02-24T15:42:32.7303690Z with:
2025-02-24T15:42:32.7303840Z   path: tardis-regression-data/.git/lfs
2025-02-24T15:42:32.7304310Z   key: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T15:42:32.7304770Z   fail-on-cache-miss: true
2025-02-24T15:42:32.7304940Z   enableCrossOsArchive: false
2025-02-24T15:42:32.7305130Z   lookup-only: false
2025-02-24T15:42:32.7305270Z env:
2025-02-24T15:42:32.7305380Z   CACHE_NUMBER: 0
2025-02-24T15:42:32.7305860Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:42:32.7306320Z   CODECOV_TOKEN: 
2025-02-24T15:42:32.7306440Z ##[endgroup]
2025-02-24T15:42:33.0486770Z Cache hit for: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T15:42:34.2333980Z Received 37748736 of 2160718086 (1.7%), 35.9 MBs/sec
2025-02-24T15:42:35.2332310Z Received 125829120 of 2160718086 (5.8%), 59.6 MBs/sec
2025-02-24T15:42:36.2345440Z Received 184549376 of 2160718086 (8.5%), 58.4 MBs/sec
2025-02-24T15:42:37.2383300Z Received 260046848 of 2160718086 (12.0%), 61.7 MBs/sec
2025-02-24T15:42:38.2482290Z Received 301989888 of 2160718086 (14.0%), 57.3 MBs/sec
2025-02-24T15:42:39.2504130Z Received 402653184 of 2160718086 (18.6%), 63.7 MBs/sec
2025-02-24T15:42:40.2502620Z Received 503316480 of 2160718086 (23.3%), 68.3 MBs/sec
2025-02-24T15:42:41.2507280Z Received 562036736 of 2160718086 (26.0%), 66.7 MBs/sec
2025-02-24T15:42:42.2821990Z Received 671088640 of 2160718086 (31.1%), 70.7 MBs/sec
2025-02-24T15:42:43.2707990Z Received 759169024 of 2160718086 (35.1%), 72.0 MBs/sec
2025-02-24T15:42:44.2712760Z Received 826277888 of 2160718086 (38.2%), 71.3 MBs/sec
2025-02-24T15:42:45.3028790Z Received 939524096 of 2160718086 (43.5%), 74.2 MBs/sec
2025-02-24T15:42:46.3024320Z Received 1031798784 of 2160718086 (47.8%), 75.2 MBs/sec
2025-02-24T15:42:47.3026410Z Received 1098907648 of 2160718086 (50.9%), 74.4 MBs/sec
2025-02-24T15:42:48.3219980Z Received 1199570944 of 2160718086 (55.5%), 75.7 MBs/sec
2025-02-24T15:42:49.3221490Z Received 1279262720 of 2160718086 (59.2%), 75.8 MBs/sec
2025-02-24T15:42:50.3223850Z Received 1371537408 of 2160718086 (63.5%), 76.5 MBs/sec
2025-02-24T15:42:51.3275610Z Received 1476395008 of 2160718086 (68.3%), 77.8 MBs/sec
2025-02-24T15:42:52.3337510Z Received 1572864000 of 2160718086 (72.8%), 78.5 MBs/sec
2025-02-24T15:42:53.3288960Z Received 1665138688 of 2160718086 (77.1%), 79.0 MBs/sec
2025-02-24T15:42:54.3315840Z Received 1744830464 of 2160718086 (80.8%), 78.8 MBs/sec
2025-02-24T15:42:55.3345690Z Received 1841299456 of 2160718086 (85.2%), 79.4 MBs/sec
2025-02-24T15:42:56.3323440Z Received 1916796928 of 2160718086 (88.7%), 79.1 MBs/sec
2025-02-24T15:42:57.3352450Z Received 2004877312 of 2160718086 (92.8%), 79.3 MBs/sec
2025-02-24T15:42:58.3388050Z Received 2067791872 of 2160718086 (95.7%), 78.5 MBs/sec
2025-02-24T15:42:59.3383530Z Received 2148135174 of 2160718086 (99.4%), 78.4 MBs/sec
2025-02-24T15:42:59.5582650Z Received 2160718086 of 2160718086 (100.0%), 78.2 MBs/sec
2025-02-24T15:42:59.5617080Z Cache Size: ~2061 MB (2160718086 B)
2025-02-24T15:42:59.5656120Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/adcbb1d2-c1d3-41f3-9eb1-f8c14d51792e/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-02-24T15:43:11.2360090Z Cache restored successfully
2025-02-24T15:43:11.3416670Z Cache restored from key: tardis-regression-full-data-6e3f921411cf0a4e16018f0781785ab8728ab151c8f95ea20b0c8e8609b9a332-tardis-sn/tardis-regression-data-v1
2025-02-24T15:43:11.3628000Z ##[group]Run git lfs checkout
2025-02-24T15:43:11.3628320Z [36;1mgit lfs checkout[0m
2025-02-24T15:43:11.3731340Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T15:43:11.3731710Z env:
2025-02-24T15:43:11.3732040Z   CACHE_NUMBER: 0
2025-02-24T15:43:11.3732570Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:43:11.3733250Z   CODECOV_TOKEN: 
2025-02-24T15:43:11.3733470Z ##[endgroup]
2025-02-24T15:43:23.3829810Z Checking out LFS objects: 100% (204/204), 5.7 GB | 421 MB/s, done.
2025-02-24T15:43:36.6425240Z Prepare all required actions
2025-02-24T15:43:36.6425740Z Getting action download info
2025-02-24T15:43:36.8300160Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-02-24T15:43:37.9361620Z ##[group]Run ./.github/actions/setup_env
2025-02-24T15:43:37.9361820Z with:
2025-02-24T15:43:37.9361960Z   os-label: osx-arm64
2025-02-24T15:43:37.9362140Z env:
2025-02-24T15:43:37.9362530Z   CACHE_NUMBER: 0
2025-02-24T15:43:37.9363210Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:43:37.9364150Z   CODECOV_TOKEN: 
2025-02-24T15:43:37.9364500Z ##[endgroup]
2025-02-24T15:43:37.9395170Z ##[group]Run file_hash=$(cat conda-osx-arm64.lock | shasum -a 256 | cut -d' ' -f1)
2025-02-24T15:43:37.9395660Z [36;1mfile_hash=$(cat conda-osx-arm64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-02-24T15:43:37.9396210Z [36;1mecho "file_hash=tardis-conda-env-osx-arm64-${file_hash}-v1" >> "${GITHUB_OUTPUT}"[0m
2025-02-24T15:43:37.9465930Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-02-24T15:43:37.9466220Z env:
2025-02-24T15:43:37.9466360Z   CACHE_NUMBER: 0
2025-02-24T15:43:37.9466870Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:43:37.9467360Z   CODECOV_TOKEN: 
2025-02-24T15:43:37.9467480Z ##[endgroup]
2025-02-24T15:43:38.0625480Z ##[group]Run mamba-org/setup-micromamba@v1
2025-02-24T15:43:38.0625690Z with:
2025-02-24T15:43:38.0625840Z   environment-file: conda-osx-arm64.lock
2025-02-24T15:43:38.0626270Z   cache-environment-key: tardis-conda-env-osx-arm64-bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824-v1
2025-02-24T15:43:38.0626930Z   cache-downloads-key: tardis-conda-env-osx-arm64-bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824-v1
2025-02-24T15:43:38.0627350Z   environment-name: tardis
2025-02-24T15:43:38.0627540Z   cache-environment: true
2025-02-24T15:43:38.0627710Z   cache-downloads: true
2025-02-24T15:43:38.0627840Z env:
2025-02-24T15:43:38.0627980Z   CACHE_NUMBER: 0
2025-02-24T15:43:38.0628430Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:43:38.0628910Z   CODECOV_TOKEN: 
2025-02-24T15:43:38.0629030Z ##[endgroup]
2025-02-24T15:43:38.2124790Z Will download micromamba to /Users/runner/micromamba-bin/micromamba
2025-02-24T15:43:38.2131680Z ##[group]Install micromamba
2025-02-24T15:43:38.8365600Z micromamba installed to /Users/runner/micromamba-bin/micromamba
2025-02-24T15:43:38.8366160Z ##[endgroup]
2025-02-24T15:43:38.8366560Z Adding conda-forge to condarc channels ...
2025-02-24T15:43:38.8374360Z ##[group]Initialize micromamba for bash.
2025-02-24T15:43:38.8385450Z [command]/Users/runner/micromamba-bin/micromamba shell init -s bash -r /Users/runner/micromamba --log-level warning --rc-file /Users/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:43:38.8692020Z Modifying RC file "/Users/runner/.bash_profile"
2025-02-24T15:43:38.8696550Z Generating config for root prefix [1m"/Users/runner/micromamba"[0m
2025-02-24T15:43:38.8697010Z Setting mamba executable to: [1m"/Users/runner/micromamba-bin/micromamba"[0m
2025-02-24T15:43:38.8697400Z Adding (or replacing) the following in your "/Users/runner/.bash_profile" file
2025-02-24T15:43:38.8697640Z 
2025-02-24T15:43:38.8697720Z # >>> mamba initialize >>>
2025-02-24T15:43:38.8697970Z # !! Contents within this block are managed by 'mamba init' !!
2025-02-24T15:43:38.8698280Z export MAMBA_EXE='/Users/runner/micromamba-bin/micromamba';
2025-02-24T15:43:38.8698570Z export MAMBA_ROOT_PREFIX='/Users/runner/micromamba';
2025-02-24T15:43:38.8699010Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-02-24T15:43:38.8699870Z if [ $? -eq 0 ]; then
2025-02-24T15:43:38.8700080Z     eval "$__mamba_setup"
2025-02-24T15:43:38.8700260Z else
2025-02-24T15:43:38.8700470Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-02-24T15:43:38.8700730Z fi
2025-02-24T15:43:38.8700860Z unset __mamba_setup
2025-02-24T15:43:38.8701010Z # <<< mamba initialize <<<
2025-02-24T15:43:38.8701120Z 
2025-02-24T15:43:38.8701880Z ##[endgroup]
2025-02-24T15:43:38.8702640Z ##[group]Restoring downloads from `/Users/runner/micromamba/pkgs` ...
2025-02-24T15:43:40.2602080Z Received 58720256 of 310594474 (18.9%), 55.9 MBs/sec
2025-02-24T15:43:41.2654730Z Received 155189248 of 310594474 (50.0%), 73.9 MBs/sec
2025-02-24T15:43:42.2615210Z Received 268435456 of 310594474 (86.4%), 85.2 MBs/sec
2025-02-24T15:43:43.2638740Z Received 310594474 of 310594474 (100.0%), 73.9 MBs/sec
2025-02-24T15:43:43.3431240Z Cache Size: ~296 MB (310594474 B)
2025-02-24T15:43:43.3465080Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/9efebf6a-6e31-4e1d-a7b3-031f3775df34/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-02-24T15:43:44.1785510Z Cache restored successfully
2025-02-24T15:43:44.1829230Z Restored cache with key `tardis-conda-env-osx-arm64-bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824-v1-osx-arm64`
2025-02-24T15:43:44.1831920Z ##[endgroup]
2025-02-24T15:43:44.1836800Z ##[group]Restoring environment `tardis` from `/Users/runner/micromamba/envs/tardis` ...
2025-02-24T15:43:45.5595290Z Received 67108864 of 385513979 (17.4%), 63.8 MBs/sec
2025-02-24T15:43:46.5596570Z Received 180355072 of 385513979 (46.8%), 85.9 MBs/sec
2025-02-24T15:43:47.5613190Z Received 322961408 of 385513979 (83.8%), 102.5 MBs/sec
2025-02-24T15:43:48.0712920Z Cache Size: ~368 MB (385513979 B)
2025-02-24T15:43:48.0741340Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/42f1cb22-b23f-415c-b1a5-e18505c89c83/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-02-24T15:43:48.5731450Z Received 385513979 of 385513979 (100.0%), 91.5 MBs/sec
2025-02-24T15:44:01.3246040Z Cache restored successfully
2025-02-24T15:44:01.3273130Z Restored cache with key `tardis-conda-env-osx-arm64-bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824-v1-osx-arm64-tardis-args-4f53cda-root-873f6fe-bin-[object Promise]-file-bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824`
2025-02-24T15:44:01.3276310Z ##[endgroup]
2025-02-24T15:44:01.3276640Z Adding environment tardis to auto-activate bash ...
2025-02-24T15:44:01.3287630Z Generating micromamba run shell.
2025-02-24T15:44:01.3298540Z ##[endgroup]
2025-02-24T15:44:01.3304490Z Set environment variables.
2025-02-24T15:44:01.3307830Z ##[group]micromamba info
2025-02-24T15:44:01.3311210Z [command]/Users/runner/micromamba-bin/micromamba info -r /Users/runner/micromamba -n tardis
2025-02-24T15:44:01.7423370Z 
2025-02-24T15:44:01.7423810Z        libmamba version : 1.5.10
2025-02-24T15:44:01.7425490Z      micromamba version : 1.5.10
2025-02-24T15:44:01.7426150Z            curl version : libcurl/8.10.1 (OpenSSL/3.3.2) SecureTransport zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-02-24T15:44:01.7431010Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-02-24T15:44:01.7431530Z        envs directories : /Users/runner/micromamba/envs
2025-02-24T15:44:01.7431870Z           package cache : /Users/runner/micromamba/pkgs
2025-02-24T15:44:01.7432320Z                           /Users/runner/.mamba/pkgs
2025-02-24T15:44:01.7432670Z             environment : tardis
2025-02-24T15:44:01.7433070Z            env location : /Users/runner/micromamba/envs/tardis
2025-02-24T15:44:01.7433430Z       user config files : /Users/runner/.mambarc
2025-02-24T15:44:01.7433940Z  populated config files : /Users/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:44:01.7434310Z        virtual packages : __unix=0=0
2025-02-24T15:44:01.7434630Z                           __osx=14.7.2=0
2025-02-24T15:44:01.7438560Z                           __archspec=1=arm64
2025-02-24T15:44:01.7439340Z                channels : https://conda.anaconda.org/conda-forge/osx-arm64
2025-02-24T15:44:01.7439720Z                           https://conda.anaconda.org/conda-forge/noarch
2025-02-24T15:44:01.7440140Z        base environment : /Users/runner/micromamba
2025-02-24T15:44:01.7440430Z                platform : osx-arm64
2025-02-24T15:44:01.7441010Z ##[endgroup]
2025-02-24T15:44:01.7441420Z ##[group]micromamba list
2025-02-24T15:44:01.7441960Z [command]/Users/runner/micromamba-bin/micromamba list -r /Users/runner/micromamba -n tardis
2025-02-24T15:44:02.0848400Z List of packages in environment: "/Users/runner/micromamba/envs/tardis"
2025-02-24T15:44:02.0849030Z 
2025-02-24T15:44:02.0849620Z   Name                           Version              Build                    Channel    
2025-02-24T15:44:02.0851870Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-02-24T15:44:02.0852530Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0853010Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0853540Z   appnope                        0.1.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0854070Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0854780Z   argon2-cffi-bindings           21.2.0               py312h02f2b3b_4          conda-forge
2025-02-24T15:44:02.0857710Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0858200Z   astropy                        6.1.1                py312hbebd99a_0          conda-forge
2025-02-24T15:44:02.0858810Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0859340Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0859890Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0860380Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0862010Z   atk-1.0                        2.38.0               hd03087b_2               conda-forge
2025-02-24T15:44:02.0862430Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-02-24T15:44:02.0862880Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0863300Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-02-24T15:44:02.0863760Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0864180Z   blosc                          1.21.5               h9c252e8_1               conda-forge
2025-02-24T15:44:02.0864660Z   brotli                         1.1.0                hb547adb_1               conda-forge
2025-02-24T15:44:02.0865070Z   brotli-bin                     1.1.0                hb547adb_1               conda-forge
2025-02-24T15:44:02.0865960Z   brotli-python                  1.1.0                py312h9f69965_1          conda-forge
2025-02-24T15:44:02.0866450Z   bzip2                          1.0.8                h93a5062_5               conda-forge
2025-02-24T15:44:02.0866810Z   c-ares                         1.28.1               h93a5062_0               conda-forge
2025-02-24T15:44:02.0867210Z   c-blosc2                       2.14.4               ha57e6be_1               conda-forge
2025-02-24T15:44:02.0867580Z   ca-certificates                2024.6.2             hf0a4a13_0               conda-forge
2025-02-24T15:44:02.0868100Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-02-24T15:44:02.0868870Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-02-24T15:44:02.0869360Z   cairo                          1.18.0               hd1e100b_0               conda-forge
2025-02-24T15:44:02.0869820Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0870260Z   cffi                           1.16.0               py312h8e38eb3_0          conda-forge
2025-02-24T15:44:02.0870710Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0871100Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-02-24T15:44:02.0871550Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0871970Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0872330Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0872720Z   commonmark                     0.9.1                py_0                     conda-forge
2025-02-24T15:44:02.0873070Z   contourpy                      1.2.1                py312h0fef576_0          conda-forge
2025-02-24T15:44:02.0873510Z   coverage                       7.5.3                py312h7e5086c_0          conda-forge
2025-02-24T15:44:02.0873850Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0874310Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-02-24T15:44:02.0874690Z   debugpy                        1.8.1                py312h20a0b95_0          conda-forge
2025-02-24T15:44:02.0875120Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0875530Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0875970Z   docutils                       0.20.1               py312h81bd7bf_3          conda-forge
2025-02-24T15:44:02.0876340Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0876740Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0877110Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-02-24T15:44:02.0877520Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0877870Z   expat                          2.6.2                hebf3989_0               conda-forge
2025-02-24T15:44:02.0878340Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-02-24T15:44:02.0878750Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-02-24T15:44:02.0879270Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-02-24T15:44:02.0879700Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-02-24T15:44:02.0880230Z   fontconfig                     2.14.2               h82840c6_0               conda-forge
2025-02-24T15:44:02.0882310Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-02-24T15:44:02.0882780Z   fonts-conda-forge              1                    0                        conda-forge
2025-02-24T15:44:02.0883180Z   fonttools                      4.53.0               py312h7e5086c_0          conda-forge
2025-02-24T15:44:02.0884100Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0884640Z   freetype                       2.12.1               hadb7bae_2               conda-forge
2025-02-24T15:44:02.0885370Z   fribidi                        1.0.10               h27ca646_0               conda-forge
2025-02-24T15:44:02.0886150Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0886880Z   gdk-pixbuf                     2.42.12              h7ddc832_0               conda-forge
2025-02-24T15:44:02.0887380Z   gettext                        0.22.5               h8fbad5d_2               conda-forge
2025-02-24T15:44:02.0888330Z   gettext-tools                  0.22.5               h8fbad5d_2               conda-forge
2025-02-24T15:44:02.0914650Z   giflib                         5.2.2                h93a5062_0               conda-forge
2025-02-24T15:44:02.0915080Z   git-lfs                        3.5.1                hce30654_0               conda-forge
2025-02-24T15:44:02.0915520Z   gmp                            6.3.0                hebf3989_1               conda-forge
2025-02-24T15:44:02.0915870Z   gmpy2                          2.1.5                py312hfa9fade_1          conda-forge
2025-02-24T15:44:02.0916380Z   graphite2                      1.3.13               hebf3989_1003            conda-forge
2025-02-24T15:44:02.0916760Z   graphviz                       11.0.0               h9bb9bc9_0               conda-forge
2025-02-24T15:44:02.0917170Z   gtk2                           2.24.33              h7895bb2_4               conda-forge
2025-02-24T15:44:02.0917510Z   gts                            0.7.6                he42f4ea_4               conda-forge
2025-02-24T15:44:02.0917900Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0918170Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0918440Z   h5py                           3.11.0               nompi_py312h903599c_102  conda-forge
2025-02-24T15:44:02.0918720Z   harfbuzz                       8.5.0                h1836168_0               conda-forge
2025-02-24T15:44:02.0919000Z   hdf5                           1.14.3               nompi_hec07895_105       conda-forge
2025-02-24T15:44:02.0919280Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-02-24T15:44:02.0919750Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0920020Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0920300Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0920570Z   icu                            73.2                 hc8870d7_0               conda-forge
2025-02-24T15:44:02.0920890Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0921210Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0921520Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-02-24T15:44:02.0921850Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-02-24T15:44:02.0922320Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0922870Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0923450Z   ipykernel                      6.29.4               pyh57ce528_0             conda-forge
2025-02-24T15:44:02.0923800Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-02-24T15:44:02.0924160Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:44:02.0924560Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0924850Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0925130Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0925400Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0926050Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0926390Z   jsonpointer                    3.0.0                py312h81bd7bf_0          conda-forge
2025-02-24T15:44:02.0926710Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0927160Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0927640Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0928010Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0928350Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0928770Z   jupyter_core                   5.7.2                py312h81bd7bf_0          conda-forge
2025-02-24T15:44:02.0929140Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0931970Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0932410Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0932890Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0933320Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:44:02.0933810Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0934290Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0934720Z   kiwisolver                     1.4.5                py312h389731b_1          conda-forge
2025-02-24T15:44:02.0935190Z   krb5                           1.21.2               h92f50d5_0               conda-forge
2025-02-24T15:44:02.0935590Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-02-24T15:44:02.0936130Z   lcms2                          2.16                 ha0e7c42_0               conda-forge
2025-02-24T15:44:02.0936510Z   lerc                           4.0.0                h9a09cb3_0               conda-forge
2025-02-24T15:44:02.0936940Z   libaec                         1.1.3                hebf3989_0               conda-forge
2025-02-24T15:44:02.0937350Z   libasprintf                    0.22.5               h8fbad5d_2               conda-forge
2025-02-24T15:44:02.0937830Z   libasprintf-devel              0.22.5               h8fbad5d_2               conda-forge
2025-02-24T15:44:02.0938180Z   libblas                        3.9.0                22_osxarm64_openblas     conda-forge
2025-02-24T15:44:02.0938620Z   libbrotlicommon                1.1.0                hb547adb_1               conda-forge
2025-02-24T15:44:02.0939010Z   libbrotlidec                   1.1.0                hb547adb_1               conda-forge
2025-02-24T15:44:02.0939410Z   libbrotlienc                   1.1.0                hb547adb_1               conda-forge
2025-02-24T15:44:02.0939800Z   libcblas                       3.9.0                22_osxarm64_openblas     conda-forge
2025-02-24T15:44:02.0940380Z   libcurl                        8.8.0                h7b6f9a7_0               conda-forge
2025-02-24T15:44:02.0940760Z   libcxx                         17.0.6               h5f092b4_0               conda-forge
2025-02-24T15:44:02.0941080Z   libdeflate                     1.20                 h93a5062_0               conda-forge
2025-02-24T15:44:02.0941480Z   libedit                        3.1.20191231         hc8eb9b7_2               conda-forge
2025-02-24T15:44:02.0941850Z   libev                          4.33                 h93a5062_2               conda-forge
2025-02-24T15:44:02.0942260Z   libexpat                       2.6.2                hebf3989_0               conda-forge
2025-02-24T15:44:02.0942710Z   libffi                         3.4.2                h3422bc3_5               conda-forge
2025-02-24T15:44:02.0943110Z   libgd                          2.3.3                hfdf3952_9               conda-forge
2025-02-24T15:44:02.0943420Z   libgettextpo                   0.22.5               h8fbad5d_2               conda-forge
2025-02-24T15:44:02.0943770Z   libgettextpo-devel             0.22.5               h8fbad5d_2               conda-forge
2025-02-24T15:44:02.0944160Z   libgfortran                    5.0.0                13_2_0_hd922786_3        conda-forge
2025-02-24T15:44:02.0944520Z   libgfortran5                   13.2.0               hf226fd6_3               conda-forge
2025-02-24T15:44:02.0944900Z   libglib                        2.80.2               h59d46d9_1               conda-forge
2025-02-24T15:44:02.0945200Z   libiconv                       1.17                 h0d3ecfb_2               conda-forge
2025-02-24T15:44:02.0945510Z   libintl                        0.22.5               h8fbad5d_2               conda-forge
2025-02-24T15:44:02.0945840Z   libintl-devel                  0.22.5               h8fbad5d_2               conda-forge
2025-02-24T15:44:02.0946240Z   libjpeg-turbo                  3.0.0                hb547adb_1               conda-forge
2025-02-24T15:44:02.0946630Z   liblapack                      3.9.0                22_osxarm64_openblas     conda-forge
2025-02-24T15:44:02.0946950Z   libllvm14                      14.0.6               hd1a9a77_4               conda-forge
2025-02-24T15:44:02.0947310Z   libnghttp2                     1.58.0               ha4dd798_1               conda-forge
2025-02-24T15:44:02.0947630Z   libopenblas                    0.3.27               openmp_h6c19121_0        conda-forge
2025-02-24T15:44:02.0947910Z   libpng                         1.6.43               h091b4b1_0               conda-forge
2025-02-24T15:44:02.0948210Z   librsvg                        2.58.1               hbc281fb_0               conda-forge
2025-02-24T15:44:02.0948490Z   libsodium                      1.0.18               h27ca646_1               conda-forge
2025-02-24T15:44:02.0948820Z   libsqlite                      3.46.0               hfb93653_0               conda-forge
2025-02-24T15:44:02.0949090Z   libssh2                        1.11.0               h7a5bd25_0               conda-forge
2025-02-24T15:44:02.0949490Z   libtiff                        4.6.0                h07db509_3               conda-forge
2025-02-24T15:44:02.0949790Z   libwebp                        1.4.0                h54798ee_0               conda-forge
2025-02-24T15:44:02.0950160Z   libwebp-base                   1.4.0                h93a5062_0               conda-forge
2025-02-24T15:44:02.0950500Z   libxcb                         1.16                 hf2054a2_0               conda-forge
2025-02-24T15:44:02.0950790Z   libxml2                        2.12.7               ha661575_1               conda-forge
2025-02-24T15:44:02.0951110Z   libxslt                        1.1.39               h223e5b9_0               conda-forge
2025-02-24T15:44:02.0951480Z   libzlib                        1.3.1                hfb2fe0b_1               conda-forge
2025-02-24T15:44:02.0951830Z   llvm-openmp                    18.1.7               hde57baf_0               conda-forge
2025-02-24T15:44:02.0952260Z   llvmlite                       0.42.0               py312h17030e7_1          conda-forge
2025-02-24T15:44:02.0952600Z   lxml                           5.2.2                py312h0e5ab22_0          conda-forge
2025-02-24T15:44:02.0952890Z   lz4-c                          1.9.4                hb7217d7_0               conda-forge
2025-02-24T15:44:02.0953240Z   markupsafe                     2.1.5                py312he37b823_0          conda-forge
2025-02-24T15:44:02.0953560Z   matplotlib-base                3.8.4                py312h4479663_2          conda-forge
2025-02-24T15:44:02.0953980Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0954400Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0954710Z   mpc                            1.3.1                h91ba8db_0               conda-forge
2025-02-24T15:44:02.0954960Z   mpfr                           4.2.1                h41d338b_1               conda-forge
2025-02-24T15:44:02.0955240Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0955580Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-02-24T15:44:02.0955880Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-02-24T15:44:02.0956260Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0956570Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0956900Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-02-24T15:44:02.0957230Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-02-24T15:44:02.0957570Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-02-24T15:44:02.0957950Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0958270Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0958580Z   ncurses                        6.5                  hb89a1cb_0               conda-forge
2025-02-24T15:44:02.0958910Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0959280Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-02-24T15:44:02.0959550Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0959920Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0960230Z   numba                          0.59.1               py312hbaff935_0          conda-forge
2025-02-24T15:44:02.0960540Z   numexpr                        2.10.0               py312h8ae5369_0          conda-forge
2025-02-24T15:44:02.0960810Z   numpy                          1.26.4               py312h8442bc7_0          conda-forge
2025-02-24T15:44:02.0961170Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:44:02.0961480Z   openjpeg                       2.5.2                h9f1df11_0               conda-forge
2025-02-24T15:44:02.0961750Z   openssl                        3.3.1                hfb2fe0b_0               conda-forge
2025-02-24T15:44:02.0962030Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0962310Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0962580Z   pandas                         2.2.2                py312h8ae5369_1          conda-forge
2025-02-24T15:44:02.0962850Z   pandoc                         3.2                  hce30654_0               conda-forge
2025-02-24T15:44:02.0963420Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0963720Z   pango                          1.54.0               h5cb9fbc_0               conda-forge
2025-02-24T15:44:02.0963980Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0964240Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0964510Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0964760Z   pcre2                          10.44                h297a79d_0               conda-forge
2025-02-24T15:44:02.0965130Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0965410Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-02-24T15:44:02.0965690Z   pillow                         10.3.0               py312h39b1d8d_1          conda-forge
2025-02-24T15:44:02.0965940Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0966190Z   pixman                         0.43.4               hebf3989_0               conda-forge
2025-02-24T15:44:02.0966490Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-02-24T15:44:02.0966800Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0967080Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0967340Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0967630Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0967940Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-02-24T15:44:02.0968230Z   psutil                         5.9.8                py312he37b823_0          conda-forge
2025-02-24T15:44:02.0968500Z   pthread-stubs                  0.4                  h27ca646_1001            conda-forge
2025-02-24T15:44:02.0968790Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-02-24T15:44:02.0969070Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0969340Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0969610Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-02-24T15:44:02.0969900Z   pybtex-docutils                1.0.3                py312h81bd7bf_1          conda-forge
2025-02-24T15:44:02.0970200Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0970480Z   pyerfa                         2.0.1.4              py312hbebd99a_1          conda-forge
2025-02-24T15:44:02.0970750Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0971030Z   pygraphviz                     1.13                 py312h5f4d302_1          conda-forge
2025-02-24T15:44:02.0971310Z   pyobjc-core                    10.3.1               py312hbb55c70_0          conda-forge
2025-02-24T15:44:02.0971710Z   pyobjc-framework-cocoa         10.3.1               py312hbb55c70_0          conda-forge
2025-02-24T15:44:02.0972020Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0972300Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-02-24T15:44:02.0972570Z   pytables                       3.9.2                py312hb622ae1_2          conda-forge
2025-02-24T15:44:02.0972840Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0973210Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0973510Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0973820Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0974120Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0974410Z   python                         3.12.4               h30c5eda_0_cpython       conda-forge
2025-02-24T15:44:02.0974690Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0975180Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0975510Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0975830Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0976120Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-02-24T15:44:02.0976380Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0976650Z   pyyaml                         6.0.1                py312h02f2b3b_1          conda-forge
2025-02-24T15:44:02.0976920Z   pyzmq                          26.0.3               py312hfa13136_0          conda-forge
2025-02-24T15:44:02.0977170Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-02-24T15:44:02.0977460Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0977750Z   readline                       8.2                  h92ec313_1               conda-forge
2025-02-24T15:44:02.0978030Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0978320Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0978600Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0978900Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0979210Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-02-24T15:44:02.0979490Z   rpds-py                        0.18.1               py312h552d48e_0          conda-forge
2025-02-24T15:44:02.0979750Z   ruff                           0.4.9                py312h3402d49_0          conda-forge
2025-02-24T15:44:02.0980000Z   scipy                          1.13.1               py312h14ffa8f_0          conda-forge
2025-02-24T15:44:02.0980280Z   send2trash                     1.8.3                pyh31c8845_0             conda-forge
2025-02-24T15:44:02.0980550Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0980850Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0981140Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-02-24T15:44:02.0981410Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-02-24T15:44:02.0981670Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0981930Z   snappy                         1.2.0                hd04f947_1               conda-forge
2025-02-24T15:44:02.0982200Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0982490Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0982780Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-02-24T15:44:02.0983150Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0983430Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0983810Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-02-24T15:44:02.0984120Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0984430Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0984750Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0985150Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-02-24T15:44:02.0985460Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-02-24T15:44:02.0985800Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0986140Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0986470Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0986810Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0987150Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0987470Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0987800Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0988150Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0988480Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0988750Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-02-24T15:44:02.0989020Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-02-24T15:44:02.0989290Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0989560Z   terminado                      0.18.1               pyh31c8845_0             conda-forge
2025-02-24T15:44:02.0989830Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0990080Z   tk                             8.6.13               h5083fa2_1               conda-forge
2025-02-24T15:44:02.0990330Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0990600Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0990860Z   tornado                        6.4.1                py312h7e5086c_0          conda-forge
2025-02-24T15:44:02.0991120Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0991380Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0991660Z   typed-ast                      1.5.5                py312h02f2b3b_1          conda-forge
2025-02-24T15:44:02.0991980Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0992310Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-02-24T15:44:02.0992630Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-02-24T15:44:02.0992920Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0993200Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-02-24T15:44:02.0993580Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0993870Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0994140Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0994410Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0994700Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-02-24T15:44:02.0995000Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0995370Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-02-24T15:44:02.0995670Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0995970Z   xorg-libxau                    1.0.11               hb547adb_0               conda-forge
2025-02-24T15:44:02.0996260Z   xorg-libxdmcp                  1.1.3                h27ca646_0               conda-forge
2025-02-24T15:44:02.0996620Z   xz                             5.2.6                h57fd34a_0               conda-forge
2025-02-24T15:44:02.0997010Z   yaml                           0.2.5                h3422bc3_2               conda-forge
2025-02-24T15:44:02.0997360Z   zeromq                         4.3.5                hcc0f68c_4               conda-forge
2025-02-24T15:44:02.0997760Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-02-24T15:44:02.0998120Z   zlib                           1.3.1                hfb2fe0b_1               conda-forge
2025-02-24T15:44:02.0998440Z   zlib-ng                        2.0.7                h1a8c8d9_0               conda-forge
2025-02-24T15:44:02.0998700Z   zstd                           1.5.6                hb46c0d2_0               conda-forge
2025-02-24T15:44:02.1004750Z ##[endgroup]
2025-02-24T15:44:02.1345190Z ##[group]Run pip install -e . --user
2025-02-24T15:44:02.1345490Z [36;1mpip install -e . --user[0m
2025-02-24T15:44:02.2104790Z shell: /bin/bash -l {0}
2025-02-24T15:44:02.2104990Z env:
2025-02-24T15:44:02.2105130Z   CACHE_NUMBER: 0
2025-02-24T15:44:02.2105600Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:44:02.2106080Z   CODECOV_TOKEN: 
2025-02-24T15:44:02.2106240Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-02-24T15:44:02.2106490Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-02-24T15:44:02.2106740Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:44:02.2106960Z ##[endgroup]
2025-02-24T15:44:03.1609900Z Obtaining file:///Users/runner/work/tardis/tardis
2025-02-24T15:44:03.1634000Z   Installing build dependencies: started
2025-02-24T15:44:05.6876610Z   Installing build dependencies: finished with status 'done'
2025-02-24T15:44:05.6883420Z   Checking if build backend supports build_editable: started
2025-02-24T15:44:05.7801150Z   Checking if build backend supports build_editable: finished with status 'done'
2025-02-24T15:44:05.7810450Z   Getting requirements to build editable: started
2025-02-24T15:44:06.1959960Z   Getting requirements to build editable: finished with status 'done'
2025-02-24T15:44:06.1969800Z   Preparing editable metadata (pyproject.toml): started
2025-02-24T15:44:06.5483000Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-02-24T15:44:06.5879520Z Requirement already satisfied: astropy in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-02-24T15:44:06.6128640Z Requirement already satisfied: numpy>=1.23 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-02-24T15:44:06.6131690Z Requirement already satisfied: pyerfa>=2.0.1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-02-24T15:44:06.6140330Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-02-24T15:44:06.6143720Z Requirement already satisfied: PyYAML>=3.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-02-24T15:44:06.6155020Z Requirement already satisfied: packaging>=19.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-02-24T15:44:06.6207770Z Building wheels for collected packages: tardis
2025-02-24T15:44:06.6214690Z   Building editable for tardis (pyproject.toml): started
2025-02-24T15:44:07.6075040Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-02-24T15:44:07.6082820Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8877 sha256=98f05d45d621398939c5f653f12accfedd33722f3803f43b4b373e880b944053
2025-02-24T15:44:07.6085440Z   Stored in directory: /private/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T/pip-ephem-wheel-cache-fhxajgcz/wheels/bb/4f/6a/0829b918c1c10bc28535ce7f14be21eee54375bdd9cd0c306a
2025-02-24T15:44:07.6107730Z Successfully built tardis
2025-02-24T15:44:08.1691580Z Installing collected packages: tardis
2025-02-24T15:44:08.3625240Z Successfully installed tardis-0.0.0
2025-02-24T15:44:08.7938820Z ##[group]Run pip install qgridnext
2025-02-24T15:44:08.7939080Z [36;1mpip install qgridnext[0m
2025-02-24T15:44:08.8960160Z shell: /bin/bash -l {0}
2025-02-24T15:44:08.8960350Z env:
2025-02-24T15:44:08.8960500Z   CACHE_NUMBER: 0
2025-02-24T15:44:08.8961010Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:44:08.8961530Z   CODECOV_TOKEN: 
2025-02-24T15:44:08.8961720Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-02-24T15:44:08.8961980Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-02-24T15:44:08.8962250Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:44:08.8962500Z ##[endgroup]
2025-02-24T15:44:09.5153330Z Collecting qgridnext
2025-02-24T15:44:09.5532180Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-02-24T15:44:09.5801650Z Requirement already satisfied: pandas>=0.20.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-02-24T15:44:09.5807000Z Requirement already satisfied: ipywidgets>=7.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-02-24T15:44:09.5813520Z Requirement already satisfied: numpy in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-02-24T15:44:09.5820140Z Requirement already satisfied: traitlets in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-02-24T15:44:09.5881040Z Requirement already satisfied: comm>=0.1.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-02-24T15:44:09.5886310Z Requirement already satisfied: ipython-genutils~=0.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-02-24T15:44:09.5895230Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-02-24T15:44:09.5904340Z Requirement already satisfied: ipython>=4.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-02-24T15:44:09.5912560Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-02-24T15:44:09.6198240Z Requirement already satisfied: python-dateutil>=2.8.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-02-24T15:44:09.6206640Z Requirement already satisfied: pytz>=2020.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-02-24T15:44:09.6210820Z Requirement already satisfied: tzdata>=2022.7 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-02-24T15:44:09.6401290Z Requirement already satisfied: decorator in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-02-24T15:44:09.6410860Z Requirement already satisfied: jedi>=0.16 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-02-24T15:44:09.6415810Z Requirement already satisfied: matplotlib-inline in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-02-24T15:44:09.6421740Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-02-24T15:44:09.6426850Z Requirement already satisfied: pygments>=2.4.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-02-24T15:44:09.6432830Z Requirement already satisfied: stack-data in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-02-24T15:44:09.6443740Z Requirement already satisfied: pexpect>4.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-02-24T15:44:09.6469510Z Requirement already satisfied: six>=1.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-02-24T15:44:09.6503870Z Requirement already satisfied: notebook>=4.4.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-02-24T15:44:09.6621880Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-02-24T15:44:09.6709150Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-02-24T15:44:09.6716420Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-02-24T15:44:09.6726360Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-02-24T15:44:09.6732440Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-02-24T15:44:09.6737740Z Requirement already satisfied: tornado>=6.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-02-24T15:44:09.6755800Z Requirement already satisfied: ptyprocess>=0.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-02-24T15:44:09.6772980Z Requirement already satisfied: wcwidth in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-02-24T15:44:09.6853960Z Requirement already satisfied: executing>=1.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-02-24T15:44:09.6859420Z Requirement already satisfied: asttokens>=2.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-02-24T15:44:09.6864120Z Requirement already satisfied: pure-eval in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-02-24T15:44:09.7062280Z Requirement already satisfied: anyio>=3.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-02-24T15:44:09.7067870Z Requirement already satisfied: argon2-cffi>=21.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-02-24T15:44:09.7073420Z Requirement already satisfied: jinja2>=3.0.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-02-24T15:44:09.7174830Z Requirement already satisfied: jupyter-client>=7.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-02-24T15:44:09.7276860Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-02-24T15:44:09.7378980Z Requirement already satisfied: jupyter-events>=0.9.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-02-24T15:44:09.7513520Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-02-24T15:44:09.7644530Z Requirement already satisfied: nbconvert>=6.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-02-24T15:44:09.7775550Z Requirement already satisfied: nbformat>=5.3.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-02-24T15:44:09.7877630Z Requirement already satisfied: overrides>=5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-02-24T15:44:09.7979750Z Requirement already satisfied: packaging>=22.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-02-24T15:44:09.8082000Z Requirement already satisfied: prometheus-client>=0.9 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-02-24T15:44:09.8184090Z Requirement already satisfied: pyzmq>=24 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-02-24T15:44:09.8286270Z Requirement already satisfied: send2trash>=1.8.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-02-24T15:44:09.8388340Z Requirement already satisfied: terminado>=0.8.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-02-24T15:44:09.8490940Z Requirement already satisfied: websocket-client>=1.7 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-02-24T15:44:09.8600460Z Requirement already satisfied: async-lru>=1.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-02-24T15:44:09.8701830Z Requirement already satisfied: httpx>=0.25.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-02-24T15:44:09.8804150Z Requirement already satisfied: ipykernel>=6.5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-02-24T15:44:09.8908500Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-02-24T15:44:09.9014620Z Requirement already satisfied: setuptools>=40.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-02-24T15:44:09.9120110Z Requirement already satisfied: babel>=2.10 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-02-24T15:44:09.9252480Z Requirement already satisfied: json5>=0.9.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-02-24T15:44:09.9364170Z Requirement already satisfied: jsonschema>=4.18.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-02-24T15:44:09.9475030Z Requirement already satisfied: requests>=2.31 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-02-24T15:44:09.9625490Z Requirement already satisfied: idna>=2.8 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-02-24T15:44:09.9733470Z Requirement already satisfied: sniffio>=1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-02-24T15:44:09.9847400Z Requirement already satisfied: argon2-cffi-bindings in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-02-24T15:44:09.9951210Z Requirement already satisfied: certifi in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-02-24T15:44:10.0063070Z Requirement already satisfied: httpcore==1.* in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-02-24T15:44:10.0188770Z Requirement already satisfied: h11<0.15,>=0.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-02-24T15:44:10.0296960Z Requirement already satisfied: appnope in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-02-24T15:44:10.0416280Z Requirement already satisfied: debugpy>=1.6.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-02-24T15:44:10.0537010Z Requirement already satisfied: nest-asyncio in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-02-24T15:44:10.0648050Z Requirement already satisfied: psutil in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-02-24T15:44:10.0750670Z Requirement already satisfied: MarkupSafe>=2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-02-24T15:44:10.0886260Z Requirement already satisfied: attrs>=22.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-02-24T15:44:10.0996790Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-02-24T15:44:10.1139940Z Requirement already satisfied: referencing>=0.28.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-02-24T15:44:10.1996830Z Requirement already satisfied: rpds-py>=0.7.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-02-24T15:44:10.2158560Z Requirement already satisfied: platformdirs>=2.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-02-24T15:44:10.2325500Z Requirement already satisfied: python-json-logger>=2.0.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-02-24T15:44:10.2432210Z Requirement already satisfied: pyyaml>=5.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-02-24T15:44:10.2534570Z Requirement already satisfied: rfc3339-validator in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-02-24T15:44:10.2636740Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-02-24T15:44:10.2743000Z Requirement already satisfied: beautifulsoup4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-02-24T15:44:10.2893550Z Requirement already satisfied: bleach!=5.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-02-24T15:44:10.3011700Z Requirement already satisfied: defusedxml in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-02-24T15:44:10.3133880Z Requirement already satisfied: jupyterlab-pygments in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-02-24T15:44:10.3225930Z Requirement already satisfied: mistune<4,>=2.0.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-02-24T15:44:10.3227820Z Requirement already satisfied: nbclient>=0.5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-02-24T15:44:10.3229410Z Requirement already satisfied: pandocfilters>=1.4.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-02-24T15:44:10.3230850Z Requirement already satisfied: tinycss2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T15:44:10.3232220Z Requirement already satisfied: fastjsonschema>=2.15 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-02-24T15:44:10.3233630Z Requirement already satisfied: charset-normalizer<4,>=2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-02-24T15:44:10.3235050Z Requirement already satisfied: urllib3<3,>=1.21.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-02-24T15:44:10.3236450Z Requirement already satisfied: webencodings in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-02-24T15:44:10.3238000Z Requirement already satisfied: fqdn in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-02-24T15:44:10.3239900Z Requirement already satisfied: isoduration in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-02-24T15:44:10.3241460Z Requirement already satisfied: jsonpointer>1.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-02-24T15:44:10.3243020Z Requirement already satisfied: uri-template in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T15:44:10.3244550Z Requirement already satisfied: webcolors>=1.11 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-02-24T15:44:10.3763210Z Requirement already satisfied: cffi>=1.0.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-02-24T15:44:10.3830370Z Requirement already satisfied: soupsieve>1.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-02-24T15:44:10.4346000Z Requirement already satisfied: pycparser in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-02-24T15:44:10.4992650Z Requirement already satisfied: arrow>=0.15.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-02-24T15:44:10.5253320Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-02-24T15:44:10.5720290Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-02-24T15:44:10.6328420Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 18.6 MB/s eta 0:00:00
2025-02-24T15:44:11.2603490Z Installing collected packages: qgridnext
2025-02-24T15:44:11.3051030Z Successfully installed qgridnext-2.0.4
2025-02-24T15:44:11.4833170Z ##[group]Run pytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-02-24T15:44:11.4834130Z [36;1mpytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-02-24T15:44:11.4884520Z shell: /bin/bash -l {0}
2025-02-24T15:44:11.4884700Z env:
2025-02-24T15:44:11.4884830Z   CACHE_NUMBER: 0
2025-02-24T15:44:11.4885300Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-02-24T15:44:11.4885860Z   CODECOV_TOKEN: 
2025-02-24T15:44:11.4886050Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-02-24T15:44:11.4886290Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-02-24T15:44:11.4886610Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:44:11.4886840Z ##[endgroup]
2025-02-24T15:44:24.8640650Z ============================= test session starts ==============================
2025-02-24T15:44:24.8641010Z platform darwin -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-02-24T15:44:24.8641310Z rootdir: /Users/runner/work/tardis/tardis
2025-02-24T15:44:24.8641540Z configfile: pyproject.toml
2025-02-24T15:44:24.8641820Z plugins: cov-5.0.0, html-4.1.1, metadata-3.1.1, doctestplus-1.2.1, anyio-4.4.0
2025-02-24T15:44:24.8642150Z collected 1796 items / 2 deselected / 1794 selected
2025-02-24T15:44:24.8642320Z 
2025-02-24T15:44:27.9287540Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-02-24T15:44:30.9524640Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-02-24T15:44:32.2370240Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-02-24T15:44:33.5015110Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-02-24T15:44:33.5078220Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-02-24T15:44:34.4870700Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-02-24T15:44:34.7698880Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-02-24T15:44:34.7708120Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-02-24T15:44:37.9047920Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-02-24T15:44:37.9238340Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-02-24T15:44:37.9577740Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-02-24T15:45:17.3019300Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-02-24T15:45:17.3641710Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-02-24T15:45:17.3856640Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-02-24T15:45:17.4217130Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-02-24T15:45:17.4450560Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-02-24T15:45:17.9145420Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-02-24T15:45:18.7548890Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-02-24T15:45:18.7850390Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-02-24T15:45:19.0342450Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-02-24T15:45:19.0543650Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-02-24T15:45:48.8844980Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-02-24T15:45:49.7191810Z ............                                                             [ 10%]
2025-02-24T15:45:52.1949600Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-02-24T15:45:52.2377370Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-02-24T15:45:54.0498630Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-02-24T15:45:55.5947560Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-02-24T15:45:57.3072550Z tardis/opacities/tests/test_tau_sobolev.py FF                            [ 12%]
2025-02-24T15:46:00.3187840Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-02-24T15:46:43.3673490Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-02-24T15:46:53.5758110Z tardis/plasma/equilibrium/tests/test_rate_matrix.py F                    [ 12%]
2025-02-24T15:46:55.4348110Z tardis/plasma/tests/test_complete_plasmas.py ...........FFFs.FFF..s..... [ 13%]
2025-02-24T15:46:58.4023320Z sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FF [ 18%]
2025-02-24T15:47:00.2601890Z Fs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss.... [ 22%]
2025-02-24T15:47:02.7685630Z ........s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....s [ 26%]
2025-02-24T15:47:05.3996450Z FF.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFF [ 30%]
2025-02-24T15:47:06.4437780Z s.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sFssFssssss..... [ 34%]
2025-02-24T15:47:09.1338230Z .......s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs.FFF.ss.....sF [ 38%]
2025-02-24T15:47:11.6807430Z F.Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs [ 42%]
2025-02-24T15:47:14.2378880Z .FFF.ss.....sFF.Fssssss............s...FFFs.FFF.s.....FFFF.Fssssss...... [ 46%]
2025-02-24T15:47:16.6324400Z ......s...FFFs.FFF.s.....FFFF.Fssssss............s...FFFs.FFF.s.....FFFF [ 50%]
2025-02-24T15:47:19.2816850Z .Fssssss............s...FFFs.FFF.ss.....sFF.Fssssss............s...FFFs. [ 54%]
2025-02-24T15:47:22.0259120Z FFF.ss.....sFF.Fssssss................FFFs.FFF..s.....sFF.Fssss......... [ 58%]
2025-02-24T15:47:22.5288580Z .........FFFs.FFF..s.....sFF.Fssss.......                                [ 60%]
2025-02-24T15:47:22.8013160Z tardis/plasma/tests/test_hdf_plasma.py ....F..F....F.F..........FFF..... [ 62%]
2025-02-24T15:47:22.8090560Z ......                                                                   [ 62%]
2025-02-24T15:47:23.0558600Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-02-24T15:49:08.2437140Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-02-24T15:49:08.2539200Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-02-24T15:49:28.0581940Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-02-24T15:49:39.8171960Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-02-24T15:49:40.5021780Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-02-24T15:49:50.5163110Z tardis/simulation/tests/test_simulation.py FFF.FFFFFF...                 [ 65%]
2025-02-24T15:49:50.5465380Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-02-24T15:49:50.9336050Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-02-24T15:49:50.9417190Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-02-24T15:49:52.4431460Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-02-24T15:49:52.4543060Z ..........                                                               [ 69%]
2025-02-24T15:49:52.6563480Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-02-24T15:49:52.6871760Z .........                                                                [ 72%]
2025-02-24T15:50:18.7547760Z tardis/spectrum/tests/test_spectrum_solver.py .FFF                       [ 72%]
2025-02-24T15:51:44.7927570Z tardis/tests/test_tardis_full.py .FFF                                    [ 72%]
2025-02-24T15:53:34.5208440Z tardis/tests/test_tardis_full_formal_integral.py .FFF.FFF.FFF.FFF        [ 73%]
2025-02-24T15:53:34.5733240Z tardis/tests/test_util.py .............................................  [ 75%]
2025-02-24T15:53:36.8683460Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-02-24T15:53:42.0068260Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-02-24T15:53:42.1469700Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-02-24T15:53:42.1582820Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-02-24T15:53:42.1914810Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-02-24T15:53:49.0762630Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-02-24T15:53:49.0850250Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-02-24T15:53:51.8189210Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-02-24T15:53:52.1431550Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-02-24T15:53:52.8097080Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-02-24T15:53:52.8940480Z XX.........                                                              [ 84%]
2025-02-24T15:53:52.9172730Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-02-24T15:53:53.1014960Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-02-24T15:53:53.3500120Z .....                                                                    [ 85%]
2025-02-24T15:54:02.0791850Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ....F.         [ 85%]
2025-02-24T15:54:02.1001580Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-02-24T15:54:02.1038020Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-02-24T15:54:03.3389270Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-02-24T15:54:03.3551340Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-02-24T15:54:05.8126960Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-02-24T15:54:05.8181760Z                                                                          [ 86%]
2025-02-24T15:54:06.3141580Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-02-24T15:54:08.0086220Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-02-24T15:54:09.4876190Z ......                                                                   [ 88%]
2025-02-24T15:54:12.8577560Z tardis/visualization/tools/tests/test_liv_plot.py ...F..F..F..F..F..F..F [ 90%]
2025-02-24T15:54:16.4406330Z ..F..FF..FF..........FF..FF..                                            [ 91%]
2025-02-24T15:54:19.1191060Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-02-24T15:54:25.8216150Z ....                                                                     [ 92%]
2025-02-24T15:54:31.1107870Z tardis/visualization/tools/tests/test_sdec_plot.py ...FFFFFFFFFFFFFFFFFF [ 94%]
2025-02-24T15:54:37.8076050Z FFFFFFFFFFFFFF................                                           [ 95%]
2025-02-24T15:54:38.1653260Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-02-24T15:54:38.2033770Z ....                                                                     [ 96%]
2025-02-24T15:54:39.2169620Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-02-24T15:54:39.9250350Z ..................                                                       [ 98%]
2025-02-24T15:57:49.9771730Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-02-24T15:57:56.5527260Z ......                                                                   [100%]
2025-02-24T15:57:56.5527580Z 
2025-02-24T15:57:56.5527740Z =================================== FAILURES ===================================
2025-02-24T15:57:56.5528210Z _____________________ test_calculate_sobolev_line_opacity ______________________
2025-02-24T15:57:56.5528480Z 
2025-02-24T15:57:56.5528600Z left = array([13, 13, 13, ..., 19, 19, 19], dtype=int8)
2025-02-24T15:57:56.5536650Z right = array([13, 13, 13, ..., 19, 19, 19], dtype=int8), err_msg = None
2025-02-24T15:57:56.5536900Z 
2025-02-24T15:57:56.5538280Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5538540Z         if err_msg is None:
2025-02-24T15:57:56.5538840Z             if left.shape != right.shape:
2025-02-24T15:57:56.5539180Z                 raise_assert_detail(
2025-02-24T15:57:56.5539560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5539860Z                 )
2025-02-24T15:57:56.5540110Z     
2025-02-24T15:57:56.5540290Z             diff = 0
2025-02-24T15:57:56.5540550Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5540820Z                 # count up differences
2025-02-24T15:57:56.5541180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5541500Z                     diff += 1
2025-02-24T15:57:56.5541750Z     
2025-02-24T15:57:56.5541940Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5542300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5542690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5543110Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5543420Z E           
2025-02-24T15:57:56.5543630Z E           numpy array values are different (0.09581 %)
2025-02-24T15:57:56.5544250Z E           [left]:  [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 13, 11, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T15:57:56.5545110Z E           [right]: [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 13, 11, 11, 19, 11, 11, 11, 11, 13, 13, 11, 11, 13, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 13, 13, 13, 13, 11, 11, 11, 13, 13, 13, 19, 11, 11, 11, 11, 13, 19, 11, 11, 11, 19, 19, 19, 19, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 13, 13, 11, 13, 11, 11, 11, 11, 11, 13, 13, 13, 13, 11, 11, 11, 13, ...]
2025-02-24T15:57:56.5545550Z 
2025-02-24T15:57:56.5545940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5546540Z 
2025-02-24T15:57:56.5546740Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5547110Z 
2025-02-24T15:57:56.5547340Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x15aa348f0>
2025-02-24T15:57:56.5547910Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15ac40260>
2025-02-24T15:57:56.5548190Z 
2025-02-24T15:57:56.5548310Z     def test_calculate_sobolev_line_opacity(
2025-02-24T15:57:56.5548630Z         nb_simulation_verysimple, regression_data
2025-02-24T15:57:56.5548920Z     ):
2025-02-24T15:57:56.5549190Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T15:57:56.5549480Z     
2025-02-24T15:57:56.5549720Z         actual = calculate_sobolev_line_opacity(
2025-02-24T15:57:56.5549990Z             legacy_plasma.lines,
2025-02-24T15:57:56.5562570Z             legacy_plasma.level_number_density,
2025-02-24T15:57:56.5563040Z             legacy_plasma.time_explosion,
2025-02-24T15:57:56.5563370Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T15:57:56.5563710Z         )
2025-02-24T15:57:56.5563950Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.5564330Z >       pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.5564590Z 
2025-02-24T15:57:56.5564770Z tardis/opacities/tests/test_tau_sobolev.py:22: 
2025-02-24T15:57:56.5565080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5565710Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5566010Z     ???
2025-02-24T15:57:56.5566260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5566480Z 
2025-02-24T15:57:56.5566570Z >   ???
2025-02-24T15:57:56.5566800Z E   AssertionError: MultiIndex level [0] are different
2025-02-24T15:57:56.5567100Z E   
2025-02-24T15:57:56.5567340Z E   MultiIndex level [0] values are different (0.09581 %)
2025-02-24T15:57:56.5567720Z E   [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:57:56.5567990Z E          ...
2025-02-24T15:57:56.5568250Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:57:56.5568550Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:57:56.5568910Z E   [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:57:56.5569180Z E          ...
2025-02-24T15:57:56.5569450Z E          20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:57:56.5569770Z E         dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:57:56.5570220Z E   At positional index 54, first diff: 14 != 12
2025-02-24T15:57:56.5570420Z 
2025-02-24T15:57:56.5570490Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5570840Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.5574390Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:57:56.5575090Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:57:56.5575920Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T15:57:56.5576130Z 
2025-02-24T15:57:56.5606110Z Iterations:████████████████████████████████████████████████████████████████                4/5 [00:11<00:02,  2.65s/it]
2025-02-24T15:57:56.5606430Z 
2025-02-24T15:57:56.5606670Z Packets:                                                                                   4030/? [00:11<00:00, 31865.47it/s][A
2025-02-24T15:57:56.5607080Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.5607810Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:57:56.5608460Z _________________________ test_calculate_beta_sobolevs _________________________
2025-02-24T15:57:56.5608700Z 
2025-02-24T15:57:56.5609210Z nb_simulation_verysimple = <tardis.simulation.base.Simulation object at 0x15aa348f0>
2025-02-24T15:57:56.5609830Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15ac41790>
2025-02-24T15:57:56.5610110Z 
2025-02-24T15:57:56.5610290Z     def test_calculate_beta_sobolevs(nb_simulation_verysimple, regression_data):
2025-02-24T15:57:56.5610630Z         legacy_plasma = nb_simulation_verysimple.plasma
2025-02-24T15:57:56.5610870Z     
2025-02-24T15:57:56.5611050Z         tau_sobolevs = calculate_sobolev_line_opacity(
2025-02-24T15:57:56.5611280Z             legacy_plasma.lines,
2025-02-24T15:57:56.5636120Z             legacy_plasma.level_number_density,
2025-02-24T15:57:56.5636480Z             legacy_plasma.time_explosion,
2025-02-24T15:57:56.5637480Z             legacy_plasma.stimulated_emission_factor,
2025-02-24T15:57:56.5637790Z         )
2025-02-24T15:57:56.5638100Z         actual = calculate_beta_sobolev(tau_sobolevs)
2025-02-24T15:57:56.5638430Z         expected = regression_data.sync_ndarray(actual)
2025-02-24T15:57:56.5638800Z >       npt.assert_allclose(actual, expected)
2025-02-24T15:57:56.5639000Z 
2025-02-24T15:57:56.5639090Z tardis/opacities/tests/test_tau_sobolev.py:36: 
2025-02-24T15:57:56.5639450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5639610Z 
2025-02-24T15:57:56.5639880Z args = (<function assert_allclose.<locals>.compare at 0x154873560>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.5640560Z        [1., 1., 1.,.....,
2025-02-24T15:57:56.5640870Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.5641120Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.5641430Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T15:57:56.5641810Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.5642140Z 
2025-02-24T15:57:56.5642190Z     @wraps(func)
2025-02-24T15:57:56.5642350Z     def inner(*args, **kwds):
2025-02-24T15:57:56.5642550Z         with self._recreate_cm():
2025-02-24T15:57:56.5642760Z >           return func(*args, **kwds)
2025-02-24T15:57:56.5642950Z E           AssertionError: 
2025-02-24T15:57:56.5643210Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.5643410Z E           
2025-02-24T15:57:56.5643570Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:57:56.5643800Z E           Max absolute difference: 0.99984222
2025-02-24T15:57:56.5644120Z E           Max relative difference: 6337.12154973
2025-02-24T15:57:56.5644340Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.5644550Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.5644750Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:57:56.5645010Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.5645310Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.5645580Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:57:56.5645720Z 
2025-02-24T15:57:56.5645950Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.5646470Z ___ test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] ___
2025-02-24T15:57:56.5646760Z 
2025-02-24T15:57:56.5646940Z new_chianti_atomic_dataset_si = <Atomic Data UUID=None MD5=None Lines=548387 Levels=26579>
2025-02-24T15:57:56.5647840Z rate_solver_list = [(<tardis.plasma.equilibrium.rates.radiative_rates.RadiativeRatesSolver object at 0x1411b21e0>, 'radiative'), (<tardis.plasma.equilibrium.rates.collisional_rates.ThermalCollisionalRateSolver object at 0x300fcdee0>, 'electron')]
2025-02-24T15:57:56.5648780Z collisional_simulation_state = <tardis.model.base.SimulationState object at 0x15a9e1d90>
2025-02-24T15:57:56.5649310Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x160f022d0>
2025-02-24T15:57:56.5649690Z 
2025-02-24T15:57:56.5649810Z     def test_rate_matrix_solver(
2025-02-24T15:57:56.5650040Z         new_chianti_atomic_dataset_si,
2025-02-24T15:57:56.5650330Z         rate_solver_list,
2025-02-24T15:57:56.5650550Z         collisional_simulation_state,
2025-02-24T15:57:56.5650830Z         regression_data,
2025-02-24T15:57:56.5651020Z     ):
2025-02-24T15:57:56.5651240Z         rate_matrix_solver = RateMatrix(
2025-02-24T15:57:56.5651530Z             rate_solver_list, new_chianti_atomic_dataset_si.levels
2025-02-24T15:57:56.5651860Z         )
2025-02-24T15:57:56.5652030Z     
2025-02-24T15:57:56.5652280Z         rad_field = DilutePlanckianRadiationField(
2025-02-24T15:57:56.5652580Z             collisional_simulation_state.t_radiative,
2025-02-24T15:57:56.5652950Z             dilution_factor=np.zeros_like(collisional_simulation_state.t_radiative),
2025-02-24T15:57:56.5653270Z         )
2025-02-24T15:57:56.5653760Z         electron_dist = ThermalElectronEnergyDistribution(
2025-02-24T15:57:56.5654080Z             0, collisional_simulation_state.t_radiative, 1e6 * u.g / u.cm**3
2025-02-24T15:57:56.5654330Z         )
2025-02-24T15:57:56.5654450Z     
2025-02-24T15:57:56.5654630Z         actual = rate_matrix_solver.solve(rad_field, electron_dist)
2025-02-24T15:57:56.5654860Z     
2025-02-24T15:57:56.5655020Z >       expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.5655190Z 
2025-02-24T15:57:56.5655300Z tardis/plasma/equilibrium/tests/test_rate_matrix.py:34: 
2025-02-24T15:57:56.5655580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5655960Z tardis/tests/fixtures/regression_data.py:88: in sync_dataframe
2025-02-24T15:57:56.5656280Z     return pd.read_hdf(self.fpath, key=key)
2025-02-24T15:57:56.5656690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:452: in read_hdf
2025-02-24T15:57:56.5657030Z     return store.select(
2025-02-24T15:57:56.5657340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:906: in select
2025-02-24T15:57:56.5657670Z     return it.get_result()
2025-02-24T15:57:56.5657990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2029: in get_result
2025-02-24T15:57:56.5658430Z     results = self.func(self.start, self.stop, where)
2025-02-24T15:57:56.5658800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:890: in func
2025-02-24T15:57:56.5659230Z     return s.read(start=_start, stop=_stop, where=_where, columns=columns)
2025-02-24T15:57:56.5659660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:3292: in read
2025-02-24T15:57:56.5660110Z     values = self.read_array(f"block{i}_values", start=_start, stop=_stop)
2025-02-24T15:57:56.5660590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/io/pytables.py:2956: in read_array
2025-02-24T15:57:56.5661020Z     ret = node[0][start:stop]
2025-02-24T15:57:56.5661390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:662: in __getitem__
2025-02-24T15:57:56.5661880Z     return self.read(start, stop, step)[0]
2025-02-24T15:57:56.5662210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/vlarray.py:806: in read
2025-02-24T15:57:56.5662680Z     outlistarr = [atom.fromarray(arr) for arr in listarr]
2025-02-24T15:57:56.5662990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5663230Z 
2025-02-24T15:57:56.5663330Z self = ObjectAtom()
2025-02-24T15:57:56.5663620Z array = array([128,   5, 149, ..., 148,  98,  46], dtype=uint8)
2025-02-24T15:57:56.5663800Z 
2025-02-24T15:57:56.5663860Z     def fromarray(self, array):
2025-02-24T15:57:56.5664190Z         # We have to check for an empty array because of a possible
2025-02-24T15:57:56.5664480Z         # bug in HDF5 which makes it claim that a dataset has one
2025-02-24T15:57:56.5664820Z         # record when in fact it is empty.
2025-02-24T15:57:56.5665030Z         if array.size == 0:
2025-02-24T15:57:56.5665190Z             return None
2025-02-24T15:57:56.5665370Z >       return pickle.loads(array.tobytes())
2025-02-24T15:57:56.5665630Z E       ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T15:57:56.5665830Z 
2025-02-24T15:57:56.5666110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/tables/atom.py:1181: ModuleNotFoundError
2025-02-24T15:57:56.5666580Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.5667070Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:57:56.5667630Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:57:56.5668170Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.5669110Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:57:56.5669770Z _________ TestPlasma.test_plasma_properties[ionization:nebular-lines] __________
2025-02-24T15:57:56.5670000Z 
2025-02-24T15:57:56.5670110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5670400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5670720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5671080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5671370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5671630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5671820Z err_msg = None
2025-02-24T15:57:56.5671990Z 
2025-02-24T15:57:56.5672120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5672420Z         if err_msg is None:
2025-02-24T15:57:56.5672730Z             if left.shape != right.shape:
2025-02-24T15:57:56.5673010Z                 raise_assert_detail(
2025-02-24T15:57:56.5673300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5673610Z                 )
2025-02-24T15:57:56.5673750Z     
2025-02-24T15:57:56.5673900Z             diff = 0
2025-02-24T15:57:56.5674130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5674430Z                 # count up differences
2025-02-24T15:57:56.5674710Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5675050Z                     diff += 1
2025-02-24T15:57:56.5675210Z     
2025-02-24T15:57:56.5675420Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5675720Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5676040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5676340Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5676540Z E           
2025-02-24T15:57:56.5676710Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5677090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5677600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5677880Z 
2025-02-24T15:57:56.5678130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5678440Z 
2025-02-24T15:57:56.5678580Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5678780Z 
2025-02-24T15:57:56.5678960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e2b10>
2025-02-24T15:57:56.5679360Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aa34b90>, attr = 'lines'
2025-02-24T15:57:56.5679600Z 
2025-02-24T15:57:56.5679710Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5679970Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5680190Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5680360Z         try:
2025-02-24T15:57:56.5680720Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5680970Z         except KeyError:
2025-02-24T15:57:56.5681180Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5681400Z     
2025-02-24T15:57:56.5681530Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5681730Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5681930Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5682170Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5682410Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5682610Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5682920Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5683140Z             else:
2025-02-24T15:57:56.5683300Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.5683530Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.5683680Z 
2025-02-24T15:57:56.5683780Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.5684040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5684320Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5684550Z     ???
2025-02-24T15:57:56.5684720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5684880Z 
2025-02-24T15:57:56.5684930Z >   ???
2025-02-24T15:57:56.5685110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5685320Z E   
2025-02-24T15:57:56.5685480Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5685740Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5685950Z E          ...
2025-02-24T15:57:56.5686100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5686350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5686610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5686820Z E          ...
2025-02-24T15:57:56.5686980Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5687230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5687500Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5687650Z 
2025-02-24T15:57:56.5687720Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5688010Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_lower_level_index] _
2025-02-24T15:57:56.5688260Z 
2025-02-24T15:57:56.5688430Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e2cc0>
2025-02-24T15:57:56.5688810Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aa34b90>
2025-02-24T15:57:56.5689070Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.5689190Z 
2025-02-24T15:57:56.5689300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5689570Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5689790Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5689950Z         try:
2025-02-24T15:57:56.5690140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5690390Z         except KeyError:
2025-02-24T15:57:56.5690600Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5690830Z     
2025-02-24T15:57:56.5690960Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5691160Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5691430Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5691670Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5691910Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5692110Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5692330Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5692490Z 
2025-02-24T15:57:56.5692590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5693160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5693340Z 
2025-02-24T15:57:56.5693460Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.5693710Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.5693930Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5694160Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.5694400Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.5694650Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.5695250Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5695470Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.5695640Z err_msg = None
2025-02-24T15:57:56.5695730Z 
2025-02-24T15:57:56.5695810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5696020Z         if err_msg is None:
2025-02-24T15:57:56.5696200Z             if left.shape != right.shape:
2025-02-24T15:57:56.5696410Z                 raise_assert_detail(
2025-02-24T15:57:56.5696650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5696890Z                 )
2025-02-24T15:57:56.5697020Z     
2025-02-24T15:57:56.5697140Z             diff = 0
2025-02-24T15:57:56.5697310Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5697540Z                 # count up differences
2025-02-24T15:57:56.5697800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5698080Z                     diff += 1
2025-02-24T15:57:56.5698230Z     
2025-02-24T15:57:56.5698370Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5698620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5698940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5699230Z E           AssertionError: Series are different
2025-02-24T15:57:56.5699420Z E           
2025-02-24T15:57:56.5699570Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.5700040Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.5700700Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5701320Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5701650Z 
2025-02-24T15:57:56.5701900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5702390Z _ TestPlasma.test_plasma_properties[ionization:nebular-lines_upper_level_index] _
2025-02-24T15:57:56.5702820Z 
2025-02-24T15:57:56.5704210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e3590>
2025-02-24T15:57:56.5704600Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aa34b90>
2025-02-24T15:57:56.5705080Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.5705220Z 
2025-02-24T15:57:56.5705330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5705590Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5705810Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5706050Z         try:
2025-02-24T15:57:56.5706360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5706620Z         except KeyError:
2025-02-24T15:57:56.5706850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5707180Z     
2025-02-24T15:57:56.5707360Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5707660Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5707880Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5716730Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5716990Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5717180Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5717420Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5717570Z 
2025-02-24T15:57:56.5717670Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5717930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5718100Z 
2025-02-24T15:57:56.5718210Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.5718480Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.5718700Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.5718920Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.5719170Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.5719420Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.5719640Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.5719860Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.5720040Z err_msg = None
2025-02-24T15:57:56.5720120Z 
2025-02-24T15:57:56.5720210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5720430Z         if err_msg is None:
2025-02-24T15:57:56.5720600Z             if left.shape != right.shape:
2025-02-24T15:57:56.5720800Z                 raise_assert_detail(
2025-02-24T15:57:56.5721040Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5721280Z                 )
2025-02-24T15:57:56.5721410Z     
2025-02-24T15:57:56.5721530Z             diff = 0
2025-02-24T15:57:56.5721710Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5721930Z                 # count up differences
2025-02-24T15:57:56.5722200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5722470Z                     diff += 1
2025-02-24T15:57:56.5722630Z     
2025-02-24T15:57:56.5722760Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5723000Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5723320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5723600Z E           AssertionError: Series are different
2025-02-24T15:57:56.5723800Z E           
2025-02-24T15:57:56.5723950Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.5724410Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.5725400Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.5726090Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.5726540Z 
2025-02-24T15:57:56.5726790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5727260Z ___________ TestPlasma.test_plasma_properties[ionization:nebular-nu] ___________
2025-02-24T15:57:56.5727490Z 
2025-02-24T15:57:56.5727590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5727880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5728140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5728410Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5728700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5728960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5729160Z err_msg = None
2025-02-24T15:57:56.5729240Z 
2025-02-24T15:57:56.5729330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5729540Z         if err_msg is None:
2025-02-24T15:57:56.5729710Z             if left.shape != right.shape:
2025-02-24T15:57:56.5729910Z                 raise_assert_detail(
2025-02-24T15:57:56.5730160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5730390Z                 )
2025-02-24T15:57:56.5730520Z     
2025-02-24T15:57:56.5730640Z             diff = 0
2025-02-24T15:57:56.5730820Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5731040Z                 # count up differences
2025-02-24T15:57:56.5731300Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5731570Z                     diff += 1
2025-02-24T15:57:56.5731730Z     
2025-02-24T15:57:56.5731860Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5732100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5732430Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5732720Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5732930Z E           
2025-02-24T15:57:56.5733100Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5733470Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5733990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5734280Z 
2025-02-24T15:57:56.5734530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5734990Z 
2025-02-24T15:57:56.5735130Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5735340Z 
2025-02-24T15:57:56.5735520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e33e0>
2025-02-24T15:57:56.5735910Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aa34b90>, attr = 'nu'
2025-02-24T15:57:56.5736150Z 
2025-02-24T15:57:56.5736250Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5736530Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5736750Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5736920Z         try:
2025-02-24T15:57:56.5737160Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5737410Z         except KeyError:
2025-02-24T15:57:56.5737620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5737840Z     
2025-02-24T15:57:56.5737970Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5738170Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5738360Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5738600Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5738840Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5739040Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5739270Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5739430Z 
2025-02-24T15:57:56.5739530Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5739790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5740070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5740300Z     ???
2025-02-24T15:57:56.5740470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5740630Z 
2025-02-24T15:57:56.5740680Z >   ???
2025-02-24T15:57:56.5740850Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5741060Z E   
2025-02-24T15:57:56.5741240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5741490Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5741700Z E          ...
2025-02-24T15:57:56.5741850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5742090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5742360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5742570Z E          ...
2025-02-24T15:57:56.5742720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5742960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5743210Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5743360Z 
2025-02-24T15:57:56.5743430Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5743710Z _____ TestPlasma.test_plasma_properties[ionization:nebular-wavelength_cm] ______
2025-02-24T15:57:56.5743960Z 
2025-02-24T15:57:56.5744060Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5744460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5744720Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5744970Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5745250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5745510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5745710Z err_msg = None
2025-02-24T15:57:56.5745790Z 
2025-02-24T15:57:56.5745880Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5746090Z         if err_msg is None:
2025-02-24T15:57:56.5746270Z             if left.shape != right.shape:
2025-02-24T15:57:56.5746670Z                 raise_assert_detail(
2025-02-24T15:57:56.5746940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5747170Z                 )
2025-02-24T15:57:56.5747300Z     
2025-02-24T15:57:56.5747410Z             diff = 0
2025-02-24T15:57:56.5747600Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5747820Z                 # count up differences
2025-02-24T15:57:56.5748100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5748380Z                     diff += 1
2025-02-24T15:57:56.5748540Z     
2025-02-24T15:57:56.5748800Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5749050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5749370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5749660Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5749870Z E           
2025-02-24T15:57:56.5750030Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5750410Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5750920Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5751210Z 
2025-02-24T15:57:56.5751450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5751760Z 
2025-02-24T15:57:56.5751900Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5752100Z 
2025-02-24T15:57:56.5752280Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e2a50>
2025-02-24T15:57:56.5752650Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aa34b90>
2025-02-24T15:57:56.5752890Z attr = 'wavelength_cm'
2025-02-24T15:57:56.5753000Z 
2025-02-24T15:57:56.5753110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5753370Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5753600Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5753760Z         try:
2025-02-24T15:57:56.5753980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5754220Z         except KeyError:
2025-02-24T15:57:56.5754430Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5754660Z     
2025-02-24T15:57:56.5754790Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5754990Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5755190Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5755430Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5755670Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5755860Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5756090Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5756250Z 
2025-02-24T15:57:56.5756350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5756620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5756900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5757130Z     ???
2025-02-24T15:57:56.5757300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5757460Z 
2025-02-24T15:57:56.5757510Z >   ???
2025-02-24T15:57:56.5757830Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5758060Z E   
2025-02-24T15:57:56.5758220Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5758480Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5758690Z E          ...
2025-02-24T15:57:56.5758840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5759080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5759350Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5759560Z E          ...
2025-02-24T15:57:56.5759720Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5760020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5760280Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5760430Z 
2025-02-24T15:57:56.5760500Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5760780Z __________ TestPlasma.test_plasma_properties[ionization:nebular-f_lu] __________
2025-02-24T15:57:56.5761020Z 
2025-02-24T15:57:56.5761120Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5761410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5761670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5761930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5762230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5762490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5762680Z err_msg = None
2025-02-24T15:57:56.5762770Z 
2025-02-24T15:57:56.5762860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5763080Z         if err_msg is None:
2025-02-24T15:57:56.5763270Z             if left.shape != right.shape:
2025-02-24T15:57:56.5763480Z                 raise_assert_detail(
2025-02-24T15:57:56.5763720Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5763960Z                 )
2025-02-24T15:57:56.5764090Z     
2025-02-24T15:57:56.5764200Z             diff = 0
2025-02-24T15:57:56.5764390Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5764620Z                 # count up differences
2025-02-24T15:57:56.5764890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5765160Z                     diff += 1
2025-02-24T15:57:56.5765330Z     
2025-02-24T15:57:56.5765460Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5765710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5766080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5766380Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5766580Z E           
2025-02-24T15:57:56.5766750Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5767130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5767630Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5767930Z 
2025-02-24T15:57:56.5768170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5768620Z 
2025-02-24T15:57:56.5768760Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5768970Z 
2025-02-24T15:57:56.5769150Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e2240>
2025-02-24T15:57:56.5769560Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aa34b90>, attr = 'f_lu'
2025-02-24T15:57:56.5769790Z 
2025-02-24T15:57:56.5769910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5770180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5770410Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5770630Z         try:
2025-02-24T15:57:56.5770820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5771060Z         except KeyError:
2025-02-24T15:57:56.5771710Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5771950Z     
2025-02-24T15:57:56.5772080Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5772280Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5772490Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5772740Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5772990Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5773180Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5773410Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5773570Z 
2025-02-24T15:57:56.5773670Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5773930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5774220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5774450Z     ???
2025-02-24T15:57:56.5774620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5774780Z 
2025-02-24T15:57:56.5774830Z >   ???
2025-02-24T15:57:56.5775010Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5775310Z E   
2025-02-24T15:57:56.5775490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5775790Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5776020Z E          ...
2025-02-24T15:57:56.5776210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5776470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5776820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5777050Z E          ...
2025-02-24T15:57:56.5777220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5777550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5777820Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5784890Z 
2025-02-24T15:57:56.5784990Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5785320Z ______ TestPlasma.test_plasma_properties[ionization:nebular-tau_sobolevs] ______
2025-02-24T15:57:56.5785550Z 
2025-02-24T15:57:56.5785660Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5785950Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5786210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5786470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5786760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5787030Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5787230Z err_msg = None
2025-02-24T15:57:56.5787320Z 
2025-02-24T15:57:56.5787410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5787630Z         if err_msg is None:
2025-02-24T15:57:56.5787820Z             if left.shape != right.shape:
2025-02-24T15:57:56.5788330Z                 raise_assert_detail(
2025-02-24T15:57:56.5788590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5788850Z                 )
2025-02-24T15:57:56.5789000Z     
2025-02-24T15:57:56.5789130Z             diff = 0
2025-02-24T15:57:56.5789320Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5789540Z                 # count up differences
2025-02-24T15:57:56.5789820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5790090Z                     diff += 1
2025-02-24T15:57:56.5790260Z     
2025-02-24T15:57:56.5790490Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5790730Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5791050Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5791350Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5791560Z E           
2025-02-24T15:57:56.5791740Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5792130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5792640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5792930Z 
2025-02-24T15:57:56.5793180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5793490Z 
2025-02-24T15:57:56.5793630Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5793840Z 
2025-02-24T15:57:56.5794020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e07d0>
2025-02-24T15:57:56.5794390Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aa34b90>
2025-02-24T15:57:56.5794640Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.5794740Z 
2025-02-24T15:57:56.5794860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5795120Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5795350Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5795520Z         try:
2025-02-24T15:57:56.5795710Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5795960Z         except KeyError:
2025-02-24T15:57:56.5796170Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5796400Z     
2025-02-24T15:57:56.5796550Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5796750Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5796960Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5797200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5797450Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5797640Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5797930Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5798140Z             else:
2025-02-24T15:57:56.5798320Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.5798550Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.5798710Z 
2025-02-24T15:57:56.5798810Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.5799080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5799360Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5799600Z     ???
2025-02-24T15:57:56.5800030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5800200Z 
2025-02-24T15:57:56.5800260Z >   ???
2025-02-24T15:57:56.5800430Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5800650Z E   
2025-02-24T15:57:56.5800830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5801090Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5801300Z E          ...
2025-02-24T15:57:56.5801460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5801710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5802100Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5802320Z E          ...
2025-02-24T15:57:56.5802460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5802710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5802960Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5803110Z 
2025-02-24T15:57:56.5803190Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5803470Z ______ TestPlasma.test_plasma_properties[ionization:nebular-beta_sobolev] ______
2025-02-24T15:57:56.5803700Z 
2025-02-24T15:57:56.5803810Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5804110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5804450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5804710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5805000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5805250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5805450Z err_msg = None
2025-02-24T15:57:56.5805540Z 
2025-02-24T15:57:56.5805630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5805840Z         if err_msg is None:
2025-02-24T15:57:56.5806020Z             if left.shape != right.shape:
2025-02-24T15:57:56.5806230Z                 raise_assert_detail(
2025-02-24T15:57:56.5806470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5806710Z                 )
2025-02-24T15:57:56.5806840Z     
2025-02-24T15:57:56.5806960Z             diff = 0
2025-02-24T15:57:56.5807140Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5807360Z                 # count up differences
2025-02-24T15:57:56.5807630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5807900Z                     diff += 1
2025-02-24T15:57:56.5808060Z     
2025-02-24T15:57:56.5808200Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5808450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5808770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5809070Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5809280Z E           
2025-02-24T15:57:56.5809440Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5809820Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5810440Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5810730Z 
2025-02-24T15:57:56.5810990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5811310Z 
2025-02-24T15:57:56.5811440Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5811650Z 
2025-02-24T15:57:56.5811820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e1610>
2025-02-24T15:57:56.5812200Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aa34b90>
2025-02-24T15:57:56.5812460Z attr = 'beta_sobolev'
2025-02-24T15:57:56.5812560Z 
2025-02-24T15:57:56.5812730Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5813010Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5813230Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5813390Z         try:
2025-02-24T15:57:56.5813590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5813840Z         except KeyError:
2025-02-24T15:57:56.5814050Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5814280Z     
2025-02-24T15:57:56.5814410Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5814610Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5814810Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5815050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5815310Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5815530Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5815750Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5815960Z             else:
2025-02-24T15:57:56.5816120Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.5816340Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.5816500Z 
2025-02-24T15:57:56.5816600Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.5816860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5817140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5817370Z     ???
2025-02-24T15:57:56.5817530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5817690Z 
2025-02-24T15:57:56.5817740Z >   ???
2025-02-24T15:57:56.5817920Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5818130Z E   
2025-02-24T15:57:56.5818290Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5818550Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5818760Z E          ...
2025-02-24T15:57:56.5818910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5819150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5819420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5819630Z E          ...
2025-02-24T15:57:56.5819780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5820010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5820260Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5820410Z 
2025-02-24T15:57:56.5820480Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5820760Z ________ TestPlasma.test_plasma_properties[ionization:nebular-j_blues] _________
2025-02-24T15:57:56.5820980Z 
2025-02-24T15:57:56.5821110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5821400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5821660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5821910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5822290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5822540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5822740Z err_msg = None
2025-02-24T15:57:56.5822830Z 
2025-02-24T15:57:56.5822920Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5823130Z         if err_msg is None:
2025-02-24T15:57:56.5823300Z             if left.shape != right.shape:
2025-02-24T15:57:56.5823510Z                 raise_assert_detail(
2025-02-24T15:57:56.5823760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5823990Z                 )
2025-02-24T15:57:56.5824190Z     
2025-02-24T15:57:56.5824390Z             diff = 0
2025-02-24T15:57:56.5824580Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5824800Z                 # count up differences
2025-02-24T15:57:56.5825070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5825340Z                     diff += 1
2025-02-24T15:57:56.5825490Z     
2025-02-24T15:57:56.5825630Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5825870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5826190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5826490Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5826690Z E           
2025-02-24T15:57:56.5826860Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5827230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5827750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5828030Z 
2025-02-24T15:57:56.5828270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5828580Z 
2025-02-24T15:57:56.5828720Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5828930Z 
2025-02-24T15:57:56.5829100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e0ce0>
2025-02-24T15:57:56.5829510Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aa34b90>, attr = 'j_blues'
2025-02-24T15:57:56.5829740Z 
2025-02-24T15:57:56.5829850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5830120Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5830350Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5830510Z         try:
2025-02-24T15:57:56.5830710Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5830950Z         except KeyError:
2025-02-24T15:57:56.5831190Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5831410Z     
2025-02-24T15:57:56.5831550Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5831740Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5831940Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5832190Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5832440Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5832630Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5832850Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5833060Z             else:
2025-02-24T15:57:56.5833220Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.5833550Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.5833710Z 
2025-02-24T15:57:56.5833800Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.5834060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5834340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5834580Z     ???
2025-02-24T15:57:56.5834750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5834910Z 
2025-02-24T15:57:56.5834960Z >   ???
2025-02-24T15:57:56.5835120Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5835390Z E   
2025-02-24T15:57:56.5835570Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5835820Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5836030Z E          ...
2025-02-24T15:57:56.5836180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5836420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5836680Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5836900Z E          ...
2025-02-24T15:57:56.5837060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5837330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5837580Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5837730Z 
2025-02-24T15:57:56.5837800Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5838070Z ___________ TestPlasma.test_plasma_properties[ionization:lte-lines] ____________
2025-02-24T15:57:56.5838310Z 
2025-02-24T15:57:56.5838410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5838700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5838950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5839210Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5839500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5839860Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5840060Z err_msg = None
2025-02-24T15:57:56.5840140Z 
2025-02-24T15:57:56.5840230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5840450Z         if err_msg is None:
2025-02-24T15:57:56.5840630Z             if left.shape != right.shape:
2025-02-24T15:57:56.5840840Z                 raise_assert_detail(
2025-02-24T15:57:56.5841080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5841310Z                 )
2025-02-24T15:57:56.5841450Z     
2025-02-24T15:57:56.5841560Z             diff = 0
2025-02-24T15:57:56.5841750Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5841980Z                 # count up differences
2025-02-24T15:57:56.5842240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5842600Z                     diff += 1
2025-02-24T15:57:56.5842790Z     
2025-02-24T15:57:56.5842940Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5843210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5843540Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5843990Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5844210Z E           
2025-02-24T15:57:56.5844400Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5844970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5852710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5853030Z 
2025-02-24T15:57:56.5853290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5853800Z 
2025-02-24T15:57:56.5853940Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5854150Z 
2025-02-24T15:57:56.5854330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e1820>
2025-02-24T15:57:56.5854730Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aaa8110>, attr = 'lines'
2025-02-24T15:57:56.5854960Z 
2025-02-24T15:57:56.5855080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5855350Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5855600Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5855780Z         try:
2025-02-24T15:57:56.5855970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5856210Z         except KeyError:
2025-02-24T15:57:56.5856430Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5856660Z     
2025-02-24T15:57:56.5856790Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5856980Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5857180Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5857430Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5857670Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5857870Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5858090Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5858300Z             else:
2025-02-24T15:57:56.5858450Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.5858680Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.5858830Z 
2025-02-24T15:57:56.5858930Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.5859190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5859470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5859700Z     ???
2025-02-24T15:57:56.5859870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5860030Z 
2025-02-24T15:57:56.5860080Z >   ???
2025-02-24T15:57:56.5860250Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5860460Z E   
2025-02-24T15:57:56.5860630Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5860890Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5861100Z E          ...
2025-02-24T15:57:56.5861250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5861490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5861760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5861960Z E          ...
2025-02-24T15:57:56.5862110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5862350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5862620Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5862770Z 
2025-02-24T15:57:56.5862850Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5863160Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_lower_level_index] ___
2025-02-24T15:57:56.5863390Z 
2025-02-24T15:57:56.5863570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e38f0>
2025-02-24T15:57:56.5864030Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aaa8110>
2025-02-24T15:57:56.5864300Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.5864520Z 
2025-02-24T15:57:56.5864630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5864900Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5865120Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5865280Z         try:
2025-02-24T15:57:56.5865470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5865710Z         except KeyError:
2025-02-24T15:57:56.5865960Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5866260Z     
2025-02-24T15:57:56.5866390Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5866590Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5866800Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5867040Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5867290Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5867480Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5867700Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5867860Z 
2025-02-24T15:57:56.5867960Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5868220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5868380Z 
2025-02-24T15:57:56.5868500Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.5868750Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.5868970Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5869200Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.5869440Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.5869690Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.5869910Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5870130Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.5870310Z err_msg = None
2025-02-24T15:57:56.5870400Z 
2025-02-24T15:57:56.5870480Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5870690Z         if err_msg is None:
2025-02-24T15:57:56.5870870Z             if left.shape != right.shape:
2025-02-24T15:57:56.5871070Z                 raise_assert_detail(
2025-02-24T15:57:56.5871320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5871560Z                 )
2025-02-24T15:57:56.5871680Z     
2025-02-24T15:57:56.5871800Z             diff = 0
2025-02-24T15:57:56.5871980Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5872200Z                 # count up differences
2025-02-24T15:57:56.5872470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5872730Z                     diff += 1
2025-02-24T15:57:56.5872880Z     
2025-02-24T15:57:56.5873020Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5873440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5873770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5874060Z E           AssertionError: Series are different
2025-02-24T15:57:56.5874250Z E           
2025-02-24T15:57:56.5874410Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.5874870Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.5875610Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5876220Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5876620Z 
2025-02-24T15:57:56.5876870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5877350Z __ TestPlasma.test_plasma_properties[ionization:lte-lines_upper_level_index] ___
2025-02-24T15:57:56.5877590Z 
2025-02-24T15:57:56.5877770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e3740>
2025-02-24T15:57:56.5878140Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aaa8110>
2025-02-24T15:57:56.5878410Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.5878530Z 
2025-02-24T15:57:56.5878640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5878910Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5879130Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5879300Z         try:
2025-02-24T15:57:56.5879490Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5879730Z         except KeyError:
2025-02-24T15:57:56.5879940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5880170Z     
2025-02-24T15:57:56.5880300Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5880490Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5880690Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5880920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5881170Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5881360Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5881580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5881740Z 
2025-02-24T15:57:56.5881830Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5882090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5882440Z 
2025-02-24T15:57:56.5882570Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.5882870Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.5883090Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.5883310Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.5883560Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.5883810Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.5884030Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.5884250Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.5884420Z err_msg = None
2025-02-24T15:57:56.5884510Z 
2025-02-24T15:57:56.5884590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5884790Z         if err_msg is None:
2025-02-24T15:57:56.5884980Z             if left.shape != right.shape:
2025-02-24T15:57:56.5885180Z                 raise_assert_detail(
2025-02-24T15:57:56.5885420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5885650Z                 )
2025-02-24T15:57:56.5885780Z     
2025-02-24T15:57:56.5885900Z             diff = 0
2025-02-24T15:57:56.5886220Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5886460Z                 # count up differences
2025-02-24T15:57:56.5886730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5886990Z                     diff += 1
2025-02-24T15:57:56.5887150Z     
2025-02-24T15:57:56.5887290Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5887530Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5887850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5888140Z E           AssertionError: Series are different
2025-02-24T15:57:56.5888380Z E           
2025-02-24T15:57:56.5888540Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.5888990Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.5889690Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.5890370Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.5890760Z 
2025-02-24T15:57:56.5891000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5891460Z _____________ TestPlasma.test_plasma_properties[ionization:lte-nu] _____________
2025-02-24T15:57:56.5891680Z 
2025-02-24T15:57:56.5891780Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5892070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5892320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5892590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5892870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5893120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5893320Z err_msg = None
2025-02-24T15:57:56.5893400Z 
2025-02-24T15:57:56.5893500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5893720Z         if err_msg is None:
2025-02-24T15:57:56.5893900Z             if left.shape != right.shape:
2025-02-24T15:57:56.5894100Z                 raise_assert_detail(
2025-02-24T15:57:56.5894340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5894570Z                 )
2025-02-24T15:57:56.5894710Z     
2025-02-24T15:57:56.5894820Z             diff = 0
2025-02-24T15:57:56.5895000Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5895220Z                 # count up differences
2025-02-24T15:57:56.5895490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5895750Z                     diff += 1
2025-02-24T15:57:56.5895910Z     
2025-02-24T15:57:56.5896230Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5896490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5896810Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5897120Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5897320Z E           
2025-02-24T15:57:56.5897480Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5897860Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5898720Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5899010Z 
2025-02-24T15:57:56.5899250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5899560Z 
2025-02-24T15:57:56.5899690Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5899890Z 
2025-02-24T15:57:56.5900070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e1ee0>
2025-02-24T15:57:56.5900460Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aaa8110>, attr = 'nu'
2025-02-24T15:57:56.5900680Z 
2025-02-24T15:57:56.5900800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5901060Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5901280Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5901440Z         try:
2025-02-24T15:57:56.5901630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5901870Z         except KeyError:
2025-02-24T15:57:56.5902080Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5902310Z     
2025-02-24T15:57:56.5902440Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5902630Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5902830Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5903080Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5903320Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5903520Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5903740Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5903890Z 
2025-02-24T15:57:56.5903990Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5904250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5904600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5904820Z     ???
2025-02-24T15:57:56.5904980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5905140Z 
2025-02-24T15:57:56.5905190Z >   ???
2025-02-24T15:57:56.5905350Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5905550Z E   
2025-02-24T15:57:56.5905720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5905980Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5906190Z E          ...
2025-02-24T15:57:56.5906340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5906590Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5906860Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5907060Z E          ...
2025-02-24T15:57:56.5907280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5907520Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5907780Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5907930Z 
2025-02-24T15:57:56.5908000Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5908280Z _______ TestPlasma.test_plasma_properties[ionization:lte-wavelength_cm] ________
2025-02-24T15:57:56.5908510Z 
2025-02-24T15:57:56.5908610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5908900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5909200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5909460Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5909740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5910000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5910190Z err_msg = None
2025-02-24T15:57:56.5910280Z 
2025-02-24T15:57:56.5910370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5910580Z         if err_msg is None:
2025-02-24T15:57:56.5910750Z             if left.shape != right.shape:
2025-02-24T15:57:56.5910950Z                 raise_assert_detail(
2025-02-24T15:57:56.5911200Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5911440Z                 )
2025-02-24T15:57:56.5911560Z     
2025-02-24T15:57:56.5911680Z             diff = 0
2025-02-24T15:57:56.5911860Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5912080Z                 # count up differences
2025-02-24T15:57:56.5912350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5912400Z                     diff += 1
2025-02-24T15:57:56.5912450Z     
2025-02-24T15:57:56.5912520Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5912630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5912770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5912860Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5912910Z E           
2025-02-24T15:57:56.5913000Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5913350Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5913600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5913610Z 
2025-02-24T15:57:56.5913860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5913860Z 
2025-02-24T15:57:56.5948500Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5948530Z 
2025-02-24T15:57:56.5948770Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e29f0>
2025-02-24T15:57:56.5948910Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aaa8110>
2025-02-24T15:57:56.5949010Z attr = 'wavelength_cm'
2025-02-24T15:57:56.5949010Z 
2025-02-24T15:57:56.5949140Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5949240Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5949300Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5949650Z         try:
2025-02-24T15:57:56.5949770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5949830Z         except KeyError:
2025-02-24T15:57:56.5949950Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5950020Z     
2025-02-24T15:57:56.5950090Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5950160Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5950250Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5950360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5950420Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5950610Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5950700Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5950710Z 
2025-02-24T15:57:56.5950810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5950910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5951050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5951100Z     ???
2025-02-24T15:57:56.5951200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5951200Z 
2025-02-24T15:57:56.5951240Z >   ???
2025-02-24T15:57:56.5951340Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5951390Z E   
2025-02-24T15:57:56.5951490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5951580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5951630Z E          ...
2025-02-24T15:57:56.5951700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5951810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5951900Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5951950Z E          ...
2025-02-24T15:57:56.5952020Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5952130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5952220Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5952220Z 
2025-02-24T15:57:56.5952280Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5952440Z ____________ TestPlasma.test_plasma_properties[ionization:lte-f_lu] ____________
2025-02-24T15:57:56.5952440Z 
2025-02-24T15:57:56.5952550Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5952670Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5952750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5952860Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5952960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5953040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5953090Z err_msg = None
2025-02-24T15:57:56.5953090Z 
2025-02-24T15:57:56.5953180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5953240Z         if err_msg is None:
2025-02-24T15:57:56.5953310Z             if left.shape != right.shape:
2025-02-24T15:57:56.5953370Z                 raise_assert_detail(
2025-02-24T15:57:56.5953490Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5953540Z                 )
2025-02-24T15:57:56.5953580Z     
2025-02-24T15:57:56.5953630Z             diff = 0
2025-02-24T15:57:56.5953720Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5953790Z                 # count up differences
2025-02-24T15:57:56.5953920Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5953980Z                     diff += 1
2025-02-24T15:57:56.5954040Z     
2025-02-24T15:57:56.5954200Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5954310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5954450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5954540Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5954580Z E           
2025-02-24T15:57:56.5954740Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5954960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5955240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5955240Z 
2025-02-24T15:57:56.5955490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5955500Z 
2025-02-24T15:57:56.5955630Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5955630Z 
2025-02-24T15:57:56.5955810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9e0bf0>
2025-02-24T15:57:56.5955970Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aaa8110>, attr = 'f_lu'
2025-02-24T15:57:56.5955980Z 
2025-02-24T15:57:56.5956080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5956180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5956240Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5956290Z         try:
2025-02-24T15:57:56.5956400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5956480Z         except KeyError:
2025-02-24T15:57:56.5956580Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5956630Z     
2025-02-24T15:57:56.5956690Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5956760Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5956830Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5956940Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5957000Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5957070Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5957160Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5957160Z 
2025-02-24T15:57:56.5957250Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5957350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5957460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5957520Z     ???
2025-02-24T15:57:56.5957610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5957610Z 
2025-02-24T15:57:56.5957650Z >   ???
2025-02-24T15:57:56.5957750Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5957800Z E   
2025-02-24T15:57:56.5957900Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5957990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5958040Z E          ...
2025-02-24T15:57:56.5958100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5958210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5958300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5958340Z E          ...
2025-02-24T15:57:56.5958580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5958680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5958760Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5958770Z 
2025-02-24T15:57:56.5958830Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5958990Z ________ TestPlasma.test_plasma_properties[ionization:lte-tau_sobolevs] ________
2025-02-24T15:57:56.5958990Z 
2025-02-24T15:57:56.5959100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5959210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5959370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5959510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5959620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5959690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5959740Z err_msg = None
2025-02-24T15:57:56.5959740Z 
2025-02-24T15:57:56.5959820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5959880Z         if err_msg is None:
2025-02-24T15:57:56.5959950Z             if left.shape != right.shape:
2025-02-24T15:57:56.5960020Z                 raise_assert_detail(
2025-02-24T15:57:56.5960130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5960180Z                 )
2025-02-24T15:57:56.5960220Z     
2025-02-24T15:57:56.5960270Z             diff = 0
2025-02-24T15:57:56.5960360Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5960420Z                 # count up differences
2025-02-24T15:57:56.5960560Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5960610Z                     diff += 1
2025-02-24T15:57:56.5960660Z     
2025-02-24T15:57:56.5960730Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5960840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5960970Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5961060Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5961110Z E           
2025-02-24T15:57:56.5961200Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5961410Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5961630Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5961630Z 
2025-02-24T15:57:56.5961880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5961880Z 
2025-02-24T15:57:56.5962020Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5962020Z 
2025-02-24T15:57:56.5962190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f852a20>
2025-02-24T15:57:56.5962320Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aaa8110>
2025-02-24T15:57:56.5962380Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.5962380Z 
2025-02-24T15:57:56.5962490Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5962580Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5962640Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5962730Z         try:
2025-02-24T15:57:56.5962850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5962910Z         except KeyError:
2025-02-24T15:57:56.5963020Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5963070Z     
2025-02-24T15:57:56.5963130Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5963200Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5963260Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5963370Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5963430Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5963560Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5963640Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5963690Z             else:
2025-02-24T15:57:56.5963760Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.5963850Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.5963850Z 
2025-02-24T15:57:56.5963950Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.5964040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5964160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5964200Z     ???
2025-02-24T15:57:56.5964300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5964300Z 
2025-02-24T15:57:56.5964340Z >   ???
2025-02-24T15:57:56.5964440Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5964490Z E   
2025-02-24T15:57:56.5964590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5964690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5964740Z E          ...
2025-02-24T15:57:56.5964810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5964910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5965000Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5965050Z E          ...
2025-02-24T15:57:56.5965120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5965210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5965300Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5965300Z 
2025-02-24T15:57:56.5965360Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5965520Z ________ TestPlasma.test_plasma_properties[ionization:lte-beta_sobolev] ________
2025-02-24T15:57:56.5965520Z 
2025-02-24T15:57:56.5965630Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5965730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5965810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5965920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5966030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5966100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5966150Z err_msg = None
2025-02-24T15:57:56.5966160Z 
2025-02-24T15:57:56.5966240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5966290Z         if err_msg is None:
2025-02-24T15:57:56.5966360Z             if left.shape != right.shape:
2025-02-24T15:57:56.5966420Z                 raise_assert_detail(
2025-02-24T15:57:56.5966540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5966590Z                 )
2025-02-24T15:57:56.5966640Z     
2025-02-24T15:57:56.5966680Z             diff = 0
2025-02-24T15:57:56.5966770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5966910Z                 # count up differences
2025-02-24T15:57:56.5967050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5967110Z                     diff += 1
2025-02-24T15:57:56.5967150Z     
2025-02-24T15:57:56.5967220Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5967330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5967470Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5967550Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5967600Z E           
2025-02-24T15:57:56.5967740Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5967960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5968180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5968180Z 
2025-02-24T15:57:56.5968430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5968430Z 
2025-02-24T15:57:56.5968570Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5968570Z 
2025-02-24T15:57:56.5968750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f852240>
2025-02-24T15:57:56.5968870Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aaa8110>
2025-02-24T15:57:56.5968930Z attr = 'beta_sobolev'
2025-02-24T15:57:56.5968930Z 
2025-02-24T15:57:56.5969040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5969130Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5969190Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5969240Z         try:
2025-02-24T15:57:56.5969350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5969410Z         except KeyError:
2025-02-24T15:57:56.5969520Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5969560Z     
2025-02-24T15:57:56.5969620Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5969690Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5969760Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5969870Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5969930Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5970000Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5970090Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5970130Z             else:
2025-02-24T15:57:56.5970210Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.5970290Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.5970300Z 
2025-02-24T15:57:56.5970390Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.5970480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5970600Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5970640Z     ???
2025-02-24T15:57:56.5970730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5970740Z 
2025-02-24T15:57:56.5970780Z >   ???
2025-02-24T15:57:56.5970880Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5970920Z E   
2025-02-24T15:57:56.5971020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5971150Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5971200Z E          ...
2025-02-24T15:57:56.5971270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5971370Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5971460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5971510Z E          ...
2025-02-24T15:57:56.5971570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5971670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5971750Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5971790Z 
2025-02-24T15:57:56.5971850Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5972010Z __________ TestPlasma.test_plasma_properties[ionization:lte-j_blues] ___________
2025-02-24T15:57:56.5972040Z 
2025-02-24T15:57:56.5972140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5972260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5972330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5972440Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5972540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5972620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5972670Z err_msg = None
2025-02-24T15:57:56.5972670Z 
2025-02-24T15:57:56.5972760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5972820Z         if err_msg is None:
2025-02-24T15:57:56.5972890Z             if left.shape != right.shape:
2025-02-24T15:57:56.5972950Z                 raise_assert_detail(
2025-02-24T15:57:56.5973060Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5973110Z                 )
2025-02-24T15:57:56.5973160Z     
2025-02-24T15:57:56.5973210Z             diff = 0
2025-02-24T15:57:56.5973290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5973360Z                 # count up differences
2025-02-24T15:57:56.5973490Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5973550Z                     diff += 1
2025-02-24T15:57:56.5973590Z     
2025-02-24T15:57:56.5973660Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5973770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5973900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5974000Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5974040Z E           
2025-02-24T15:57:56.5974130Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5974340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5974560Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5974570Z 
2025-02-24T15:57:56.5974810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5974820Z 
2025-02-24T15:57:56.5974950Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5974950Z 
2025-02-24T15:57:56.5975330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a4230>
2025-02-24T15:57:56.5975510Z plasma = <tardis.plasma.base.BasePlasma object at 0x15aaa8110>, attr = 'j_blues'
2025-02-24T15:57:56.5975510Z 
2025-02-24T15:57:56.5975620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5975700Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5975760Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5975810Z         try:
2025-02-24T15:57:56.5975920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5975980Z         except KeyError:
2025-02-24T15:57:56.5976090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5976210Z     
2025-02-24T15:57:56.5976270Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5976340Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5976410Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5976520Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5976580Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5976650Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5976740Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5976790Z             else:
2025-02-24T15:57:56.5976860Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.5976940Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.5976940Z 
2025-02-24T15:57:56.5977040Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.5977130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5977260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5977300Z     ???
2025-02-24T15:57:56.5977390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5977390Z 
2025-02-24T15:57:56.5977440Z >   ???
2025-02-24T15:57:56.5977540Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5977580Z E   
2025-02-24T15:57:56.5977680Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5977770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5977810Z E          ...
2025-02-24T15:57:56.5977880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5977980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5978060Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5978120Z E          ...
2025-02-24T15:57:56.5978180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5978280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5978360Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5978360Z 
2025-02-24T15:57:56.5978430Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5978580Z ___________ TestPlasma.test_plasma_properties[excitation:lte-lines] ____________
2025-02-24T15:57:56.5978590Z 
2025-02-24T15:57:56.5978710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5978820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5978900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5979010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.5979110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5979190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.5979240Z err_msg = None
2025-02-24T15:57:56.5979240Z 
2025-02-24T15:57:56.5979330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5979380Z         if err_msg is None:
2025-02-24T15:57:56.5979450Z             if left.shape != right.shape:
2025-02-24T15:57:56.5979590Z                 raise_assert_detail(
2025-02-24T15:57:56.5979710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5979770Z                 )
2025-02-24T15:57:56.5979810Z     
2025-02-24T15:57:56.5979850Z             diff = 0
2025-02-24T15:57:56.5979940Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5980010Z                 # count up differences
2025-02-24T15:57:56.5980140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5980200Z                     diff += 1
2025-02-24T15:57:56.5980240Z     
2025-02-24T15:57:56.5980370Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5980470Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5980610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5980700Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.5980750Z E           
2025-02-24T15:57:56.5980840Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.5981050Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5981270Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5981280Z 
2025-02-24T15:57:56.5981520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5981530Z 
2025-02-24T15:57:56.5981660Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.5981660Z 
2025-02-24T15:57:56.5981840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a6240>
2025-02-24T15:57:56.5981990Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e012f60>, attr = 'lines'
2025-02-24T15:57:56.5982000Z 
2025-02-24T15:57:56.5982110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5982190Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5982250Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5982300Z         try:
2025-02-24T15:57:56.5982420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5982470Z         except KeyError:
2025-02-24T15:57:56.5982580Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5982630Z     
2025-02-24T15:57:56.5982690Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5982760Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5982820Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5982930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5982990Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5983060Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5983150Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5983200Z             else:
2025-02-24T15:57:56.5983270Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.5983350Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.5983350Z 
2025-02-24T15:57:56.5983450Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.5983540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5983660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.5983700Z     ???
2025-02-24T15:57:56.5983840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5983850Z 
2025-02-24T15:57:56.5983900Z >   ???
2025-02-24T15:57:56.5983990Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.5984040Z E   
2025-02-24T15:57:56.5984140Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.5984230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5984270Z E          ...
2025-02-24T15:57:56.5984340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5984440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5984580Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.5984620Z E          ...
2025-02-24T15:57:56.5984690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.5984790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.5984880Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.5984880Z 
2025-02-24T15:57:56.5984950Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.5985110Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_lower_level_index] ___
2025-02-24T15:57:56.5985120Z 
2025-02-24T15:57:56.5985290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a5d30>
2025-02-24T15:57:56.5985410Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e012f60>
2025-02-24T15:57:56.5985480Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.5985480Z 
2025-02-24T15:57:56.5985580Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5985680Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5985740Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5985790Z         try:
2025-02-24T15:57:56.5985900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5985950Z         except KeyError:
2025-02-24T15:57:56.5986070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5986120Z     
2025-02-24T15:57:56.5986190Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5986260Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5986320Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5986420Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5986490Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5986560Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5986640Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5986640Z 
2025-02-24T15:57:56.5986740Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5986830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5986830Z 
2025-02-24T15:57:56.5986940Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.5987000Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.5987090Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5987160Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.5987270Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.5987330Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.5987420Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.5987480Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.5987530Z err_msg = None
2025-02-24T15:57:56.5987530Z 
2025-02-24T15:57:56.5987610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5987670Z         if err_msg is None:
2025-02-24T15:57:56.5987740Z             if left.shape != right.shape:
2025-02-24T15:57:56.5987800Z                 raise_assert_detail(
2025-02-24T15:57:56.5987910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.5988000Z                 )
2025-02-24T15:57:56.5988050Z     
2025-02-24T15:57:56.5988100Z             diff = 0
2025-02-24T15:57:56.5988190Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.5988250Z                 # count up differences
2025-02-24T15:57:56.5988390Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.5988450Z                     diff += 1
2025-02-24T15:57:56.5988490Z     
2025-02-24T15:57:56.5988560Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.5988660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.5988840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.5988920Z E           AssertionError: Series are different
2025-02-24T15:57:56.5988970Z E           
2025-02-24T15:57:56.5989050Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.5989360Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.5989640Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5989920Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.5989930Z 
2025-02-24T15:57:56.5990170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.5990340Z __ TestPlasma.test_plasma_properties[excitation:lte-lines_upper_level_index] ___
2025-02-24T15:57:56.5990340Z 
2025-02-24T15:57:56.5990510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a5eb0>
2025-02-24T15:57:56.5990640Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e012f60>
2025-02-24T15:57:56.5990700Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.5990700Z 
2025-02-24T15:57:56.5990820Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.5990900Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.5990960Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.5991020Z         try:
2025-02-24T15:57:56.5991130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.5991180Z         except KeyError:
2025-02-24T15:57:56.5991290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.5991330Z     
2025-02-24T15:57:56.5991390Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.5991470Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.5991530Z             if attr == "selected_atoms":
2025-02-24T15:57:56.5991630Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.5991690Z             elif actual.ndim == 1:
2025-02-24T15:57:56.5991770Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.5991860Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.5991860Z 
2025-02-24T15:57:56.5991960Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.5992120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.5992120Z 
2025-02-24T15:57:56.5992230Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.5992300Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.5992390Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.5992450Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.5992560Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.5992620Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.5992710Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.5992830Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.5992890Z err_msg = None
2025-02-24T15:57:56.5992890Z 
2025-02-24T15:57:56.5992970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.5993030Z         if err_msg is None:
2025-02-24T15:57:56.5993100Z             if left.shape != right.shape:
2025-02-24T15:57:56.5993160Z                 raise_assert_detail(
2025-02-24T15:57:56.5993280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6000330Z                 )
2025-02-24T15:57:56.6000450Z     
2025-02-24T15:57:56.6000500Z             diff = 0
2025-02-24T15:57:56.6000590Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6000660Z                 # count up differences
2025-02-24T15:57:56.6000800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6000850Z                     diff += 1
2025-02-24T15:57:56.6000910Z     
2025-02-24T15:57:56.6000980Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6001090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6001230Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6001310Z E           AssertionError: Series are different
2025-02-24T15:57:56.6001360Z E           
2025-02-24T15:57:56.6001440Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6001750Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6002060Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6002370Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6002380Z 
2025-02-24T15:57:56.6002630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6002780Z _____________ TestPlasma.test_plasma_properties[excitation:lte-nu] _____________
2025-02-24T15:57:56.6002790Z 
2025-02-24T15:57:56.6002890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6003230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6003310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6003420Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6003530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6003610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6003660Z err_msg = None
2025-02-24T15:57:56.6003660Z 
2025-02-24T15:57:56.6003740Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6003800Z         if err_msg is None:
2025-02-24T15:57:56.6004000Z             if left.shape != right.shape:
2025-02-24T15:57:56.6004060Z                 raise_assert_detail(
2025-02-24T15:57:56.6004170Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6004220Z                 )
2025-02-24T15:57:56.6004260Z     
2025-02-24T15:57:56.6004310Z             diff = 0
2025-02-24T15:57:56.6004400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6004470Z                 # count up differences
2025-02-24T15:57:56.6004610Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6004660Z                     diff += 1
2025-02-24T15:57:56.6004710Z     
2025-02-24T15:57:56.6004770Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6004880Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6005010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6005110Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6005150Z E           
2025-02-24T15:57:56.6005240Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6005480Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6005700Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6005710Z 
2025-02-24T15:57:56.6005950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6005960Z 
2025-02-24T15:57:56.6006100Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6006100Z 
2025-02-24T15:57:56.6006270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a6b40>
2025-02-24T15:57:56.6006430Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e012f60>, attr = 'nu'
2025-02-24T15:57:56.6006440Z 
2025-02-24T15:57:56.6006540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6006630Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6006690Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6006750Z         try:
2025-02-24T15:57:56.6006860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6006910Z         except KeyError:
2025-02-24T15:57:56.6007030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6007070Z     
2025-02-24T15:57:56.6007140Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6007210Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6007270Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6007380Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6007450Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6007600Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6007700Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6007700Z 
2025-02-24T15:57:56.6007800Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6007890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6008010Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6008050Z     ???
2025-02-24T15:57:56.6008140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6008150Z 
2025-02-24T15:57:56.6008250Z >   ???
2025-02-24T15:57:56.6008360Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6008400Z E   
2025-02-24T15:57:56.6008500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6008590Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6008640Z E          ...
2025-02-24T15:57:56.6008700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6008800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6008890Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6008930Z E          ...
2025-02-24T15:57:56.6009000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6009100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6009180Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6009180Z 
2025-02-24T15:57:56.6009240Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6009410Z _______ TestPlasma.test_plasma_properties[excitation:lte-wavelength_cm] ________
2025-02-24T15:57:56.6009410Z 
2025-02-24T15:57:56.6009520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6009620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6009700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6009810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6010300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6010390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6010440Z err_msg = None
2025-02-24T15:57:56.6010440Z 
2025-02-24T15:57:56.6010530Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6010580Z         if err_msg is None:
2025-02-24T15:57:56.6010660Z             if left.shape != right.shape:
2025-02-24T15:57:56.6010720Z                 raise_assert_detail(
2025-02-24T15:57:56.6010840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6010890Z                 )
2025-02-24T15:57:56.6010940Z     
2025-02-24T15:57:56.6010980Z             diff = 0
2025-02-24T15:57:56.6011080Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6011140Z                 # count up differences
2025-02-24T15:57:56.6011280Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6011330Z                     diff += 1
2025-02-24T15:57:56.6011380Z     
2025-02-24T15:57:56.6011440Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6011550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6011690Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6011780Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6011830Z E           
2025-02-24T15:57:56.6011910Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6012260Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6012490Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6012490Z 
2025-02-24T15:57:56.6012740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6012790Z 
2025-02-24T15:57:56.6012960Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6012960Z 
2025-02-24T15:57:56.6013130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a70b0>
2025-02-24T15:57:56.6013260Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e012f60>
2025-02-24T15:57:56.6013310Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6013320Z 
2025-02-24T15:57:56.6013450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6013530Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6013590Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6013640Z         try:
2025-02-24T15:57:56.6013750Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6013810Z         except KeyError:
2025-02-24T15:57:56.6013910Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6013960Z     
2025-02-24T15:57:56.6014020Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6014100Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6014170Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6014270Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6014340Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6014410Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6014500Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6014500Z 
2025-02-24T15:57:56.6014590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6014690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6014800Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6014850Z     ???
2025-02-24T15:57:56.6014940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6014950Z 
2025-02-24T15:57:56.6014990Z >   ???
2025-02-24T15:57:56.6015100Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6015140Z E   
2025-02-24T15:57:56.6015240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6015320Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6015380Z E          ...
2025-02-24T15:57:56.6015440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6015550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6015630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6015680Z E          ...
2025-02-24T15:57:56.6015740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6015840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6015920Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6015920Z 
2025-02-24T15:57:56.6015990Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6016140Z ____________ TestPlasma.test_plasma_properties[excitation:lte-f_lu] ____________
2025-02-24T15:57:56.6016140Z 
2025-02-24T15:57:56.6016240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6016500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6016580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6016690Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6016800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6016870Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6016920Z err_msg = None
2025-02-24T15:57:56.6016920Z 
2025-02-24T15:57:56.6017000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6017060Z         if err_msg is None:
2025-02-24T15:57:56.6017450Z             if left.shape != right.shape:
2025-02-24T15:57:56.6017510Z                 raise_assert_detail(
2025-02-24T15:57:56.6017620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6017680Z                 )
2025-02-24T15:57:56.6017720Z     
2025-02-24T15:57:56.6017770Z             diff = 0
2025-02-24T15:57:56.6017860Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6017920Z                 # count up differences
2025-02-24T15:57:56.6018060Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6018110Z                     diff += 1
2025-02-24T15:57:56.6018160Z     
2025-02-24T15:57:56.6018230Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6018330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6018470Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6018570Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6018610Z E           
2025-02-24T15:57:56.6018710Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6018920Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6019140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6019140Z 
2025-02-24T15:57:56.6019390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6019390Z 
2025-02-24T15:57:56.6019530Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6019530Z 
2025-02-24T15:57:56.6019700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a66f0>
2025-02-24T15:57:56.6019860Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e012f60>, attr = 'f_lu'
2025-02-24T15:57:56.6019870Z 
2025-02-24T15:57:56.6019970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6020060Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6020120Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6020170Z         try:
2025-02-24T15:57:56.6020280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6020340Z         except KeyError:
2025-02-24T15:57:56.6020450Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6020490Z     
2025-02-24T15:57:56.6020560Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6020630Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6020700Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6020800Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6020860Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6021020Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6021110Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6021110Z 
2025-02-24T15:57:56.6021210Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6021300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6021420Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6021460Z     ???
2025-02-24T15:57:56.6021550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6021560Z 
2025-02-24T15:57:56.6021660Z >   ???
2025-02-24T15:57:56.6021760Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6021800Z E   
2025-02-24T15:57:56.6021910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6021990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6022040Z E          ...
2025-02-24T15:57:56.6022110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6022210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6022300Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6022350Z E          ...
2025-02-24T15:57:56.6022420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6022530Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6022620Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6022620Z 
2025-02-24T15:57:56.6022680Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6022850Z ________ TestPlasma.test_plasma_properties[excitation:lte-tau_sobolevs] ________
2025-02-24T15:57:56.6022850Z 
2025-02-24T15:57:56.6022950Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6023060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6023140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6023240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6023350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6023420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6023480Z err_msg = None
2025-02-24T15:57:56.6023480Z 
2025-02-24T15:57:56.6023560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6023620Z         if err_msg is None:
2025-02-24T15:57:56.6023700Z             if left.shape != right.shape:
2025-02-24T15:57:56.6023760Z                 raise_assert_detail(
2025-02-24T15:57:56.6023880Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6023920Z                 )
2025-02-24T15:57:56.6023970Z     
2025-02-24T15:57:56.6024020Z             diff = 0
2025-02-24T15:57:56.6024110Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6024170Z                 # count up differences
2025-02-24T15:57:56.6024310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6024370Z                     diff += 1
2025-02-24T15:57:56.6024420Z     
2025-02-24T15:57:56.6024480Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6024590Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6024730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6024820Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6024880Z E           
2025-02-24T15:57:56.6024960Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6025250Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6025470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6025470Z 
2025-02-24T15:57:56.6025720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6025770Z 
2025-02-24T15:57:56.6025910Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6025910Z 
2025-02-24T15:57:56.6026090Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a6f30>
2025-02-24T15:57:56.6026220Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e012f60>
2025-02-24T15:57:56.6026270Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6026280Z 
2025-02-24T15:57:56.6026390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6026480Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6026540Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6026590Z         try:
2025-02-24T15:57:56.6026700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6026760Z         except KeyError:
2025-02-24T15:57:56.6026870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6026920Z     
2025-02-24T15:57:56.6026980Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6027050Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6027110Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6027230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6027290Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6027360Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6027440Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6027490Z             else:
2025-02-24T15:57:56.6027570Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6027650Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6027650Z 
2025-02-24T15:57:56.6027750Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6027840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6027950Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6028000Z     ???
2025-02-24T15:57:56.6028090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6028090Z 
2025-02-24T15:57:56.6028140Z >   ???
2025-02-24T15:57:56.6028230Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6028280Z E   
2025-02-24T15:57:56.6028380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6028470Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6028520Z E          ...
2025-02-24T15:57:56.6028590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6028680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6028770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6028820Z E          ...
2025-02-24T15:57:56.6028890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6028990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6029080Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6029080Z 
2025-02-24T15:57:56.6029150Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6029300Z ________ TestPlasma.test_plasma_properties[excitation:lte-beta_sobolev] ________
2025-02-24T15:57:56.6029310Z 
2025-02-24T15:57:56.6029460Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6029570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6029650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6029760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6029860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6029940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6030030Z err_msg = None
2025-02-24T15:57:56.6030030Z 
2025-02-24T15:57:56.6030120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6030180Z         if err_msg is None:
2025-02-24T15:57:56.6030250Z             if left.shape != right.shape:
2025-02-24T15:57:56.6030310Z                 raise_assert_detail(
2025-02-24T15:57:56.6030430Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6030470Z                 )
2025-02-24T15:57:56.6030520Z     
2025-02-24T15:57:56.6030570Z             diff = 0
2025-02-24T15:57:56.6030660Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6030730Z                 # count up differences
2025-02-24T15:57:56.6030860Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6030920Z                     diff += 1
2025-02-24T15:57:56.6030960Z     
2025-02-24T15:57:56.6031030Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6031140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6031280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6031360Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6031410Z E           
2025-02-24T15:57:56.6031500Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6031710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6031930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6031930Z 
2025-02-24T15:57:56.6032180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6032180Z 
2025-02-24T15:57:56.6032320Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6032320Z 
2025-02-24T15:57:56.6032490Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a7290>
2025-02-24T15:57:56.6032620Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e012f60>
2025-02-24T15:57:56.6032670Z attr = 'beta_sobolev'
2025-02-24T15:57:56.6032670Z 
2025-02-24T15:57:56.6032780Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6032870Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6032930Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6032970Z         try:
2025-02-24T15:57:56.6033090Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6033140Z         except KeyError:
2025-02-24T15:57:56.6033250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6033300Z     
2025-02-24T15:57:56.6033360Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6033510Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6033580Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6033690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6033750Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6033820Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6033910Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6033960Z             else:
2025-02-24T15:57:56.6034030Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6034120Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6034120Z 
2025-02-24T15:57:56.6034290Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6034390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6034500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6034550Z     ???
2025-02-24T15:57:56.6034640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6034640Z 
2025-02-24T15:57:56.6034690Z >   ???
2025-02-24T15:57:56.6034860Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6034910Z E   
2025-02-24T15:57:56.6035010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6035100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6035150Z E          ...
2025-02-24T15:57:56.6035220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6035320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6035410Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6035450Z E          ...
2025-02-24T15:57:56.6035520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6035620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6035700Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6035700Z 
2025-02-24T15:57:56.6035770Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6035930Z __________ TestPlasma.test_plasma_properties[excitation:lte-j_blues] ___________
2025-02-24T15:57:56.6035930Z 
2025-02-24T15:57:56.6036030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6036140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6036210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6036330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6036440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6036510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6036570Z err_msg = None
2025-02-24T15:57:56.6036570Z 
2025-02-24T15:57:56.6036650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6036710Z         if err_msg is None:
2025-02-24T15:57:56.6036780Z             if left.shape != right.shape:
2025-02-24T15:57:56.6036840Z                 raise_assert_detail(
2025-02-24T15:57:56.6036960Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6037000Z                 )
2025-02-24T15:57:56.6037040Z     
2025-02-24T15:57:56.6037090Z             diff = 0
2025-02-24T15:57:56.6037180Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6037240Z                 # count up differences
2025-02-24T15:57:56.6037380Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6037440Z                     diff += 1
2025-02-24T15:57:56.6037480Z     
2025-02-24T15:57:56.6037550Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6037660Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6037860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6037960Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6038000Z E           
2025-02-24T15:57:56.6038090Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6038310Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6038570Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6038570Z 
2025-02-24T15:57:56.6038820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6038820Z 
2025-02-24T15:57:56.6038950Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6038990Z 
2025-02-24T15:57:56.6039160Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a7200>
2025-02-24T15:57:56.6039320Z plasma = <tardis.plasma.base.BasePlasma object at 0x31e012f60>, attr = 'j_blues'
2025-02-24T15:57:56.6039320Z 
2025-02-24T15:57:56.6039420Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6039520Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6039580Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6039630Z         try:
2025-02-24T15:57:56.6039740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6039800Z         except KeyError:
2025-02-24T15:57:56.6039920Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6039960Z     
2025-02-24T15:57:56.6040030Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6040100Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6040160Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6040270Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6040330Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6040400Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6040480Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6040530Z             else:
2025-02-24T15:57:56.6040610Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6040690Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6040690Z 
2025-02-24T15:57:56.6040790Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6040880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6040990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6041040Z     ???
2025-02-24T15:57:56.6041130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6041130Z 
2025-02-24T15:57:56.6041180Z >   ???
2025-02-24T15:57:56.6041280Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6041320Z E   
2025-02-24T15:57:56.6041430Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6041510Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6041560Z E          ...
2025-02-24T15:57:56.6041630Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6041730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6041820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6041860Z E          ...
2025-02-24T15:57:56.6042000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6042100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6042180Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6042190Z 
2025-02-24T15:57:56.6042250Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6042410Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines] ________
2025-02-24T15:57:56.6042410Z 
2025-02-24T15:57:56.6042510Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6042630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6042760Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6042870Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6042980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6043050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6043110Z err_msg = None
2025-02-24T15:57:56.6043110Z 
2025-02-24T15:57:56.6043190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6043250Z         if err_msg is None:
2025-02-24T15:57:56.6043320Z             if left.shape != right.shape:
2025-02-24T15:57:56.6043390Z                 raise_assert_detail(
2025-02-24T15:57:56.6043500Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6043550Z                 )
2025-02-24T15:57:56.6043600Z     
2025-02-24T15:57:56.6043640Z             diff = 0
2025-02-24T15:57:56.6043730Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6043800Z                 # count up differences
2025-02-24T15:57:56.6043940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6043990Z                     diff += 1
2025-02-24T15:57:56.6044040Z     
2025-02-24T15:57:56.6044100Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6044210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6044350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6044440Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6044480Z E           
2025-02-24T15:57:56.6044570Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6044780Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6045000Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6045010Z 
2025-02-24T15:57:56.6045250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6045250Z 
2025-02-24T15:57:56.6045390Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6045390Z 
2025-02-24T15:57:56.6045560Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a7b90>
2025-02-24T15:57:56.6045720Z plasma = <tardis.plasma.base.BasePlasma object at 0x30f1deb70>, attr = 'lines'
2025-02-24T15:57:56.6045730Z 
2025-02-24T15:57:56.6045830Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6045920Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6045980Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6046020Z         try:
2025-02-24T15:57:56.6046170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6046230Z         except KeyError:
2025-02-24T15:57:56.6046340Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6046390Z     
2025-02-24T15:57:56.6046450Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6046520Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6046590Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6046690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6046750Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6046860Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6046950Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6047000Z             else:
2025-02-24T15:57:56.6047070Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6052200Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6052230Z 
2025-02-24T15:57:56.6052360Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6052450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6052570Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6052620Z     ???
2025-02-24T15:57:56.6052710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6052710Z 
2025-02-24T15:57:56.6052760Z >   ???
2025-02-24T15:57:56.6052850Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6052900Z E   
2025-02-24T15:57:56.6053000Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6053100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6053140Z E          ...
2025-02-24T15:57:56.6053210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6053310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6053400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6053450Z E          ...
2025-02-24T15:57:56.6053520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6053620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6053690Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6053690Z 
2025-02-24T15:57:56.6053760Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6053950Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] _
2025-02-24T15:57:56.6053950Z 
2025-02-24T15:57:56.6054130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a7650>
2025-02-24T15:57:56.6054260Z plasma = <tardis.plasma.base.BasePlasma object at 0x30f1deb70>
2025-02-24T15:57:56.6054320Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6054330Z 
2025-02-24T15:57:56.6054430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6054520Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6054580Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6054630Z         try:
2025-02-24T15:57:56.6054740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6054790Z         except KeyError:
2025-02-24T15:57:56.6054910Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6054950Z     
2025-02-24T15:57:56.6055020Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6055080Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6055160Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6055260Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6055330Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6055400Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6055480Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6055480Z 
2025-02-24T15:57:56.6055910Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6056010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6056010Z 
2025-02-24T15:57:56.6056120Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6056180Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6056280Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6056340Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6056450Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6056600Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6056690Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6056750Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6056800Z err_msg = None
2025-02-24T15:57:56.6056800Z 
2025-02-24T15:57:56.6056890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6056940Z         if err_msg is None:
2025-02-24T15:57:56.6057010Z             if left.shape != right.shape:
2025-02-24T15:57:56.6057080Z                 raise_assert_detail(
2025-02-24T15:57:56.6057190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6057240Z                 )
2025-02-24T15:57:56.6057280Z     
2025-02-24T15:57:56.6057330Z             diff = 0
2025-02-24T15:57:56.6057410Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6057480Z                 # count up differences
2025-02-24T15:57:56.6057620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6057670Z                     diff += 1
2025-02-24T15:57:56.6057720Z     
2025-02-24T15:57:56.6057780Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6057890Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6058040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6058110Z E           AssertionError: Series are different
2025-02-24T15:57:56.6058160Z E           
2025-02-24T15:57:56.6058240Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6058550Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6058830Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6059110Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6059110Z 
2025-02-24T15:57:56.6059360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6059540Z _ TestPlasma.test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] _
2025-02-24T15:57:56.6059540Z 
2025-02-24T15:57:56.6059720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a76e0>
2025-02-24T15:57:56.6059890Z plasma = <tardis.plasma.base.BasePlasma object at 0x30f1deb70>
2025-02-24T15:57:56.6059960Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6059960Z 
2025-02-24T15:57:56.6060070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6060160Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6060220Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6060270Z         try:
2025-02-24T15:57:56.6060380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6060440Z         except KeyError:
2025-02-24T15:57:56.6060550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6060630Z     
2025-02-24T15:57:56.6060700Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6060770Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6060840Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6060950Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6061010Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6061080Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6061170Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6061170Z 
2025-02-24T15:57:56.6061270Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6061360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6061360Z 
2025-02-24T15:57:56.6061470Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6061530Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6061620Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6061680Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6061800Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6061860Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6061950Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6062010Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6062060Z err_msg = None
2025-02-24T15:57:56.6062060Z 
2025-02-24T15:57:56.6062140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6062200Z         if err_msg is None:
2025-02-24T15:57:56.6062270Z             if left.shape != right.shape:
2025-02-24T15:57:56.6062330Z                 raise_assert_detail(
2025-02-24T15:57:56.6062450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6062500Z                 )
2025-02-24T15:57:56.6062540Z     
2025-02-24T15:57:56.6062590Z             diff = 0
2025-02-24T15:57:56.6062680Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6062740Z                 # count up differences
2025-02-24T15:57:56.6062870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6062930Z                     diff += 1
2025-02-24T15:57:56.6062980Z     
2025-02-24T15:57:56.6063040Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6063150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6063280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6063360Z E           AssertionError: Series are different
2025-02-24T15:57:56.6063410Z E           
2025-02-24T15:57:56.6063490Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6063790Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6064140Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6064460Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6064510Z 
2025-02-24T15:57:56.6064760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6064920Z _________ TestPlasma.test_plasma_properties[excitation:dilute-lte-nu] __________
2025-02-24T15:57:56.6064920Z 
2025-02-24T15:57:56.6065030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6065140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6065220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6065330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6065430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6065510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6065560Z err_msg = None
2025-02-24T15:57:56.6065560Z 
2025-02-24T15:57:56.6065640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6065700Z         if err_msg is None:
2025-02-24T15:57:56.6065770Z             if left.shape != right.shape:
2025-02-24T15:57:56.6065830Z                 raise_assert_detail(
2025-02-24T15:57:56.6065950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6066000Z                 )
2025-02-24T15:57:56.6066040Z     
2025-02-24T15:57:56.6066090Z             diff = 0
2025-02-24T15:57:56.6066200Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6066280Z                 # count up differences
2025-02-24T15:57:56.6066420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6066470Z                     diff += 1
2025-02-24T15:57:56.6066520Z     
2025-02-24T15:57:56.6066580Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6066690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6066830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6066920Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6066960Z E           
2025-02-24T15:57:56.6067050Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6067270Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6067480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6067490Z 
2025-02-24T15:57:56.6067810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6067820Z 
2025-02-24T15:57:56.6067960Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6067960Z 
2025-02-24T15:57:56.6068140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a5040>
2025-02-24T15:57:56.6068300Z plasma = <tardis.plasma.base.BasePlasma object at 0x30f1deb70>, attr = 'nu'
2025-02-24T15:57:56.6068300Z 
2025-02-24T15:57:56.6068400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6068500Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6068600Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6068660Z         try:
2025-02-24T15:57:56.6068770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6068830Z         except KeyError:
2025-02-24T15:57:56.6068940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6068980Z     
2025-02-24T15:57:56.6069050Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6069130Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6069190Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6069300Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6069370Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6069440Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6069530Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6069530Z 
2025-02-24T15:57:56.6069620Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6069720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6069840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6069890Z     ???
2025-02-24T15:57:56.6069980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6069980Z 
2025-02-24T15:57:56.6070030Z >   ???
2025-02-24T15:57:56.6070130Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6070180Z E   
2025-02-24T15:57:56.6070280Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6070370Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6070420Z E          ...
2025-02-24T15:57:56.6070480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6070590Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6070680Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6070730Z E          ...
2025-02-24T15:57:56.6070800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6070900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6070980Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6070980Z 
2025-02-24T15:57:56.6071040Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6071220Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-wavelength_cm] ____
2025-02-24T15:57:56.6071220Z 
2025-02-24T15:57:56.6071320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6071440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6071520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6071620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6071730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6071810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6071860Z err_msg = None
2025-02-24T15:57:56.6071860Z 
2025-02-24T15:57:56.6071950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6072010Z         if err_msg is None:
2025-02-24T15:57:56.6072150Z             if left.shape != right.shape:
2025-02-24T15:57:56.6072230Z                 raise_assert_detail(
2025-02-24T15:57:56.6072350Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6072400Z                 )
2025-02-24T15:57:56.6072440Z     
2025-02-24T15:57:56.6072490Z             diff = 0
2025-02-24T15:57:56.6072590Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6072650Z                 # count up differences
2025-02-24T15:57:56.6072790Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6072910Z                     diff += 1
2025-02-24T15:57:56.6072960Z     
2025-02-24T15:57:56.6073030Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6073140Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6073280Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6073380Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6073420Z E           
2025-02-24T15:57:56.6073510Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6073730Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6073950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6073960Z 
2025-02-24T15:57:56.6074210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6074210Z 
2025-02-24T15:57:56.6074340Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6074350Z 
2025-02-24T15:57:56.6074520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a5250>
2025-02-24T15:57:56.6074650Z plasma = <tardis.plasma.base.BasePlasma object at 0x30f1deb70>
2025-02-24T15:57:56.6074700Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6074710Z 
2025-02-24T15:57:56.6074890Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6074980Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6075040Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6075090Z         try:
2025-02-24T15:57:56.6075210Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6075270Z         except KeyError:
2025-02-24T15:57:56.6075380Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6075420Z     
2025-02-24T15:57:56.6075490Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6075560Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6075620Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6075730Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6075790Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6075860Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6075950Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6075960Z 
2025-02-24T15:57:56.6076050Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6076150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6076260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6076310Z     ???
2025-02-24T15:57:56.6076400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6076460Z 
2025-02-24T15:57:56.6076510Z >   ???
2025-02-24T15:57:56.6076610Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6076660Z E   
2025-02-24T15:57:56.6076790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6076880Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6076930Z E          ...
2025-02-24T15:57:56.6077000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6077100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6077190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6077310Z E          ...
2025-02-24T15:57:56.6077380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6077480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6077560Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6077560Z 
2025-02-24T15:57:56.6077630Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6077790Z ________ TestPlasma.test_plasma_properties[excitation:dilute-lte-f_lu] _________
2025-02-24T15:57:56.6077790Z 
2025-02-24T15:57:56.6077890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6078010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6078080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6078190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6078300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6078380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6078430Z err_msg = None
2025-02-24T15:57:56.6078430Z 
2025-02-24T15:57:56.6078520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6078580Z         if err_msg is None:
2025-02-24T15:57:56.6078650Z             if left.shape != right.shape:
2025-02-24T15:57:56.6078710Z                 raise_assert_detail(
2025-02-24T15:57:56.6078830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6078880Z                 )
2025-02-24T15:57:56.6078920Z     
2025-02-24T15:57:56.6078970Z             diff = 0
2025-02-24T15:57:56.6079060Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6079120Z                 # count up differences
2025-02-24T15:57:56.6079260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6079320Z                     diff += 1
2025-02-24T15:57:56.6079360Z     
2025-02-24T15:57:56.6079430Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6079540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6079680Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6079770Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6079810Z E           
2025-02-24T15:57:56.6079910Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6080120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6080340Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6080340Z 
2025-02-24T15:57:56.6080640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6080640Z 
2025-02-24T15:57:56.6080780Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6080780Z 
2025-02-24T15:57:56.6080960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a5160>
2025-02-24T15:57:56.6081120Z plasma = <tardis.plasma.base.BasePlasma object at 0x30f1deb70>, attr = 'f_lu'
2025-02-24T15:57:56.6081120Z 
2025-02-24T15:57:56.6081230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6081320Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6081420Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6081480Z         try:
2025-02-24T15:57:56.6081590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6081650Z         except KeyError:
2025-02-24T15:57:56.6081760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6081810Z     
2025-02-24T15:57:56.6081880Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6081950Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6082010Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6082120Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6082190Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6082250Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6082340Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6082340Z 
2025-02-24T15:57:56.6082440Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6082540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6082650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6082700Z     ???
2025-02-24T15:57:56.6082800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6082800Z 
2025-02-24T15:57:56.6082850Z >   ???
2025-02-24T15:57:56.6082950Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6083000Z E   
2025-02-24T15:57:56.6083100Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6083180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6083230Z E          ...
2025-02-24T15:57:56.6083300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6083400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6083490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6083540Z E          ...
2025-02-24T15:57:56.6083610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6083710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6083790Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6083790Z 
2025-02-24T15:57:56.6083850Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6084020Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-tau_sobolevs] _____
2025-02-24T15:57:56.6084030Z 
2025-02-24T15:57:56.6084130Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6084240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6084320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6084430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6084540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6084610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6084660Z err_msg = None
2025-02-24T15:57:56.6084670Z 
2025-02-24T15:57:56.6084750Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6084810Z         if err_msg is None:
2025-02-24T15:57:56.6084910Z             if left.shape != right.shape:
2025-02-24T15:57:56.6084980Z                 raise_assert_detail(
2025-02-24T15:57:56.6085100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6085150Z                 )
2025-02-24T15:57:56.6085190Z     
2025-02-24T15:57:56.6085240Z             diff = 0
2025-02-24T15:57:56.6085330Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6085390Z                 # count up differences
2025-02-24T15:57:56.6085530Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6085620Z                     diff += 1
2025-02-24T15:57:56.6085680Z     
2025-02-24T15:57:56.6085740Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6085850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6085990Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6086080Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6086130Z E           
2025-02-24T15:57:56.6086220Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6086430Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6086640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6086650Z 
2025-02-24T15:57:56.6086920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6086920Z 
2025-02-24T15:57:56.6087060Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6087060Z 
2025-02-24T15:57:56.6087240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13f9a4170>
2025-02-24T15:57:56.6087360Z plasma = <tardis.plasma.base.BasePlasma object at 0x30f1deb70>
2025-02-24T15:57:56.6087410Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6087420Z 
2025-02-24T15:57:56.6087520Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6087610Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6087670Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6087720Z         try:
2025-02-24T15:57:56.6087830Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6087890Z         except KeyError:
2025-02-24T15:57:56.6088000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6088050Z     
2025-02-24T15:57:56.6088110Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6088190Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6088250Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6088360Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6088420Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6088490Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6088580Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6088630Z             else:
2025-02-24T15:57:56.6088700Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6088790Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6088790Z 
2025-02-24T15:57:56.6088890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6088980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6089200Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6089250Z     ???
2025-02-24T15:57:56.6089350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6089350Z 
2025-02-24T15:57:56.6089400Z >   ???
2025-02-24T15:57:56.6089490Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6089540Z E   
2025-02-24T15:57:56.6089640Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6089730Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6089780Z E          ...
2025-02-24T15:57:56.6089850Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6090180Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6090270Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6090310Z E          ...
2025-02-24T15:57:56.6090380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6090490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6090570Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6090570Z 
2025-02-24T15:57:56.6090640Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6090800Z ____ TestPlasma.test_plasma_properties[excitation:dilute-lte-beta_sobolev] _____
2025-02-24T15:57:56.6090800Z 
2025-02-24T15:57:56.6090910Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6091010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6091090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6091200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6091300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6091380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6091430Z err_msg = None
2025-02-24T15:57:56.6091430Z 
2025-02-24T15:57:56.6091520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6091570Z         if err_msg is None:
2025-02-24T15:57:56.6091650Z             if left.shape != right.shape:
2025-02-24T15:57:56.6091710Z                 raise_assert_detail(
2025-02-24T15:57:56.6091830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6091870Z                 )
2025-02-24T15:57:56.6091920Z     
2025-02-24T15:57:56.6091970Z             diff = 0
2025-02-24T15:57:56.6092050Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6092130Z                 # count up differences
2025-02-24T15:57:56.6092270Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6092330Z                     diff += 1
2025-02-24T15:57:56.6092370Z     
2025-02-24T15:57:56.6092440Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6092550Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6092700Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6092780Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6092830Z E           
2025-02-24T15:57:56.6092920Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6093130Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6093400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6093410Z 
2025-02-24T15:57:56.6093660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6093660Z 
2025-02-24T15:57:56.6093800Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6093800Z 
2025-02-24T15:57:56.6093970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fa56630>
2025-02-24T15:57:56.6094100Z plasma = <tardis.plasma.base.BasePlasma object at 0x30f1deb70>
2025-02-24T15:57:56.6094210Z attr = 'beta_sobolev'
2025-02-24T15:57:56.6094210Z 
2025-02-24T15:57:56.6094320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6094410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6094470Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6094510Z         try:
2025-02-24T15:57:56.6094640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6094700Z         except KeyError:
2025-02-24T15:57:56.6094810Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6094860Z     
2025-02-24T15:57:56.6094930Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6095000Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6095070Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6095170Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6095230Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6095310Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6095400Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6095450Z             else:
2025-02-24T15:57:56.6095520Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6095610Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6095610Z 
2025-02-24T15:57:56.6095710Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6095810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6095920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6095970Z     ???
2025-02-24T15:57:56.6096060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6096060Z 
2025-02-24T15:57:56.6096110Z >   ???
2025-02-24T15:57:56.6096210Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6096260Z E   
2025-02-24T15:57:56.6096360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6096450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6096510Z E          ...
2025-02-24T15:57:56.6096580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6096680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6096770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6096820Z E          ...
2025-02-24T15:57:56.6096890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6096990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6097070Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6097070Z 
2025-02-24T15:57:56.6097140Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6097310Z _______ TestPlasma.test_plasma_properties[excitation:dilute-lte-j_blues] _______
2025-02-24T15:57:56.6097310Z 
2025-02-24T15:57:56.6097410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6097530Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6097610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6097760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6097870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6097950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6104130Z err_msg = None
2025-02-24T15:57:56.6104170Z 
2025-02-24T15:57:56.6104320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6104390Z         if err_msg is None:
2025-02-24T15:57:56.6104470Z             if left.shape != right.shape:
2025-02-24T15:57:56.6104540Z                 raise_assert_detail(
2025-02-24T15:57:56.6104680Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6105090Z                 )
2025-02-24T15:57:56.6105140Z     
2025-02-24T15:57:56.6105200Z             diff = 0
2025-02-24T15:57:56.6105290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6105370Z                 # count up differences
2025-02-24T15:57:56.6105510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6105580Z                     diff += 1
2025-02-24T15:57:56.6105630Z     
2025-02-24T15:57:56.6105700Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6105820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6105960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6106050Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6106100Z E           
2025-02-24T15:57:56.6106190Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6106420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6106640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6106650Z 
2025-02-24T15:57:56.6106920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6106920Z 
2025-02-24T15:57:56.6107050Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6107060Z 
2025-02-24T15:57:56.6107260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fa567b0>
2025-02-24T15:57:56.6107450Z plasma = <tardis.plasma.base.BasePlasma object at 0x30f1deb70>, attr = 'j_blues'
2025-02-24T15:57:56.6107450Z 
2025-02-24T15:57:56.6107590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6107720Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6107790Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6107840Z         try:
2025-02-24T15:57:56.6107960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6108020Z         except KeyError:
2025-02-24T15:57:56.6108140Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6108200Z     
2025-02-24T15:57:56.6108260Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6108330Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6108400Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6108520Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6108590Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6108660Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6108760Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6108810Z             else:
2025-02-24T15:57:56.6109000Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6109100Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6109100Z 
2025-02-24T15:57:56.6109210Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6109300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6109430Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6109480Z     ???
2025-02-24T15:57:56.6109580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6109580Z 
2025-02-24T15:57:56.6109690Z >   ???
2025-02-24T15:57:56.6109800Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6109850Z E   
2025-02-24T15:57:56.6109950Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6110080Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6110140Z E          ...
2025-02-24T15:57:56.6110220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6110330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6110420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6110480Z E          ...
2025-02-24T15:57:56.6110550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6110650Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6110730Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6110740Z 
2025-02-24T15:57:56.6110810Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6111010Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] _
2025-02-24T15:57:56.6111020Z 
2025-02-24T15:57:56.6111140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6111250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6111330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6111450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6111550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6111630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6111680Z err_msg = None
2025-02-24T15:57:56.6111690Z 
2025-02-24T15:57:56.6111780Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6111840Z         if err_msg is None:
2025-02-24T15:57:56.6111920Z             if left.shape != right.shape:
2025-02-24T15:57:56.6111990Z                 raise_assert_detail(
2025-02-24T15:57:56.6112110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6112170Z                 )
2025-02-24T15:57:56.6112220Z     
2025-02-24T15:57:56.6112270Z             diff = 0
2025-02-24T15:57:56.6112360Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6112430Z                 # count up differences
2025-02-24T15:57:56.6112570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6112630Z                     diff += 1
2025-02-24T15:57:56.6112680Z     
2025-02-24T15:57:56.6112750Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6112860Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6113010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6113110Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6113160Z E           
2025-02-24T15:57:56.6113260Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6113610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6113850Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6113850Z 
2025-02-24T15:57:56.6114110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6114300Z 
2025-02-24T15:57:56.6114450Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6114450Z 
2025-02-24T15:57:56.6114650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fa57530>
2025-02-24T15:57:56.6115250Z plasma = <tardis.plasma.base.BasePlasma object at 0x317ff1580>, attr = 'lines'
2025-02-24T15:57:56.6115260Z 
2025-02-24T15:57:56.6115380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6115570Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6115640Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6115690Z         try:
2025-02-24T15:57:56.6115810Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6115870Z         except KeyError:
2025-02-24T15:57:56.6116110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6116160Z     
2025-02-24T15:57:56.6116230Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6116310Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6116380Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6116490Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6116560Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6116640Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6116740Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6116790Z             else:
2025-02-24T15:57:56.6116860Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6116950Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6116950Z 
2025-02-24T15:57:56.6117050Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6117150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6117270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6117320Z     ???
2025-02-24T15:57:56.6117430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6117430Z 
2025-02-24T15:57:56.6117480Z >   ???
2025-02-24T15:57:56.6117580Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6117640Z E   
2025-02-24T15:57:56.6117750Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6117850Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6117900Z E          ...
2025-02-24T15:57:56.6117970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6118080Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6118170Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6118220Z E          ...
2025-02-24T15:57:56.6118290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6118400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6118480Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6118490Z 
2025-02-24T15:57:56.6118560Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6118810Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] _
2025-02-24T15:57:56.6118810Z 
2025-02-24T15:57:56.6119130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fa575f0>
2025-02-24T15:57:56.6119260Z plasma = <tardis.plasma.base.BasePlasma object at 0x317ff1580>
2025-02-24T15:57:56.6119330Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6119330Z 
2025-02-24T15:57:56.6119440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6119540Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6119600Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6119650Z         try:
2025-02-24T15:57:56.6119770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6119890Z         except KeyError:
2025-02-24T15:57:56.6120000Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6120050Z     
2025-02-24T15:57:56.6120120Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6120190Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6120260Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6120380Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6120450Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6120520Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6120610Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6120610Z 
2025-02-24T15:57:56.6120710Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6120800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6120810Z 
2025-02-24T15:57:56.6120930Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6121000Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6121090Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6121160Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6121630Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6122050Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6122400Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6122590Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6122760Z err_msg = None
2025-02-24T15:57:56.6122770Z 
2025-02-24T15:57:56.6123040Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6123210Z         if err_msg is None:
2025-02-24T15:57:56.6123430Z             if left.shape != right.shape:
2025-02-24T15:57:56.6123610Z                 raise_assert_detail(
2025-02-24T15:57:56.6123950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6124120Z                 )
2025-02-24T15:57:56.6124270Z     
2025-02-24T15:57:56.6124430Z             diff = 0
2025-02-24T15:57:56.6124670Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6124880Z                 # count up differences
2025-02-24T15:57:56.6125260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6125440Z                     diff += 1
2025-02-24T15:57:56.6125730Z     
2025-02-24T15:57:56.6125910Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6126040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6126200Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6126290Z E           AssertionError: Series are different
2025-02-24T15:57:56.6126350Z E           
2025-02-24T15:57:56.6126450Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6127000Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6127300Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6127590Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6127670Z 
2025-02-24T15:57:56.6127950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6128210Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] _
2025-02-24T15:57:56.6128210Z 
2025-02-24T15:57:56.6128390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fa576b0>
2025-02-24T15:57:56.6128530Z plasma = <tardis.plasma.base.BasePlasma object at 0x317ff1580>
2025-02-24T15:57:56.6128600Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6128610Z 
2025-02-24T15:57:56.6128720Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6128830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6128890Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6128940Z         try:
2025-02-24T15:57:56.6129060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6129130Z         except KeyError:
2025-02-24T15:57:56.6129240Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6129290Z     
2025-02-24T15:57:56.6129360Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6129440Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6129520Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6129640Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6129710Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6129810Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6129920Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6129920Z 
2025-02-24T15:57:56.6130030Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6130130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6130130Z 
2025-02-24T15:57:56.6130250Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6130320Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6130420Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6130480Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6130600Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6130670Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6130770Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6130820Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6130880Z err_msg = None
2025-02-24T15:57:56.6130880Z 
2025-02-24T15:57:56.6130970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6131040Z         if err_msg is None:
2025-02-24T15:57:56.6131120Z             if left.shape != right.shape:
2025-02-24T15:57:56.6131180Z                 raise_assert_detail(
2025-02-24T15:57:56.6131300Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6131430Z                 )
2025-02-24T15:57:56.6131490Z     
2025-02-24T15:57:56.6131540Z             diff = 0
2025-02-24T15:57:56.6131640Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6131710Z                 # count up differences
2025-02-24T15:57:56.6131850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6131910Z                     diff += 1
2025-02-24T15:57:56.6131970Z     
2025-02-24T15:57:56.6132030Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6132150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6132360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6132440Z E           AssertionError: Series are different
2025-02-24T15:57:56.6132490Z E           
2025-02-24T15:57:56.6132570Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6132900Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6133230Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6133570Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6133570Z 
2025-02-24T15:57:56.6133830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6134030Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] _
2025-02-24T15:57:56.6134030Z 
2025-02-24T15:57:56.6134150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6134270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6134350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6134470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6134580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6134670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6134730Z err_msg = None
2025-02-24T15:57:56.6134730Z 
2025-02-24T15:57:56.6134820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6134880Z         if err_msg is None:
2025-02-24T15:57:56.6134950Z             if left.shape != right.shape:
2025-02-24T15:57:56.6135010Z                 raise_assert_detail(
2025-02-24T15:57:56.6135130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6135190Z                 )
2025-02-24T15:57:56.6135230Z     
2025-02-24T15:57:56.6135280Z             diff = 0
2025-02-24T15:57:56.6135380Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6135450Z                 # count up differences
2025-02-24T15:57:56.6135850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6135910Z                     diff += 1
2025-02-24T15:57:56.6135960Z     
2025-02-24T15:57:56.6136030Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6136150Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6136290Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6136380Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6136430Z E           
2025-02-24T15:57:56.6136520Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6137010Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6137240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6137240Z 
2025-02-24T15:57:56.6137500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6137500Z 
2025-02-24T15:57:56.6137640Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6137640Z 
2025-02-24T15:57:56.6137830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fa578f0>
2025-02-24T15:57:56.6137980Z plasma = <tardis.plasma.base.BasePlasma object at 0x317ff1580>, attr = 'nu'
2025-02-24T15:57:56.6137990Z 
2025-02-24T15:57:56.6138100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6138190Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6138250Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6138310Z         try:
2025-02-24T15:57:56.6138420Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6138490Z         except KeyError:
2025-02-24T15:57:56.6138600Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6138660Z     
2025-02-24T15:57:56.6138720Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6138790Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6138870Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6138980Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6139060Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6139130Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6139210Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6139220Z 
2025-02-24T15:57:56.6139310Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6139410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6139530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6139580Z     ???
2025-02-24T15:57:56.6139700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6139700Z 
2025-02-24T15:57:56.6139770Z >   ???
2025-02-24T15:57:56.6139870Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6139910Z E   
2025-02-24T15:57:56.6140020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6140120Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6140180Z E          ...
2025-02-24T15:57:56.6140250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6140350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6140550Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6140610Z E          ...
2025-02-24T15:57:56.6140680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6140780Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6140870Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6140870Z 
2025-02-24T15:57:56.6140940Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6141180Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] _
2025-02-24T15:57:56.6141190Z 
2025-02-24T15:57:56.6141300Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6141540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6141650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6141780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6141900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6141980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6142040Z err_msg = None
2025-02-24T15:57:56.6142040Z 
2025-02-24T15:57:56.6142120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6142190Z         if err_msg is None:
2025-02-24T15:57:56.6142260Z             if left.shape != right.shape:
2025-02-24T15:57:56.6142320Z                 raise_assert_detail(
2025-02-24T15:57:56.6142440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6142500Z                 )
2025-02-24T15:57:56.6142550Z     
2025-02-24T15:57:56.6142600Z             diff = 0
2025-02-24T15:57:56.6142700Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6142760Z                 # count up differences
2025-02-24T15:57:56.6142910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6142960Z                     diff += 1
2025-02-24T15:57:56.6143010Z     
2025-02-24T15:57:56.6143080Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6143200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6143340Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6143440Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6143490Z E           
2025-02-24T15:57:56.6143580Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6143810Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6144030Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6144040Z 
2025-02-24T15:57:56.6144290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6144300Z 
2025-02-24T15:57:56.6144440Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6144440Z 
2025-02-24T15:57:56.6144620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fa579b0>
2025-02-24T15:57:56.6144750Z plasma = <tardis.plasma.base.BasePlasma object at 0x317ff1580>
2025-02-24T15:57:56.6144810Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6144810Z 
2025-02-24T15:57:56.6145020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6145110Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6145190Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6145240Z         try:
2025-02-24T15:57:56.6145360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6145420Z         except KeyError:
2025-02-24T15:57:56.6145540Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6145590Z     
2025-02-24T15:57:56.6145660Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6145730Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6145800Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6145980Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6146050Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6146120Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6146220Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6146230Z 
2025-02-24T15:57:56.6146320Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6146430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6146550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6146600Z     ???
2025-02-24T15:57:56.6146700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6146700Z 
2025-02-24T15:57:56.6146760Z >   ???
2025-02-24T15:57:56.6146860Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6146910Z E   
2025-02-24T15:57:56.6147020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6147110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6147160Z E          ...
2025-02-24T15:57:56.6147230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6147340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6147440Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6147480Z E          ...
2025-02-24T15:57:56.6147550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6147660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6147740Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6147740Z 
2025-02-24T15:57:56.6147820Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6148030Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] _
2025-02-24T15:57:56.6148030Z 
2025-02-24T15:57:56.6148140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6148260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6148330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6148450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6148550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6148630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6148690Z err_msg = None
2025-02-24T15:57:56.6148690Z 
2025-02-24T15:57:56.6149030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6149400Z         if err_msg is None:
2025-02-24T15:57:56.6149950Z             if left.shape != right.shape:
2025-02-24T15:57:56.6150190Z                 raise_assert_detail(
2025-02-24T15:57:56.6150550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6150740Z                 )
2025-02-24T15:57:56.6150890Z     
2025-02-24T15:57:56.6151050Z             diff = 0
2025-02-24T15:57:56.6151300Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6151480Z                 # count up differences
2025-02-24T15:57:56.6152080Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6152190Z                     diff += 1
2025-02-24T15:57:56.6152240Z     
2025-02-24T15:57:56.6152310Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6152420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6152570Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6152650Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6152700Z E           
2025-02-24T15:57:56.6152790Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6153090Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6153320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6153320Z 
2025-02-24T15:57:56.6153570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6153570Z 
2025-02-24T15:57:56.6153720Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6153720Z 
2025-02-24T15:57:56.6153900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fa57a70>
2025-02-24T15:57:56.6154060Z plasma = <tardis.plasma.base.BasePlasma object at 0x317ff1580>, attr = 'f_lu'
2025-02-24T15:57:56.6154070Z 
2025-02-24T15:57:56.6154180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6154270Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6154340Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6154390Z         try:
2025-02-24T15:57:56.6154510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6154560Z         except KeyError:
2025-02-24T15:57:56.6154670Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6154720Z     
2025-02-24T15:57:56.6154790Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6154860Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6154930Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6155040Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6155110Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6155180Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6155350Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6155360Z 
2025-02-24T15:57:56.6155460Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6155550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6155670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6155720Z     ???
2025-02-24T15:57:56.6155820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6155820Z 
2025-02-24T15:57:56.6155870Z >   ???
2025-02-24T15:57:56.6155970Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6156010Z E   
2025-02-24T15:57:56.6156120Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6156210Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6156260Z E          ...
2025-02-24T15:57:56.6156330Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6156440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6156670Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6156730Z E          ...
2025-02-24T15:57:56.6156800Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6156900Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6156980Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6156980Z 
2025-02-24T15:57:56.6157050Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6157270Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] _
2025-02-24T15:57:56.6157270Z 
2025-02-24T15:57:56.6157380Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6157580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6157660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6157770Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6157880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6157950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6158010Z err_msg = None
2025-02-24T15:57:56.6158010Z 
2025-02-24T15:57:56.6158100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6158170Z         if err_msg is None:
2025-02-24T15:57:56.6158240Z             if left.shape != right.shape:
2025-02-24T15:57:56.6158310Z                 raise_assert_detail(
2025-02-24T15:57:56.6158430Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6158480Z                 )
2025-02-24T15:57:56.6158520Z     
2025-02-24T15:57:56.6158570Z             diff = 0
2025-02-24T15:57:56.6158670Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6158730Z                 # count up differences
2025-02-24T15:57:56.6158870Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6158930Z                     diff += 1
2025-02-24T15:57:56.6158980Z     
2025-02-24T15:57:56.6159050Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6159160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6159300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6159390Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6159440Z E           
2025-02-24T15:57:56.6159530Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6159750Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6159980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6159980Z 
2025-02-24T15:57:56.6160220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6160230Z 
2025-02-24T15:57:56.6160360Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6160370Z 
2025-02-24T15:57:56.6160550Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae0230>
2025-02-24T15:57:56.6160680Z plasma = <tardis.plasma.base.BasePlasma object at 0x317ff1580>
2025-02-24T15:57:56.6160740Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6160740Z 
2025-02-24T15:57:56.6160900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6160990Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6161060Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6161110Z         try:
2025-02-24T15:57:56.6161230Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6161280Z         except KeyError:
2025-02-24T15:57:56.6161400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6168340Z     
2025-02-24T15:57:56.6168440Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6168520Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6168710Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6168830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6168890Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6168960Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6169060Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6169110Z             else:
2025-02-24T15:57:56.6169180Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6169270Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6169270Z 
2025-02-24T15:57:56.6169370Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6169460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6169590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6169640Z     ???
2025-02-24T15:57:56.6169740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6169750Z 
2025-02-24T15:57:56.6169790Z >   ???
2025-02-24T15:57:56.6169900Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6169950Z E   
2025-02-24T15:57:56.6171820Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6171920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6171970Z E          ...
2025-02-24T15:57:56.6172050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6172150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6172250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6172290Z E          ...
2025-02-24T15:57:56.6172360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6172460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6172540Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6172540Z 
2025-02-24T15:57:56.6172620Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6172840Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] _
2025-02-24T15:57:56.6172840Z 
2025-02-24T15:57:56.6172960Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6173070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6173150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6173260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6173380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6173460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6173510Z err_msg = None
2025-02-24T15:57:56.6173520Z 
2025-02-24T15:57:56.6173610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6173670Z         if err_msg is None:
2025-02-24T15:57:56.6173740Z             if left.shape != right.shape:
2025-02-24T15:57:56.6173800Z                 raise_assert_detail(
2025-02-24T15:57:56.6173920Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6173970Z                 )
2025-02-24T15:57:56.6174120Z     
2025-02-24T15:57:56.6174170Z             diff = 0
2025-02-24T15:57:56.6174270Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6174340Z                 # count up differences
2025-02-24T15:57:56.6174480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6174540Z                     diff += 1
2025-02-24T15:57:56.6174590Z     
2025-02-24T15:57:56.6174660Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6174770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6174910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6175060Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6175120Z E           
2025-02-24T15:57:56.6175200Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6175430Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6175650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6175650Z 
2025-02-24T15:57:56.6175900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6175900Z 
2025-02-24T15:57:56.6176050Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6176060Z 
2025-02-24T15:57:56.6176230Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae02f0>
2025-02-24T15:57:56.6176360Z plasma = <tardis.plasma.base.BasePlasma object at 0x317ff1580>
2025-02-24T15:57:56.6176420Z attr = 'beta_sobolev'
2025-02-24T15:57:56.6176420Z 
2025-02-24T15:57:56.6176530Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6176630Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6176690Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6176740Z         try:
2025-02-24T15:57:56.6176850Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6176910Z         except KeyError:
2025-02-24T15:57:56.6177030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6177080Z     
2025-02-24T15:57:56.6177150Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6177220Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6177290Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6177400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6177470Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6177530Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6177620Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6177670Z             else:
2025-02-24T15:57:56.6177750Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6177830Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6177840Z 
2025-02-24T15:57:56.6177930Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6178040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6178160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6178210Z     ???
2025-02-24T15:57:56.6178300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6178300Z 
2025-02-24T15:57:56.6178350Z >   ???
2025-02-24T15:57:56.6178530Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6178610Z E   
2025-02-24T15:57:56.6178710Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6178810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6178860Z E          ...
2025-02-24T15:57:56.6178920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6179030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6179120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6179170Z E          ...
2025-02-24T15:57:56.6179240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6179410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6179500Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6179500Z 
2025-02-24T15:57:56.6179570Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6179770Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] _
2025-02-24T15:57:56.6179780Z 
2025-02-24T15:57:56.6179890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6180000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6180070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6180190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6180290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6180370Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6180420Z err_msg = None
2025-02-24T15:57:56.6180430Z 
2025-02-24T15:57:56.6180520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6180580Z         if err_msg is None:
2025-02-24T15:57:56.6180650Z             if left.shape != right.shape:
2025-02-24T15:57:56.6180720Z                 raise_assert_detail(
2025-02-24T15:57:56.6180830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6180890Z                 )
2025-02-24T15:57:56.6180930Z     
2025-02-24T15:57:56.6180990Z             diff = 0
2025-02-24T15:57:56.6181080Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6181150Z                 # count up differences
2025-02-24T15:57:56.6181290Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6181340Z                     diff += 1
2025-02-24T15:57:56.6181400Z     
2025-02-24T15:57:56.6181460Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6181570Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6181710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6181810Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6181850Z E           
2025-02-24T15:57:56.6181950Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6182160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6182390Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6182390Z 
2025-02-24T15:57:56.6182640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6182730Z 
2025-02-24T15:57:56.6182870Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6182880Z 
2025-02-24T15:57:56.6183060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae0470>
2025-02-24T15:57:56.6183230Z plasma = <tardis.plasma.base.BasePlasma object at 0x317ff1580>, attr = 'j_blues'
2025-02-24T15:57:56.6183230Z 
2025-02-24T15:57:56.6183340Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6183440Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6183500Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6183800Z         try:
2025-02-24T15:57:56.6183920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6183980Z         except KeyError:
2025-02-24T15:57:56.6184090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6184140Z     
2025-02-24T15:57:56.6184200Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6184280Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6184350Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6184460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6184530Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6184590Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6184690Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6184740Z             else:
2025-02-24T15:57:56.6184810Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6184900Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6184900Z 
2025-02-24T15:57:56.6185000Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6185100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6185220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6185270Z     ???
2025-02-24T15:57:56.6185360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6185360Z 
2025-02-24T15:57:56.6185410Z >   ???
2025-02-24T15:57:56.6185520Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6185570Z E   
2025-02-24T15:57:56.6185670Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6185760Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6185810Z E          ...
2025-02-24T15:57:56.6185880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6185990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6186080Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6186130Z E          ...
2025-02-24T15:57:56.6186200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6186310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6186400Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6186400Z 
2025-02-24T15:57:56.6186470Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6186640Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines] ____
2025-02-24T15:57:56.6186640Z 
2025-02-24T15:57:56.6186760Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6186860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6186940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6187050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6187160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6187240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6187290Z err_msg = None
2025-02-24T15:57:56.6187290Z 
2025-02-24T15:57:56.6187430Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6187500Z         if err_msg is None:
2025-02-24T15:57:56.6187580Z             if left.shape != right.shape:
2025-02-24T15:57:56.6187640Z                 raise_assert_detail(
2025-02-24T15:57:56.6187760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6187810Z                 )
2025-02-24T15:57:56.6187860Z     
2025-02-24T15:57:56.6187910Z             diff = 0
2025-02-24T15:57:56.6187990Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6188060Z                 # count up differences
2025-02-24T15:57:56.6188240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6188300Z                     diff += 1
2025-02-24T15:57:56.6188350Z     
2025-02-24T15:57:56.6188410Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6188520Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6188670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6188760Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6188810Z E           
2025-02-24T15:57:56.6188910Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6189120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6189350Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6189350Z 
2025-02-24T15:57:56.6189600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6189600Z 
2025-02-24T15:57:56.6189740Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6189740Z 
2025-02-24T15:57:56.6189920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae11f0>
2025-02-24T15:57:56.6190080Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ec3f5f0>, attr = 'lines'
2025-02-24T15:57:56.6190080Z 
2025-02-24T15:57:56.6190190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6190290Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6190350Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6190410Z         try:
2025-02-24T15:57:56.6190520Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6190580Z         except KeyError:
2025-02-24T15:57:56.6190690Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6190740Z     
2025-02-24T15:57:56.6190810Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6190880Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6190950Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6191070Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6191130Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6191190Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6191290Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6191340Z             else:
2025-02-24T15:57:56.6191420Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6191500Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6191510Z 
2025-02-24T15:57:56.6191600Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6191740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6191870Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6191920Z     ???
2025-02-24T15:57:56.6192020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6192020Z 
2025-02-24T15:57:56.6192070Z >   ???
2025-02-24T15:57:56.6192170Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6192210Z E   
2025-02-24T15:57:56.6192320Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6192410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6192500Z E          ...
2025-02-24T15:57:56.6192570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6192670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6192770Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6192820Z E          ...
2025-02-24T15:57:56.6192890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6193000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6193080Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6193080Z 
2025-02-24T15:57:56.6193150Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6193350Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] _
2025-02-24T15:57:56.6193360Z 
2025-02-24T15:57:56.6193530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae12b0>
2025-02-24T15:57:56.6193660Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ec3f5f0>
2025-02-24T15:57:56.6193730Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6193740Z 
2025-02-24T15:57:56.6193850Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6193930Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6194000Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6194050Z         try:
2025-02-24T15:57:56.6194170Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6194220Z         except KeyError:
2025-02-24T15:57:56.6194350Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6194390Z     
2025-02-24T15:57:56.6194460Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6194530Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6194590Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6194700Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6194770Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6194840Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6194930Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6194940Z 
2025-02-24T15:57:56.6195040Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6195140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6195140Z 
2025-02-24T15:57:56.6195250Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6195390Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6195490Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6195550Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6195670Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6195730Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6195820Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6195890Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6195940Z err_msg = None
2025-02-24T15:57:56.6195940Z 
2025-02-24T15:57:56.6196030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6196090Z         if err_msg is None:
2025-02-24T15:57:56.6196210Z             if left.shape != right.shape:
2025-02-24T15:57:56.6196280Z                 raise_assert_detail(
2025-02-24T15:57:56.6196400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6196450Z                 )
2025-02-24T15:57:56.6196490Z     
2025-02-24T15:57:56.6196550Z             diff = 0
2025-02-24T15:57:56.6196630Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6196700Z                 # count up differences
2025-02-24T15:57:56.6196850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6196910Z                     diff += 1
2025-02-24T15:57:56.6196990Z     
2025-02-24T15:57:56.6197060Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6197170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6197320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6197400Z E           AssertionError: Series are different
2025-02-24T15:57:56.6197450Z E           
2025-02-24T15:57:56.6197530Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6197840Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6198120Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6198410Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6198410Z 
2025-02-24T15:57:56.6198660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6198870Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] _
2025-02-24T15:57:56.6198880Z 
2025-02-24T15:57:56.6199050Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae1370>
2025-02-24T15:57:56.6199180Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ec3f5f0>
2025-02-24T15:57:56.6199250Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6199250Z 
2025-02-24T15:57:56.6199370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6199460Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6199520Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6199570Z         try:
2025-02-24T15:57:56.6199680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6199740Z         except KeyError:
2025-02-24T15:57:56.6199860Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6199900Z     
2025-02-24T15:57:56.6199970Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6200050Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6200120Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6200220Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6200300Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6200370Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6200530Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6200540Z 
2025-02-24T15:57:56.6200640Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6200740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6200740Z 
2025-02-24T15:57:56.6200850Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6200930Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6201020Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6201080Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6201270Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6201330Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6201420Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6201490Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6201540Z err_msg = None
2025-02-24T15:57:56.6201540Z 
2025-02-24T15:57:56.6201630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6201690Z         if err_msg is None:
2025-02-24T15:57:56.6201760Z             if left.shape != right.shape:
2025-02-24T15:57:56.6201820Z                 raise_assert_detail(
2025-02-24T15:57:56.6201940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6202010Z                 )
2025-02-24T15:57:56.6202060Z     
2025-02-24T15:57:56.6202110Z             diff = 0
2025-02-24T15:57:56.6202200Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6202270Z                 # count up differences
2025-02-24T15:57:56.6202410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6202470Z                     diff += 1
2025-02-24T15:57:56.6202550Z     
2025-02-24T15:57:56.6202620Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6202740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6202900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6202990Z E           AssertionError: Series are different
2025-02-24T15:57:56.6203040Z E           
2025-02-24T15:57:56.6203120Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6203440Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6203750Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6204070Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6204080Z 
2025-02-24T15:57:56.6204330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6204500Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-nu] ______
2025-02-24T15:57:56.6204580Z 
2025-02-24T15:57:56.6204690Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6204800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6204880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6204990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6205100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6205180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6205290Z err_msg = None
2025-02-24T15:57:56.6205290Z 
2025-02-24T15:57:56.6205370Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6205430Z         if err_msg is None:
2025-02-24T15:57:56.6205500Z             if left.shape != right.shape:
2025-02-24T15:57:56.6205580Z                 raise_assert_detail(
2025-02-24T15:57:56.6205690Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6205750Z                 )
2025-02-24T15:57:56.6205790Z     
2025-02-24T15:57:56.6205840Z             diff = 0
2025-02-24T15:57:56.6205930Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6206000Z                 # count up differences
2025-02-24T15:57:56.6206140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6206190Z                     diff += 1
2025-02-24T15:57:56.6206250Z     
2025-02-24T15:57:56.6206320Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6206430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6206560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6206660Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6206710Z E           
2025-02-24T15:57:56.6206800Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6207020Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6207240Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6207250Z 
2025-02-24T15:57:56.6207520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6207520Z 
2025-02-24T15:57:56.6207660Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6207670Z 
2025-02-24T15:57:56.6207840Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae15b0>
2025-02-24T15:57:56.6208000Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ec3f5f0>, attr = 'nu'
2025-02-24T15:57:56.6208000Z 
2025-02-24T15:57:56.6208110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6208200Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6208260Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6208320Z         try:
2025-02-24T15:57:56.6208440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6208500Z         except KeyError:
2025-02-24T15:57:56.6208610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6208650Z     
2025-02-24T15:57:56.6208720Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6208860Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6208940Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6209050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6209110Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6209180Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6209280Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6209280Z 
2025-02-24T15:57:56.6209380Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6209470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6209630Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6209690Z     ???
2025-02-24T15:57:56.6209790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6209790Z 
2025-02-24T15:57:56.6209830Z >   ???
2025-02-24T15:57:56.6209930Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6209980Z E   
2025-02-24T15:57:56.6210090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6210180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6210230Z E          ...
2025-02-24T15:57:56.6210300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6210410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6210500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6210550Z E          ...
2025-02-24T15:57:56.6210620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6210720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6210800Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6210810Z 
2025-02-24T15:57:56.6210870Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6211050Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] _
2025-02-24T15:57:56.6211060Z 
2025-02-24T15:57:56.6211160Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6211270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6211350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6211460Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6211560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6211640Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6211700Z err_msg = None
2025-02-24T15:57:56.6211700Z 
2025-02-24T15:57:56.6211790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6211840Z         if err_msg is None:
2025-02-24T15:57:56.6211920Z             if left.shape != right.shape:
2025-02-24T15:57:56.6211980Z                 raise_assert_detail(
2025-02-24T15:57:56.6212100Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6212150Z                 )
2025-02-24T15:57:56.6212200Z     
2025-02-24T15:57:56.6212250Z             diff = 0
2025-02-24T15:57:56.6212340Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6212400Z                 # count up differences
2025-02-24T15:57:56.6212540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6212600Z                     diff += 1
2025-02-24T15:57:56.6212650Z     
2025-02-24T15:57:56.6212720Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6212840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6212980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6213080Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6213120Z E           
2025-02-24T15:57:56.6213250Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6213480Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6213710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6213750Z 
2025-02-24T15:57:56.6214000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6214000Z 
2025-02-24T15:57:56.6214150Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6214150Z 
2025-02-24T15:57:56.6214330Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae1670>
2025-02-24T15:57:56.6214460Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ec3f5f0>
2025-02-24T15:57:56.6214520Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6214520Z 
2025-02-24T15:57:56.6214630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6214720Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6214790Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6214840Z         try:
2025-02-24T15:57:56.6214960Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6215020Z         except KeyError:
2025-02-24T15:57:56.6215130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6215180Z     
2025-02-24T15:57:56.6215300Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6215380Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6215450Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6215570Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6215630Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6215710Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6215790Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6215800Z 
2025-02-24T15:57:56.6215900Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6215990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6216120Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6216180Z     ???
2025-02-24T15:57:56.6221160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6221170Z 
2025-02-24T15:57:56.6221240Z >   ???
2025-02-24T15:57:56.6221350Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6221400Z E   
2025-02-24T15:57:56.6221500Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6221600Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6221650Z E          ...
2025-02-24T15:57:56.6221740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6221850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6221940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6222000Z E          ...
2025-02-24T15:57:56.6222070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6222170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6222250Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6222250Z 
2025-02-24T15:57:56.6222320Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6222500Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-f_lu] _____
2025-02-24T15:57:56.6222820Z 
2025-02-24T15:57:56.6222940Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6223070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6223150Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6223260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6223370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6223450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6223610Z err_msg = None
2025-02-24T15:57:56.6223610Z 
2025-02-24T15:57:56.6223710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6223780Z         if err_msg is None:
2025-02-24T15:57:56.6223860Z             if left.shape != right.shape:
2025-02-24T15:57:56.6223930Z                 raise_assert_detail(
2025-02-24T15:57:56.6224050Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6224100Z                 )
2025-02-24T15:57:56.6224150Z     
2025-02-24T15:57:56.6224200Z             diff = 0
2025-02-24T15:57:56.6224290Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6224360Z                 # count up differences
2025-02-24T15:57:56.6224500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6224560Z                     diff += 1
2025-02-24T15:57:56.6224610Z     
2025-02-24T15:57:56.6224680Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6224790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6224930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6225030Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6225080Z E           
2025-02-24T15:57:56.6225180Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6225400Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6225620Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6225620Z 
2025-02-24T15:57:56.6225870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6225880Z 
2025-02-24T15:57:56.6226020Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6226020Z 
2025-02-24T15:57:56.6226200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae1730>
2025-02-24T15:57:56.6226370Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ec3f5f0>, attr = 'f_lu'
2025-02-24T15:57:56.6226370Z 
2025-02-24T15:57:56.6226480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6226570Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6226640Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6226690Z         try:
2025-02-24T15:57:56.6226800Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6226860Z         except KeyError:
2025-02-24T15:57:56.6226970Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6227020Z     
2025-02-24T15:57:56.6227080Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6227210Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6227280Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6227390Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6227460Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6227540Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6227620Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6227630Z 
2025-02-24T15:57:56.6227720Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6227820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6227990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6228040Z     ???
2025-02-24T15:57:56.6228130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6228140Z 
2025-02-24T15:57:56.6228190Z >   ???
2025-02-24T15:57:56.6228290Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6228340Z E   
2025-02-24T15:57:56.6228440Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6228530Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6228580Z E          ...
2025-02-24T15:57:56.6228640Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6228750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6228840Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6228880Z E          ...
2025-02-24T15:57:56.6228950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6229060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6229140Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6229140Z 
2025-02-24T15:57:56.6229210Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6229390Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] _
2025-02-24T15:57:56.6229390Z 
2025-02-24T15:57:56.6229500Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6229620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6229690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6229800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6229910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6229980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6230040Z err_msg = None
2025-02-24T15:57:56.6230040Z 
2025-02-24T15:57:56.6230130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6230190Z         if err_msg is None:
2025-02-24T15:57:56.6230260Z             if left.shape != right.shape:
2025-02-24T15:57:56.6230330Z                 raise_assert_detail(
2025-02-24T15:57:56.6230450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6230500Z                 )
2025-02-24T15:57:56.6230550Z     
2025-02-24T15:57:56.6230600Z             diff = 0
2025-02-24T15:57:56.6230700Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6230760Z                 # count up differences
2025-02-24T15:57:56.6230910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6230960Z                     diff += 1
2025-02-24T15:57:56.6231410Z     
2025-02-24T15:57:56.6232060Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6232210Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6232360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6232450Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6232500Z E           
2025-02-24T15:57:56.6232700Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6232930Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6233160Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6233210Z 
2025-02-24T15:57:56.6233480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6233480Z 
2025-02-24T15:57:56.6233630Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6233630Z 
2025-02-24T15:57:56.6233810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae1eb0>
2025-02-24T15:57:56.6233940Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ec3f5f0>
2025-02-24T15:57:56.6234000Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6234000Z 
2025-02-24T15:57:56.6234120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6234210Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6234270Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6234310Z         try:
2025-02-24T15:57:56.6234440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6234500Z         except KeyError:
2025-02-24T15:57:56.6234610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6234660Z     
2025-02-24T15:57:56.6234720Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6234810Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6235060Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6235190Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6235250Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6235320Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6235480Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6235540Z             else:
2025-02-24T15:57:56.6235610Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6235700Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6235710Z 
2025-02-24T15:57:56.6235810Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6235900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6236030Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6236070Z     ???
2025-02-24T15:57:56.6236180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6236180Z 
2025-02-24T15:57:56.6236230Z >   ???
2025-02-24T15:57:56.6236340Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6236380Z E   
2025-02-24T15:57:56.6236480Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6236580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6236630Z E          ...
2025-02-24T15:57:56.6236700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6236800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6236900Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6236950Z E          ...
2025-02-24T15:57:56.6237030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6237130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6237320Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6237330Z 
2025-02-24T15:57:56.6237400Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6237580Z _ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] _
2025-02-24T15:57:56.6237580Z 
2025-02-24T15:57:56.6237700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6237800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6237880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6237990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6238170Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6238250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6238310Z err_msg = None
2025-02-24T15:57:56.6238310Z 
2025-02-24T15:57:56.6238410Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6238470Z         if err_msg is None:
2025-02-24T15:57:56.6238540Z             if left.shape != right.shape:
2025-02-24T15:57:56.6238610Z                 raise_assert_detail(
2025-02-24T15:57:56.6238740Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6238790Z                 )
2025-02-24T15:57:56.6238840Z     
2025-02-24T15:57:56.6238890Z             diff = 0
2025-02-24T15:57:56.6238980Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6239040Z                 # count up differences
2025-02-24T15:57:56.6239200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6239260Z                     diff += 1
2025-02-24T15:57:56.6239310Z     
2025-02-24T15:57:56.6239380Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6239490Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6239640Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6239730Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6239780Z E           
2025-02-24T15:57:56.6239870Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6240100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6240320Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6240330Z 
2025-02-24T15:57:56.6240590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6240600Z 
2025-02-24T15:57:56.6240750Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6240750Z 
2025-02-24T15:57:56.6240930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae1f70>
2025-02-24T15:57:56.6241060Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ec3f5f0>
2025-02-24T15:57:56.6241120Z attr = 'beta_sobolev'
2025-02-24T15:57:56.6241130Z 
2025-02-24T15:57:56.6241240Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6241340Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6241400Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6241440Z         try:
2025-02-24T15:57:56.6241560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6241710Z         except KeyError:
2025-02-24T15:57:56.6241880Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6241960Z     
2025-02-24T15:57:56.6242030Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6242570Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6242670Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6242790Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6242860Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6242930Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6243220Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6243590Z             else:
2025-02-24T15:57:56.6243680Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6243770Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6243770Z 
2025-02-24T15:57:56.6243870Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6243970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6244090Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6244140Z     ???
2025-02-24T15:57:56.6244230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6244240Z 
2025-02-24T15:57:56.6244280Z >   ???
2025-02-24T15:57:56.6244380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6244800Z E   
2025-02-24T15:57:56.6244930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6245040Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6245110Z E          ...
2025-02-24T15:57:56.6245180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6245300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6245390Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6245440Z E          ...
2025-02-24T15:57:56.6245520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6245620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6245710Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6245710Z 
2025-02-24T15:57:56.6245780Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6245970Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:detailed-j_blues] ___
2025-02-24T15:57:56.6245970Z 
2025-02-24T15:57:56.6246090Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6246220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6246310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6246440Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6246550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6246630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6246680Z err_msg = None
2025-02-24T15:57:56.6246680Z 
2025-02-24T15:57:56.6246760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6246830Z         if err_msg is None:
2025-02-24T15:57:56.6246900Z             if left.shape != right.shape:
2025-02-24T15:57:56.6246970Z                 raise_assert_detail(
2025-02-24T15:57:56.6248060Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6248150Z                 )
2025-02-24T15:57:56.6248210Z     
2025-02-24T15:57:56.6248270Z             diff = 0
2025-02-24T15:57:56.6248360Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6248430Z                 # count up differences
2025-02-24T15:57:56.6248570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6249110Z                     diff += 1
2025-02-24T15:57:56.6249180Z     
2025-02-24T15:57:56.6249260Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6249370Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6249510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6249610Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6249650Z E           
2025-02-24T15:57:56.6249740Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6249960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6250610Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6250620Z 
2025-02-24T15:57:56.6250930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6250930Z 
2025-02-24T15:57:56.6251080Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6251080Z 
2025-02-24T15:57:56.6251270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae20f0>
2025-02-24T15:57:56.6251440Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ec3f5f0>, attr = 'j_blues'
2025-02-24T15:57:56.6251450Z 
2025-02-24T15:57:56.6251570Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6251680Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6251740Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6251790Z         try:
2025-02-24T15:57:56.6251920Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6251990Z         except KeyError:
2025-02-24T15:57:56.6252110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6252160Z     
2025-02-24T15:57:56.6252240Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6252340Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6252410Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6252540Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6252810Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6252910Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6253000Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6253060Z             else:
2025-02-24T15:57:56.6253150Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6253250Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6253250Z 
2025-02-24T15:57:56.6253380Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6253490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6253610Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6253650Z     ???
2025-02-24T15:57:56.6253760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6253760Z 
2025-02-24T15:57:56.6253810Z >   ???
2025-02-24T15:57:56.6254080Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6254280Z E   
2025-02-24T15:57:56.6254410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6254500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6254550Z E          ...
2025-02-24T15:57:56.6254620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6254940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6255050Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6255100Z E          ...
2025-02-24T15:57:56.6255170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6255280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6255360Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6255360Z 
2025-02-24T15:57:56.6255440Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6255610Z ___ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines] ____
2025-02-24T15:57:56.6255670Z 
2025-02-24T15:57:56.6255790Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6255900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6255980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6256110Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6256210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6256630Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6256700Z err_msg = None
2025-02-24T15:57:56.6256700Z 
2025-02-24T15:57:56.6256790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6256840Z         if err_msg is None:
2025-02-24T15:57:56.6256920Z             if left.shape != right.shape:
2025-02-24T15:57:56.6257000Z                 raise_assert_detail(
2025-02-24T15:57:56.6257130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6257190Z                 )
2025-02-24T15:57:56.6257240Z     
2025-02-24T15:57:56.6257290Z             diff = 0
2025-02-24T15:57:56.6257370Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6257440Z                 # count up differences
2025-02-24T15:57:56.6257590Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6257650Z                     diff += 1
2025-02-24T15:57:56.6257690Z     
2025-02-24T15:57:56.6257760Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6258160Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6258350Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6258820Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6258910Z E           
2025-02-24T15:57:56.6259020Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6259540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6259780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6259780Z 
2025-02-24T15:57:56.6260040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6260040Z 
2025-02-24T15:57:56.6260190Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6260190Z 
2025-02-24T15:57:56.6260370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae2e70>
2025-02-24T15:57:56.6260600Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a91cb60>, attr = 'lines'
2025-02-24T15:57:56.6260600Z 
2025-02-24T15:57:56.6260810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6260900Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6260970Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6261020Z         try:
2025-02-24T15:57:56.6261130Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6261190Z         except KeyError:
2025-02-24T15:57:56.6261300Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6261360Z     
2025-02-24T15:57:56.6261430Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6261500Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6261610Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6261720Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6261790Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6261860Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6262120Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6262420Z             else:
2025-02-24T15:57:56.6262510Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6262600Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6262610Z 
2025-02-24T15:57:56.6262710Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6262800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6262920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6262970Z     ???
2025-02-24T15:57:56.6263070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6263080Z 
2025-02-24T15:57:56.6263120Z >   ???
2025-02-24T15:57:56.6263240Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6263290Z E   
2025-02-24T15:57:56.6263400Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6263500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6263550Z E          ...
2025-02-24T15:57:56.6263620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6263730Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6263820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6263870Z E          ...
2025-02-24T15:57:56.6263950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6264050Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6264130Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6264140Z 
2025-02-24T15:57:56.6264210Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6264820Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] _
2025-02-24T15:57:56.6264830Z 
2025-02-24T15:57:56.6265060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae2f30>
2025-02-24T15:57:56.6265200Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a91cb60>
2025-02-24T15:57:56.6265600Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6265620Z 
2025-02-24T15:57:56.6265970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6266080Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6266140Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6266200Z         try:
2025-02-24T15:57:56.6266320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6266520Z         except KeyError:
2025-02-24T15:57:56.6267100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6267180Z     
2025-02-24T15:57:56.6267250Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6267330Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6267740Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6267870Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6268090Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6268160Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6268250Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6268250Z 
2025-02-24T15:57:56.6268370Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6268460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6268460Z 
2025-02-24T15:57:56.6268580Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6268650Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6269010Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6269080Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6269200Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6269620Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6269730Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6269790Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6269850Z err_msg = None
2025-02-24T15:57:56.6269850Z 
2025-02-24T15:57:56.6269940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6269990Z         if err_msg is None:
2025-02-24T15:57:56.6270060Z             if left.shape != right.shape:
2025-02-24T15:57:56.6270130Z                 raise_assert_detail(
2025-02-24T15:57:56.6270250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6270310Z                 )
2025-02-24T15:57:56.6270360Z     
2025-02-24T15:57:56.6270410Z             diff = 0
2025-02-24T15:57:56.6270970Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6271570Z                 # count up differences
2025-02-24T15:57:56.6271730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6271800Z                     diff += 1
2025-02-24T15:57:56.6271840Z     
2025-02-24T15:57:56.6271920Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6272030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6272170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6272250Z E           AssertionError: Series are different
2025-02-24T15:57:56.6272290Z E           
2025-02-24T15:57:56.6272370Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6272690Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6273770Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6274100Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6274110Z 
2025-02-24T15:57:56.6274370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6276530Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] _
2025-02-24T15:57:56.6276540Z 
2025-02-24T15:57:56.6276750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae2ff0>
2025-02-24T15:57:56.6276890Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a91cb60>
2025-02-24T15:57:56.6276960Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6276960Z 
2025-02-24T15:57:56.6277070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6277170Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6277230Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6277340Z         try:
2025-02-24T15:57:56.6277470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6277530Z         except KeyError:
2025-02-24T15:57:56.6277640Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6277870Z     
2025-02-24T15:57:56.6278110Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6278200Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6278260Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6278370Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6278440Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6278500Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6278600Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6278600Z 
2025-02-24T15:57:56.6278700Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6278790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6278790Z 
2025-02-24T15:57:56.6279230Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6279310Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6279410Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6279470Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6279590Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6279650Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6279750Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6279810Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6279860Z err_msg = None
2025-02-24T15:57:56.6279860Z 
2025-02-24T15:57:56.6279950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6280000Z         if err_msg is None:
2025-02-24T15:57:56.6280080Z             if left.shape != right.shape:
2025-02-24T15:57:56.6280140Z                 raise_assert_detail(
2025-02-24T15:57:56.6280730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6280960Z                 )
2025-02-24T15:57:56.6281500Z     
2025-02-24T15:57:56.6281890Z             diff = 0
2025-02-24T15:57:56.6282170Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6282260Z                 # count up differences
2025-02-24T15:57:56.6282400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6282470Z                     diff += 1
2025-02-24T15:57:56.6282510Z     
2025-02-24T15:57:56.6282590Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6282700Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6282850Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6282930Z E           AssertionError: Series are different
2025-02-24T15:57:56.6282980Z E           
2025-02-24T15:57:56.6283060Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6283850Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6284190Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6284570Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6284580Z 
2025-02-24T15:57:56.6284830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6285000Z _____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-nu] _____
2025-02-24T15:57:56.6285000Z 
2025-02-24T15:57:56.6285110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6285550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6286470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6286970Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6287460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6287590Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6295430Z err_msg = None
2025-02-24T15:57:56.6295450Z 
2025-02-24T15:57:56.6295760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6295870Z         if err_msg is None:
2025-02-24T15:57:56.6295980Z             if left.shape != right.shape:
2025-02-24T15:57:56.6296040Z                 raise_assert_detail(
2025-02-24T15:57:56.6296210Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6296290Z                 )
2025-02-24T15:57:56.6296390Z     
2025-02-24T15:57:56.6296470Z             diff = 0
2025-02-24T15:57:56.6296630Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6296730Z                 # count up differences
2025-02-24T15:57:56.6296910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6296970Z                     diff += 1
2025-02-24T15:57:56.6297560Z     
2025-02-24T15:57:56.6297830Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6298300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6299460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6299610Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6299660Z E           
2025-02-24T15:57:56.6299750Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6300050Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6301650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6301670Z 
2025-02-24T15:57:56.6302030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6302030Z 
2025-02-24T15:57:56.6302260Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6302260Z 
2025-02-24T15:57:56.6302480Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae3230>
2025-02-24T15:57:56.6302710Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a91cb60>, attr = 'nu'
2025-02-24T15:57:56.6302960Z 
2025-02-24T15:57:56.6303500Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6304300Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6304410Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6304480Z         try:
2025-02-24T15:57:56.6304660Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6304770Z         except KeyError:
2025-02-24T15:57:56.6304940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6305020Z     
2025-02-24T15:57:56.6305140Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6305220Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6305550Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6305960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6306050Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6306190Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6306310Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6306320Z 
2025-02-24T15:57:56.6306590Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6307360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6307590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6307680Z     ???
2025-02-24T15:57:56.6307840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6307850Z 
2025-02-24T15:57:56.6307930Z >   ???
2025-02-24T15:57:56.6308070Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6308120Z E   
2025-02-24T15:57:56.6308240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6308390Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6308470Z E          ...
2025-02-24T15:57:56.6308560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6309000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6309420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6309530Z E          ...
2025-02-24T15:57:56.6309620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6309750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6309880Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6309880Z 
2025-02-24T15:57:56.6310000Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6310240Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] _
2025-02-24T15:57:56.6310240Z 
2025-02-24T15:57:56.6310420Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6310590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6310710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6310820Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6310960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6311770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6311890Z err_msg = None
2025-02-24T15:57:56.6311900Z 
2025-02-24T15:57:56.6312000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6312060Z         if err_msg is None:
2025-02-24T15:57:56.6312180Z             if left.shape != right.shape:
2025-02-24T15:57:56.6312250Z                 raise_assert_detail(
2025-02-24T15:57:56.6312800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6312870Z                 )
2025-02-24T15:57:56.6312920Z     
2025-02-24T15:57:56.6312990Z             diff = 0
2025-02-24T15:57:56.6313400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6313520Z                 # count up differences
2025-02-24T15:57:56.6313720Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6313840Z                     diff += 1
2025-02-24T15:57:56.6313910Z     
2025-02-24T15:57:56.6314040Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6314220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6314420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6314520Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6314570Z E           
2025-02-24T15:57:56.6314690Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6315020Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6315360Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6315370Z 
2025-02-24T15:57:56.6315820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6315830Z 
2025-02-24T15:57:56.6316070Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6316090Z 
2025-02-24T15:57:56.6316360Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae32f0>
2025-02-24T15:57:56.6316560Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a91cb60>
2025-02-24T15:57:56.6316670Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6316680Z 
2025-02-24T15:57:56.6316860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6317010Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6317110Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6317210Z         try:
2025-02-24T15:57:56.6317390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6317490Z         except KeyError:
2025-02-24T15:57:56.6317610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6317650Z     
2025-02-24T15:57:56.6317950Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6318080Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6318190Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6318350Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6318460Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6318580Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6318680Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6318680Z 
2025-02-24T15:57:56.6318780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6319060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6319190Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6319270Z     ???
2025-02-24T15:57:56.6319400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6319410Z 
2025-02-24T15:57:56.6319490Z >   ???
2025-02-24T15:57:56.6319640Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6319720Z E   
2025-02-24T15:57:56.6319880Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6320000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6320220Z E          ...
2025-02-24T15:57:56.6320340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6320480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6320630Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6320720Z E          ...
2025-02-24T15:57:56.6320830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6320990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6321120Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6321130Z 
2025-02-24T15:57:56.6321220Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6321460Z ____ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-f_lu] ____
2025-02-24T15:57:56.6321470Z 
2025-02-24T15:57:56.6321620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6321780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6321920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6322070Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6322250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6322380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6322490Z err_msg = None
2025-02-24T15:57:56.6322500Z 
2025-02-24T15:57:56.6322640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6322740Z         if err_msg is None:
2025-02-24T15:57:56.6322850Z             if left.shape != right.shape:
2025-02-24T15:57:56.6322940Z                 raise_assert_detail(
2025-02-24T15:57:56.6323070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6323110Z                 )
2025-02-24T15:57:56.6323360Z     
2025-02-24T15:57:56.6323420Z             diff = 0
2025-02-24T15:57:56.6323540Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6323630Z                 # count up differences
2025-02-24T15:57:56.6323820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6323910Z                     diff += 1
2025-02-24T15:57:56.6324000Z     
2025-02-24T15:57:56.6324100Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6324260Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6324450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6324550Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6324600Z E           
2025-02-24T15:57:56.6324680Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6324960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6325330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6325340Z 
2025-02-24T15:57:56.6325730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6325730Z 
2025-02-24T15:57:56.6325880Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6325880Z 
2025-02-24T15:57:56.6326080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae33b0>
2025-02-24T15:57:56.6326360Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a91cb60>, attr = 'f_lu'
2025-02-24T15:57:56.6326360Z 
2025-02-24T15:57:56.6326480Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6326570Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6326640Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6326710Z         try:
2025-02-24T15:57:56.6326870Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6326950Z         except KeyError:
2025-02-24T15:57:56.6327070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6327110Z     
2025-02-24T15:57:56.6327180Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6327280Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6327380Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6327540Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6327650Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6327780Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6327900Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6327910Z 
2025-02-24T15:57:56.6328020Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6328130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6328300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6328370Z     ???
2025-02-24T15:57:56.6328490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6328500Z 
2025-02-24T15:57:56.6328570Z >   ???
2025-02-24T15:57:56.6328680Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6328730Z E   
2025-02-24T15:57:56.6328860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6328980Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6329030Z E          ...
2025-02-24T15:57:56.6329110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6329230Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6329380Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6329460Z E          ...
2025-02-24T15:57:56.6329560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6329660Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6329780Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6329780Z 
2025-02-24T15:57:56.6329870Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6330100Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] _
2025-02-24T15:57:56.6330100Z 
2025-02-24T15:57:56.6330620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6330780Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6330910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6331070Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6331240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6331460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6331520Z err_msg = None
2025-02-24T15:57:56.6331520Z 
2025-02-24T15:57:56.6331650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6331730Z         if err_msg is None:
2025-02-24T15:57:56.6331810Z             if left.shape != right.shape:
2025-02-24T15:57:56.6332290Z                 raise_assert_detail(
2025-02-24T15:57:56.6332470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6332560Z                 )
2025-02-24T15:57:56.6332620Z     
2025-02-24T15:57:56.6332680Z             diff = 0
2025-02-24T15:57:56.6332900Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6332980Z                 # count up differences
2025-02-24T15:57:56.6333120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6333200Z                     diff += 1
2025-02-24T15:57:56.6333250Z     
2025-02-24T15:57:56.6333330Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6333450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6333610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6333710Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6333780Z E           
2025-02-24T15:57:56.6333860Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6334100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6334410Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6334420Z 
2025-02-24T15:57:56.6334760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6334770Z 
2025-02-24T15:57:56.6334960Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6334970Z 
2025-02-24T15:57:56.6335220Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae3b30>
2025-02-24T15:57:56.6335370Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a91cb60>
2025-02-24T15:57:56.6335470Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6335480Z 
2025-02-24T15:57:56.6335640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6335770Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6335870Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6335950Z         try:
2025-02-24T15:57:56.6336100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6336170Z         except KeyError:
2025-02-24T15:57:56.6336290Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6336560Z     
2025-02-24T15:57:56.6336650Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6336720Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6336810Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6336960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6337080Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6337170Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6337270Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6337320Z             else:
2025-02-24T15:57:56.6337390Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6337800Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6337800Z 
2025-02-24T15:57:56.6338510Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6339260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6339730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6340490Z     ???
2025-02-24T15:57:56.6340620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6340630Z 
2025-02-24T15:57:56.6340690Z >   ???
2025-02-24T15:57:56.6340790Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6340970Z E   
2025-02-24T15:57:56.6341080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6341170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6341230Z E          ...
2025-02-24T15:57:56.6341320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6341450Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6341560Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6341790Z E          ...
2025-02-24T15:57:56.6342130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6342270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6342360Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6342360Z 
2025-02-24T15:57:56.6342430Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6342610Z _ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] _
2025-02-24T15:57:56.6342620Z 
2025-02-24T15:57:56.6342730Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6342850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6343120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6343630Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6343740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6343830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6343880Z err_msg = None
2025-02-24T15:57:56.6343880Z 
2025-02-24T15:57:56.6343970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6344020Z         if err_msg is None:
2025-02-24T15:57:56.6344090Z             if left.shape != right.shape:
2025-02-24T15:57:56.6344160Z                 raise_assert_detail(
2025-02-24T15:57:56.6344280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6344340Z                 )
2025-02-24T15:57:56.6344380Z     
2025-02-24T15:57:56.6344440Z             diff = 0
2025-02-24T15:57:56.6344530Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6344600Z                 # count up differences
2025-02-24T15:57:56.6344740Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6344800Z                     diff += 1
2025-02-24T15:57:56.6344850Z     
2025-02-24T15:57:56.6344920Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6345040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6345610Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6345930Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6346000Z E           
2025-02-24T15:57:56.6346100Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6347290Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6348100Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6348110Z 
2025-02-24T15:57:56.6348390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6348390Z 
2025-02-24T15:57:56.6348530Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6348630Z 
2025-02-24T15:57:56.6348820Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae3bf0>
2025-02-24T15:57:56.6348950Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a91cb60>
2025-02-24T15:57:56.6349010Z attr = 'beta_sobolev'
2025-02-24T15:57:56.6349010Z 
2025-02-24T15:57:56.6349130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6349220Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6349280Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6349330Z         try:
2025-02-24T15:57:56.6349450Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6349500Z         except KeyError:
2025-02-24T15:57:56.6349620Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6349660Z     
2025-02-24T15:57:56.6349730Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6349800Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6349870Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6349990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6350250Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6350590Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6350710Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6350760Z             else:
2025-02-24T15:57:56.6350830Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6350920Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6350920Z 
2025-02-24T15:57:56.6351020Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6351130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6351240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6351290Z     ???
2025-02-24T15:57:56.6351390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6351390Z 
2025-02-24T15:57:56.6351440Z >   ???
2025-02-24T15:57:56.6351540Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6351580Z E   
2025-02-24T15:57:56.6351680Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6351770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6351830Z E          ...
2025-02-24T15:57:56.6351900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6352020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6352110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6352160Z E          ...
2025-02-24T15:57:56.6352240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6352340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6352420Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6352430Z 
2025-02-24T15:57:56.6352490Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6353050Z __ TestPlasma.test_plasma_properties[radiative_rates_type:blackbody-j_blues] ___
2025-02-24T15:57:56.6353050Z 
2025-02-24T15:57:56.6353170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6353370Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6353460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6353570Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6353690Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6353840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6353900Z err_msg = None
2025-02-24T15:57:56.6353910Z 
2025-02-24T15:57:56.6353990Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6354110Z         if err_msg is None:
2025-02-24T15:57:56.6354210Z             if left.shape != right.shape:
2025-02-24T15:57:56.6354310Z                 raise_assert_detail(
2025-02-24T15:57:56.6354440Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6354510Z                 )
2025-02-24T15:57:56.6354610Z     
2025-02-24T15:57:56.6354690Z             diff = 0
2025-02-24T15:57:56.6354810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6354890Z                 # count up differences
2025-02-24T15:57:56.6355030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6355100Z                     diff += 1
2025-02-24T15:57:56.6355160Z     
2025-02-24T15:57:56.6355240Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6355360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6355500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6355610Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6355780Z E           
2025-02-24T15:57:56.6355880Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6356160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6356440Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6356450Z 
2025-02-24T15:57:56.6357240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6357250Z 
2025-02-24T15:57:56.6357440Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6357440Z 
2025-02-24T15:57:56.6357630Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fae3d70>
2025-02-24T15:57:56.6357800Z plasma = <tardis.plasma.base.BasePlasma object at 0x17a91cb60>, attr = 'j_blues'
2025-02-24T15:57:56.6357800Z 
2025-02-24T15:57:56.6357910Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6358010Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6358080Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6358130Z         try:
2025-02-24T15:57:56.6358250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6358300Z         except KeyError:
2025-02-24T15:57:56.6358440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6358490Z     
2025-02-24T15:57:56.6358560Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6358630Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6358700Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6358950Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6359030Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6359120Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6359230Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6359280Z             else:
2025-02-24T15:57:56.6359570Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6359860Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6359870Z 
2025-02-24T15:57:56.6359980Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6360090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6360350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6360440Z     ???
2025-02-24T15:57:56.6360600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6360620Z 
2025-02-24T15:57:56.6360700Z >   ???
2025-02-24T15:57:56.6360880Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6360960Z E   
2025-02-24T15:57:56.6361090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6361570Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6361710Z E          ...
2025-02-24T15:57:56.6361790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6362350Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6362480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6362540Z E          ...
2025-02-24T15:57:56.6362700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6362850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6362940Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6362940Z 
2025-02-24T15:57:56.6363010Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6363200Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] _
2025-02-24T15:57:56.6363200Z 
2025-02-24T15:57:56.6363520Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6363970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6364140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6364340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6364520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6364680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6364790Z err_msg = None
2025-02-24T15:57:56.6364810Z 
2025-02-24T15:57:56.6365000Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6365100Z         if err_msg is None:
2025-02-24T15:57:56.6365190Z             if left.shape != right.shape:
2025-02-24T15:57:56.6365250Z                 raise_assert_detail(
2025-02-24T15:57:56.6365400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6365500Z                 )
2025-02-24T15:57:56.6365590Z     
2025-02-24T15:57:56.6365680Z             diff = 0
2025-02-24T15:57:56.6365830Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6365910Z                 # count up differences
2025-02-24T15:57:56.6366230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6366340Z                     diff += 1
2025-02-24T15:57:56.6366420Z     
2025-02-24T15:57:56.6366520Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6366690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6366880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6367010Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6367340Z E           
2025-02-24T15:57:56.6367500Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6367790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6368050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6368280Z 
2025-02-24T15:57:56.6368640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6368650Z 
2025-02-24T15:57:56.6368850Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6368860Z 
2025-02-24T15:57:56.6369100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb00b30>
2025-02-24T15:57:56.6369330Z plasma = <tardis.plasma.base.BasePlasma object at 0x1737c80e0>, attr = 'lines'
2025-02-24T15:57:56.6369340Z 
2025-02-24T15:57:56.6369510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6369670Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6369790Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6369850Z         try:
2025-02-24T15:57:56.6370470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6370600Z         except KeyError:
2025-02-24T15:57:56.6370760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6370810Z     
2025-02-24T15:57:56.6370920Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6371030Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6371110Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6371620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6371760Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6371840Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6371930Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6371980Z             else:
2025-02-24T15:57:56.6372070Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6372210Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6372220Z 
2025-02-24T15:57:56.6372320Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6372410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6372530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6372580Z     ???
2025-02-24T15:57:56.6372690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6372690Z 
2025-02-24T15:57:56.6372750Z >   ???
2025-02-24T15:57:56.6372840Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6372890Z E   
2025-02-24T15:57:56.6373000Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6373090Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6373140Z E          ...
2025-02-24T15:57:56.6373210Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6373310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6373400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6373450Z E          ...
2025-02-24T15:57:56.6373520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6373620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6373900Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6373910Z 
2025-02-24T15:57:56.6373990Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6374220Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] _
2025-02-24T15:57:56.6374220Z 
2025-02-24T15:57:56.6374400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb00bf0>
2025-02-24T15:57:56.6374530Z plasma = <tardis.plasma.base.BasePlasma object at 0x1737c80e0>
2025-02-24T15:57:56.6374600Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6374600Z 
2025-02-24T15:57:56.6374710Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6374860Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6381650Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6381720Z         try:
2025-02-24T15:57:56.6381840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6381930Z         except KeyError:
2025-02-24T15:57:56.6382080Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6382160Z     
2025-02-24T15:57:56.6382260Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6382380Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6382480Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6382610Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6382670Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6382770Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6382900Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6382910Z 
2025-02-24T15:57:56.6383050Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6383520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6383540Z 
2025-02-24T15:57:56.6383700Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6383820Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6383930Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6384000Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6384160Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6384270Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6384390Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6384460Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6384800Z err_msg = None
2025-02-24T15:57:56.6384830Z 
2025-02-24T15:57:56.6385500Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6385610Z         if err_msg is None:
2025-02-24T15:57:56.6385740Z             if left.shape != right.shape:
2025-02-24T15:57:56.6385900Z                 raise_assert_detail(
2025-02-24T15:57:56.6386110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6386170Z                 )
2025-02-24T15:57:56.6386210Z     
2025-02-24T15:57:56.6386270Z             diff = 0
2025-02-24T15:57:56.6386350Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6386460Z                 # count up differences
2025-02-24T15:57:56.6386660Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6386720Z                     diff += 1
2025-02-24T15:57:56.6386780Z     
2025-02-24T15:57:56.6386840Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6387000Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6387170Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6387260Z E           AssertionError: Series are different
2025-02-24T15:57:56.6387330Z E           
2025-02-24T15:57:56.6387470Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6388010Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6388370Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6388770Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6388780Z 
2025-02-24T15:57:56.6389050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6389320Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] _
2025-02-24T15:57:56.6389320Z 
2025-02-24T15:57:56.6389510Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb00cb0>
2025-02-24T15:57:56.6389910Z plasma = <tardis.plasma.base.BasePlasma object at 0x1737c80e0>
2025-02-24T15:57:56.6389990Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6390000Z 
2025-02-24T15:57:56.6390110Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6390220Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6390300Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6390360Z         try:
2025-02-24T15:57:56.6390480Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6390540Z         except KeyError:
2025-02-24T15:57:56.6390660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6390700Z     
2025-02-24T15:57:56.6390780Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6390870Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6390950Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6391050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6391120Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6391230Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6391320Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6391320Z 
2025-02-24T15:57:56.6391420Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6391520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6391520Z 
2025-02-24T15:57:56.6391640Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6391700Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6391800Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6391860Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6391980Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6392050Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6392140Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6392200Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6392260Z err_msg = None
2025-02-24T15:57:56.6392260Z 
2025-02-24T15:57:56.6392340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6392490Z         if err_msg is None:
2025-02-24T15:57:56.6392590Z             if left.shape != right.shape:
2025-02-24T15:57:56.6392660Z                 raise_assert_detail(
2025-02-24T15:57:56.6392780Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6392830Z                 )
2025-02-24T15:57:56.6392870Z     
2025-02-24T15:57:56.6392930Z             diff = 0
2025-02-24T15:57:56.6393020Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6393090Z                 # count up differences
2025-02-24T15:57:56.6393230Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6393350Z                     diff += 1
2025-02-24T15:57:56.6393400Z     
2025-02-24T15:57:56.6393490Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6393600Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6393750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6393820Z E           AssertionError: Series are different
2025-02-24T15:57:56.6393880Z E           
2025-02-24T15:57:56.6393960Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6394270Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6394600Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6394920Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6394920Z 
2025-02-24T15:57:56.6395180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6395360Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] __
2025-02-24T15:57:56.6395360Z 
2025-02-24T15:57:56.6395470Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6395590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6395670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6395860Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6395970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6396050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6396100Z err_msg = None
2025-02-24T15:57:56.6396110Z 
2025-02-24T15:57:56.6396190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6396250Z         if err_msg is None:
2025-02-24T15:57:56.6396330Z             if left.shape != right.shape:
2025-02-24T15:57:56.6396410Z                 raise_assert_detail(
2025-02-24T15:57:56.6396540Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6396940Z                 )
2025-02-24T15:57:56.6397030Z     
2025-02-24T15:57:56.6397220Z             diff = 0
2025-02-24T15:57:56.6397320Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6397390Z                 # count up differences
2025-02-24T15:57:56.6397540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6397600Z                     diff += 1
2025-02-24T15:57:56.6397660Z     
2025-02-24T15:57:56.6397740Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6397850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6398560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6399240Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6399300Z E           
2025-02-24T15:57:56.6399390Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6399620Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6399840Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6399850Z 
2025-02-24T15:57:56.6400110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6400110Z 
2025-02-24T15:57:56.6400260Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6400260Z 
2025-02-24T15:57:56.6400440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb00ef0>
2025-02-24T15:57:56.6400600Z plasma = <tardis.plasma.base.BasePlasma object at 0x1737c80e0>, attr = 'nu'
2025-02-24T15:57:56.6400600Z 
2025-02-24T15:57:56.6400720Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6400830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6400900Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6400940Z         try:
2025-02-24T15:57:56.6401060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6401110Z         except KeyError:
2025-02-24T15:57:56.6401230Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6401280Z     
2025-02-24T15:57:56.6401350Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6401420Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6401490Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6401600Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6401670Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6401740Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6401820Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6401830Z 
2025-02-24T15:57:56.6401930Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6402020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6402140Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6402180Z     ???
2025-02-24T15:57:56.6402280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6402310Z 
2025-02-24T15:57:56.6402360Z >   ???
2025-02-24T15:57:56.6402460Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6402510Z E   
2025-02-24T15:57:56.6402610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6402710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6402870Z E          ...
2025-02-24T15:57:56.6402940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6403050Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6403140Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6403190Z E          ...
2025-02-24T15:57:56.6403260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6403360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6403440Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6403440Z 
2025-02-24T15:57:56.6403570Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6403780Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] _
2025-02-24T15:57:56.6403780Z 
2025-02-24T15:57:56.6403890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6404000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6404090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6404190Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6404300Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6404380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6404430Z err_msg = None
2025-02-24T15:57:56.6404430Z 
2025-02-24T15:57:56.6404520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6404580Z         if err_msg is None:
2025-02-24T15:57:56.6404660Z             if left.shape != right.shape:
2025-02-24T15:57:56.6404720Z                 raise_assert_detail(
2025-02-24T15:57:56.6404840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6404890Z                 )
2025-02-24T15:57:56.6404930Z     
2025-02-24T15:57:56.6404980Z             diff = 0
2025-02-24T15:57:56.6405080Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6405140Z                 # count up differences
2025-02-24T15:57:56.6405280Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6405340Z                     diff += 1
2025-02-24T15:57:56.6405380Z     
2025-02-24T15:57:56.6405450Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6405570Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6405710Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6405800Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6405850Z E           
2025-02-24T15:57:56.6405940Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6406160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6406380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6406380Z 
2025-02-24T15:57:56.6406630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6406630Z 
2025-02-24T15:57:56.6406770Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6406770Z 
2025-02-24T15:57:56.6406950Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb00fb0>
2025-02-24T15:57:56.6407120Z plasma = <tardis.plasma.base.BasePlasma object at 0x1737c80e0>
2025-02-24T15:57:56.6407180Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6407180Z 
2025-02-24T15:57:56.6407290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6407390Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6407450Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6407500Z         try:
2025-02-24T15:57:56.6407610Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6407670Z         except KeyError:
2025-02-24T15:57:56.6407780Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6407870Z     
2025-02-24T15:57:56.6407930Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6408030Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6408100Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6408210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6408280Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6408340Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6408430Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6408440Z 
2025-02-24T15:57:56.6408530Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6408630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6408740Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6408790Z     ???
2025-02-24T15:57:56.6408880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6408890Z 
2025-02-24T15:57:56.6408930Z >   ???
2025-02-24T15:57:56.6409030Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6409070Z E   
2025-02-24T15:57:56.6409180Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6409270Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6409320Z E          ...
2025-02-24T15:57:56.6409390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6409490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6409580Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6409630Z E          ...
2025-02-24T15:57:56.6409700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6409800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6409880Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6409880Z 
2025-02-24T15:57:56.6409950Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6410120Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] _
2025-02-24T15:57:56.6410120Z 
2025-02-24T15:57:56.6410230Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6410340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6410410Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6410520Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6410630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6410700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6410750Z err_msg = None
2025-02-24T15:57:56.6410760Z 
2025-02-24T15:57:56.6410840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6410910Z         if err_msg is None:
2025-02-24T15:57:56.6410970Z             if left.shape != right.shape:
2025-02-24T15:57:56.6411040Z                 raise_assert_detail(
2025-02-24T15:57:56.6411150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6411200Z                 )
2025-02-24T15:57:56.6411300Z     
2025-02-24T15:57:56.6411360Z             diff = 0
2025-02-24T15:57:56.6411450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6411510Z                 # count up differences
2025-02-24T15:57:56.6411650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6411710Z                     diff += 1
2025-02-24T15:57:56.6411760Z     
2025-02-24T15:57:56.6411820Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6411940Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6412080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6412200Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6412260Z E           
2025-02-24T15:57:56.6412340Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6412560Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6412770Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6412780Z 
2025-02-24T15:57:56.6413030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6413030Z 
2025-02-24T15:57:56.6413170Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6413170Z 
2025-02-24T15:57:56.6413340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb01070>
2025-02-24T15:57:56.6413510Z plasma = <tardis.plasma.base.BasePlasma object at 0x1737c80e0>, attr = 'f_lu'
2025-02-24T15:57:56.6413510Z 
2025-02-24T15:57:56.6413620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6413710Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6413770Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6413810Z         try:
2025-02-24T15:57:56.6413930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6413980Z         except KeyError:
2025-02-24T15:57:56.6414100Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6414150Z     
2025-02-24T15:57:56.6414210Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6414280Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6414350Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6414450Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6414520Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6414590Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6414680Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6414680Z 
2025-02-24T15:57:56.6414780Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6414870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6414990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6415050Z     ???
2025-02-24T15:57:56.6415140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6415150Z 
2025-02-24T15:57:56.6415190Z >   ???
2025-02-24T15:57:56.6415290Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6415340Z E   
2025-02-24T15:57:56.6415450Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6415610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6415660Z E          ...
2025-02-24T15:57:56.6415740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6415840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6415930Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6415980Z E          ...
2025-02-24T15:57:56.6416050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6416150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6416230Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6416240Z 
2025-02-24T15:57:56.6416370Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6416580Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] _
2025-02-24T15:57:56.6416580Z 
2025-02-24T15:57:56.6416710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6416820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6416900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6417010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6417120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6417190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6417250Z err_msg = None
2025-02-24T15:57:56.6417250Z 
2025-02-24T15:57:56.6417340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6417390Z         if err_msg is None:
2025-02-24T15:57:56.6417470Z             if left.shape != right.shape:
2025-02-24T15:57:56.6417530Z                 raise_assert_detail(
2025-02-24T15:57:56.6417650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6417690Z                 )
2025-02-24T15:57:56.6417740Z     
2025-02-24T15:57:56.6417790Z             diff = 0
2025-02-24T15:57:56.6417880Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6417950Z                 # count up differences
2025-02-24T15:57:56.6418080Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6418140Z                     diff += 1
2025-02-24T15:57:56.6418180Z     
2025-02-24T15:57:56.6418250Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6418360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6418510Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6418600Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6418650Z E           
2025-02-24T15:57:56.6418730Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6418950Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6419170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6419180Z 
2025-02-24T15:57:56.6419420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6419430Z 
2025-02-24T15:57:56.6419560Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6419570Z 
2025-02-24T15:57:56.6419790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb017f0>
2025-02-24T15:57:56.6419920Z plasma = <tardis.plasma.base.BasePlasma object at 0x1737c80e0>
2025-02-24T15:57:56.6419970Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6419980Z 
2025-02-24T15:57:56.6420080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6420180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6420240Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6420290Z         try:
2025-02-24T15:57:56.6420400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6420460Z         except KeyError:
2025-02-24T15:57:56.6420570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6420660Z     
2025-02-24T15:57:56.6420730Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6420800Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6420860Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6420970Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6421040Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6421110Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6421200Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6421240Z             else:
2025-02-24T15:57:56.6421320Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6421400Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6421400Z 
2025-02-24T15:57:56.6421500Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6421600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6421710Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6421760Z     ???
2025-02-24T15:57:56.6421850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6421860Z 
2025-02-24T15:57:56.6421910Z >   ???
2025-02-24T15:57:56.6422010Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6422050Z E   
2025-02-24T15:57:56.6422160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6422240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6422290Z E          ...
2025-02-24T15:57:56.6422360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6422470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6422550Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6422610Z E          ...
2025-02-24T15:57:56.6422670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6422780Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6422860Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6422860Z 
2025-02-24T15:57:56.6422930Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6423130Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] _
2025-02-24T15:57:56.6423130Z 
2025-02-24T15:57:56.6423240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6423350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6423420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6423530Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6423640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6423710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6423770Z err_msg = None
2025-02-24T15:57:56.6423770Z 
2025-02-24T15:57:56.6423850Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6423910Z         if err_msg is None:
2025-02-24T15:57:56.6423980Z             if left.shape != right.shape:
2025-02-24T15:57:56.6424090Z                 raise_assert_detail(
2025-02-24T15:57:56.6424200Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6424250Z                 )
2025-02-24T15:57:56.6424300Z     
2025-02-24T15:57:56.6424350Z             diff = 0
2025-02-24T15:57:56.6424440Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6424510Z                 # count up differences
2025-02-24T15:57:56.6424650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6424700Z                     diff += 1
2025-02-24T15:57:56.6424840Z     
2025-02-24T15:57:56.6424910Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6425020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6425160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6425250Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6425300Z E           
2025-02-24T15:57:56.6425390Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6425600Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6425820Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6425820Z 
2025-02-24T15:57:56.6426080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6426080Z 
2025-02-24T15:57:56.6426230Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6426230Z 
2025-02-24T15:57:56.6426400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb018b0>
2025-02-24T15:57:56.6426530Z plasma = <tardis.plasma.base.BasePlasma object at 0x1737c80e0>
2025-02-24T15:57:56.6426590Z attr = 'beta_sobolev'
2025-02-24T15:57:56.6426590Z 
2025-02-24T15:57:56.6426710Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6426790Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6426850Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6426900Z         try:
2025-02-24T15:57:56.6427020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6427080Z         except KeyError:
2025-02-24T15:57:56.6427190Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6427240Z     
2025-02-24T15:57:56.6427300Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6427380Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6427440Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6427540Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6427600Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6427680Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6427770Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6427820Z             else:
2025-02-24T15:57:56.6427890Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6427970Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6427980Z 
2025-02-24T15:57:56.6428070Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6428160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6428280Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6428370Z     ???
2025-02-24T15:57:56.6428470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6428470Z 
2025-02-24T15:57:56.6428520Z >   ???
2025-02-24T15:57:56.6428620Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6428660Z E   
2025-02-24T15:57:56.6428760Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6428860Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6428900Z E          ...
2025-02-24T15:57:56.6428970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6429070Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6429200Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6429250Z E          ...
2025-02-24T15:57:56.6429320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6429420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6429500Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6429500Z 
2025-02-24T15:57:56.6429570Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6429750Z _ TestPlasma.test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] _
2025-02-24T15:57:56.6429760Z 
2025-02-24T15:57:56.6429860Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6429970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6430050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6430150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6430260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6430340Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6430400Z err_msg = None
2025-02-24T15:57:56.6430400Z 
2025-02-24T15:57:56.6430490Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6430540Z         if err_msg is None:
2025-02-24T15:57:56.6430620Z             if left.shape != right.shape:
2025-02-24T15:57:56.6430680Z                 raise_assert_detail(
2025-02-24T15:57:56.6430800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6430840Z                 )
2025-02-24T15:57:56.6430890Z     
2025-02-24T15:57:56.6430940Z             diff = 0
2025-02-24T15:57:56.6431030Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6431090Z                 # count up differences
2025-02-24T15:57:56.6431240Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6431300Z                     diff += 1
2025-02-24T15:57:56.6431340Z     
2025-02-24T15:57:56.6431400Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6431520Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6431660Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6431740Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6431790Z E           
2025-02-24T15:57:56.6431880Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6432100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6432520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6432530Z 
2025-02-24T15:57:56.6432780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6432780Z 
2025-02-24T15:57:56.6432920Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6432920Z 
2025-02-24T15:57:56.6433100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb01a30>
2025-02-24T15:57:56.6433260Z plasma = <tardis.plasma.base.BasePlasma object at 0x1737c80e0>, attr = 'j_blues'
2025-02-24T15:57:56.6433270Z 
2025-02-24T15:57:56.6433610Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6433700Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6433770Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6433810Z         try:
2025-02-24T15:57:56.6440140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6440300Z         except KeyError:
2025-02-24T15:57:56.6440420Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6440460Z     
2025-02-24T15:57:56.6440570Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6440640Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6440710Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6440820Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6440880Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6440940Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6441040Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6441140Z             else:
2025-02-24T15:57:56.6441250Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6441340Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6441340Z 
2025-02-24T15:57:56.6441440Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6441540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6441660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6441700Z     ???
2025-02-24T15:57:56.6441790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6441800Z 
2025-02-24T15:57:56.6441840Z >   ???
2025-02-24T15:57:56.6441940Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6441990Z E   
2025-02-24T15:57:56.6442090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6442180Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6442230Z E          ...
2025-02-24T15:57:56.6442300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6442400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6442490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6442540Z E          ...
2025-02-24T15:57:56.6442600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6442710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6442790Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6442790Z 
2025-02-24T15:57:56.6442860Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6443030Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines] ____
2025-02-24T15:57:56.6443030Z 
2025-02-24T15:57:56.6443130Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6443240Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6443320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6443430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6443790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6443880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6443940Z err_msg = None
2025-02-24T15:57:56.6443940Z 
2025-02-24T15:57:56.6444030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6444080Z         if err_msg is None:
2025-02-24T15:57:56.6444150Z             if left.shape != right.shape:
2025-02-24T15:57:56.6444220Z                 raise_assert_detail(
2025-02-24T15:57:56.6444340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6444390Z                 )
2025-02-24T15:57:56.6444500Z     
2025-02-24T15:57:56.6444550Z             diff = 0
2025-02-24T15:57:56.6444640Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6444710Z                 # count up differences
2025-02-24T15:57:56.6444850Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6444910Z                     diff += 1
2025-02-24T15:57:56.6444960Z     
2025-02-24T15:57:56.6445020Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6445130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6445270Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6445360Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6445410Z E           
2025-02-24T15:57:56.6445500Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6445710Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6445930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6445940Z 
2025-02-24T15:57:56.6446180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6446180Z 
2025-02-24T15:57:56.6446330Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6446340Z 
2025-02-24T15:57:56.6446520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb027b0>
2025-02-24T15:57:56.6446680Z plasma = <tardis.plasma.base.BasePlasma object at 0x16db5c500>, attr = 'lines'
2025-02-24T15:57:56.6446690Z 
2025-02-24T15:57:56.6446790Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6446880Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6446940Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6447000Z         try:
2025-02-24T15:57:56.6447140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6447200Z         except KeyError:
2025-02-24T15:57:56.6447310Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6447350Z     
2025-02-24T15:57:56.6447420Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6447490Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6447550Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6447660Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6447730Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6447800Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6447880Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6447930Z             else:
2025-02-24T15:57:56.6448000Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6448170Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6448170Z 
2025-02-24T15:57:56.6448270Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6448370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6448480Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6448530Z     ???
2025-02-24T15:57:56.6448620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6448620Z 
2025-02-24T15:57:56.6448670Z >   ???
2025-02-24T15:57:56.6448770Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6448870Z E   
2025-02-24T15:57:56.6448970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6449060Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6449110Z E          ...
2025-02-24T15:57:56.6449170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6449280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6449370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6449420Z E          ...
2025-02-24T15:57:56.6449490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6449590Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6449680Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6449690Z 
2025-02-24T15:57:56.6449760Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6449960Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] _
2025-02-24T15:57:56.6449960Z 
2025-02-24T15:57:56.6450140Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb02870>
2025-02-24T15:57:56.6450260Z plasma = <tardis.plasma.base.BasePlasma object at 0x16db5c500>
2025-02-24T15:57:56.6450330Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6450330Z 
2025-02-24T15:57:56.6450440Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6450530Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6450600Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6450640Z         try:
2025-02-24T15:57:56.6450750Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6450810Z         except KeyError:
2025-02-24T15:57:56.6450920Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6450970Z     
2025-02-24T15:57:56.6451030Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6451110Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6451180Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6451280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6451340Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6451410Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6451500Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6451500Z 
2025-02-24T15:57:56.6451600Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6451700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6451700Z 
2025-02-24T15:57:56.6451810Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6451870Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6451960Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6452030Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6452140Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6452210Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6452290Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6452350Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6452460Z err_msg = None
2025-02-24T15:57:56.6452460Z 
2025-02-24T15:57:56.6452540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6452600Z         if err_msg is None:
2025-02-24T15:57:56.6452670Z             if left.shape != right.shape:
2025-02-24T15:57:56.6452740Z                 raise_assert_detail(
2025-02-24T15:57:56.6452850Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6452900Z                 )
2025-02-24T15:57:56.6452940Z     
2025-02-24T15:57:56.6452990Z             diff = 0
2025-02-24T15:57:56.6453080Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6453180Z                 # count up differences
2025-02-24T15:57:56.6453320Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6453380Z                     diff += 1
2025-02-24T15:57:56.6453430Z     
2025-02-24T15:57:56.6453490Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6453610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6453740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6453830Z E           AssertionError: Series are different
2025-02-24T15:57:56.6453870Z E           
2025-02-24T15:57:56.6453950Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6454260Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6454540Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6454820Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6454830Z 
2025-02-24T15:57:56.6455070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6455270Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] _
2025-02-24T15:57:56.6455280Z 
2025-02-24T15:57:56.6455460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb02930>
2025-02-24T15:57:56.6455580Z plasma = <tardis.plasma.base.BasePlasma object at 0x16db5c500>
2025-02-24T15:57:56.6455650Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6455650Z 
2025-02-24T15:57:56.6455760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6455850Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6455910Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6455960Z         try:
2025-02-24T15:57:56.6456070Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6456130Z         except KeyError:
2025-02-24T15:57:56.6456250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6456290Z     
2025-02-24T15:57:56.6456360Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6456430Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6456490Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6456670Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6456740Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6456800Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6456890Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6456890Z 
2025-02-24T15:57:56.6456990Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6457090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6457090Z 
2025-02-24T15:57:56.6457200Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6457340Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6457430Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6457490Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6457600Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6457670Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6457760Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6457820Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6457870Z err_msg = None
2025-02-24T15:57:56.6457870Z 
2025-02-24T15:57:56.6457950Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6458010Z         if err_msg is None:
2025-02-24T15:57:56.6458070Z             if left.shape != right.shape:
2025-02-24T15:57:56.6458130Z                 raise_assert_detail(
2025-02-24T15:57:56.6458240Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6458290Z                 )
2025-02-24T15:57:56.6458330Z     
2025-02-24T15:57:56.6458380Z             diff = 0
2025-02-24T15:57:56.6458460Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6458520Z                 # count up differences
2025-02-24T15:57:56.6458650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6458710Z                     diff += 1
2025-02-24T15:57:56.6458750Z     
2025-02-24T15:57:56.6458810Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6458910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6459040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6459120Z E           AssertionError: Series are different
2025-02-24T15:57:56.6459160Z E           
2025-02-24T15:57:56.6459240Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6459540Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6459840Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6460150Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6460150Z 
2025-02-24T15:57:56.6460430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6460600Z _____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-nu] ______
2025-02-24T15:57:56.6460600Z 
2025-02-24T15:57:56.6460710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6460820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6460890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6461000Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6461150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6461220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6461280Z err_msg = None
2025-02-24T15:57:56.6461280Z 
2025-02-24T15:57:56.6461360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6461420Z         if err_msg is None:
2025-02-24T15:57:56.6461490Z             if left.shape != right.shape:
2025-02-24T15:57:56.6461560Z                 raise_assert_detail(
2025-02-24T15:57:56.6461670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6461720Z                 )
2025-02-24T15:57:56.6461760Z     
2025-02-24T15:57:56.6461810Z             diff = 0
2025-02-24T15:57:56.6461900Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6461960Z                 # count up differences
2025-02-24T15:57:56.6462100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6462150Z                     diff += 1
2025-02-24T15:57:56.6462200Z     
2025-02-24T15:57:56.6462260Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6462380Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6462520Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6462610Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6462650Z E           
2025-02-24T15:57:56.6462740Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6462950Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6463170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6463170Z 
2025-02-24T15:57:56.6463420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6463420Z 
2025-02-24T15:57:56.6463560Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6463560Z 
2025-02-24T15:57:56.6463730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb02b70>
2025-02-24T15:57:56.6463880Z plasma = <tardis.plasma.base.BasePlasma object at 0x16db5c500>, attr = 'nu'
2025-02-24T15:57:56.6463880Z 
2025-02-24T15:57:56.6463990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6464090Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6464150Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6464200Z         try:
2025-02-24T15:57:56.6464310Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6464370Z         except KeyError:
2025-02-24T15:57:56.6464530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6464580Z     
2025-02-24T15:57:56.6464640Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6464720Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6464790Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6464900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6464960Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6465030Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6465110Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6465160Z 
2025-02-24T15:57:56.6465270Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6465350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6465470Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6465520Z     ???
2025-02-24T15:57:56.6465610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6465610Z 
2025-02-24T15:57:56.6465660Z >   ???
2025-02-24T15:57:56.6465760Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6465810Z E   
2025-02-24T15:57:56.6465910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6466000Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6466050Z E          ...
2025-02-24T15:57:56.6466120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6466220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6466320Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6466360Z E          ...
2025-02-24T15:57:56.6466430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6466520Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6466600Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6466610Z 
2025-02-24T15:57:56.6466670Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6466850Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-wavelength_cm] _
2025-02-24T15:57:56.6466850Z 
2025-02-24T15:57:56.6466950Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6467060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6467130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6467240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6467350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6467420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6467470Z err_msg = None
2025-02-24T15:57:56.6467480Z 
2025-02-24T15:57:56.6467560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6467620Z         if err_msg is None:
2025-02-24T15:57:56.6467690Z             if left.shape != right.shape:
2025-02-24T15:57:56.6467750Z                 raise_assert_detail(
2025-02-24T15:57:56.6467860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6467910Z                 )
2025-02-24T15:57:56.6467950Z     
2025-02-24T15:57:56.6468000Z             diff = 0
2025-02-24T15:57:56.6468090Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6468150Z                 # count up differences
2025-02-24T15:57:56.6468290Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6468340Z                     diff += 1
2025-02-24T15:57:56.6468390Z     
2025-02-24T15:57:56.6468460Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6468560Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6468740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6468830Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6468880Z E           
2025-02-24T15:57:56.6468970Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6469180Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6469440Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6469450Z 
2025-02-24T15:57:56.6469690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6469690Z 
2025-02-24T15:57:56.6469830Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6469830Z 
2025-02-24T15:57:56.6470010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb02c30>
2025-02-24T15:57:56.6470140Z plasma = <tardis.plasma.base.BasePlasma object at 0x16db5c500>
2025-02-24T15:57:56.6470190Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6470200Z 
2025-02-24T15:57:56.6470300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6470400Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6470460Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6470520Z         try:
2025-02-24T15:57:56.6470630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6470690Z         except KeyError:
2025-02-24T15:57:56.6470800Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6470850Z     
2025-02-24T15:57:56.6470910Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6470980Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6471050Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6471160Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6471230Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6471290Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6471390Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6471390Z 
2025-02-24T15:57:56.6471490Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6471580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6471700Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6471760Z     ???
2025-02-24T15:57:56.6471850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6471850Z 
2025-02-24T15:57:56.6471900Z >   ???
2025-02-24T15:57:56.6472000Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6472040Z E   
2025-02-24T15:57:56.6472140Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6472230Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6472280Z E          ...
2025-02-24T15:57:56.6472350Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6472450Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6472530Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6472590Z E          ...
2025-02-24T15:57:56.6472650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6472750Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6472920Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6472920Z 
2025-02-24T15:57:56.6472990Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6473160Z ____ TestPlasma.test_plasma_properties[line_interaction_type:scatter-f_lu] _____
2025-02-24T15:57:56.6473160Z 
2025-02-24T15:57:56.6473270Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6473380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6473450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6473560Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6474010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6474090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6474140Z err_msg = None
2025-02-24T15:57:56.6474140Z 
2025-02-24T15:57:56.6474230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6474290Z         if err_msg is None:
2025-02-24T15:57:56.6474360Z             if left.shape != right.shape:
2025-02-24T15:57:56.6474420Z                 raise_assert_detail(
2025-02-24T15:57:56.6474530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6474580Z                 )
2025-02-24T15:57:56.6474620Z     
2025-02-24T15:57:56.6474670Z             diff = 0
2025-02-24T15:57:56.6474760Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6474820Z                 # count up differences
2025-02-24T15:57:56.6474960Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6475020Z                     diff += 1
2025-02-24T15:57:56.6475070Z     
2025-02-24T15:57:56.6475130Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6475240Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6475370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6475470Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6475510Z E           
2025-02-24T15:57:56.6475600Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6475890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6476110Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6476120Z 
2025-02-24T15:57:56.6476360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6476370Z 
2025-02-24T15:57:56.6476500Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6476500Z 
2025-02-24T15:57:56.6476680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb02cf0>
2025-02-24T15:57:56.6476840Z plasma = <tardis.plasma.base.BasePlasma object at 0x16db5c500>, attr = 'f_lu'
2025-02-24T15:57:56.6476840Z 
2025-02-24T15:57:56.6476950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6477040Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6477100Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6477150Z         try:
2025-02-24T15:57:56.6477260Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6477310Z         except KeyError:
2025-02-24T15:57:56.6477530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6477590Z     
2025-02-24T15:57:56.6477660Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6477730Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6477790Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6477900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6477970Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6478040Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6478130Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6478170Z 
2025-02-24T15:57:56.6478270Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6478370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6478480Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6478530Z     ???
2025-02-24T15:57:56.6478620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6478630Z 
2025-02-24T15:57:56.6478670Z >   ???
2025-02-24T15:57:56.6478770Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6478820Z E   
2025-02-24T15:57:56.6478930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6479010Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6479070Z E          ...
2025-02-24T15:57:56.6479130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6479240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6479340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6479390Z E          ...
2025-02-24T15:57:56.6479460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6479560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6479640Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6479650Z 
2025-02-24T15:57:56.6479710Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6479890Z _ TestPlasma.test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] _
2025-02-24T15:57:56.6479900Z 
2025-02-24T15:57:56.6480000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6480110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6480200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6480300Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6480410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6480490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6480550Z err_msg = None
2025-02-24T15:57:56.6480550Z 
2025-02-24T15:57:56.6480640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6480700Z         if err_msg is None:
2025-02-24T15:57:56.6480770Z             if left.shape != right.shape:
2025-02-24T15:57:56.6480850Z                 raise_assert_detail(
2025-02-24T15:57:56.6480970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6481030Z                 )
2025-02-24T15:57:56.6481090Z     
2025-02-24T15:57:56.6481140Z             diff = 0
2025-02-24T15:57:56.6481240Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6481310Z                 # count up differences
2025-02-24T15:57:56.6481450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6481510Z                     diff += 1
2025-02-24T15:57:56.6481560Z     
2025-02-24T15:57:56.6481630Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6481740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6481920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6482030Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6482080Z E           
2025-02-24T15:57:56.6482160Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6482390Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6482660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6482670Z 
2025-02-24T15:57:56.6482920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6482920Z 
2025-02-24T15:57:56.6483060Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6483060Z 
2025-02-24T15:57:56.6483240Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb03470>
2025-02-24T15:57:56.6483370Z plasma = <tardis.plasma.base.BasePlasma object at 0x16db5c500>
2025-02-24T15:57:56.6483420Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6483420Z 
2025-02-24T15:57:56.6483540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6483630Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6483700Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6483750Z         try:
2025-02-24T15:57:56.6483860Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6483920Z         except KeyError:
2025-02-24T15:57:56.6484040Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6484090Z     
2025-02-24T15:57:56.6484150Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6484220Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6484290Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6484400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6484460Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6484530Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6484620Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6484670Z             else:
2025-02-24T15:57:56.6484750Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6484830Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6484840Z 
2025-02-24T15:57:56.6484940Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6485040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6485160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6485210Z     ???
2025-02-24T15:57:56.6485300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6485300Z 
2025-02-24T15:57:56.6485350Z >   ???
2025-02-24T15:57:56.6485450Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6485500Z E   
2025-02-24T15:57:56.6485600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6485690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6485740Z E          ...
2025-02-24T15:57:56.6485820Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6485920Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6486010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6491600Z E          ...
2025-02-24T15:57:56.6491890Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6492000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6492080Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6492090Z 
2025-02-24T15:57:56.6492160Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6492320Z ___ TestPlasma.test_plasma_properties[line_interaction_type:scatter-j_blues] ___
2025-02-24T15:57:56.6492320Z 
2025-02-24T15:57:56.6492440Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6492550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6492690Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6492800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6492910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6492990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6493040Z err_msg = None
2025-02-24T15:57:56.6493040Z 
2025-02-24T15:57:56.6493130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6493190Z         if err_msg is None:
2025-02-24T15:57:56.6493270Z             if left.shape != right.shape:
2025-02-24T15:57:56.6493330Z                 raise_assert_detail(
2025-02-24T15:57:56.6493450Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6493500Z                 )
2025-02-24T15:57:56.6493550Z     
2025-02-24T15:57:56.6493600Z             diff = 0
2025-02-24T15:57:56.6493690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6493760Z                 # count up differences
2025-02-24T15:57:56.6493900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6493960Z                     diff += 1
2025-02-24T15:57:56.6494010Z     
2025-02-24T15:57:56.6494080Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6494190Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6494330Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6494430Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6494480Z E           
2025-02-24T15:57:56.6494570Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6494790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6495020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6495020Z 
2025-02-24T15:57:56.6495270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6495270Z 
2025-02-24T15:57:56.6495410Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6495410Z 
2025-02-24T15:57:56.6495590Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb036b0>
2025-02-24T15:57:56.6495750Z plasma = <tardis.plasma.base.BasePlasma object at 0x16db5c500>, attr = 'j_blues'
2025-02-24T15:57:56.6495750Z 
2025-02-24T15:57:56.6495860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6495950Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6496020Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6496200Z         try:
2025-02-24T15:57:56.6496320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6496380Z         except KeyError:
2025-02-24T15:57:56.6496490Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6496540Z     
2025-02-24T15:57:56.6496610Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6496680Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6496740Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6496850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6496990Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6497060Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6497150Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6497200Z             else:
2025-02-24T15:57:56.6497270Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6497360Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6497360Z 
2025-02-24T15:57:56.6497460Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6497550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6497670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6497720Z     ???
2025-02-24T15:57:56.6497810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6497810Z 
2025-02-24T15:57:56.6497860Z >   ???
2025-02-24T15:57:56.6497960Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6498010Z E   
2025-02-24T15:57:56.6498110Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6498200Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6498240Z E          ...
2025-02-24T15:57:56.6498310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6498410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6498500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6498550Z E          ...
2025-02-24T15:57:56.6498620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6498720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6498800Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6498800Z 
2025-02-24T15:57:56.6498870Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6499030Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines] ___
2025-02-24T15:57:56.6499040Z 
2025-02-24T15:57:56.6499140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6499250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6499330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6499430Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6499540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6499620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6499670Z err_msg = None
2025-02-24T15:57:56.6499680Z 
2025-02-24T15:57:56.6499760Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6499810Z         if err_msg is None:
2025-02-24T15:57:56.6499890Z             if left.shape != right.shape:
2025-02-24T15:57:56.6499950Z                 raise_assert_detail(
2025-02-24T15:57:56.6500070Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6500120Z                 )
2025-02-24T15:57:56.6500170Z     
2025-02-24T15:57:56.6500220Z             diff = 0
2025-02-24T15:57:56.6500310Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6500430Z                 # count up differences
2025-02-24T15:57:56.6500570Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6500630Z                     diff += 1
2025-02-24T15:57:56.6500670Z     
2025-02-24T15:57:56.6500740Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6500840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6500980Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6501070Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6501120Z E           
2025-02-24T15:57:56.6501250Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6501480Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6501700Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6501700Z 
2025-02-24T15:57:56.6501940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6501950Z 
2025-02-24T15:57:56.6502090Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6502090Z 
2025-02-24T15:57:56.6502260Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb28470>
2025-02-24T15:57:56.6502430Z plasma = <tardis.plasma.base.BasePlasma object at 0x168ce3ce0>, attr = 'lines'
2025-02-24T15:57:56.6502430Z 
2025-02-24T15:57:56.6502540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6502620Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6502680Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6502730Z         try:
2025-02-24T15:57:56.6502840Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6502900Z         except KeyError:
2025-02-24T15:57:56.6503010Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6503060Z     
2025-02-24T15:57:56.6503120Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6503200Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6503260Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6503370Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6503440Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6503510Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6503600Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6503650Z             else:
2025-02-24T15:57:56.6503720Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6503810Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6503810Z 
2025-02-24T15:57:56.6503910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6504000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6504120Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6504160Z     ???
2025-02-24T15:57:56.6504260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6504260Z 
2025-02-24T15:57:56.6504310Z >   ???
2025-02-24T15:57:56.6504410Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6504460Z E   
2025-02-24T15:57:56.6504560Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6504690Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6504740Z E          ...
2025-02-24T15:57:56.6504810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6504910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6505010Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6505050Z E          ...
2025-02-24T15:57:56.6505120Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6505220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6505310Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6505310Z 
2025-02-24T15:57:56.6505420Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6505630Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] _
2025-02-24T15:57:56.6505630Z 
2025-02-24T15:57:56.6505810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb28530>
2025-02-24T15:57:56.6505940Z plasma = <tardis.plasma.base.BasePlasma object at 0x168ce3ce0>
2025-02-24T15:57:56.6506010Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6506020Z 
2025-02-24T15:57:56.6506120Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6506210Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6506270Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6506320Z         try:
2025-02-24T15:57:56.6506430Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6506490Z         except KeyError:
2025-02-24T15:57:56.6506600Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6506640Z     
2025-02-24T15:57:56.6506710Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6506780Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6506840Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6506950Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6507020Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6507090Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6507180Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6507180Z 
2025-02-24T15:57:56.6507270Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6507360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6507370Z 
2025-02-24T15:57:56.6507480Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6507540Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6507630Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6507690Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6507800Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6507860Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6507950Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6508010Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6508060Z err_msg = None
2025-02-24T15:57:56.6508070Z 
2025-02-24T15:57:56.6508150Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6508200Z         if err_msg is None:
2025-02-24T15:57:56.6508280Z             if left.shape != right.shape:
2025-02-24T15:57:56.6508340Z                 raise_assert_detail(
2025-02-24T15:57:56.6508460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6508500Z                 )
2025-02-24T15:57:56.6508550Z     
2025-02-24T15:57:56.6508590Z             diff = 0
2025-02-24T15:57:56.6508680Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6508750Z                 # count up differences
2025-02-24T15:57:56.6508880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6508980Z                     diff += 1
2025-02-24T15:57:56.6509020Z     
2025-02-24T15:57:56.6509090Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6509200Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6509330Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6509410Z E           AssertionError: Series are different
2025-02-24T15:57:56.6509460Z E           
2025-02-24T15:57:56.6509530Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6509850Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6510170Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6510440Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6510450Z 
2025-02-24T15:57:56.6510690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6510900Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] _
2025-02-24T15:57:56.6510900Z 
2025-02-24T15:57:56.6511070Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb285f0>
2025-02-24T15:57:56.6511190Z plasma = <tardis.plasma.base.BasePlasma object at 0x168ce3ce0>
2025-02-24T15:57:56.6511260Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6511260Z 
2025-02-24T15:57:56.6511370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6511450Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6511520Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6511560Z         try:
2025-02-24T15:57:56.6511680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6511740Z         except KeyError:
2025-02-24T15:57:56.6511840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6511890Z     
2025-02-24T15:57:56.6511950Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6512030Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6512090Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6512200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6512260Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6512330Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6512420Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6512420Z 
2025-02-24T15:57:56.6512510Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6512600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6512610Z 
2025-02-24T15:57:56.6512710Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6512780Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6512870Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6513140Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6513260Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6513320Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6513410Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6513470Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6513520Z err_msg = None
2025-02-24T15:57:56.6513520Z 
2025-02-24T15:57:56.6513600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6513670Z         if err_msg is None:
2025-02-24T15:57:56.6513730Z             if left.shape != right.shape:
2025-02-24T15:57:56.6513870Z                 raise_assert_detail(
2025-02-24T15:57:56.6513980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6514030Z                 )
2025-02-24T15:57:56.6514080Z     
2025-02-24T15:57:56.6514130Z             diff = 0
2025-02-24T15:57:56.6514220Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6514280Z                 # count up differences
2025-02-24T15:57:56.6514420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6514470Z                     diff += 1
2025-02-24T15:57:56.6514520Z     
2025-02-24T15:57:56.6514580Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6514690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6514820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6514900Z E           AssertionError: Series are different
2025-02-24T15:57:56.6514950Z E           
2025-02-24T15:57:56.6515030Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6515340Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6515640Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6516050Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6516060Z 
2025-02-24T15:57:56.6516290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6516450Z ____ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-nu] _____
2025-02-24T15:57:56.6516450Z 
2025-02-24T15:57:56.6516560Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6516660Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6516730Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6516840Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6516930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6517090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6517140Z err_msg = None
2025-02-24T15:57:56.6517150Z 
2025-02-24T15:57:56.6517230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6517280Z         if err_msg is None:
2025-02-24T15:57:56.6517350Z             if left.shape != right.shape:
2025-02-24T15:57:56.6517410Z                 raise_assert_detail(
2025-02-24T15:57:56.6517520Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6517570Z                 )
2025-02-24T15:57:56.6517610Z     
2025-02-24T15:57:56.6517660Z             diff = 0
2025-02-24T15:57:56.6517780Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6517840Z                 # count up differences
2025-02-24T15:57:56.6517970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6518030Z                     diff += 1
2025-02-24T15:57:56.6518070Z     
2025-02-24T15:57:56.6518130Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6518230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6518370Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6518450Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6518500Z E           
2025-02-24T15:57:56.6518590Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6518790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6519010Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6519020Z 
2025-02-24T15:57:56.6519270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6519270Z 
2025-02-24T15:57:56.6519400Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6519400Z 
2025-02-24T15:57:56.6519570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb28830>
2025-02-24T15:57:56.6519720Z plasma = <tardis.plasma.base.BasePlasma object at 0x168ce3ce0>, attr = 'nu'
2025-02-24T15:57:56.6519730Z 
2025-02-24T15:57:56.6519840Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6519930Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6519990Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6520040Z         try:
2025-02-24T15:57:56.6520150Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6520210Z         except KeyError:
2025-02-24T15:57:56.6520320Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6520360Z     
2025-02-24T15:57:56.6520420Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6520490Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6520550Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6520660Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6520720Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6520790Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6520880Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6520880Z 
2025-02-24T15:57:56.6520970Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6521060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6521220Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6521270Z     ???
2025-02-24T15:57:56.6521360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6521360Z 
2025-02-24T15:57:56.6521410Z >   ???
2025-02-24T15:57:56.6521510Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6521550Z E   
2025-02-24T15:57:56.6521650Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6521740Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6521790Z E          ...
2025-02-24T15:57:56.6521900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6522000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6522090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6522140Z E          ...
2025-02-24T15:57:56.6522200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6522310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6522380Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6522390Z 
2025-02-24T15:57:56.6522460Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6522630Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] _
2025-02-24T15:57:56.6522640Z 
2025-02-24T15:57:56.6522740Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6522850Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6522930Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6523040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6523140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6523220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6523270Z err_msg = None
2025-02-24T15:57:56.6523280Z 
2025-02-24T15:57:56.6523360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6523420Z         if err_msg is None:
2025-02-24T15:57:56.6523490Z             if left.shape != right.shape:
2025-02-24T15:57:56.6523580Z                 raise_assert_detail(
2025-02-24T15:57:56.6523710Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6523760Z                 )
2025-02-24T15:57:56.6523810Z     
2025-02-24T15:57:56.6523850Z             diff = 0
2025-02-24T15:57:56.6523950Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6524010Z                 # count up differences
2025-02-24T15:57:56.6524150Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6524200Z                     diff += 1
2025-02-24T15:57:56.6524250Z     
2025-02-24T15:57:56.6524320Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6524430Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6524570Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6524650Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6524700Z E           
2025-02-24T15:57:56.6524790Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6525000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6525310Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6525320Z 
2025-02-24T15:57:56.6525560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6525560Z 
2025-02-24T15:57:56.6525690Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6525690Z 
2025-02-24T15:57:56.6525860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb288f0>
2025-02-24T15:57:56.6525980Z plasma = <tardis.plasma.base.BasePlasma object at 0x168ce3ce0>
2025-02-24T15:57:56.6526090Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6526090Z 
2025-02-24T15:57:56.6526200Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6526280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6526340Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6526390Z         try:
2025-02-24T15:57:56.6526500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6526560Z         except KeyError:
2025-02-24T15:57:56.6526660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6526700Z     
2025-02-24T15:57:56.6526760Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6526830Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6526890Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6527000Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6527050Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6527120Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6527210Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6527210Z 
2025-02-24T15:57:56.6527300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6527390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6527500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6527540Z     ???
2025-02-24T15:57:56.6527630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6527630Z 
2025-02-24T15:57:56.6527680Z >   ???
2025-02-24T15:57:56.6527770Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6527810Z E   
2025-02-24T15:57:56.6527910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6527990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6528040Z E          ...
2025-02-24T15:57:56.6528110Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6528210Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6528290Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6528330Z E          ...
2025-02-24T15:57:56.6528400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6528490Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6528570Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6528570Z 
2025-02-24T15:57:56.6528640Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6528800Z ___ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-f_lu] ____
2025-02-24T15:57:56.6528800Z 
2025-02-24T15:57:56.6528900Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6529000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6529080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6529180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6529280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6529460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6529510Z err_msg = None
2025-02-24T15:57:56.6529510Z 
2025-02-24T15:57:56.6529590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6529650Z         if err_msg is None:
2025-02-24T15:57:56.6529710Z             if left.shape != right.shape:
2025-02-24T15:57:56.6529780Z                 raise_assert_detail(
2025-02-24T15:57:56.6529900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6529950Z                 )
2025-02-24T15:57:56.6529990Z     
2025-02-24T15:57:56.6530040Z             diff = 0
2025-02-24T15:57:56.6530220Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6530290Z                 # count up differences
2025-02-24T15:57:56.6530420Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6530470Z                     diff += 1
2025-02-24T15:57:56.6530520Z     
2025-02-24T15:57:56.6530580Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6530690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6530820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6530900Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6530950Z E           
2025-02-24T15:57:56.6531030Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6531230Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6531480Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6531480Z 
2025-02-24T15:57:56.6531710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6531710Z 
2025-02-24T15:57:56.6531840Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6531840Z 
2025-02-24T15:57:56.6532010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb289b0>
2025-02-24T15:57:56.6532160Z plasma = <tardis.plasma.base.BasePlasma object at 0x168ce3ce0>, attr = 'f_lu'
2025-02-24T15:57:56.6532160Z 
2025-02-24T15:57:56.6532260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6532360Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6532420Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6532470Z         try:
2025-02-24T15:57:56.6532580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6532630Z         except KeyError:
2025-02-24T15:57:56.6532730Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6532780Z     
2025-02-24T15:57:56.6532840Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6532900Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6532970Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6533070Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6533130Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6533190Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6533280Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6533280Z 
2025-02-24T15:57:56.6533370Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6533460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6533620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6533670Z     ???
2025-02-24T15:57:56.6533760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6533760Z 
2025-02-24T15:57:56.6533800Z >   ???
2025-02-24T15:57:56.6533900Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6533940Z E   
2025-02-24T15:57:56.6534040Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6534120Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6534170Z E          ...
2025-02-24T15:57:56.6534280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6534370Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6534460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6534510Z E          ...
2025-02-24T15:57:56.6534570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6534670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6534740Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6534750Z 
2025-02-24T15:57:56.6534810Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6534980Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] _
2025-02-24T15:57:56.6534980Z 
2025-02-24T15:57:56.6535080Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6535190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6535260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6535360Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6535460Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6535540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6535590Z err_msg = None
2025-02-24T15:57:56.6535590Z 
2025-02-24T15:57:56.6535660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6535720Z         if err_msg is None:
2025-02-24T15:57:56.6535790Z             if left.shape != right.shape:
2025-02-24T15:57:56.6535840Z                 raise_assert_detail(
2025-02-24T15:57:56.6535950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6536000Z                 )
2025-02-24T15:57:56.6536040Z     
2025-02-24T15:57:56.6536090Z             diff = 0
2025-02-24T15:57:56.6536180Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6536240Z                 # count up differences
2025-02-24T15:57:56.6536370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6536420Z                     diff += 1
2025-02-24T15:57:56.6536470Z     
2025-02-24T15:57:56.6536530Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6536640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6536770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6536930Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6536980Z E           
2025-02-24T15:57:56.6537150Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6537370Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6537640Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6537650Z 
2025-02-24T15:57:56.6543070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6543080Z 
2025-02-24T15:57:56.6543250Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6543260Z 
2025-02-24T15:57:56.6543440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb29130>
2025-02-24T15:57:56.6543570Z plasma = <tardis.plasma.base.BasePlasma object at 0x168ce3ce0>
2025-02-24T15:57:56.6543810Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6543810Z 
2025-02-24T15:57:56.6543930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6544030Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6544090Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6544140Z         try:
2025-02-24T15:57:56.6544280Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6544340Z         except KeyError:
2025-02-24T15:57:56.6544470Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6544520Z     
2025-02-24T15:57:56.6544600Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6544680Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6544750Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6544860Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6544920Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6545020Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6545110Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6545160Z             else:
2025-02-24T15:57:56.6545230Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6545330Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6545340Z 
2025-02-24T15:57:56.6545440Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6545540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6545650Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6545700Z     ???
2025-02-24T15:57:56.6545790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6545790Z 
2025-02-24T15:57:56.6545840Z >   ???
2025-02-24T15:57:56.6545940Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6545980Z E   
2025-02-24T15:57:56.6546080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6546170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6546220Z E          ...
2025-02-24T15:57:56.6546290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6546390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6546480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6546530Z E          ...
2025-02-24T15:57:56.6546600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6546690Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6546770Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6546780Z 
2025-02-24T15:57:56.6546840Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6547020Z _ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] _
2025-02-24T15:57:56.6547030Z 
2025-02-24T15:57:56.6547140Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6547250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6547330Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6547510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6547620Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6547700Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6547750Z err_msg = None
2025-02-24T15:57:56.6547760Z 
2025-02-24T15:57:56.6547840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6547900Z         if err_msg is None:
2025-02-24T15:57:56.6547970Z             if left.shape != right.shape:
2025-02-24T15:57:56.6548030Z                 raise_assert_detail(
2025-02-24T15:57:56.6548200Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6548250Z                 )
2025-02-24T15:57:56.6548290Z     
2025-02-24T15:57:56.6548340Z             diff = 0
2025-02-24T15:57:56.6548430Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6548490Z                 # count up differences
2025-02-24T15:57:56.6548630Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6548690Z                     diff += 1
2025-02-24T15:57:56.6548730Z     
2025-02-24T15:57:56.6548800Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6548910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6549050Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6549130Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6549180Z E           
2025-02-24T15:57:56.6549270Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6549490Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6549710Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6549710Z 
2025-02-24T15:57:56.6549960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6549960Z 
2025-02-24T15:57:56.6550090Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6550100Z 
2025-02-24T15:57:56.6550270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb291f0>
2025-02-24T15:57:56.6550390Z plasma = <tardis.plasma.base.BasePlasma object at 0x168ce3ce0>
2025-02-24T15:57:56.6550440Z attr = 'beta_sobolev'
2025-02-24T15:57:56.6550450Z 
2025-02-24T15:57:56.6550560Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6550650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6550710Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6550750Z         try:
2025-02-24T15:57:56.6550870Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6550920Z         except KeyError:
2025-02-24T15:57:56.6551030Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6551070Z     
2025-02-24T15:57:56.6551130Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6551200Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6551270Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6551380Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6551440Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6551500Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6551660Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6551710Z             else:
2025-02-24T15:57:56.6551780Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6551870Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6551870Z 
2025-02-24T15:57:56.6551970Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6552060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6552180Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6552220Z     ???
2025-02-24T15:57:56.6552310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6552530Z 
2025-02-24T15:57:56.6552580Z >   ???
2025-02-24T15:57:56.6552670Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6552720Z E   
2025-02-24T15:57:56.6552810Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6552900Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6552940Z E          ...
2025-02-24T15:57:56.6553010Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6553100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6553190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6553230Z E          ...
2025-02-24T15:57:56.6553300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6553390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6553470Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6553470Z 
2025-02-24T15:57:56.6553530Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6553690Z __ TestPlasma.test_plasma_properties[line_interaction_type:macroatom-j_blues] __
2025-02-24T15:57:56.6553690Z 
2025-02-24T15:57:56.6553790Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6553900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6553980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6554080Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6554180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6554250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6554300Z err_msg = None
2025-02-24T15:57:56.6554300Z 
2025-02-24T15:57:56.6554380Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6554440Z         if err_msg is None:
2025-02-24T15:57:56.6554520Z             if left.shape != right.shape:
2025-02-24T15:57:56.6554570Z                 raise_assert_detail(
2025-02-24T15:57:56.6554690Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6554730Z                 )
2025-02-24T15:57:56.6554780Z     
2025-02-24T15:57:56.6554820Z             diff = 0
2025-02-24T15:57:56.6554910Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6554970Z                 # count up differences
2025-02-24T15:57:56.6555100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6555150Z                     diff += 1
2025-02-24T15:57:56.6555190Z     
2025-02-24T15:57:56.6555260Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6555360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6555490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6555580Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6555630Z E           
2025-02-24T15:57:56.6555710Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6555960Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6556170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6556170Z 
2025-02-24T15:57:56.6556450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6556460Z 
2025-02-24T15:57:56.6556580Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6556590Z 
2025-02-24T15:57:56.6556760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb29370>
2025-02-24T15:57:56.6556910Z plasma = <tardis.plasma.base.BasePlasma object at 0x168ce3ce0>, attr = 'j_blues'
2025-02-24T15:57:56.6556920Z 
2025-02-24T15:57:56.6557020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6557110Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6557170Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6557210Z         try:
2025-02-24T15:57:56.6557320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6557370Z         except KeyError:
2025-02-24T15:57:56.6557480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6557530Z     
2025-02-24T15:57:56.6557590Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6557660Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6557720Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6557830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6557900Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6557970Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6558050Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6558100Z             else:
2025-02-24T15:57:56.6558170Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6558250Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6558260Z 
2025-02-24T15:57:56.6558350Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6558440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6558560Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6558600Z     ???
2025-02-24T15:57:56.6558690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6558700Z 
2025-02-24T15:57:56.6558740Z >   ???
2025-02-24T15:57:56.6558840Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6558880Z E   
2025-02-24T15:57:56.6558990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6559070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6559120Z E          ...
2025-02-24T15:57:56.6559190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6559290Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6559370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6559420Z E          ...
2025-02-24T15:57:56.6559490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6559590Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6559660Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6559670Z 
2025-02-24T15:57:56.6559730Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6559890Z __ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines] ___
2025-02-24T15:57:56.6559940Z 
2025-02-24T15:57:56.6560050Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6560160Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6560230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6560340Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6560440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6560560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6560610Z err_msg = None
2025-02-24T15:57:56.6560620Z 
2025-02-24T15:57:56.6560700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6560760Z         if err_msg is None:
2025-02-24T15:57:56.6560830Z             if left.shape != right.shape:
2025-02-24T15:57:56.6560890Z                 raise_assert_detail(
2025-02-24T15:57:56.6561000Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6561050Z                 )
2025-02-24T15:57:56.6561100Z     
2025-02-24T15:57:56.6561140Z             diff = 0
2025-02-24T15:57:56.6561230Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6561290Z                 # count up differences
2025-02-24T15:57:56.6561430Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6561490Z                     diff += 1
2025-02-24T15:57:56.6561530Z     
2025-02-24T15:57:56.6561600Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6561710Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6561840Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6561930Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6561980Z E           
2025-02-24T15:57:56.6562060Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6562300Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6562520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6562520Z 
2025-02-24T15:57:56.6562780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6562780Z 
2025-02-24T15:57:56.6562920Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6562920Z 
2025-02-24T15:57:56.6563100Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2a0f0>
2025-02-24T15:57:56.6563250Z plasma = <tardis.plasma.base.BasePlasma object at 0x162aa6900>, attr = 'lines'
2025-02-24T15:57:56.6563250Z 
2025-02-24T15:57:56.6563360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6563450Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6563510Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6563560Z         try:
2025-02-24T15:57:56.6563670Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6563730Z         except KeyError:
2025-02-24T15:57:56.6563830Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6563880Z     
2025-02-24T15:57:56.6563940Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6564070Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6564140Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6564240Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6564300Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6564370Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6564450Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6564490Z             else:
2025-02-24T15:57:56.6564560Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6564640Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6564680Z 
2025-02-24T15:57:56.6564770Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6564860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6564970Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6565020Z     ???
2025-02-24T15:57:56.6565110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6565110Z 
2025-02-24T15:57:56.6565150Z >   ???
2025-02-24T15:57:56.6565250Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6565290Z E   
2025-02-24T15:57:56.6565380Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6565470Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6565510Z E          ...
2025-02-24T15:57:56.6565570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6565670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6565760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6565800Z E          ...
2025-02-24T15:57:56.6565870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6565960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6566030Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6566040Z 
2025-02-24T15:57:56.6566100Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6566300Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] _
2025-02-24T15:57:56.6566310Z 
2025-02-24T15:57:56.6566470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2a1b0>
2025-02-24T15:57:56.6566590Z plasma = <tardis.plasma.base.BasePlasma object at 0x162aa6900>
2025-02-24T15:57:56.6566650Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6566650Z 
2025-02-24T15:57:56.6566750Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6566840Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6566900Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6566940Z         try:
2025-02-24T15:57:56.6567050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6567110Z         except KeyError:
2025-02-24T15:57:56.6567210Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6567260Z     
2025-02-24T15:57:56.6567310Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6567380Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6567440Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6567540Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6567600Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6567660Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6567750Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6567750Z 
2025-02-24T15:57:56.6567840Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6567930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6567930Z 
2025-02-24T15:57:56.6568040Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6568100Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6568250Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6568310Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6568420Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6568470Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6568560Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6568610Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6568660Z err_msg = None
2025-02-24T15:57:56.6568660Z 
2025-02-24T15:57:56.6568800Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6568860Z         if err_msg is None:
2025-02-24T15:57:56.6568930Z             if left.shape != right.shape:
2025-02-24T15:57:56.6568980Z                 raise_assert_detail(
2025-02-24T15:57:56.6569090Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6569140Z                 )
2025-02-24T15:57:56.6569190Z     
2025-02-24T15:57:56.6569230Z             diff = 0
2025-02-24T15:57:56.6569320Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6569370Z                 # count up differences
2025-02-24T15:57:56.6569510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6569560Z                     diff += 1
2025-02-24T15:57:56.6569600Z     
2025-02-24T15:57:56.6569660Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6569770Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6569900Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6569970Z E           AssertionError: Series are different
2025-02-24T15:57:56.6570020Z E           
2025-02-24T15:57:56.6570090Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6570390Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6570650Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6570920Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6570920Z 
2025-02-24T15:57:56.6571150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6571350Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] _
2025-02-24T15:57:56.6571360Z 
2025-02-24T15:57:56.6571520Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2a270>
2025-02-24T15:57:56.6571640Z plasma = <tardis.plasma.base.BasePlasma object at 0x162aa6900>
2025-02-24T15:57:56.6571700Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6571700Z 
2025-02-24T15:57:56.6571810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6571890Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6571950Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6572030Z         try:
2025-02-24T15:57:56.6572140Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6572200Z         except KeyError:
2025-02-24T15:57:56.6572300Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6572350Z     
2025-02-24T15:57:56.6572400Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6572470Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6572530Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6572640Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6572740Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6572800Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6572880Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6572890Z 
2025-02-24T15:57:56.6572980Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6573070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6573070Z 
2025-02-24T15:57:56.6573170Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6573240Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6573320Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6573380Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6573480Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6573550Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6573630Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6573690Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6573730Z err_msg = None
2025-02-24T15:57:56.6573740Z 
2025-02-24T15:57:56.6573810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6573870Z         if err_msg is None:
2025-02-24T15:57:56.6573940Z             if left.shape != right.shape:
2025-02-24T15:57:56.6574000Z                 raise_assert_detail(
2025-02-24T15:57:56.6574110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6574150Z                 )
2025-02-24T15:57:56.6574190Z     
2025-02-24T15:57:56.6574240Z             diff = 0
2025-02-24T15:57:56.6574320Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6574380Z                 # count up differences
2025-02-24T15:57:56.6574510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6574570Z                     diff += 1
2025-02-24T15:57:56.6574610Z     
2025-02-24T15:57:56.6574670Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6574780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6574910Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6574980Z E           AssertionError: Series are different
2025-02-24T15:57:56.6575030Z E           
2025-02-24T15:57:56.6575100Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6575410Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6575780Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6576080Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6576080Z 
2025-02-24T15:57:56.6576310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6576520Z ____ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-nu] ____
2025-02-24T15:57:56.6576520Z 
2025-02-24T15:57:56.6576620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6576730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6576800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6576910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6577010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6577080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6577120Z err_msg = None
2025-02-24T15:57:56.6577130Z 
2025-02-24T15:57:56.6577210Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6577260Z         if err_msg is None:
2025-02-24T15:57:56.6577330Z             if left.shape != right.shape:
2025-02-24T15:57:56.6577390Z                 raise_assert_detail(
2025-02-24T15:57:56.6577500Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6577540Z                 )
2025-02-24T15:57:56.6577590Z     
2025-02-24T15:57:56.6577630Z             diff = 0
2025-02-24T15:57:56.6577720Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6577780Z                 # count up differences
2025-02-24T15:57:56.6577910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6577960Z                     diff += 1
2025-02-24T15:57:56.6578000Z     
2025-02-24T15:57:56.6578070Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6578170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6578300Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6578380Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6578430Z E           
2025-02-24T15:57:56.6578510Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6578720Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6578930Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6578930Z 
2025-02-24T15:57:56.6579270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6579270Z 
2025-02-24T15:57:56.6579400Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6579410Z 
2025-02-24T15:57:56.6579570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2a4b0>
2025-02-24T15:57:56.6579760Z plasma = <tardis.plasma.base.BasePlasma object at 0x162aa6900>, attr = 'nu'
2025-02-24T15:57:56.6579760Z 
2025-02-24T15:57:56.6579870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6579950Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6580010Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6580050Z         try:
2025-02-24T15:57:56.6580160Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6580210Z         except KeyError:
2025-02-24T15:57:56.6580320Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6580400Z     
2025-02-24T15:57:56.6580460Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6580530Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6580590Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6580690Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6580750Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6580810Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6580900Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6580900Z 
2025-02-24T15:57:56.6580990Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6581080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6581190Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6581230Z     ???
2025-02-24T15:57:56.6581320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6581320Z 
2025-02-24T15:57:56.6581370Z >   ???
2025-02-24T15:57:56.6581460Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6581500Z E   
2025-02-24T15:57:56.6581600Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6581680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6581730Z E          ...
2025-02-24T15:57:56.6581790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6581890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6581970Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6582020Z E          ...
2025-02-24T15:57:56.6582080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6582180Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6582250Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6582250Z 
2025-02-24T15:57:56.6582320Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6582490Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] _
2025-02-24T15:57:56.6582490Z 
2025-02-24T15:57:56.6582600Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6582700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6582780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6582880Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6582980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6583050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6583100Z err_msg = None
2025-02-24T15:57:56.6583100Z 
2025-02-24T15:57:56.6583180Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6583230Z         if err_msg is None:
2025-02-24T15:57:56.6583300Z             if left.shape != right.shape:
2025-02-24T15:57:56.6583360Z                 raise_assert_detail(
2025-02-24T15:57:56.6583470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6583520Z                 )
2025-02-24T15:57:56.6583560Z     
2025-02-24T15:57:56.6583760Z             diff = 0
2025-02-24T15:57:56.6583880Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6583950Z                 # count up differences
2025-02-24T15:57:56.6584080Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6584130Z                     diff += 1
2025-02-24T15:57:56.6584170Z     
2025-02-24T15:57:56.6584240Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6584340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6584470Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6584620Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6584660Z E           
2025-02-24T15:57:56.6584740Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6584950Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6585150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6585160Z 
2025-02-24T15:57:56.6585390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6585390Z 
2025-02-24T15:57:56.6585520Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6585520Z 
2025-02-24T15:57:56.6585690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2a570>
2025-02-24T15:57:56.6585810Z plasma = <tardis.plasma.base.BasePlasma object at 0x162aa6900>
2025-02-24T15:57:56.6585860Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6585860Z 
2025-02-24T15:57:56.6585960Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6586050Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6586100Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6586150Z         try:
2025-02-24T15:57:56.6586250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6586310Z         except KeyError:
2025-02-24T15:57:56.6586410Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6586460Z     
2025-02-24T15:57:56.6586520Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6586580Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6586640Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6586750Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6586810Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6586880Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6586960Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6586960Z 
2025-02-24T15:57:56.6587060Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6587200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6587340Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6587380Z     ???
2025-02-24T15:57:56.6593910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6593960Z 
2025-02-24T15:57:56.6594010Z >   ???
2025-02-24T15:57:56.6594110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6594150Z E   
2025-02-24T15:57:56.6594250Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6594340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6594540Z E          ...
2025-02-24T15:57:56.6594610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6594710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6594800Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6594840Z E          ...
2025-02-24T15:57:56.6594910Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6595000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6595080Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6595080Z 
2025-02-24T15:57:56.6595200Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6595370Z ___ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-f_lu] ___
2025-02-24T15:57:56.6595370Z 
2025-02-24T15:57:56.6595480Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6595580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6595660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6595760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6595870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6595940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6595990Z err_msg = None
2025-02-24T15:57:56.6595990Z 
2025-02-24T15:57:56.6596080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6596130Z         if err_msg is None:
2025-02-24T15:57:56.6596220Z             if left.shape != right.shape:
2025-02-24T15:57:56.6596280Z                 raise_assert_detail(
2025-02-24T15:57:56.6596400Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6596440Z                 )
2025-02-24T15:57:56.6596490Z     
2025-02-24T15:57:56.6596540Z             diff = 0
2025-02-24T15:57:56.6596620Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6596690Z                 # count up differences
2025-02-24T15:57:56.6596820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6596880Z                     diff += 1
2025-02-24T15:57:56.6596920Z     
2025-02-24T15:57:56.6596980Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6597090Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6597220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6597310Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6597360Z E           
2025-02-24T15:57:56.6597450Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6597660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6597870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6597870Z 
2025-02-24T15:57:56.6598110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6598120Z 
2025-02-24T15:57:56.6598250Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6598250Z 
2025-02-24T15:57:56.6598420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2a630>
2025-02-24T15:57:56.6598640Z plasma = <tardis.plasma.base.BasePlasma object at 0x162aa6900>, attr = 'f_lu'
2025-02-24T15:57:56.6598650Z 
2025-02-24T15:57:56.6598760Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6598850Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6598910Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6598950Z         try:
2025-02-24T15:57:56.6599060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6599120Z         except KeyError:
2025-02-24T15:57:56.6599220Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6599320Z     
2025-02-24T15:57:56.6599380Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6599450Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6599510Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6599610Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6599670Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6599740Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6599820Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6599820Z 
2025-02-24T15:57:56.6599910Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6600000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6600110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6600150Z     ???
2025-02-24T15:57:56.6600240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6600240Z 
2025-02-24T15:57:56.6600290Z >   ???
2025-02-24T15:57:56.6600380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6600420Z E   
2025-02-24T15:57:56.6600520Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6600600Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6600650Z E          ...
2025-02-24T15:57:56.6600710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6600810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6600890Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6600940Z E          ...
2025-02-24T15:57:56.6601000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6601090Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6601160Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6601170Z 
2025-02-24T15:57:56.6601230Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6601400Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] _
2025-02-24T15:57:56.6601400Z 
2025-02-24T15:57:56.6601500Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6601610Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6601680Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6601780Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6601880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6601950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6602000Z err_msg = None
2025-02-24T15:57:56.6602000Z 
2025-02-24T15:57:56.6602080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6602130Z         if err_msg is None:
2025-02-24T15:57:56.6602200Z             if left.shape != right.shape:
2025-02-24T15:57:56.6602260Z                 raise_assert_detail(
2025-02-24T15:57:56.6602370Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6602410Z                 )
2025-02-24T15:57:56.6602450Z     
2025-02-24T15:57:56.6602540Z             diff = 0
2025-02-24T15:57:56.6602620Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6602690Z                 # count up differences
2025-02-24T15:57:56.6602820Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6602870Z                     diff += 1
2025-02-24T15:57:56.6602910Z     
2025-02-24T15:57:56.6602970Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6603080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6603210Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6603330Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6603370Z E           
2025-02-24T15:57:56.6603460Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6603660Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6603870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6603870Z 
2025-02-24T15:57:56.6604100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6604110Z 
2025-02-24T15:57:56.6604230Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6604240Z 
2025-02-24T15:57:56.6604400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2adb0>
2025-02-24T15:57:56.6604520Z plasma = <tardis.plasma.base.BasePlasma object at 0x162aa6900>
2025-02-24T15:57:56.6604570Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6604570Z 
2025-02-24T15:57:56.6604680Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6604760Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6604820Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6604860Z         try:
2025-02-24T15:57:56.6604970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6605020Z         except KeyError:
2025-02-24T15:57:56.6605130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6605170Z     
2025-02-24T15:57:56.6605230Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6605300Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6605360Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6605460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6605520Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6605590Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6605670Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6605710Z             else:
2025-02-24T15:57:56.6605780Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6605860Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6605860Z 
2025-02-24T15:57:56.6605950Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6606040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6606150Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6606190Z     ???
2025-02-24T15:57:56.6606280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6606280Z 
2025-02-24T15:57:56.6606330Z >   ???
2025-02-24T15:57:56.6606420Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6606520Z E   
2025-02-24T15:57:56.6606620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6606710Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6606750Z E          ...
2025-02-24T15:57:56.6606810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6606910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6606990Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6607040Z E          ...
2025-02-24T15:57:56.6607100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6607260Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6607330Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6607340Z 
2025-02-24T15:57:56.6607400Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6607570Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] _
2025-02-24T15:57:56.6607570Z 
2025-02-24T15:57:56.6607670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6607770Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6607840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6607950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6608050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6608120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6608170Z err_msg = None
2025-02-24T15:57:56.6608170Z 
2025-02-24T15:57:56.6608250Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6608310Z         if err_msg is None:
2025-02-24T15:57:56.6608380Z             if left.shape != right.shape:
2025-02-24T15:57:56.6608440Z                 raise_assert_detail(
2025-02-24T15:57:56.6608550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6608600Z                 )
2025-02-24T15:57:56.6608670Z     
2025-02-24T15:57:56.6608720Z             diff = 0
2025-02-24T15:57:56.6608810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6608870Z                 # count up differences
2025-02-24T15:57:56.6609010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6609060Z                     diff += 1
2025-02-24T15:57:56.6609110Z     
2025-02-24T15:57:56.6609170Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6609280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6609420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6609500Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6609550Z E           
2025-02-24T15:57:56.6609640Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6609850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6610060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6610060Z 
2025-02-24T15:57:56.6610300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6610310Z 
2025-02-24T15:57:56.6610510Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6610520Z 
2025-02-24T15:57:56.6610690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2ae70>
2025-02-24T15:57:56.6610810Z plasma = <tardis.plasma.base.BasePlasma object at 0x162aa6900>
2025-02-24T15:57:56.6610860Z attr = 'beta_sobolev'
2025-02-24T15:57:56.6610860Z 
2025-02-24T15:57:56.6610970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6611060Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6611120Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6611160Z         try:
2025-02-24T15:57:56.6611320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6611380Z         except KeyError:
2025-02-24T15:57:56.6611490Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6611530Z     
2025-02-24T15:57:56.6611600Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6611670Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6611730Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6611840Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6611900Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6611970Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6612050Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6612100Z             else:
2025-02-24T15:57:56.6612170Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6612250Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6612250Z 
2025-02-24T15:57:56.6612350Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6612440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6612550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6612590Z     ???
2025-02-24T15:57:56.6612690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6612690Z 
2025-02-24T15:57:56.6612730Z >   ???
2025-02-24T15:57:56.6612830Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6612880Z E   
2025-02-24T15:57:56.6612970Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6613060Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6613110Z E          ...
2025-02-24T15:57:56.6613170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6613270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6613360Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6613410Z E          ...
2025-02-24T15:57:56.6613470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6613570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6613650Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6613650Z 
2025-02-24T15:57:56.6613720Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6613880Z _ TestPlasma.test_plasma_properties[line_interaction_type:downbranch-j_blues] __
2025-02-24T15:57:56.6613890Z 
2025-02-24T15:57:56.6613990Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6614090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6614170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6614270Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6614380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6614450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6614500Z err_msg = None
2025-02-24T15:57:56.6614510Z 
2025-02-24T15:57:56.6614630Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6614690Z         if err_msg is None:
2025-02-24T15:57:56.6614760Z             if left.shape != right.shape:
2025-02-24T15:57:56.6614810Z                 raise_assert_detail(
2025-02-24T15:57:56.6614930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6614970Z                 )
2025-02-24T15:57:56.6615010Z     
2025-02-24T15:57:56.6615060Z             diff = 0
2025-02-24T15:57:56.6615140Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6615200Z                 # count up differences
2025-02-24T15:57:56.6615370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6615420Z                     diff += 1
2025-02-24T15:57:56.6615470Z     
2025-02-24T15:57:56.6615530Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6615630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6615770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6615850Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6615890Z E           
2025-02-24T15:57:56.6615980Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6616180Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6616380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6616390Z 
2025-02-24T15:57:56.6616620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6616620Z 
2025-02-24T15:57:56.6616750Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6616750Z 
2025-02-24T15:57:56.6616910Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2aff0>
2025-02-24T15:57:56.6617060Z plasma = <tardis.plasma.base.BasePlasma object at 0x162aa6900>, attr = 'j_blues'
2025-02-24T15:57:56.6617070Z 
2025-02-24T15:57:56.6617170Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6617250Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6617310Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6617360Z         try:
2025-02-24T15:57:56.6617470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6617520Z         except KeyError:
2025-02-24T15:57:56.6617630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6617670Z     
2025-02-24T15:57:56.6617730Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6617800Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6617860Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6617960Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6618020Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6618080Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6618160Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6618210Z             else:
2025-02-24T15:57:56.6618280Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6618360Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6618360Z 
2025-02-24T15:57:56.6618450Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6618570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6618680Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6618730Z     ???
2025-02-24T15:57:56.6618810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6618820Z 
2025-02-24T15:57:56.6618860Z >   ???
2025-02-24T15:57:56.6618950Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6618990Z E   
2025-02-24T15:57:56.6619090Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6619170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6619260Z E          ...
2025-02-24T15:57:56.6619320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6619420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6619500Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6619550Z E          ...
2025-02-24T15:57:56.6619610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6619710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6619780Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6619780Z 
2025-02-24T15:57:56.6619840Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6620000Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines] ___
2025-02-24T15:57:56.6620010Z 
2025-02-24T15:57:56.6620110Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6620210Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6620280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6620380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6620480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6620550Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6620600Z err_msg = None
2025-02-24T15:57:56.6620600Z 
2025-02-24T15:57:56.6620680Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6620740Z         if err_msg is None:
2025-02-24T15:57:56.6620800Z             if left.shape != right.shape:
2025-02-24T15:57:56.6620860Z                 raise_assert_detail(
2025-02-24T15:57:56.6620970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6621010Z                 )
2025-02-24T15:57:56.6621050Z     
2025-02-24T15:57:56.6621100Z             diff = 0
2025-02-24T15:57:56.6621190Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6621250Z                 # count up differences
2025-02-24T15:57:56.6621370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6621430Z                     diff += 1
2025-02-24T15:57:56.6621470Z     
2025-02-24T15:57:56.6621540Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6621640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6621770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6621850Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6621890Z E           
2025-02-24T15:57:56.6621970Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6622180Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6622450Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6622450Z 
2025-02-24T15:57:56.6622680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6622690Z 
2025-02-24T15:57:56.6622810Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6622820Z 
2025-02-24T15:57:56.6622980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2bd70>
2025-02-24T15:57:56.6623300Z plasma = <tardis.plasma.base.BasePlasma object at 0x155bf09b0>, attr = 'lines'
2025-02-24T15:57:56.6623300Z 
2025-02-24T15:57:56.6623400Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6623490Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6623540Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6623590Z         try:
2025-02-24T15:57:56.6623700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6623750Z         except KeyError:
2025-02-24T15:57:56.6623850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6623900Z     
2025-02-24T15:57:56.6623960Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6624020Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6624090Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6624190Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6624250Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6624310Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6624400Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6624440Z             else:
2025-02-24T15:57:56.6624510Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6624590Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6624590Z 
2025-02-24T15:57:56.6624680Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6624770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6624880Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6624920Z     ???
2025-02-24T15:57:56.6625010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6625010Z 
2025-02-24T15:57:56.6625050Z >   ???
2025-02-24T15:57:56.6625140Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6625190Z E   
2025-02-24T15:57:56.6625280Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6625370Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6625410Z E          ...
2025-02-24T15:57:56.6625490Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6625600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6625680Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6625730Z E          ...
2025-02-24T15:57:56.6625790Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6625890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6625970Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6625970Z 
2025-02-24T15:57:56.6626030Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6626240Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] _
2025-02-24T15:57:56.6626250Z 
2025-02-24T15:57:56.6626420Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2be30>
2025-02-24T15:57:56.6626540Z plasma = <tardis.plasma.base.BasePlasma object at 0x155bf09b0>
2025-02-24T15:57:56.6626600Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6626610Z 
2025-02-24T15:57:56.6626790Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6626880Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6626940Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6626980Z         try:
2025-02-24T15:57:56.6627100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6627150Z         except KeyError:
2025-02-24T15:57:56.6627260Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6627300Z     
2025-02-24T15:57:56.6627370Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6627440Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6627500Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6627660Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6627720Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6627780Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6627870Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6627870Z 
2025-02-24T15:57:56.6627970Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6628060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6628060Z 
2025-02-24T15:57:56.6628170Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6628230Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6628320Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6628380Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6628490Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6628550Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6628640Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6628700Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6628750Z err_msg = None
2025-02-24T15:57:56.6628750Z 
2025-02-24T15:57:56.6628830Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6628890Z         if err_msg is None:
2025-02-24T15:57:56.6628960Z             if left.shape != right.shape:
2025-02-24T15:57:56.6629020Z                 raise_assert_detail(
2025-02-24T15:57:56.6629130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6629170Z                 )
2025-02-24T15:57:56.6629220Z     
2025-02-24T15:57:56.6629270Z             diff = 0
2025-02-24T15:57:56.6629350Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6629410Z                 # count up differences
2025-02-24T15:57:56.6629550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6629600Z                     diff += 1
2025-02-24T15:57:56.6629650Z     
2025-02-24T15:57:56.6629710Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6629820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6629960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6630030Z E           AssertionError: Series are different
2025-02-24T15:57:56.6630080Z E           
2025-02-24T15:57:56.6630160Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6630480Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6630830Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6631110Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6631110Z 
2025-02-24T15:57:56.6631350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6631610Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] _
2025-02-24T15:57:56.6631610Z 
2025-02-24T15:57:56.6631780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb2bef0>
2025-02-24T15:57:56.6631910Z plasma = <tardis.plasma.base.BasePlasma object at 0x155bf09b0>
2025-02-24T15:57:56.6631980Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6631980Z 
2025-02-24T15:57:56.6632080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6632170Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6632230Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6632280Z         try:
2025-02-24T15:57:56.6632380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6632440Z         except KeyError:
2025-02-24T15:57:56.6632540Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6632590Z     
2025-02-24T15:57:56.6632650Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6632710Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6632780Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6632880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6632940Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6633000Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6633080Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6633090Z 
2025-02-24T15:57:56.6633180Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6633260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6633270Z 
2025-02-24T15:57:56.6633370Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6633430Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6633520Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6633570Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6633680Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6633810Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6633900Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6633960Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6634010Z err_msg = None
2025-02-24T15:57:56.6634010Z 
2025-02-24T15:57:56.6634090Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6634150Z         if err_msg is None:
2025-02-24T15:57:56.6634230Z             if left.shape != right.shape:
2025-02-24T15:57:56.6634290Z                 raise_assert_detail(
2025-02-24T15:57:56.6634410Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6634460Z                 )
2025-02-24T15:57:56.6634500Z     
2025-02-24T15:57:56.6634550Z             diff = 0
2025-02-24T15:57:56.6634640Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6634700Z                 # count up differences
2025-02-24T15:57:56.6634890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6634950Z                     diff += 1
2025-02-24T15:57:56.6635000Z     
2025-02-24T15:57:56.6635060Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6635170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6635310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6635390Z E           AssertionError: Series are different
2025-02-24T15:57:56.6635430Z E           
2025-02-24T15:57:56.6635510Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6635820Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6636170Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6636960Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6637040Z 
2025-02-24T15:57:56.6637640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6637850Z ____ TestPlasma.test_plasma_properties[disable_electron_scattering:True-nu] ____
2025-02-24T15:57:56.6637850Z 
2025-02-24T15:57:56.6638030Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6638140Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6638240Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6638360Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6638540Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6638650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6638760Z err_msg = None
2025-02-24T15:57:56.6638760Z 
2025-02-24T15:57:56.6638860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6638940Z         if err_msg is None:
2025-02-24T15:57:56.6639030Z             if left.shape != right.shape:
2025-02-24T15:57:56.6639090Z                 raise_assert_detail(
2025-02-24T15:57:56.6644620Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6644680Z                 )
2025-02-24T15:57:56.6644730Z     
2025-02-24T15:57:56.6644780Z             diff = 0
2025-02-24T15:57:56.6644870Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6644960Z                 # count up differences
2025-02-24T15:57:56.6645100Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6645170Z                     diff += 1
2025-02-24T15:57:56.6645210Z     
2025-02-24T15:57:56.6645280Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6645390Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6645860Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6645960Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6646010Z E           
2025-02-24T15:57:56.6646160Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6646380Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6646700Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6646700Z 
2025-02-24T15:57:56.6646950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6646950Z 
2025-02-24T15:57:56.6647090Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6647090Z 
2025-02-24T15:57:56.6647270Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb50170>
2025-02-24T15:57:56.6647420Z plasma = <tardis.plasma.base.BasePlasma object at 0x155bf09b0>, attr = 'nu'
2025-02-24T15:57:56.6647420Z 
2025-02-24T15:57:56.6647540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6647630Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6647700Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6647750Z         try:
2025-02-24T15:57:56.6647870Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6647920Z         except KeyError:
2025-02-24T15:57:56.6648040Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6648090Z     
2025-02-24T15:57:56.6648150Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6648220Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6648280Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6648400Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6648460Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6648530Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6648620Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6648620Z 
2025-02-24T15:57:56.6648710Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6648810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6648930Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6648970Z     ???
2025-02-24T15:57:56.6649070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6649070Z 
2025-02-24T15:57:56.6649120Z >   ???
2025-02-24T15:57:56.6649210Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6649260Z E   
2025-02-24T15:57:56.6649360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6649450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6649500Z E          ...
2025-02-24T15:57:56.6649570Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6649670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6649760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6649810Z E          ...
2025-02-24T15:57:56.6649880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6649980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6650060Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6650060Z 
2025-02-24T15:57:56.6650180Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6650370Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-wavelength_cm] _
2025-02-24T15:57:56.6650380Z 
2025-02-24T15:57:56.6650490Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6650590Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6650670Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6650810Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6651000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6651100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6651150Z err_msg = None
2025-02-24T15:57:56.6651150Z 
2025-02-24T15:57:56.6651240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6651310Z         if err_msg is None:
2025-02-24T15:57:56.6651380Z             if left.shape != right.shape:
2025-02-24T15:57:56.6651450Z                 raise_assert_detail(
2025-02-24T15:57:56.6651560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6651610Z                 )
2025-02-24T15:57:56.6651660Z     
2025-02-24T15:57:56.6651710Z             diff = 0
2025-02-24T15:57:56.6651820Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6651900Z                 # count up differences
2025-02-24T15:57:56.6652030Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6652110Z                     diff += 1
2025-02-24T15:57:56.6652150Z     
2025-02-24T15:57:56.6652220Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6652330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6652490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6652580Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6652630Z E           
2025-02-24T15:57:56.6652720Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6652940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6653170Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6653170Z 
2025-02-24T15:57:56.6653430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6653440Z 
2025-02-24T15:57:56.6653580Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6653580Z 
2025-02-24T15:57:56.6653760Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb50230>
2025-02-24T15:57:56.6653890Z plasma = <tardis.plasma.base.BasePlasma object at 0x155bf09b0>
2025-02-24T15:57:56.6653960Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6653960Z 
2025-02-24T15:57:56.6654070Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6654160Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6654230Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6654280Z         try:
2025-02-24T15:57:56.6654390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6654450Z         except KeyError:
2025-02-24T15:57:56.6654650Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6654700Z     
2025-02-24T15:57:56.6654770Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6654840Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6654910Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6655020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6655090Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6655160Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6655240Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6655240Z 
2025-02-24T15:57:56.6655420Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6655520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6655640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6655690Z     ???
2025-02-24T15:57:56.6655790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6655790Z 
2025-02-24T15:57:56.6655840Z >   ???
2025-02-24T15:57:56.6655940Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6655980Z E   
2025-02-24T15:57:56.6656080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6656170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6656220Z E          ...
2025-02-24T15:57:56.6656290Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6656400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6656490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6656540Z E          ...
2025-02-24T15:57:56.6656610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6656710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6656790Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6656800Z 
2025-02-24T15:57:56.6656870Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6657040Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:True-f_lu] ___
2025-02-24T15:57:56.6657050Z 
2025-02-24T15:57:56.6657150Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6657260Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6657350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6657450Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6657570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6657650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6657700Z err_msg = None
2025-02-24T15:57:56.6657700Z 
2025-02-24T15:57:56.6657790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6657850Z         if err_msg is None:
2025-02-24T15:57:56.6657920Z             if left.shape != right.shape:
2025-02-24T15:57:56.6657980Z                 raise_assert_detail(
2025-02-24T15:57:56.6658110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6658160Z                 )
2025-02-24T15:57:56.6658210Z     
2025-02-24T15:57:56.6658260Z             diff = 0
2025-02-24T15:57:56.6658350Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6658420Z                 # count up differences
2025-02-24T15:57:56.6658560Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6658620Z                     diff += 1
2025-02-24T15:57:56.6658670Z     
2025-02-24T15:57:56.6658740Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6658850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6659060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6659150Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6659210Z E           
2025-02-24T15:57:56.6659300Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6659520Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6659800Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6659800Z 
2025-02-24T15:57:56.6660050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6660050Z 
2025-02-24T15:57:56.6660190Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6660190Z 
2025-02-24T15:57:56.6660370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb502f0>
2025-02-24T15:57:56.6660530Z plasma = <tardis.plasma.base.BasePlasma object at 0x155bf09b0>, attr = 'f_lu'
2025-02-24T15:57:56.6660530Z 
2025-02-24T15:57:56.6660640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6660740Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6660810Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6660860Z         try:
2025-02-24T15:57:56.6660970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6661020Z         except KeyError:
2025-02-24T15:57:56.6661150Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6661190Z     
2025-02-24T15:57:56.6661260Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6661330Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6661400Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6661510Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6661570Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6661640Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6661730Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6661730Z 
2025-02-24T15:57:56.6661840Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6661930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6662040Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6662090Z     ???
2025-02-24T15:57:56.6662180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6662190Z 
2025-02-24T15:57:56.6662240Z >   ???
2025-02-24T15:57:56.6662340Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6662390Z E   
2025-02-24T15:57:56.6662490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6662570Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6662620Z E          ...
2025-02-24T15:57:56.6662690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6662800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6662890Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6662940Z E          ...
2025-02-24T15:57:56.6663000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6663100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6663180Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6663180Z 
2025-02-24T15:57:56.6663510Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6663700Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] _
2025-02-24T15:57:56.6663710Z 
2025-02-24T15:57:56.6663810Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6663930Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6664000Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6664110Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6664450Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6664520Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6664570Z err_msg = None
2025-02-24T15:57:56.6664580Z 
2025-02-24T15:57:56.6664670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6664730Z         if err_msg is None:
2025-02-24T15:57:56.6664800Z             if left.shape != right.shape:
2025-02-24T15:57:56.6664870Z                 raise_assert_detail(
2025-02-24T15:57:56.6664980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6665030Z                 )
2025-02-24T15:57:56.6665080Z     
2025-02-24T15:57:56.6665130Z             diff = 0
2025-02-24T15:57:56.6665210Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6665280Z                 # count up differences
2025-02-24T15:57:56.6665410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6665470Z                     diff += 1
2025-02-24T15:57:56.6665520Z     
2025-02-24T15:57:56.6665590Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6665690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6665830Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6665920Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6665960Z E           
2025-02-24T15:57:56.6666050Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6666260Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6666500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6666500Z 
2025-02-24T15:57:56.6666760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6666770Z 
2025-02-24T15:57:56.6666900Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6666900Z 
2025-02-24T15:57:56.6667080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb50a70>
2025-02-24T15:57:56.6667200Z plasma = <tardis.plasma.base.BasePlasma object at 0x155bf09b0>
2025-02-24T15:57:56.6667260Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6667260Z 
2025-02-24T15:57:56.6667370Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6667460Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6667520Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6667570Z         try:
2025-02-24T15:57:56.6667680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6667740Z         except KeyError:
2025-02-24T15:57:56.6667940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6667980Z     
2025-02-24T15:57:56.6668050Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6668120Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6668190Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6668290Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6668350Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6668420Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6668500Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6668550Z             else:
2025-02-24T15:57:56.6668670Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6668760Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6668770Z 
2025-02-24T15:57:56.6668860Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6668960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6669080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6669130Z     ???
2025-02-24T15:57:56.6669220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6669230Z 
2025-02-24T15:57:56.6669270Z >   ???
2025-02-24T15:57:56.6669380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6669420Z E   
2025-02-24T15:57:56.6669520Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6669610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6669660Z E          ...
2025-02-24T15:57:56.6669730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6669840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6669930Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6669970Z E          ...
2025-02-24T15:57:56.6670040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6670140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6670230Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6670240Z 
2025-02-24T15:57:56.6670300Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6670480Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-beta_sobolev] _
2025-02-24T15:57:56.6670480Z 
2025-02-24T15:57:56.6670590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6670700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6670780Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6670890Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6671000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6671080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6671130Z err_msg = None
2025-02-24T15:57:56.6671130Z 
2025-02-24T15:57:56.6671220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6671280Z         if err_msg is None:
2025-02-24T15:57:56.6671350Z             if left.shape != right.shape:
2025-02-24T15:57:56.6671420Z                 raise_assert_detail(
2025-02-24T15:57:56.6671530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6671580Z                 )
2025-02-24T15:57:56.6671620Z     
2025-02-24T15:57:56.6671670Z             diff = 0
2025-02-24T15:57:56.6671770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6671830Z                 # count up differences
2025-02-24T15:57:56.6671970Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6672030Z                     diff += 1
2025-02-24T15:57:56.6672080Z     
2025-02-24T15:57:56.6672190Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6672300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6672440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6672530Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6672580Z E           
2025-02-24T15:57:56.6672670Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6672890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6673160Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6673170Z 
2025-02-24T15:57:56.6673410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6673420Z 
2025-02-24T15:57:56.6673550Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6673550Z 
2025-02-24T15:57:56.6673720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb50b30>
2025-02-24T15:57:56.6673850Z plasma = <tardis.plasma.base.BasePlasma object at 0x155bf09b0>
2025-02-24T15:57:56.6673900Z attr = 'beta_sobolev'
2025-02-24T15:57:56.6673910Z 
2025-02-24T15:57:56.6674020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6674100Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6674170Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6674210Z         try:
2025-02-24T15:57:56.6674330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6674390Z         except KeyError:
2025-02-24T15:57:56.6674500Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6674540Z     
2025-02-24T15:57:56.6674610Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6674680Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6674740Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6674850Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6674920Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6674990Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6675080Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6675130Z             else:
2025-02-24T15:57:56.6675200Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6675290Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6675290Z 
2025-02-24T15:57:56.6675380Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6675470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6675590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6675640Z     ???
2025-02-24T15:57:56.6675730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6675730Z 
2025-02-24T15:57:56.6675770Z >   ???
2025-02-24T15:57:56.6675870Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6675920Z E   
2025-02-24T15:57:56.6676020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6676100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6676160Z E          ...
2025-02-24T15:57:56.6676220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6676390Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6676480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6676530Z E          ...
2025-02-24T15:57:56.6676600Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6676800Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6676910Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6676910Z 
2025-02-24T15:57:56.6676970Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6677140Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:True-j_blues] __
2025-02-24T15:57:56.6677220Z 
2025-02-24T15:57:56.6677320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6677440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6677510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6677620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6677720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6677800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6677850Z err_msg = None
2025-02-24T15:57:56.6677850Z 
2025-02-24T15:57:56.6677930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6677990Z         if err_msg is None:
2025-02-24T15:57:56.6678060Z             if left.shape != right.shape:
2025-02-24T15:57:56.6678120Z                 raise_assert_detail(
2025-02-24T15:57:56.6678240Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6678290Z                 )
2025-02-24T15:57:56.6678330Z     
2025-02-24T15:57:56.6678380Z             diff = 0
2025-02-24T15:57:56.6678470Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6678530Z                 # count up differences
2025-02-24T15:57:56.6678670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6678730Z                     diff += 1
2025-02-24T15:57:56.6678770Z     
2025-02-24T15:57:56.6678840Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6678950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6679090Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6679180Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6679220Z E           
2025-02-24T15:57:56.6679310Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6679540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6679740Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6679750Z 
2025-02-24T15:57:56.6679990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6679990Z 
2025-02-24T15:57:56.6680130Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6680140Z 
2025-02-24T15:57:56.6680310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb50cb0>
2025-02-24T15:57:56.6680480Z plasma = <tardis.plasma.base.BasePlasma object at 0x155bf09b0>, attr = 'j_blues'
2025-02-24T15:57:56.6680480Z 
2025-02-24T15:57:56.6680670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6680770Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6680830Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6680880Z         try:
2025-02-24T15:57:56.6680990Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6681050Z         except KeyError:
2025-02-24T15:57:56.6681160Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6681200Z     
2025-02-24T15:57:56.6681270Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6681340Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6681490Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6681600Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6681670Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6681740Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6681830Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6681880Z             else:
2025-02-24T15:57:56.6681950Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6682040Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6682050Z 
2025-02-24T15:57:56.6682140Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6682230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6682350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6682390Z     ???
2025-02-24T15:57:56.6682480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6682490Z 
2025-02-24T15:57:56.6682530Z >   ???
2025-02-24T15:57:56.6682630Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6682680Z E   
2025-02-24T15:57:56.6682780Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6682880Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6682930Z E          ...
2025-02-24T15:57:56.6683000Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6683100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6683190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6683240Z E          ...
2025-02-24T15:57:56.6683300Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6683400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6683480Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6683490Z 
2025-02-24T15:57:56.6683550Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6683720Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines] __
2025-02-24T15:57:56.6683720Z 
2025-02-24T15:57:56.6683820Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6683940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6684010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6684120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6684230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6684310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6684370Z err_msg = None
2025-02-24T15:57:56.6684370Z 
2025-02-24T15:57:56.6684450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6684510Z         if err_msg is None:
2025-02-24T15:57:56.6684580Z             if left.shape != right.shape:
2025-02-24T15:57:56.6684640Z                 raise_assert_detail(
2025-02-24T15:57:56.6684760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6684810Z                 )
2025-02-24T15:57:56.6684900Z     
2025-02-24T15:57:56.6684960Z             diff = 0
2025-02-24T15:57:56.6685050Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6685120Z                 # count up differences
2025-02-24T15:57:56.6685260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6685310Z                     diff += 1
2025-02-24T15:57:56.6685360Z     
2025-02-24T15:57:56.6685430Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6685540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6685670Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6685810Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6685850Z E           
2025-02-24T15:57:56.6685940Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6686160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6686370Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6686370Z 
2025-02-24T15:57:56.6686620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6686620Z 
2025-02-24T15:57:56.6686750Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6686760Z 
2025-02-24T15:57:56.6686930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb51a30>
2025-02-24T15:57:56.6687090Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f082ae0>, attr = 'lines'
2025-02-24T15:57:56.6687090Z 
2025-02-24T15:57:56.6687190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6687280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6687340Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6687390Z         try:
2025-02-24T15:57:56.6687500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6687560Z         except KeyError:
2025-02-24T15:57:56.6687660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6687710Z     
2025-02-24T15:57:56.6687780Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6687850Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6687910Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6688020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6688080Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6688150Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6688240Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6688280Z             else:
2025-02-24T15:57:56.6688350Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6688430Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6688440Z 
2025-02-24T15:57:56.6688530Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6688620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6688740Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6688790Z     ???
2025-02-24T15:57:56.6688880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6688880Z 
2025-02-24T15:57:56.6688930Z >   ???
2025-02-24T15:57:56.6689020Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6689110Z E   
2025-02-24T15:57:56.6689210Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6689310Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6689350Z E          ...
2025-02-24T15:57:56.6689430Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6689530Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6689610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6689660Z E          ...
2025-02-24T15:57:56.6689730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6689880Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6689960Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6689960Z 
2025-02-24T15:57:56.6690030Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6690430Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] _
2025-02-24T15:57:56.6690440Z 
2025-02-24T15:57:56.6690730Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb51af0>
2025-02-24T15:57:56.6690870Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f082ae0>
2025-02-24T15:57:56.6690950Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6690950Z 
2025-02-24T15:57:56.6697640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6697790Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6697850Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6697900Z         try:
2025-02-24T15:57:56.6698010Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6698120Z         except KeyError:
2025-02-24T15:57:56.6698230Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6698280Z     
2025-02-24T15:57:56.6698340Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6698420Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6698490Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6698590Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6698660Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6698730Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6698810Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6698820Z 
2025-02-24T15:57:56.6698910Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6699000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6699000Z 
2025-02-24T15:57:56.6699120Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6699180Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6699270Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6699330Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6699450Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6699510Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6699600Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6699650Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6699700Z err_msg = None
2025-02-24T15:57:56.6699710Z 
2025-02-24T15:57:56.6699790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6699850Z         if err_msg is None:
2025-02-24T15:57:56.6699920Z             if left.shape != right.shape:
2025-02-24T15:57:56.6699980Z                 raise_assert_detail(
2025-02-24T15:57:56.6700110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6700160Z                 )
2025-02-24T15:57:56.6700210Z     
2025-02-24T15:57:56.6700250Z             diff = 0
2025-02-24T15:57:56.6700350Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6700630Z                 # count up differences
2025-02-24T15:57:56.6700780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6700830Z                     diff += 1
2025-02-24T15:57:56.6700880Z     
2025-02-24T15:57:56.6700950Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6701050Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6701190Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6701270Z E           AssertionError: Series are different
2025-02-24T15:57:56.6701390Z E           
2025-02-24T15:57:56.6701460Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6701770Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6702050Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6702320Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6702330Z 
2025-02-24T15:57:56.6702600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6702810Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] _
2025-02-24T15:57:56.6702820Z 
2025-02-24T15:57:56.6702990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb51bb0>
2025-02-24T15:57:56.6703120Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f082ae0>
2025-02-24T15:57:56.6703180Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6703190Z 
2025-02-24T15:57:56.6703290Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6703380Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6703450Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6703490Z         try:
2025-02-24T15:57:56.6703600Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6703660Z         except KeyError:
2025-02-24T15:57:56.6703770Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6703810Z     
2025-02-24T15:57:56.6703880Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6703950Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6704010Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6704120Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6704180Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6704240Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6704330Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6704330Z 
2025-02-24T15:57:56.6704430Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6704520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6704520Z 
2025-02-24T15:57:56.6704630Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6704800Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6704890Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6704950Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6705060Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6705130Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6705210Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6705270Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6705320Z err_msg = None
2025-02-24T15:57:56.6705560Z 
2025-02-24T15:57:56.6705650Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6705730Z         if err_msg is None:
2025-02-24T15:57:56.6705800Z             if left.shape != right.shape:
2025-02-24T15:57:56.6705860Z                 raise_assert_detail(
2025-02-24T15:57:56.6705980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6706030Z                 )
2025-02-24T15:57:56.6706070Z     
2025-02-24T15:57:56.6706120Z             diff = 0
2025-02-24T15:57:56.6706210Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6706270Z                 # count up differences
2025-02-24T15:57:56.6706410Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6706470Z                     diff += 1
2025-02-24T15:57:56.6706510Z     
2025-02-24T15:57:56.6706580Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6706680Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6706820Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6706900Z E           AssertionError: Series are different
2025-02-24T15:57:56.6706950Z E           
2025-02-24T15:57:56.6707030Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6707330Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6707640Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6707960Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6707960Z 
2025-02-24T15:57:56.6708200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6708360Z ___ TestPlasma.test_plasma_properties[disable_electron_scattering:False-nu] ____
2025-02-24T15:57:56.6708360Z 
2025-02-24T15:57:56.6708470Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6708580Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6708650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6708800Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6708910Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6708990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6709030Z err_msg = None
2025-02-24T15:57:56.6709040Z 
2025-02-24T15:57:56.6709120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6709180Z         if err_msg is None:
2025-02-24T15:57:56.6709250Z             if left.shape != right.shape:
2025-02-24T15:57:56.6709310Z                 raise_assert_detail(
2025-02-24T15:57:56.6709420Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6709510Z                 )
2025-02-24T15:57:56.6709560Z     
2025-02-24T15:57:56.6709610Z             diff = 0
2025-02-24T15:57:56.6709690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6709760Z                 # count up differences
2025-02-24T15:57:56.6709900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6709960Z                     diff += 1
2025-02-24T15:57:56.6710010Z     
2025-02-24T15:57:56.6710070Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6710180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6710320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6710400Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6710450Z E           
2025-02-24T15:57:56.6710540Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6710760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6710980Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6710980Z 
2025-02-24T15:57:56.6711220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6711220Z 
2025-02-24T15:57:56.6711350Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6711360Z 
2025-02-24T15:57:56.6711530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb51df0>
2025-02-24T15:57:56.6711680Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f082ae0>, attr = 'nu'
2025-02-24T15:57:56.6711680Z 
2025-02-24T15:57:56.6711800Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6711880Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6711950Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6711990Z         try:
2025-02-24T15:57:56.6712100Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6712160Z         except KeyError:
2025-02-24T15:57:56.6712270Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6712320Z     
2025-02-24T15:57:56.6712380Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6712450Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6712510Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6712620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6712680Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6712750Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6712840Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6712840Z 
2025-02-24T15:57:56.6712980Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6713070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6713190Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6713240Z     ???
2025-02-24T15:57:56.6713330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6713330Z 
2025-02-24T15:57:56.6713380Z >   ???
2025-02-24T15:57:56.6713470Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6713520Z E   
2025-02-24T15:57:56.6713620Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6713750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6713800Z E          ...
2025-02-24T15:57:56.6713870Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6713970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6714060Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6714110Z E          ...
2025-02-24T15:57:56.6714180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6714270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6714350Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6714350Z 
2025-02-24T15:57:56.6714420Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6714600Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-wavelength_cm] _
2025-02-24T15:57:56.6714600Z 
2025-02-24T15:57:56.6714710Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6714820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6714900Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6715010Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6715110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6715190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6715240Z err_msg = None
2025-02-24T15:57:56.6715240Z 
2025-02-24T15:57:56.6715330Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6715390Z         if err_msg is None:
2025-02-24T15:57:56.6715460Z             if left.shape != right.shape:
2025-02-24T15:57:56.6715520Z                 raise_assert_detail(
2025-02-24T15:57:56.6715630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6715680Z                 )
2025-02-24T15:57:56.6715730Z     
2025-02-24T15:57:56.6715770Z             diff = 0
2025-02-24T15:57:56.6715860Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6715930Z                 # count up differences
2025-02-24T15:57:56.6716060Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6716120Z                     diff += 1
2025-02-24T15:57:56.6716160Z     
2025-02-24T15:57:56.6716230Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6716340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6716470Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6716560Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6716610Z E           
2025-02-24T15:57:56.6716690Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6717000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6717260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6717270Z 
2025-02-24T15:57:56.6717510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6717520Z 
2025-02-24T15:57:56.6717650Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6717690Z 
2025-02-24T15:57:56.6717860Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb51eb0>
2025-02-24T15:57:56.6717980Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f082ae0>
2025-02-24T15:57:56.6718040Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6718050Z 
2025-02-24T15:57:56.6718150Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6718240Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6718300Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6718350Z         try:
2025-02-24T15:57:56.6718460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6718520Z         except KeyError:
2025-02-24T15:57:56.6718630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6718670Z     
2025-02-24T15:57:56.6718740Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6718810Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6718870Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6718980Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6719040Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6719100Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6719190Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6719200Z 
2025-02-24T15:57:56.6719290Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6719390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6719500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6719550Z     ???
2025-02-24T15:57:56.6719640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6719640Z 
2025-02-24T15:57:56.6719690Z >   ???
2025-02-24T15:57:56.6719780Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6719830Z E   
2025-02-24T15:57:56.6719930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6720020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6720060Z E          ...
2025-02-24T15:57:56.6720130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6720240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6720330Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6720370Z E          ...
2025-02-24T15:57:56.6720440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6720540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6720610Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6720620Z 
2025-02-24T15:57:56.6720680Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6720840Z __ TestPlasma.test_plasma_properties[disable_electron_scattering:False-f_lu] ___
2025-02-24T15:57:56.6720850Z 
2025-02-24T15:57:56.6720950Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6721050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6721140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6721300Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6721480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6721560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6721610Z err_msg = None
2025-02-24T15:57:56.6721620Z 
2025-02-24T15:57:56.6721700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6721760Z         if err_msg is None:
2025-02-24T15:57:56.6721830Z             if left.shape != right.shape:
2025-02-24T15:57:56.6721890Z                 raise_assert_detail(
2025-02-24T15:57:56.6722010Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6722210Z                 )
2025-02-24T15:57:56.6722260Z     
2025-02-24T15:57:56.6722310Z             diff = 0
2025-02-24T15:57:56.6722400Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6722460Z                 # count up differences
2025-02-24T15:57:56.6722600Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6722660Z                     diff += 1
2025-02-24T15:57:56.6722700Z     
2025-02-24T15:57:56.6722770Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6722870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6723010Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6723090Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6723140Z E           
2025-02-24T15:57:56.6723230Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6723440Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6723660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6723660Z 
2025-02-24T15:57:56.6723900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6723900Z 
2025-02-24T15:57:56.6724030Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6724040Z 
2025-02-24T15:57:56.6724350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb51f70>
2025-02-24T15:57:56.6724510Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f082ae0>, attr = 'f_lu'
2025-02-24T15:57:56.6724510Z 
2025-02-24T15:57:56.6724620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6724710Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6724770Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6724820Z         try:
2025-02-24T15:57:56.6724930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6724980Z         except KeyError:
2025-02-24T15:57:56.6725090Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6725130Z     
2025-02-24T15:57:56.6725200Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6725270Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6725330Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6725440Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6725500Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6725570Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6725650Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6725720Z 
2025-02-24T15:57:56.6725830Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6725920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6726050Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6726100Z     ???
2025-02-24T15:57:56.6726190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6726190Z 
2025-02-24T15:57:56.6726240Z >   ???
2025-02-24T15:57:56.6726330Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6726380Z E   
2025-02-24T15:57:56.6726550Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6726640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6726690Z E          ...
2025-02-24T15:57:56.6726760Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6726850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6726950Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6726990Z E          ...
2025-02-24T15:57:56.6727060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6727160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6727240Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6727240Z 
2025-02-24T15:57:56.6727300Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6727480Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] _
2025-02-24T15:57:56.6727480Z 
2025-02-24T15:57:56.6727590Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6727710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6727790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6727900Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6728020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6728100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6728160Z err_msg = None
2025-02-24T15:57:56.6728160Z 
2025-02-24T15:57:56.6728240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6728300Z         if err_msg is None:
2025-02-24T15:57:56.6728370Z             if left.shape != right.shape:
2025-02-24T15:57:56.6728430Z                 raise_assert_detail(
2025-02-24T15:57:56.6728550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6728590Z                 )
2025-02-24T15:57:56.6728640Z     
2025-02-24T15:57:56.6728690Z             diff = 0
2025-02-24T15:57:56.6728770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6728840Z                 # count up differences
2025-02-24T15:57:56.6728980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6729030Z                     diff += 1
2025-02-24T15:57:56.6729080Z     
2025-02-24T15:57:56.6729140Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6729250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6729390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6729470Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6729520Z E           
2025-02-24T15:57:56.6729600Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6729890Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6730110Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6730110Z 
2025-02-24T15:57:56.6730350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6730350Z 
2025-02-24T15:57:56.6730490Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6730530Z 
2025-02-24T15:57:56.6730700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb526f0>
2025-02-24T15:57:56.6730830Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f082ae0>
2025-02-24T15:57:56.6730890Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.6730890Z 
2025-02-24T15:57:56.6731000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6731090Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6731140Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6731190Z         try:
2025-02-24T15:57:56.6731300Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6731360Z         except KeyError:
2025-02-24T15:57:56.6731460Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6731510Z     
2025-02-24T15:57:56.6731570Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6731640Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6731700Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6731810Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6731870Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6731960Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6732050Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6732100Z             else:
2025-02-24T15:57:56.6732170Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6732250Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6732250Z 
2025-02-24T15:57:56.6732350Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6732440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6732550Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6732600Z     ???
2025-02-24T15:57:56.6732690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6732690Z 
2025-02-24T15:57:56.6732740Z >   ???
2025-02-24T15:57:56.6732840Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6732890Z E   
2025-02-24T15:57:56.6732980Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6733070Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6733120Z E          ...
2025-02-24T15:57:56.6733190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6733280Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6733370Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6733420Z E          ...
2025-02-24T15:57:56.6733480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6733580Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6733660Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6733660Z 
2025-02-24T15:57:56.6733730Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6733910Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-beta_sobolev] _
2025-02-24T15:57:56.6733910Z 
2025-02-24T15:57:56.6734020Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6734190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6734270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6734380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6734480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6734560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6734610Z err_msg = None
2025-02-24T15:57:56.6734610Z 
2025-02-24T15:57:56.6734690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6734790Z         if err_msg is None:
2025-02-24T15:57:56.6734860Z             if left.shape != right.shape:
2025-02-24T15:57:56.6734920Z                 raise_assert_detail(
2025-02-24T15:57:56.6735040Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6735090Z                 )
2025-02-24T15:57:56.6735130Z     
2025-02-24T15:57:56.6735190Z             diff = 0
2025-02-24T15:57:56.6735270Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6735330Z                 # count up differences
2025-02-24T15:57:56.6735470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6735520Z                     diff += 1
2025-02-24T15:57:56.6735570Z     
2025-02-24T15:57:56.6735630Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6735740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6735880Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6735970Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6736040Z E           
2025-02-24T15:57:56.6736130Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6736340Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6736550Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6736560Z 
2025-02-24T15:57:56.6736800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6736800Z 
2025-02-24T15:57:56.6736930Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6736940Z 
2025-02-24T15:57:56.6737110Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb527b0>
2025-02-24T15:57:56.6737230Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f082ae0>
2025-02-24T15:57:56.6737290Z attr = 'beta_sobolev'
2025-02-24T15:57:56.6737290Z 
2025-02-24T15:57:56.6737390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6737480Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6737540Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6737590Z         try:
2025-02-24T15:57:56.6737700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6737760Z         except KeyError:
2025-02-24T15:57:56.6737870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6737920Z     
2025-02-24T15:57:56.6737980Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6738050Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6738120Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6738460Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6738540Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6738610Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6738700Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6738750Z             else:
2025-02-24T15:57:56.6738820Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6738910Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6738910Z 
2025-02-24T15:57:56.6739000Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6739100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6739290Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6739340Z     ???
2025-02-24T15:57:56.6739430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6739440Z 
2025-02-24T15:57:56.6739480Z >   ???
2025-02-24T15:57:56.6739580Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6739630Z E   
2025-02-24T15:57:56.6739730Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6739820Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6739870Z E          ...
2025-02-24T15:57:56.6739930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6740030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6740120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6740170Z E          ...
2025-02-24T15:57:56.6740230Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6740340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6740420Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6740420Z 
2025-02-24T15:57:56.6740480Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6740650Z _ TestPlasma.test_plasma_properties[disable_electron_scattering:False-j_blues] _
2025-02-24T15:57:56.6740650Z 
2025-02-24T15:57:56.6740750Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6740860Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6740940Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6741040Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6741150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6741220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6741280Z err_msg = None
2025-02-24T15:57:56.6741280Z 
2025-02-24T15:57:56.6741360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6741420Z         if err_msg is None:
2025-02-24T15:57:56.6741490Z             if left.shape != right.shape:
2025-02-24T15:57:56.6741550Z                 raise_assert_detail(
2025-02-24T15:57:56.6741660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6741720Z                 )
2025-02-24T15:57:56.6741760Z     
2025-02-24T15:57:56.6741810Z             diff = 0
2025-02-24T15:57:56.6741890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6741960Z                 # count up differences
2025-02-24T15:57:56.6742090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6742140Z                     diff += 1
2025-02-24T15:57:56.6742190Z     
2025-02-24T15:57:56.6742260Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6742440Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6742590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6742670Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6742780Z E           
2025-02-24T15:57:56.6742890Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6743110Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6743330Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6743390Z 
2025-02-24T15:57:56.6743640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6743640Z 
2025-02-24T15:57:56.6743790Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6743800Z 
2025-02-24T15:57:56.6743980Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb52930>
2025-02-24T15:57:56.6749060Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f082ae0>, attr = 'j_blues'
2025-02-24T15:57:56.6749080Z 
2025-02-24T15:57:56.6749190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6749280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6749340Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6749390Z         try:
2025-02-24T15:57:56.6749510Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6749570Z         except KeyError:
2025-02-24T15:57:56.6749680Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6750170Z     
2025-02-24T15:57:56.6750250Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6750350Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6750430Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6750570Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6750650Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6750730Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6750820Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6750870Z             else:
2025-02-24T15:57:56.6750940Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6751030Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6751030Z 
2025-02-24T15:57:56.6751130Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6751230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6751350Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6751400Z     ???
2025-02-24T15:57:56.6751500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6751500Z 
2025-02-24T15:57:56.6751540Z >   ???
2025-02-24T15:57:56.6751640Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6751690Z E   
2025-02-24T15:57:56.6751790Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6751870Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6751930Z E          ...
2025-02-24T15:57:56.6751990Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6752100Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6752190Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6752240Z E          ...
2025-02-24T15:57:56.6752310Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6752410Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6752700Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6752710Z 
2025-02-24T15:57:56.6752770Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6752990Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] _
2025-02-24T15:57:56.6753000Z 
2025-02-24T15:57:56.6753100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6753220Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6753300Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6753400Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6753570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6753650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6753700Z err_msg = None
2025-02-24T15:57:56.6753700Z 
2025-02-24T15:57:56.6753790Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6753850Z         if err_msg is None:
2025-02-24T15:57:56.6753920Z             if left.shape != right.shape:
2025-02-24T15:57:56.6753990Z                 raise_assert_detail(
2025-02-24T15:57:56.6754110Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6754160Z                 )
2025-02-24T15:57:56.6754200Z     
2025-02-24T15:57:56.6754250Z             diff = 0
2025-02-24T15:57:56.6754340Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6754400Z                 # count up differences
2025-02-24T15:57:56.6754540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6754600Z                     diff += 1
2025-02-24T15:57:56.6754640Z     
2025-02-24T15:57:56.6754710Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6754820Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6754960Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6755050Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6755090Z E           
2025-02-24T15:57:56.6755180Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6755400Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6755620Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6755620Z 
2025-02-24T15:57:56.6755870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6755870Z 
2025-02-24T15:57:56.6756010Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6756010Z 
2025-02-24T15:57:56.6756180Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb536b0>
2025-02-24T15:57:56.6756350Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>, attr = 'lines'
2025-02-24T15:57:56.6756350Z 
2025-02-24T15:57:56.6756450Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6756550Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6756610Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6756660Z         try:
2025-02-24T15:57:56.6756770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6756820Z         except KeyError:
2025-02-24T15:57:56.6756980Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6757030Z     
2025-02-24T15:57:56.6757090Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6757160Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6757230Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6757340Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6757400Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6757460Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6757550Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6757640Z             else:
2025-02-24T15:57:56.6757710Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6757800Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6757800Z 
2025-02-24T15:57:56.6757890Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6757990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6758100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6758150Z     ???
2025-02-24T15:57:56.6758240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6758240Z 
2025-02-24T15:57:56.6758290Z >   ???
2025-02-24T15:57:56.6758390Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6758430Z E   
2025-02-24T15:57:56.6758530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6758610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6758670Z E          ...
2025-02-24T15:57:56.6758730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6758840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6758920Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6758970Z E          ...
2025-02-24T15:57:56.6759040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6759140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6759220Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6759220Z 
2025-02-24T15:57:56.6759280Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6759530Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] _
2025-02-24T15:57:56.6759540Z 
2025-02-24T15:57:56.6759710Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb53770>
2025-02-24T15:57:56.6759830Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>
2025-02-24T15:57:56.6759900Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.6759900Z 
2025-02-24T15:57:56.6760020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6760110Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6760170Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6760220Z         try:
2025-02-24T15:57:56.6760330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6760390Z         except KeyError:
2025-02-24T15:57:56.6760500Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6760550Z     
2025-02-24T15:57:56.6760610Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6760670Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6760740Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6760840Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6760900Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6760980Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6761060Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6761070Z 
2025-02-24T15:57:56.6761160Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6762400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6762400Z 
2025-02-24T15:57:56.6762520Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6762580Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6762670Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6762730Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6762850Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.6762910Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.6763070Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6763130Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.6763180Z err_msg = None
2025-02-24T15:57:56.6763180Z 
2025-02-24T15:57:56.6763260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6763320Z         if err_msg is None:
2025-02-24T15:57:56.6763390Z             if left.shape != right.shape:
2025-02-24T15:57:56.6763450Z                 raise_assert_detail(
2025-02-24T15:57:56.6763570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6763620Z                 )
2025-02-24T15:57:56.6763670Z     
2025-02-24T15:57:56.6763720Z             diff = 0
2025-02-24T15:57:56.6763800Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6763870Z                 # count up differences
2025-02-24T15:57:56.6764000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6764060Z                     diff += 1
2025-02-24T15:57:56.6764110Z     
2025-02-24T15:57:56.6764170Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6764280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6764420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6764500Z E           AssertionError: Series are different
2025-02-24T15:57:56.6764550Z E           
2025-02-24T15:57:56.6764620Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.6764950Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6765260Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6765530Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6765540Z 
2025-02-24T15:57:56.6765780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6766020Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] _
2025-02-24T15:57:56.6766030Z 
2025-02-24T15:57:56.6766200Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb53830>
2025-02-24T15:57:56.6766330Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>
2025-02-24T15:57:56.6766470Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.6766470Z 
2025-02-24T15:57:56.6766590Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6766680Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6766740Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6766790Z         try:
2025-02-24T15:57:56.6766900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6766960Z         except KeyError:
2025-02-24T15:57:56.6767070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6767110Z     
2025-02-24T15:57:56.6767180Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6767300Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6767360Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6767470Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6767530Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6767600Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6767690Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6767690Z 
2025-02-24T15:57:56.6767790Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6767880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6767880Z 
2025-02-24T15:57:56.6768000Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6768060Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6768150Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6768210Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6768320Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.6768390Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.6768470Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.6768530Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.6768580Z err_msg = None
2025-02-24T15:57:56.6768590Z 
2025-02-24T15:57:56.6768670Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6768730Z         if err_msg is None:
2025-02-24T15:57:56.6768800Z             if left.shape != right.shape:
2025-02-24T15:57:56.6768860Z                 raise_assert_detail(
2025-02-24T15:57:56.6768970Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6769020Z                 )
2025-02-24T15:57:56.6769060Z     
2025-02-24T15:57:56.6769110Z             diff = 0
2025-02-24T15:57:56.6769200Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6769260Z                 # count up differences
2025-02-24T15:57:56.6769400Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6769450Z                     diff += 1
2025-02-24T15:57:56.6769490Z     
2025-02-24T15:57:56.6769560Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6769670Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6769800Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6769880Z E           AssertionError: Series are different
2025-02-24T15:57:56.6769930Z E           
2025-02-24T15:57:56.6770020Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.6770330Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6770710Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6771030Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.6771070Z 
2025-02-24T15:57:56.6771320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6771530Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] _
2025-02-24T15:57:56.6771530Z 
2025-02-24T15:57:56.6771640Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6771750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6771820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6771930Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6772030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6772110Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6772160Z err_msg = None
2025-02-24T15:57:56.6772160Z 
2025-02-24T15:57:56.6772240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6772300Z         if err_msg is None:
2025-02-24T15:57:56.6772370Z             if left.shape != right.shape:
2025-02-24T15:57:56.6772440Z                 raise_assert_detail(
2025-02-24T15:57:56.6772550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6772600Z                 )
2025-02-24T15:57:56.6772650Z     
2025-02-24T15:57:56.6772690Z             diff = 0
2025-02-24T15:57:56.6772780Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6772840Z                 # count up differences
2025-02-24T15:57:56.6772980Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6773030Z                     diff += 1
2025-02-24T15:57:56.6773080Z     
2025-02-24T15:57:56.6773150Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6773250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6773390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6773480Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6773530Z E           
2025-02-24T15:57:56.6773610Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6774080Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6774300Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6774310Z 
2025-02-24T15:57:56.6774600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6774600Z 
2025-02-24T15:57:56.6774740Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6774750Z 
2025-02-24T15:57:56.6774920Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb53a70>
2025-02-24T15:57:56.6775070Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>, attr = 'nu'
2025-02-24T15:57:56.6775080Z 
2025-02-24T15:57:56.6775190Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6775280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6775340Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6775420Z         try:
2025-02-24T15:57:56.6775540Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6775600Z         except KeyError:
2025-02-24T15:57:56.6775710Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6775750Z     
2025-02-24T15:57:56.6775820Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6775890Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6775960Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6776060Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6776120Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6776190Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6776280Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6776280Z 
2025-02-24T15:57:56.6776380Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6776470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6776590Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6776630Z     ???
2025-02-24T15:57:56.6776720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6776730Z 
2025-02-24T15:57:56.6776770Z >   ???
2025-02-24T15:57:56.6776870Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6776920Z E   
2025-02-24T15:57:56.6777020Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6777110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6777150Z E          ...
2025-02-24T15:57:56.6777220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6777320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6777400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6777450Z E          ...
2025-02-24T15:57:56.6777520Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6777620Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6777690Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6777700Z 
2025-02-24T15:57:56.6777760Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6777990Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] _
2025-02-24T15:57:56.6777990Z 
2025-02-24T15:57:56.6778100Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6778200Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6778280Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6778390Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6778490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6778570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6778620Z err_msg = None
2025-02-24T15:57:56.6778620Z 
2025-02-24T15:57:56.6778700Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6778760Z         if err_msg is None:
2025-02-24T15:57:56.6778900Z             if left.shape != right.shape:
2025-02-24T15:57:56.6778960Z                 raise_assert_detail(
2025-02-24T15:57:56.6779080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6779130Z                 )
2025-02-24T15:57:56.6779170Z     
2025-02-24T15:57:56.6779220Z             diff = 0
2025-02-24T15:57:56.6779300Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6779370Z                 # count up differences
2025-02-24T15:57:56.6779510Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6779560Z                     diff += 1
2025-02-24T15:57:56.6779850Z     
2025-02-24T15:57:56.6779920Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6780030Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6780160Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6780250Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6780300Z E           
2025-02-24T15:57:56.6780390Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6780600Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6780810Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6780820Z 
2025-02-24T15:57:56.6781060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6781070Z 
2025-02-24T15:57:56.6781200Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6781200Z 
2025-02-24T15:57:56.6781370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb53b30>
2025-02-24T15:57:56.6781500Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>
2025-02-24T15:57:56.6781550Z attr = 'wavelength_cm'
2025-02-24T15:57:56.6781550Z 
2025-02-24T15:57:56.6781660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6781750Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6781810Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6781860Z         try:
2025-02-24T15:57:56.6781970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6782030Z         except KeyError:
2025-02-24T15:57:56.6782150Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6782190Z     
2025-02-24T15:57:56.6782250Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6782330Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6782390Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6782500Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6782550Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6782620Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6782710Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6782710Z 
2025-02-24T15:57:56.6782810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6782910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6783020Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6783070Z     ???
2025-02-24T15:57:56.6783160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6783160Z 
2025-02-24T15:57:56.6783250Z >   ???
2025-02-24T15:57:56.6783350Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6783390Z E   
2025-02-24T15:57:56.6783490Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6783580Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6783630Z E          ...
2025-02-24T15:57:56.6783690Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6783790Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6783880Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6783970Z E          ...
2025-02-24T15:57:56.6784040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6784140Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6784210Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6784220Z 
2025-02-24T15:57:56.6784280Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6784490Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] _
2025-02-24T15:57:56.6784490Z 
2025-02-24T15:57:56.6784610Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6784710Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6784790Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6784900Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6785000Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6785080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6785130Z err_msg = None
2025-02-24T15:57:56.6785130Z 
2025-02-24T15:57:56.6785220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6785280Z         if err_msg is None:
2025-02-24T15:57:56.6785350Z             if left.shape != right.shape:
2025-02-24T15:57:56.6785410Z                 raise_assert_detail(
2025-02-24T15:57:56.6785530Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6785580Z                 )
2025-02-24T15:57:56.6785620Z     
2025-02-24T15:57:56.6785670Z             diff = 0
2025-02-24T15:57:56.6785750Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6785820Z                 # count up differences
2025-02-24T15:57:56.6785950Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6786010Z                     diff += 1
2025-02-24T15:57:56.6786050Z     
2025-02-24T15:57:56.6786120Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6786230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6786360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6786450Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6786500Z E           
2025-02-24T15:57:56.6786590Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6786790Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6787000Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6787010Z 
2025-02-24T15:57:56.6787290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6787290Z 
2025-02-24T15:57:56.6787430Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6787430Z 
2025-02-24T15:57:56.6787600Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb53bf0>
2025-02-24T15:57:56.6787760Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>, attr = 'f_lu'
2025-02-24T15:57:56.6787760Z 
2025-02-24T15:57:56.6787870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6787950Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6788060Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6788110Z         try:
2025-02-24T15:57:56.6788220Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6788280Z         except KeyError:
2025-02-24T15:57:56.6788390Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6788440Z     
2025-02-24T15:57:56.6788500Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6788570Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6788630Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6788740Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6788800Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6788870Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6788950Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6788960Z 
2025-02-24T15:57:56.6789050Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.6789150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6789260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6789300Z     ???
2025-02-24T15:57:56.6789390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6789400Z 
2025-02-24T15:57:56.6789440Z >   ???
2025-02-24T15:57:56.6789540Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6789590Z E   
2025-02-24T15:57:56.6789680Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6789770Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6789820Z E          ...
2025-02-24T15:57:56.6789880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6789990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6790140Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6790190Z E          ...
2025-02-24T15:57:56.6790260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6790360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6790580Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6790580Z 
2025-02-24T15:57:56.6790650Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6790910Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] _
2025-02-24T15:57:56.6790910Z 
2025-02-24T15:57:56.6791080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb80230>
2025-02-24T15:57:56.6791200Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>
2025-02-24T15:57:56.6791270Z attr = 'stimulated_emission_factor'
2025-02-24T15:57:56.6791270Z 
2025-02-24T15:57:56.6791380Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6791460Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6791530Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6791570Z         try:
2025-02-24T15:57:56.6791680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6791740Z         except KeyError:
2025-02-24T15:57:56.6791840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6791890Z     
2025-02-24T15:57:56.6792020Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6792090Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6792150Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6792260Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6792320Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6792390Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6792470Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6792520Z             else:
2025-02-24T15:57:56.6792590Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6792710Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6792720Z 
2025-02-24T15:57:56.6792810Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6792900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6793020Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6793070Z     ???
2025-02-24T15:57:56.6793160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6793160Z 
2025-02-24T15:57:56.6793210Z >   ???
2025-02-24T15:57:56.6793350Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.6793400Z E   
2025-02-24T15:57:56.6793530Z E   DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T15:57:56.6793830Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.6797350Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-02-24T15:57:56.6800980Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T15:57:56.6801220Z E   At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T15:57:56.6801230Z 
2025-02-24T15:57:56.6801290Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6801530Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] _
2025-02-24T15:57:56.6801540Z 
2025-02-24T15:57:56.6801640Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6801750Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6801830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6801940Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6802040Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6802120Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6802170Z err_msg = None
2025-02-24T15:57:56.6802170Z 
2025-02-24T15:57:56.6802260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6802320Z         if err_msg is None:
2025-02-24T15:57:56.6802450Z             if left.shape != right.shape:
2025-02-24T15:57:56.6802530Z                 raise_assert_detail(
2025-02-24T15:57:56.6802650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6802710Z                 )
2025-02-24T15:57:56.6802760Z     
2025-02-24T15:57:56.6802810Z             diff = 0
2025-02-24T15:57:56.6803000Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6803070Z                 # count up differences
2025-02-24T15:57:56.6811500Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6811620Z                     diff += 1
2025-02-24T15:57:56.6811670Z     
2025-02-24T15:57:56.6811750Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6811870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6812020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6812140Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6812190Z E           
2025-02-24T15:57:56.6812290Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6812770Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6813020Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6813030Z 
2025-02-24T15:57:56.6813390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6813390Z 
2025-02-24T15:57:56.6813530Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6813540Z 
2025-02-24T15:57:56.6813710Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb802f0>
2025-02-24T15:57:56.6813850Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>
2025-02-24T15:57:56.6813920Z attr = 'previous_beta_sobolev'
2025-02-24T15:57:56.6813920Z 
2025-02-24T15:57:56.6814030Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.6814120Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.6814190Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.6814250Z         try:
2025-02-24T15:57:56.6814380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.6814460Z         except KeyError:
2025-02-24T15:57:56.6814580Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.6814630Z     
2025-02-24T15:57:56.6814700Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.6814770Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.6814840Z             if attr == "selected_atoms":
2025-02-24T15:57:56.6814950Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.6815020Z             elif actual.ndim == 1:
2025-02-24T15:57:56.6815080Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.6815180Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.6815230Z             else:
2025-02-24T15:57:56.6815300Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.6815390Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.6815390Z 
2025-02-24T15:57:56.6815500Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.6815620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6815740Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.6815790Z     ???
2025-02-24T15:57:56.6815890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.6815890Z 
2025-02-24T15:57:56.6815940Z >   ???
2025-02-24T15:57:56.6816040Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.6816090Z E   
2025-02-24T15:57:56.6816190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.6816280Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6816330Z E          ...
2025-02-24T15:57:56.6816390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6816500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6816590Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.6816630Z E          ...
2025-02-24T15:57:56.6816700Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.6816810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.6816890Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.6816890Z 
2025-02-24T15:57:56.6816960Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.6817270Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] _
2025-02-24T15:57:56.6817280Z 
2025-02-24T15:57:56.6817390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6817500Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6817580Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6817720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.6817830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.6817990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.6818040Z err_msg = None
2025-02-24T15:57:56.6818040Z 
2025-02-24T15:57:56.6818130Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.6818190Z         if err_msg is None:
2025-02-24T15:57:56.6818270Z             if left.shape != right.shape:
2025-02-24T15:57:56.6818330Z                 raise_assert_detail(
2025-02-24T15:57:56.6818460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.6818510Z                 )
2025-02-24T15:57:56.6818560Z     
2025-02-24T15:57:56.6818610Z             diff = 0
2025-02-24T15:57:56.6818710Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.6818790Z                 # count up differences
2025-02-24T15:57:56.6818920Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.6818980Z                     diff += 1
2025-02-24T15:57:56.6819030Z     
2025-02-24T15:57:56.6819100Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.6819220Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.6819390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.6819480Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.6819530Z E           
2025-02-24T15:57:56.6819620Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.6819840Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6820060Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.6820060Z 
2025-02-24T15:57:56.6820310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.6820320Z 
2025-02-24T15:57:56.6820460Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.6820460Z 
2025-02-24T15:57:56.7007690Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb803b0>
2025-02-24T15:57:56.7007900Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>
2025-02-24T15:57:56.7007960Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.7007960Z 
2025-02-24T15:57:56.7008080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7008180Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7008240Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7008320Z         try:
2025-02-24T15:57:56.7008440Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7008490Z         except KeyError:
2025-02-24T15:57:56.7008610Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7008650Z     
2025-02-24T15:57:56.7008970Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7009040Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7009110Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7009230Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7009290Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7009360Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7009460Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7009510Z             else:
2025-02-24T15:57:56.7009580Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7009750Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7009750Z 
2025-02-24T15:57:56.7009870Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7009960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7010080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7010150Z     ???
2025-02-24T15:57:56.7010240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7010240Z 
2025-02-24T15:57:56.7010290Z >   ???
2025-02-24T15:57:56.7010390Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7010430Z E   
2025-02-24T15:57:56.7010530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7010630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7010680Z E          ...
2025-02-24T15:57:56.7010750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7010850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7010930Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7010990Z E          ...
2025-02-24T15:57:56.7011050Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7011170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7011260Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7011260Z 
2025-02-24T15:57:56.7011330Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7011590Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] _
2025-02-24T15:57:56.7011590Z 
2025-02-24T15:57:56.7011700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7011830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7011910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7012050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7012150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7012250Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7012310Z err_msg = None
2025-02-24T15:57:56.7012310Z 
2025-02-24T15:57:56.7012400Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7012470Z         if err_msg is None:
2025-02-24T15:57:56.7012540Z             if left.shape != right.shape:
2025-02-24T15:57:56.7012610Z                 raise_assert_detail(
2025-02-24T15:57:56.7012730Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7012790Z                 )
2025-02-24T15:57:56.7012840Z     
2025-02-24T15:57:56.7012890Z             diff = 0
2025-02-24T15:57:56.7012990Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7013060Z                 # count up differences
2025-02-24T15:57:56.7013200Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7013300Z                     diff += 1
2025-02-24T15:57:56.7013350Z     
2025-02-24T15:57:56.7013420Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7013880Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7014040Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7014130Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7014180Z E           
2025-02-24T15:57:56.7014270Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7014500Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7014950Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7014960Z 
2025-02-24T15:57:56.7015210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7015210Z 
2025-02-24T15:57:56.7015340Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7015350Z 
2025-02-24T15:57:56.7015540Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb80470>
2025-02-24T15:57:56.7015670Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>
2025-02-24T15:57:56.7015730Z attr = 'beta_sobolev'
2025-02-24T15:57:56.7015730Z 
2025-02-24T15:57:56.7015860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7015950Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7016020Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7016070Z         try:
2025-02-24T15:57:56.7016200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7016260Z         except KeyError:
2025-02-24T15:57:56.7016370Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7016430Z     
2025-02-24T15:57:56.7016500Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7016570Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7016650Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7016760Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7016820Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7016890Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7016980Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7017030Z             else:
2025-02-24T15:57:56.7017120Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7017210Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7017210Z 
2025-02-24T15:57:56.7017310Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7017400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7017520Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7017580Z     ???
2025-02-24T15:57:56.7017670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7017680Z 
2025-02-24T15:57:56.7017720Z >   ???
2025-02-24T15:57:56.7017840Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7017880Z E   
2025-02-24T15:57:56.7017980Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7018080Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7018130Z E          ...
2025-02-24T15:57:56.7018190Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7018300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7018480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7018540Z E          ...
2025-02-24T15:57:56.7018610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7018710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7018800Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7018800Z 
2025-02-24T15:57:56.7018870Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7019100Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] _
2025-02-24T15:57:56.7019110Z 
2025-02-24T15:57:56.7019210Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7019400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7019480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7019590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7019700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7019770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7019830Z err_msg = None
2025-02-24T15:57:56.7019830Z 
2025-02-24T15:57:56.7019910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7019990Z         if err_msg is None:
2025-02-24T15:57:56.7020060Z             if left.shape != right.shape:
2025-02-24T15:57:56.7020140Z                 raise_assert_detail(
2025-02-24T15:57:56.7020260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7020320Z                 )
2025-02-24T15:57:56.7020380Z     
2025-02-24T15:57:56.7020420Z             diff = 0
2025-02-24T15:57:56.7020510Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7020570Z                 # count up differences
2025-02-24T15:57:56.7020730Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7020790Z                     diff += 1
2025-02-24T15:57:56.7020840Z     
2025-02-24T15:57:56.7020910Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7021020Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7021150Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7021240Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7021290Z E           
2025-02-24T15:57:56.7021390Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7021610Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7021830Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7021830Z 
2025-02-24T15:57:56.7022080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7022080Z 
2025-02-24T15:57:56.7022220Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7022230Z 
2025-02-24T15:57:56.7022400Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb805f0>
2025-02-24T15:57:56.7022560Z plasma = <tardis.plasma.base.BasePlasma object at 0x300c1e4b0>, attr = 'j_blues'
2025-02-24T15:57:56.7022570Z 
2025-02-24T15:57:56.7022670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7022830Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7022900Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7022940Z         try:
2025-02-24T15:57:56.7023060Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7023110Z         except KeyError:
2025-02-24T15:57:56.7023220Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7023280Z     
2025-02-24T15:57:56.7023350Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7023420Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7023490Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7023680Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7023750Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7023810Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7023900Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7023950Z             else:
2025-02-24T15:57:56.7024020Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7024110Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7024110Z 
2025-02-24T15:57:56.7024200Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7024300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7024410Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7024460Z     ???
2025-02-24T15:57:56.7024550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7024550Z 
2025-02-24T15:57:56.7024600Z >   ???
2025-02-24T15:57:56.7024710Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7024750Z E   
2025-02-24T15:57:56.7024860Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7024940Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7024990Z E          ...
2025-02-24T15:57:56.7025060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7025160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7025240Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7025290Z E          ...
2025-02-24T15:57:56.7025360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7025460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7025530Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7025540Z 
2025-02-24T15:57:56.7025600Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7025800Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] _
2025-02-24T15:57:56.7025810Z 
2025-02-24T15:57:56.7025910Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7026020Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7026100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7026200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7026310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7026380Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7026440Z err_msg = None
2025-02-24T15:57:56.7026440Z 
2025-02-24T15:57:56.7026520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7026580Z         if err_msg is None:
2025-02-24T15:57:56.7026650Z             if left.shape != right.shape:
2025-02-24T15:57:56.7026710Z                 raise_assert_detail(
2025-02-24T15:57:56.7026830Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7026880Z                 )
2025-02-24T15:57:56.7026920Z     
2025-02-24T15:57:56.7027040Z             diff = 0
2025-02-24T15:57:56.7027130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7027200Z                 # count up differences
2025-02-24T15:57:56.7027330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7027390Z                     diff += 1
2025-02-24T15:57:56.7027430Z     
2025-02-24T15:57:56.7027500Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7027610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7027740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7027880Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7027930Z E           
2025-02-24T15:57:56.7028020Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7028240Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7028450Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7028450Z 
2025-02-24T15:57:56.7028690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7028700Z 
2025-02-24T15:57:56.7028830Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7028830Z 
2025-02-24T15:57:56.7029000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb81370>
2025-02-24T15:57:56.7029160Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>, attr = 'lines'
2025-02-24T15:57:56.7029170Z 
2025-02-24T15:57:56.7029270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7029360Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7029420Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7029470Z         try:
2025-02-24T15:57:56.7029580Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7029640Z         except KeyError:
2025-02-24T15:57:56.7029750Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7029790Z     
2025-02-24T15:57:56.7029860Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7029930Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7029990Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7030100Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7030160Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7030300Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7030390Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7030440Z             else:
2025-02-24T15:57:56.7030510Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7030600Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7030600Z 
2025-02-24T15:57:56.7030700Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7030790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7030900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7030950Z     ???
2025-02-24T15:57:56.7031040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7031050Z 
2025-02-24T15:57:56.7031090Z >   ???
2025-02-24T15:57:56.7031190Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7031240Z E   
2025-02-24T15:57:56.7031410Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7031500Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7031550Z E          ...
2025-02-24T15:57:56.7031620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7031720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7031810Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7031860Z E          ...
2025-02-24T15:57:56.7031930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7032030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7032300Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7032310Z 
2025-02-24T15:57:56.7032460Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7032700Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] _
2025-02-24T15:57:56.7032710Z 
2025-02-24T15:57:56.7032880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb81430>
2025-02-24T15:57:56.7033000Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>
2025-02-24T15:57:56.7033060Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.7033070Z 
2025-02-24T15:57:56.7033180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7033270Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7033330Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7033380Z         try:
2025-02-24T15:57:56.7033490Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7033550Z         except KeyError:
2025-02-24T15:57:56.7033660Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7033710Z     
2025-02-24T15:57:56.7033770Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7033840Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7033910Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7034020Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7034080Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7034150Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7034240Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7034240Z 
2025-02-24T15:57:56.7034350Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7034440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7034440Z 
2025-02-24T15:57:56.7034550Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7034620Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7034710Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7034770Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7034890Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7035000Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7035090Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7035160Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7035210Z err_msg = None
2025-02-24T15:57:56.7035210Z 
2025-02-24T15:57:56.7035290Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7035340Z         if err_msg is None:
2025-02-24T15:57:56.7035410Z             if left.shape != right.shape:
2025-02-24T15:57:56.7035470Z                 raise_assert_detail(
2025-02-24T15:57:56.7035590Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7035640Z                 )
2025-02-24T15:57:56.7035680Z     
2025-02-24T15:57:56.7035730Z             diff = 0
2025-02-24T15:57:56.7035820Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7035950Z                 # count up differences
2025-02-24T15:57:56.7036090Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7036150Z                     diff += 1
2025-02-24T15:57:56.7036190Z     
2025-02-24T15:57:56.7036260Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7036370Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7036500Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7036590Z E           AssertionError: Series are different
2025-02-24T15:57:56.7036630Z E           
2025-02-24T15:57:56.7036760Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.7037070Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7037350Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7037620Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7037630Z 
2025-02-24T15:57:56.7037870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7038100Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] _
2025-02-24T15:57:56.7038110Z 
2025-02-24T15:57:56.7038300Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb814f0>
2025-02-24T15:57:56.7038440Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>
2025-02-24T15:57:56.7038510Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.7038510Z 
2025-02-24T15:57:56.7038640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7054160Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7054410Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7054500Z         try:
2025-02-24T15:57:56.7054630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7054690Z         except KeyError:
2025-02-24T15:57:56.7054830Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7054870Z     
2025-02-24T15:57:56.7054930Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7055010Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7055070Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7055180Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7055250Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7055310Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7055400Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7055410Z 
2025-02-24T15:57:56.7055510Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7055610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7055610Z 
2025-02-24T15:57:56.7055720Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7056010Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7056110Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7056170Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7056280Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7056340Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7056430Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7056490Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7056540Z err_msg = None
2025-02-24T15:57:56.7056620Z 
2025-02-24T15:57:56.7056710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7056770Z         if err_msg is None:
2025-02-24T15:57:56.7056840Z             if left.shape != right.shape:
2025-02-24T15:57:56.7056900Z                 raise_assert_detail(
2025-02-24T15:57:56.7057020Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7057070Z                 )
2025-02-24T15:57:56.7057110Z     
2025-02-24T15:57:56.7057160Z             diff = 0
2025-02-24T15:57:56.7057250Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7057310Z                 # count up differences
2025-02-24T15:57:56.7057450Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7057500Z                     diff += 1
2025-02-24T15:57:56.7057540Z     
2025-02-24T15:57:56.7057610Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7057740Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7057920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7058020Z E           AssertionError: Series are different
2025-02-24T15:57:56.7058070Z E           
2025-02-24T15:57:56.7058170Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.7058540Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7058870Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7059200Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7059210Z 
2025-02-24T15:57:56.7059480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7059700Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] _
2025-02-24T15:57:56.7059720Z 
2025-02-24T15:57:56.7059830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7059970Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7060070Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7060260Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7060380Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7060460Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7060510Z err_msg = None
2025-02-24T15:57:56.7060510Z 
2025-02-24T15:57:56.7060590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7060660Z         if err_msg is None:
2025-02-24T15:57:56.7060750Z             if left.shape != right.shape:
2025-02-24T15:57:56.7060820Z                 raise_assert_detail(
2025-02-24T15:57:56.7060950Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7061120Z                 )
2025-02-24T15:57:56.7061180Z     
2025-02-24T15:57:56.7061240Z             diff = 0
2025-02-24T15:57:56.7061330Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7061400Z                 # count up differences
2025-02-24T15:57:56.7061550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7061610Z                     diff += 1
2025-02-24T15:57:56.7061670Z     
2025-02-24T15:57:56.7061740Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7061870Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7062020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7062130Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7062180Z E           
2025-02-24T15:57:56.7062290Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7062530Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7062760Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7062770Z 
2025-02-24T15:57:56.7063030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7063030Z 
2025-02-24T15:57:56.7063170Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7063170Z 
2025-02-24T15:57:56.7063390Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb81730>
2025-02-24T15:57:56.7063560Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>, attr = 'nu'
2025-02-24T15:57:56.7063570Z 
2025-02-24T15:57:56.7063690Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7063800Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7063880Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7063930Z         try:
2025-02-24T15:57:56.7064050Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7064120Z         except KeyError:
2025-02-24T15:57:56.7064250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7064300Z     
2025-02-24T15:57:56.7064360Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7064440Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7064510Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7064620Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7064700Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7064770Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7064870Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7064870Z 
2025-02-24T15:57:56.7065110Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7065240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7065370Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7065420Z     ???
2025-02-24T15:57:56.7065530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7065540Z 
2025-02-24T15:57:56.7065580Z >   ???
2025-02-24T15:57:56.7065700Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7065740Z E   
2025-02-24T15:57:56.7065840Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7066240Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7066300Z E          ...
2025-02-24T15:57:56.7066390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7066500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7066610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7066680Z E          ...
2025-02-24T15:57:56.7066750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7066850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7066940Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7066950Z 
2025-02-24T15:57:56.7067010Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7067240Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] _
2025-02-24T15:57:56.7067250Z 
2025-02-24T15:57:56.7067360Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7067470Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7067540Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7067660Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7067790Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7067890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7067950Z err_msg = None
2025-02-24T15:57:56.7067960Z 
2025-02-24T15:57:56.7068060Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7068140Z         if err_msg is None:
2025-02-24T15:57:56.7068230Z             if left.shape != right.shape:
2025-02-24T15:57:56.7068310Z                 raise_assert_detail(
2025-02-24T15:57:56.7068430Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7068500Z                 )
2025-02-24T15:57:56.7068560Z     
2025-02-24T15:57:56.7068630Z             diff = 0
2025-02-24T15:57:56.7068740Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7068820Z                 # count up differences
2025-02-24T15:57:56.7068990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7069070Z                     diff += 1
2025-02-24T15:57:56.7069130Z     
2025-02-24T15:57:56.7069200Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7069330Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7069470Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7069570Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7069620Z E           
2025-02-24T15:57:56.7069730Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7070080Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7070310Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7070310Z 
2025-02-24T15:57:56.7070560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7070560Z 
2025-02-24T15:57:56.7070730Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7070820Z 
2025-02-24T15:57:56.7071030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb817f0>
2025-02-24T15:57:56.7071160Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>
2025-02-24T15:57:56.7071210Z attr = 'wavelength_cm'
2025-02-24T15:57:56.7071220Z 
2025-02-24T15:57:56.7071360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7071470Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7071540Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7071600Z         try:
2025-02-24T15:57:56.7071740Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7071810Z         except KeyError:
2025-02-24T15:57:56.7071940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7071990Z     
2025-02-24T15:57:56.7072050Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7072130Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7072190Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7072320Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7072400Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7072500Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7072620Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7072620Z 
2025-02-24T15:57:56.7072720Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7072820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7072950Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7073010Z     ???
2025-02-24T15:57:56.7073110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7073120Z 
2025-02-24T15:57:56.7073180Z >   ???
2025-02-24T15:57:56.7073290Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7073360Z E   
2025-02-24T15:57:56.7073460Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7073570Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7073630Z E          ...
2025-02-24T15:57:56.7073710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7073850Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7073940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7074000Z E          ...
2025-02-24T15:57:56.7074080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7074220Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7074300Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7074310Z 
2025-02-24T15:57:56.7074390Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7074620Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] _
2025-02-24T15:57:56.7074630Z 
2025-02-24T15:57:56.7074740Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7074880Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7074960Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7075200Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7075320Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7075400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7075450Z err_msg = None
2025-02-24T15:57:56.7075450Z 
2025-02-24T15:57:56.7075540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7075600Z         if err_msg is None:
2025-02-24T15:57:56.7075670Z             if left.shape != right.shape:
2025-02-24T15:57:56.7075740Z                 raise_assert_detail(
2025-02-24T15:57:56.7075980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7076040Z                 )
2025-02-24T15:57:56.7076090Z     
2025-02-24T15:57:56.7076160Z             diff = 0
2025-02-24T15:57:56.7076280Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7076370Z                 # count up differences
2025-02-24T15:57:56.7076540Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7076620Z                     diff += 1
2025-02-24T15:57:56.7076670Z     
2025-02-24T15:57:56.7076780Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7076910Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7077080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7077200Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7077270Z E           
2025-02-24T15:57:56.7077370Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7077600Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7077860Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7077870Z 
2025-02-24T15:57:56.7078120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7078130Z 
2025-02-24T15:57:56.7078260Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7078270Z 
2025-02-24T15:57:56.7078460Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb818b0>
2025-02-24T15:57:56.7078660Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>, attr = 'f_lu'
2025-02-24T15:57:56.7078680Z 
2025-02-24T15:57:56.7078810Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7078900Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7078980Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7079040Z         try:
2025-02-24T15:57:56.7079180Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7079240Z         except KeyError:
2025-02-24T15:57:56.7079370Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7079440Z     
2025-02-24T15:57:56.7079520Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7079620Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7079710Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7079840Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7079920Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7079990Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7080180Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7080190Z 
2025-02-24T15:57:56.7080290Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7080400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7080540Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7080590Z     ???
2025-02-24T15:57:56.7080700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7080720Z 
2025-02-24T15:57:56.7080780Z >   ???
2025-02-24T15:57:56.7080900Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7081060Z E   
2025-02-24T15:57:56.7081190Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7081290Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7081350Z E          ...
2025-02-24T15:57:56.7081420Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7081550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7081650Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7081710Z E          ...
2025-02-24T15:57:56.7081780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7081890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7081980Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7081980Z 
2025-02-24T15:57:56.7082060Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7082330Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] _
2025-02-24T15:57:56.7082340Z 
2025-02-24T15:57:56.7082530Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb81eb0>
2025-02-24T15:57:56.7082660Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>
2025-02-24T15:57:56.7082730Z attr = 'stimulated_emission_factor'
2025-02-24T15:57:56.7082740Z 
2025-02-24T15:57:56.7082860Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7082960Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7083020Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7083070Z         try:
2025-02-24T15:57:56.7083200Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7083260Z         except KeyError:
2025-02-24T15:57:56.7083400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7083460Z     
2025-02-24T15:57:56.7083530Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7083600Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7083680Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7083800Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7083870Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7083960Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7084070Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7084120Z             else:
2025-02-24T15:57:56.7084210Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7084290Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7084300Z 
2025-02-24T15:57:56.7084410Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7084500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7084640Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7084690Z     ???
2025-02-24T15:57:56.7084800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7084810Z 
2025-02-24T15:57:56.7084860Z >   ???
2025-02-24T15:57:56.7085030Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.7085080Z E   
2025-02-24T15:57:56.7085220Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:57:56.7085700Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7089950Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T15:57:56.7094240Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:57:56.7094420Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:57:56.7094420Z 
2025-02-24T15:57:56.7094500Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7094750Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] _
2025-02-24T15:57:56.7094760Z 
2025-02-24T15:57:56.7094890Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7095100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7095190Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7095320Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7095440Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7095530Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7095580Z err_msg = None
2025-02-24T15:57:56.7095580Z 
2025-02-24T15:57:56.7095660Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7095720Z         if err_msg is None:
2025-02-24T15:57:56.7095790Z             if left.shape != right.shape:
2025-02-24T15:57:56.7095870Z                 raise_assert_detail(
2025-02-24T15:57:56.7095980Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7096030Z                 )
2025-02-24T15:57:56.7096080Z     
2025-02-24T15:57:56.7096150Z             diff = 0
2025-02-24T15:57:56.7096250Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7096330Z                 # count up differences
2025-02-24T15:57:56.7096470Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7096530Z                     diff += 1
2025-02-24T15:57:56.7096590Z     
2025-02-24T15:57:56.7096660Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7096790Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7096940Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7097050Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7097110Z E           
2025-02-24T15:57:56.7097190Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7097400Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7097650Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7097650Z 
2025-02-24T15:57:56.7097920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7097920Z 
2025-02-24T15:57:56.7098060Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7098060Z 
2025-02-24T15:57:56.7098250Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb81f70>
2025-02-24T15:57:56.7098390Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>
2025-02-24T15:57:56.7098450Z attr = 'previous_beta_sobolev'
2025-02-24T15:57:56.7098450Z 
2025-02-24T15:57:56.7098560Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7098740Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7098800Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7098860Z         try:
2025-02-24T15:57:56.7098980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7099030Z         except KeyError:
2025-02-24T15:57:56.7099160Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7099210Z     
2025-02-24T15:57:56.7099290Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7099380Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7099470Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7099600Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7099770Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7099850Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7099950Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7100010Z             else:
2025-02-24T15:57:56.7100100Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7100210Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7100220Z 
2025-02-24T15:57:56.7100310Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7100400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7100530Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7100580Z     ???
2025-02-24T15:57:56.7100670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7100680Z 
2025-02-24T15:57:56.7100730Z >   ???
2025-02-24T15:57:56.7100860Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7100910Z E   
2025-02-24T15:57:56.7101010Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7101100Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7101140Z E          ...
2025-02-24T15:57:56.7101220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7101360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7101460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7101520Z E          ...
2025-02-24T15:57:56.7101590Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7101720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7101820Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7101830Z 
2025-02-24T15:57:56.7101910Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7102150Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] _
2025-02-24T15:57:56.7102160Z 
2025-02-24T15:57:56.7102290Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7102400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7102510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7102620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7102740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7102830Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7102890Z err_msg = None
2025-02-24T15:57:56.7102890Z 
2025-02-24T15:57:56.7102970Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7103050Z         if err_msg is None:
2025-02-24T15:57:56.7103120Z             if left.shape != right.shape:
2025-02-24T15:57:56.7103180Z                 raise_assert_detail(
2025-02-24T15:57:56.7103320Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7103380Z                 )
2025-02-24T15:57:56.7103440Z     
2025-02-24T15:57:56.7103500Z             diff = 0
2025-02-24T15:57:56.7103690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7103780Z                 # count up differences
2025-02-24T15:57:56.7103940Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7104000Z                     diff += 1
2025-02-24T15:57:56.7104050Z     
2025-02-24T15:57:56.7104110Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7104250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7104400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7104590Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7104640Z E           
2025-02-24T15:57:56.7104740Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7104990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7105260Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7105270Z 
2025-02-24T15:57:56.7105550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7105560Z 
2025-02-24T15:57:56.7105720Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7105730Z 
2025-02-24T15:57:56.7105930Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb82030>
2025-02-24T15:57:56.7106080Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>
2025-02-24T15:57:56.7106160Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.7106160Z 
2025-02-24T15:57:56.7106300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7106400Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7106480Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7106550Z         try:
2025-02-24T15:57:56.7106680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7106770Z         except KeyError:
2025-02-24T15:57:56.7106900Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7106950Z     
2025-02-24T15:57:56.7107030Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7107100Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7107160Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7107270Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7107340Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7107400Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7107540Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7107610Z             else:
2025-02-24T15:57:56.7107690Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7107800Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7107800Z 
2025-02-24T15:57:56.7107910Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7108030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7108170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7108230Z     ???
2025-02-24T15:57:56.7108330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7108330Z 
2025-02-24T15:57:56.7108390Z >   ???
2025-02-24T15:57:56.7108490Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7108550Z E   
2025-02-24T15:57:56.7108990Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7109110Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7109160Z E          ...
2025-02-24T15:57:56.7109240Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7109360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7109480Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7109530Z E          ...
2025-02-24T15:57:56.7109620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7109720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7109950Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7109950Z 
2025-02-24T15:57:56.7110020Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7110240Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] _
2025-02-24T15:57:56.7110250Z 
2025-02-24T15:57:56.7110370Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7110480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7110570Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7110670Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7110810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7110910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7110970Z err_msg = None
2025-02-24T15:57:56.7110970Z 
2025-02-24T15:57:56.7111080Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7111160Z         if err_msg is None:
2025-02-24T15:57:56.7111250Z             if left.shape != right.shape:
2025-02-24T15:57:56.7111320Z                 raise_assert_detail(
2025-02-24T15:57:56.7111470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7111540Z                 )
2025-02-24T15:57:56.7111610Z     
2025-02-24T15:57:56.7111670Z             diff = 0
2025-02-24T15:57:56.7111780Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7111860Z                 # count up differences
2025-02-24T15:57:56.7112000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7112060Z                     diff += 1
2025-02-24T15:57:56.7112100Z     
2025-02-24T15:57:56.7112180Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7112300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7112440Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7112520Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7112580Z E           
2025-02-24T15:57:56.7112660Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7112920Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7113180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7113190Z 
2025-02-24T15:57:56.7113450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7113460Z 
2025-02-24T15:57:56.7113700Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7113710Z 
2025-02-24T15:57:56.7113900Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb820f0>
2025-02-24T15:57:56.7114050Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>
2025-02-24T15:57:56.7114120Z attr = 'beta_sobolev'
2025-02-24T15:57:56.7114130Z 
2025-02-24T15:57:56.7114230Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7114340Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7114400Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7114450Z         try:
2025-02-24T15:57:56.7114640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7114710Z         except KeyError:
2025-02-24T15:57:56.7114840Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7114890Z     
2025-02-24T15:57:56.7114970Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7115070Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7115160Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7115270Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7115340Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7115430Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7115520Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7115570Z             else:
2025-02-24T15:57:56.7115640Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7115740Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7115750Z 
2025-02-24T15:57:56.7115850Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7115940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7116070Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7116140Z     ???
2025-02-24T15:57:56.7116250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7116260Z 
2025-02-24T15:57:56.7123170Z >   ???
2025-02-24T15:57:56.7123360Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7123410Z E   
2025-02-24T15:57:56.7123530Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7123640Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7123710Z E          ...
2025-02-24T15:57:56.7123780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7123890Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7124020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7124080Z E          ...
2025-02-24T15:57:56.7124170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7124270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7124370Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7124380Z 
2025-02-24T15:57:56.7124450Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7124680Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] _
2025-02-24T15:57:56.7124680Z 
2025-02-24T15:57:56.7124800Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7124920Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7125010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7125140Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7125270Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7125350Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7125410Z err_msg = None
2025-02-24T15:57:56.7125410Z 
2025-02-24T15:57:56.7125810Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7125890Z         if err_msg is None:
2025-02-24T15:57:56.7125960Z             if left.shape != right.shape:
2025-02-24T15:57:56.7126040Z                 raise_assert_detail(
2025-02-24T15:57:56.7126190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7126250Z                 )
2025-02-24T15:57:56.7126290Z     
2025-02-24T15:57:56.7126340Z             diff = 0
2025-02-24T15:57:56.7126440Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7126530Z                 # count up differences
2025-02-24T15:57:56.7126780Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7126840Z                     diff += 1
2025-02-24T15:57:56.7126900Z     
2025-02-24T15:57:56.7126980Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7127100Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7127250Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7127360Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7127410Z E           
2025-02-24T15:57:56.7127520Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7127850Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7128100Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7128110Z 
2025-02-24T15:57:56.7128370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7128380Z 
2025-02-24T15:57:56.7128530Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7128540Z 
2025-02-24T15:57:56.7128720Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb82270>
2025-02-24T15:57:56.7128900Z plasma = <tardis.plasma.base.BasePlasma object at 0x17fa50080>, attr = 'j_blues'
2025-02-24T15:57:56.7128910Z 
2025-02-24T15:57:56.7129020Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7129110Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7129170Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7129230Z         try:
2025-02-24T15:57:56.7129360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7129440Z         except KeyError:
2025-02-24T15:57:56.7129580Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7129650Z     
2025-02-24T15:57:56.7129740Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7129830Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7129920Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7130050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7130130Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7130200Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7130320Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7130380Z             else:
2025-02-24T15:57:56.7130460Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7130570Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7130570Z 
2025-02-24T15:57:56.7130680Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7130870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7130990Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7131040Z     ???
2025-02-24T15:57:56.7131150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7131150Z 
2025-02-24T15:57:56.7131200Z >   ???
2025-02-24T15:57:56.7131290Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7131340Z E   
2025-02-24T15:57:56.7131430Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7131540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7131660Z E          ...
2025-02-24T15:57:56.7131730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7131840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7131940Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7132000Z E          ...
2025-02-24T15:57:56.7132060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7132160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7132260Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7132260Z 
2025-02-24T15:57:56.7132330Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7132510Z _____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines] ______
2025-02-24T15:57:56.7132510Z 
2025-02-24T15:57:56.7132640Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7132760Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7132840Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7132950Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7133080Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7133160Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7133210Z err_msg = None
2025-02-24T15:57:56.7133210Z 
2025-02-24T15:57:56.7133320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7133390Z         if err_msg is None:
2025-02-24T15:57:56.7133460Z             if left.shape != right.shape:
2025-02-24T15:57:56.7133540Z                 raise_assert_detail(
2025-02-24T15:57:56.7133660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7133700Z                 )
2025-02-24T15:57:56.7133750Z     
2025-02-24T15:57:56.7133810Z             diff = 0
2025-02-24T15:57:56.7133920Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7134000Z                 # count up differences
2025-02-24T15:57:56.7134140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7134210Z                     diff += 1
2025-02-24T15:57:56.7134290Z     
2025-02-24T15:57:56.7134380Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7134500Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7134650Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7134740Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7134780Z E           
2025-02-24T15:57:56.7134890Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7135120Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7135520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7135530Z 
2025-02-24T15:57:56.7135800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7135800Z 
2025-02-24T15:57:56.7135940Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7135940Z 
2025-02-24T15:57:56.7136130Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb82ff0>
2025-02-24T15:57:56.7136430Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>, attr = 'lines'
2025-02-24T15:57:56.7136430Z 
2025-02-24T15:57:56.7136540Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7136650Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7136720Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7136790Z         try:
2025-02-24T15:57:56.7136930Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7137000Z         except KeyError:
2025-02-24T15:57:56.7137130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7137190Z     
2025-02-24T15:57:56.7137270Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7137370Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7137470Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7137580Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7137670Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7137750Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7137860Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7137930Z             else:
2025-02-24T15:57:56.7138000Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7138090Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7138090Z 
2025-02-24T15:57:56.7138190Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7138290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7138440Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7138510Z     ???
2025-02-24T15:57:56.7138620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7138630Z 
2025-02-24T15:57:56.7138680Z >   ???
2025-02-24T15:57:56.7138780Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7138840Z E   
2025-02-24T15:57:56.7138950Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7139050Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7139110Z E          ...
2025-02-24T15:57:56.7139200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7139330Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7139420Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7139470Z E          ...
2025-02-24T15:57:56.7139540Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7139670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7139750Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7139750Z 
2025-02-24T15:57:56.7139820Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7140010Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] _
2025-02-24T15:57:56.7140020Z 
2025-02-24T15:57:56.7140210Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb830b0>
2025-02-24T15:57:56.7140360Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>
2025-02-24T15:57:56.7140430Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.7140430Z 
2025-02-24T15:57:56.7140640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7140740Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7140800Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7140860Z         try:
2025-02-24T15:57:56.7140980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7141060Z         except KeyError:
2025-02-24T15:57:56.7141190Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7141250Z     
2025-02-24T15:57:56.7141350Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7141440Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7141530Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7141760Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7141840Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7141920Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7142000Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7142000Z 
2025-02-24T15:57:56.7142130Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7142240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7142240Z 
2025-02-24T15:57:56.7142360Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7142440Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7142550Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7142610Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7142730Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7142790Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7142900Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7142970Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7143020Z err_msg = None
2025-02-24T15:57:56.7143020Z 
2025-02-24T15:57:56.7143100Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7143170Z         if err_msg is None:
2025-02-24T15:57:56.7143270Z             if left.shape != right.shape:
2025-02-24T15:57:56.7143330Z                 raise_assert_detail(
2025-02-24T15:57:56.7143470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7143550Z                 )
2025-02-24T15:57:56.7143620Z     
2025-02-24T15:57:56.7143690Z             diff = 0
2025-02-24T15:57:56.7143810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7143910Z                 # count up differences
2025-02-24T15:57:56.7144070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7144150Z                     diff += 1
2025-02-24T15:57:56.7144190Z     
2025-02-24T15:57:56.7144260Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7144390Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7144550Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7144640Z E           AssertionError: Series are different
2025-02-24T15:57:56.7144690Z E           
2025-02-24T15:57:56.7144770Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.7145100Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7145460Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7145800Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7145810Z 
2025-02-24T15:57:56.7146110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7146470Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] _
2025-02-24T15:57:56.7146480Z 
2025-02-24T15:57:56.7146680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb83170>
2025-02-24T15:57:56.7146820Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>
2025-02-24T15:57:56.7146890Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.7146900Z 
2025-02-24T15:57:56.7147000Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7147100Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7147160Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7147220Z         try:
2025-02-24T15:57:56.7147350Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7147420Z         except KeyError:
2025-02-24T15:57:56.7147530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7147580Z     
2025-02-24T15:57:56.7147640Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7147730Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7147820Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7147940Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7148020Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7148100Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7148220Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7148220Z 
2025-02-24T15:57:56.7148340Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7148440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7148440Z 
2025-02-24T15:57:56.7148550Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7148620Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7148710Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7148780Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7148890Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7148960Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7149050Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7149130Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7149210Z err_msg = None
2025-02-24T15:57:56.7149210Z 
2025-02-24T15:57:56.7149300Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7149380Z         if err_msg is None:
2025-02-24T15:57:56.7149450Z             if left.shape != right.shape:
2025-02-24T15:57:56.7149530Z                 raise_assert_detail(
2025-02-24T15:57:56.7149660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7149710Z                 )
2025-02-24T15:57:56.7149760Z     
2025-02-24T15:57:56.7149810Z             diff = 0
2025-02-24T15:57:56.7149920Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7149990Z                 # count up differences
2025-02-24T15:57:56.7150130Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7150310Z                     diff += 1
2025-02-24T15:57:56.7150370Z     
2025-02-24T15:57:56.7150460Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7150570Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7150730Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7150830Z E           AssertionError: Series are different
2025-02-24T15:57:56.7150880Z E           
2025-02-24T15:57:56.7150950Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.7151310Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7151730Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7152070Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7152080Z 
2025-02-24T15:57:56.7152360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7152540Z _______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-nu] _______
2025-02-24T15:57:56.7152560Z 
2025-02-24T15:57:56.7152690Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7152820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7152910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7153050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7153190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7153290Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7153360Z err_msg = None
2025-02-24T15:57:56.7153370Z 
2025-02-24T15:57:56.7153450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7153510Z         if err_msg is None:
2025-02-24T15:57:56.7153600Z             if left.shape != right.shape:
2025-02-24T15:57:56.7153670Z                 raise_assert_detail(
2025-02-24T15:57:56.7153800Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7153860Z                 )
2025-02-24T15:57:56.7153900Z     
2025-02-24T15:57:56.7153970Z             diff = 0
2025-02-24T15:57:56.7154050Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7154120Z                 # count up differences
2025-02-24T15:57:56.7154250Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7154310Z                     diff += 1
2025-02-24T15:57:56.7154360Z     
2025-02-24T15:57:56.7154430Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7154540Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7154780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7154890Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7154950Z E           
2025-02-24T15:57:56.7155040Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7155270Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7155520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7156010Z 
2025-02-24T15:57:56.7156310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7156310Z 
2025-02-24T15:57:56.7156450Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7156460Z 
2025-02-24T15:57:56.7156660Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb833b0>
2025-02-24T15:57:56.7156820Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>, attr = 'nu'
2025-02-24T15:57:56.7156830Z 
2025-02-24T15:57:56.7156950Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7157070Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7157140Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7157190Z         try:
2025-02-24T15:57:56.7157330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7157420Z         except KeyError:
2025-02-24T15:57:56.7157560Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7157620Z     
2025-02-24T15:57:56.7157700Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7157800Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7157880Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7157990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7158080Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7158150Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7158230Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7158240Z 
2025-02-24T15:57:56.7158360Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7158470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7158580Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7158630Z     ???
2025-02-24T15:57:56.7158720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7158730Z 
2025-02-24T15:57:56.7158780Z >   ???
2025-02-24T15:57:56.7158910Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7158980Z E   
2025-02-24T15:57:56.7159100Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7159200Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7159260Z E          ...
2025-02-24T15:57:56.7159340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7159460Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7159570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7159630Z E          ...
2025-02-24T15:57:56.7159710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7159820Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7159930Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7159940Z 
2025-02-24T15:57:56.7160080Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7160270Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] __
2025-02-24T15:57:56.7160280Z 
2025-02-24T15:57:56.7160390Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7160520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7160610Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7160720Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7160980Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7161060Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7161110Z err_msg = None
2025-02-24T15:57:56.7161110Z 
2025-02-24T15:57:56.7161590Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7161720Z         if err_msg is None:
2025-02-24T15:57:56.7161820Z             if left.shape != right.shape:
2025-02-24T15:57:56.7161940Z                 raise_assert_detail(
2025-02-24T15:57:56.7162310Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7162410Z                 )
2025-02-24T15:57:56.7162470Z     
2025-02-24T15:57:56.7162530Z             diff = 0
2025-02-24T15:57:56.7162660Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7162740Z                 # count up differences
2025-02-24T15:57:56.7162880Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7162950Z                     diff += 1
2025-02-24T15:57:56.7163000Z     
2025-02-24T15:57:56.7163080Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7163230Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7163400Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7163500Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7163550Z E           
2025-02-24T15:57:56.7163650Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7163910Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7164150Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7164160Z 
2025-02-24T15:57:56.7164450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7164460Z 
2025-02-24T15:57:56.7164620Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7164630Z 
2025-02-24T15:57:56.7164830Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb83470>
2025-02-24T15:57:56.7164980Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>
2025-02-24T15:57:56.7165050Z attr = 'wavelength_cm'
2025-02-24T15:57:56.7165050Z 
2025-02-24T15:57:56.7165160Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7165260Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7165340Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7165420Z         try:
2025-02-24T15:57:56.7165530Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7165590Z         except KeyError:
2025-02-24T15:57:56.7165980Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7166060Z     
2025-02-24T15:57:56.7166130Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7166210Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7166280Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7166390Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7166450Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7166520Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7166610Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7166610Z 
2025-02-24T15:57:56.7166810Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7166950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7167080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7167150Z     ???
2025-02-24T15:57:56.7167260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7167270Z 
2025-02-24T15:57:56.7167310Z >   ???
2025-02-24T15:57:56.7167440Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7167490Z E   
2025-02-24T15:57:56.7167610Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7167720Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7167790Z E          ...
2025-02-24T15:57:56.7167880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7168010Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7168120Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7168190Z E          ...
2025-02-24T15:57:56.7168270Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7168400Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7168490Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7168490Z 
2025-02-24T15:57:56.7168570Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7168730Z ______ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-f_lu] ______
2025-02-24T15:57:56.7168730Z 
2025-02-24T15:57:56.7168840Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7168960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7169050Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7169180Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7169290Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7169390Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7169440Z err_msg = None
2025-02-24T15:57:56.7169440Z 
2025-02-24T15:57:56.7169520Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7169590Z         if err_msg is None:
2025-02-24T15:57:56.7169660Z             if left.shape != right.shape:
2025-02-24T15:57:56.7169720Z                 raise_assert_detail(
2025-02-24T15:57:56.7169870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7169930Z                 )
2025-02-24T15:57:56.7169990Z     
2025-02-24T15:57:56.7170040Z             diff = 0
2025-02-24T15:57:56.7170130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7170200Z                 # count up differences
2025-02-24T15:57:56.7170360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7170420Z                     diff += 1
2025-02-24T15:57:56.7170490Z     
2025-02-24T15:57:56.7170550Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7170690Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7170920Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7171010Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7171060Z E           
2025-02-24T15:57:56.7171160Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7171390Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7171600Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7171690Z 
2025-02-24T15:57:56.7171980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7171980Z 
2025-02-24T15:57:56.7172120Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7172130Z 
2025-02-24T15:57:56.7172310Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb83530>
2025-02-24T15:57:56.7172510Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>, attr = 'f_lu'
2025-02-24T15:57:56.7172510Z 
2025-02-24T15:57:56.7172620Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7172730Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7172800Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7172850Z         try:
2025-02-24T15:57:56.7172980Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7173040Z         except KeyError:
2025-02-24T15:57:56.7173150Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7173210Z     
2025-02-24T15:57:56.7173280Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7173350Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7173440Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7173560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7173640Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7173710Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7173800Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7173800Z 
2025-02-24T15:57:56.7173900Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7173990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7174110Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7174170Z     ???
2025-02-24T15:57:56.7174280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7174280Z 
2025-02-24T15:57:56.7174340Z >   ???
2025-02-24T15:57:56.7174470Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7174530Z E   
2025-02-24T15:57:56.7174650Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7174750Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7174800Z E          ...
2025-02-24T15:57:56.7174880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7175000Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7175110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7175180Z E          ...
2025-02-24T15:57:56.7175260Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7175360Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7175460Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7175470Z 
2025-02-24T15:57:56.7175660Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7175880Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] _
2025-02-24T15:57:56.7175900Z 
2025-02-24T15:57:56.7176080Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb83b30>
2025-02-24T15:57:56.7176210Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>
2025-02-24T15:57:56.7176270Z attr = 'stimulated_emission_factor'
2025-02-24T15:57:56.7176270Z 
2025-02-24T15:57:56.7176390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7176490Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7176710Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7176760Z         try:
2025-02-24T15:57:56.7176900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7176970Z         except KeyError:
2025-02-24T15:57:56.7177070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7177150Z     
2025-02-24T15:57:56.7177220Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7177300Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7177390Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7177500Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7177560Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7177630Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7177730Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7177780Z             else:
2025-02-24T15:57:56.7177860Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7177940Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7177940Z 
2025-02-24T15:57:56.7178060Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7178180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7178300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7178350Z     ???
2025-02-24T15:57:56.7178450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7178450Z 
2025-02-24T15:57:56.7178500Z >   ???
2025-02-24T15:57:56.7178660Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.7184850Z E   
2025-02-24T15:57:56.7185060Z E   DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:57:56.7185410Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7190000Z E   [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T15:57:56.7196560Z E   [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:57:56.7196760Z E   At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:57:56.7196760Z 
2025-02-24T15:57:56.7196840Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7197060Z _ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] _
2025-02-24T15:57:56.7197060Z 
2025-02-24T15:57:56.7197180Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7197310Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7197400Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7197510Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7197630Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7197710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7197770Z err_msg = None
2025-02-24T15:57:56.7197770Z 
2025-02-24T15:57:56.7197860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7197940Z         if err_msg is None:
2025-02-24T15:57:56.7198010Z             if left.shape != right.shape:
2025-02-24T15:57:56.7198090Z                 raise_assert_detail(
2025-02-24T15:57:56.7198470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7198550Z                 )
2025-02-24T15:57:56.7198610Z     
2025-02-24T15:57:56.7198670Z             diff = 0
2025-02-24T15:57:56.7198760Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7198830Z                 # count up differences
2025-02-24T15:57:56.7198990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7199070Z                     diff += 1
2025-02-24T15:57:56.7199120Z     
2025-02-24T15:57:56.7199200Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7199460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7199600Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7199690Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7199750Z E           
2025-02-24T15:57:56.7199870Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7200100Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7200340Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7200350Z 
2025-02-24T15:57:56.7200640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7200640Z 
2025-02-24T15:57:56.7200800Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7200810Z 
2025-02-24T15:57:56.7201010Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb83bf0>
2025-02-24T15:57:56.7201780Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>
2025-02-24T15:57:56.7201860Z attr = 'previous_beta_sobolev'
2025-02-24T15:57:56.7201860Z 
2025-02-24T15:57:56.7201990Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7202090Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7202160Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7202210Z         try:
2025-02-24T15:57:56.7202330Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7202390Z         except KeyError:
2025-02-24T15:57:56.7202520Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7202580Z     
2025-02-24T15:57:56.7202660Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7202750Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7203190Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7203840Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7204060Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7204620Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7205190Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7205400Z             else:
2025-02-24T15:57:56.7206030Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7206620Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7206660Z 
2025-02-24T15:57:56.7207290Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7207850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7219500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7219800Z     ???
2025-02-24T15:57:56.7220890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7220910Z 
2025-02-24T15:57:56.7221100Z >   ???
2025-02-24T15:57:56.7221450Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7221620Z E   
2025-02-24T15:57:56.7221920Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7222220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7222420Z E          ...
2025-02-24T15:57:56.7222620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7222950Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7223490Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7223640Z E          ...
2025-02-24T15:57:56.7223830Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7224150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7224430Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7224460Z 
2025-02-24T15:57:56.7224700Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7225240Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] __
2025-02-24T15:57:56.7225250Z 
2025-02-24T15:57:56.7225570Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7225870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7226080Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7226400Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7226740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7226970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7227140Z err_msg = None
2025-02-24T15:57:56.7227170Z 
2025-02-24T15:57:56.7227450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7408550Z         if err_msg is None:
2025-02-24T15:57:56.7408700Z             if left.shape != right.shape:
2025-02-24T15:57:56.7408760Z                 raise_assert_detail(
2025-02-24T15:57:56.7408900Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7408950Z                 )
2025-02-24T15:57:56.7409000Z     
2025-02-24T15:57:56.7409050Z             diff = 0
2025-02-24T15:57:56.7409170Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7409230Z                 # count up differences
2025-02-24T15:57:56.7409480Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7409560Z                     diff += 1
2025-02-24T15:57:56.7409600Z     
2025-02-24T15:57:56.7409670Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7409780Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7409930Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7410020Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7410070Z E           
2025-02-24T15:57:56.7410160Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7410410Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7410620Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7411090Z 
2025-02-24T15:57:56.7411360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7411360Z 
2025-02-24T15:57:56.7411500Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7411510Z 
2025-02-24T15:57:56.7411680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb83cb0>
2025-02-24T15:57:56.7411810Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>
2025-02-24T15:57:56.7411870Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.7411880Z 
2025-02-24T15:57:56.7411980Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7412190Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7412250Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7412300Z         try:
2025-02-24T15:57:56.7412410Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7412470Z         except KeyError:
2025-02-24T15:57:56.7412580Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7412630Z     
2025-02-24T15:57:56.7412690Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7412760Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7412820Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7412930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7412990Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7413060Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7413150Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7413200Z             else:
2025-02-24T15:57:56.7413280Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7413360Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7413360Z 
2025-02-24T15:57:56.7413460Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7413550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7413670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7413720Z     ???
2025-02-24T15:57:56.7413810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7413810Z 
2025-02-24T15:57:56.7413860Z >   ???
2025-02-24T15:57:56.7413960Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7414010Z E   
2025-02-24T15:57:56.7414110Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7414190Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7414240Z E          ...
2025-02-24T15:57:56.7414320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7414520Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7414610Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7414660Z E          ...
2025-02-24T15:57:56.7414740Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7414840Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7414920Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7414920Z 
2025-02-24T15:57:56.7414990Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7415150Z __ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] __
2025-02-24T15:57:56.7415150Z 
2025-02-24T15:57:56.7415260Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7415360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7415450Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7415550Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7415740Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7415820Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7415870Z err_msg = None
2025-02-24T15:57:56.7415870Z 
2025-02-24T15:57:56.7415960Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7416020Z         if err_msg is None:
2025-02-24T15:57:56.7416090Z             if left.shape != right.shape:
2025-02-24T15:57:56.7416160Z                 raise_assert_detail(
2025-02-24T15:57:56.7416280Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7416330Z                 )
2025-02-24T15:57:56.7416370Z     
2025-02-24T15:57:56.7416470Z             diff = 0
2025-02-24T15:57:56.7416560Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7416630Z                 # count up differences
2025-02-24T15:57:56.7416800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7416890Z                     diff += 1
2025-02-24T15:57:56.7416960Z     
2025-02-24T15:57:56.7417050Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7417180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7417360Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7417480Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7417550Z E           
2025-02-24T15:57:56.7417670Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7417940Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7418190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7418190Z 
2025-02-24T15:57:56.7418450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7418460Z 
2025-02-24T15:57:56.7418620Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7418620Z 
2025-02-24T15:57:56.7418800Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb83d70>
2025-02-24T15:57:56.7418930Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>
2025-02-24T15:57:56.7418990Z attr = 'beta_sobolev'
2025-02-24T15:57:56.7418990Z 
2025-02-24T15:57:56.7419100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7419210Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7419280Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7419340Z         try:
2025-02-24T15:57:56.7419460Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7419510Z         except KeyError:
2025-02-24T15:57:56.7419630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7419670Z     
2025-02-24T15:57:56.7419740Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7419800Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7419880Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7419990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7420060Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7420130Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7420210Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7420260Z             else:
2025-02-24T15:57:56.7420330Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7420510Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7420510Z 
2025-02-24T15:57:56.7420610Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7420710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7420820Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7420870Z     ???
2025-02-24T15:57:56.7420960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7420960Z 
2025-02-24T15:57:56.7421010Z >   ???
2025-02-24T15:57:56.7421110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7421220Z E   
2025-02-24T15:57:56.7421340Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7421460Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7421530Z E          ...
2025-02-24T15:57:56.7421610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7421740Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7421830Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7421880Z E          ...
2025-02-24T15:57:56.7421950Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7422050Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7422130Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7422130Z 
2025-02-24T15:57:56.7422190Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7422350Z ____ TestPlasma.test_plasma_properties[nlte:{'species': ['He I']}-j_blues] _____
2025-02-24T15:57:56.7422360Z 
2025-02-24T15:57:56.7422460Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7422570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7422650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7422760Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7422900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7423010Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7423080Z err_msg = None
2025-02-24T15:57:56.7423090Z 
2025-02-24T15:57:56.7423190Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7423280Z         if err_msg is None:
2025-02-24T15:57:56.7423380Z             if left.shape != right.shape:
2025-02-24T15:57:56.7423450Z                 raise_assert_detail(
2025-02-24T15:57:56.7423570Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7423610Z                 )
2025-02-24T15:57:56.7423650Z     
2025-02-24T15:57:56.7423720Z             diff = 0
2025-02-24T15:57:56.7423810Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7423870Z                 # count up differences
2025-02-24T15:57:56.7424010Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7424060Z                     diff += 1
2025-02-24T15:57:56.7424110Z     
2025-02-24T15:57:56.7424190Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7424300Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7424460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7424560Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7424610Z E           
2025-02-24T15:57:56.7424690Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7424990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7425220Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7425230Z 
2025-02-24T15:57:56.7425470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7425480Z 
2025-02-24T15:57:56.7425670Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7425670Z 
2025-02-24T15:57:56.7425850Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fb83ef0>
2025-02-24T15:57:56.7426010Z plasma = <tardis.plasma.base.BasePlasma object at 0x17ea2c710>, attr = 'j_blues'
2025-02-24T15:57:56.7426010Z 
2025-02-24T15:57:56.7426130Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7426230Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7426300Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7426350Z         try:
2025-02-24T15:57:56.7426470Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7426530Z         except KeyError:
2025-02-24T15:57:56.7426630Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7426680Z     
2025-02-24T15:57:56.7426740Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7426830Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7426910Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7427010Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7427080Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7427140Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7427230Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7427280Z             else:
2025-02-24T15:57:56.7427360Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7427470Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7427470Z 
2025-02-24T15:57:56.7427580Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7427680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7427790Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7427840Z     ???
2025-02-24T15:57:56.7427930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7427930Z 
2025-02-24T15:57:56.7427980Z >   ???
2025-02-24T15:57:56.7428090Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7428140Z E   
2025-02-24T15:57:56.7428240Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7428330Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7428370Z E          ...
2025-02-24T15:57:56.7428450Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7428550Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7428640Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7428680Z E          ...
2025-02-24T15:57:56.7428770Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7428880Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7428960Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7428960Z 
2025-02-24T15:57:56.7429030Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7429230Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines] _______
2025-02-24T15:57:56.7429230Z 
2025-02-24T15:57:56.7429340Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7429560Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7429660Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7429790Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7429890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7429990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7430050Z err_msg = None
2025-02-24T15:57:56.7430060Z 
2025-02-24T15:57:56.7430140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7430300Z         if err_msg is None:
2025-02-24T15:57:56.7430370Z             if left.shape != right.shape:
2025-02-24T15:57:56.7430430Z                 raise_assert_detail(
2025-02-24T15:57:56.7430550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7430590Z                 )
2025-02-24T15:57:56.7430640Z     
2025-02-24T15:57:56.7430690Z             diff = 0
2025-02-24T15:57:56.7430770Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7430850Z                 # count up differences
2025-02-24T15:57:56.7430990Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7431050Z                     diff += 1
2025-02-24T15:57:56.7431090Z     
2025-02-24T15:57:56.7431160Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7431270Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7431410Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7431510Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7431550Z E           
2025-02-24T15:57:56.7431640Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7431860Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7432080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7432080Z 
2025-02-24T15:57:56.7432370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7432370Z 
2025-02-24T15:57:56.7432500Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7432510Z 
2025-02-24T15:57:56.7432680Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba4cb0>
2025-02-24T15:57:56.7432860Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f2a96d0>, attr = 'lines'
2025-02-24T15:57:56.7432860Z 
2025-02-24T15:57:56.7432980Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7433090Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7433150Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7433220Z         try:
2025-02-24T15:57:56.7433340Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7433390Z         except KeyError:
2025-02-24T15:57:56.7433500Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7433550Z     
2025-02-24T15:57:56.7433620Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7433720Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7433790Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7433990Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7434080Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7434160Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7434250Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7434310Z             else:
2025-02-24T15:57:56.7434390Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7434470Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7434470Z 
2025-02-24T15:57:56.7434580Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7434680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7434900Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7434960Z     ???
2025-02-24T15:57:56.7435050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7435050Z 
2025-02-24T15:57:56.7435100Z >   ???
2025-02-24T15:57:56.7435210Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7435270Z E   
2025-02-24T15:57:56.7435370Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7435480Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7435540Z E          ...
2025-02-24T15:57:56.7435610Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7435710Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7435820Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7435860Z E          ...
2025-02-24T15:57:56.7435940Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7436060Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7436130Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7436140Z 
2025-02-24T15:57:56.7436210Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7436390Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] _
2025-02-24T15:57:56.7436400Z 
2025-02-24T15:57:56.7436600Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba4d70>
2025-02-24T15:57:56.7436730Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f2a96d0>
2025-02-24T15:57:56.7436800Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.7436800Z 
2025-02-24T15:57:56.7436900Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7437020Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7437080Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7437130Z         try:
2025-02-24T15:57:56.7437250Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7437310Z         except KeyError:
2025-02-24T15:57:56.7437440Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7437500Z     
2025-02-24T15:57:56.7437580Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7437660Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7437720Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7437830Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7437900Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7437970Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7438060Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7438070Z 
2025-02-24T15:57:56.7438180Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7438270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7438280Z 
2025-02-24T15:57:56.7438400Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7438460Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7438550Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7438610Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7438840Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7438930Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7439020Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7439080Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7439130Z err_msg = None
2025-02-24T15:57:56.7439130Z 
2025-02-24T15:57:56.7439220Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7439300Z         if err_msg is None:
2025-02-24T15:57:56.7439370Z             if left.shape != right.shape:
2025-02-24T15:57:56.7439520Z                 raise_assert_detail(
2025-02-24T15:57:56.7439660Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7439720Z                 )
2025-02-24T15:57:56.7439770Z     
2025-02-24T15:57:56.7439820Z             diff = 0
2025-02-24T15:57:56.7439900Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7439970Z                 # count up differences
2025-02-24T15:57:56.7440120Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7440190Z                     diff += 1
2025-02-24T15:57:56.7440230Z     
2025-02-24T15:57:56.7440320Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7440460Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7440620Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7440700Z E           AssertionError: Series are different
2025-02-24T15:57:56.7440750Z E           
2025-02-24T15:57:56.7440830Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.7441150Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7441430Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7441730Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7441740Z 
2025-02-24T15:57:56.7441990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7442170Z _ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] _
2025-02-24T15:57:56.7442170Z 
2025-02-24T15:57:56.7442340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba4e30>
2025-02-24T15:57:56.7442470Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f2a96d0>
2025-02-24T15:57:56.7442540Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.7442540Z 
2025-02-24T15:57:56.7442640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7442740Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7442800Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7442850Z         try:
2025-02-24T15:57:56.7442950Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7443020Z         except KeyError:
2025-02-24T15:57:56.7443210Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7443270Z     
2025-02-24T15:57:56.7443340Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7443410Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7443470Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7443580Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7443640Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7443700Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7443790Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7443850Z 
2025-02-24T15:57:56.7443940Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7444040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7444040Z 
2025-02-24T15:57:56.7444160Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7444220Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7444310Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7444380Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7444480Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7444550Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7444630Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7444690Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7444740Z err_msg = None
2025-02-24T15:57:56.7444740Z 
2025-02-24T15:57:56.7444820Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7444880Z         if err_msg is None:
2025-02-24T15:57:56.7444950Z             if left.shape != right.shape:
2025-02-24T15:57:56.7445010Z                 raise_assert_detail(
2025-02-24T15:57:56.7445130Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7445180Z                 )
2025-02-24T15:57:56.7445230Z     
2025-02-24T15:57:56.7445280Z             diff = 0
2025-02-24T15:57:56.7445360Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7445430Z                 # count up differences
2025-02-24T15:57:56.7445560Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7445620Z                     diff += 1
2025-02-24T15:57:56.7445660Z     
2025-02-24T15:57:56.7445720Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7445830Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7445970Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7446050Z E           AssertionError: Series are different
2025-02-24T15:57:56.7446100Z E           
2025-02-24T15:57:56.7446180Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.7446480Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7447100Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7448610Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7448650Z 
2025-02-24T15:57:56.7449010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7449190Z ________ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-nu] _________
2025-02-24T15:57:56.7449190Z 
2025-02-24T15:57:56.7449300Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7449720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7449810Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7449920Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7450030Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7450100Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7450150Z err_msg = None
2025-02-24T15:57:56.7450160Z 
2025-02-24T15:57:56.7450240Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7450300Z         if err_msg is None:
2025-02-24T15:57:56.7450370Z             if left.shape != right.shape:
2025-02-24T15:57:56.7450430Z                 raise_assert_detail(
2025-02-24T15:57:56.7450560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7450610Z                 )
2025-02-24T15:57:56.7450660Z     
2025-02-24T15:57:56.7450700Z             diff = 0
2025-02-24T15:57:56.7450790Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7450860Z                 # count up differences
2025-02-24T15:57:56.7451000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7451060Z                     diff += 1
2025-02-24T15:57:56.7451110Z     
2025-02-24T15:57:56.7460110Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7460250Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7460390Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7460480Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7460520Z E           
2025-02-24T15:57:56.7460610Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7460840Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7461050Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7461060Z 
2025-02-24T15:57:56.7461310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7461310Z 
2025-02-24T15:57:56.7461440Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7461450Z 
2025-02-24T15:57:56.7461620Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba5070>
2025-02-24T15:57:56.7461770Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f2a96d0>, attr = 'nu'
2025-02-24T15:57:56.7461780Z 
2025-02-24T15:57:56.7462060Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7462160Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7462220Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7462260Z         try:
2025-02-24T15:57:56.7462380Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7462440Z         except KeyError:
2025-02-24T15:57:56.7462550Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7462590Z     
2025-02-24T15:57:56.7462660Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7462730Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7462790Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7462970Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7463040Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7463100Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7463190Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7463200Z 
2025-02-24T15:57:56.7463300Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7463390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7463500Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7463550Z     ???
2025-02-24T15:57:56.7463640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7463640Z 
2025-02-24T15:57:56.7463690Z >   ???
2025-02-24T15:57:56.7463790Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7463830Z E   
2025-02-24T15:57:56.7463930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7464020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7464070Z E          ...
2025-02-24T15:57:56.7464140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7464240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7464330Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7464380Z E          ...
2025-02-24T15:57:56.7464440Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7464540Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7464620Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7464620Z 
2025-02-24T15:57:56.7464680Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7464850Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] ___
2025-02-24T15:57:56.7464850Z 
2025-02-24T15:57:56.7464950Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7465060Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7465140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7465240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7465350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7465430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7465480Z err_msg = None
2025-02-24T15:57:56.7465480Z 
2025-02-24T15:57:56.7465560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7465620Z         if err_msg is None:
2025-02-24T15:57:56.7465690Z             if left.shape != right.shape:
2025-02-24T15:57:56.7465750Z                 raise_assert_detail(
2025-02-24T15:57:56.7465870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7465920Z                 )
2025-02-24T15:57:56.7465970Z     
2025-02-24T15:57:56.7466010Z             diff = 0
2025-02-24T15:57:56.7466100Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7466160Z                 # count up differences
2025-02-24T15:57:56.7466360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7466410Z                     diff += 1
2025-02-24T15:57:56.7466460Z     
2025-02-24T15:57:56.7466530Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7466640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7466770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7466860Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7466910Z E           
2025-02-24T15:57:56.7466990Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7467260Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7467470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7467480Z 
2025-02-24T15:57:56.7467730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7467730Z 
2025-02-24T15:57:56.7467860Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7467870Z 
2025-02-24T15:57:56.7468040Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba5130>
2025-02-24T15:57:56.7468170Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f2a96d0>
2025-02-24T15:57:56.7468220Z attr = 'wavelength_cm'
2025-02-24T15:57:56.7468220Z 
2025-02-24T15:57:56.7468330Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7468420Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7468480Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7468530Z         try:
2025-02-24T15:57:56.7468640Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7468690Z         except KeyError:
2025-02-24T15:57:56.7468800Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7468840Z     
2025-02-24T15:57:56.7468900Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7468970Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7469040Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7469150Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7469390Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7469560Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7469660Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7469670Z 
2025-02-24T15:57:56.7469770Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7469880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7470000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7470040Z     ???
2025-02-24T15:57:56.7470140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7470140Z 
2025-02-24T15:57:56.7470190Z >   ???
2025-02-24T15:57:56.7470290Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7470340Z E   
2025-02-24T15:57:56.7470450Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7470540Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7470590Z E          ...
2025-02-24T15:57:56.7470650Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7470990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7471090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7471140Z E          ...
2025-02-24T15:57:56.7471200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7471300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7471380Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7471380Z 
2025-02-24T15:57:56.7471450Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7471610Z _______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-f_lu] ________
2025-02-24T15:57:56.7471620Z 
2025-02-24T15:57:56.7471790Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7471900Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7471980Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7472230Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7472350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7472430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7472470Z err_msg = None
2025-02-24T15:57:56.7472480Z 
2025-02-24T15:57:56.7472570Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7472620Z         if err_msg is None:
2025-02-24T15:57:56.7472690Z             if left.shape != right.shape:
2025-02-24T15:57:56.7472760Z                 raise_assert_detail(
2025-02-24T15:57:56.7472870Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7472920Z                 )
2025-02-24T15:57:56.7472970Z     
2025-02-24T15:57:56.7473020Z             diff = 0
2025-02-24T15:57:56.7473100Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7473170Z                 # count up differences
2025-02-24T15:57:56.7473310Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7473360Z                     diff += 1
2025-02-24T15:57:56.7473410Z     
2025-02-24T15:57:56.7473470Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7473580Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7473720Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7473810Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7473850Z E           
2025-02-24T15:57:56.7473940Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7474160Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7474380Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7474390Z 
2025-02-24T15:57:56.7474640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7474640Z 
2025-02-24T15:57:56.7474780Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7474780Z 
2025-02-24T15:57:56.7474960Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba51f0>
2025-02-24T15:57:56.7475120Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f2a96d0>, attr = 'f_lu'
2025-02-24T15:57:56.7475120Z 
2025-02-24T15:57:56.7475390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7475490Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7475550Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7475600Z         try:
2025-02-24T15:57:56.7475710Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7475770Z         except KeyError:
2025-02-24T15:57:56.7475880Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7475920Z     
2025-02-24T15:57:56.7475980Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7476050Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7476120Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7476310Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7476380Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7476440Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7476530Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7476540Z 
2025-02-24T15:57:56.7476630Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7476730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7476840Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7476880Z     ???
2025-02-24T15:57:56.7476980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7476980Z 
2025-02-24T15:57:56.7477020Z >   ???
2025-02-24T15:57:56.7477120Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7477160Z E   
2025-02-24T15:57:56.7477270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7477360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7477400Z E          ...
2025-02-24T15:57:56.7477470Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7477570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7477660Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7477710Z E          ...
2025-02-24T15:57:56.7477780Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7477870Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7477950Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7477950Z 
2025-02-24T15:57:56.7478010Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7478180Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] ____
2025-02-24T15:57:56.7478180Z 
2025-02-24T15:57:56.7478280Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7478390Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7478470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7478580Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7478680Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7478750Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7478800Z err_msg = None
2025-02-24T15:57:56.7478810Z 
2025-02-24T15:57:56.7478890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7478950Z         if err_msg is None:
2025-02-24T15:57:56.7479010Z             if left.shape != right.shape:
2025-02-24T15:57:56.7479080Z                 raise_assert_detail(
2025-02-24T15:57:56.7479190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7479250Z                 )
2025-02-24T15:57:56.7479290Z     
2025-02-24T15:57:56.7479340Z             diff = 0
2025-02-24T15:57:56.7479420Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7479480Z                 # count up differences
2025-02-24T15:57:56.7479670Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7479730Z                     diff += 1
2025-02-24T15:57:56.7479770Z     
2025-02-24T15:57:56.7479840Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7479950Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7480080Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7480180Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7480220Z E           
2025-02-24T15:57:56.7480310Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7480570Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7480780Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7480790Z 
2025-02-24T15:57:56.7481030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7481040Z 
2025-02-24T15:57:56.7481170Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7481170Z 
2025-02-24T15:57:56.7481340Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba5970>
2025-02-24T15:57:56.7481470Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f2a96d0>
2025-02-24T15:57:56.7481520Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.7481520Z 
2025-02-24T15:57:56.7481630Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7481720Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7481780Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7481830Z         try:
2025-02-24T15:57:56.7481940Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7482000Z         except KeyError:
2025-02-24T15:57:56.7482110Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7482150Z     
2025-02-24T15:57:56.7482210Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7482280Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7482340Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7482450Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7482520Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7482580Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7482670Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7482720Z             else:
2025-02-24T15:57:56.7482790Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7482870Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7482870Z 
2025-02-24T15:57:56.7482970Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7483060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7483170Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7483210Z     ???
2025-02-24T15:57:56.7483300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7483310Z 
2025-02-24T15:57:56.7483350Z >   ???
2025-02-24T15:57:56.7483450Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7483490Z E   
2025-02-24T15:57:56.7483590Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7483680Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7483770Z E          ...
2025-02-24T15:57:56.7483840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7483940Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7484020Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7484070Z E          ...
2025-02-24T15:57:56.7484140Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7484240Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7484320Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7484320Z 
2025-02-24T15:57:56.7484430Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7484590Z ___ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] ____
2025-02-24T15:57:56.7484590Z 
2025-02-24T15:57:56.7484700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7484800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7484880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7484980Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7485090Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7485170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7485220Z err_msg = None
2025-02-24T15:57:56.7485220Z 
2025-02-24T15:57:56.7485300Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7485360Z         if err_msg is None:
2025-02-24T15:57:56.7485430Z             if left.shape != right.shape:
2025-02-24T15:57:56.7485490Z                 raise_assert_detail(
2025-02-24T15:57:56.7485610Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7485660Z                 )
2025-02-24T15:57:56.7485700Z     
2025-02-24T15:57:56.7485750Z             diff = 0
2025-02-24T15:57:56.7485840Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7485900Z                 # count up differences
2025-02-24T15:57:56.7486040Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7486090Z                     diff += 1
2025-02-24T15:57:56.7486130Z     
2025-02-24T15:57:56.7486200Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7486310Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7486450Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7486530Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7486580Z E           
2025-02-24T15:57:56.7486660Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7486880Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7487090Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7487090Z 
2025-02-24T15:57:56.7487330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7487330Z 
2025-02-24T15:57:56.7487470Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7487470Z 
2025-02-24T15:57:56.7487640Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba5a30>
2025-02-24T15:57:56.7487800Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f2a96d0>
2025-02-24T15:57:56.7487860Z attr = 'beta_sobolev'
2025-02-24T15:57:56.7487870Z 
2025-02-24T15:57:56.7487970Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7488060Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7488120Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7488170Z         try:
2025-02-24T15:57:56.7488370Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7488430Z         except KeyError:
2025-02-24T15:57:56.7488540Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7488630Z     
2025-02-24T15:57:56.7488700Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7488770Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7488830Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7488930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7489000Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7489070Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7489160Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7489200Z             else:
2025-02-24T15:57:56.7489270Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7489350Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7489360Z 
2025-02-24T15:57:56.7489450Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7489540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7489660Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7489710Z     ???
2025-02-24T15:57:56.7489790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7489800Z 
2025-02-24T15:57:56.7489840Z >   ???
2025-02-24T15:57:56.7489940Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7489990Z E   
2025-02-24T15:57:56.7490080Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7490170Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7490220Z E          ...
2025-02-24T15:57:56.7490280Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7490380Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7490460Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7490510Z E          ...
2025-02-24T15:57:56.7490580Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7490680Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7490750Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7490750Z 
2025-02-24T15:57:56.7490820Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7490980Z ______ TestPlasma.test_plasma_properties[initial_t_inner:10000 K-j_blues] ______
2025-02-24T15:57:56.7490990Z 
2025-02-24T15:57:56.7491090Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7491190Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7491270Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7491380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7491480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7491560Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7491600Z err_msg = None
2025-02-24T15:57:56.7491610Z 
2025-02-24T15:57:56.7491690Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7491750Z         if err_msg is None:
2025-02-24T15:57:56.7491810Z             if left.shape != right.shape:
2025-02-24T15:57:56.7492220Z                 raise_assert_detail(
2025-02-24T15:57:56.7492340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7492390Z                 )
2025-02-24T15:57:56.7492430Z     
2025-02-24T15:57:56.7492480Z             diff = 0
2025-02-24T15:57:56.7492560Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7492630Z                 # count up differences
2025-02-24T15:57:56.7492770Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7492820Z                     diff += 1
2025-02-24T15:57:56.7492870Z     
2025-02-24T15:57:56.7493010Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7493130Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7493260Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7493340Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7493390Z E           
2025-02-24T15:57:56.7493490Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7493690Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7493910Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7493920Z 
2025-02-24T15:57:56.7494160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7494160Z 
2025-02-24T15:57:56.7494290Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7494300Z 
2025-02-24T15:57:56.7494470Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba5bb0>
2025-02-24T15:57:56.7494630Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f2a96d0>, attr = 'j_blues'
2025-02-24T15:57:56.7494640Z 
2025-02-24T15:57:56.7494740Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7494820Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7494880Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7494930Z         try:
2025-02-24T15:57:56.7495040Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7495100Z         except KeyError:
2025-02-24T15:57:56.7495210Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7495250Z     
2025-02-24T15:57:56.7495310Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7495380Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7495440Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7495550Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7495610Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7495680Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7495770Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7495810Z             else:
2025-02-24T15:57:56.7495890Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7495970Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7495980Z 
2025-02-24T15:57:56.7496070Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7496160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7496280Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7496330Z     ???
2025-02-24T15:57:56.7496460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7496470Z 
2025-02-24T15:57:56.7496520Z >   ???
2025-02-24T15:57:56.7496620Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7496670Z E   
2025-02-24T15:57:56.7496760Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7496850Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7496900Z E          ...
2025-02-24T15:57:56.7496970Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7497070Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7497210Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7497260Z E          ...
2025-02-24T15:57:56.7497320Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7497420Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7497500Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7497510Z 
2025-02-24T15:57:56.7497570Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7497730Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines] ________
2025-02-24T15:57:56.7497730Z 
2025-02-24T15:57:56.7497830Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7497940Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7498020Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7498120Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7498230Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7498310Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7498360Z err_msg = None
2025-02-24T15:57:56.7498360Z 
2025-02-24T15:57:56.7498450Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7498500Z         if err_msg is None:
2025-02-24T15:57:56.7498580Z             if left.shape != right.shape:
2025-02-24T15:57:56.7498640Z                 raise_assert_detail(
2025-02-24T15:57:56.7498760Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7498810Z                 )
2025-02-24T15:57:56.7498850Z     
2025-02-24T15:57:56.7498900Z             diff = 0
2025-02-24T15:57:56.7498990Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7499050Z                 # count up differences
2025-02-24T15:57:56.7499180Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7499230Z                     diff += 1
2025-02-24T15:57:56.7499280Z     
2025-02-24T15:57:56.7499350Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7499450Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7499590Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7499680Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7499730Z E           
2025-02-24T15:57:56.7499810Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7500210Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7500520Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7500750Z 
2025-02-24T15:57:56.7501030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7501030Z 
2025-02-24T15:57:56.7501180Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7501180Z 
2025-02-24T15:57:56.7501350Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba6930>
2025-02-24T15:57:56.7501520Z plasma = <tardis.plasma.base.BasePlasma object at 0x1667f6d50>, attr = 'lines'
2025-02-24T15:57:56.7501530Z 
2025-02-24T15:57:56.7501640Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7501800Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7501860Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7501910Z         try:
2025-02-24T15:57:56.7502030Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7502080Z         except KeyError:
2025-02-24T15:57:56.7502200Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7502240Z     
2025-02-24T15:57:56.7502310Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7502380Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7502450Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7502560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7502620Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7502690Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7502780Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7502830Z             else:
2025-02-24T15:57:56.7502900Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7502990Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7502990Z 
2025-02-24T15:57:56.7503090Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7503180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7503300Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7503350Z     ???
2025-02-24T15:57:56.7503440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7503440Z 
2025-02-24T15:57:56.7503480Z >   ???
2025-02-24T15:57:56.7503580Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7503620Z E   
2025-02-24T15:57:56.7503720Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7503810Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7503860Z E          ...
2025-02-24T15:57:56.7503930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7504150Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7504270Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7504320Z E          ...
2025-02-24T15:57:56.7504390Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7504500Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7504580Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7504580Z 
2025-02-24T15:57:56.7504650Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7504820Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] _
2025-02-24T15:57:56.7504830Z 
2025-02-24T15:57:56.7505000Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba69f0>
2025-02-24T15:57:56.7505120Z plasma = <tardis.plasma.base.BasePlasma object at 0x1667f6d50>
2025-02-24T15:57:56.7505190Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.7505190Z 
2025-02-24T15:57:56.7505300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7505390Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7505450Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7505500Z         try:
2025-02-24T15:57:56.7505730Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7505790Z         except KeyError:
2025-02-24T15:57:56.7506400Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7510840Z     
2025-02-24T15:57:56.7510920Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7510990Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7511050Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7511160Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7511230Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7511300Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7511580Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7511580Z 
2025-02-24T15:57:56.7511690Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7511770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7511780Z 
2025-02-24T15:57:56.7511890Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7511950Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7512040Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7512100Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7512220Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7512280Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7512360Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7512430Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7517790Z err_msg = None
2025-02-24T15:57:56.7517810Z 
2025-02-24T15:57:56.7517930Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7517990Z         if err_msg is None:
2025-02-24T15:57:56.7518060Z             if left.shape != right.shape:
2025-02-24T15:57:56.7518130Z                 raise_assert_detail(
2025-02-24T15:57:56.7518250Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7518300Z                 )
2025-02-24T15:57:56.7518350Z     
2025-02-24T15:57:56.7518400Z             diff = 0
2025-02-24T15:57:56.7518490Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7518550Z                 # count up differences
2025-02-24T15:57:56.7518690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7518740Z                     diff += 1
2025-02-24T15:57:56.7518790Z     
2025-02-24T15:57:56.7518870Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7518970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7519120Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7519200Z E           AssertionError: Series are different
2025-02-24T15:57:56.7519250Z E           
2025-02-24T15:57:56.7519330Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.7519640Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7519920Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7522000Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7522010Z 
2025-02-24T15:57:56.7522310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7522490Z _ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] _
2025-02-24T15:57:56.7522600Z 
2025-02-24T15:57:56.7522780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba6ab0>
2025-02-24T15:57:56.7522910Z plasma = <tardis.plasma.base.BasePlasma object at 0x1667f6d50>
2025-02-24T15:57:56.7522980Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.7522980Z 
2025-02-24T15:57:56.7523100Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7523190Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7523240Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7523290Z         try:
2025-02-24T15:57:56.7523410Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7523460Z         except KeyError:
2025-02-24T15:57:56.7523570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7523620Z     
2025-02-24T15:57:56.7523680Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7523750Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7523820Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7523930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7523990Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7524060Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7524150Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7524160Z 
2025-02-24T15:57:56.7524750Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7525030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7525030Z 
2025-02-24T15:57:56.7525140Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7525210Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7525300Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7525360Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7525470Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7525540Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7525630Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7525680Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7525740Z err_msg = None
2025-02-24T15:57:56.7525750Z 
2025-02-24T15:57:56.7525840Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7525900Z         if err_msg is None:
2025-02-24T15:57:56.7525970Z             if left.shape != right.shape:
2025-02-24T15:57:56.7526040Z                 raise_assert_detail(
2025-02-24T15:57:56.7526150Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7526200Z                 )
2025-02-24T15:57:56.7526240Z     
2025-02-24T15:57:56.7526290Z             diff = 0
2025-02-24T15:57:56.7526370Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7526440Z                 # count up differences
2025-02-24T15:57:56.7526580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7526640Z                     diff += 1
2025-02-24T15:57:56.7526680Z     
2025-02-24T15:57:56.7526750Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7526990Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7527140Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7527220Z E           AssertionError: Series are different
2025-02-24T15:57:56.7527270Z E           
2025-02-24T15:57:56.7527350Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.7527660Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7528030Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7528460Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7528470Z 
2025-02-24T15:57:56.7528720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7528880Z _________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-nu] __________
2025-02-24T15:57:56.7528890Z 
2025-02-24T15:57:56.7529000Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7529110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7529180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7529300Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7529400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7529470Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7529520Z err_msg = None
2025-02-24T15:57:56.7529530Z 
2025-02-24T15:57:56.7529610Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7529660Z         if err_msg is None:
2025-02-24T15:57:56.7529730Z             if left.shape != right.shape:
2025-02-24T15:57:56.7529800Z                 raise_assert_detail(
2025-02-24T15:57:56.7529910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7529960Z                 )
2025-02-24T15:57:56.7530000Z     
2025-02-24T15:57:56.7530050Z             diff = 0
2025-02-24T15:57:56.7530130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7530200Z                 # count up differences
2025-02-24T15:57:56.7530330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7530390Z                     diff += 1
2025-02-24T15:57:56.7530430Z     
2025-02-24T15:57:56.7530500Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7530610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7530740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7530830Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7530880Z E           
2025-02-24T15:57:56.7531030Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7531250Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7531470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7531520Z 
2025-02-24T15:57:56.7531770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7531780Z 
2025-02-24T15:57:56.7531910Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7531940Z 
2025-02-24T15:57:56.7532120Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba6cf0>
2025-02-24T15:57:56.7532280Z plasma = <tardis.plasma.base.BasePlasma object at 0x1667f6d50>, attr = 'nu'
2025-02-24T15:57:56.7532280Z 
2025-02-24T15:57:56.7532390Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7532480Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7532540Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7532590Z         try:
2025-02-24T15:57:56.7532700Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7532760Z         except KeyError:
2025-02-24T15:57:56.7532870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7532920Z     
2025-02-24T15:57:56.7532980Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7533050Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7533110Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7533220Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7533290Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7533350Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7533440Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7533450Z 
2025-02-24T15:57:56.7533540Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7533630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7533750Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7533800Z     ???
2025-02-24T15:57:56.7533890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7533900Z 
2025-02-24T15:57:56.7533940Z >   ???
2025-02-24T15:57:56.7534030Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7534080Z E   
2025-02-24T15:57:56.7534180Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7534260Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7534310Z E          ...
2025-02-24T15:57:56.7534380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7534480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7534570Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7534610Z E          ...
2025-02-24T15:57:56.7534680Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7534770Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7534860Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7534860Z 
2025-02-24T15:57:56.7534920Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7535080Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] ____
2025-02-24T15:57:56.7535080Z 
2025-02-24T15:57:56.7535240Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7535350Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7535430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7535540Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7535640Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7535710Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7535810Z err_msg = None
2025-02-24T15:57:56.7535810Z 
2025-02-24T15:57:56.7535890Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7535950Z         if err_msg is None:
2025-02-24T15:57:56.7536020Z             if left.shape != right.shape:
2025-02-24T15:57:56.7536080Z                 raise_assert_detail(
2025-02-24T15:57:56.7536190Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7536240Z                 )
2025-02-24T15:57:56.7536280Z     
2025-02-24T15:57:56.7536330Z             diff = 0
2025-02-24T15:57:56.7536420Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7536480Z                 # count up differences
2025-02-24T15:57:56.7536620Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7536670Z                     diff += 1
2025-02-24T15:57:56.7536710Z     
2025-02-24T15:57:56.7536780Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7536880Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7537020Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7537110Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7537150Z E           
2025-02-24T15:57:56.7537240Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7537450Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7537660Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7537670Z 
2025-02-24T15:57:56.7537910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7537910Z 
2025-02-24T15:57:56.7538050Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7538050Z 
2025-02-24T15:57:56.7538230Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba6db0>
2025-02-24T15:57:56.7538350Z plasma = <tardis.plasma.base.BasePlasma object at 0x1667f6d50>
2025-02-24T15:57:56.7538400Z attr = 'wavelength_cm'
2025-02-24T15:57:56.7538400Z 
2025-02-24T15:57:56.7538510Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7538600Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7538660Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7538700Z         try:
2025-02-24T15:57:56.7538820Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7538880Z         except KeyError:
2025-02-24T15:57:56.7538990Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7539030Z     
2025-02-24T15:57:56.7539090Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7539160Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7539330Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7539440Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7539510Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7539570Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7539660Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7539660Z 
2025-02-24T15:57:56.7539750Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7539850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7539960Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7540330Z     ???
2025-02-24T15:57:56.7540420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7540420Z 
2025-02-24T15:57:56.7540470Z >   ???
2025-02-24T15:57:56.7540570Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7540610Z E   
2025-02-24T15:57:56.7540710Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7540800Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7540850Z E          ...
2025-02-24T15:57:56.7540920Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7541020Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7541110Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7541160Z E          ...
2025-02-24T15:57:56.7541220Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7541320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7541400Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7541400Z 
2025-02-24T15:57:56.7541470Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7541620Z ________ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-f_lu] _________
2025-02-24T15:57:56.7541620Z 
2025-02-24T15:57:56.7541730Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7541830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7541910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7542020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7542120Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7542200Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7542250Z err_msg = None
2025-02-24T15:57:56.7542250Z 
2025-02-24T15:57:56.7542340Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7542400Z         if err_msg is None:
2025-02-24T15:57:56.7542470Z             if left.shape != right.shape:
2025-02-24T15:57:56.7542530Z                 raise_assert_detail(
2025-02-24T15:57:56.7542650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7542690Z                 )
2025-02-24T15:57:56.7542740Z     
2025-02-24T15:57:56.7542790Z             diff = 0
2025-02-24T15:57:56.7542870Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7542940Z                 # count up differences
2025-02-24T15:57:56.7543070Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7543130Z                     diff += 1
2025-02-24T15:57:56.7543170Z     
2025-02-24T15:57:56.7543230Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7543340Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7543480Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7543560Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7543610Z E           
2025-02-24T15:57:56.7543750Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7543970Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7544190Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7544240Z 
2025-02-24T15:57:56.7544490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7544500Z 
2025-02-24T15:57:56.7544630Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7544640Z 
2025-02-24T15:57:56.7544810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba6e70>
2025-02-24T15:57:56.7544970Z plasma = <tardis.plasma.base.BasePlasma object at 0x1667f6d50>, attr = 'f_lu'
2025-02-24T15:57:56.7544970Z 
2025-02-24T15:57:56.7545080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7545170Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7545230Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7545280Z         try:
2025-02-24T15:57:56.7545390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7545460Z         except KeyError:
2025-02-24T15:57:56.7545570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7545620Z     
2025-02-24T15:57:56.7545680Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7545750Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7545810Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7545920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7545990Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7546050Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7546140Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7546140Z 
2025-02-24T15:57:56.7546230Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7546330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7546440Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7546490Z     ???
2025-02-24T15:57:56.7546580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7546580Z 
2025-02-24T15:57:56.7546630Z >   ???
2025-02-24T15:57:56.7546730Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7546770Z E   
2025-02-24T15:57:56.7546870Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7546950Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7547000Z E          ...
2025-02-24T15:57:56.7547070Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7547170Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7547250Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7547300Z E          ...
2025-02-24T15:57:56.7547370Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7547470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7547540Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7547550Z 
2025-02-24T15:57:56.7547610Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7547780Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] _____
2025-02-24T15:57:56.7547780Z 
2025-02-24T15:57:56.7547940Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7548050Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7548130Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7548240Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7548340Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7548420Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7548520Z err_msg = None
2025-02-24T15:57:56.7548520Z 
2025-02-24T15:57:56.7548600Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7548660Z         if err_msg is None:
2025-02-24T15:57:56.7548730Z             if left.shape != right.shape:
2025-02-24T15:57:56.7548790Z                 raise_assert_detail(
2025-02-24T15:57:56.7548910Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7548950Z                 )
2025-02-24T15:57:56.7549000Z     
2025-02-24T15:57:56.7549050Z             diff = 0
2025-02-24T15:57:56.7549130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7549200Z                 # count up differences
2025-02-24T15:57:56.7549330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7549390Z                     diff += 1
2025-02-24T15:57:56.7549440Z     
2025-02-24T15:57:56.7549500Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7549610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7549750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7549840Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7549880Z E           
2025-02-24T15:57:56.7549980Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7550190Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7550400Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7550400Z 
2025-02-24T15:57:56.7550650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7550650Z 
2025-02-24T15:57:56.7550790Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7550800Z 
2025-02-24T15:57:56.7550970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba75f0>
2025-02-24T15:57:56.7551090Z plasma = <tardis.plasma.base.BasePlasma object at 0x1667f6d50>
2025-02-24T15:57:56.7551140Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.7551140Z 
2025-02-24T15:57:56.7551260Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7551340Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7551400Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7551450Z         try:
2025-02-24T15:57:56.7551560Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7551620Z         except KeyError:
2025-02-24T15:57:56.7551730Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7551780Z     
2025-02-24T15:57:56.7551840Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7551910Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7552020Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7552140Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7552200Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7552270Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7552360Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7552410Z             else:
2025-02-24T15:57:56.7552480Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7552560Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7552570Z 
2025-02-24T15:57:56.7552660Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7552800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7552920Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7552960Z     ???
2025-02-24T15:57:56.7553060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7553060Z 
2025-02-24T15:57:56.7553110Z >   ???
2025-02-24T15:57:56.7553210Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7553250Z E   
2025-02-24T15:57:56.7553360Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7553450Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7553490Z E          ...
2025-02-24T15:57:56.7553560Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7553670Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7553760Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7553810Z E          ...
2025-02-24T15:57:56.7553880Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7553980Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7554060Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7554060Z 
2025-02-24T15:57:56.7554130Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7554300Z ____ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] _____
2025-02-24T15:57:56.7554300Z 
2025-02-24T15:57:56.7554410Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7554520Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7554600Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7554710Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7554820Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7554890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7554950Z err_msg = None
2025-02-24T15:57:56.7554950Z 
2025-02-24T15:57:56.7555030Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7555090Z         if err_msg is None:
2025-02-24T15:57:56.7555170Z             if left.shape != right.shape:
2025-02-24T15:57:56.7555230Z                 raise_assert_detail(
2025-02-24T15:57:56.7555340Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7555380Z                 )
2025-02-24T15:57:56.7555430Z     
2025-02-24T15:57:56.7555480Z             diff = 0
2025-02-24T15:57:56.7555570Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7555630Z                 # count up differences
2025-02-24T15:57:56.7555760Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7555820Z                     diff += 1
2025-02-24T15:57:56.7555870Z     
2025-02-24T15:57:56.7555930Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7556040Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7556490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7556680Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7556730Z E           
2025-02-24T15:57:56.7556810Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7557030Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7557250Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7557430Z 
2025-02-24T15:57:56.7557680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7557680Z 
2025-02-24T15:57:56.7557820Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7557820Z 
2025-02-24T15:57:56.7557990Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba76b0>
2025-02-24T15:57:56.7558110Z plasma = <tardis.plasma.base.BasePlasma object at 0x1667f6d50>
2025-02-24T15:57:56.7558160Z attr = 'beta_sobolev'
2025-02-24T15:57:56.7558170Z 
2025-02-24T15:57:56.7558270Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7558370Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7558430Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7558480Z         try:
2025-02-24T15:57:56.7558590Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7558650Z         except KeyError:
2025-02-24T15:57:56.7558760Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7558810Z     
2025-02-24T15:57:56.7558870Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7558940Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7559010Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7559120Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7559180Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7559250Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7559330Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7559380Z             else:
2025-02-24T15:57:56.7559450Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7559540Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7559550Z 
2025-02-24T15:57:56.7559640Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7559730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7559850Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7559890Z     ???
2025-02-24T15:57:56.7559990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7559990Z 
2025-02-24T15:57:56.7560030Z >   ???
2025-02-24T15:57:56.7560130Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7560170Z E   
2025-02-24T15:57:56.7560270Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7560360Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7560410Z E          ...
2025-02-24T15:57:56.7560480Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7560570Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7560660Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7560710Z E          ...
2025-02-24T15:57:56.7560860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7560970Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7561050Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7561050Z 
2025-02-24T15:57:56.7561110Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7561270Z _______ TestPlasma.test_plasma_properties[initial_t_rad:10000 K-j_blues] _______
2025-02-24T15:57:56.7561280Z 
2025-02-24T15:57:56.7561380Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7561490Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7561620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7561730Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7561830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7561910Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7561960Z err_msg = None
2025-02-24T15:57:56.7561970Z 
2025-02-24T15:57:56.7562050Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7562110Z         if err_msg is None:
2025-02-24T15:57:56.7562180Z             if left.shape != right.shape:
2025-02-24T15:57:56.7562240Z                 raise_assert_detail(
2025-02-24T15:57:56.7562360Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7562410Z                 )
2025-02-24T15:57:56.7562460Z     
2025-02-24T15:57:56.7562510Z             diff = 0
2025-02-24T15:57:56.7562590Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7562660Z                 # count up differences
2025-02-24T15:57:56.7562800Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7562850Z                     diff += 1
2025-02-24T15:57:56.7562900Z     
2025-02-24T15:57:56.7562970Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7563080Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7563220Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7563300Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7563350Z E           
2025-02-24T15:57:56.7563440Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7563650Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7563870Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7563880Z 
2025-02-24T15:57:56.7564120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7564130Z 
2025-02-24T15:57:56.7564260Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7564270Z 
2025-02-24T15:57:56.7564440Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fba7830>
2025-02-24T15:57:56.7564610Z plasma = <tardis.plasma.base.BasePlasma object at 0x1667f6d50>, attr = 'j_blues'
2025-02-24T15:57:56.7564610Z 
2025-02-24T15:57:56.7564720Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7564800Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7564870Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7564920Z         try:
2025-02-24T15:57:56.7565080Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7565140Z         except KeyError:
2025-02-24T15:57:56.7565250Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7565300Z     
2025-02-24T15:57:56.7565370Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7565440Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7565500Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7565610Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7565670Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7565800Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7565880Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7565940Z             else:
2025-02-24T15:57:56.7566010Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7566090Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7566100Z 
2025-02-24T15:57:56.7566190Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7566280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7566400Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7566440Z     ???
2025-02-24T15:57:56.7566530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7566540Z 
2025-02-24T15:57:56.7566580Z >   ???
2025-02-24T15:57:56.7566680Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7566720Z E   
2025-02-24T15:57:56.7566830Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7566910Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7566960Z E          ...
2025-02-24T15:57:56.7567030Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7567130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7567220Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7567270Z E          ...
2025-02-24T15:57:56.7567340Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7567440Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7567520Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7567520Z 
2025-02-24T15:57:56.7567590Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7567760Z ____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines] _____
2025-02-24T15:57:56.7567760Z 
2025-02-24T15:57:56.7572670Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7572830Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7572920Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7573020Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7573130Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7573210Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7573260Z err_msg = None
2025-02-24T15:57:56.7573260Z 
2025-02-24T15:57:56.7573350Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7573400Z         if err_msg is None:
2025-02-24T15:57:56.7573480Z             if left.shape != right.shape:
2025-02-24T15:57:56.7573540Z                 raise_assert_detail(
2025-02-24T15:57:56.7573650Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7573700Z                 )
2025-02-24T15:57:56.7573750Z     
2025-02-24T15:57:56.7573800Z             diff = 0
2025-02-24T15:57:56.7573890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7573960Z                 # count up differences
2025-02-24T15:57:56.7574330Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7574390Z                     diff += 1
2025-02-24T15:57:56.7574430Z     
2025-02-24T15:57:56.7574500Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7574610Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7574740Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7574830Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7574880Z E           
2025-02-24T15:57:56.7574970Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7575240Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7575460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7575460Z 
2025-02-24T15:57:56.7575710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7575710Z 
2025-02-24T15:57:56.7575850Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7575860Z 
2025-02-24T15:57:56.7576030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd45f0>
2025-02-24T15:57:56.7576190Z plasma = <tardis.plasma.base.BasePlasma object at 0x1761b3230>, attr = 'lines'
2025-02-24T15:57:56.7576190Z 
2025-02-24T15:57:56.7576300Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7576390Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7576460Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7576510Z         try:
2025-02-24T15:57:56.7576620Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7576680Z         except KeyError:
2025-02-24T15:57:56.7576790Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7576840Z     
2025-02-24T15:57:56.7576900Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7576980Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7577040Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7577150Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7577220Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7577290Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7577370Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7577420Z             else:
2025-02-24T15:57:56.7577490Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7577580Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7577580Z 
2025-02-24T15:57:56.7577680Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7577770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7577880Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7577930Z     ???
2025-02-24T15:57:56.7578020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7578030Z 
2025-02-24T15:57:56.7578070Z >   ???
2025-02-24T15:57:56.7578170Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7578220Z E   
2025-02-24T15:57:56.7578330Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7578410Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7578770Z E          ...
2025-02-24T15:57:56.7578840Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7578950Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7579040Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7579080Z E          ...
2025-02-24T15:57:56.7579150Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7579250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7579330Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7579330Z 
2025-02-24T15:57:56.7579400Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7579690Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] _
2025-02-24T15:57:56.7579700Z 
2025-02-24T15:57:56.7579880Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd46b0>
2025-02-24T15:57:56.7580000Z plasma = <tardis.plasma.base.BasePlasma object at 0x1761b3230>
2025-02-24T15:57:56.7580070Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.7580070Z 
2025-02-24T15:57:56.7580180Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7580280Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7580340Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7580380Z         try:
2025-02-24T15:57:56.7580500Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7580570Z         except KeyError:
2025-02-24T15:57:56.7580680Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7580730Z     
2025-02-24T15:57:56.7580800Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7580870Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7580940Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7581050Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7581110Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7581180Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7581270Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7581270Z 
2025-02-24T15:57:56.7581370Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7581460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7581460Z 
2025-02-24T15:57:56.7581580Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7581640Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7581730Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7581790Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7581900Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7581970Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7582060Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7582120Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7582170Z err_msg = None
2025-02-24T15:57:56.7582170Z 
2025-02-24T15:57:56.7582260Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7582310Z         if err_msg is None:
2025-02-24T15:57:56.7582380Z             if left.shape != right.shape:
2025-02-24T15:57:56.7582450Z                 raise_assert_detail(
2025-02-24T15:57:56.7582560Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7582610Z                 )
2025-02-24T15:57:56.7582660Z     
2025-02-24T15:57:56.7582710Z             diff = 0
2025-02-24T15:57:56.7582800Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7582870Z                 # count up differences
2025-02-24T15:57:56.7583000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7583060Z                     diff += 1
2025-02-24T15:57:56.7583160Z     
2025-02-24T15:57:56.7583240Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7583350Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7583490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7583570Z E           AssertionError: Series are different
2025-02-24T15:57:56.7583620Z E           
2025-02-24T15:57:56.7583700Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.7584020Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7584360Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7584640Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7584650Z 
2025-02-24T15:57:56.7584900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7585110Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] _
2025-02-24T15:57:56.7585110Z 
2025-02-24T15:57:56.7585290Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd4770>
2025-02-24T15:57:56.7585420Z plasma = <tardis.plasma.base.BasePlasma object at 0x1761b3230>
2025-02-24T15:57:56.7585490Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.7585490Z 
2025-02-24T15:57:56.7585600Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7585690Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7585750Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7585790Z         try:
2025-02-24T15:57:56.7585900Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7585960Z         except KeyError:
2025-02-24T15:57:56.7586070Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7586130Z     
2025-02-24T15:57:56.7586190Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7586260Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7586320Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7586440Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7586500Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7586570Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7586660Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7586660Z 
2025-02-24T15:57:56.7586750Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7586850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7586850Z 
2025-02-24T15:57:56.7586960Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7587030Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7587120Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7587180Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7587340Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7587420Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7587510Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7587570Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7587620Z err_msg = None
2025-02-24T15:57:56.7587630Z 
2025-02-24T15:57:56.7587710Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7587770Z         if err_msg is None:
2025-02-24T15:57:56.7587840Z             if left.shape != right.shape:
2025-02-24T15:57:56.7587910Z                 raise_assert_detail(
2025-02-24T15:57:56.7588080Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7588140Z                 )
2025-02-24T15:57:56.7588180Z     
2025-02-24T15:57:56.7588240Z             diff = 0
2025-02-24T15:57:56.7588330Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7588410Z                 # count up differences
2025-02-24T15:57:56.7588550Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7588600Z                     diff += 1
2025-02-24T15:57:56.7588660Z     
2025-02-24T15:57:56.7588720Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7588840Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7588970Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7589050Z E           AssertionError: Series are different
2025-02-24T15:57:56.7589100Z E           
2025-02-24T15:57:56.7589190Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.7589500Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7589820Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7590160Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7590160Z 
2025-02-24T15:57:56.7590410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7590580Z ______ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-nu] ______
2025-02-24T15:57:56.7590590Z 
2025-02-24T15:57:56.7590700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7590800Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7590880Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7590990Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7591100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7591170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7591270Z err_msg = None
2025-02-24T15:57:56.7591270Z 
2025-02-24T15:57:56.7591360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7591420Z         if err_msg is None:
2025-02-24T15:57:56.7591490Z             if left.shape != right.shape:
2025-02-24T15:57:56.7591550Z                 raise_assert_detail(
2025-02-24T15:57:56.7591670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7591710Z                 )
2025-02-24T15:57:56.7591760Z     
2025-02-24T15:57:56.7591810Z             diff = 0
2025-02-24T15:57:56.7591890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7592000Z                 # count up differences
2025-02-24T15:57:56.7592140Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7592200Z                     diff += 1
2025-02-24T15:57:56.7592250Z     
2025-02-24T15:57:56.7592310Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7592420Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7592560Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7592650Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7592690Z E           
2025-02-24T15:57:56.7592790Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7593000Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7593220Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7593220Z 
2025-02-24T15:57:56.7593470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7593470Z 
2025-02-24T15:57:56.7593600Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7593600Z 
2025-02-24T15:57:56.7593780Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd49b0>
2025-02-24T15:57:56.7593930Z plasma = <tardis.plasma.base.BasePlasma object at 0x1761b3230>, attr = 'nu'
2025-02-24T15:57:56.7593930Z 
2025-02-24T15:57:56.7594040Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7594130Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7594190Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7594240Z         try:
2025-02-24T15:57:56.7594360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7594410Z         except KeyError:
2025-02-24T15:57:56.7594530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7594580Z     
2025-02-24T15:57:56.7594640Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7594710Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7594770Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7594880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7594940Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7595010Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7595100Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7595110Z 
2025-02-24T15:57:56.7595200Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7595290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7595490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7595550Z     ???
2025-02-24T15:57:56.7595640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7595640Z 
2025-02-24T15:57:56.7595690Z >   ???
2025-02-24T15:57:56.7595780Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7595830Z E   
2025-02-24T15:57:56.7595930Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7596020Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7596060Z E          ...
2025-02-24T15:57:56.7596130Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7596320Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7596400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7596450Z E          ...
2025-02-24T15:57:56.7596510Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7596610Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7596690Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7596690Z 
2025-02-24T15:57:56.7596760Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7596940Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] _
2025-02-24T15:57:56.7596940Z 
2025-02-24T15:57:56.7597040Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7597150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7597220Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7597330Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7597430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7597510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7597560Z err_msg = None
2025-02-24T15:57:56.7597560Z 
2025-02-24T15:57:56.7597640Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7597700Z         if err_msg is None:
2025-02-24T15:57:56.7597770Z             if left.shape != right.shape:
2025-02-24T15:57:56.7597830Z                 raise_assert_detail(
2025-02-24T15:57:56.7597940Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7598000Z                 )
2025-02-24T15:57:56.7598040Z     
2025-02-24T15:57:56.7598080Z             diff = 0
2025-02-24T15:57:56.7598170Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7598240Z                 # count up differences
2025-02-24T15:57:56.7598370Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7598420Z                     diff += 1
2025-02-24T15:57:56.7598460Z     
2025-02-24T15:57:56.7598530Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7598640Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7598780Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7598870Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7598910Z E           
2025-02-24T15:57:56.7599000Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7599200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7599470Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7599470Z 
2025-02-24T15:57:56.7599720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7599720Z 
2025-02-24T15:57:56.7599860Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7599860Z 
2025-02-24T15:57:56.7600030Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd4a70>
2025-02-24T15:57:56.7600150Z plasma = <tardis.plasma.base.BasePlasma object at 0x1761b3230>
2025-02-24T15:57:56.7600250Z attr = 'wavelength_cm'
2025-02-24T15:57:56.7600250Z 
2025-02-24T15:57:56.7600360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7600450Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7600510Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7600560Z         try:
2025-02-24T15:57:56.7600680Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7600740Z         except KeyError:
2025-02-24T15:57:56.7600850Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7600900Z     
2025-02-24T15:57:56.7600960Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7601030Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7601100Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7601200Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7601260Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7601330Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7601420Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7601420Z 
2025-02-24T15:57:56.7601520Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7601610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7601730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7601770Z     ???
2025-02-24T15:57:56.7601860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7601870Z 
2025-02-24T15:57:56.7601920Z >   ???
2025-02-24T15:57:56.7602010Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7602060Z E   
2025-02-24T15:57:56.7602160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7602920Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7603090Z E          ...
2025-02-24T15:57:56.7603180Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7603310Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7603400Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7603450Z E          ...
2025-02-24T15:57:56.7603530Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7603630Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7603710Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7603720Z 
2025-02-24T15:57:56.7603790Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7603950Z _____ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-f_lu] _____
2025-02-24T15:57:56.7603960Z 
2025-02-24T15:57:56.7604070Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7604180Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7604260Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7604380Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7604480Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7604990Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7605040Z err_msg = None
2025-02-24T15:57:56.7605050Z 
2025-02-24T15:57:56.7605140Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7605200Z         if err_msg is None:
2025-02-24T15:57:56.7605280Z             if left.shape != right.shape:
2025-02-24T15:57:56.7605340Z                 raise_assert_detail(
2025-02-24T15:57:56.7605460Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7605510Z                 )
2025-02-24T15:57:56.7605560Z     
2025-02-24T15:57:56.7605610Z             diff = 0
2025-02-24T15:57:56.7605690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7605860Z                 # count up differences
2025-02-24T15:57:56.7606000Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7606060Z                     diff += 1
2025-02-24T15:57:56.7606100Z     
2025-02-24T15:57:56.7606170Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7606280Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7606420Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7606500Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7606560Z E           
2025-02-24T15:57:56.7606640Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7606860Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7607080Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7607090Z 
2025-02-24T15:57:56.7607340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7607340Z 
2025-02-24T15:57:56.7607480Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7607480Z 
2025-02-24T15:57:56.7607650Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd4b30>
2025-02-24T15:57:56.7607810Z plasma = <tardis.plasma.base.BasePlasma object at 0x1761b3230>, attr = 'f_lu'
2025-02-24T15:57:56.7607810Z 
2025-02-24T15:57:56.7607930Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7608010Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7608080Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7608130Z         try:
2025-02-24T15:57:56.7608240Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7608300Z         except KeyError:
2025-02-24T15:57:56.7608410Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7608570Z     
2025-02-24T15:57:56.7608640Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7608710Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7608770Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7608880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7608940Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7609010Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7609100Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7609100Z 
2025-02-24T15:57:56.7609190Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7609290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7609460Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7609520Z     ???
2025-02-24T15:57:56.7609610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7609610Z 
2025-02-24T15:57:56.7609660Z >   ???
2025-02-24T15:57:56.7609760Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7609810Z E   
2025-02-24T15:57:56.7609910Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7609990Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7610040Z E          ...
2025-02-24T15:57:56.7610100Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7610250Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7610340Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7610390Z E          ...
2025-02-24T15:57:56.7610460Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7610560Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7610640Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7610640Z 
2025-02-24T15:57:56.7610710Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7610880Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] _
2025-02-24T15:57:56.7610880Z 
2025-02-24T15:57:56.7610980Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7611100Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7611170Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7611290Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7611400Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7611480Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7611530Z err_msg = None
2025-02-24T15:57:56.7611530Z 
2025-02-24T15:57:56.7611620Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7611670Z         if err_msg is None:
2025-02-24T15:57:56.7611750Z             if left.shape != right.shape:
2025-02-24T15:57:56.7611810Z                 raise_assert_detail(
2025-02-24T15:57:56.7611930Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7611970Z                 )
2025-02-24T15:57:56.7612020Z     
2025-02-24T15:57:56.7612070Z             diff = 0
2025-02-24T15:57:56.7612150Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7612220Z                 # count up differences
2025-02-24T15:57:56.7612350Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7612410Z                     diff += 1
2025-02-24T15:57:56.7612450Z     
2025-02-24T15:57:56.7612520Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7612630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7612760Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7612850Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7612900Z E           
2025-02-24T15:57:56.7612980Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7613190Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7613500Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7613500Z 
2025-02-24T15:57:56.7613750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7613750Z 
2025-02-24T15:57:56.7613890Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7613890Z 
2025-02-24T15:57:56.7614060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd52b0>
2025-02-24T15:57:56.7614190Z plasma = <tardis.plasma.base.BasePlasma object at 0x1761b3230>
2025-02-24T15:57:56.7614320Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.7614320Z 
2025-02-24T15:57:56.7614430Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7614550Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7614600Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7614650Z         try:
2025-02-24T15:57:56.7614770Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7614830Z         except KeyError:
2025-02-24T15:57:56.7614940Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7614980Z     
2025-02-24T15:57:56.7615050Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7615110Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7615180Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7615280Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7615340Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7615400Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7615490Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7615540Z             else:
2025-02-24T15:57:56.7615610Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7615690Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7615700Z 
2025-02-24T15:57:56.7615790Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7615880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7616000Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7616040Z     ???
2025-02-24T15:57:56.7616130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7616130Z 
2025-02-24T15:57:56.7616180Z >   ???
2025-02-24T15:57:56.7616280Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7616320Z E   
2025-02-24T15:57:56.7616420Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7616510Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7616560Z E          ...
2025-02-24T15:57:56.7616620Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7616720Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7616810Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7616870Z E          ...
2025-02-24T15:57:56.7616930Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7617030Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7617100Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7617100Z 
2025-02-24T15:57:56.7617170Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7617330Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] _
2025-02-24T15:57:56.7617340Z 
2025-02-24T15:57:56.7617440Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7617550Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7617620Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7617740Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7617890Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7617970Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7618020Z err_msg = None
2025-02-24T15:57:56.7618030Z 
2025-02-24T15:57:56.7618110Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7618170Z         if err_msg is None:
2025-02-24T15:57:56.7618240Z             if left.shape != right.shape:
2025-02-24T15:57:56.7618300Z                 raise_assert_detail(
2025-02-24T15:57:56.7618410Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7618510Z                 )
2025-02-24T15:57:56.7618560Z     
2025-02-24T15:57:56.7618610Z             diff = 0
2025-02-24T15:57:56.7618690Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7618760Z                 # count up differences
2025-02-24T15:57:56.7618900Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7618960Z                     diff += 1
2025-02-24T15:57:56.7619010Z     
2025-02-24T15:57:56.7619070Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7619180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7619320Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7619410Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7619450Z E           
2025-02-24T15:57:56.7619550Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7619760Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7619990Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7620000Z 
2025-02-24T15:57:56.7620250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7620250Z 
2025-02-24T15:57:56.7620390Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7620390Z 
2025-02-24T15:57:56.7620570Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd5370>
2025-02-24T15:57:56.7620700Z plasma = <tardis.plasma.base.BasePlasma object at 0x1761b3230>
2025-02-24T15:57:56.7620750Z attr = 'beta_sobolev'
2025-02-24T15:57:56.7620760Z 
2025-02-24T15:57:56.7620870Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7620960Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7621020Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7621070Z         try:
2025-02-24T15:57:56.7621190Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7621250Z         except KeyError:
2025-02-24T15:57:56.7621360Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7621410Z     
2025-02-24T15:57:56.7621480Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7626030Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7626140Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7626260Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7626320Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7626400Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7626480Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7626690Z             else:
2025-02-24T15:57:56.7626770Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7626850Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7626850Z 
2025-02-24T15:57:56.7626950Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7627050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7627160Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7627210Z     ???
2025-02-24T15:57:56.7627310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7627360Z 
2025-02-24T15:57:56.7627400Z >   ???
2025-02-24T15:57:56.7627500Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7627550Z E   
2025-02-24T15:57:56.7627650Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7627740Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7627790Z E          ...
2025-02-24T15:57:56.7627860Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7627960Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7628050Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7628100Z E          ...
2025-02-24T15:57:56.7628170Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7628270Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7628350Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7628350Z 
2025-02-24T15:57:56.7628420Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7628590Z ___ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-j_blues] ____
2025-02-24T15:57:56.7628590Z 
2025-02-24T15:57:56.7628700Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7628810Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7628890Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7629000Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7629110Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7629180Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7629230Z err_msg = None
2025-02-24T15:57:56.7629230Z 
2025-02-24T15:57:56.7629320Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7629380Z         if err_msg is None:
2025-02-24T15:57:56.7629450Z             if left.shape != right.shape:
2025-02-24T15:57:56.7629510Z                 raise_assert_detail(
2025-02-24T15:57:56.7629630Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7629670Z                 )
2025-02-24T15:57:56.7629720Z     
2025-02-24T15:57:56.7629760Z             diff = 0
2025-02-24T15:57:56.7629850Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7629920Z                 # count up differences
2025-02-24T15:57:56.7630050Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7630110Z                     diff += 1
2025-02-24T15:57:56.7630150Z     
2025-02-24T15:57:56.7630210Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7630320Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7630460Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7630540Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7630590Z E           
2025-02-24T15:57:56.7630680Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7630950Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7631180Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7631180Z 
2025-02-24T15:57:56.7631430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7631490Z 
2025-02-24T15:57:56.7631630Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7631630Z 
2025-02-24T15:57:56.7631810Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd54f0>
2025-02-24T15:57:56.7631970Z plasma = <tardis.plasma.base.BasePlasma object at 0x1761b3230>, attr = 'j_blues'
2025-02-24T15:57:56.7631970Z 
2025-02-24T15:57:56.7632080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7632170Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7632240Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7632280Z         try:
2025-02-24T15:57:56.7632390Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7632450Z         except KeyError:
2025-02-24T15:57:56.7632560Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7632610Z     
2025-02-24T15:57:56.7632670Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7632740Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7632800Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7632900Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7632960Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7633030Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7633120Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7633170Z             else:
2025-02-24T15:57:56.7633230Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7633320Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7633330Z 
2025-02-24T15:57:56.7633420Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7633510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7633620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7633670Z     ???
2025-02-24T15:57:56.7633760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7633770Z 
2025-02-24T15:57:56.7633810Z >   ???
2025-02-24T15:57:56.7633910Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7633950Z E   
2025-02-24T15:57:56.7634050Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7634140Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7634180Z E          ...
2025-02-24T15:57:56.7634250Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7634340Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7634440Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7634480Z E          ...
2025-02-24T15:57:56.7634550Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7634640Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7634720Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7634720Z 
2025-02-24T15:57:56.7634790Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7634990Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] _
2025-02-24T15:57:56.7634990Z 
2025-02-24T15:57:56.7635170Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7635280Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7635360Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7635470Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7635570Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7635650Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7635770Z err_msg = None
2025-02-24T15:57:56.7635770Z 
2025-02-24T15:57:56.7635860Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7635910Z         if err_msg is None:
2025-02-24T15:57:56.7635980Z             if left.shape != right.shape:
2025-02-24T15:57:56.7636040Z                 raise_assert_detail(
2025-02-24T15:57:56.7636160Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7636210Z                 )
2025-02-24T15:57:56.7636250Z     
2025-02-24T15:57:56.7636300Z             diff = 0
2025-02-24T15:57:56.7636380Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7636440Z                 # count up differences
2025-02-24T15:57:56.7636580Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7636630Z                     diff += 1
2025-02-24T15:57:56.7636680Z     
2025-02-24T15:57:56.7636740Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7636850Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7636990Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7637070Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7637120Z E           
2025-02-24T15:57:56.7637210Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7637420Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7637630Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7637640Z 
2025-02-24T15:57:56.7637880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7637880Z 
2025-02-24T15:57:56.7638020Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7638020Z 
2025-02-24T15:57:56.7638190Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd6270>
2025-02-24T15:57:56.7638350Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a53ac60>, attr = 'lines'
2025-02-24T15:57:56.7638350Z 
2025-02-24T15:57:56.7638460Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7638540Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7638600Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7638640Z         try:
2025-02-24T15:57:56.7638760Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7638810Z         except KeyError:
2025-02-24T15:57:56.7638920Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7638970Z     
2025-02-24T15:57:56.7639030Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7639100Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7639210Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7639330Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7639390Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7639460Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7639540Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7639590Z             else:
2025-02-24T15:57:56.7639660Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7639740Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7639750Z 
2025-02-24T15:57:56.7639840Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7639980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7640100Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7640140Z     ???
2025-02-24T15:57:56.7640240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7640240Z 
2025-02-24T15:57:56.7640290Z >   ???
2025-02-24T15:57:56.7640390Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7640440Z E   
2025-02-24T15:57:56.7640550Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7640630Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7640680Z E          ...
2025-02-24T15:57:56.7640750Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7640860Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7640950Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7640990Z E          ...
2025-02-24T15:57:56.7641060Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7641160Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7641240Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7641250Z 
2025-02-24T15:57:56.7641320Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7641570Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] _
2025-02-24T15:57:56.7641570Z 
2025-02-24T15:57:56.7641750Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd6330>
2025-02-24T15:57:56.7641870Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a53ac60>
2025-02-24T15:57:56.7641940Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.7641940Z 
2025-02-24T15:57:56.7642050Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7642140Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7642200Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7642250Z         try:
2025-02-24T15:57:56.7642360Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7642420Z         except KeyError:
2025-02-24T15:57:56.7642530Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7642580Z     
2025-02-24T15:57:56.7642640Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7642710Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7642780Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7642880Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7642950Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7643010Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7643100Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7643100Z 
2025-02-24T15:57:56.7643200Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7643290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7643300Z 
2025-02-24T15:57:56.7643410Z left = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7643470Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7643600Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7643660Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7643780Z right = array([49, 49, 49, 49, 49, 49, 49, 49,  0,  0,  0,  0, 50, 50, 51, 51, 52,
2025-02-24T15:57:56.7643840Z        52, 52, 50, 51, 50, 51, 52, 52, 52, ...
2025-02-24T15:57:56.7643930Z        21,  8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7643990Z        21, 15, 25, 23, 22, 22, 23, 24, 25])
2025-02-24T15:57:56.7644040Z err_msg = None
2025-02-24T15:57:56.7644040Z 
2025-02-24T15:57:56.7644120Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7644230Z         if err_msg is None:
2025-02-24T15:57:56.7644300Z             if left.shape != right.shape:
2025-02-24T15:57:56.7644360Z                 raise_assert_detail(
2025-02-24T15:57:56.7644470Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7644520Z                 )
2025-02-24T15:57:56.7644570Z     
2025-02-24T15:57:56.7644620Z             diff = 0
2025-02-24T15:57:56.7644710Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7644770Z                 # count up differences
2025-02-24T15:57:56.7644910Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7644970Z                     diff += 1
2025-02-24T15:57:56.7645010Z     
2025-02-24T15:57:56.7645070Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7645180Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7645310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7645390Z E           AssertionError: Series are different
2025-02-24T15:57:56.7645440Z E           
2025-02-24T15:57:56.7645520Z E           Series values are different (4.04858 %)
2025-02-24T15:57:56.7645830Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7646110Z E           [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7646390Z E           [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7646390Z 
2025-02-24T15:57:56.7646640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7646880Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] _
2025-02-24T15:57:56.7646880Z 
2025-02-24T15:57:56.7647060Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd63f0>
2025-02-24T15:57:56.7647180Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a53ac60>
2025-02-24T15:57:56.7647250Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.7647250Z 
2025-02-24T15:57:56.7647360Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7647450Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7647510Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7647590Z         try:
2025-02-24T15:57:56.7647710Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7647760Z         except KeyError:
2025-02-24T15:57:56.7647870Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7647920Z     
2025-02-24T15:57:56.7647980Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7648050Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7648110Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7648210Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7648270Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7648380Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7648470Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7648470Z 
2025-02-24T15:57:56.7648660Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7648760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7648770Z 
2025-02-24T15:57:56.7648880Z left = array([68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7648940Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7649030Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7649090Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7649200Z right = array([65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16,  6, 67, 66, 68, 65, 69,
2025-02-24T15:57:56.7649260Z        67, 66, 60, 61, 59, 58, 62, 60, 59, ...
2025-02-24T15:57:56.7649350Z        31, 16, 21, 20, 19, 30, 14, 14, 13, 12, 13, 14, 24, 24, 23, 22, 23,
2025-02-24T15:57:56.7649410Z        24, 16, 30, 28, 27, 26, 26, 28, 29])
2025-02-24T15:57:56.7649460Z err_msg = None
2025-02-24T15:57:56.7649460Z 
2025-02-24T15:57:56.7649540Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7649600Z         if err_msg is None:
2025-02-24T15:57:56.7649670Z             if left.shape != right.shape:
2025-02-24T15:57:56.7649730Z                 raise_assert_detail(
2025-02-24T15:57:56.7649840Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7649890Z                 )
2025-02-24T15:57:56.7649930Z     
2025-02-24T15:57:56.7649980Z             diff = 0
2025-02-24T15:57:56.7650060Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7650120Z                 # count up differences
2025-02-24T15:57:56.7650260Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7650310Z                     diff += 1
2025-02-24T15:57:56.7650360Z     
2025-02-24T15:57:56.7650420Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7650530Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7650660Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7650740Z E           AssertionError: Series are different
2025-02-24T15:57:56.7650790Z E           
2025-02-24T15:57:56.7650870Z E           Series values are different (6.47773 %)
2025-02-24T15:57:56.7651170Z E           [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7651800Z E           [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7652130Z E           [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.7652140Z 
2025-02-24T15:57:56.7652380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7652650Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] _
2025-02-24T15:57:56.7652650Z 
2025-02-24T15:57:56.7652760Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7652870Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7652950Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7653050Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7653150Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7653230Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7653270Z err_msg = None
2025-02-24T15:57:56.7653280Z 
2025-02-24T15:57:56.7653360Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7653420Z         if err_msg is None:
2025-02-24T15:57:56.7653490Z             if left.shape != right.shape:
2025-02-24T15:57:56.7653550Z                 raise_assert_detail(
2025-02-24T15:57:56.7653670Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7653710Z                 )
2025-02-24T15:57:56.7653760Z     
2025-02-24T15:57:56.7653810Z             diff = 0
2025-02-24T15:57:56.7653890Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7653950Z                 # count up differences
2025-02-24T15:57:56.7654080Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7654140Z                     diff += 1
2025-02-24T15:57:56.7654190Z     
2025-02-24T15:57:56.7654250Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7654360Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7654490Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7654580Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7654630Z E           
2025-02-24T15:57:56.7654710Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7654930Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7655140Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7655150Z 
2025-02-24T15:57:56.7655380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7655390Z 
2025-02-24T15:57:56.7655520Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7655530Z 
2025-02-24T15:57:56.7655700Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd6630>
2025-02-24T15:57:56.7655890Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a53ac60>, attr = 'nu'
2025-02-24T15:57:56.7655890Z 
2025-02-24T15:57:56.7656010Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7656100Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7656160Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7656200Z         try:
2025-02-24T15:57:56.7656320Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7656370Z         except KeyError:
2025-02-24T15:57:56.7656480Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7656620Z     
2025-02-24T15:57:56.7656680Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7656750Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7656810Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7656920Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7656980Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7657050Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7657130Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7657140Z 
2025-02-24T15:57:56.7657240Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7657330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7657450Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7657500Z     ???
2025-02-24T15:57:56.7657580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7657590Z 
2025-02-24T15:57:56.7657630Z >   ???
2025-02-24T15:57:56.7657730Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7657770Z E   
2025-02-24T15:57:56.7657870Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7657960Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7658000Z E          ...
2025-02-24T15:57:56.7658080Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7658180Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7658260Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7658320Z E          ...
2025-02-24T15:57:56.7658380Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7658480Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7658550Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7658560Z 
2025-02-24T15:57:56.7658620Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7658850Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] _
2025-02-24T15:57:56.7658860Z 
2025-02-24T15:57:56.7658960Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7659070Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7659140Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7659250Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7659360Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7659430Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7659480Z err_msg = None
2025-02-24T15:57:56.7659480Z 
2025-02-24T15:57:56.7659560Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7659620Z         if err_msg is None:
2025-02-24T15:57:56.7659690Z             if left.shape != right.shape:
2025-02-24T15:57:56.7659750Z                 raise_assert_detail(
2025-02-24T15:57:56.7659860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7659910Z                 )
2025-02-24T15:57:56.7659960Z     
2025-02-24T15:57:56.7660050Z             diff = 0
2025-02-24T15:57:56.7660130Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7660200Z                 # count up differences
2025-02-24T15:57:56.7660340Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7660400Z                     diff += 1
2025-02-24T15:57:56.7660440Z     
2025-02-24T15:57:56.7660510Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7660620Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7660750Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7660890Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7660940Z E           
2025-02-24T15:57:56.7661030Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7661240Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7661460Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7661470Z 
2025-02-24T15:57:56.7661710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7661720Z 
2025-02-24T15:57:56.7661850Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7661850Z 
2025-02-24T15:57:56.7662020Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd66f0>
2025-02-24T15:57:56.7662150Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a53ac60>
2025-02-24T15:57:56.7662210Z attr = 'wavelength_cm'
2025-02-24T15:57:56.7662210Z 
2025-02-24T15:57:56.7662320Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7662410Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7662470Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7662520Z         try:
2025-02-24T15:57:56.7662630Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7662680Z         except KeyError:
2025-02-24T15:57:56.7662800Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7662850Z     
2025-02-24T15:57:56.7662930Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7663000Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7663060Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7663170Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7663230Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7663300Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7663390Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7663390Z 
2025-02-24T15:57:56.7663490Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7663580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7663700Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7663740Z     ???
2025-02-24T15:57:56.7663830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7663840Z 
2025-02-24T15:57:56.7663880Z >   ???
2025-02-24T15:57:56.7663990Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7664030Z E   
2025-02-24T15:57:56.7664130Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7664220Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7664330Z E          ...
2025-02-24T15:57:56.7664400Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7664510Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7664600Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7664640Z E          ...
2025-02-24T15:57:56.7664710Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7664810Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7664890Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7664890Z 
2025-02-24T15:57:56.7664990Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7665190Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] _
2025-02-24T15:57:56.7665200Z 
2025-02-24T15:57:56.7665300Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7665410Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7665490Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7665590Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7665700Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7665770Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7665820Z err_msg = None
2025-02-24T15:57:56.7665820Z 
2025-02-24T15:57:56.7665910Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7665970Z         if err_msg is None:
2025-02-24T15:57:56.7666040Z             if left.shape != right.shape:
2025-02-24T15:57:56.7666100Z                 raise_assert_detail(
2025-02-24T15:57:56.7666220Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7666260Z                 )
2025-02-24T15:57:56.7666310Z     
2025-02-24T15:57:56.7666360Z             diff = 0
2025-02-24T15:57:56.7666450Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7666510Z                 # count up differences
2025-02-24T15:57:56.7666650Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7666710Z                     diff += 1
2025-02-24T15:57:56.7666750Z     
2025-02-24T15:57:56.7666810Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7666920Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7667060Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7667150Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7667200Z E           
2025-02-24T15:57:56.7667290Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7667510Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7667730Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7667730Z 
2025-02-24T15:57:56.7667980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7667980Z 
2025-02-24T15:57:56.7668120Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7668120Z 
2025-02-24T15:57:56.7668370Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd67b0>
2025-02-24T15:57:56.7668550Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a53ac60>, attr = 'f_lu'
2025-02-24T15:57:56.7668550Z 
2025-02-24T15:57:56.7668660Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7668740Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7668810Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7668860Z         try:
2025-02-24T15:57:56.7668970Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7669020Z         except KeyError:
2025-02-24T15:57:56.7669130Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7669260Z     
2025-02-24T15:57:56.7669320Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7669390Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7669450Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7669560Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7669630Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7669700Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7669780Z >               pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7669780Z 
2025-02-24T15:57:56.7669880Z tardis/plasma/tests/test_complete_plasmas.py:192: 
2025-02-24T15:57:56.7669970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7670090Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7670140Z     ???
2025-02-24T15:57:56.7670230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7670240Z 
2025-02-24T15:57:56.7670280Z >   ???
2025-02-24T15:57:56.7670380Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7670430Z E   
2025-02-24T15:57:56.7670520Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7670610Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7670660Z E          ...
2025-02-24T15:57:56.7670730Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7670830Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7670920Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7670970Z E          ...
2025-02-24T15:57:56.7671040Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7671130Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7671210Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7671210Z 
2025-02-24T15:57:56.7671280Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7671500Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] _
2025-02-24T15:57:56.7671510Z 
2025-02-24T15:57:56.7671620Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7671720Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7671800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7671910Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7672010Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7672090Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7672140Z err_msg = None
2025-02-24T15:57:56.7672140Z 
2025-02-24T15:57:56.7672230Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7672290Z         if err_msg is None:
2025-02-24T15:57:56.7672360Z             if left.shape != right.shape:
2025-02-24T15:57:56.7672420Z                 raise_assert_detail(
2025-02-24T15:57:56.7672550Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7672590Z                 )
2025-02-24T15:57:56.7672680Z     
2025-02-24T15:57:56.7672740Z             diff = 0
2025-02-24T15:57:56.7676630Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7676750Z                 # count up differences
2025-02-24T15:57:56.7676890Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7676950Z                     diff += 1
2025-02-24T15:57:56.7676990Z     
2025-02-24T15:57:56.7677070Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7677170Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7677310Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7677640Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7677690Z E           
2025-02-24T15:57:56.7677780Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7677990Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7678210Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7678220Z 
2025-02-24T15:57:56.7678470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7678470Z 
2025-02-24T15:57:56.7678610Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7678610Z 
2025-02-24T15:57:56.7678790Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd6f30>
2025-02-24T15:57:56.7678920Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a53ac60>
2025-02-24T15:57:56.7678970Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.7678970Z 
2025-02-24T15:57:56.7679080Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7679170Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7679230Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7679280Z         try:
2025-02-24T15:57:56.7679400Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7679450Z         except KeyError:
2025-02-24T15:57:56.7679570Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7679610Z     
2025-02-24T15:57:56.7679680Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7679750Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7679820Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7679930Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7679990Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7680070Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7680150Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7680200Z             else:
2025-02-24T15:57:56.7680270Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7680360Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7680360Z 
2025-02-24T15:57:56.7680460Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7680560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7680670Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7680720Z     ???
2025-02-24T15:57:56.7680810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7680810Z 
2025-02-24T15:57:56.7680860Z >   ???
2025-02-24T15:57:56.7681010Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7681050Z E   
2025-02-24T15:57:56.7681160Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7681250Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7681300Z E          ...
2025-02-24T15:57:56.7681360Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7681470Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7681550Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7681600Z E          ...
2025-02-24T15:57:56.7681670Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7681820Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7681910Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7681910Z 
2025-02-24T15:57:56.7681970Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7682210Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] _
2025-02-24T15:57:56.7682210Z 
2025-02-24T15:57:56.7682320Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7682430Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7682510Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7682620Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7682730Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7682800Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7682860Z err_msg = None
2025-02-24T15:57:56.7682860Z 
2025-02-24T15:57:56.7682940Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7683000Z         if err_msg is None:
2025-02-24T15:57:56.7683070Z             if left.shape != right.shape:
2025-02-24T15:57:56.7683140Z                 raise_assert_detail(
2025-02-24T15:57:56.7683260Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7683300Z                 )
2025-02-24T15:57:56.7683350Z     
2025-02-24T15:57:56.7683400Z             diff = 0
2025-02-24T15:57:56.7683480Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7683550Z                 # count up differences
2025-02-24T15:57:56.7683690Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7683740Z                     diff += 1
2025-02-24T15:57:56.7683790Z     
2025-02-24T15:57:56.7683860Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7683970Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7684110Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7684200Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7684250Z E           
2025-02-24T15:57:56.7684330Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7684540Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7684750Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7684760Z 
2025-02-24T15:57:56.7685010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7685060Z 
2025-02-24T15:57:56.7685200Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7685200Z 
2025-02-24T15:57:56.7685380Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd6ff0>
2025-02-24T15:57:56.7685500Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a53ac60>
2025-02-24T15:57:56.7685560Z attr = 'beta_sobolev'
2025-02-24T15:57:56.7685560Z 
2025-02-24T15:57:56.7685670Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7685760Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7685820Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7685910Z         try:
2025-02-24T15:57:56.7686020Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7686080Z         except KeyError:
2025-02-24T15:57:56.7686190Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7686230Z     
2025-02-24T15:57:56.7686300Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7686370Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7686430Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7686550Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7686610Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7686680Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7686760Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7686810Z             else:
2025-02-24T15:57:56.7686880Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7686960Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7686970Z 
2025-02-24T15:57:56.7687060Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7687150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7687270Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7687310Z     ???
2025-02-24T15:57:56.7687400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7687400Z 
2025-02-24T15:57:56.7687450Z >   ???
2025-02-24T15:57:56.7687550Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7687600Z E   
2025-02-24T15:57:56.7687690Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7687780Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7687820Z E          ...
2025-02-24T15:57:56.7687900Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7687990Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7688090Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7688140Z E          ...
2025-02-24T15:57:56.7688200Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7688300Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7688380Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7688380Z 
2025-02-24T15:57:56.7688450Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7688750Z _ TestPlasma.test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] _
2025-02-24T15:57:56.7688750Z 
2025-02-24T15:57:56.7688860Z left = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7688960Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7689040Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7689150Z right = array([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  2,  2,  3,
2025-02-24T15:57:56.7689250Z         3,  3,  1,  2,  1,  2,  3,  3,  3, ... 8, 17, 17, 17, 18,  9, 10,  9,  9, 10, 11, 19, 20, 19, 19, 20,
2025-02-24T15:57:56.7689320Z        21, 15, 25, 23, 22, 22, 23, 24, 25], dtype=int8)
2025-02-24T15:57:56.7689460Z err_msg = None
2025-02-24T15:57:56.7689460Z 
2025-02-24T15:57:56.7689550Z     def _raise(left, right, err_msg) -> NoReturn:
2025-02-24T15:57:56.7689610Z         if err_msg is None:
2025-02-24T15:57:56.7689680Z             if left.shape != right.shape:
2025-02-24T15:57:56.7689740Z                 raise_assert_detail(
2025-02-24T15:57:56.7689860Z                     obj, f"{obj} shapes are different", left.shape, right.shape
2025-02-24T15:57:56.7689910Z                 )
2025-02-24T15:57:56.7689950Z     
2025-02-24T15:57:56.7689990Z             diff = 0
2025-02-24T15:57:56.7690080Z             for left_arr, right_arr in zip(left, right):
2025-02-24T15:57:56.7690220Z                 # count up differences
2025-02-24T15:57:56.7690360Z                 if not array_equivalent(left_arr, right_arr, strict_nan=strict_nan):
2025-02-24T15:57:56.7690410Z                     diff += 1
2025-02-24T15:57:56.7690460Z     
2025-02-24T15:57:56.7690520Z             diff = diff * 100.0 / left.size
2025-02-24T15:57:56.7690630Z             msg = f"{obj} values are different ({np.round(diff, 5)} %)"
2025-02-24T15:57:56.7690770Z >           raise_assert_detail(obj, msg, left, right, index_values=index_values)
2025-02-24T15:57:56.7690850Z E           AssertionError: numpy array are different
2025-02-24T15:57:56.7690900Z E           
2025-02-24T15:57:56.7690990Z E           numpy array values are different (4.04858 %)
2025-02-24T15:57:56.7691200Z E           [left]:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 6, 7, 6, 7, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7691420Z E           [right]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1, 4, 5, 4, 5, 7, 7, 6, 7, 6, 8, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 4, 5, 4, 5, 7, 6, 7, 6, 8, 8, 8, 7, 6, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.7691420Z 
2025-02-24T15:57:56.7691660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pandas/_testing/asserters.py:684: AssertionError
2025-02-24T15:57:56.7691660Z 
2025-02-24T15:57:56.7691790Z During handling of the above exception, another exception occurred:
2025-02-24T15:57:56.7691800Z 
2025-02-24T15:57:56.7691970Z self = <tardis.plasma.tests.test_complete_plasmas.TestPlasma object at 0x13fbd7170>
2025-02-24T15:57:56.7692130Z plasma = <tardis.plasma.base.BasePlasma object at 0x31a53ac60>, attr = 'j_blues'
2025-02-24T15:57:56.7692130Z 
2025-02-24T15:57:56.7692240Z     @pytest.mark.parametrize("attr", combined_properties)
2025-02-24T15:57:56.7692330Z     def test_plasma_properties(self, plasma, attr):
2025-02-24T15:57:56.7692390Z         key = f"plasma/{attr}"
2025-02-24T15:57:56.7692440Z         try:
2025-02-24T15:57:56.7692550Z             expected = pd.read_hdf(self.regression_data.fpath, key)
2025-02-24T15:57:56.7692610Z         except KeyError:
2025-02-24T15:57:56.7692720Z             pytest.skip(f"Key {key} not found in regression data")
2025-02-24T15:57:56.7692760Z     
2025-02-24T15:57:56.7692830Z         if hasattr(plasma, attr):
2025-02-24T15:57:56.7692900Z             actual = getattr(plasma, attr)
2025-02-24T15:57:56.7692960Z             if attr == "selected_atoms":
2025-02-24T15:57:56.7693070Z                 npt.assert_allclose(actual.values, expected.values)
2025-02-24T15:57:56.7693120Z             elif actual.ndim == 1:
2025-02-24T15:57:56.7693200Z                 actual = pd.Series(actual)
2025-02-24T15:57:56.7693280Z                 pdt.assert_series_equal(actual, expected)
2025-02-24T15:57:56.7693330Z             else:
2025-02-24T15:57:56.7693400Z                 actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7693490Z >               pdt.assert_frame_equal(actual, expected)
2025-02-24T15:57:56.7693490Z 
2025-02-24T15:57:56.7693580Z tardis/plasma/tests/test_complete_plasmas.py:195: 
2025-02-24T15:57:56.7693710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7693830Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7693870Z     ???
2025-02-24T15:57:56.7693960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7693970Z 
2025-02-24T15:57:56.7694010Z >   ???
2025-02-24T15:57:56.7694110Z E   AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.7694150Z E   
2025-02-24T15:57:56.7694250Z E   MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.7694340Z E   [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7694430Z E          ...
2025-02-24T15:57:56.7694500Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7694600Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7694690Z E   [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.7694740Z E          ...
2025-02-24T15:57:56.7694810Z E          20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.7694910Z E         dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.7694980Z E   At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.7694990Z 
2025-02-24T15:57:56.7695050Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7695190Z _________________ test_hdf_plasma[stimulated_emission_factor] __________________
2025-02-24T15:57:56.7695190Z 
2025-02-24T15:57:56.7695360Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x140c5b3e0>
2025-02-24T15:57:56.7695440Z attr = 'stimulated_emission_factor'
2025-02-24T15:57:56.7695650Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x14134b5f0>
2025-02-24T15:57:56.7695650Z 
2025-02-24T15:57:56.7695760Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:57:56.7695900Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:57:56.7696000Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:57:56.7696100Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:57:56.7696190Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:57:56.7696260Z             if hasattr(actual, "cgs"):
2025-02-24T15:57:56.7696330Z                 actual = actual.cgs.value
2025-02-24T15:57:56.7696400Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:57:56.7696410Z 
2025-02-24T15:57:56.7696480Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:57:56.7696570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7696580Z 
2025-02-24T15:57:56.7696820Z args = (<function assert_allclose.<locals>.compare at 0x30b0ac4a0>, array([[0.        , 0.        , 0.        , ..., 0.      ...1,
2025-02-24T15:57:56.7696870Z         0.01476858],
2025-02-24T15:57:56.7696990Z        [0.01433244, 0.01435378, 0.01437513, ..., 0.0146952 , 0.01471653,
2025-02-24T15:57:56.7697030Z         0.01473787]]))
2025-02-24T15:57:56.7697240Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7697240Z 
2025-02-24T15:57:56.7697290Z     @wraps(func)
2025-02-24T15:57:56.7697350Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7697420Z         with self._recreate_cm():
2025-02-24T15:57:56.7697480Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7697550Z E           AssertionError: 
2025-02-24T15:57:56.7697630Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7697680Z E           
2025-02-24T15:57:56.7697760Z E           Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T15:57:56.7697840Z E           Max absolute difference: 1.
2025-02-24T15:57:56.7697900Z E           Max relative difference: 1.
2025-02-24T15:57:56.7698010Z E            x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:57:56.7698140Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:57:56.7698230Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:57:56.7698330Z E            y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:57:56.7698420Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:57:56.7698510Z E                  [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:57:56.7698510Z 
2025-02-24T15:57:56.7698670Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7698860Z ___________________ test_hdf_plasma[lines_lower_level_index] ___________________
2025-02-24T15:57:56.7698860Z 
2025-02-24T15:57:56.7699040Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x140c5b3e0>
2025-02-24T15:57:56.7699100Z attr = 'lines_lower_level_index'
2025-02-24T15:57:56.7699320Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x317ff32c0>
2025-02-24T15:57:56.7699320Z 
2025-02-24T15:57:56.7699430Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:57:56.7699570Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:57:56.7699660Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:57:56.7699770Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:57:56.7699870Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:57:56.7699930Z             if hasattr(actual, "cgs"):
2025-02-24T15:57:56.7700010Z                 actual = actual.cgs.value
2025-02-24T15:57:56.7700090Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:57:56.7700090Z 
2025-02-24T15:57:56.7700180Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:57:56.7700270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7700270Z 
2025-02-24T15:57:56.7700580Z args = (<function assert_allclose.<locals>.compare at 0x30b0ac720>, array([2577, 2577, 2577, ..., 3886, 3846, 3885]), array([2577, 2577, 2577, ..., 3886, 3846, 3885]))
2025-02-24T15:57:56.7700780Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7700790Z 
2025-02-24T15:57:56.7700840Z     @wraps(func)
2025-02-24T15:57:56.7700900Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7700960Z         with self._recreate_cm():
2025-02-24T15:57:56.7701030Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7701100Z E           AssertionError: 
2025-02-24T15:57:56.7701180Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7701230Z E           
2025-02-24T15:57:56.7701310Z E           Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T15:57:56.7701380Z E           Max absolute difference: 4005
2025-02-24T15:57:56.7701460Z E           Max relative difference: 26.00649351
2025-02-24T15:57:56.7701550Z E            x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:57:56.7701620Z E            y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:57:56.7701630Z 
2025-02-24T15:57:56.7701790Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7701920Z ___________________ test_hdf_plasma[lines_upper_level_index] ___________________
2025-02-24T15:57:56.7701920Z 
2025-02-24T15:57:56.7702100Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x140c5b3e0>
2025-02-24T15:57:56.7702160Z attr = 'lines_upper_level_index'
2025-02-24T15:57:56.7702370Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x13fbd6480>
2025-02-24T15:57:56.7702370Z 
2025-02-24T15:57:56.7702480Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:57:56.7702610Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:57:56.7702750Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:57:56.7702850Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:57:56.7702950Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:57:56.7703010Z             if hasattr(actual, "cgs"):
2025-02-24T15:57:56.7703080Z                 actual = actual.cgs.value
2025-02-24T15:57:56.7703160Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:57:56.7703160Z 
2025-02-24T15:57:56.7703240Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:57:56.7703330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7703380Z 
2025-02-24T15:57:56.7703680Z args = (<function assert_allclose.<locals>.compare at 0x30b0aee80>, array([2613, 2612, 2611, ..., 3899, 3852, 3898]), array([2613, 2612, 2611, ..., 3899, 3852, 3898]))
2025-02-24T15:57:56.7703880Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7703880Z 
2025-02-24T15:57:56.7703930Z     @wraps(func)
2025-02-24T15:57:56.7703990Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7704050Z         with self._recreate_cm():
2025-02-24T15:57:56.7704120Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7704180Z E           AssertionError: 
2025-02-24T15:57:56.7704260Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7704310Z E           
2025-02-24T15:57:56.7704380Z E           Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T15:57:56.7704460Z E           Max absolute difference: 4046
2025-02-24T15:57:56.7704530Z E           Max relative difference: 24.82208589
2025-02-24T15:57:56.7704620Z E            x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:57:56.7704690Z E            y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:57:56.7704700Z 
2025-02-24T15:57:56.7704860Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7704980Z ________________________ test_hdf_plasma[beta_sobolev] _________________________
2025-02-24T15:57:56.7704980Z 
2025-02-24T15:57:56.7705150Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x140c5b3e0>
2025-02-24T15:57:56.7705210Z attr = 'beta_sobolev'
2025-02-24T15:57:56.7705410Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x30f22c710>
2025-02-24T15:57:56.7705410Z 
2025-02-24T15:57:56.7705530Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:57:56.7705660Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:57:56.7705750Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:57:56.7705850Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:57:56.7705950Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:57:56.7706010Z             if hasattr(actual, "cgs"):
2025-02-24T15:57:56.7706080Z                 actual = actual.cgs.value
2025-02-24T15:57:56.7706160Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:57:56.7706160Z 
2025-02-24T15:57:56.7706240Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:57:56.7706330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7706330Z 
2025-02-24T15:57:56.7706530Z args = (<function assert_allclose.<locals>.compare at 0x30b0ad3a0>, array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.7706580Z        [1., 1., 1.,.....,
2025-02-24T15:57:56.7706640Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.7706700Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.7706750Z        [1., 1., 1., ..., 1., 1., 1.]]))
2025-02-24T15:57:56.7706950Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7706950Z 
2025-02-24T15:57:56.7707000Z     @wraps(func)
2025-02-24T15:57:56.7707130Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7707200Z         with self._recreate_cm():
2025-02-24T15:57:56.7707270Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7707330Z E           AssertionError: 
2025-02-24T15:57:56.7707410Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7707460Z E           
2025-02-24T15:57:56.7707540Z E           Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:57:56.7707620Z E           Max absolute difference: 0.99984222
2025-02-24T15:57:56.7707690Z E           Max relative difference: 6337.12154973
2025-02-24T15:57:56.7707770Z E            x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.7707920Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.7707990Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:57:56.7708060Z E            y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.7708130Z E                  [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.7708200Z E                  [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:57:56.7708200Z 
2025-02-24T15:57:56.7708370Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7708490Z ____________________________ test_hdf_plasma[lines] ____________________________
2025-02-24T15:57:56.7708490Z 
2025-02-24T15:57:56.7708660Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x140c5b3e0>
2025-02-24T15:57:56.7708710Z attr = 'lines'
2025-02-24T15:57:56.7708920Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x317ff1850>
2025-02-24T15:57:56.7708920Z 
2025-02-24T15:57:56.7709030Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:57:56.7709170Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:57:56.7709270Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:57:56.7709380Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:57:56.7709470Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:57:56.7709540Z             if hasattr(actual, "cgs"):
2025-02-24T15:57:56.7709610Z                 actual = actual.cgs.value
2025-02-24T15:57:56.7709690Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:57:56.7709690Z 
2025-02-24T15:57:56.7709770Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:57:56.7709860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7709860Z 
2025-02-24T15:57:56.7710210Z args = (<function assert_allclose.<locals>.compare at 0x14b09cc20>, array([[6.78130000e+04, 6.67720000e+01, 2.70301683e-02, ....       [1.04462000e+05, 9.99900019e+05, 2.64868307e-04, ...,
2025-02-24T15:57:56.7710300Z         4.44653904e+09, 1.76709163e+00, 9.99900019e-03]]))
2025-02-24T15:57:56.7710500Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7710500Z 
2025-02-24T15:57:56.7710550Z     @wraps(func)
2025-02-24T15:57:56.7710610Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7710670Z         with self._recreate_cm():
2025-02-24T15:57:56.7710730Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7710790Z E           AssertionError: 
2025-02-24T15:57:56.7710870Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7710910Z E           
2025-02-24T15:57:56.7710990Z E           Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T15:57:56.7711070Z E           Max absolute difference: 4.25260542e+12
2025-02-24T15:57:56.7711140Z E           Max relative difference: 18196.0085861
2025-02-24T15:57:56.7711260Z E            x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:57:56.7711330Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T15:57:56.7711440Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:57:56.7711610Z E            y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:57:56.7711680Z E                   4.043917e+10, 6.677200e-07],
2025-02-24T15:57:56.7711790Z E                  [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:57:56.7711800Z 
2025-02-24T15:57:56.7711950Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7712070Z ____________________________ test_hdf_plasma[f_lu] _____________________________
2025-02-24T15:57:56.7712070Z 
2025-02-24T15:57:56.7712240Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x140c5b3e0>
2025-02-24T15:57:56.7712330Z attr = 'f_lu'
2025-02-24T15:57:56.7712540Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x13fbd6e40>
2025-02-24T15:57:56.7712550Z 
2025-02-24T15:57:56.7712660Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:57:56.7712800Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:57:56.7712890Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:57:56.7713000Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:57:56.7713090Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:57:56.7713160Z             if hasattr(actual, "cgs"):
2025-02-24T15:57:56.7713230Z                 actual = actual.cgs.value
2025-02-24T15:57:56.7713300Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:57:56.7713310Z 
2025-02-24T15:57:56.7713380Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:57:56.7713470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7713480Z 
2025-02-24T15:57:56.7713840Z args = (<function assert_allclose.<locals>.compare at 0x30b0ac4a0>, array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, .....), array([4.05452524e-02, 8.66842126e-02, 9.28838073e-02, ...,
2025-02-24T15:57:56.7713920Z        9.93184643e-04, 1.12688279e+00, 4.41447178e-04]))
2025-02-24T15:57:56.7714130Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7714130Z 
2025-02-24T15:57:56.7714180Z     @wraps(func)
2025-02-24T15:57:56.7714240Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7714310Z         with self._recreate_cm():
2025-02-24T15:57:56.7714370Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7714430Z E           AssertionError: 
2025-02-24T15:57:56.7714510Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7714600Z E           
2025-02-24T15:57:56.7714680Z E           Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T15:57:56.7714760Z E           Max absolute difference: 2.92713618
2025-02-24T15:57:56.7714840Z E           Max relative difference: 18196.0085861
2025-02-24T15:57:56.7714960Z E            x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:57:56.7715020Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T15:57:56.7715150Z E            y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:57:56.7715220Z E                  1.126883e+00, 4.414472e-04])
2025-02-24T15:57:56.7715220Z 
2025-02-24T15:57:56.7715380Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7715500Z ________________________ test_hdf_plasma[tau_sobolevs] _________________________
2025-02-24T15:57:56.7715510Z 
2025-02-24T15:57:56.7715680Z simulation_verysimple = <tardis.simulation.base.Simulation object at 0x140c5b3e0>
2025-02-24T15:57:56.7715740Z attr = 'tau_sobolevs'
2025-02-24T15:57:56.7715960Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x30f22d1f0>
2025-02-24T15:57:56.7715960Z 
2025-02-24T15:57:56.7716080Z     @pytest.mark.parametrize("attr", plasma_properties_list)
2025-02-24T15:57:56.7716210Z     def test_hdf_plasma(simulation_verysimple, attr, regression_data):
2025-02-24T15:57:56.7716400Z         if hasattr(simulation_verysimple.plasma, attr):
2025-02-24T15:57:56.7716510Z             actual = getattr(simulation_verysimple.plasma, attr)
2025-02-24T15:57:56.7716600Z             expected = regression_data.sync_ndarray(actual)
2025-02-24T15:57:56.7716670Z             if hasattr(actual, "cgs"):
2025-02-24T15:57:56.7716740Z                 actual = actual.cgs.value
2025-02-24T15:57:56.7716810Z >           npt.assert_allclose(actual, expected)
2025-02-24T15:57:56.7716820Z 
2025-02-24T15:57:56.7716890Z tardis/plasma/tests/test_hdf_plasma.py:53: 
2025-02-24T15:57:56.7716990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7717030Z 
2025-02-24T15:57:56.7717390Z args = (<function assert_allclose.<locals>.compare at 0x30b0add00>, array([[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, ....       [7.57366002e-14, 3.42661945e-14, 1.59795775e-14, ...,
2025-02-24T15:57:56.7717480Z         2.25618458e-18, 1.41426559e-18, 8.96636158e-19]]))
2025-02-24T15:57:56.7717680Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7717680Z 
2025-02-24T15:57:56.7717730Z     @wraps(func)
2025-02-24T15:57:56.7717800Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7717860Z         with self._recreate_cm():
2025-02-24T15:57:56.7717920Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7717980Z E           AssertionError: 
2025-02-24T15:57:56.7718070Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7718110Z E           
2025-02-24T15:57:56.7718190Z E           Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T15:57:56.7718270Z E           Max absolute difference: 282815.33818472
2025-02-24T15:57:56.7718360Z E           Max relative difference: 4.12352828e+47
2025-02-24T15:57:56.7718480Z E            x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:57:56.7718550Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T15:57:56.7718670Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:57:56.7718790Z E            y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:57:56.7718850Z E                   0.000000e+00, 0.000000e+00],
2025-02-24T15:57:56.7718960Z E                  [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:57:56.7718960Z 
2025-02-24T15:57:56.7719130Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7719260Z __________________ test_plasma_state_iterations[iterations_w] __________________
2025-02-24T15:57:56.7719270Z 
2025-02-24T15:57:56.7719440Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x15c4209b0>
2025-02-24T15:57:56.7719490Z attr = 'iterations_w'
2025-02-24T15:57:56.7720060Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x16952ef00>
2025-02-24T15:57:56.7720070Z 
2025-02-24T15:57:56.7720150Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.7720200Z         "attr",
2025-02-24T15:57:56.7720250Z         [
2025-02-24T15:57:56.7720300Z             "iterations_w",
2025-02-24T15:57:56.7720360Z             "iterations_t_rad",
2025-02-24T15:57:56.7720440Z             "iterations_electron_densities",
2025-02-24T15:57:56.7720500Z             "iterations_t_inner",
2025-02-24T15:57:56.7720550Z         ],
2025-02-24T15:57:56.7720600Z     )
2025-02-24T15:57:56.7720750Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T15:57:56.7720840Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T15:57:56.7720910Z         if hasattr(actual, "value"):
2025-02-24T15:57:56.7720960Z             actual = actual.value
2025-02-24T15:57:56.7721040Z         actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7721130Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.7721280Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:57:56.7721450Z 
2025-02-24T15:57:56.7721540Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T15:57:56.7721640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7721760Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7721800Z     ???
2025-02-24T15:57:56.7721900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7721900Z 
2025-02-24T15:57:56.7721950Z >   ???
2025-02-24T15:57:56.7722090Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.7722140Z E   
2025-02-24T15:57:56.7722310Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:57:56.7722370Z E   [index]: [0, 1]
2025-02-24T15:57:56.7722450Z E   [left]:  [0.40039163797855976, 0.4500690173218345]
2025-02-24T15:57:56.7722530Z E   [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T15:57:56.7722670Z E   At positional index 1, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T15:57:56.7722680Z 
2025-02-24T15:57:56.7722740Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7722880Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.7723280Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:57:56.7723620Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:57:56.7723750Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T15:57:56.7723760Z 
2025-02-24T15:57:56.7723760Z 
2025-02-24T15:57:56.7723950Z Packets:                                                                                   4031/? [03:58<00:00, 12.92it/s]   [A
2025-02-24T15:57:56.7723950Z 
2025-02-24T15:57:56.7724130Z Packets:                                                                                   13728/? [03:58<00:00, 71.06it/s][A
2025-02-24T15:57:56.7724130Z 
2025-02-24T15:57:56.7724310Z Packets:                                                                                   21113/? [03:58<00:00, 134.21it/s][A
2025-02-24T15:57:56.7724310Z 
2025-02-24T15:57:56.7724480Z Packets:                                                                                   28294/? [03:58<00:00, 221.73it/s][A
2025-02-24T15:57:56.7724480Z 
2025-02-24T15:57:56.7724650Z Packets:                                                                                   38326/? [03:58<00:00, 396.06it/s][A
2025-02-24T15:57:56.7727620Z Iterations:████████████████████████████████████████████████████████████████████████████████5/5 [03:58<00:00, 83.53s/it]
2025-02-24T15:57:56.7727660Z 
2025-02-24T15:57:56.7727860Z Packets:                                                                                   44030/? [03:58<00:00, 396.06it/s][A
2025-02-24T15:57:56.7727870Z 
2025-02-24T15:57:56.7728050Z Packets:                                                                                   0/40000 [00:00<?, ?it/s]         [A
2025-02-24T15:57:56.7728050Z 
2025-02-24T15:57:56.7728240Z Packets:   ████████████████▏                                                               8082/40000 [00:00<00:00, 32344.04it/s][A
2025-02-24T15:57:56.7728250Z 
2025-02-24T15:57:56.7728450Z Packets:   ███████████████████████▉                                                        11996/40000 [00:00<00:00, 34813.67it/s][A
2025-02-24T15:57:56.7728460Z 
2025-02-24T15:57:56.7728780Z Packets:   ███████████████████████████████▎                                                15630/40000 [00:00<00:00, 32351.56it/s][A
2025-02-24T15:57:56.7728790Z 
2025-02-24T15:57:56.7729010Z Packets:   █████████████████████████████████████▊                                          18912/40000 [00:00<00:00, 30177.14it/s][A
2025-02-24T15:57:56.7729020Z 
2025-02-24T15:57:56.7729530Z Packets:   █████████████████████████████████████████████▋                                  22840/40000 [00:00<00:00, 32822.54it/s][A
2025-02-24T15:57:56.7729530Z 
2025-02-24T15:57:56.7729770Z Packets:   ████████████████████████████████████████████████████▍                           26190/40000 [00:00<00:00, 31541.10it/s][A
2025-02-24T15:57:56.7729780Z 
2025-02-24T15:57:56.7730010Z Packets:   █████████████████████████████████████████████████████████████▌                  30787/40000 [00:00<00:00, 35665.76it/s][A
2025-02-24T15:57:56.7730010Z 
2025-02-24T15:57:56.7730250Z Packets:   ████████████████████████████████████████████████████████████████████▉           34439/40000 [00:01<00:00, 35321.53it/s][A
2025-02-24T15:57:56.7730250Z 
2025-02-24T15:57:56.7730490Z Packets:   █████████████████████████████████████████████████████████████████████████████▊  38895/40000 [00:01<00:00, 37988.55it/s][A
2025-02-24T15:57:56.7730750Z Iterations:                                                                                6/? [04:00<00:00, 55.92s/it]
2025-02-24T15:57:56.7730750Z 
2025-02-24T15:57:56.7731010Z Packets:   ████████████████████████████████████████████████████████████████████████████████40000/40000 [00:01<00:00, 37988.55it/s][A
2025-02-24T15:57:56.7731150Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.7731560Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:57:56.7731700Z ________________ test_plasma_state_iterations[iterations_t_rad] ________________
2025-02-24T15:57:56.7731710Z 
2025-02-24T15:57:56.7731880Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x15c4209b0>
2025-02-24T15:57:56.7731950Z attr = 'iterations_t_rad'
2025-02-24T15:57:56.7732170Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1694c7800>
2025-02-24T15:57:56.7732170Z 
2025-02-24T15:57:56.7732240Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.7736120Z         "attr",
2025-02-24T15:57:56.7736180Z         [
2025-02-24T15:57:56.7736250Z             "iterations_w",
2025-02-24T15:57:56.7736310Z             "iterations_t_rad",
2025-02-24T15:57:56.7736380Z             "iterations_electron_densities",
2025-02-24T15:57:56.7736440Z             "iterations_t_inner",
2025-02-24T15:57:56.7736490Z         ],
2025-02-24T15:57:56.7736530Z     )
2025-02-24T15:57:56.7736690Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T15:57:56.7736770Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T15:57:56.7736850Z         if hasattr(actual, "value"):
2025-02-24T15:57:56.7736900Z             actual = actual.value
2025-02-24T15:57:56.7736970Z         actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7737070Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.7738050Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:57:56.7738090Z 
2025-02-24T15:57:56.7738370Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T15:57:56.7739210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7739540Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7739680Z     ???
2025-02-24T15:57:56.7739920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7739930Z 
2025-02-24T15:57:56.7740080Z >   ???
2025-02-24T15:57:56.7740460Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.7740610Z E   
2025-02-24T15:57:56.7740960Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:57:56.7741330Z E   [index]: [0, 1]
2025-02-24T15:57:56.7741530Z E   [left]:  [9967.488442185557, 10091.396322818851]
2025-02-24T15:57:56.7741750Z E   [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T15:57:56.7742110Z E   At positional index 1, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T15:57:56.7742110Z 
2025-02-24T15:57:56.7742310Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7742730Z _________ test_plasma_state_iterations[iterations_electron_densities] __________
2025-02-24T15:57:56.7742750Z 
2025-02-24T15:57:56.7743200Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x15c4209b0>
2025-02-24T15:57:56.7743400Z attr = 'iterations_electron_densities'
2025-02-24T15:57:56.7743980Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1638c1040>
2025-02-24T15:57:56.7743990Z 
2025-02-24T15:57:56.7744180Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.7744320Z         "attr",
2025-02-24T15:57:56.7744470Z         [
2025-02-24T15:57:56.7745600Z             "iterations_w",
2025-02-24T15:57:56.7745850Z             "iterations_t_rad",
2025-02-24T15:57:56.7746060Z             "iterations_electron_densities",
2025-02-24T15:57:56.7746240Z             "iterations_t_inner",
2025-02-24T15:57:56.7746380Z         ],
2025-02-24T15:57:56.7746530Z     )
2025-02-24T15:57:56.7747000Z     def test_plasma_state_iterations(simulation_one_loop, attr, regression_data):
2025-02-24T15:57:56.7747230Z         actual = getattr(simulation_one_loop, attr)
2025-02-24T15:57:56.7747420Z         if hasattr(actual, "value"):
2025-02-24T15:57:56.7747590Z             actual = actual.value
2025-02-24T15:57:56.7747790Z         actual = pd.DataFrame(actual)
2025-02-24T15:57:56.7748040Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.7748420Z >       pd.testing.assert_frame_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:57:56.7748430Z 
2025-02-24T15:57:56.7748670Z tardis/simulation/tests/test_simulation.py:46: 
2025-02-24T15:57:56.7748920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7749240Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7749380Z     ???
2025-02-24T15:57:56.7749620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7749630Z 
2025-02-24T15:57:56.7749780Z >   ???
2025-02-24T15:57:56.7750160Z E   AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.7750300Z E   
2025-02-24T15:57:56.7750650Z E   DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:57:56.7750800Z E   [index]: [0, 1]
2025-02-24T15:57:56.7751010Z E   [left]:  [2869544645.3209715, 2881024886.0882792]
2025-02-24T15:57:56.7751210Z E   [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T15:57:56.7751570Z E   At positional index 1, first diff: 2881024886.0882792 != 2880986026.9779425
2025-02-24T15:57:56.7751580Z 
2025-02-24T15:57:56.7751770Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7752140Z ___________________ test_plasma_estimates[nu_bar_estimator] ____________________
2025-02-24T15:57:56.7752150Z 
2025-02-24T15:57:56.7752600Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x15c4209b0>
2025-02-24T15:57:56.7752770Z attr = 'nu_bar_estimator'
2025-02-24T15:57:56.7753640Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1638ad460>
2025-02-24T15:57:56.7753650Z 
2025-02-24T15:57:56.7753840Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.7753990Z         "attr",
2025-02-24T15:57:56.7754130Z         [
2025-02-24T15:57:56.7754310Z             "nu_bar_estimator",
2025-02-24T15:57:56.7754470Z             "j_estimator",
2025-02-24T15:57:56.7754620Z             "t_radiative",
2025-02-24T15:57:56.7754790Z             "dilution_factor",
2025-02-24T15:57:56.7754950Z             "output_nus",
2025-02-24T15:57:56.7755120Z             "output_energies",
2025-02-24T15:57:56.7755260Z         ],
2025-02-24T15:57:56.7755560Z     )
2025-02-24T15:57:56.7755950Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:57:56.7756190Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:57:56.7756350Z             actual = getattr(
2025-02-24T15:57:56.7756780Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:57:56.7756930Z                 attr,
2025-02-24T15:57:56.7757070Z             )
2025-02-24T15:57:56.7757320Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:57:56.7757640Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:57:56.7757880Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:57:56.7758040Z             actual = getattr(
2025-02-24T15:57:56.7758420Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:57:56.7758560Z                 attr,
2025-02-24T15:57:56.7758710Z             )
2025-02-24T15:57:56.7758860Z         else:
2025-02-24T15:57:56.7759140Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:57:56.7759270Z     
2025-02-24T15:57:56.7759450Z         if hasattr(actual, "value"):
2025-02-24T15:57:56.7759630Z             actual = actual.value
2025-02-24T15:57:56.7759800Z         actual = pd.Series(actual)
2025-02-24T15:57:56.7760070Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.7760450Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:57:56.7760460Z 
2025-02-24T15:57:56.7760710Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:57:56.7760940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7761260Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7761400Z     ???
2025-02-24T15:57:56.7761630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7761650Z 
2025-02-24T15:57:56.7761800Z >   ???
2025-02-24T15:57:56.7762000Z E   AssertionError: Series are different
2025-02-24T15:57:56.7762140Z E   
2025-02-24T15:57:56.7762340Z E   Series values are different (100.0 %)
2025-02-24T15:57:56.7762610Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:57:56.7765430Z E   [left]:  [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-02-24T15:57:56.7768260Z E   [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T15:57:56.7769110Z E   At positional index 0, first diff: 1.0202042777991753e+29 != 1.0190851489144414e+29
2025-02-24T15:57:56.7769120Z 
2025-02-24T15:57:56.7769320Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7769670Z ______________________ test_plasma_estimates[j_estimator] ______________________
2025-02-24T15:57:56.7769680Z 
2025-02-24T15:57:56.7770130Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x15c4209b0>
2025-02-24T15:57:56.7770300Z attr = 'j_estimator'
2025-02-24T15:57:56.7770890Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1694c1d30>
2025-02-24T15:57:56.7770900Z 
2025-02-24T15:57:56.7771090Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.7771370Z         "attr",
2025-02-24T15:57:56.7771510Z         [
2025-02-24T15:57:56.7771690Z             "nu_bar_estimator",
2025-02-24T15:57:56.7771850Z             "j_estimator",
2025-02-24T15:57:56.7772010Z             "t_radiative",
2025-02-24T15:57:56.7772180Z             "dilution_factor",
2025-02-24T15:57:56.7772350Z             "output_nus",
2025-02-24T15:57:56.7772520Z             "output_energies",
2025-02-24T15:57:56.7772680Z         ],
2025-02-24T15:57:56.7772820Z     )
2025-02-24T15:57:56.7773210Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:57:56.7773460Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:57:56.7773620Z             actual = getattr(
2025-02-24T15:57:56.7774050Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:57:56.7774200Z                 attr,
2025-02-24T15:57:56.7774350Z             )
2025-02-24T15:57:56.7774600Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:57:56.7774940Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:57:56.7775170Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:57:56.7775340Z             actual = getattr(
2025-02-24T15:57:56.7775720Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:57:56.7775880Z                 attr,
2025-02-24T15:57:56.7776030Z             )
2025-02-24T15:57:56.7776170Z         else:
2025-02-24T15:57:56.7776470Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:57:56.7776610Z     
2025-02-24T15:57:56.7776790Z         if hasattr(actual, "value"):
2025-02-24T15:57:56.7776960Z             actual = actual.value
2025-02-24T15:57:56.7777150Z         actual = pd.Series(actual)
2025-02-24T15:57:56.7777400Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.7777800Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:57:56.7777810Z 
2025-02-24T15:57:56.7778060Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:57:56.7778300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7778620Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7778770Z     ???
2025-02-24T15:57:56.7779010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7779020Z 
2025-02-24T15:57:56.7779160Z >   ???
2025-02-24T15:57:56.7779370Z E   AssertionError: Series are different
2025-02-24T15:57:56.7779510Z E   
2025-02-24T15:57:56.7779720Z E   Series values are different (100.0 %)
2025-02-24T15:57:56.7779980Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:57:56.7782150Z E   [left]:  [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-02-24T15:57:56.7784620Z E   [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T15:57:56.7784990Z E   At positional index 0, first diff: 116635492761989.08 != 116548101693134.0
2025-02-24T15:57:56.7784990Z 
2025-02-24T15:57:56.7785190Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7785530Z ______________________ test_plasma_estimates[t_radiative] ______________________
2025-02-24T15:57:56.7785540Z 
2025-02-24T15:57:56.7786210Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x15c4209b0>
2025-02-24T15:57:56.7786370Z attr = 't_radiative'
2025-02-24T15:57:56.7786940Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15c104d40>
2025-02-24T15:57:56.7786950Z 
2025-02-24T15:57:56.7787140Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.7787290Z         "attr",
2025-02-24T15:57:56.7787430Z         [
2025-02-24T15:57:56.7787600Z             "nu_bar_estimator",
2025-02-24T15:57:56.7787770Z             "j_estimator",
2025-02-24T15:57:56.7787920Z             "t_radiative",
2025-02-24T15:57:56.7788100Z             "dilution_factor",
2025-02-24T15:57:56.7788260Z             "output_nus",
2025-02-24T15:57:56.7788430Z             "output_energies",
2025-02-24T15:57:56.7788580Z         ],
2025-02-24T15:57:56.7788710Z     )
2025-02-24T15:57:56.7789120Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:57:56.7789350Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:57:56.7789530Z             actual = getattr(
2025-02-24T15:57:56.7792000Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:57:56.7792110Z                 attr,
2025-02-24T15:57:56.7792160Z             )
2025-02-24T15:57:56.7792260Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:57:56.7792410Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:57:56.7792510Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:57:56.7792570Z             actual = getattr(
2025-02-24T15:57:56.7792720Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:57:56.7792770Z                 attr,
2025-02-24T15:57:56.7792820Z             )
2025-02-24T15:57:56.7792870Z         else:
2025-02-24T15:57:56.7792980Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:57:56.7793030Z     
2025-02-24T15:57:56.7793110Z         if hasattr(actual, "value"):
2025-02-24T15:57:56.7793190Z             actual = actual.value
2025-02-24T15:57:56.7793260Z         actual = pd.Series(actual)
2025-02-24T15:57:56.7793360Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.7793520Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:57:56.7793530Z 
2025-02-24T15:57:56.7793630Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:57:56.7793730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7793860Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7793910Z     ???
2025-02-24T15:57:56.7794130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7794140Z 
2025-02-24T15:57:56.7794220Z >   ???
2025-02-24T15:57:56.7794300Z E   AssertionError: Series are different
2025-02-24T15:57:56.7794340Z E   
2025-02-24T15:57:56.7794410Z E   Series values are different (90.0 %)
2025-02-24T15:57:56.7794530Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:57:56.7795650Z E   [left]:  [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-02-24T15:57:56.7796430Z E   [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T15:57:56.7796680Z E   At positional index 0, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T15:57:56.7796680Z 
2025-02-24T15:57:56.7796760Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7796890Z ____________________ test_plasma_estimates[dilution_factor] ____________________
2025-02-24T15:57:56.7796900Z 
2025-02-24T15:57:56.7797070Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x15c4209b0>
2025-02-24T15:57:56.7797130Z attr = 'dilution_factor'
2025-02-24T15:57:56.7797340Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1638ac050>
2025-02-24T15:57:56.7797340Z 
2025-02-24T15:57:56.7797400Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.7797460Z         "attr",
2025-02-24T15:57:56.7797500Z         [
2025-02-24T15:57:56.7797560Z             "nu_bar_estimator",
2025-02-24T15:57:56.7797620Z             "j_estimator",
2025-02-24T15:57:56.7797670Z             "t_radiative",
2025-02-24T15:57:56.7797730Z             "dilution_factor",
2025-02-24T15:57:56.7797790Z             "output_nus",
2025-02-24T15:57:56.7797850Z             "output_energies",
2025-02-24T15:57:56.7797890Z         ],
2025-02-24T15:57:56.7797940Z     )
2025-02-24T15:57:56.7798080Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:57:56.7798170Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:57:56.7798230Z             actual = getattr(
2025-02-24T15:57:56.7798400Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:57:56.7798460Z                 attr,
2025-02-24T15:57:56.7798510Z             )
2025-02-24T15:57:56.7798600Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:57:56.7798720Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:57:56.7798820Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:57:56.7798880Z             actual = getattr(
2025-02-24T15:57:56.7799020Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:57:56.7799070Z                 attr,
2025-02-24T15:57:56.7799120Z             )
2025-02-24T15:57:56.7799160Z         else:
2025-02-24T15:57:56.7799280Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:57:56.7799330Z     
2025-02-24T15:57:56.7799400Z         if hasattr(actual, "value"):
2025-02-24T15:57:56.7799460Z             actual = actual.value
2025-02-24T15:57:56.7799520Z         actual = pd.Series(actual)
2025-02-24T15:57:56.7799620Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.7799770Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:57:56.7799770Z 
2025-02-24T15:57:56.7799860Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:57:56.7799950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7800080Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7800120Z     ???
2025-02-24T15:57:56.7800220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7800220Z 
2025-02-24T15:57:56.7800270Z >   ???
2025-02-24T15:57:56.7800340Z E   AssertionError: Series are different
2025-02-24T15:57:56.7800380Z E   
2025-02-24T15:57:56.7800450Z E   Series values are different (95.0 %)
2025-02-24T15:57:56.7800610Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:57:56.7801460Z E   [left]:  [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-02-24T15:57:56.7802300Z E   [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T15:57:56.7802500Z E   At positional index 0, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T15:57:56.7802510Z 
2025-02-24T15:57:56.7802570Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7802710Z ______________________ test_plasma_estimates[output_nus] _______________________
2025-02-24T15:57:56.7802710Z 
2025-02-24T15:57:56.7802880Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x15c4209b0>
2025-02-24T15:57:56.7802930Z attr = 'output_nus'
2025-02-24T15:57:56.7803140Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1638c0830>
2025-02-24T15:57:56.7803150Z 
2025-02-24T15:57:56.7803220Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.7803270Z         "attr",
2025-02-24T15:57:56.7803310Z         [
2025-02-24T15:57:56.7803370Z             "nu_bar_estimator",
2025-02-24T15:57:56.7803430Z             "j_estimator",
2025-02-24T15:57:56.7803480Z             "t_radiative",
2025-02-24T15:57:56.7803970Z             "dilution_factor",
2025-02-24T15:57:56.7804070Z             "output_nus",
2025-02-24T15:57:56.7804130Z             "output_energies",
2025-02-24T15:57:56.7804180Z         ],
2025-02-24T15:57:56.7804220Z     )
2025-02-24T15:57:56.7804370Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:57:56.7804460Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:57:56.7804520Z             actual = getattr(
2025-02-24T15:57:56.7804680Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:57:56.7804730Z                 attr,
2025-02-24T15:57:56.7804770Z             )
2025-02-24T15:57:56.7804860Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:57:56.7804980Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:57:56.7805070Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:57:56.7805130Z             actual = getattr(
2025-02-24T15:57:56.7805270Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:57:56.7805320Z                 attr,
2025-02-24T15:57:56.7805370Z             )
2025-02-24T15:57:56.7805410Z         else:
2025-02-24T15:57:56.7805520Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:57:56.7805570Z     
2025-02-24T15:57:56.7805640Z         if hasattr(actual, "value"):
2025-02-24T15:57:56.7805690Z             actual = actual.value
2025-02-24T15:57:56.7805760Z         actual = pd.Series(actual)
2025-02-24T15:57:56.7805860Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.7806010Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:57:56.7806020Z 
2025-02-24T15:57:56.7806110Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:57:56.7806200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7806490Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7806540Z     ???
2025-02-24T15:57:56.7806640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7806640Z 
2025-02-24T15:57:56.7806680Z >   ???
2025-02-24T15:57:56.7806760Z E   AssertionError: Series are different
2025-02-24T15:57:56.7806800Z E   
2025-02-24T15:57:56.7806870Z E   Series values are different (5.1125 %)
2025-02-24T15:57:56.7807180Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7811430Z E   [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T15:57:56.7815580Z E   [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T15:57:56.7815820Z E   At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T15:57:56.7815820Z 
2025-02-24T15:57:56.7815890Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7816030Z ____________________ test_plasma_estimates[output_energies] ____________________
2025-02-24T15:57:56.7816030Z 
2025-02-24T15:57:56.7816200Z simulation_one_loop = <tardis.simulation.base.Simulation object at 0x15c4209b0>
2025-02-24T15:57:56.7816260Z attr = 'output_energies'
2025-02-24T15:57:56.7816470Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x1694a6e70>
2025-02-24T15:57:56.7816480Z 
2025-02-24T15:57:56.7816540Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.7816590Z         "attr",
2025-02-24T15:57:56.7816630Z         [
2025-02-24T15:57:56.7816690Z             "nu_bar_estimator",
2025-02-24T15:57:56.7816740Z             "j_estimator",
2025-02-24T15:57:56.7816800Z             "t_radiative",
2025-02-24T15:57:56.7816870Z             "dilution_factor",
2025-02-24T15:57:56.7816920Z             "output_nus",
2025-02-24T15:57:56.7816980Z             "output_energies",
2025-02-24T15:57:56.7817020Z         ],
2025-02-24T15:57:56.7817070Z     )
2025-02-24T15:57:56.7817210Z     def test_plasma_estimates(simulation_one_loop, attr, regression_data):
2025-02-24T15:57:56.7817300Z         if attr in ["nu_bar_estimator", "j_estimator"]:
2025-02-24T15:57:56.7817360Z             actual = getattr(
2025-02-24T15:57:56.7817510Z                 simulation_one_loop.transport.transport_state.radfield_mc_estimators,
2025-02-24T15:57:56.7817560Z                 attr,
2025-02-24T15:57:56.7817600Z             )
2025-02-24T15:57:56.7817690Z         elif attr in ["t_radiative", "dilution_factor"]:
2025-02-24T15:57:56.7817810Z             actual = getattr(simulation_one_loop.simulation_state, attr)
2025-02-24T15:57:56.7817900Z         elif attr in ["output_nus", "output_energies"]:
2025-02-24T15:57:56.7817960Z             actual = getattr(
2025-02-24T15:57:56.7818100Z                 simulation_one_loop.transport.transport_state.packet_collection,
2025-02-24T15:57:56.7818140Z                 attr,
2025-02-24T15:57:56.7818190Z             )
2025-02-24T15:57:56.7818230Z         else:
2025-02-24T15:57:56.7818340Z             actual = getattr(simulation_one_loop.transport, attr)
2025-02-24T15:57:56.7818390Z     
2025-02-24T15:57:56.7818450Z         if hasattr(actual, "value"):
2025-02-24T15:57:56.7818510Z             actual = actual.value
2025-02-24T15:57:56.7818570Z         actual = pd.Series(actual)
2025-02-24T15:57:56.7818660Z         expected = regression_data.sync_dataframe(actual)
2025-02-24T15:57:56.7819360Z >       pd.testing.assert_series_equal(actual, expected, rtol=1e-5, atol=1e-8)
2025-02-24T15:57:56.7819370Z 
2025-02-24T15:57:56.7819490Z tardis/simulation/tests/test_simulation.py:80: 
2025-02-24T15:57:56.7819590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7819730Z testing.pyx:55: in pandas._libs.testing.assert_almost_equal
2025-02-24T15:57:56.7819770Z     ???
2025-02-24T15:57:56.7819870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7819880Z 
2025-02-24T15:57:56.7819930Z >   ???
2025-02-24T15:57:56.7820000Z E   AssertionError: Series are different
2025-02-24T15:57:56.7820230Z E   
2025-02-24T15:57:56.7820300Z E   Series values are different (1.3025 %)
2025-02-24T15:57:56.7820620Z E   [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.7825530Z E   [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:57:56.7830650Z E   [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:57:56.7830880Z E   At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T15:57:56.7830880Z 
2025-02-24T15:57:56.7830950Z testing.pyx:173: AssertionError
2025-02-24T15:57:56.7832820Z ________________ TestSpectrumSolver.test_spectrum_real_packets _________________
2025-02-24T15:57:56.7832890Z 
2025-02-24T15:57:56.7834440Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x13fd0a0c0>
2025-02-24T15:57:56.7834620Z simulation = <tardis.simulation.base.Simulation object at 0x319fdc230>
2025-02-24T15:57:56.7834630Z 
2025-02-24T15:57:56.7834720Z     def test_spectrum_real_packets(self, simulation):
2025-02-24T15:57:56.7834840Z         transport_state = simulation.transport.transport_state
2025-02-24T15:57:56.7834990Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T15:57:56.7835040Z     
2025-02-24T15:57:56.7835190Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T15:57:56.7835290Z         result = solver.spectrum_real_packets.luminosity
2025-02-24T15:57:56.7835430Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T15:57:56.7835510Z         expected = self.get_expected_data(key)
2025-02-24T15:57:56.7835550Z     
2025-02-24T15:57:56.7835650Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.7835700Z     
2025-02-24T15:57:56.7835760Z >       assert_quantity_allclose(
2025-02-24T15:57:56.7835800Z             result,
2025-02-24T15:57:56.7835860Z             luminosity,
2025-02-24T15:57:56.7835900Z         )
2025-02-24T15:57:56.7835900Z 
2025-02-24T15:57:56.7836000Z tardis/spectrum/tests/test_spectrum_solver.py:71: 
2025-02-24T15:57:56.7836090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7836370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7836440Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7836530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7836540Z 
2025-02-24T15:57:56.7836890Z args = (<function assert_allclose.<locals>.compare at 0x318014720>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T15:57:56.7836980Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.7837180Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7837180Z 
2025-02-24T15:57:56.7837230Z     @wraps(func)
2025-02-24T15:57:56.7837470Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7837530Z         with self._recreate_cm():
2025-02-24T15:57:56.7837600Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7837660Z E           AssertionError: 
2025-02-24T15:57:56.7837750Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7837790Z E           
2025-02-24T15:57:56.7837880Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:57:56.7837950Z E           Max absolute difference: 4.30543741e+37
2025-02-24T15:57:56.7838020Z E           Max relative difference: 1.
2025-02-24T15:57:56.7838140Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.7838260Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7838390Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.7838450Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7838450Z 
2025-02-24T15:57:56.7838620Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7838780Z ___________ TestSpectrumSolver.test_spectrum_real_packets_reabsorbed ___________
2025-02-24T15:57:56.7838780Z 
2025-02-24T15:57:56.7838980Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x13fd0a3f0>
2025-02-24T15:57:56.7839130Z simulation = <tardis.simulation.base.Simulation object at 0x319fdc230>
2025-02-24T15:57:56.7839130Z 
2025-02-24T15:57:56.7839250Z     def test_spectrum_real_packets_reabsorbed(self, simulation):
2025-02-24T15:57:56.7839360Z         transport_state = simulation.transport.transport_state
2025-02-24T15:57:56.7839510Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T15:57:56.7839560Z     
2025-02-24T15:57:56.7839700Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T15:57:56.7839820Z         result = solver.spectrum_real_packets_reabsorbed.luminosity
2025-02-24T15:57:56.7839990Z         key = "simulation/spectrum_solver/spectrum_real_packets_reabsorbed/luminosity"
2025-02-24T15:57:56.7840070Z         expected = self.get_expected_data(key)
2025-02-24T15:57:56.7840110Z     
2025-02-24T15:57:56.7840190Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.7840240Z     
2025-02-24T15:57:56.7840300Z >       assert_quantity_allclose(
2025-02-24T15:57:56.7840350Z             result,
2025-02-24T15:57:56.7840400Z             luminosity,
2025-02-24T15:57:56.7840440Z         )
2025-02-24T15:57:56.7840450Z 
2025-02-24T15:57:56.7840540Z tardis/spectrum/tests/test_spectrum_solver.py:87: 
2025-02-24T15:57:56.7840630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7840900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7840960Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7841050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7841060Z 
2025-02-24T15:57:56.7841410Z args = (<function assert_allclose.<locals>.compare at 0x1547a59e0>, array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, .....), array([2.03920412e+38, 3.72882494e+38, 2.29646943e+38, ...,
2025-02-24T15:57:56.7841490Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.7841690Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7841690Z 
2025-02-24T15:57:56.7841750Z     @wraps(func)
2025-02-24T15:57:56.7841810Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7841870Z         with self._recreate_cm():
2025-02-24T15:57:56.7841940Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7842000Z E           AssertionError: 
2025-02-24T15:57:56.7842080Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7842120Z E           
2025-02-24T15:57:56.7842320Z E           Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T15:57:56.7842400Z E           Max absolute difference: 4.15247374e+37
2025-02-24T15:57:56.7842480Z E           Max relative difference: 1.
2025-02-24T15:57:56.7842600Z E            x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.7842660Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7842780Z E            y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.7842850Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7842850Z 
2025-02-24T15:57:56.7843010Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7843220Z ________________________ TestSpectrumSolver.test_solve _________________________
2025-02-24T15:57:56.7843220Z 
2025-02-24T15:57:56.7843420Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x13fd0a630>
2025-02-24T15:57:56.7843570Z simulation = <tardis.simulation.base.Simulation object at 0x319fdc230>
2025-02-24T15:57:56.7843570Z 
2025-02-24T15:57:56.7843650Z     def test_solve(self, simulation):
2025-02-24T15:57:56.7843760Z         transport_state = simulation.transport.transport_state
2025-02-24T15:57:56.7843910Z         spectrum_frequency_grid = simulation.transport.spectrum_frequency_grid
2025-02-24T15:57:56.7843960Z     
2025-02-24T15:57:56.7844110Z         solver = SpectrumSolver(transport_state, spectrum_frequency_grid, None)
2025-02-24T15:57:56.7844230Z         result_real, result_virtual, result_integrated = solver.solve(
2025-02-24T15:57:56.7844280Z             transport_state
2025-02-24T15:57:56.7844330Z         )
2025-02-24T15:57:56.7844480Z         key_real = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T15:57:56.7844570Z         expected_real = self.get_expected_data(key_real)
2025-02-24T15:57:56.7844620Z     
2025-02-24T15:57:56.7844720Z         luminosity_real = u.Quantity(expected_real, "erg /s")
2025-02-24T15:57:56.7844760Z     
2025-02-24T15:57:56.7844820Z >       assert_quantity_allclose(
2025-02-24T15:57:56.7844890Z             result_real.luminosity,
2025-02-24T15:57:56.7844940Z             luminosity_real,
2025-02-24T15:57:56.7844990Z         )
2025-02-24T15:57:56.7844990Z 
2025-02-24T15:57:56.7845090Z tardis/spectrum/tests/test_spectrum_solver.py:105: 
2025-02-24T15:57:56.7845180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7845430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7845500Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7845590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7845590Z 
2025-02-24T15:57:56.7845950Z args = (<function assert_allclose.<locals>.compare at 0x15b766520>, array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, .....), array([1.33511090e+39, 1.33738696e+39, 9.41598476e+38, ...,
2025-02-24T15:57:56.7846030Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.7846230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7846230Z 
2025-02-24T15:57:56.7846280Z     @wraps(func)
2025-02-24T15:57:56.7846340Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7846400Z         with self._recreate_cm():
2025-02-24T15:57:56.7846470Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7846530Z E           AssertionError: 
2025-02-24T15:57:56.7846610Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7846660Z E           
2025-02-24T15:57:56.7846740Z E           Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:57:56.7846810Z E           Max absolute difference: 4.30543741e+37
2025-02-24T15:57:56.7846880Z E           Max relative difference: 1.
2025-02-24T15:57:56.7847000Z E            x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.7847120Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7847240Z E            y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.7847310Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7847310Z 
2025-02-24T15:57:56.7847470Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7847610Z __________________ TestTransportSimple.test_j_blue_estimators __________________
2025-02-24T15:57:56.7847620Z 
2025-02-24T15:57:56.7847930Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x13fd0b590>
2025-02-24T15:57:56.7852650Z simulation = <tardis.simulation.base.Simulation object at 0x15037ff50>
2025-02-24T15:57:56.7852660Z 
2025-02-24T15:57:56.7852760Z     def test_j_blue_estimators(self, simulation):
2025-02-24T15:57:56.7852890Z         key = "simulation/transport/transport_state/j_blue_estimator"
2025-02-24T15:57:56.7852970Z         expected = self.get_expected_data(key)
2025-02-24T15:57:56.7853020Z     
2025-02-24T15:57:56.7853080Z >       npt.assert_allclose(
2025-02-24T15:57:56.7853260Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator,
2025-02-24T15:57:56.7853320Z             expected.values,
2025-02-24T15:57:56.7853370Z         )
2025-02-24T15:57:56.7853370Z 
2025-02-24T15:57:56.7853440Z tardis/tests/test_tardis_full.py:70: 
2025-02-24T15:57:56.7853540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7853540Z 
2025-02-24T15:57:56.7853750Z args = (<function assert_allclose.<locals>.compare at 0x134c13920>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7853810Z        [0., 0., 0.,.....,
2025-02-24T15:57:56.7853870Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7853920Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7853980Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:57:56.7854180Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7854180Z 
2025-02-24T15:57:56.7854240Z     @wraps(func)
2025-02-24T15:57:56.7854300Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7854370Z         with self._recreate_cm():
2025-02-24T15:57:56.7854430Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7854490Z E           AssertionError: 
2025-02-24T15:57:56.7854580Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7854630Z E           
2025-02-24T15:57:56.7854710Z E           Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T15:57:56.7854790Z E           Max absolute difference: 5.32418652e-19
2025-02-24T15:57:56.7854870Z E           Max relative difference: 12.23359055
2025-02-24T15:57:56.7854940Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7855010Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7855070Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.7855150Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7855210Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7855280Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.7855290Z 
2025-02-24T15:57:56.7855600Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7855730Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.7856090Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7856140Z 	
2025-02-24T15:57:56.7856580Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-02-24T15:57:56.7856720Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7857070Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-02-24T15:57:56.7857400Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7857780Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-02-24T15:57:56.7857990Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:57:56.7858340Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:57:56.7858480Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7858650Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:57:56.7858860Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7858910Z 	
2025-02-24T15:57:56.7859030Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-02-24T15:57:56.7859160Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7859210Z 	
2025-02-24T15:57:56.7859280Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T15:57:56.7859350Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T15:57:56.7859420Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.7859500Z  ([1mbase.py[0m:657)
2025-02-24T15:57:56.7859630Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7859680Z 	
2025-02-24T15:57:56.7859790Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:57:56.7859920Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7859970Z 	
2025-02-24T15:57:56.7860050Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T15:57:56.7860120Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T15:57:56.7860190Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T15:57:56.7860250Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T15:57:56.7860320Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T15:57:56.7860400Z  ([1mbase.py[0m:650)
2025-02-24T15:57:56.7860530Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7860570Z 	
2025-02-24T15:57:56.7860640Z 	Current t_inner = 9974.969 K
2025-02-24T15:57:56.7860720Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T15:57:56.7860800Z  ([1mbase.py[0m:652)
2025-02-24T15:57:56.7860920Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7860980Z 	
2025-02-24T15:57:56.7861090Z 	Starting iteration 2 of 5 ([1mbase.py[0m:444)
2025-02-24T15:57:56.7861210Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7861260Z 	
2025-02-24T15:57:56.7861330Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T15:57:56.7861400Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T15:57:56.7861470Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.7861550Z  ([1mbase.py[0m:657)
2025-02-24T15:57:56.7861680Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7861720Z 	
2025-02-24T15:57:56.7861830Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:57:56.7861960Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7862000Z 	
2025-02-24T15:57:56.7862080Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:57:56.7862150Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T15:57:56.7862220Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T15:57:56.7862280Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T15:57:56.7862340Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T15:57:56.7862420Z  ([1mbase.py[0m:650)
2025-02-24T15:57:56.7862540Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7862590Z 	
2025-02-24T15:57:56.7862650Z 	Current t_inner = 10736.790 K
2025-02-24T15:57:56.7862740Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T15:57:56.7862810Z  ([1mbase.py[0m:652)
2025-02-24T15:57:56.7862930Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7862980Z 	
2025-02-24T15:57:56.7863150Z 	Starting iteration 3 of 5 ([1mbase.py[0m:444)
2025-02-24T15:57:56.7863280Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7863330Z 	
2025-02-24T15:57:56.7863400Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T15:57:56.7863460Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T15:57:56.7863530Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.7863600Z  ([1mbase.py[0m:657)
2025-02-24T15:57:56.7864000Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7864200Z 	Iteration converged 1/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T15:57:56.7864330Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7864460Z 	
2025-02-24T15:57:56.7864580Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:57:56.7864700Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7864750Z 	
2025-02-24T15:57:56.7864840Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:57:56.7864910Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T15:57:56.7864970Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T15:57:56.7865030Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T15:57:56.7865090Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T15:57:56.7865170Z  ([1mbase.py[0m:650)
2025-02-24T15:57:56.7865290Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7865340Z 	
2025-02-24T15:57:56.7865400Z 	Current t_inner = 10718.574 K
2025-02-24T15:57:56.7865490Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T15:57:56.7865560Z  ([1mbase.py[0m:652)
2025-02-24T15:57:56.7865690Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7865730Z 	
2025-02-24T15:57:56.7865840Z 	Starting iteration 4 of 5 ([1mbase.py[0m:444)
2025-02-24T15:57:56.7865960Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7866010Z 	
2025-02-24T15:57:56.7866080Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T15:57:56.7866150Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T15:57:56.7866210Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.7866290Z  ([1mbase.py[0m:657)
2025-02-24T15:57:56.7866410Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7866570Z 	Iteration converged 2/4 consecutive times. ([1mbase.py[0m:260)
2025-02-24T15:57:56.7866690Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7866740Z 	
2025-02-24T15:57:56.7866840Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-02-24T15:57:56.7866970Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7867020Z 	
2025-02-24T15:57:56.7867090Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:57:56.7867160Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T15:57:56.7867220Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T15:57:56.7867280Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T15:57:56.7867350Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T15:57:56.7867420Z  ([1mbase.py[0m:650)
2025-02-24T15:57:56.7867540Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7867590Z 	
2025-02-24T15:57:56.7867640Z 	Current t_inner = 10696.150 K
2025-02-24T15:57:56.7867730Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T15:57:56.7867800Z  ([1mbase.py[0m:652)
2025-02-24T15:57:56.7867920Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7867960Z 	
2025-02-24T15:57:56.7868030Z 	Simulation finished in 4 iterations 
2025-02-24T15:57:56.7868090Z 	Simulation took 12.12 s
2025-02-24T15:57:56.7868160Z  ([1mbase.py[0m:542)
2025-02-24T15:57:56.7868290Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7868330Z 	
2025-02-24T15:57:56.7868440Z 	Starting iteration 5 of 5 ([1mbase.py[0m:444)
2025-02-24T15:57:56.7868560Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.7868600Z 	
2025-02-24T15:57:56.7868780Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T15:57:56.7868860Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T15:57:56.7868930Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.7869010Z  ([1mbase.py[0m:657)
2025-02-24T15:57:56.7869140Z ---------------------------- Captured stderr setup -----------------------------
2025-02-24T15:57:56.7869140Z 
2025-02-24T15:57:56.7869150Z 
2025-02-24T15:57:56.7869330Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                [A
2025-02-24T15:57:56.7869340Z 
2025-02-24T15:57:56.7869520Z Packets:                                                                                   0/200000 [00:00<?, ?it/s][A
2025-02-24T15:57:56.7869600Z 
2025-02-24T15:57:56.7869810Z Packets:   ████▋                                                                           11856/200000 [00:00<00:01, 118550.79it/s][A
2025-02-24T15:57:56.7869820Z 
2025-02-24T15:57:56.7870010Z Packets:   ██████████▏                                                                     25623/200000 [00:00<00:01, 129793.45it/s][A
2025-02-24T15:57:56.7870010Z 
2025-02-24T15:57:56.7870210Z Packets:   ███████████████▍                                                                38603/200000 [00:00<00:01, 125679.48it/s][A
2025-02-24T15:57:56.7870210Z 
2025-02-24T15:57:56.7870400Z Packets:   ████████████████████▌                                                           51255/200000 [00:00<00:01, 126000.48it/s][A
2025-02-24T15:57:56.7870400Z 
2025-02-24T15:57:56.7870600Z Packets:   █████████████████████████▌                                                      63865/200000 [00:00<00:01, 125095.12it/s][A
2025-02-24T15:57:56.7870620Z 
2025-02-24T15:57:56.7870820Z Packets:   ██████████████████████████████▌                                                 76381/200000 [00:00<00:01, 102754.32it/s][A
2025-02-24T15:57:56.7870830Z 
2025-02-24T15:57:56.7871040Z Packets:   ██████████████████████████████████▉                                             87223/200000 [00:00<00:01, 98971.66it/s] [A
2025-02-24T15:57:56.7871040Z 
2025-02-24T15:57:56.7871250Z Packets:   ██████████████████████████████████████▉                                         97493/200000 [00:00<00:01, 99274.92it/s][A
2025-02-24T15:57:56.7871250Z 
2025-02-24T15:57:56.7871470Z Packets:   ███████████████████████████████████████████▌                                    108973/200000 [00:00<00:00, 103649.71it/s][A
2025-02-24T15:57:56.7871470Z 
2025-02-24T15:57:56.7872000Z Packets:   ████████████████████████████████████████████████▉                               122281/200000 [00:01<00:00, 112097.30it/s][A
2025-02-24T15:57:56.7872020Z 
2025-02-24T15:57:56.7872260Z Packets:   ██████████████████████████████████████████████████████▍                         136236/200000 [00:01<00:00, 120079.95it/s][A
2025-02-24T15:57:56.7872270Z 
2025-02-24T15:57:56.7872600Z Packets:   ████████████████████████████████████████████████████████████▏                   150460/200000 [00:01<00:00, 126582.15it/s][A
2025-02-24T15:57:56.7872600Z 
2025-02-24T15:57:56.7872850Z Packets:   █████████████████████████████████████████████████████████████████▎              163277/200000 [00:01<00:00, 108360.76it/s][A
2025-02-24T15:57:56.7872860Z 
2025-02-24T15:57:56.7873090Z Packets:   █████████████████████████████████████████████████████████████████████▊          174663/200000 [00:01<00:00, 102795.97it/s][A
2025-02-24T15:57:56.7873100Z 
2025-02-24T15:57:56.7873330Z Packets:   ██████████████████████████████████████████████████████████████████████████▏     185344/200000 [00:01<00:00, 100756.96it/s][A
2025-02-24T15:57:56.7873340Z 
2025-02-24T15:57:56.7873670Z Packets:   ███████████████████████████████████████████████████████████████████████████████▌198975/200000 [00:01<00:00, 110211.94it/s][A
2025-02-24T15:57:56.7873800Z Iterations:                                                                                13/? [05:29<00:00, 15.64s/it]
2025-02-24T15:57:56.7873800Z 
2025-02-24T15:57:56.7874060Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199999/200000 [00:01<00:00, 110211.94it/s][A
2025-02-24T15:57:56.7874060Z 
2025-02-24T15:57:56.7874250Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T15:57:56.7874250Z 
2025-02-24T15:57:56.7874440Z Packets:   ████▌                                                                           11333/200000 [00:00<00:01, 102433.25it/s][A
2025-02-24T15:57:56.7874440Z 
2025-02-24T15:57:56.7874630Z Packets:   █████████▎                                                                      23384/200000 [00:00<00:01, 112616.53it/s][A
2025-02-24T15:57:56.7874640Z 
2025-02-24T15:57:56.7874840Z Packets:   ██████████████▉                                                                 37199/200000 [00:00<00:01, 124003.77it/s][A
2025-02-24T15:57:56.7874840Z 
2025-02-24T15:57:56.7875040Z Packets:   ████████████████████▉                                                           52240/200000 [00:00<00:01, 134277.40it/s][A
2025-02-24T15:57:56.7875050Z 
2025-02-24T15:57:56.7875250Z Packets:   ██████████████████████████▊                                                     66880/200000 [00:00<00:00, 138607.88it/s][A
2025-02-24T15:57:56.7875250Z 
2025-02-24T15:57:56.7875460Z Packets:   ████████████████████████████████▎                                               80775/200000 [00:00<00:01, 118894.05it/s][A
2025-02-24T15:57:56.7875460Z 
2025-02-24T15:57:56.7875670Z Packets:   █████████████████████████████████████▏                                          93109/200000 [00:00<00:00, 119738.33it/s][A
2025-02-24T15:57:56.7875680Z 
2025-02-24T15:57:56.7875900Z Packets:   ██████████████████████████████████████████▏                                     105496/200000 [00:00<00:00, 120951.37it/s][A
2025-02-24T15:57:56.7875910Z 
2025-02-24T15:57:56.7876180Z Packets:   ███████████████████████████████████████████████                                 117811/200000 [00:00<00:00, 121057.49it/s][A
2025-02-24T15:57:56.7876190Z 
2025-02-24T15:57:56.7876410Z Packets:   ████████████████████████████████████████████████████▋                           131618/200000 [00:01<00:00, 126094.31it/s][A
2025-02-24T15:57:56.7876420Z 
2025-02-24T15:57:56.7876650Z Packets:   ██████████████████████████████████████████████████████████▋                     146777/200000 [00:01<00:00, 133671.35it/s][A
2025-02-24T15:57:56.7876650Z 
2025-02-24T15:57:56.7876880Z Packets:   ████████████████████████████████████████████████████████████████▌               161279/200000 [00:01<00:00, 137050.37it/s][A
2025-02-24T15:57:56.7876940Z 
2025-02-24T15:57:56.7877190Z Packets:   ██████████████████████████████████████████████████████████████████████▍         176132/200000 [00:01<00:00, 140477.16it/s][A
2025-02-24T15:57:56.7877190Z 
2025-02-24T15:57:56.7877420Z Packets:   ████████████████████████████████████████████████████████████████████████████    190243/200000 [00:01<00:00, 109778.67it/s][A
2025-02-24T15:57:56.7877560Z Iterations:                                                                                14/? [05:32<00:00, 11.77s/it]
2025-02-24T15:57:56.7877560Z 
2025-02-24T15:57:56.7877810Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 109778.67it/s][A
2025-02-24T15:57:56.7877810Z 
2025-02-24T15:57:56.7877990Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T15:57:56.7877990Z 
2025-02-24T15:57:56.7878180Z Packets:   █████▋                                                                          14262/200000 [00:00<00:01, 142612.66it/s][A
2025-02-24T15:57:56.7878190Z 
2025-02-24T15:57:56.7878380Z Packets:   ███████████▍                                                                    28524/200000 [00:00<00:01, 132635.27it/s][A
2025-02-24T15:57:56.7878380Z 
2025-02-24T15:57:56.7878580Z Packets:   ████████████████▉                                                               42359/200000 [00:00<00:01, 135137.58it/s][A
2025-02-24T15:57:56.7878580Z 
2025-02-24T15:57:56.7878780Z Packets:   ██████████████████████▎                                                         55909/200000 [00:00<00:01, 112595.93it/s][A
2025-02-24T15:57:56.7878780Z 
2025-02-24T15:57:56.7878980Z Packets:   ███████████████████████████                                                     67622/200000 [00:00<00:01, 107021.26it/s][A
2025-02-24T15:57:56.7878990Z 
2025-02-24T15:57:56.7879190Z Packets:   ███████████████████████████████▍                                                78713/200000 [00:00<00:01, 108171.68it/s][A
2025-02-24T15:57:56.7879200Z 
2025-02-24T15:57:56.7879410Z Packets:   ███████████████████████████████████▉                                            89734/200000 [00:00<00:01, 107516.68it/s][A
2025-02-24T15:57:56.7879420Z 
2025-02-24T15:57:56.7879690Z Packets:   █████████████████████████████████████████▎                                      103177/200000 [00:00<00:00, 115476.54it/s][A
2025-02-24T15:57:56.7879690Z 
2025-02-24T15:57:56.7879910Z Packets:   ██████████████████████████████████████████████▉                                 117424/200000 [00:00<00:00, 123491.63it/s][A
2025-02-24T15:57:56.7879920Z 
2025-02-24T15:57:56.7880140Z Packets:   ███████████████████████████████████████████████████▉                            129919/200000 [00:01<00:00, 116037.06it/s][A
2025-02-24T15:57:56.7880140Z 
2025-02-24T15:57:56.7880360Z Packets:   █████████████████████████████████████████████████████████▍                      143455/200000 [00:01<00:00, 121542.79it/s][A
2025-02-24T15:57:56.7880410Z 
2025-02-24T15:57:56.7880650Z Packets:   ██████████████████████████████████████████████████████████████▌                 156251/200000 [00:01<00:00, 123396.10it/s][A
2025-02-24T15:57:56.7880650Z 
2025-02-24T15:57:56.7880890Z Packets:   ███████████████████████████████████████████████████████████████████▍            168713/200000 [00:01<00:00, 115778.09it/s][A
2025-02-24T15:57:56.7880900Z 
2025-02-24T15:57:56.7881140Z Packets:   ████████████████████████████████████████████████████████████████████████▏       180456/200000 [00:01<00:00, 111148.23it/s][A
2025-02-24T15:57:56.7881140Z 
2025-02-24T15:57:56.7881380Z Packets:   ████████████████████████████████████████████████████████████████████████████▋   191701/200000 [00:01<00:00, 105673.74it/s][A
2025-02-24T15:57:56.7881500Z Iterations:                                                                                15/? [05:35<00:00,  9.11s/it]
2025-02-24T15:57:56.7881510Z 
2025-02-24T15:57:56.7881760Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:01<00:00, 105673.74it/s][A
2025-02-24T15:57:56.7881770Z 
2025-02-24T15:57:56.7881950Z Packets:                                                                                   0/200000 [00:00<?, ?it/s]                 [A
2025-02-24T15:57:56.7881960Z 
2025-02-24T15:57:56.7882150Z Packets:   ████▎                                                                           10683/200000 [00:00<00:01, 96034.65it/s][A
2025-02-24T15:57:56.7882150Z 
2025-02-24T15:57:56.7882340Z Packets:   ████████▎                                                                       20930/200000 [00:00<00:01, 99652.60it/s][A
2025-02-24T15:57:56.7882340Z 
2025-02-24T15:57:56.7882540Z Packets:   ████████████▎                                                                   30913/200000 [00:00<00:02, 77789.48it/s][A
2025-02-24T15:57:56.7882550Z 
2025-02-24T15:57:56.7882730Z Packets:   ████████████████▉                                                               42264/200000 [00:00<00:01, 89625.73it/s][A
2025-02-24T15:57:56.7882750Z 
2025-02-24T15:57:56.7882940Z Packets:   ████████████████████▋                                                           51716/200000 [00:00<00:01, 83550.20it/s][A
2025-02-24T15:57:56.7882940Z 
2025-02-24T15:57:56.7883220Z Packets:   ████████████████████████▌                                                       61348/200000 [00:00<00:01, 87331.59it/s][A
2025-02-24T15:57:56.7883230Z 
2025-02-24T15:57:56.7883430Z Packets:   ████████████████████████████▋                                                   71729/200000 [00:00<00:01, 92229.28it/s][A
2025-02-24T15:57:56.7883430Z 
2025-02-24T15:57:56.7883650Z Packets:   █████████████████████████████████▉                                              84932/200000 [00:00<00:01, 104093.21it/s][A
2025-02-24T15:57:56.7883650Z 
2025-02-24T15:57:56.7883860Z Packets:   ██████████████████████████████████████▍                                         96041/200000 [00:01<00:00, 106182.83it/s][A
2025-02-24T15:57:56.7883950Z 
2025-02-24T15:57:56.7884180Z Packets:   ███████████████████████████████████████████                                     107759/200000 [00:01<00:00, 109470.99it/s][A
2025-02-24T15:57:56.7884180Z 
2025-02-24T15:57:56.7884400Z Packets:   ███████████████████████████████████████████████▌                                118839/200000 [00:01<00:00, 109252.32it/s][A
2025-02-24T15:57:56.7884410Z 
2025-02-24T15:57:56.7884640Z Packets:   ███████████████████████████████████████████████████▉                            129857/200000 [00:01<00:00, 104930.75it/s][A
2025-02-24T15:57:56.7884640Z 
2025-02-24T15:57:56.7884870Z Packets:   ████████████████████████████████████████████████████████▋                       141790/200000 [00:01<00:00, 109104.13it/s][A
2025-02-24T15:57:56.7884870Z 
2025-02-24T15:57:56.7885100Z Packets:   █████████████████████████████████████████████████████████████▍                  153614/200000 [00:01<00:00, 111777.88it/s][A
2025-02-24T15:57:56.7885100Z 
2025-02-24T15:57:56.7885350Z Packets:   █████████████████████████████████████████████████████████████████▉              164860/200000 [00:01<00:00, 109840.55it/s][A
2025-02-24T15:57:56.7885350Z 
2025-02-24T15:57:56.7885590Z Packets:   ██████████████████████████████████████████████████████████████████████▋         176813/200000 [00:01<00:00, 112673.98it/s][A
2025-02-24T15:57:56.7885590Z 
2025-02-24T15:57:56.7889610Z Packets:   ███████████████████████████████████████████████████████████████████████████▎    188125/200000 [00:01<00:00, 108066.21it/s][A
2025-02-24T15:57:56.7889640Z 
2025-02-24T15:57:56.7890050Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉199750/200000 [00:01<00:00, 110417.49it/s][A
2025-02-24T15:57:56.7892000Z Iterations:                                                                                16/? [05:38<00:00,  7.34s/it]
2025-02-24T15:57:56.7892010Z 
2025-02-24T15:57:56.7892340Z Packets:   ████████████████████████████████████████████████████████████████████████████████200000/200000 [00:02<00:00, 110417.49it/s][A
2025-02-24T15:57:56.7892680Z 
2025-02-24T15:57:56.7892870Z Packets:                                                                                   0/500000 [00:00<?, ?it/s]                 [A
2025-02-24T15:57:56.7892880Z 
2025-02-24T15:57:56.7893180Z Packets:   █▊                                                                              11098/500000 [00:00<00:14, 32752.23it/s][A
2025-02-24T15:57:56.7893190Z 
2025-02-24T15:57:56.7893370Z Packets:   ██▎                                                                             14374/500000 [00:00<00:15, 32332.93it/s][A
2025-02-24T15:57:56.7893370Z 
2025-02-24T15:57:56.7893550Z Packets:   ██▊                                                                             17869/500000 [00:00<00:14, 33104.47it/s][A
2025-02-24T15:57:56.7893550Z 
2025-02-24T15:57:56.7893860Z Packets:   ███▍                                                                            21201/500000 [00:00<00:14, 32947.24it/s][A
2025-02-24T15:57:56.7893870Z 
2025-02-24T15:57:56.7894060Z Packets:   ███▉                                                                            24504/500000 [00:00<00:14, 31741.73it/s][A
2025-02-24T15:57:56.7894060Z 
2025-02-24T15:57:56.7894250Z Packets:   ████▍                                                                           27886/500000 [00:00<00:14, 32343.09it/s][A
2025-02-24T15:57:56.7894250Z 
2025-02-24T15:57:56.7894430Z Packets:   █████▏                                                                          32261/500000 [00:00<00:13, 35634.81it/s][A
2025-02-24T15:57:56.7894430Z 
2025-02-24T15:57:56.7894620Z Packets:   █████▋                                                                          35866/500000 [00:01<00:14, 31454.39it/s][A
2025-02-24T15:57:56.7894620Z 
2025-02-24T15:57:56.7894800Z Packets:   ██████▎                                                                         39107/500000 [00:01<00:14, 31608.06it/s][A
2025-02-24T15:57:56.7894800Z 
2025-02-24T15:57:56.7894990Z Packets:   ██████▊                                                                         42336/500000 [00:01<00:14, 31325.98it/s][A
2025-02-24T15:57:56.7894990Z 
2025-02-24T15:57:56.7895170Z Packets:   ███████▍                                                                        46157/500000 [00:01<00:13, 33065.78it/s][A
2025-02-24T15:57:56.7895170Z 
2025-02-24T15:57:56.7895360Z Packets:   ███████▉                                                                        49803/500000 [00:01<00:13, 34031.05it/s][A
2025-02-24T15:57:56.7895360Z 
2025-02-24T15:57:56.7895550Z Packets:   ████████▋                                                                       53908/500000 [00:01<00:12, 36061.63it/s][A
2025-02-24T15:57:56.7895550Z 
2025-02-24T15:57:56.7895730Z Packets:   █████████▎                                                                      58155/500000 [00:01<00:11, 37429.19it/s][A
2025-02-24T15:57:56.7895740Z 
2025-02-24T15:57:56.7895910Z Packets:   █████████▉                                                                      61923/500000 [00:01<00:12, 35744.61it/s][A
2025-02-24T15:57:56.7895920Z 
2025-02-24T15:57:56.7896110Z Packets:   ██████████▍                                                                     65527/500000 [00:01<00:12, 35050.23it/s][A
2025-02-24T15:57:56.7896110Z 
2025-02-24T15:57:56.7896410Z Packets:   ███████████▏                                                                    70256/500000 [00:02<00:11, 38531.40it/s][A
2025-02-24T15:57:56.7896410Z 
2025-02-24T15:57:56.7896600Z Packets:   ███████████▊                                                                    74144/500000 [00:02<00:11, 37419.54it/s][A
2025-02-24T15:57:56.7896600Z 
2025-02-24T15:57:56.7896790Z Packets:   ████████████▍                                                                   77914/500000 [00:02<00:11, 36684.04it/s][A
2025-02-24T15:57:56.7896790Z 
2025-02-24T15:57:56.7896970Z Packets:   █████████████                                                                   81602/500000 [00:02<00:12, 34249.09it/s][A
2025-02-24T15:57:56.7897040Z 
2025-02-24T15:57:56.7897230Z Packets:   █████████████▌                                                                  85066/500000 [00:02<00:12, 33102.46it/s][A
2025-02-24T15:57:56.7897230Z 
2025-02-24T15:57:56.7897420Z Packets:   ██████████████▎                                                                 89126/500000 [00:02<00:11, 35162.30it/s][A
2025-02-24T15:57:56.7897430Z 
2025-02-24T15:57:56.7897610Z Packets:   ██████████████▉                                                                 93387/500000 [00:02<00:10, 37257.70it/s][A
2025-02-24T15:57:56.7897610Z 
2025-02-24T15:57:56.7897800Z Packets:   ███████████████▌                                                                97153/500000 [00:02<00:12, 32493.89it/s][A
2025-02-24T15:57:56.7897800Z 
2025-02-24T15:57:56.7897990Z Packets:   ████████████████                                                                100640/500000 [00:02<00:12, 33113.75it/s][A
2025-02-24T15:57:56.7898000Z 
2025-02-24T15:57:56.7898190Z Packets:   ████████████████▋                                                               104051/500000 [00:03<00:13, 29821.23it/s][A
2025-02-24T15:57:56.7898200Z 
2025-02-24T15:57:56.7898390Z Packets:   █████████████████▏                                                              107698/500000 [00:03<00:12, 31537.33it/s][A
2025-02-24T15:57:56.7898400Z 
2025-02-24T15:57:56.7898590Z Packets:   █████████████████▉                                                              111865/500000 [00:03<00:11, 34267.45it/s][A
2025-02-24T15:57:56.7898600Z 
2025-02-24T15:57:56.7898790Z Packets:   ██████████████████▌                                                             115987/500000 [00:03<00:10, 36091.17it/s][A
2025-02-24T15:57:56.7898800Z 
2025-02-24T15:57:56.7898990Z Packets:   ███████████████████▏                                                            119862/500000 [00:03<00:10, 36845.13it/s][A
2025-02-24T15:57:56.7898990Z 
2025-02-24T15:57:56.7899190Z Packets:   ███████████████████▊                                                            123613/500000 [00:03<00:10, 36551.06it/s][A
2025-02-24T15:57:56.7899200Z 
2025-02-24T15:57:56.7899400Z Packets:   ████████████████████▍                                                           127445/500000 [00:03<00:10, 37062.13it/s][A
2025-02-24T15:57:56.7899400Z 
2025-02-24T15:57:56.7899600Z Packets:   ████████████████████▉                                                           131186/500000 [00:03<00:10, 34173.62it/s][A
2025-02-24T15:57:56.7899610Z 
2025-02-24T15:57:56.7899800Z Packets:   █████████████████████▋                                                          135623/500000 [00:03<00:09, 37001.39it/s][A
2025-02-24T15:57:56.7899810Z 
2025-02-24T15:57:56.7900000Z Packets:   ██████████████████████▍                                                         140092/500000 [00:04<00:09, 39182.75it/s][A
2025-02-24T15:57:56.7900010Z 
2025-02-24T15:57:56.7900200Z Packets:   ███████████████████████                                                         144089/500000 [00:04<00:09, 39407.80it/s][A
2025-02-24T15:57:56.7900260Z 
2025-02-24T15:57:56.7900470Z Packets:   ███████████████████████▋                                                        148329/500000 [00:04<00:08, 40275.14it/s][A
2025-02-24T15:57:56.7900470Z 
2025-02-24T15:57:56.7900720Z Packets:   ████████████████████████▍                                                       152529/500000 [00:04<00:08, 40781.27it/s][A
2025-02-24T15:57:56.7900720Z 
2025-02-24T15:57:56.7900930Z Packets:   █████████████████████████                                                       156631/500000 [00:04<00:08, 39648.17it/s][A
2025-02-24T15:57:56.7900930Z 
2025-02-24T15:57:56.7901130Z Packets:   █████████████████████████▊                                                      161206/500000 [00:04<00:08, 41423.06it/s][A
2025-02-24T15:57:56.7901130Z 
2025-02-24T15:57:56.7901330Z Packets:   ██████████████████████████▍                                                     165370/500000 [00:04<00:08, 40229.38it/s][A
2025-02-24T15:57:56.7901340Z 
2025-02-24T15:57:56.7901900Z Packets:   ███████████████████████████▎                                                    170355/500000 [00:04<00:07, 43008.50it/s][A
2025-02-24T15:57:56.7901910Z 
2025-02-24T15:57:56.7902130Z Packets:   ████████████████████████████                                                    175111/500000 [00:04<00:07, 44085.15it/s][A
2025-02-24T15:57:56.7902140Z 
2025-02-24T15:57:56.7902340Z Packets:   ████████████████████████████▋                                                   179539/500000 [00:05<00:08, 38013.38it/s][A
2025-02-24T15:57:56.7902350Z 
2025-02-24T15:57:56.7902550Z Packets:   █████████████████████████████▎                                                  183496/500000 [00:05<00:08, 37400.12it/s][A
2025-02-24T15:57:56.7902550Z 
2025-02-24T15:57:56.7902760Z Packets:   ██████████████████████████████                                                  187762/500000 [00:05<00:08, 38814.91it/s][A
2025-02-24T15:57:56.7902770Z 
2025-02-24T15:57:56.7902970Z Packets:   ██████████████████████████████▊                                                 192256/500000 [00:05<00:07, 40516.68it/s][A
2025-02-24T15:57:56.7902970Z 
2025-02-24T15:57:56.7903180Z Packets:   ███████████████████████████████▍                                                196587/500000 [00:05<00:07, 41225.29it/s][A
2025-02-24T15:57:56.7903190Z 
2025-02-24T15:57:56.7903400Z Packets:   ████████████████████████████████                                                200767/500000 [00:05<00:07, 40806.37it/s][A
2025-02-24T15:57:56.7903400Z 
2025-02-24T15:57:56.7903600Z Packets:   ████████████████████████████████▉                                               205662/500000 [00:05<00:06, 43157.84it/s][A
2025-02-24T15:57:56.7903610Z 
2025-02-24T15:57:56.7903820Z Packets:   █████████████████████████████████▋                                              210630/500000 [00:05<00:06, 45062.35it/s][A
2025-02-24T15:57:56.7903820Z 
2025-02-24T15:57:56.7904030Z Packets:   ██████████████████████████████████▍                                             215168/500000 [00:05<00:07, 37684.96it/s][A
2025-02-24T15:57:56.7904260Z 
2025-02-24T15:57:56.7904520Z Packets:   ███████████████████████████████████                                             219158/500000 [00:06<00:07, 36674.67it/s][A
2025-02-24T15:57:56.7904520Z 
2025-02-24T15:57:56.7904850Z Packets:   ███████████████████████████████████▋                                            223119/500000 [00:06<00:07, 37444.84it/s][A
2025-02-24T15:57:56.7904850Z 
2025-02-24T15:57:56.7905070Z Packets:   ████████████████████████████████████▎                                           226981/500000 [00:06<00:07, 36922.95it/s][A
2025-02-24T15:57:56.7905070Z 
2025-02-24T15:57:56.7905280Z Packets:   ████████████████████████████████████▉                                           230815/500000 [00:06<00:07, 37310.36it/s][A
2025-02-24T15:57:56.7905280Z 
2025-02-24T15:57:56.7905500Z Packets:   █████████████████████████████████████▌                                          234606/500000 [00:06<00:07, 35559.35it/s][A
2025-02-24T15:57:56.7905510Z 
2025-02-24T15:57:56.7905720Z Packets:   ██████████████████████████████████████                                          238215/500000 [00:06<00:08, 30352.93it/s][A
2025-02-24T15:57:56.7905720Z 
2025-02-24T15:57:56.7905950Z Packets:   ██████████████████████████████████████▌                                         241403/500000 [00:06<00:09, 28208.36it/s][A
2025-02-24T15:57:56.7905950Z 
2025-02-24T15:57:56.7906170Z Packets:   ███████████████████████████████████████▎                                        245332/500000 [00:06<00:08, 30955.58it/s][A
2025-02-24T15:57:56.7906180Z 
2025-02-24T15:57:56.7906390Z Packets:   ███████████████████████████████████████▉                                        249463/500000 [00:06<00:07, 33664.42it/s][A
2025-02-24T15:57:56.7906390Z 
2025-02-24T15:57:56.7906610Z Packets:   ████████████████████████████████████████▋                                       253916/500000 [00:07<00:06, 36620.01it/s][A
2025-02-24T15:57:56.7906620Z 
2025-02-24T15:57:56.7906830Z Packets:   █████████████████████████████████████████▎                                      258335/500000 [00:07<00:06, 38736.26it/s][A
2025-02-24T15:57:56.7906840Z 
2025-02-24T15:57:56.7907170Z Packets:   █████████████████████████████████████████▉                                      262312/500000 [00:07<00:06, 34558.45it/s][A
2025-02-24T15:57:56.7907190Z 
2025-02-24T15:57:56.7907540Z Packets:   ██████████████████████████████████████████▋                                     266623/500000 [00:07<00:06, 36827.92it/s][A
2025-02-24T15:57:56.7907540Z 
2025-02-24T15:57:56.7907760Z Packets:   ███████████████████████████████████████████▎                                    270440/500000 [00:07<00:06, 36513.99it/s][A
2025-02-24T15:57:56.7907770Z 
2025-02-24T15:57:56.7907990Z Packets:   ███████████████████████████████████████████▊                                    274184/500000 [00:07<00:06, 36673.05it/s][A
2025-02-24T15:57:56.7908140Z 
2025-02-24T15:57:56.7908360Z Packets:   ████████████████████████████████████████████▌                                   278646/500000 [00:07<00:05, 38928.30it/s][A
2025-02-24T15:57:56.7908370Z 
2025-02-24T15:57:56.7908580Z Packets:   █████████████████████████████████████████████▏                                  282598/500000 [00:07<00:06, 34095.15it/s][A
2025-02-24T15:57:56.7908650Z 
2025-02-24T15:57:56.7908870Z Packets:   █████████████████████████████████████████████▉                                  287039/500000 [00:07<00:05, 36820.87it/s][A
2025-02-24T15:57:56.7908880Z 
2025-02-24T15:57:56.7909100Z Packets:   ██████████████████████████████████████████████▋                                 291872/500000 [00:08<00:05, 39975.47it/s][A
2025-02-24T15:57:56.7909100Z 
2025-02-24T15:57:56.7909320Z Packets:   ███████████████████████████████████████████████▎                                295995/500000 [00:08<00:05, 38848.43it/s][A
2025-02-24T15:57:56.7909320Z 
2025-02-24T15:57:56.7909540Z Packets:   ███████████████████████████████████████████████▉                                299971/500000 [00:08<00:05, 37862.64it/s][A
2025-02-24T15:57:56.7909560Z 
2025-02-24T15:57:56.7909780Z Packets:   ████████████████████████████████████████████████▌                               303822/500000 [00:08<00:05, 37222.25it/s][A
2025-02-24T15:57:56.7909780Z 
2025-02-24T15:57:56.7910020Z Packets:   █████████████████████████████████████████████████▏                              307588/500000 [00:08<00:05, 33566.43it/s][A
2025-02-24T15:57:56.7910020Z 
2025-02-24T15:57:56.7910250Z Packets:   █████████████████████████████████████████████████▊                              311031/500000 [00:08<00:05, 32929.82it/s][A
2025-02-24T15:57:56.7910250Z 
2025-02-24T15:57:56.7910480Z Packets:   ██████████████████████████████████████████████████▎                             314529/500000 [00:08<00:05, 33477.68it/s][A
2025-02-24T15:57:56.7910480Z 
2025-02-24T15:57:56.7910700Z Packets:   ██████████████████████████████████████████████████▉                             317976/500000 [00:08<00:05, 33752.88it/s][A
2025-02-24T15:57:56.7910710Z 
2025-02-24T15:57:56.7910940Z Packets:   ███████████████████████████████████████████████████▍                            321386/500000 [00:08<00:05, 32039.58it/s][A
2025-02-24T15:57:56.7910940Z 
2025-02-24T15:57:56.7911220Z Packets:   ███████████████████████████████████████████████████▉                            324626/500000 [00:09<00:05, 30360.70it/s][A
2025-02-24T15:57:56.7911220Z 
2025-02-24T15:57:56.7911450Z Packets:   ████████████████████████████████████████████████████▍                           327697/500000 [00:09<00:05, 30360.76it/s][A
2025-02-24T15:57:56.7911450Z 
2025-02-24T15:57:56.7911680Z Packets:   ████████████████████████████████████████████████████▉                           331116/500000 [00:09<00:05, 31430.48it/s][A
2025-02-24T15:57:56.7911680Z 
2025-02-24T15:57:56.7911910Z Packets:   █████████████████████████████████████████████████████▋                          335352/500000 [00:09<00:04, 34549.28it/s][A
2025-02-24T15:57:56.7911970Z 
2025-02-24T15:57:56.7912200Z Packets:   ██████████████████████████████████████████████████████▏                         338864/500000 [00:09<00:04, 34712.25it/s][A
2025-02-24T15:57:56.7912210Z 
2025-02-24T15:57:56.7912440Z Packets:   ██████████████████████████████████████████████████████▉                         343165/500000 [00:09<00:04, 37139.91it/s][A
2025-02-24T15:57:56.7912450Z 
2025-02-24T15:57:56.7912680Z Packets:   ███████████████████████████████████████████████████████▌                        347529/500000 [00:09<00:03, 39054.22it/s][A
2025-02-24T15:57:56.7912680Z 
2025-02-24T15:57:56.7912910Z Packets:   ████████████████████████████████████████████████████████▏                       351454/500000 [00:09<00:03, 37390.40it/s][A
2025-02-24T15:57:56.7912920Z 
2025-02-24T15:57:56.7913140Z Packets:   ████████████████████████████████████████████████████████▊                       355432/500000 [00:09<00:03, 38076.43it/s][A
2025-02-24T15:57:56.7913150Z 
2025-02-24T15:57:56.7913380Z Packets:   █████████████████████████████████████████████████████████▍                      359262/500000 [00:10<00:04, 32720.69it/s][A
2025-02-24T15:57:56.7913380Z 
2025-02-24T15:57:56.7913600Z Packets:   ██████████████████████████████████████████████████████████                      362986/500000 [00:10<00:04, 33909.13it/s][A
2025-02-24T15:57:56.7913620Z 
2025-02-24T15:57:56.7913840Z Packets:   ██████████████████████████████████████████████████████████▊                     367569/500000 [00:10<00:03, 37165.12it/s][A
2025-02-24T15:57:56.7913850Z 
2025-02-24T15:57:56.7914070Z Packets:   ███████████████████████████████████████████████████████████▍                    371399/500000 [00:10<00:03, 35016.74it/s][A
2025-02-24T15:57:56.7914070Z 
2025-02-24T15:57:56.7914300Z Packets:   ████████████████████████████████████████████████████████████                    375311/500000 [00:10<00:03, 36134.61it/s][A
2025-02-24T15:57:56.7914300Z 
2025-02-24T15:57:56.7914520Z Packets:   ████████████████████████████████████████████████████████████▋                   379016/500000 [00:10<00:03, 36391.07it/s][A
2025-02-24T15:57:56.7914540Z 
2025-02-24T15:57:56.7914770Z Packets:   █████████████████████████████████████████████████████████████▎                  383559/500000 [00:10<00:02, 38974.07it/s][A
2025-02-24T15:57:56.7914770Z 
2025-02-24T15:57:56.7915060Z Packets:   ██████████████████████████████████████████████████████████████                  387510/500000 [00:10<00:03, 32457.67it/s][A
2025-02-24T15:57:56.7915060Z 
2025-02-24T15:57:56.7915300Z Packets:   ██████████████████████████████████████████████████████████████▌                 391016/500000 [00:10<00:03, 33122.10it/s][A
2025-02-24T15:57:56.7915300Z 
2025-02-24T15:57:56.7915530Z Packets:   ███████████████████████████████████████████████████████████████                 394489/500000 [00:11<00:03, 32701.22it/s][A
2025-02-24T15:57:56.7915540Z 
2025-02-24T15:57:56.7915760Z Packets:   ███████████████████████████████████████████████████████████████▋                398022/500000 [00:11<00:03, 33414.58it/s][A
2025-02-24T15:57:56.7915820Z 
2025-02-24T15:57:56.7916050Z Packets:   ████████████████████████████████████████████████████████████████▎               402018/500000 [00:11<00:02, 35241.60it/s][A
2025-02-24T15:57:56.7916050Z 
2025-02-24T15:57:56.7916290Z Packets:   ████████████████████████████████████████████████████████████████▉               405615/500000 [00:11<00:02, 35262.69it/s][A
2025-02-24T15:57:56.7916300Z 
2025-02-24T15:57:56.7916540Z Packets:   █████████████████████████████████████████████████████████████████▌              409388/500000 [00:11<00:02, 35973.69it/s][A
2025-02-24T15:57:56.7916540Z 
2025-02-24T15:57:56.7916770Z Packets:   ██████████████████████████████████████████████████████████████████              413024/500000 [00:11<00:02, 33605.42it/s][A
2025-02-24T15:57:56.7916780Z 
2025-02-24T15:57:56.7917010Z Packets:   ██████████████████████████████████████████████████████████████████▋             416440/500000 [00:11<00:02, 30092.36it/s][A
2025-02-24T15:57:56.7917020Z 
2025-02-24T15:57:56.7917260Z Packets:   ███████████████████████████████████████████████████████████████████▏            420198/500000 [00:11<00:02, 32058.54it/s][A
2025-02-24T15:57:56.7917260Z 
2025-02-24T15:57:56.7917590Z Packets:   ███████████████████████████████████████████████████████████████████▉            424582/500000 [00:11<00:02, 35270.17it/s][A
2025-02-24T15:57:56.7917590Z 
2025-02-24T15:57:56.7917830Z Packets:   ████████████████████████████████████████████████████████████████████▋           429361/500000 [00:12<00:01, 38780.32it/s][A
2025-02-24T15:57:56.7917830Z 
2025-02-24T15:57:56.7918070Z Packets:   █████████████████████████████████████████████████████████████████████▍          434106/500000 [00:12<00:01, 41258.58it/s][A
2025-02-24T15:57:56.7918070Z 
2025-02-24T15:57:56.7918310Z Packets:   ██████████████████████████████████████████████████████████████████████▏         438310/500000 [00:12<00:01, 39776.51it/s][A
2025-02-24T15:57:56.7918400Z 
2025-02-24T15:57:56.7918640Z Packets:   ██████████████████████████████████████████████████████████████████████▊         442351/500000 [00:12<00:01, 31874.59it/s][A
2025-02-24T15:57:56.7918650Z 
2025-02-24T15:57:56.7918890Z Packets:   ███████████████████████████████████████████████████████████████████████▎        445821/500000 [00:12<00:01, 31489.76it/s][A
2025-02-24T15:57:56.7918900Z 
2025-02-24T15:57:56.7919140Z Packets:   ███████████████████████████████████████████████████████████████████████▊        449164/500000 [00:12<00:01, 31202.44it/s][A
2025-02-24T15:57:56.7919140Z 
2025-02-24T15:57:56.7919380Z Packets:   ████████████████████████████████████████████████████████████████████████▍       452417/500000 [00:12<00:01, 31371.64it/s][A
2025-02-24T15:57:56.7919380Z 
2025-02-24T15:57:56.7919620Z Packets:   ████████████████████████████████████████████████████████████████████████▉       456169/500000 [00:12<00:01, 33030.60it/s][A
2025-02-24T15:57:56.7919620Z 
2025-02-24T15:57:56.7919860Z Packets:   █████████████████████████████████████████████████████████████████████████▌      460040/500000 [00:12<00:01, 34610.80it/s][A
2025-02-24T15:57:56.7919880Z 
2025-02-24T15:57:56.7920120Z Packets:   ██████████████████████████████████████████████████████████████████████████▏     464051/500000 [00:13<00:00, 36174.38it/s][A
2025-02-24T15:57:56.7920120Z 
2025-02-24T15:57:56.7920370Z Packets:   ██████████████████████████████████████████████████████████████████████████▊     467731/500000 [00:13<00:00, 36353.74it/s][A
2025-02-24T15:57:56.7920380Z 
2025-02-24T15:57:56.7921000Z Packets:   ███████████████████████████████████████████████████████████████████████████▌    472603/500000 [00:13<00:00, 39967.06it/s][A
2025-02-24T15:57:56.7921000Z 
2025-02-24T15:57:56.7921260Z Packets:   ████████████████████████████████████████████████████████████████████████████▎   476689/500000 [00:13<00:00, 40225.04it/s][A
2025-02-24T15:57:56.7921270Z 
2025-02-24T15:57:56.7921510Z Packets:   ████████████████████████████████████████████████████████████████████████████▉   480740/500000 [00:13<00:00, 38067.66it/s][A
2025-02-24T15:57:56.7921620Z 
2025-02-24T15:57:56.7921890Z Packets:   █████████████████████████████████████████████████████████████████████████████▌  484589/500000 [00:13<00:00, 35109.75it/s][A
2025-02-24T15:57:56.7921890Z 
2025-02-24T15:57:56.7922210Z Packets:   ██████████████████████████████████████████████████████████████████████████████  488167/500000 [00:13<00:00, 32452.72it/s][A
2025-02-24T15:57:56.7922210Z 
2025-02-24T15:57:56.7922460Z Packets:   ██████████████████████████████████████████████████████████████████████████████▋ 491837/500000 [00:13<00:00, 33567.54it/s][A
2025-02-24T15:57:56.7922470Z 
2025-02-24T15:57:56.7922740Z Packets:   ███████████████████████████████████████████████████████████████████████████████▍496323/500000 [00:13<00:00, 36656.13it/s][A
2025-02-24T15:57:56.7922870Z Iterations:                                                                                17/? [05:59<00:00, 11.36s/it]
2025-02-24T15:57:56.7922890Z 
2025-02-24T15:57:56.7923150Z Packets:   ████████████████████████████████████████████████████████████████████████████████500000/500000 [00:18<00:00, 36656.13it/s][A
2025-02-24T15:57:56.7923300Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.7923430Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-02-24T15:57:56.7923740Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-02-24T15:57:56.7924050Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-02-24T15:57:56.7924410Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-02-24T15:57:56.7924820Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:57:56.7925010Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:57:56.7925100Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:57:56.7925160Z 	Starting iteration 1 of 5
2025-02-24T15:57:56.7925300Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:57:56.7925380Z 	Luminosity emitted   = 8.104e+42 erg / s
2025-02-24T15:57:56.7925450Z 	Luminosity absorbed  = 2.674e+42 erg / s
2025-02-24T15:57:56.7925520Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.7925520Z 
2025-02-24T15:57:56.7925600Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:57:56.7925660Z 	Plasma stratification:
2025-02-24T15:57:56.7925740Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:57:56.7925830Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-02-24T15:57:56.7925900Z 	0         9.97e+03 K  1.01e+04 K   0.4   0.449
2025-02-24T15:57:56.7926020Z 	5         9.89e+03 K  1.01e+04 K 0.211   0.201
2025-02-24T15:57:56.7926090Z 	10        9.82e+03 K     1e+04 K 0.143   0.129
2025-02-24T15:57:56.7926150Z 	15        9.75e+03 K  9.85e+03 K 0.105  0.0953
2025-02-24T15:57:56.7926160Z 
2025-02-24T15:57:56.7926230Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:57:56.7926300Z 	Current t_inner = 9974.969 K
2025-02-24T15:57:56.7926390Z 	Expected t_inner for next iteration = 10736.790 K
2025-02-24T15:57:56.7926390Z 
2025-02-24T15:57:56.7926470Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:57:56.7926530Z 	Starting iteration 2 of 5
2025-02-24T15:57:56.7926610Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:57:56.7926680Z 	Luminosity emitted   = 1.084e+43 erg / s
2025-02-24T15:57:56.7926750Z 	Luminosity absorbed  = 3.623e+42 erg / s
2025-02-24T15:57:56.7926820Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.7926820Z 
2025-02-24T15:57:56.7926900Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:57:56.7926960Z 	Plasma stratification:
2025-02-24T15:57:56.7927040Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:57:56.7927120Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:57:56.7927180Z 	0         1.01e+04 K  1.05e+04 K  0.449   0.481
2025-02-24T15:57:56.7927250Z 	5         1.01e+04 K  1.06e+04 K  0.201   0.202
2025-02-24T15:57:56.7927310Z 	10           1e+04 K  1.04e+04 K  0.129   0.127
2025-02-24T15:57:56.7927370Z 	15        9.85e+03 K  1.02e+04 K 0.0953  0.0935
2025-02-24T15:57:56.7927380Z 
2025-02-24T15:57:56.7927450Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:57:56.7927510Z 	Current t_inner = 10736.790 K
2025-02-24T15:57:56.7927600Z 	Expected t_inner for next iteration = 10718.574 K
2025-02-24T15:57:56.7927610Z 
2025-02-24T15:57:56.7927680Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:57:56.7927740Z 	Starting iteration 3 of 5
2025-02-24T15:57:56.7927820Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:57:56.7927880Z 	Luminosity emitted   = 1.086e+43 erg / s
2025-02-24T15:57:56.7927950Z 	Luminosity absorbed  = 3.512e+42 erg / s
2025-02-24T15:57:56.7928020Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.7928020Z 
2025-02-24T15:57:56.7928200Z INFO     tardis.simulation.base:base.py:260 Iteration converged 1/4 consecutive times.
2025-02-24T15:57:56.7928280Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:57:56.7928330Z 	Plasma stratification:
2025-02-24T15:57:56.7928410Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:57:56.7928490Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:57:56.7928550Z 	0         1.05e+04 K  1.07e+04 K  0.481   0.491
2025-02-24T15:57:56.7928620Z 	5         1.06e+04 K  1.09e+04 K  0.202   0.198
2025-02-24T15:57:56.7928680Z 	10        1.04e+04 K  1.07e+04 K  0.127   0.124
2025-02-24T15:57:56.7928740Z 	15        1.02e+04 K  1.04e+04 K 0.0935  0.0922
2025-02-24T15:57:56.7928740Z 
2025-02-24T15:57:56.7928820Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:57:56.7928880Z 	Current t_inner = 10718.574 K
2025-02-24T15:57:56.7928970Z 	Expected t_inner for next iteration = 10696.150 K
2025-02-24T15:57:56.7928970Z 
2025-02-24T15:57:56.7929050Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:57:56.7929120Z 	Starting iteration 4 of 5
2025-02-24T15:57:56.7929190Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:57:56.7929310Z 	Luminosity emitted   = 1.083e+43 erg / s
2025-02-24T15:57:56.7929520Z 	Luminosity absorbed  = 3.426e+42 erg / s
2025-02-24T15:57:56.7929600Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.7929600Z 
2025-02-24T15:57:56.7929770Z INFO     tardis.simulation.base:base.py:260 Iteration converged 2/4 consecutive times.
2025-02-24T15:57:56.7929850Z INFO     tardis.simulation.base:base.py:649 
2025-02-24T15:57:56.7929910Z 	Plasma stratification:
2025-02-24T15:57:56.7929990Z INFO     tardis.simulation.base:base.py:650 
2025-02-24T15:57:56.7930060Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-02-24T15:57:56.7930130Z 	0         1.07e+04 K  1.09e+04 K  0.491   0.489
2025-02-24T15:57:56.7930250Z 	5         1.09e+04 K   1.1e+04 K  0.198   0.193
2025-02-24T15:57:56.7930320Z 	10        1.07e+04 K  1.08e+04 K  0.124   0.122
2025-02-24T15:57:56.7930390Z 	15        1.04e+04 K  1.05e+04 K 0.0922  0.0902
2025-02-24T15:57:56.7930390Z 
2025-02-24T15:57:56.7930470Z INFO     tardis.simulation.base:base.py:652 
2025-02-24T15:57:56.7930530Z 	Current t_inner = 10696.150 K
2025-02-24T15:57:56.7930620Z 	Expected t_inner for next iteration = 10681.168 K
2025-02-24T15:57:56.7930620Z 
2025-02-24T15:57:56.7930700Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:57:56.7930770Z 	Simulation finished in 4 iterations 
2025-02-24T15:57:56.7930830Z 	Simulation took 12.12 s
2025-02-24T15:57:56.7930830Z 
2025-02-24T15:57:56.7930910Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:57:56.7930970Z 	Starting iteration 5 of 5
2025-02-24T15:57:56.7931040Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:57:56.7931110Z 	Luminosity emitted   = 1.074e+43 erg / s
2025-02-24T15:57:56.7931180Z 	Luminosity absorbed  = 3.438e+42 erg / s
2025-02-24T15:57:56.7931240Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.7931390Z ______________________ TestTransportSimple.test_spectrum _______________________
2025-02-24T15:57:56.7931390Z 
2025-02-24T15:57:56.7931560Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x13fd0b7d0>
2025-02-24T15:57:56.7931710Z simulation = <tardis.simulation.base.Simulation object at 0x15037ff50>
2025-02-24T15:57:56.7931710Z 
2025-02-24T15:57:56.7931780Z     def test_spectrum(self, simulation):
2025-02-24T15:57:56.7931920Z         key = "simulation/spectrum_solver/spectrum_real_packets/luminosity"
2025-02-24T15:57:56.7932000Z         expected = self.get_expected_data(key)
2025-02-24T15:57:56.7932040Z     
2025-02-24T15:57:56.7932120Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.7932170Z     
2025-02-24T15:57:56.7932230Z >       assert_quantity_allclose(
2025-02-24T15:57:56.7932370Z             simulation.spectrum_solver.spectrum_real_packets.luminosity,
2025-02-24T15:57:56.7932420Z             luminosity,
2025-02-24T15:57:56.7932470Z         )
2025-02-24T15:57:56.7932470Z 
2025-02-24T15:57:56.7932540Z tardis/tests/test_tardis_full.py:81: 
2025-02-24T15:57:56.7932630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7932900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7932970Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7933060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7933070Z 
2025-02-24T15:57:56.7933430Z args = (<function assert_allclose.<locals>.compare at 0x30b0702c0>, array([1.47119190e+39, 1.69564189e+39, 1.35368464e+39, .....), array([1.41445923e+39, 1.75365002e+39, 1.41304405e+39, ...,
2025-02-24T15:57:56.7933510Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.7933720Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7933720Z 
2025-02-24T15:57:56.7933770Z     @wraps(func)
2025-02-24T15:57:56.7933830Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7933890Z         with self._recreate_cm():
2025-02-24T15:57:56.7934050Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7934130Z E           AssertionError: 
2025-02-24T15:57:56.7934210Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7934260Z E           
2025-02-24T15:57:56.7934340Z E           Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T15:57:56.7934430Z E           Max absolute difference: 1.38672909e+39
2025-02-24T15:57:56.7939500Z E           Max relative difference: 5.25284451
2025-02-24T15:57:56.7939700Z E            x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.7939770Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7940180Z E            y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.7940250Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7940250Z 
2025-02-24T15:57:56.7940430Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7940590Z __________________ TestTransportSimple.test_virtual_spectrum ___________________
2025-02-24T15:57:56.7940590Z 
2025-02-24T15:57:56.7940760Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x13fd0ba10>
2025-02-24T15:57:56.7940910Z simulation = <tardis.simulation.base.Simulation object at 0x15037ff50>
2025-02-24T15:57:56.7940910Z 
2025-02-24T15:57:56.7941000Z     def test_virtual_spectrum(self, simulation):
2025-02-24T15:57:56.7941140Z         key = "simulation/spectrum_solver/spectrum_virtual_packets/luminosity"
2025-02-24T15:57:56.7941220Z         expected = self.get_expected_data(key)
2025-02-24T15:57:56.7941270Z     
2025-02-24T15:57:56.7941360Z         luminosity = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.7941410Z     
2025-02-24T15:57:56.7941470Z >       assert_quantity_allclose(
2025-02-24T15:57:56.7941620Z             simulation.spectrum_solver.spectrum_virtual_packets.luminosity,
2025-02-24T15:57:56.7941670Z             luminosity,
2025-02-24T15:57:56.7941720Z         )
2025-02-24T15:57:56.7941730Z 
2025-02-24T15:57:56.7941800Z tardis/tests/test_tardis_full.py:92: 
2025-02-24T15:57:56.7941890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7942160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7942220Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7942310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7942320Z 
2025-02-24T15:57:56.7942680Z args = (<function assert_allclose.<locals>.compare at 0x30b071f80>, array([1.44033177e+39, 1.35611403e+39, 1.39755698e+39, .....), array([1.45484259e+39, 1.36306291e+39, 1.38939833e+39, ...,
2025-02-24T15:57:56.7942770Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.7942980Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7942980Z 
2025-02-24T15:57:56.7943040Z     @wraps(func)
2025-02-24T15:57:56.7943100Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7943170Z         with self._recreate_cm():
2025-02-24T15:57:56.7943230Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7943300Z E           AssertionError: 
2025-02-24T15:57:56.7943380Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7943430Z E           
2025-02-24T15:57:56.7943510Z E           Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T15:57:56.7943580Z E           Max absolute difference: 5.26760031e+38
2025-02-24T15:57:56.7943660Z E           Max relative difference: 35562.41947434
2025-02-24T15:57:56.7943780Z E            x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.7943860Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7943980Z E            y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.7944150Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7944150Z 
2025-02-24T15:57:56.7944320Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7944550Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] ____
2025-02-24T15:57:56.7944550Z 
2025-02-24T15:57:56.7944800Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd18260>
2025-02-24T15:57:56.7944950Z simulation = <tardis.simulation.base.Simulation object at 0x166147a10>
2025-02-24T15:57:56.7945120Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-downbranch]>>
2025-02-24T15:57:56.7945170Z 
2025-02-24T15:57:56.7945270Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:57:56.7945360Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.7945420Z         j_blue_estimator = (
2025-02-24T15:57:56.7945600Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:57:56.7945650Z         )
2025-02-24T15:57:56.7945770Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:57:56.7945860Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:57:56.7945860Z 
2025-02-24T15:57:56.7945970Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:57:56.7946060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7946060Z 
2025-02-24T15:57:56.7946270Z args = (<function assert_allclose.<locals>.compare at 0x14b464360>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7946320Z        [0., 0., 0.,.....,
2025-02-24T15:57:56.7946390Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7946440Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7946500Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:57:56.7946700Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7946710Z 
2025-02-24T15:57:56.7946760Z     @wraps(func)
2025-02-24T15:57:56.7946820Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7946880Z         with self._recreate_cm():
2025-02-24T15:57:56.7946940Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7947010Z E           AssertionError: 
2025-02-24T15:57:56.7947090Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7947130Z E           
2025-02-24T15:57:56.7947230Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:57:56.7947300Z E           Max absolute difference: 7.03072887e-19
2025-02-24T15:57:56.7947370Z E           Max relative difference: 7.72237896
2025-02-24T15:57:56.7947450Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7947510Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7947580Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.7947650Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7947720Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7947790Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.7947790Z 
2025-02-24T15:57:56.7947960Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7948140Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] ________
2025-02-24T15:57:56.7948140Z 
2025-02-24T15:57:56.7948400Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd18890>
2025-02-24T15:57:56.7948550Z simulation = <tardis.simulation.base.Simulation object at 0x166147a10>
2025-02-24T15:57:56.7948690Z request = <FixtureRequest for <Function test_spectrum[-1-downbranch]>>
2025-02-24T15:57:56.7948690Z 
2025-02-24T15:57:56.7948780Z     def test_spectrum(self, simulation, request):
2025-02-24T15:57:56.7948870Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.7949080Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:57:56.7949220Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:57:56.7949300Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.7949390Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:57:56.7949390Z 
2025-02-24T15:57:56.7949500Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:57:56.7949580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7949870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7949980Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7950080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7950080Z 
2025-02-24T15:57:56.7950750Z args = (<function assert_allclose.<locals>.compare at 0x31a0bfe20>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, .....), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T15:57:56.7950830Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.7951040Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7951040Z 
2025-02-24T15:57:56.7951090Z     @wraps(func)
2025-02-24T15:57:56.7951150Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7951210Z         with self._recreate_cm():
2025-02-24T15:57:56.7951280Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7951340Z E           AssertionError: 
2025-02-24T15:57:56.7951430Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7951480Z E           
2025-02-24T15:57:56.7951550Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:57:56.7951630Z E           Max absolute difference: 2.09719426e+39
2025-02-24T15:57:56.7951710Z E           Max relative difference: 4.0036592
2025-02-24T15:57:56.7951840Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.7951910Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7952030Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.7952090Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7952100Z 
2025-02-24T15:57:56.7952260Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7952450Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] ___
2025-02-24T15:57:56.7952450Z 
2025-02-24T15:57:56.7952710Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd19010>
2025-02-24T15:57:56.7952860Z simulation = <tardis.simulation.base.Simulation object at 0x166147a10>
2025-02-24T15:57:56.7953020Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-downbranch]>>
2025-02-24T15:57:56.7953030Z 
2025-02-24T15:57:56.7953140Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:57:56.7953230Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.7953390Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:57:56.7953520Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:57:56.7953590Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.7953690Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:57:56.7953700Z 
2025-02-24T15:57:56.7953790Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:57:56.7953890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7954150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7954210Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7954420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7954430Z 
2025-02-24T15:57:56.7954790Z args = (<function assert_allclose.<locals>.compare at 0x134f33f60>, array([1.55114238e+39, 1.55522613e+39, 1.54887955e+39, .....), array([1.54178275e+39, 1.54564497e+39, 1.54031038e+39, ...,
2025-02-24T15:57:56.7954870Z        2.27470694e+31, 2.29290738e+31, 2.25720643e+31]))
2025-02-24T15:57:56.7955060Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7955070Z 
2025-02-24T15:57:56.7955120Z     @wraps(func)
2025-02-24T15:57:56.7955180Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7955280Z         with self._recreate_cm():
2025-02-24T15:57:56.7955350Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7955410Z E           AssertionError: 
2025-02-24T15:57:56.7955500Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7955540Z E           
2025-02-24T15:57:56.7955630Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:57:56.7955700Z E           Max absolute difference: 5.00661745e+37
2025-02-24T15:57:56.7955780Z E           Max relative difference: 17.51202125
2025-02-24T15:57:56.7955900Z E            x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T15:57:56.7955970Z E                  2.279436e+31, 2.243943e+31])
2025-02-24T15:57:56.7956090Z E            y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T15:57:56.7956160Z E                  2.292907e+31, 2.257206e+31])
2025-02-24T15:57:56.7956160Z 
2025-02-24T15:57:56.7956320Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7956450Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:57:56.7956460Z 
2025-02-24T15:57:56.7956460Z 
2025-02-24T15:57:56.7956910Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:15<00:00, 126622.43it/s][A
2025-02-24T15:57:56.7957090Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] ____
2025-02-24T15:57:56.7957090Z 
2025-02-24T15:57:56.7957340Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd18a70>
2025-02-24T15:57:56.7957490Z simulation = <tardis.simulation.base.Simulation object at 0x16952c1d0>
2025-02-24T15:57:56.7957650Z request = <FixtureRequest for <Function test_j_blue_estimators[-1-macroatom]>>
2025-02-24T15:57:56.7957650Z 
2025-02-24T15:57:56.7957750Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:57:56.7957830Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.7957900Z         j_blue_estimator = (
2025-02-24T15:57:56.7958080Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:57:56.7958130Z         )
2025-02-24T15:57:56.7958240Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:57:56.7958340Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:57:56.7958340Z 
2025-02-24T15:57:56.7958450Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:57:56.7958540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7958540Z 
2025-02-24T15:57:56.7958750Z args = (<function assert_allclose.<locals>.compare at 0x154948180>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7958810Z        [0., 0., 0.,.....,
2025-02-24T15:57:56.7958870Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7958920Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7958980Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:57:56.7959170Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7959180Z 
2025-02-24T15:57:56.7959230Z     @wraps(func)
2025-02-24T15:57:56.7959290Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7959570Z         with self._recreate_cm():
2025-02-24T15:57:56.7959660Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7959720Z E           AssertionError: 
2025-02-24T15:57:56.7959800Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7959850Z E           
2025-02-24T15:57:56.7962200Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:57:56.7964310Z E           Max absolute difference: 4.67863561e-19
2025-02-24T15:57:56.7965990Z E           Max relative difference: 3.25828651
2025-02-24T15:57:56.7968470Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7968680Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7970270Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.7970360Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7970430Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7970510Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.7970520Z 
2025-02-24T15:57:56.7970700Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7970880Z ________ TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _________
2025-02-24T15:57:56.7970890Z 
2025-02-24T15:57:56.7971160Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd19190>
2025-02-24T15:57:56.7971300Z simulation = <tardis.simulation.base.Simulation object at 0x16952c1d0>
2025-02-24T15:57:56.7971440Z request = <FixtureRequest for <Function test_spectrum[-1-macroatom]>>
2025-02-24T15:57:56.7971450Z 
2025-02-24T15:57:56.7971540Z     def test_spectrum(self, simulation, request):
2025-02-24T15:57:56.7971620Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.7971770Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:57:56.7971900Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:57:56.7971990Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.7972090Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:57:56.7972090Z 
2025-02-24T15:57:56.7972200Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:57:56.7972290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7972570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7972640Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7972730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7972730Z 
2025-02-24T15:57:56.7973110Z args = (<function assert_allclose.<locals>.compare at 0x17fe62f20>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, .....), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T15:57:56.7973190Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.7973400Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7973400Z 
2025-02-24T15:57:56.7973450Z     @wraps(func)
2025-02-24T15:57:56.7973510Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7973580Z         with self._recreate_cm():
2025-02-24T15:57:56.7973650Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7973710Z E           AssertionError: 
2025-02-24T15:57:56.7973790Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7973840Z E           
2025-02-24T15:57:56.7973910Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:57:56.7973990Z E           Max absolute difference: 8.5486318e+38
2025-02-24T15:57:56.7974060Z E           Max relative difference: 1.86186015
2025-02-24T15:57:56.7974190Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.7974260Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7974490Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.7974570Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7974570Z 
2025-02-24T15:57:56.7974730Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7974920Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] ___
2025-02-24T15:57:56.7974930Z 
2025-02-24T15:57:56.7975180Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd197f0>
2025-02-24T15:57:56.7975330Z simulation = <tardis.simulation.base.Simulation object at 0x16952c1d0>
2025-02-24T15:57:56.7975540Z request = <FixtureRequest for <Function test_spectrum_integrated[-1-macroatom]>>
2025-02-24T15:57:56.7975550Z 
2025-02-24T15:57:56.7975660Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:57:56.7975740Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.7975900Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:57:56.7976030Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:57:56.7976110Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.7976210Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:57:56.7976210Z 
2025-02-24T15:57:56.7976320Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:57:56.7976410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7976840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7976930Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7977030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7977030Z 
2025-02-24T15:57:56.7977410Z args = (<function assert_allclose.<locals>.compare at 0x141285d00>, array([1.54556181e+39, 1.55660766e+39, 1.54591210e+39, .....), array([1.54634964e+39, 1.55739996e+39, 1.54657082e+39, ...,
2025-02-24T15:57:56.7977500Z        1.40040337e+31, 1.37514142e+31, 1.33792800e+31]))
2025-02-24T15:57:56.7977710Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7977720Z 
2025-02-24T15:57:56.7977770Z     @wraps(func)
2025-02-24T15:57:56.7977830Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7977900Z         with self._recreate_cm():
2025-02-24T15:57:56.7977960Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7978020Z E           AssertionError: 
2025-02-24T15:57:56.7978110Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7978160Z E           
2025-02-24T15:57:56.7978240Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:57:56.7978320Z E           Max absolute difference: 2.90101642e+37
2025-02-24T15:57:56.7978400Z E           Max relative difference: 0.98973757
2025-02-24T15:57:56.7978520Z E            x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T15:57:56.7978590Z E                  1.330497e+31, 1.294462e+31])
2025-02-24T15:57:56.7978710Z E            y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T15:57:56.7978780Z E                  1.375141e+31, 1.337928e+31])
2025-02-24T15:57:56.7978780Z 
2025-02-24T15:57:56.7978940Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7979120Z ____ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] ____
2025-02-24T15:57:56.7979130Z 
2025-02-24T15:57:56.7979390Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd18d10>
2025-02-24T15:57:56.7979540Z simulation = <tardis.simulation.base.Simulation object at 0x1637c5f70>
2025-02-24T15:57:56.7979700Z request = <FixtureRequest for <Function test_j_blue_estimators[30-macroatom]>>
2025-02-24T15:57:56.7979840Z 
2025-02-24T15:57:56.7979950Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:57:56.7980030Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.7980090Z         j_blue_estimator = (
2025-02-24T15:57:56.7980260Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:57:56.7980310Z         )
2025-02-24T15:57:56.7980420Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:57:56.7980520Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:57:56.7980520Z 
2025-02-24T15:57:56.7980680Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:57:56.7980780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7980780Z 
2025-02-24T15:57:56.7980990Z args = (<function assert_allclose.<locals>.compare at 0x31800a160>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7981040Z        [0., 0., 0.,.....,
2025-02-24T15:57:56.7981100Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7981160Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7981210Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:57:56.7981410Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7981410Z 
2025-02-24T15:57:56.7981460Z     @wraps(func)
2025-02-24T15:57:56.7981520Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7981580Z         with self._recreate_cm():
2025-02-24T15:57:56.7981650Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7981720Z E           AssertionError: 
2025-02-24T15:57:56.7981800Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7981850Z E           
2025-02-24T15:57:56.7981940Z E           Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:57:56.7982020Z E           Max absolute difference: 4.67863561e-19
2025-02-24T15:57:56.7982100Z E           Max relative difference: 3.25828651
2025-02-24T15:57:56.7982170Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7982240Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7982310Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.7982380Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7982440Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.7982510Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.7982510Z 
2025-02-24T15:57:56.7982680Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7982850Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _________
2025-02-24T15:57:56.7982860Z 
2025-02-24T15:57:56.7983100Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd19400>
2025-02-24T15:57:56.7983250Z simulation = <tardis.simulation.base.Simulation object at 0x1637c5f70>
2025-02-24T15:57:56.7983760Z request = <FixtureRequest for <Function test_spectrum[30-macroatom]>>
2025-02-24T15:57:56.7983770Z 
2025-02-24T15:57:56.7983860Z     def test_spectrum(self, simulation, request):
2025-02-24T15:57:56.7983940Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.7984110Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:57:56.7984230Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:57:56.7984320Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.7984410Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:57:56.7984410Z 
2025-02-24T15:57:56.7984520Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:57:56.7984610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7984940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7985010Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7985100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7985100Z 
2025-02-24T15:57:56.7985470Z args = (<function assert_allclose.<locals>.compare at 0x16381c9a0>, array([1.74559473e+39, 1.44727718e+39, 1.29383198e+39, .....), array([1.74566518e+39, 1.44733560e+39, 1.29388426e+39, ...,
2025-02-24T15:57:56.7985550Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.7985760Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7985800Z 
2025-02-24T15:57:56.7985860Z     @wraps(func)
2025-02-24T15:57:56.7985920Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7985980Z         with self._recreate_cm():
2025-02-24T15:57:56.7986050Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7986110Z E           AssertionError: 
2025-02-24T15:57:56.7986190Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7986240Z E           
2025-02-24T15:57:56.7986320Z E           Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:57:56.7986400Z E           Max absolute difference: 8.5486318e+38
2025-02-24T15:57:56.7986470Z E           Max relative difference: 1.86186015
2025-02-24T15:57:56.7986590Z E            x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.7986650Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7986770Z E            y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.7986840Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.7986840Z 
2025-02-24T15:57:56.7987000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7987180Z ___ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] ___
2025-02-24T15:57:56.7987180Z 
2025-02-24T15:57:56.7987430Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd19a00>
2025-02-24T15:57:56.7987580Z simulation = <tardis.simulation.base.Simulation object at 0x1637c5f70>
2025-02-24T15:57:56.7987740Z request = <FixtureRequest for <Function test_spectrum_integrated[30-macroatom]>>
2025-02-24T15:57:56.7987750Z 
2025-02-24T15:57:56.7987860Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:57:56.7987940Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.7988090Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:57:56.7988220Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:57:56.7988290Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.7988390Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:57:56.7988390Z 
2025-02-24T15:57:56.7988490Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:57:56.7988590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7988850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.7988910Z     np.testing.assert_allclose(
2025-02-24T15:57:56.7989010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.7989010Z 
2025-02-24T15:57:56.7989370Z args = (<function assert_allclose.<locals>.compare at 0x134f33ec0>, array([1.54421084e+39, 1.55253343e+39, 1.54295780e+39, .....), array([1.54506418e+39, 1.55336544e+39, 1.54364274e+39, ...,
2025-02-24T15:57:56.7989450Z        1.22296100e+31, 1.19300497e+31, 1.16485419e+31]))
2025-02-24T15:57:56.7989650Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.7989660Z 
2025-02-24T15:57:56.7989700Z     @wraps(func)
2025-02-24T15:57:56.7989760Z     def inner(*args, **kwds):
2025-02-24T15:57:56.7990090Z         with self._recreate_cm():
2025-02-24T15:57:56.7990170Z >           return func(*args, **kwds)
2025-02-24T15:57:56.7990230Z E           AssertionError: 
2025-02-24T15:57:56.7990320Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.7990360Z E           
2025-02-24T15:57:56.7990450Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:57:56.7990520Z E           Max absolute difference: 2.99183385e+37
2025-02-24T15:57:56.7990590Z E           Max relative difference: 0.98992197
2025-02-24T15:57:56.7990710Z E            x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T15:57:56.7990890Z E                  1.260980e+31, 1.222587e+31])
2025-02-24T15:57:56.7991010Z E            y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T15:57:56.7991070Z E                  1.193005e+31, 1.164854e+31])
2025-02-24T15:57:56.7991070Z 
2025-02-24T15:57:56.7992420Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.7993980Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:57:56.7994000Z 
2025-02-24T15:57:56.7994010Z 
2025-02-24T15:57:56.7995000Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:12<00:00, 107085.01it/s][A
2025-02-24T15:57:56.7995490Z ___ TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] ____
2025-02-24T15:57:56.7995510Z 
2025-02-24T15:57:56.7996180Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd18bf0>
2025-02-24T15:57:56.7996730Z simulation = <tardis.simulation.base.Simulation object at 0x3031fecc0>
2025-02-24T15:57:56.7999880Z request = <FixtureRequest for <Function test_j_blue_estimators[30-downbranch]>>
2025-02-24T15:57:56.7999900Z 
2025-02-24T15:57:56.8000080Z     def test_j_blue_estimators(self, simulation, request):
2025-02-24T15:57:56.8000180Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8000240Z         j_blue_estimator = (
2025-02-24T15:57:56.8000410Z             simulation.transport.transport_state.radfield_mc_estimators.j_blue_estimator
2025-02-24T15:57:56.8000460Z         )
2025-02-24T15:57:56.8000580Z         expected = regression_data.sync_ndarray(j_blue_estimator)
2025-02-24T15:57:56.8000670Z >       npt.assert_allclose(j_blue_estimator, expected)
2025-02-24T15:57:56.8000680Z 
2025-02-24T15:57:56.8000780Z tardis/tests/test_tardis_full_formal_integral.py:85: 
2025-02-24T15:57:56.8000880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8000890Z 
2025-02-24T15:57:56.8001090Z args = (<function assert_allclose.<locals>.compare at 0x171956660>, array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.8001150Z        [0., 0., 0.,.....,
2025-02-24T15:57:56.8001210Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.8001260Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.8001330Z        [0., 0., 0., ..., 0., 0., 0.]]))
2025-02-24T15:57:56.8001520Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8001530Z 
2025-02-24T15:57:56.8001570Z     @wraps(func)
2025-02-24T15:57:56.8001640Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8001700Z         with self._recreate_cm():
2025-02-24T15:57:56.8001760Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8001820Z E           AssertionError: 
2025-02-24T15:57:56.8001900Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8001940Z E           
2025-02-24T15:57:56.8002030Z E           Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:57:56.8002110Z E           Max absolute difference: 7.03072887e-19
2025-02-24T15:57:56.8002180Z E           Max relative difference: 7.72237896
2025-02-24T15:57:56.8002260Z E            x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.8002570Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.8002650Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.8002720Z E            y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.8002790Z E                  [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.8002860Z E                  [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.8002860Z 
2025-02-24T15:57:56.8003020Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8003190Z ________ TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] ________
2025-02-24T15:57:56.8003200Z 
2025-02-24T15:57:56.8003520Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd19340>
2025-02-24T15:57:56.8003670Z simulation = <tardis.simulation.base.Simulation object at 0x3031fecc0>
2025-02-24T15:57:56.8003810Z request = <FixtureRequest for <Function test_spectrum[30-downbranch]>>
2025-02-24T15:57:56.8003820Z 
2025-02-24T15:57:56.8003900Z     def test_spectrum(self, simulation, request):
2025-02-24T15:57:56.8003990Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8004140Z         luminosity = simulation.spectrum_solver.spectrum_real_packets.luminosity
2025-02-24T15:57:56.8004270Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:57:56.8004350Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.8004430Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:57:56.8004440Z 
2025-02-24T15:57:56.8004540Z tardis/tests/test_tardis_full_formal_integral.py:92: 
2025-02-24T15:57:56.8004630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8004900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.8004970Z     np.testing.assert_allclose(
2025-02-24T15:57:56.8005060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8005060Z 
2025-02-24T15:57:56.8005430Z args = (<function assert_allclose.<locals>.compare at 0x17f44f880>, array([2.16554068e+39, 1.29492551e+39, 1.28560928e+39, .....), array([2.01862731e+39, 1.44100026e+39, 1.28363764e+39, ...,
2025-02-24T15:57:56.8005510Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8005710Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8005710Z 
2025-02-24T15:57:56.8005760Z     @wraps(func)
2025-02-24T15:57:56.8005820Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8005880Z         with self._recreate_cm():
2025-02-24T15:57:56.8005950Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8006010Z E           AssertionError: 
2025-02-24T15:57:56.8006090Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8006140Z E           
2025-02-24T15:57:56.8006220Z E           Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:57:56.8006300Z E           Max absolute difference: 2.09719426e+39
2025-02-24T15:57:56.8006370Z E           Max relative difference: 4.0036592
2025-02-24T15:57:56.8006500Z E            x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.8006560Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8006690Z E            y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.8006750Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8006760Z 
2025-02-24T15:57:56.8006910Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8007100Z __ TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] ___
2025-02-24T15:57:56.8007100Z 
2025-02-24T15:57:56.8007350Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13fd19940>
2025-02-24T15:57:56.8007550Z simulation = <tardis.simulation.base.Simulation object at 0x3031fecc0>
2025-02-24T15:57:56.8007720Z request = <FixtureRequest for <Function test_spectrum_integrated[30-downbranch]>>
2025-02-24T15:57:56.8007720Z 
2025-02-24T15:57:56.8007840Z     def test_spectrum_integrated(self, simulation, request):
2025-02-24T15:57:56.8007920Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8008080Z         luminosity = simulation.spectrum_solver.spectrum_integrated.luminosity
2025-02-24T15:57:56.8008200Z         expected = regression_data.sync_ndarray(luminosity.cgs.value)
2025-02-24T15:57:56.8008280Z         expected = u.Quantity(expected, "erg /s")
2025-02-24T15:57:56.8008420Z >       assert_quantity_allclose(luminosity, expected)
2025-02-24T15:57:56.8008430Z 
2025-02-24T15:57:56.8008530Z tardis/tests/test_tardis_full_formal_integral.py:99: 
2025-02-24T15:57:56.8008620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8008890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/astropy/tests/helper.py:203: in assert_quantity_allclose
2025-02-24T15:57:56.8008960Z     np.testing.assert_allclose(
2025-02-24T15:57:56.8009050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8009050Z 
2025-02-24T15:57:56.8009410Z args = (<function assert_allclose.<locals>.compare at 0x17f44c680>, array([1.54917411e+39, 1.55043938e+39, 1.54507053e+39, .....), array([1.54059874e+39, 1.54119479e+39, 1.53707604e+39, ...,
2025-02-24T15:57:56.8009500Z        2.12049684e+31, 2.12430514e+31, 2.10108056e+31]))
2025-02-24T15:57:56.8009810Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8009820Z 
2025-02-24T15:57:56.8009870Z     @wraps(func)
2025-02-24T15:57:56.8009930Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8009990Z         with self._recreate_cm():
2025-02-24T15:57:56.8010060Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8010330Z E           AssertionError: 
2025-02-24T15:57:56.8010750Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8010900Z E           
2025-02-24T15:57:56.8011110Z E           Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:57:56.8011310Z E           Max absolute difference: 5.0153284e+37
2025-02-24T15:57:56.8011520Z E           Max relative difference: 4.90769503
2025-02-24T15:57:56.8011840Z E            x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T15:57:56.8012020Z E                  2.088676e+31, 2.060278e+31])
2025-02-24T15:57:56.8012320Z E            y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T15:57:56.8012510Z E                  2.124305e+31, 2.101081e+31])
2025-02-24T15:57:56.8012520Z 
2025-02-24T15:57:56.8012950Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8013270Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:57:56.8013290Z 
2025-02-24T15:57:56.8013300Z 
2025-02-24T15:57:56.8014090Z Packets:   ████████████████████████████████████████████████████████████████████████████████100000/100000 [00:13<00:00, 138685.65it/s][A
2025-02-24T15:57:56.8014410Z __________________________ test_montecarlo_main_loop ___________________________
2025-02-24T15:57:56.8014420Z 
2025-02-24T15:57:56.8018490Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T15:57:56.8019100Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15aa3fa40>
2025-02-24T15:57:56.8019870Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T15:57:56.8019880Z 
2025-02-24T15:57:56.8020600Z     def test_montecarlo_main_loop(
2025-02-24T15:57:56.8020780Z         montecarlo_main_loop_config,
2025-02-24T15:57:56.8020960Z         regression_data,
2025-02-24T15:57:56.8021110Z         atomic_dataset,
2025-02-24T15:57:56.8021260Z     ):
2025-02-24T15:57:56.8021480Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T15:57:56.8021800Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T15:57:56.8021990Z             montecarlo_main_loop_config,
2025-02-24T15:57:56.8022170Z             atom_data=atomic_dataset,
2025-02-24T15:57:56.8022360Z             virtual_packet_logging=False,
2025-02-24T15:57:56.8022540Z             legacy_mode_enabled=True,
2025-02-24T15:57:56.8022840Z         )
2025-02-24T15:57:56.8023100Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T15:57:56.8023330Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T15:57:56.8023470Z     
2025-02-24T15:57:56.8023910Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T15:57:56.8024110Z             montecarlo_main_loop_simulation
2025-02-24T15:57:56.8024250Z         )
2025-02-24T15:57:56.8024400Z     
2025-02-24T15:57:56.8024580Z         # Load compare data from refdata
2025-02-24T15:57:56.8024730Z     
2025-02-24T15:57:56.8024920Z         expected_nu = expected_hdf_store[
2025-02-24T15:57:56.8025180Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T15:57:56.8025330Z         ]
2025-02-24T15:57:56.8025530Z         expected_energy = expected_hdf_store[
2025-02-24T15:57:56.8025810Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T15:57:56.8025960Z         ]
2025-02-24T15:57:56.8026210Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T15:57:56.8026520Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T15:57:56.8026660Z         ]
2025-02-24T15:57:56.8026890Z         expected_j_estimator = expected_hdf_store[
2025-02-24T15:57:56.8036250Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T15:57:56.8036430Z         ]
2025-02-24T15:57:56.8036630Z         expected_hdf_store.close()
2025-02-24T15:57:56.8037070Z         transport_state = montecarlo_main_loop_simulation.transport.transport_state
2025-02-24T15:57:56.8037450Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T15:57:56.8037760Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T15:57:56.8038080Z         actual_nu_bar_estimator = (
2025-02-24T15:57:56.8038380Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T15:57:56.8038520Z         )
2025-02-24T15:57:56.8038920Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T15:57:56.8039050Z     
2025-02-24T15:57:56.8039210Z         # Compare
2025-02-24T15:57:56.8039370Z >       npt.assert_allclose(
2025-02-24T15:57:56.8039720Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-13
2025-02-24T15:57:56.8039850Z         )
2025-02-24T15:57:56.8039880Z 
2025-02-24T15:57:56.8040270Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:57: 
2025-02-24T15:57:56.8040510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8040520Z 
2025-02-24T15:57:56.8041460Z args = (<function assert_allclose.<locals>.compare at 0x166089580>, array([9.40870445e+28, 8.06711783e+28, 7.20241369e+28, 6.....88346865e+28, 3.76096031e+28, 3.64350318e+28,
2025-02-24T15:57:56.8041760Z        3.53452939e+28, 3.45323083e+28, 3.34513540e+28, 3.26811629e+28]))
2025-02-24T15:57:56.8042290Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-13, atol=0', 'verbose': True}
2025-02-24T15:57:56.8042310Z 
2025-02-24T15:57:56.8042460Z     @wraps(func)
2025-02-24T15:57:56.8042630Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8042820Z         with self._recreate_cm():
2025-02-24T15:57:56.8043000Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8043750Z E           AssertionError: 
2025-02-24T15:57:56.8043990Z E           Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T15:57:56.8044130Z E           
2025-02-24T15:57:56.8044330Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T15:57:56.8044540Z E           Max absolute difference: 2.25821059e+25
2025-02-24T15:57:56.8044840Z E           Max relative difference: 0.00054426
2025-02-24T15:57:56.8045130Z E            x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T15:57:56.8045380Z E                  6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T15:57:56.8045640Z E                  4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T15:57:56.8046700Z E            y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T15:57:56.8046970Z E                  6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T15:57:56.8047230Z E                  4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T15:57:56.8047250Z 
2025-02-24T15:57:56.8047680Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8048130Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T15:57:56.8048860Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:57:56.8050010Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:57:56.8050480Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8054900Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:57:56.8056660Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8058190Z 	
2025-02-24T15:57:56.8058490Z 	Simulation finished in 0 iterations 
2025-02-24T15:57:56.8058670Z 	Simulation took 0.00 s
2025-02-24T15:57:56.8058940Z  ([1mbase.py[0m:542)
2025-02-24T15:57:56.8059310Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8059450Z 	
2025-02-24T15:57:56.8059770Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T15:57:56.8060100Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8060250Z 	
2025-02-24T15:57:56.8060440Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:57:56.8060640Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:57:56.8060850Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.8061060Z  ([1mbase.py[0m:657)
2025-02-24T15:57:56.8061400Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:57:56.8061420Z 
2025-02-24T15:57:56.8061430Z 
2025-02-24T15:57:56.8061890Z Packets:                                                                                   4189/? [00:07<00:00, 440.97it/s] [A
2025-02-24T15:57:56.8061900Z 
2025-02-24T15:57:56.8062360Z Packets:                                                                                   18900/? [00:07<00:00, 3468.33it/s][A
2025-02-24T15:57:56.8062370Z 
2025-02-24T15:57:56.8062820Z Packets:                                                                                   31897/? [00:07<00:00, 7091.60it/s][A
2025-02-24T15:57:56.8062830Z 
2025-02-24T15:57:56.8063280Z Packets:                                                                                   44172/? [00:07<00:00, 11638.00it/s][A
2025-02-24T15:57:56.8063290Z 
2025-02-24T15:57:56.8063740Z Packets:                                                                                   55585/? [00:07<00:00, 17087.42it/s][A
2025-02-24T15:57:56.8063750Z 
2025-02-24T15:57:56.8064190Z Packets:                                                                                   67382/? [00:07<00:00, 24209.02it/s][A
2025-02-24T15:57:56.8064220Z 
2025-02-24T15:57:56.8064660Z Packets:                                                                                   82103/? [00:08<00:00, 35477.10it/s][A
2025-02-24T15:57:56.8064670Z 
2025-02-24T15:57:56.8065540Z Packets:                                                                                   97098/? [00:08<00:00, 48724.54it/s][A
2025-02-24T15:57:56.8065860Z Iterations:                                                                                40/? [07:59<00:00,  6.13s/it]
2025-02-24T15:57:56.8065860Z 
2025-02-24T15:57:56.8066330Z Packets:                                                                                   104009/? [00:08<00:00, 48724.54it/s][A
2025-02-24T15:57:56.8066650Z ------------------------------ Captured log call -------------------------------
2025-02-24T15:57:56.8067770Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:57:56.8069120Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:57:56.8069350Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:57:56.8069560Z 	Simulation finished in 0 iterations 
2025-02-24T15:57:56.8069730Z 	Simulation took 0.00 s
2025-02-24T15:57:56.8069740Z 
2025-02-24T15:57:56.8069970Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:57:56.8070150Z 	Starting iteration 1 of 1
2025-02-24T15:57:56.8070380Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:57:56.8070570Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:57:56.8070770Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:57:56.8070970Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.8071330Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-02-24T15:57:56.8071340Z 
2025-02-24T15:57:56.8072860Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T15:57:56.8073440Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15c3b9ee0>
2025-02-24T15:57:56.8074210Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T15:57:56.8074220Z 
2025-02-24T15:57:56.8074450Z     def test_montecarlo_main_loop_vpacket_log(
2025-02-24T15:57:56.8074640Z         montecarlo_main_loop_config,
2025-02-24T15:57:56.8075080Z         regression_data,
2025-02-24T15:57:56.8075240Z         atomic_dataset,
2025-02-24T15:57:56.8075290Z     ):
2025-02-24T15:57:56.8075380Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T15:57:56.8075530Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-02-24T15:57:56.8075600Z     
2025-02-24T15:57:56.8075720Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-02-24T15:57:56.8075790Z             montecarlo_main_loop_config,
2025-02-24T15:57:56.8075860Z             atom_data=atomic_dataset,
2025-02-24T15:57:56.8075940Z             virtual_packet_logging=True,
2025-02-24T15:57:56.8076000Z             legacy_mode_enabled=True,
2025-02-24T15:57:56.8076050Z         )
2025-02-24T15:57:56.8076160Z         montecarlo_main_loop_simulation.run_convergence()
2025-02-24T15:57:56.8076250Z         montecarlo_main_loop_simulation.run_final()
2025-02-24T15:57:56.8076290Z     
2025-02-24T15:57:56.8076400Z         transport = montecarlo_main_loop_simulation.transport
2025-02-24T15:57:56.8076440Z     
2025-02-24T15:57:56.8076610Z         assert transport.montecarlo_configuration.ENABLE_VPACKET_TRACKING is True
2025-02-24T15:57:56.8076660Z     
2025-02-24T15:57:56.8076760Z         expected_hdf_store = regression_data.sync_hdf_store(
2025-02-24T15:57:56.8076840Z             montecarlo_main_loop_simulation
2025-02-24T15:57:56.8076890Z         )
2025-02-24T15:57:56.8076930Z     
2025-02-24T15:57:56.8077000Z         expected_nu = expected_hdf_store[
2025-02-24T15:57:56.8077110Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T15:57:56.8077470Z         ]
2025-02-24T15:57:56.8077560Z         expected_energy = expected_hdf_store[
2025-02-24T15:57:56.8077670Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T15:57:56.8077710Z         ]
2025-02-24T15:57:56.8077810Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T15:57:56.8077920Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T15:57:56.8077970Z         ]
2025-02-24T15:57:56.8078050Z         expected_j_estimator = expected_hdf_store[
2025-02-24T15:57:56.8078150Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T15:57:56.8078200Z         ]
2025-02-24T15:57:56.8078380Z         expected_vpacket_log_nus = expected_hdf_store[
2025-02-24T15:57:56.8078500Z             "/simulation/transport/transport_state/virt_packet_nus"
2025-02-24T15:57:56.8078550Z         ]
2025-02-24T15:57:56.8078650Z         expected_vpacket_log_energies = expected_hdf_store[
2025-02-24T15:57:56.8078780Z             "/simulation/transport/transport_state/virt_packet_energies"
2025-02-24T15:57:56.8078820Z         ]
2025-02-24T15:57:56.8078870Z     
2025-02-24T15:57:56.8078960Z         transport_state = transport.transport_state
2025-02-24T15:57:56.8079010Z     
2025-02-24T15:57:56.8079140Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T15:57:56.8079250Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T15:57:56.8079360Z         actual_nu_bar_estimator = transport_state.nu_bar_estimator
2025-02-24T15:57:56.8079460Z         actual_j_estimator = transport_state.j_estimator
2025-02-24T15:57:56.8079580Z         actual_vpacket_log_nus = transport_state.vpacket_tracker.nus
2025-02-24T15:57:56.8079720Z         actual_vpacket_log_energies = transport_state.vpacket_tracker.energies
2025-02-24T15:57:56.8079770Z     
2025-02-24T15:57:56.8079840Z         expected_hdf_store.close()
2025-02-24T15:57:56.8079880Z         # Compare
2025-02-24T15:57:56.8079940Z >       npt.assert_allclose(
2025-02-24T15:57:56.8080010Z             actual_nu_bar_estimator,
2025-02-24T15:57:56.8080070Z             expected_nu_bar_estimator,
2025-02-24T15:57:56.8080130Z             rtol=1e-12,
2025-02-24T15:57:56.8080190Z             atol=1e-15,
2025-02-24T15:57:56.8080230Z         )
2025-02-24T15:57:56.8080240Z 
2025-02-24T15:57:56.8080390Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:120: 
2025-02-24T15:57:56.8080490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8080490Z 
2025-02-24T15:57:56.8080840Z args = (<function assert_allclose.<locals>.compare at 0x166076f20>, array([9.39734166e+28, 8.06437183e+28, 7.18947883e+28, 6.....86533431e+28, 3.76643623e+28, 3.65210990e+28,
2025-02-24T15:57:56.8080950Z        3.55628656e+28, 3.45781813e+28, 3.35045159e+28, 3.25557336e+28]))
2025-02-24T15:57:56.8081170Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-12, atol=1e-15', 'verbose': True}
2025-02-24T15:57:56.8081170Z 
2025-02-24T15:57:56.8081220Z     @wraps(func)
2025-02-24T15:57:56.8081290Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8081360Z         with self._recreate_cm():
2025-02-24T15:57:56.8081420Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8081490Z E           AssertionError: 
2025-02-24T15:57:56.8081580Z E           Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T15:57:56.8081620Z E           
2025-02-24T15:57:56.8081700Z E           Mismatched elements: 20 / 20 (100%)
2025-02-24T15:57:56.8081770Z E           Max absolute difference: 1.93283629e+25
2025-02-24T15:57:56.8081850Z E           Max relative difference: 0.00029148
2025-02-24T15:57:56.8081960Z E            x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T15:57:56.8082060Z E                  6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T15:57:56.8082160Z E                  4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T15:57:56.8082330Z E            y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T15:57:56.8082430Z E                  6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T15:57:56.8082530Z E                  4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T15:57:56.8082540Z 
2025-02-24T15:57:56.8082700Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8082840Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T15:57:56.8083150Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:57:56.8083570Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:57:56.8083720Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8083890Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:57:56.8084020Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8084070Z 	
2025-02-24T15:57:56.8084140Z 	Simulation finished in 0 iterations 
2025-02-24T15:57:56.8084190Z 	Simulation took 0.00 s
2025-02-24T15:57:56.8084270Z  ([1mbase.py[0m:542)
2025-02-24T15:57:56.8084390Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8084440Z 	
2025-02-24T15:57:56.8084550Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T15:57:56.8084680Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8084720Z 	
2025-02-24T15:57:56.8084790Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T15:57:56.8084860Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T15:57:56.8084930Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.8085010Z  ([1mbase.py[0m:657)
2025-02-24T15:57:56.8085130Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:57:56.8085130Z 
2025-02-24T15:57:56.8085130Z 
2025-02-24T15:57:56.8085320Z Packets:                                                                                   110187/? [00:10<00:00, 15763.47it/s][A
2025-02-24T15:57:56.8085330Z 
2025-02-24T15:57:56.8085500Z Packets:                                                                                   119428/? [00:10<00:00, 18648.61it/s][A
2025-02-24T15:57:56.8085510Z 
2025-02-24T15:57:56.8085680Z Packets:                                                                                   127233/? [00:10<00:00, 21480.80it/s][A
2025-02-24T15:57:56.8085680Z 
2025-02-24T15:57:56.8085850Z Packets:                                                                                   134059/? [00:10<00:00, 24349.89it/s][A
2025-02-24T15:57:56.8085860Z 
2025-02-24T15:57:56.8086030Z Packets:                                                                                   140239/? [00:10<00:00, 26786.10it/s][A
2025-02-24T15:57:56.8086030Z 
2025-02-24T15:57:56.8086210Z Packets:                                                                                   145809/? [00:10<00:00, 29584.78it/s][A
2025-02-24T15:57:56.8086210Z 
2025-02-24T15:57:56.8086380Z Packets:                                                                                   151116/? [00:11<00:00, 32704.52it/s][A
2025-02-24T15:57:56.8086380Z 
2025-02-24T15:57:56.8086550Z Packets:                                                                                   156344/? [00:11<00:00, 35749.62it/s][A
2025-02-24T15:57:56.8086550Z 
2025-02-24T15:57:56.8086730Z Packets:                                                                                   161507/? [00:11<00:00, 37029.33it/s][A
2025-02-24T15:57:56.8086730Z 
2025-02-24T15:57:56.8086900Z Packets:                                                                                   166360/? [00:11<00:00, 39362.48it/s][A
2025-02-24T15:57:56.8086910Z 
2025-02-24T15:57:56.8087080Z Packets:                                                                                   171202/? [00:11<00:00, 41036.52it/s][A
2025-02-24T15:57:56.8087080Z 
2025-02-24T15:57:56.8087350Z Packets:                                                                                   175985/? [00:11<00:00, 41476.15it/s][A
2025-02-24T15:57:56.8087350Z 
2025-02-24T15:57:56.8087540Z Packets:                                                                                   180838/? [00:11<00:00, 43264.28it/s][A
2025-02-24T15:57:56.8087540Z 
2025-02-24T15:57:56.8087720Z Packets:                                                                                   185907/? [00:11<00:00, 45238.15it/s][A
2025-02-24T15:57:56.8087720Z 
2025-02-24T15:57:56.8087900Z Packets:                                                                                   190861/? [00:11<00:00, 46421.11it/s][A
2025-02-24T15:57:56.8087990Z 
2025-02-24T15:57:56.8088170Z Packets:                                                                                   195713/? [00:12<00:00, 45705.79it/s][A
2025-02-24T15:57:56.8088180Z 
2025-02-24T15:57:56.8088350Z Packets:                                                                                   200431/? [00:12<00:00, 45635.80it/s][A
2025-02-24T15:57:56.8088480Z Iterations:                                                                                41/? [08:03<00:00,  5.56s/it]
2025-02-24T15:57:56.8088480Z 
2025-02-24T15:57:56.8088660Z Packets:                                                                                   204009/? [00:12<00:00, 45635.80it/s][A
2025-02-24T15:57:56.8088790Z ------------------------------ Captured log call -------------------------------
2025-02-24T15:57:56.8089190Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:57:56.8089380Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:57:56.8089460Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:57:56.8089530Z 	Simulation finished in 0 iterations 
2025-02-24T15:57:56.8089590Z 	Simulation took 0.00 s
2025-02-24T15:57:56.8089600Z 
2025-02-24T15:57:56.8089680Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:57:56.8089750Z 	Starting iteration 1 of 1
2025-02-24T15:57:56.8089820Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:57:56.8090010Z 	Luminosity emitted   = 8.135e+42 erg / s
2025-02-24T15:57:56.8090080Z 	Luminosity absorbed  = 2.646e+42 erg / s
2025-02-24T15:57:56.8090150Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.8090280Z __________________________ test_boundary_interactions __________________________
2025-02-24T15:57:56.8090280Z 
2025-02-24T15:57:56.8090910Z rpacket_tracker = ListType[instance.jitclass.RPacketTracker#134bfbf80<seed:int64,index:int64,status:array(int64, 1d, A),r:array(float64,...xing.RPacketTracker object at 0x140f92a10>, <numba.experimental.jitclass.boxing.RPacketTracker object at 0x168ce2a10>])
2025-02-24T15:57:56.8091130Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x30abd7b00>
2025-02-24T15:57:56.8091130Z 
2025-02-24T15:57:56.8091270Z     def test_boundary_interactions(rpacket_tracker, regression_data):
2025-02-24T15:57:56.8091340Z         no_of_packets = len(rpacket_tracker)
2025-02-24T15:57:56.8091380Z     
2025-02-24T15:57:56.8091450Z         # Hard coding the number of columns
2025-02-24T15:57:56.8091570Z         # Based on the largest size of boundary_interaction array (60)
2025-02-24T15:57:56.8091660Z         obtained_boundary_interaction = np.full(
2025-02-24T15:57:56.8091720Z             (no_of_packets, 64),
2025-02-24T15:57:56.8091760Z             [-1],
2025-02-24T15:57:56.8091870Z             dtype=rpacket_tracker[0].boundary_interaction.dtype,
2025-02-24T15:57:56.8091920Z         )
2025-02-24T15:57:56.8091970Z     
2025-02-24T15:57:56.8092060Z         for i, tracker in enumerate(rpacket_tracker):
2025-02-24T15:57:56.8092130Z             obtained_boundary_interaction[
2025-02-24T15:57:56.8092210Z                 i, : tracker.boundary_interaction.size
2025-02-24T15:57:56.8092370Z             ] = tracker.boundary_interaction
2025-02-24T15:57:56.8092420Z     
2025-02-24T15:57:56.8092550Z         expected_boundary_interaction = regression_data.sync_ndarray(
2025-02-24T15:57:56.8092620Z             obtained_boundary_interaction
2025-02-24T15:57:56.8092670Z         )
2025-02-24T15:57:56.8092730Z >       npt.assert_array_equal(
2025-02-24T15:57:56.8092860Z             obtained_boundary_interaction, expected_boundary_interaction
2025-02-24T15:57:56.8092910Z         )
2025-02-24T15:57:56.8092920Z 
2025-02-24T15:57:56.8093050Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:154: 
2025-02-24T15:57:56.8093150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8093190Z 
2025-02-24T15:57:56.8093390Z args = (<built-in function eq>, array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:57:56.8093470Z         (-1, -1, -1), (-...-1, -1, -1), (-1, -1, -1)]],
2025-02-24T15:57:56.8093610Z       dtype=[('event_id', '<i8'), ('current_shell_id', '<i8'), ('next_shell_id', '<i8')]))
2025-02-24T15:57:56.8093770Z kwds = {'err_msg': '', 'header': 'Arrays are not equal', 'strict': False, 'verbose': True}
2025-02-24T15:57:56.8093770Z 
2025-02-24T15:57:56.8093820Z     @wraps(func)
2025-02-24T15:57:56.8093880Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8093950Z         with self._recreate_cm():
2025-02-24T15:57:56.8094010Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8094070Z E           AssertionError: 
2025-02-24T15:57:56.8094130Z E           Arrays are not equal
2025-02-24T15:57:56.8094180Z E           
2025-02-24T15:57:56.8094250Z E           (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T15:57:56.8094360Z E            x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:57:56.8094430Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:57:56.8094520Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:57:56.8094620Z E            y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:57:56.8094690Z E                   (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:57:56.8094780Z E                  [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:57:56.8094780Z 
2025-02-24T15:57:56.8094940Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8095070Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-02-24T15:57:56.8095070Z 
2025-02-24T15:57:56.8095600Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-02-24T15:57:56.8095820Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x15c2f8e00>
2025-02-24T15:57:56.8096100Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-02-24T15:57:56.8096410Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x15c2fbf80>
2025-02-24T15:57:56.8096420Z 
2025-02-24T15:57:56.8096500Z     def test_montecarlo_main_loop_weighted(
2025-02-24T15:57:56.8096560Z         montecarlo_main_loop_config,
2025-02-24T15:57:56.8096620Z         regression_data,
2025-02-24T15:57:56.8096670Z         atomic_dataset,
2025-02-24T15:57:56.8096740Z         simple_weighted_packet_source,
2025-02-24T15:57:56.8096780Z     ):
2025-02-24T15:57:56.8096870Z         atomic_dataset = deepcopy(atomic_dataset)
2025-02-24T15:57:56.8097010Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-02-24T15:57:56.8097070Z             montecarlo_main_loop_config,
2025-02-24T15:57:56.8097140Z             atom_data=atomic_dataset,
2025-02-24T15:57:56.8097250Z             virtual_packet_logging=False,
2025-02-24T15:57:56.8097320Z             legacy_mode_enabled=True,
2025-02-24T15:57:56.8097370Z         )
2025-02-24T15:57:56.8097490Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-02-24T15:57:56.8097560Z             simple_weighted_packet_source
2025-02-24T15:57:56.8097610Z         )
2025-02-24T15:57:56.8097730Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-02-24T15:57:56.8097830Z         montecarlo_main_loop_simulation_weighted.run_final()
2025-02-24T15:57:56.8097880Z     
2025-02-24T15:57:56.8097960Z         # Get the montecarlo simple regression data
2025-02-24T15:57:56.8098070Z         regression_data_dir = (
2025-02-24T15:57:56.8098210Z             regression_data.absolute_regression_data_dir.absolute().parents[0]
2025-02-24T15:57:56.8098340Z             / "test_montecarlo_main_loop/test_montecarlo_main_loop.h5"
2025-02-24T15:57:56.8098380Z         )
2025-02-24T15:57:56.8098520Z         expected_hdf_store = pd.HDFStore(regression_data_dir, mode="r")
2025-02-24T15:57:56.8098560Z     
2025-02-24T15:57:56.8098630Z         # Load compare data from refdata
2025-02-24T15:57:56.8098670Z     
2025-02-24T15:57:56.8098740Z         expected_nu = expected_hdf_store[
2025-02-24T15:57:56.8098840Z             "/simulation/transport/transport_state/output_nu"
2025-02-24T15:57:56.8098880Z         ]
2025-02-24T15:57:56.8098960Z         expected_energy = expected_hdf_store[
2025-02-24T15:57:56.8099060Z             "/simulation/transport/transport_state/output_energy"
2025-02-24T15:57:56.8099100Z         ]
2025-02-24T15:57:56.8099190Z         expected_nu_bar_estimator = expected_hdf_store[
2025-02-24T15:57:56.8099310Z             "/simulation/transport/transport_state/nu_bar_estimator"
2025-02-24T15:57:56.8099360Z         ]
2025-02-24T15:57:56.8099690Z         expected_j_estimator = expected_hdf_store[
2025-02-24T15:57:56.8099840Z             "/simulation/transport/transport_state/j_estimator"
2025-02-24T15:57:56.8099890Z         ]
2025-02-24T15:57:56.8099970Z         expected_hdf_store.close()
2025-02-24T15:57:56.8100030Z         transport_state = (
2025-02-24T15:57:56.8100180Z             montecarlo_main_loop_simulation_weighted.transport.transport_state
2025-02-24T15:57:56.8100230Z         )
2025-02-24T15:57:56.8100360Z         actual_energy = transport_state.packet_collection.output_energies
2025-02-24T15:57:56.8100470Z         actual_nu = transport_state.packet_collection.output_nus
2025-02-24T15:57:56.8100540Z         actual_nu_bar_estimator = (
2025-02-24T15:57:56.8100660Z             transport_state.radfield_mc_estimators.nu_bar_estimator
2025-02-24T15:57:56.8100700Z         )
2025-02-24T15:57:56.8100850Z         actual_j_estimator = transport_state.radfield_mc_estimators.j_estimator
2025-02-24T15:57:56.8100900Z     
2025-02-24T15:57:56.8100950Z         # Compare
2025-02-24T15:57:56.8101010Z         npt.assert_allclose(
2025-02-24T15:57:56.8101130Z             actual_nu_bar_estimator, expected_nu_bar_estimator, rtol=1e-2
2025-02-24T15:57:56.8101180Z         )
2025-02-24T15:57:56.8101330Z         npt.assert_allclose(actual_j_estimator, expected_j_estimator, rtol=1e-2)
2025-02-24T15:57:56.8101460Z >       npt.assert_allclose(actual_energy, expected_energy, rtol=1e-2)
2025-02-24T15:57:56.8101460Z 
2025-02-24T15:57:56.8101640Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:65: 
2025-02-24T15:57:56.8101730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8101730Z 
2025-02-24T15:57:56.8102100Z args = (<function assert_allclose.<locals>.compare at 0x15c3eee80>, array([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05,...ay([ 1.00808590e-05, -9.64774183e-06,  1.03040156e-05, ...,
2025-02-24T15:57:56.8102190Z         1.03375439e-05, -9.75713585e-06,  1.01976360e-05]))
2025-02-24T15:57:56.8102390Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.01, atol=0', 'verbose': True}
2025-02-24T15:57:56.8102390Z 
2025-02-24T15:57:56.8102720Z     @wraps(func)
2025-02-24T15:57:56.8102790Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8102860Z         with self._recreate_cm():
2025-02-24T15:57:56.8102920Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8102990Z E           AssertionError: 
2025-02-24T15:57:56.8103070Z E           Not equal to tolerance rtol=0.01, atol=0
2025-02-24T15:57:56.8103120Z E           
2025-02-24T15:57:56.8103200Z E           Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T15:57:56.8103270Z E           Max absolute difference: 2.00640487e-05
2025-02-24T15:57:56.8103340Z E           Max relative difference: 2.06329455
2025-02-24T15:57:56.8103470Z E            x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:57:56.8103620Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T15:57:56.8103740Z E            y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:57:56.8103810Z E                  -9.757136e-06,  1.019764e-05])
2025-02-24T15:57:56.8103820Z 
2025-02-24T15:57:56.8103970Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8104100Z ----------------------------- Captured stdout call -----------------------------
2025-02-24T15:57:56.8104450Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-02-24T15:57:56.8104800Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-02-24T15:57:56.8104950Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8105120Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-02-24T15:57:56.8105250Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8105290Z 	
2025-02-24T15:57:56.8105370Z 	Simulation finished in 0 iterations 
2025-02-24T15:57:56.8105420Z 	Simulation took 0.00 s
2025-02-24T15:57:56.8105500Z  ([1mbase.py[0m:542)
2025-02-24T15:57:56.8105630Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8105680Z 	
2025-02-24T15:57:56.8105790Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-02-24T15:57:56.8105920Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8107280Z 	
2025-02-24T15:57:56.8107430Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:57:56.8107500Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:57:56.8107570Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.8107690Z  ([1mbase.py[0m:657)
2025-02-24T15:57:56.8107830Z ----------------------------- Captured stderr call -----------------------------
2025-02-24T15:57:56.8107840Z 
2025-02-24T15:57:56.8107840Z 
2025-02-24T15:57:56.8108040Z Packets:                                                                                   0/100000 [00:00<?, ?it/s]            [A
2025-02-24T15:57:56.8108040Z 
2025-02-24T15:57:56.8108220Z Packets:                                                                                   0/100000 [00:00<?, ?it/s][A
2025-02-24T15:57:56.8108230Z 
2025-02-24T15:57:56.8108440Z Packets:   ██████████▉                                                                     13727/100000 [00:00<00:00, 137269.80it/s][A
2025-02-24T15:57:56.8108450Z 
2025-02-24T15:57:56.8108660Z Packets:   ███████████████████████▏                                                        29060/100000 [00:00<00:00, 146716.85it/s][A
2025-02-24T15:57:56.8108660Z 
2025-02-24T15:57:56.8108870Z Packets:   ██████████████████████████████████▉                                             43732/100000 [00:00<00:00, 144843.93it/s][A
2025-02-24T15:57:56.8108880Z 
2025-02-24T15:57:56.8109100Z Packets:   ██████████████████████████████████████████████▉                                 58727/100000 [00:00<00:00, 146842.35it/s][A
2025-02-24T15:57:56.8109110Z 
2025-02-24T15:57:56.8110930Z Packets:   ███████████████████████████████████████████████████████████                     73764/100000 [00:00<00:00, 148107.14it/s][A
2025-02-24T15:57:56.8110940Z 
2025-02-24T15:57:56.8111440Z Packets:   ██████████████████████████████████████████████████████████████████████▊         88578/100000 [00:00<00:00, 146784.14it/s][A
2025-02-24T15:57:56.8111580Z Iterations:                                                                                45/? [08:20<00:00,  4.00s/it]
2025-02-24T15:57:56.8111590Z 
2025-02-24T15:57:56.8112020Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉99999/100000 [00:00<00:00, 146784.14it/s][A
2025-02-24T15:57:56.8112160Z ------------------------------ Captured log call -------------------------------
2025-02-24T15:57:56.8112580Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-02-24T15:57:56.8112880Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-02-24T15:57:56.8112970Z INFO     tardis.simulation.base:base.py:542 
2025-02-24T15:57:56.8113050Z 	Simulation finished in 0 iterations 
2025-02-24T15:57:56.8113110Z 	Simulation took 0.00 s
2025-02-24T15:57:56.8113110Z 
2025-02-24T15:57:56.8113190Z INFO     tardis.simulation.base:base.py:444 
2025-02-24T15:57:56.8113250Z 	Starting iteration 1 of 1
2025-02-24T15:57:56.8113330Z INFO     tardis.simulation.base:base.py:657 
2025-02-24T15:57:56.8113400Z 	Luminosity emitted   = 8.101e+42 erg / s
2025-02-24T15:57:56.8113460Z 	Luminosity absorbed  = 2.679e+42 erg / s
2025-02-24T15:57:56.8113530Z 	Luminosity requested = 1.077e+43 erg / s
2025-02-24T15:57:56.8113710Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] __
2025-02-24T15:57:56.8113710Z 
2025-02-24T15:57:56.8113920Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x140029d00>
2025-02-24T15:57:56.8114160Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>
2025-02-24T15:57:56.8135360Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data0-plot_data]>>
2025-02-24T15:57:56.8135660Z attribute = 'plot_data'
2025-02-24T15:57:56.8135660Z 
2025-02-24T15:57:56.8135730Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.8135790Z         "attribute",
2025-02-24T15:57:56.8135830Z         [
2025-02-24T15:57:56.8135890Z             "plot_data",
2025-02-24T15:57:56.8135940Z             "plot_colors",
2025-02-24T15:57:56.8136020Z             "new_bin_edges",
2025-02-24T15:57:56.8136080Z         ],
2025-02-24T15:57:56.8136130Z     )
2025-02-24T15:57:56.8136190Z     def test_prepare_plot_data(
2025-02-24T15:57:56.8136240Z         self,
2025-02-24T15:57:56.8136340Z         plotter_prepare_plot_data,
2025-02-24T15:57:56.8136390Z         request,
2025-02-24T15:57:56.8136450Z         attribute,
2025-02-24T15:57:56.8136500Z     ):
2025-02-24T15:57:56.8136550Z         """
2025-02-24T15:57:56.8136670Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:57:56.8136730Z     
2025-02-24T15:57:56.8137320Z         Parameters:
2025-02-24T15:57:56.8137390Z         -----------
2025-02-24T15:57:56.8137550Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:57:56.8137620Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8137760Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:57:56.8137800Z         """
2025-02-24T15:57:56.8137890Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8138010Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:57:56.8138140Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:57:56.8138410Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:57:56.8138540Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:57:56.8138650Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:57:56.8138810Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:57:56.8138930Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:57:56.8138940Z 
2025-02-24T15:57:56.8142500Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:57:56.8142630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8142640Z 
2025-02-24T15:57:56.8143050Z args = (<function assert_allclose.<locals>.compare at 0x1638f6fc0>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T15:57:56.8143140Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T15:57:56.8143360Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8143360Z 
2025-02-24T15:57:56.8143420Z     @wraps(func)
2025-02-24T15:57:56.8143490Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8143550Z         with self._recreate_cm():
2025-02-24T15:57:56.8143630Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8143690Z E           AssertionError: 
2025-02-24T15:57:56.8143790Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8143840Z E           
2025-02-24T15:57:56.8143910Z E           (shapes (508,), (515,) mismatch)
2025-02-24T15:57:56.8144030Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:57:56.8144130Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:57:56.8144230Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:57:56.8144350Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:57:56.8145540Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8145550Z 
2025-02-24T15:57:56.8146100Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply13__.h5
2025-02-24T15:57:56.8146100Z 
2025-02-24T15:57:56.8146370Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8146370Z 
2025-02-24T15:57:56.8146960Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data14__.h5
2025-02-24T15:57:56.8146960Z 
2025-02-24T15:57:56.8147230Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8147230Z 
2025-02-24T15:57:56.8147780Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply1__.h5
2025-02-24T15:57:56.8147790Z 
2025-02-24T15:57:56.8148340Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8148350Z 
2025-02-24T15:57:56.8148910Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data12__.h5
2025-02-24T15:57:56.8148920Z 
2025-02-24T15:57:56.8149180Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8149180Z 
2025-02-24T15:57:56.8149700Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply0__.h5
2025-02-24T15:57:56.8149780Z 
2025-02-24T15:57:56.8150040Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8150040Z 
2025-02-24T15:57:56.8150600Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data3__.h5
2025-02-24T15:57:56.8150610Z 
2025-02-24T15:57:56.8150870Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8150870Z 
2025-02-24T15:57:56.8151420Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data2__.h5
2025-02-24T15:57:56.8151420Z 
2025-02-24T15:57:56.8151680Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8151680Z 
2025-02-24T15:57:56.8152210Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply3__.h5
2025-02-24T15:57:56.8152210Z 
2025-02-24T15:57:56.8152460Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8152470Z 
2025-02-24T15:57:56.8152990Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply8__.h5
2025-02-24T15:57:56.8152990Z 
2025-02-24T15:57:56.8153240Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8153250Z 
2025-02-24T15:57:56.8153780Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/plasma/equilibrium/tests/test_rate_matrix/test_rate_matrix_solver__collisional_rate_solver0-radiative_transitions0__.h5
2025-02-24T15:57:56.8153780Z 
2025-02-24T15:57:56.8154040Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8154040Z 
2025-02-24T15:57:56.8154590Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data4__.h5
2025-02-24T15:57:56.8154590Z 
2025-02-24T15:57:56.8154840Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8154850Z 
2025-02-24T15:57:56.8155400Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data13__.h5
2025-02-24T15:57:56.8155410Z 
2025-02-24T15:57:56.8155660Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8155730Z 
2025-02-24T15:57:56.8156250Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply2__.h5
2025-02-24T15:57:56.8156250Z 
2025-02-24T15:57:56.8156500Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8156500Z 
2025-02-24T15:57:56.8157030Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply0__.h5
2025-02-24T15:57:56.8157070Z 
2025-02-24T15:57:56.8157330Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8157330Z 
2025-02-24T15:57:56.8157860Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply12__.h5
2025-02-24T15:57:56.8157860Z 
2025-02-24T15:57:56.8158120Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8158120Z 
2025-02-24T15:57:56.8158680Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data0__.h5
2025-02-24T15:57:56.8158680Z 
2025-02-24T15:57:56.8158940Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8158940Z 
2025-02-24T15:57:56.8159470Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply5__.h5
2025-02-24T15:57:56.8159470Z 
2025-02-24T15:57:56.8159740Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8159740Z 
2025-02-24T15:57:56.8160270Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply10__.h5
2025-02-24T15:57:56.8160280Z 
2025-02-24T15:57:56.8160530Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8160530Z 
2025-02-24T15:57:56.8161080Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data8__.h5
2025-02-24T15:57:56.8161090Z 
2025-02-24T15:57:56.8166580Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8166600Z 
2025-02-24T15:57:56.8167220Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data10__.h5
2025-02-24T15:57:56.8167220Z 
2025-02-24T15:57:56.8167480Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8167490Z 
2025-02-24T15:57:56.8168040Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data5__.h5
2025-02-24T15:57:56.8168050Z 
2025-02-24T15:57:56.8168300Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8168300Z 
2025-02-24T15:57:56.8169080Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data11__.h5
2025-02-24T15:57:56.8169080Z 
2025-02-24T15:57:56.8169340Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8169340Z 
2025-02-24T15:57:56.8169900Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data15__.h5
2025-02-24T15:57:56.8169910Z 
2025-02-24T15:57:56.8170160Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8170270Z 
2025-02-24T15:57:56.8170800Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply7__.h5
2025-02-24T15:57:56.8170810Z 
2025-02-24T15:57:56.8171060Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8171060Z 
2025-02-24T15:57:56.8171600Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply11__.h5
2025-02-24T15:57:56.8171610Z 
2025-02-24T15:57:56.8171870Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8171870Z 
2025-02-24T15:57:56.8172390Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply4__.h5
2025-02-24T15:57:56.8172400Z 
2025-02-24T15:57:56.8172660Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8172660Z 
2025-02-24T15:57:56.8173220Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data9__.h5
2025-02-24T15:57:56.8173220Z 
2025-02-24T15:57:56.8173490Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8173490Z 
2025-02-24T15:57:56.8174020Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl5__.h5
2025-02-24T15:57:56.8174020Z 
2025-02-24T15:57:56.8174270Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8174270Z 
2025-02-24T15:57:56.8174810Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply9__.h5
2025-02-24T15:57:56.8174820Z 
2025-02-24T15:57:56.8175240Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8175250Z 
2025-02-24T15:57:56.8175810Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data6__.h5
2025-02-24T15:57:56.8175820Z 
2025-02-24T15:57:56.8176080Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8176080Z 
2025-02-24T15:57:56.8176630Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply4__.h5
2025-02-24T15:57:56.8176630Z 
2025-02-24T15:57:56.8176970Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8176970Z 
2025-02-24T15:57:56.8177500Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply14__.h5
2025-02-24T15:57:56.8177510Z 
2025-02-24T15:57:56.8177760Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8177760Z 
2025-02-24T15:57:56.8179090Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply6__.h5
2025-02-24T15:57:56.8179260Z 
2025-02-24T15:57:56.8179530Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8179530Z 
2025-02-24T15:57:56.8180040Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl4__.h5
2025-02-24T15:57:56.8180040Z 
2025-02-24T15:57:56.8180300Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8180300Z 
2025-02-24T15:57:56.8180810Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl1__.h5
2025-02-24T15:57:56.8180820Z 
2025-02-24T15:57:56.8181070Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8181070Z 
2025-02-24T15:57:56.8181820Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data1__.h5
2025-02-24T15:57:56.8181830Z 
2025-02-24T15:57:56.8182090Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8182090Z 
2025-02-24T15:57:56.8182610Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_mpl__plotter_generate_plot_mpl0__.h5
2025-02-24T15:57:56.8182610Z 
2025-02-24T15:57:56.8182880Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8182880Z 
2025-02-24T15:57:56.8183410Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply1__.h5
2025-02-24T15:57:56.8183410Z 
2025-02-24T15:57:56.8183680Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8183680Z 
2025-02-24T15:57:56.8184440Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_liv_plot/test_liv_plotter/test_generate_plot_ply__plotter_generate_plot_ply5__.h5
2025-02-24T15:57:56.8184450Z 
2025-02-24T15:57:56.8184740Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8184750Z 
2025-02-24T15:57:56.8185280Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_generate_plot_mpl__plotter_generate_plot_ply15__.h5
2025-02-24T15:57:56.8185290Z 
2025-02-24T15:57:56.8185570Z /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/tables/file.py:113: UnclosedFileWarning:
2025-02-24T15:57:56.8185570Z 
2025-02-24T15:57:56.8186360Z Closing remaining open file: /Users/runner/work/tardis/tardis/tardis-regression-data/tardis/visualization/tools/tests/test_sdec_plot/test_sdec_plotter/test_calculate_plotting_data__plotter_calculate_plotting_data7__.h5
2025-02-24T15:57:56.8186370Z 
2025-02-24T15:57:56.8186480Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:57:56.8186590Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:57:56.8186590Z 
2025-02-24T15:57:56.8186770Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8186910Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8187380Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8187600Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:57:56.8187730Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8187980Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:57:56.8188150Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] __
2025-02-24T15:57:56.8188160Z 
2025-02-24T15:57:56.8188370Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x14002a180>
2025-02-24T15:57:56.8188590Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>
2025-02-24T15:57:56.8188800Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data1-plot_data]>>
2025-02-24T15:57:56.8188870Z attribute = 'plot_data'
2025-02-24T15:57:56.8188870Z 
2025-02-24T15:57:56.8188950Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.8189000Z         "attribute",
2025-02-24T15:57:56.8189050Z         [
2025-02-24T15:57:56.8189110Z             "plot_data",
2025-02-24T15:57:56.8189160Z             "plot_colors",
2025-02-24T15:57:56.8189220Z             "new_bin_edges",
2025-02-24T15:57:56.8189260Z         ],
2025-02-24T15:57:56.8189310Z     )
2025-02-24T15:57:56.8189380Z     def test_prepare_plot_data(
2025-02-24T15:57:56.8189420Z         self,
2025-02-24T15:57:56.8189480Z         plotter_prepare_plot_data,
2025-02-24T15:57:56.8189530Z         request,
2025-02-24T15:57:56.8189580Z         attribute,
2025-02-24T15:57:56.8189630Z     ):
2025-02-24T15:57:56.8189680Z         """
2025-02-24T15:57:56.8189790Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:57:56.8189840Z     
2025-02-24T15:57:56.8189890Z         Parameters:
2025-02-24T15:57:56.8189940Z         -----------
2025-02-24T15:57:56.8190090Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:57:56.8190170Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8190300Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:57:56.8190350Z         """
2025-02-24T15:57:56.8190440Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8190550Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:57:56.8190680Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:57:56.8190800Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:57:56.8190930Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:57:56.8191030Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:57:56.8191130Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:57:56.8191220Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:57:56.8191230Z 
2025-02-24T15:57:56.8191340Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:57:56.8191440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8191440Z 
2025-02-24T15:57:56.8191900Z args = (<function assert_allclose.<locals>.compare at 0x15ae02c00>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...2507.1391254 , 12507.1391254 , 11042.97481792,
2025-02-24T15:57:56.8192030Z        13068.12089331, 13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T15:57:56.8192230Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8192230Z 
2025-02-24T15:57:56.8192280Z     @wraps(func)
2025-02-24T15:57:56.8192340Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8192410Z         with self._recreate_cm():
2025-02-24T15:57:56.8192480Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8192600Z E           AssertionError: 
2025-02-24T15:57:56.8192690Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8192730Z E           
2025-02-24T15:57:56.8192810Z E           (shapes (558,), (560,) mismatch)
2025-02-24T15:57:56.8192920Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:57:56.8193020Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:57:56.8193120Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:57:56.8193230Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:57:56.8193320Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:57:56.8193430Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:57:56.8193430Z 
2025-02-24T15:57:56.8193600Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8193770Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] __
2025-02-24T15:57:56.8193780Z 
2025-02-24T15:57:56.8193990Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x14002a3c0>
2025-02-24T15:57:56.8194210Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>
2025-02-24T15:57:56.8194430Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data2-plot_data]>>
2025-02-24T15:57:56.8194490Z attribute = 'plot_data'
2025-02-24T15:57:56.8194490Z 
2025-02-24T15:57:56.8194560Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.8194610Z         "attribute",
2025-02-24T15:57:56.8194650Z         [
2025-02-24T15:57:56.8194720Z             "plot_data",
2025-02-24T15:57:56.8194770Z             "plot_colors",
2025-02-24T15:57:56.8194830Z             "new_bin_edges",
2025-02-24T15:57:56.8194880Z         ],
2025-02-24T15:57:56.8194930Z     )
2025-02-24T15:57:56.8195000Z     def test_prepare_plot_data(
2025-02-24T15:57:56.8195050Z         self,
2025-02-24T15:57:56.8195120Z         plotter_prepare_plot_data,
2025-02-24T15:57:56.8195170Z         request,
2025-02-24T15:57:56.8195220Z         attribute,
2025-02-24T15:57:56.8195270Z     ):
2025-02-24T15:57:56.8195320Z         """
2025-02-24T15:57:56.8195430Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:57:56.8195480Z     
2025-02-24T15:57:56.8195530Z         Parameters:
2025-02-24T15:57:56.8195580Z         -----------
2025-02-24T15:57:56.8195720Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:57:56.8195790Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8195920Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:57:56.8195970Z         """
2025-02-24T15:57:56.8196050Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8196170Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:57:56.8196290Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:57:56.8196420Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:57:56.8196600Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:57:56.8197120Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:57:56.8197260Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:57:56.8197350Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:57:56.8197350Z 
2025-02-24T15:57:56.8197470Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:57:56.8197560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8197560Z 
2025-02-24T15:57:56.8197910Z args = (<function assert_allclose.<locals>.compare at 0x1505e2de0>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T15:57:56.8198130Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T15:57:56.8198330Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8198330Z 
2025-02-24T15:57:56.8198380Z     @wraps(func)
2025-02-24T15:57:56.8198440Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8198510Z         with self._recreate_cm():
2025-02-24T15:57:56.8198570Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8198640Z E           AssertionError: 
2025-02-24T15:57:56.8198720Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8198780Z E           
2025-02-24T15:57:56.8198850Z E           (shapes (147,), (136,) mismatch)
2025-02-24T15:57:56.8198950Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:57:56.8199050Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:57:56.8199150Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:57:56.8199260Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:57:56.8199350Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:57:56.8199460Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:57:56.8199460Z 
2025-02-24T15:57:56.8199620Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8199750Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8200050Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8200240Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:57:56.8200370Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8200620Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:57:56.8200790Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] __
2025-02-24T15:57:56.8200790Z 
2025-02-24T15:57:56.8201030Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x14002a600>
2025-02-24T15:57:56.8201260Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>
2025-02-24T15:57:56.8201500Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data3-plot_data]>>
2025-02-24T15:57:56.8201560Z attribute = 'plot_data'
2025-02-24T15:57:56.8201560Z 
2025-02-24T15:57:56.8201640Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.8201690Z         "attribute",
2025-02-24T15:57:56.8201730Z         [
2025-02-24T15:57:56.8201790Z             "plot_data",
2025-02-24T15:57:56.8201860Z             "plot_colors",
2025-02-24T15:57:56.8201930Z             "new_bin_edges",
2025-02-24T15:57:56.8201990Z         ],
2025-02-24T15:57:56.8202030Z     )
2025-02-24T15:57:56.8202100Z     def test_prepare_plot_data(
2025-02-24T15:57:56.8202150Z         self,
2025-02-24T15:57:56.8202210Z         plotter_prepare_plot_data,
2025-02-24T15:57:56.8202270Z         request,
2025-02-24T15:57:56.8202310Z         attribute,
2025-02-24T15:57:56.8202510Z     ):
2025-02-24T15:57:56.8202580Z         """
2025-02-24T15:57:56.8202750Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:57:56.8202820Z     
2025-02-24T15:57:56.8202880Z         Parameters:
2025-02-24T15:57:56.8202920Z         -----------
2025-02-24T15:57:56.8203070Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:57:56.8203140Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8203340Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:57:56.8203420Z         """
2025-02-24T15:57:56.8203550Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8203880Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:57:56.8204010Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:57:56.8204160Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:57:56.8204290Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:57:56.8204400Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:57:56.8204490Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:57:56.8204600Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:57:56.8204600Z 
2025-02-24T15:57:56.8204710Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:57:56.8204800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8204810Z 
2025-02-24T15:57:56.8205110Z args = (<function assert_allclose.<locals>.compare at 0x15ae0dda0>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...210447, 12126.50399598,
2025-02-24T15:57:56.8205230Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T15:57:56.8205280Z        11042.97481792]))
2025-02-24T15:57:56.8205480Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8205490Z 
2025-02-24T15:57:56.8205540Z     @wraps(func)
2025-02-24T15:57:56.8205600Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8205670Z         with self._recreate_cm():
2025-02-24T15:57:56.8205740Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8205790Z E           AssertionError: 
2025-02-24T15:57:56.8205880Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8205930Z E           
2025-02-24T15:57:56.8206000Z E           (shapes (159,), (153,) mismatch)
2025-02-24T15:57:56.8206110Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:57:56.8206210Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:57:56.8206310Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:57:56.8206430Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:57:56.8206520Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:57:56.8206620Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:57:56.8206630Z 
2025-02-24T15:57:56.8206790Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8206960Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] __
2025-02-24T15:57:56.8206970Z 
2025-02-24T15:57:56.8207170Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x14002a870>
2025-02-24T15:57:56.8207390Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>
2025-02-24T15:57:56.8207620Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data4-plot_data]>>
2025-02-24T15:57:56.8207680Z attribute = 'plot_data'
2025-02-24T15:57:56.8207680Z 
2025-02-24T15:57:56.8207750Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.8207900Z         "attribute",
2025-02-24T15:57:56.8207950Z         [
2025-02-24T15:57:56.8208010Z             "plot_data",
2025-02-24T15:57:56.8208070Z             "plot_colors",
2025-02-24T15:57:56.8208130Z             "new_bin_edges",
2025-02-24T15:57:56.8208180Z         ],
2025-02-24T15:57:56.8208230Z     )
2025-02-24T15:57:56.8208290Z     def test_prepare_plot_data(
2025-02-24T15:57:56.8208340Z         self,
2025-02-24T15:57:56.8208410Z         plotter_prepare_plot_data,
2025-02-24T15:57:56.8208460Z         request,
2025-02-24T15:57:56.8208500Z         attribute,
2025-02-24T15:57:56.8208550Z     ):
2025-02-24T15:57:56.8208600Z         """
2025-02-24T15:57:56.8208790Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:57:56.8208840Z     
2025-02-24T15:57:56.8208890Z         Parameters:
2025-02-24T15:57:56.8208950Z         -----------
2025-02-24T15:57:56.8209090Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:57:56.8209170Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8209310Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:57:56.8209360Z         """
2025-02-24T15:57:56.8209440Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8209560Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:57:56.8209680Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:57:56.8209810Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:57:56.8209930Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:57:56.8210030Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:57:56.8210130Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:57:56.8210220Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:57:56.8210230Z 
2025-02-24T15:57:56.8210340Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:57:56.8210440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8210440Z 
2025-02-24T15:57:56.8211060Z args = (<function assert_allclose.<locals>.compare at 0x1505e0ea0>, array([12955.14169787, 12955.14169787, 12955.14169787, 11...1242.67578598, 14904.40428211, 11253.32453035, 11044.60533386,
2025-02-24T15:57:56.8211160Z        11093.19397276, 12686.48872252, 11123.62952031]))
2025-02-24T15:57:56.8211410Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8211420Z 
2025-02-24T15:57:56.8211480Z     @wraps(func)
2025-02-24T15:57:56.8211540Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8211600Z         with self._recreate_cm():
2025-02-24T15:57:56.8211670Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8211730Z E           AssertionError: 
2025-02-24T15:57:56.8211810Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8211860Z E           
2025-02-24T15:57:56.8211940Z E           (shapes (508,), (515,) mismatch)
2025-02-24T15:57:56.8212040Z E            x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:57:56.8212140Z E                  12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:57:56.8212240Z E                  11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:57:56.8212350Z E            y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:57:56.8212440Z E                  11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:57:56.8212540Z E                  11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:57:56.8212550Z 
2025-02-24T15:57:56.8212700Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8212840Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8213420Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8213640Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:57:56.8213770Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8214010Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:57:56.8214180Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] __
2025-02-24T15:57:56.8214180Z 
2025-02-24T15:57:56.8214380Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x14002aab0>
2025-02-24T15:57:56.8214670Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>
2025-02-24T15:57:56.8214890Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data5-plot_data]>>
2025-02-24T15:57:56.8214950Z attribute = 'plot_data'
2025-02-24T15:57:56.8214950Z 
2025-02-24T15:57:56.8215020Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.8215070Z         "attribute",
2025-02-24T15:57:56.8215260Z         [
2025-02-24T15:57:56.8215310Z             "plot_data",
2025-02-24T15:57:56.8215370Z             "plot_colors",
2025-02-24T15:57:56.8215430Z             "new_bin_edges",
2025-02-24T15:57:56.8215470Z         ],
2025-02-24T15:57:56.8215510Z     )
2025-02-24T15:57:56.8215580Z     def test_prepare_plot_data(
2025-02-24T15:57:56.8215620Z         self,
2025-02-24T15:57:56.8215690Z         plotter_prepare_plot_data,
2025-02-24T15:57:56.8215740Z         request,
2025-02-24T15:57:56.8215790Z         attribute,
2025-02-24T15:57:56.8215840Z     ):
2025-02-24T15:57:56.8215890Z         """
2025-02-24T15:57:56.8216000Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:57:56.8216040Z     
2025-02-24T15:57:56.8216100Z         Parameters:
2025-02-24T15:57:56.8216150Z         -----------
2025-02-24T15:57:56.8216300Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:57:56.8216380Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8216510Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:57:56.8216550Z         """
2025-02-24T15:57:56.8216640Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8216750Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:57:56.8216870Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:57:56.8217010Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:57:56.8217140Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:57:56.8217240Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:57:56.8217330Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:57:56.8217430Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:57:56.8217440Z 
2025-02-24T15:57:56.8217540Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:57:56.8217640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8217640Z 
2025-02-24T15:57:56.8218010Z args = (<function assert_allclose.<locals>.compare at 0x1505e1580>, array([13692.75973672, 11362.93720064, 12466.53861691, .....), array([12467.89648692, 12467.89648692, 12357.74827994, ...,
2025-02-24T15:57:56.8218090Z        13068.12089331, 11398.23786534, 11111.20486813]))
2025-02-24T15:57:56.8218310Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8218330Z 
2025-02-24T15:57:56.8218390Z     @wraps(func)
2025-02-24T15:57:56.8218450Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8218510Z         with self._recreate_cm():
2025-02-24T15:57:56.8218580Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8218640Z E           AssertionError: 
2025-02-24T15:57:56.8218950Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8219020Z E           
2025-02-24T15:57:56.8219090Z E           (shapes (1466,), (1481,) mismatch)
2025-02-24T15:57:56.8219220Z E            x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T15:57:56.8219290Z E                  11152.962595, 11172.044815])
2025-02-24T15:57:56.8219410Z E            y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T15:57:56.8219480Z E                  11398.237865, 11111.204868])
2025-02-24T15:57:56.8219480Z 
2025-02-24T15:57:56.8219670Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8219950Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8220170Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8220440Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:57:56.8220560Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8220850Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T15:57:56.8221020Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] __
2025-02-24T15:57:56.8221020Z 
2025-02-24T15:57:56.8221230Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x14002acf0>
2025-02-24T15:57:56.8221450Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>
2025-02-24T15:57:56.8221670Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data6-plot_data]>>
2025-02-24T15:57:56.8221730Z attribute = 'plot_data'
2025-02-24T15:57:56.8221730Z 
2025-02-24T15:57:56.8221800Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.8221850Z         "attribute",
2025-02-24T15:57:56.8221900Z         [
2025-02-24T15:57:56.8221960Z             "plot_data",
2025-02-24T15:57:56.8222010Z             "plot_colors",
2025-02-24T15:57:56.8222070Z             "new_bin_edges",
2025-02-24T15:57:56.8222110Z         ],
2025-02-24T15:57:56.8222160Z     )
2025-02-24T15:57:56.8222220Z     def test_prepare_plot_data(
2025-02-24T15:57:56.8222270Z         self,
2025-02-24T15:57:56.8222340Z         plotter_prepare_plot_data,
2025-02-24T15:57:56.8222390Z         request,
2025-02-24T15:57:56.8222440Z         attribute,
2025-02-24T15:57:56.8222490Z     ):
2025-02-24T15:57:56.8222540Z         """
2025-02-24T15:57:56.8222650Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:57:56.8222700Z     
2025-02-24T15:57:56.8222740Z         Parameters:
2025-02-24T15:57:56.8222790Z         -----------
2025-02-24T15:57:56.8222940Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:57:56.8223010Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8223150Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:57:56.8223200Z         """
2025-02-24T15:57:56.8223280Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8223390Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:57:56.8223510Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:57:56.8223640Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:57:56.8223770Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:57:56.8223880Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:57:56.8223980Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:57:56.8224080Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:57:56.8224080Z 
2025-02-24T15:57:56.8224300Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:57:56.8224400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8224400Z 
2025-02-24T15:57:56.8224750Z args = (<function assert_allclose.<locals>.compare at 0x303221f80>, array([12079.52986884, 11966.99134279, 11263.63770779, 14...1064.78967159, 11163.13661084, 11172.32922889,
2025-02-24T15:57:56.8224870Z        14940.47642056, 11605.97655929, 15636.69609553, 13062.91107327]))
2025-02-24T15:57:56.8225060Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8225120Z 
2025-02-24T15:57:56.8225180Z     @wraps(func)
2025-02-24T15:57:56.8225240Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8225310Z         with self._recreate_cm():
2025-02-24T15:57:56.8225380Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8225450Z E           AssertionError: 
2025-02-24T15:57:56.8225550Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8225600Z E           
2025-02-24T15:57:56.8225670Z E           (shapes (147,), (136,) mismatch)
2025-02-24T15:57:56.8225780Z E            x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:57:56.8225880Z E                  13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:57:56.8225980Z E                  12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:57:56.8226100Z E            y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:57:56.8226190Z E                  15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:57:56.8226300Z E                  12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:57:56.8226300Z 
2025-02-24T15:57:56.8226460Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8226590Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8226780Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8226980Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:57:56.8227110Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8227360Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:57:56.8227530Z _ TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] __
2025-02-24T15:57:56.8227540Z 
2025-02-24T15:57:56.8227740Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x14002aed0>
2025-02-24T15:57:56.8227960Z plotter_prepare_plot_data = <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>
2025-02-24T15:57:56.8228190Z request = <FixtureRequest for <Function test_prepare_plot_data[plotter_prepare_plot_data7-plot_data]>>
2025-02-24T15:57:56.8228250Z attribute = 'plot_data'
2025-02-24T15:57:56.8228250Z 
2025-02-24T15:57:56.8228320Z     @pytest.mark.parametrize(
2025-02-24T15:57:56.8228370Z         "attribute",
2025-02-24T15:57:56.8228420Z         [
2025-02-24T15:57:56.8228470Z             "plot_data",
2025-02-24T15:57:56.8228530Z             "plot_colors",
2025-02-24T15:57:56.8228580Z             "new_bin_edges",
2025-02-24T15:57:56.8228630Z         ],
2025-02-24T15:57:56.8228680Z     )
2025-02-24T15:57:56.8228740Z     def test_prepare_plot_data(
2025-02-24T15:57:56.8228790Z         self,
2025-02-24T15:57:56.8228850Z         plotter_prepare_plot_data,
2025-02-24T15:57:56.8228900Z         request,
2025-02-24T15:57:56.8228950Z         attribute,
2025-02-24T15:57:56.8229000Z     ):
2025-02-24T15:57:56.8229040Z         """
2025-02-24T15:57:56.8229150Z         Test for the _prepare_plot_data method in LIVPlotter.
2025-02-24T15:57:56.8229200Z     
2025-02-24T15:57:56.8229250Z         Parameters:
2025-02-24T15:57:56.8229300Z         -----------
2025-02-24T15:57:56.8229520Z         plotter_prepare_plot_data: The plotter instance with prepared data.
2025-02-24T15:57:56.8229590Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8229740Z         attribute: The attribute to test after preparing the plot data.
2025-02-24T15:57:56.8229790Z         """
2025-02-24T15:57:56.8229870Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8229980Z         if attribute == "plot_data" or attribute == "plot_colors":
2025-02-24T15:57:56.8230100Z             plot_object = getattr(plotter_prepare_plot_data, attribute)
2025-02-24T15:57:56.8230220Z             plot_object = [item for sublist in plot_object for item in sublist]
2025-02-24T15:57:56.8230400Z             if all(isinstance(item, u.Quantity) for item in plot_object):
2025-02-24T15:57:56.8230500Z                 plot_object = [item.value for item in plot_object]
2025-02-24T15:57:56.8230600Z             data = regression_data.sync_ndarray(plot_object)
2025-02-24T15:57:56.8230690Z >           np.testing.assert_allclose(plot_object, data)
2025-02-24T15:57:56.8230690Z 
2025-02-24T15:57:56.8230810Z tardis/visualization/tools/tests/test_liv_plot.py:210: 
2025-02-24T15:57:56.8230900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8230900Z 
2025-02-24T15:57:56.8231200Z args = (<function assert_allclose.<locals>.compare at 0x3032231a0>, array([12466.53861691, 14269.7609746 , 11910.79400472, 11...210447, 12126.50399598,
2025-02-24T15:57:56.8231300Z        12802.5584143 , 12151.608814  , 12023.01824217, 12443.91789366,
2025-02-24T15:57:56.8231360Z        11042.97481792]))
2025-02-24T15:57:56.8231560Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8231570Z 
2025-02-24T15:57:56.8231620Z     @wraps(func)
2025-02-24T15:57:56.8231680Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8231740Z         with self._recreate_cm():
2025-02-24T15:57:56.8231820Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8231890Z E           AssertionError: 
2025-02-24T15:57:56.8231980Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8232020Z E           
2025-02-24T15:57:56.8232100Z E           (shapes (379,), (381,) mismatch)
2025-02-24T15:57:56.8232210Z E            x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T15:57:56.8232310Z E                  11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T15:57:56.8232410Z E                  14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T15:57:56.8232520Z E            y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T15:57:56.8232610Z E                  13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T15:57:56.8232710Z E                  11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T15:57:56.8232710Z 
2025-02-24T15:57:56.8232880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8233010Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8233200Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8233420Z 	['O III', 'Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:57:56.8233550Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8233810Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV'] were not found in the provided wavelength range.
2025-02-24T15:57:56.8233980Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _______
2025-02-24T15:57:56.8233990Z 
2025-02-24T15:57:56.8234200Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x140029a30>
2025-02-24T15:57:56.8234560Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x31a52fc80>
2025-02-24T15:57:56.8235240Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>)
2025-02-24T15:57:56.8235480Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl0]>>
2025-02-24T15:57:56.8235490Z 
2025-02-24T15:57:56.8235590Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8235740Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:57:56.8235790Z     ):
2025-02-24T15:57:56.8235850Z         """
2025-02-24T15:57:56.8235990Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:57:56.8236190Z     
2025-02-24T15:57:56.8236290Z         Compares generated plot data with regression data.
2025-02-24T15:57:56.8236350Z     
2025-02-24T15:57:56.8236440Z         Parameters:
2025-02-24T15:57:56.8236520Z         -----------
2025-02-24T15:57:56.8236650Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:57:56.8236810Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:57:56.8236930Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8237000Z         """
2025-02-24T15:57:56.8237070Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:57:56.8237150Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8237330Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:57:56.8243910Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:57:56.8244070Z             expected_values = expected.get(
2025-02-24T15:57:56.8244180Z                 "plot_data_hdf/" + item
2025-02-24T15:57:56.8244250Z             ).values.flatten()
2025-02-24T15:57:56.8244350Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:57:56.8244400Z     
2025-02-24T15:57:56.8244510Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:57:56.8244580Z                 np.testing.assert_allclose(
2025-02-24T15:57:56.8244650Z                     expected_values,
2025-02-24T15:57:56.8244700Z                     actual_values,
2025-02-24T15:57:56.8244780Z                     rtol=0.3,
2025-02-24T15:57:56.8244830Z                     atol=3,
2025-02-24T15:57:56.8244880Z                 )
2025-02-24T15:57:56.8244930Z             else:
2025-02-24T15:57:56.8245040Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:57:56.8245080Z     
2025-02-24T15:57:56.8245170Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T15:57:56.8245270Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T15:57:56.8245350Z             if isinstance(data.get_label(), str):
2025-02-24T15:57:56.8245410Z                 assert (
2025-02-24T15:57:56.8245510Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T15:57:56.8245600Z                     == data.get_label()
2025-02-24T15:57:56.8245670Z                 )
2025-02-24T15:57:56.8245760Z             if isinstance(data, Line2D):
2025-02-24T15:57:56.8245830Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8245900Z                     data.get_xydata(),
2025-02-24T15:57:56.8246000Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T15:57:56.8246060Z                     rtol=0.3,
2025-02-24T15:57:56.8246110Z                     atol=3,
2025-02-24T15:57:56.8246160Z                 )
2025-02-24T15:57:56.8246160Z 
2025-02-24T15:57:56.8246270Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T15:57:56.8246370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8246380Z 
2025-02-24T15:57:56.8246570Z args = (<function assert_allclose.<locals>.compare at 0x14f769300>, array([[1.10e+04, 1.67e+02],
2025-02-24T15:57:56.8246630Z        [1.19e+04, 1.67e+02],...,
2025-02-24T15:57:56.8246690Z        [1.82e+04, 0.00e+00],
2025-02-24T15:57:56.8247160Z        [1.91e+04, 0.00e+00],
2025-02-24T15:57:56.8247240Z        [1.91e+04, 0.00e+00],
2025-02-24T15:57:56.8247290Z        [2.00e+04, 0.00e+00]]))
2025-02-24T15:57:56.8247500Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:57:56.8247500Z 
2025-02-24T15:57:56.8247550Z     @wraps(func)
2025-02-24T15:57:56.8247610Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8247680Z         with self._recreate_cm():
2025-02-24T15:57:56.8247740Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8247810Z E           AssertionError: 
2025-02-24T15:57:56.8247890Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.8248120Z E           
2025-02-24T15:57:56.8248230Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T15:57:56.8248310Z E           Max absolute difference: 22.
2025-02-24T15:57:56.8248380Z E           Max relative difference: 0.8
2025-02-24T15:57:56.8248470Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:57:56.8248570Z E                  [1.19e+04, 1.67e+02],
2025-02-24T15:57:56.8248640Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T15:57:56.8248710Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:57:56.8248770Z E                  [1.19e+04, 1.89e+02],
2025-02-24T15:57:56.8248830Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T15:57:56.8248840Z 
2025-02-24T15:57:56.8249020Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8249190Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8249500Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8249850Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:420)
2025-02-24T15:57:56.8249990Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8250370Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:420 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T15:57:56.8250580Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _______
2025-02-24T15:57:56.8250580Z 
2025-02-24T15:57:56.8250800Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x14002b410>
2025-02-24T15:57:56.8251050Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x16384b5f0>
2025-02-24T15:57:56.8251440Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>)
2025-02-24T15:57:56.8251640Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl1]>>
2025-02-24T15:57:56.8251650Z 
2025-02-24T15:57:56.8251710Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8251850Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:57:56.8251900Z     ):
2025-02-24T15:57:56.8251950Z         """
2025-02-24T15:57:56.8252070Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:57:56.8252120Z     
2025-02-24T15:57:56.8252230Z         Compares generated plot data with regression data.
2025-02-24T15:57:56.8252280Z     
2025-02-24T15:57:56.8252330Z         Parameters:
2025-02-24T15:57:56.8252380Z         -----------
2025-02-24T15:57:56.8252510Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:57:56.8252650Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:57:56.8252760Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8252820Z         """
2025-02-24T15:57:56.8252890Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:57:56.8252970Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8253130Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:57:56.8253410Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:57:56.8253520Z             expected_values = expected.get(
2025-02-24T15:57:56.8253610Z                 "plot_data_hdf/" + item
2025-02-24T15:57:56.8253680Z             ).values.flatten()
2025-02-24T15:57:56.8253780Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:57:56.8253860Z     
2025-02-24T15:57:56.8254000Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:57:56.8254080Z                 np.testing.assert_allclose(
2025-02-24T15:57:56.8254140Z                     expected_values,
2025-02-24T15:57:56.8254330Z                     actual_values,
2025-02-24T15:57:56.8254390Z                     rtol=0.3,
2025-02-24T15:57:56.8254440Z                     atol=3,
2025-02-24T15:57:56.8254490Z                 )
2025-02-24T15:57:56.8254570Z             else:
2025-02-24T15:57:56.8254700Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:57:56.8254780Z     
2025-02-24T15:57:56.8254880Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T15:57:56.8254990Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T15:57:56.8255080Z             if isinstance(data.get_label(), str):
2025-02-24T15:57:56.8255160Z                 assert (
2025-02-24T15:57:56.8255460Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T15:57:56.8255530Z                     == data.get_label()
2025-02-24T15:57:56.8255580Z                 )
2025-02-24T15:57:56.8255650Z             if isinstance(data, Line2D):
2025-02-24T15:57:56.8255720Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8255790Z                     data.get_xydata(),
2025-02-24T15:57:56.8255900Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T15:57:56.8255960Z                     rtol=0.3,
2025-02-24T15:57:56.8256020Z                     atol=3,
2025-02-24T15:57:56.8256060Z                 )
2025-02-24T15:57:56.8256070Z 
2025-02-24T15:57:56.8256180Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T15:57:56.8256290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8256290Z 
2025-02-24T15:57:56.8256480Z args = (<function assert_allclose.<locals>.compare at 0x31a2a6ac0>, array([[1.10e+04, 1.67e+02],
2025-02-24T15:57:56.8256550Z        [1.19e+04, 1.67e+02],...,
2025-02-24T15:57:56.8256610Z        [1.82e+04, 0.00e+00],
2025-02-24T15:57:56.8256660Z        [1.91e+04, 0.00e+00],
2025-02-24T15:57:56.8256720Z        [1.91e+04, 0.00e+00],
2025-02-24T15:57:56.8256770Z        [2.00e+04, 0.00e+00]]))
2025-02-24T15:57:56.8256980Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:57:56.8256990Z 
2025-02-24T15:57:56.8257030Z     @wraps(func)
2025-02-24T15:57:56.8257090Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8257150Z         with self._recreate_cm():
2025-02-24T15:57:56.8257230Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8257280Z E           AssertionError: 
2025-02-24T15:57:56.8257370Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.8257420Z E           
2025-02-24T15:57:56.8257500Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T15:57:56.8257570Z E           Max absolute difference: 22.
2025-02-24T15:57:56.8257640Z E           Max relative difference: 0.8
2025-02-24T15:57:56.8257700Z E            x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:57:56.8257760Z E                  [1.19e+04, 1.67e+02],
2025-02-24T15:57:56.8257830Z E                  [1.19e+04, 7.60e+01],...
2025-02-24T15:57:56.8257900Z E            y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:57:56.8257960Z E                  [1.19e+04, 1.89e+02],
2025-02-24T15:57:56.8258020Z E                  [1.19e+04, 8.20e+01],...
2025-02-24T15:57:56.8258030Z 
2025-02-24T15:57:56.8258200Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8258510Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _______
2025-02-24T15:57:56.8258510Z 
2025-02-24T15:57:56.8258730Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x14002b800>
2025-02-24T15:57:56.8258990Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x30ef6b860>
2025-02-24T15:57:56.8259410Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>)
2025-02-24T15:57:56.8259620Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl4]>>
2025-02-24T15:57:56.8259740Z 
2025-02-24T15:57:56.8259820Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8259950Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:57:56.8260000Z     ):
2025-02-24T15:57:56.8260050Z         """
2025-02-24T15:57:56.8260160Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:57:56.8260210Z     
2025-02-24T15:57:56.8260310Z         Compares generated plot data with regression data.
2025-02-24T15:57:56.8260390Z     
2025-02-24T15:57:56.8260480Z         Parameters:
2025-02-24T15:57:56.8260550Z         -----------
2025-02-24T15:57:56.8260720Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:57:56.8260900Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:57:56.8261020Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8261100Z         """
2025-02-24T15:57:56.8261220Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:57:56.8261350Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8261540Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:57:56.8261720Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:57:56.8261810Z             expected_values = expected.get(
2025-02-24T15:57:56.8261880Z                 "plot_data_hdf/" + item
2025-02-24T15:57:56.8261940Z             ).values.flatten()
2025-02-24T15:57:56.8262070Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:57:56.8262150Z     
2025-02-24T15:57:56.8262300Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:57:56.8262400Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8262500Z                     expected_values,
2025-02-24T15:57:56.8262590Z                     actual_values,
2025-02-24T15:57:56.8262670Z                     rtol=0.3,
2025-02-24T15:57:56.8262730Z                     atol=3,
2025-02-24T15:57:56.8262790Z                 )
2025-02-24T15:57:56.8262790Z 
2025-02-24T15:57:56.8262930Z tardis/visualization/tools/tests/test_liv_plot.py:318: 
2025-02-24T15:57:56.8263040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8263040Z 
2025-02-24T15:57:56.8263390Z args = (<function assert_allclose.<locals>.compare at 0x171a91b20>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12, ...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:57:56.8263460Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T15:57:56.8263660Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:57:56.8263660Z 
2025-02-24T15:57:56.8263710Z     @wraps(func)
2025-02-24T15:57:56.8263780Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8263840Z         with self._recreate_cm():
2025-02-24T15:57:56.8263910Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8263970Z E           AssertionError: 
2025-02-24T15:57:56.8264050Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.8264100Z E           
2025-02-24T15:57:56.8264170Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:57:56.8264240Z E           Max absolute difference: 34
2025-02-24T15:57:56.8264420Z E           Max relative difference: 0.71428571
2025-02-24T15:57:56.8264540Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:57:56.8264620Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.8264730Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:57:56.8264810Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.8264810Z 
2025-02-24T15:57:56.8264980Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8265100Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8265480Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8265680Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:57:56.8265800Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8266060Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:57:56.8266220Z ______ TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _______
2025-02-24T15:57:56.8266230Z 
2025-02-24T15:57:56.8266430Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x14002b8c0>
2025-02-24T15:57:56.8266670Z generate_plot_mpl_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x14151f260>
2025-02-24T15:57:56.8267100Z plotter_generate_plot_mpl = (<Axes: xlabel='Last Interaction Velocity (km/s)', ylabel='Packet Count'>, <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>)
2025-02-24T15:57:56.8267310Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_mpl5]>>
2025-02-24T15:57:56.8267310Z 
2025-02-24T15:57:56.8267380Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8267510Z         self, generate_plot_mpl_hdf, plotter_generate_plot_mpl, request
2025-02-24T15:57:56.8267560Z     ):
2025-02-24T15:57:56.8267610Z         """
2025-02-24T15:57:56.8267710Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:57:56.8267760Z     
2025-02-24T15:57:56.8267860Z         Compares generated plot data with regression data.
2025-02-24T15:57:56.8267900Z     
2025-02-24T15:57:56.8267950Z         Parameters:
2025-02-24T15:57:56.8268000Z         -----------
2025-02-24T15:57:56.8268140Z         generate_plot_mpl_hdf: The PlotDataHDF fixture for Matplotlib.
2025-02-24T15:57:56.8268260Z         plotter_generate_plot_mpl: The Matplotlib plotter fixture.
2025-02-24T15:57:56.8268330Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8268370Z         """
2025-02-24T15:57:56.8268440Z         fig, _ = plotter_generate_plot_mpl
2025-02-24T15:57:56.8268550Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8268730Z         expected = regression_data.sync_hdf_store(generate_plot_mpl_hdf)
2025-02-24T15:57:56.8268900Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:57:56.8268980Z             expected_values = expected.get(
2025-02-24T15:57:56.8269050Z                 "plot_data_hdf/" + item
2025-02-24T15:57:56.8269110Z             ).values.flatten()
2025-02-24T15:57:56.8269210Z             actual_values = getattr(generate_plot_mpl_hdf, item)
2025-02-24T15:57:56.8269260Z     
2025-02-24T15:57:56.8269360Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:57:56.8269440Z                 np.testing.assert_allclose(
2025-02-24T15:57:56.8269500Z                     expected_values,
2025-02-24T15:57:56.8269560Z                     actual_values,
2025-02-24T15:57:56.8269620Z                     rtol=0.3,
2025-02-24T15:57:56.8269680Z                     atol=3,
2025-02-24T15:57:56.8269720Z                 )
2025-02-24T15:57:56.8269770Z             else:
2025-02-24T15:57:56.8270080Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:57:56.8270150Z     
2025-02-24T15:57:56.8270240Z         labels = expected["plot_data_hdf/scalars"]
2025-02-24T15:57:56.8270340Z         for index1, data in enumerate(fig.get_children()):
2025-02-24T15:57:56.8270420Z             if isinstance(data.get_label(), str):
2025-02-24T15:57:56.8270470Z                 assert (
2025-02-24T15:57:56.8270570Z                     getattr(labels, "label" + str(index1)).decode()
2025-02-24T15:57:56.8270630Z                     == data.get_label()
2025-02-24T15:57:56.8270680Z                 )
2025-02-24T15:57:56.8270740Z             if isinstance(data, Line2D):
2025-02-24T15:57:56.8270960Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8271020Z                     data.get_xydata(),
2025-02-24T15:57:56.8271140Z                     expected.get("plot_data_hdf/" + "data" + str(index1)),
2025-02-24T15:57:56.8271190Z                     rtol=0.3,
2025-02-24T15:57:56.8271250Z                     atol=3,
2025-02-24T15:57:56.8271300Z                 )
2025-02-24T15:57:56.8271300Z 
2025-02-24T15:57:56.8271410Z tardis/visualization/tools/tests/test_liv_plot.py:335: 
2025-02-24T15:57:56.8271510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8271510Z 
2025-02-24T15:57:56.8271700Z args = (<function assert_allclose.<locals>.compare at 0x15aeb71a0>, array([[1.10e+04, 2.72e+02],
2025-02-24T15:57:56.8271760Z        [1.19e+04, 2.72e+02],...,
2025-02-24T15:57:56.8271810Z        [1.82e+04, 5.00e+00],
2025-02-24T15:57:56.8271880Z        [1.91e+04, 5.00e+00],
2025-02-24T15:57:56.8271940Z        [1.91e+04, 0.00e+00],
2025-02-24T15:57:56.8272000Z        [2.00e+04, 0.00e+00]]))
2025-02-24T15:57:56.8272190Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:57:56.8272200Z 
2025-02-24T15:57:56.8272250Z     @wraps(func)
2025-02-24T15:57:56.8272310Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8272380Z         with self._recreate_cm():
2025-02-24T15:57:56.8272440Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8272510Z E           AssertionError: 
2025-02-24T15:57:56.8272590Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.8272640Z E           
2025-02-24T15:57:56.8272710Z E           Mismatched elements: 4 / 40 (10%)
2025-02-24T15:57:56.8272780Z E           Max absolute difference: 34.
2025-02-24T15:57:56.8272850Z E           Max relative difference: 0.65
2025-02-24T15:57:56.8272910Z E            x: array([[1.10e+04, 2.72e+02],
2025-02-24T15:57:56.8272970Z E                  [1.19e+04, 2.72e+02],
2025-02-24T15:57:56.8273030Z E                  [1.19e+04, 1.10e+02],...
2025-02-24T15:57:56.8273100Z E            y: array([[1.10e+04, 3.06e+02],
2025-02-24T15:57:56.8273150Z E                  [1.19e+04, 3.06e+02],
2025-02-24T15:57:56.8273220Z E                  [1.19e+04, 1.18e+02],...
2025-02-24T15:57:56.8273220Z 
2025-02-24T15:57:56.8273390Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8273510Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8273760Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8274010Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:57:56.8274140Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8275410Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T15:57:56.8275730Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _______
2025-02-24T15:57:56.8275740Z 
2025-02-24T15:57:56.8275960Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1400ec4d0>
2025-02-24T15:57:56.8276630Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x30327ef90>
2025-02-24T15:57:56.8276710Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8276860Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:57:56.8277010Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:57:56.8277170Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>)
2025-02-24T15:57:56.8277360Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply0]>>
2025-02-24T15:57:56.8277370Z 
2025-02-24T15:57:56.8277440Z     def test_generate_plot_ply(
2025-02-24T15:57:56.8277660Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8277720Z     ):
2025-02-24T15:57:56.8277760Z         """
2025-02-24T15:57:56.8277870Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:57:56.8277920Z     
2025-02-24T15:57:56.8278030Z         Compares generated plot data with regression data.
2025-02-24T15:57:56.8278070Z     
2025-02-24T15:57:56.8278130Z         Parameters:
2025-02-24T15:57:56.8278180Z         ----------
2025-02-24T15:57:56.8278320Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:57:56.8278430Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:57:56.8278920Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8278990Z         """
2025-02-24T15:57:56.8279060Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8279150Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8279300Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8279340Z     
2025-02-24T15:57:56.8279460Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:57:56.8279550Z             expected_values = expected.get(
2025-02-24T15:57:56.8279620Z                 "plot_data_hdf/" + item
2025-02-24T15:57:56.8279700Z             ).values.flatten()
2025-02-24T15:57:56.8279820Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:57:56.8279870Z     
2025-02-24T15:57:56.8280010Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:57:56.8280090Z                 np.testing.assert_allclose(
2025-02-24T15:57:56.8280150Z                     expected_values,
2025-02-24T15:57:56.8280210Z                     actual_values,
2025-02-24T15:57:56.8280270Z                     rtol=0.3,
2025-02-24T15:57:56.8280320Z                     atol=3,
2025-02-24T15:57:56.8280390Z                 )
2025-02-24T15:57:56.8280440Z             else:
2025-02-24T15:57:56.8280560Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:57:56.8280630Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8280720Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8280780Z             if data.stackgroup:
2025-02-24T15:57:56.8280830Z                 assert (
2025-02-24T15:57:56.8280900Z                     data.stackgroup
2025-02-24T15:57:56.8280950Z                     == getattr(
2025-02-24T15:57:56.8281040Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8281110Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8281170Z                     ).decode()
2025-02-24T15:57:56.8281230Z                 )
2025-02-24T15:57:56.8281290Z             if data.name:
2025-02-24T15:57:56.8281350Z                 assert (
2025-02-24T15:57:56.8281410Z                     data.name
2025-02-24T15:57:56.8281470Z                     == getattr(
2025-02-24T15:57:56.8281550Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8281630Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8281690Z                     ).decode()
2025-02-24T15:57:56.8281740Z                 )
2025-02-24T15:57:56.8281810Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8282010Z                 data.x,
2025-02-24T15:57:56.8282090Z                 expected.get(group + "x").values.flatten(),
2025-02-24T15:57:56.8282150Z                 rtol=0.3,
2025-02-24T15:57:56.8282200Z                 atol=3,
2025-02-24T15:57:56.8282250Z             )
2025-02-24T15:57:56.8282320Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8282370Z                 data.y,
2025-02-24T15:57:56.8282460Z                 expected.get(group + "y").values.flatten(),
2025-02-24T15:57:56.8282510Z                 rtol=0.3,
2025-02-24T15:57:56.8282560Z                 atol=3,
2025-02-24T15:57:56.8282610Z             )
2025-02-24T15:57:56.8282680Z 
2025-02-24T15:57:56.8282810Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T15:57:56.8282900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8282900Z 
2025-02-24T15:57:56.8283230Z args = (<function assert_allclose.<locals>.compare at 0x17191bd80>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3, ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:57:56.8283300Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T15:57:56.8283500Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:57:56.8283500Z 
2025-02-24T15:57:56.8283550Z     @wraps(func)
2025-02-24T15:57:56.8283630Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8283710Z         with self._recreate_cm():
2025-02-24T15:57:56.8283770Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8283840Z E           AssertionError: 
2025-02-24T15:57:56.8283920Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.8283970Z E           
2025-02-24T15:57:56.8284040Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:57:56.8284110Z E           Max absolute difference: 22
2025-02-24T15:57:56.8284180Z E           Max relative difference: 0.8
2025-02-24T15:57:56.8284300Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:57:56.8284370Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:57:56.8284480Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:57:56.8284560Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:57:56.8284560Z 
2025-02-24T15:57:56.8284710Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8284840Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8285130Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8285470Z 	Both nelements and species_list were requested. Species_list takes priority; nelements is ignored ([1mliv_plot.py[0m:522)
2025-02-24T15:57:56.8285590Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8285940Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:522 Both nelements and species_list were requested. Species_list takes priority; nelements is ignored
2025-02-24T15:57:56.8286100Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _______
2025-02-24T15:57:56.8286100Z 
2025-02-24T15:57:56.8286300Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1400ec5c0>
2025-02-24T15:57:56.8286550Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x30075f3e0>
2025-02-24T15:57:56.8286620Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8286740Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:57:56.8286860Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:57:56.8287020Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>)
2025-02-24T15:57:56.8287340Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply1]>>
2025-02-24T15:57:56.8287350Z 
2025-02-24T15:57:56.8287420Z     def test_generate_plot_ply(
2025-02-24T15:57:56.8287580Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8287640Z     ):
2025-02-24T15:57:56.8287680Z         """
2025-02-24T15:57:56.8287790Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:57:56.8287840Z     
2025-02-24T15:57:56.8287940Z         Compares generated plot data with regression data.
2025-02-24T15:57:56.8287980Z     
2025-02-24T15:57:56.8288040Z         Parameters:
2025-02-24T15:57:56.8288090Z         ----------
2025-02-24T15:57:56.8288300Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:57:56.8288410Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:57:56.8288500Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8288550Z         """
2025-02-24T15:57:56.8288620Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8288710Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8288850Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8288900Z     
2025-02-24T15:57:56.8289030Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:57:56.8289110Z             expected_values = expected.get(
2025-02-24T15:57:56.8289190Z                 "plot_data_hdf/" + item
2025-02-24T15:57:56.8289250Z             ).values.flatten()
2025-02-24T15:57:56.8289360Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:57:56.8289410Z     
2025-02-24T15:57:56.8289510Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:57:56.8289590Z                 np.testing.assert_allclose(
2025-02-24T15:57:56.8289650Z                     expected_values,
2025-02-24T15:57:56.8289710Z                     actual_values,
2025-02-24T15:57:56.8289760Z                     rtol=0.3,
2025-02-24T15:57:56.8289830Z                     atol=3,
2025-02-24T15:57:56.8289900Z                 )
2025-02-24T15:57:56.8289950Z             else:
2025-02-24T15:57:56.8290060Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:57:56.8290140Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8290220Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8290290Z             if data.stackgroup:
2025-02-24T15:57:56.8290340Z                 assert (
2025-02-24T15:57:56.8290400Z                     data.stackgroup
2025-02-24T15:57:56.8290460Z                     == getattr(
2025-02-24T15:57:56.8290540Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8290620Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8290670Z                     ).decode()
2025-02-24T15:57:56.8290720Z                 )
2025-02-24T15:57:56.8290770Z             if data.name:
2025-02-24T15:57:56.8290830Z                 assert (
2025-02-24T15:57:56.8290880Z                     data.name
2025-02-24T15:57:56.8290940Z                     == getattr(
2025-02-24T15:57:56.8291010Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8291090Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8291140Z                     ).decode()
2025-02-24T15:57:56.8291190Z                 )
2025-02-24T15:57:56.8291260Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8291300Z                 data.x,
2025-02-24T15:57:56.8291400Z                 expected.get(group + "x").values.flatten(),
2025-02-24T15:57:56.8291450Z                 rtol=0.3,
2025-02-24T15:57:56.8291500Z                 atol=3,
2025-02-24T15:57:56.8291550Z             )
2025-02-24T15:57:56.8291640Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8291690Z                 data.y,
2025-02-24T15:57:56.8291770Z                 expected.get(group + "y").values.flatten(),
2025-02-24T15:57:56.8291820Z                 rtol=0.3,
2025-02-24T15:57:56.8292110Z                 atol=3,
2025-02-24T15:57:56.8292180Z             )
2025-02-24T15:57:56.8292190Z 
2025-02-24T15:57:56.8292310Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T15:57:56.8292400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8292410Z 
2025-02-24T15:57:56.8292710Z args = (<function assert_allclose.<locals>.compare at 0x1718cba60>, array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3, ...]), array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:57:56.8292780Z          0,   0,   0,   0,   0,   0,   0]))
2025-02-24T15:57:56.8293090Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:57:56.8293090Z 
2025-02-24T15:57:56.8293140Z     @wraps(func)
2025-02-24T15:57:56.8293210Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8293270Z         with self._recreate_cm():
2025-02-24T15:57:56.8293340Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8293390Z E           AssertionError: 
2025-02-24T15:57:56.8293480Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.8293520Z E           
2025-02-24T15:57:56.8293590Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:57:56.8293660Z E           Max absolute difference: 22
2025-02-24T15:57:56.8293730Z E           Max relative difference: 0.8
2025-02-24T15:57:56.8293840Z E            x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:57:56.8293910Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:57:56.8294030Z E            y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:57:56.8294100Z E                    0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:57:56.8294100Z 
2025-02-24T15:57:56.8294260Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8294430Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _______
2025-02-24T15:57:56.8294440Z 
2025-02-24T15:57:56.8294640Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1400ec9e0>
2025-02-24T15:57:56.8294890Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x16946e5a0>
2025-02-24T15:57:56.8294970Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8295090Z     'data': [{'line': {'color': 'rgb(127, 0, 0)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:57:56.8295200Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:57:56.8295480Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>)
2025-02-24T15:57:56.8295680Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply4]>>
2025-02-24T15:57:56.8295680Z 
2025-02-24T15:57:56.8295760Z     def test_generate_plot_ply(
2025-02-24T15:57:56.8295900Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8295950Z     ):
2025-02-24T15:57:56.8296000Z         """
2025-02-24T15:57:56.8296110Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:57:56.8296150Z     
2025-02-24T15:57:56.8296260Z         Compares generated plot data with regression data.
2025-02-24T15:57:56.8296310Z     
2025-02-24T15:57:56.8296370Z         Parameters:
2025-02-24T15:57:56.8296420Z         ----------
2025-02-24T15:57:56.8296550Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:57:56.8296660Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:57:56.8296730Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8296780Z         """
2025-02-24T15:57:56.8296850Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8296930Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8297070Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8301750Z     
2025-02-24T15:57:56.8301930Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:57:56.8302000Z             expected_values = expected.get(
2025-02-24T15:57:56.8302060Z                 "plot_data_hdf/" + item
2025-02-24T15:57:56.8302130Z             ).values.flatten()
2025-02-24T15:57:56.8302240Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:57:56.8302280Z     
2025-02-24T15:57:56.8302390Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:57:56.8302460Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8302520Z                     expected_values,
2025-02-24T15:57:56.8302650Z                     actual_values,
2025-02-24T15:57:56.8302710Z                     rtol=0.3,
2025-02-24T15:57:56.8302760Z                     atol=3,
2025-02-24T15:57:56.8302810Z                 )
2025-02-24T15:57:56.8302810Z 
2025-02-24T15:57:56.8302930Z tardis/visualization/tools/tests/test_liv_plot.py:486: 
2025-02-24T15:57:56.8303020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8303020Z 
2025-02-24T15:57:56.8303350Z args = (<function assert_allclose.<locals>.compare at 0x17191bba0>, array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12, ...]), array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:57:56.8303410Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T15:57:56.8303610Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:57:56.8303610Z 
2025-02-24T15:57:56.8303660Z     @wraps(func)
2025-02-24T15:57:56.8303730Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8303790Z         with self._recreate_cm():
2025-02-24T15:57:56.8303850Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8303920Z E           AssertionError: 
2025-02-24T15:57:56.8304050Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.8304130Z E           
2025-02-24T15:57:56.8304190Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:57:56.8304270Z E           Max absolute difference: 34
2025-02-24T15:57:56.8304340Z E           Max relative difference: 0.71428571
2025-02-24T15:57:56.8304470Z E            x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:57:56.8304540Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.8304650Z E            y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:57:56.8304720Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.8304720Z 
2025-02-24T15:57:56.8304880Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8305010Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8305380Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8305600Z 	['Si IV'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:57:56.8305730Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8305980Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['Si IV'] were not found in the provided wavelength range.
2025-02-24T15:57:56.8306140Z ______ TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _______
2025-02-24T15:57:56.8306140Z 
2025-02-24T15:57:56.8306360Z self = <tardis.visualization.tools.tests.test_liv_plot.TestLIVPlotter object at 0x1400ecaa0>
2025-02-24T15:57:56.8306640Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_liv_plot.PlotDataHDF object at 0x15ae3d1c0>
2025-02-24T15:57:56.8306710Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8306890Z     'data': [{'line': {'color': 'rgb(0, 0, 127)', 'shape': 'hv', 'width': 2.5},
2025-02-24T15:57:56.8307030Z               'mode': 'lines...': 'e', 'title': {'text': 'Packet Count'}}}
2025-02-24T15:57:56.8307380Z }), <tardis.visualization.tools.liv_plot.LIVPlotter object at 0x15ad0a990>)
2025-02-24T15:57:56.8307640Z request = <FixtureRequest for <Function test_generate_plot_ply[plotter_generate_plot_ply5]>>
2025-02-24T15:57:56.8307650Z 
2025-02-24T15:57:56.8307740Z     def test_generate_plot_ply(
2025-02-24T15:57:56.8307880Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8307930Z     ):
2025-02-24T15:57:56.8308010Z         """
2025-02-24T15:57:56.8308150Z         Test for the generate_plot_mpl method in LIVPlotter.
2025-02-24T15:57:56.8308210Z     
2025-02-24T15:57:56.8308350Z         Compares generated plot data with regression data.
2025-02-24T15:57:56.8308570Z     
2025-02-24T15:57:56.8308630Z         Parameters:
2025-02-24T15:57:56.8308680Z         ----------
2025-02-24T15:57:56.8308830Z         generate_plot_plotly_hdf: The PlotDataHDF fixture for Plotly.
2025-02-24T15:57:56.8308940Z         plotter_generate_plot_mpl: The Plotly plotter fixture.
2025-02-24T15:57:56.8309030Z         request: Pytest's request fixture.
2025-02-24T15:57:56.8309100Z         """
2025-02-24T15:57:56.8309200Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8309310Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8309490Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8309530Z     
2025-02-24T15:57:56.8309650Z         for item in ["_species_name", "_color_list", "step_x", "step_y"]:
2025-02-24T15:57:56.8309720Z             expected_values = expected.get(
2025-02-24T15:57:56.8309790Z                 "plot_data_hdf/" + item
2025-02-24T15:57:56.8309850Z             ).values.flatten()
2025-02-24T15:57:56.8309980Z             actual_values = getattr(generate_plot_plotly_hdf, item)
2025-02-24T15:57:56.8310030Z     
2025-02-24T15:57:56.8310150Z             if np.issubdtype(expected_values.dtype, np.number):
2025-02-24T15:57:56.8310220Z                 np.testing.assert_allclose(
2025-02-24T15:57:56.8310300Z                     expected_values,
2025-02-24T15:57:56.8310390Z                     actual_values,
2025-02-24T15:57:56.8310460Z                     rtol=0.3,
2025-02-24T15:57:56.8310520Z                     atol=3,
2025-02-24T15:57:56.8310560Z                 )
2025-02-24T15:57:56.8310620Z             else:
2025-02-24T15:57:56.8310740Z                 assert np.array_equal(expected_values, actual_values)
2025-02-24T15:57:56.8310810Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8310890Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8310960Z             if data.stackgroup:
2025-02-24T15:57:56.8311010Z                 assert (
2025-02-24T15:57:56.8311070Z                     data.stackgroup
2025-02-24T15:57:56.8311130Z                     == getattr(
2025-02-24T15:57:56.8311210Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8311280Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8311340Z                     ).decode()
2025-02-24T15:57:56.8311390Z                 )
2025-02-24T15:57:56.8311440Z             if data.name:
2025-02-24T15:57:56.8311490Z                 assert (
2025-02-24T15:57:56.8311540Z                     data.name
2025-02-24T15:57:56.8311590Z                     == getattr(
2025-02-24T15:57:56.8311670Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8311740Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8311800Z                     ).decode()
2025-02-24T15:57:56.8311840Z                 )
2025-02-24T15:57:56.8311920Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8311980Z                 data.x,
2025-02-24T15:57:56.8312070Z                 expected.get(group + "x").values.flatten(),
2025-02-24T15:57:56.8312120Z                 rtol=0.3,
2025-02-24T15:57:56.8312170Z                 atol=3,
2025-02-24T15:57:56.8312210Z             )
2025-02-24T15:57:56.8312280Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8312410Z                 data.y,
2025-02-24T15:57:56.8312500Z                 expected.get(group + "y").values.flatten(),
2025-02-24T15:57:56.8312550Z                 rtol=0.3,
2025-02-24T15:57:56.8312600Z                 atol=3,
2025-02-24T15:57:56.8312660Z             )
2025-02-24T15:57:56.8312670Z 
2025-02-24T15:57:56.8312780Z tardis/visualization/tools/tests/test_liv_plot.py:518: 
2025-02-24T15:57:56.8312870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8312870Z 
2025-02-24T15:57:56.8313190Z args = (<function assert_allclose.<locals>.compare at 0x1718cbc40>, array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7, ...]), array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:57:56.8313330Z          2,   5,   5,   5,   5,   0,   0]))
2025-02-24T15:57:56.8313520Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=0.3, atol=3', 'verbose': True}
2025-02-24T15:57:56.8313530Z 
2025-02-24T15:57:56.8313580Z     @wraps(func)
2025-02-24T15:57:56.8313640Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8313700Z         with self._recreate_cm():
2025-02-24T15:57:56.8313770Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8313830Z E           AssertionError: 
2025-02-24T15:57:56.8313910Z E           Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.8313950Z E           
2025-02-24T15:57:56.8314020Z E           Mismatched elements: 4 / 20 (20%)
2025-02-24T15:57:56.8314090Z E           Max absolute difference: 34
2025-02-24T15:57:56.8314160Z E           Max relative difference: 0.65
2025-02-24T15:57:56.8314260Z E            x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:57:56.8314400Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.8314520Z E            y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:57:56.8314580Z E                    2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.8314590Z 
2025-02-24T15:57:56.8314760Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8314880Z ---------------------------- Captured stdout setup -----------------------------
2025-02-24T15:57:56.8315080Z [[1mtardis.visualization.tools.liv_plot[0m][[1;37mINFO[0m   ]  
2025-02-24T15:57:56.8315330Z 	['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range. ([1mliv_plot.py[0m:239)
2025-02-24T15:57:56.8315460Z ------------------------------ Captured log setup ------------------------------
2025-02-24T15:57:56.8315750Z INFO     tardis.visualization.tools.liv_plot:liv_plot.py:239 ['O III', 'Si IV', 'S I', 'S IV', 'Ar I', 'Ar III'] were not found in the provided wavelength range.
2025-02-24T15:57:56.8315950Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-02-24T15:57:56.8315960Z 
2025-02-24T15:57:56.8316170Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006c320>
2025-02-24T15:57:56.8316410Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8316680Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17e83ac60>
2025-02-24T15:57:56.8316900Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data0]>>
2025-02-24T15:57:56.8316910Z 
2025-02-24T15:57:56.8316980Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8317020Z         self,
2025-02-24T15:57:56.8317090Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8317160Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8317220Z         request,
2025-02-24T15:57:56.8317270Z     ):
2025-02-24T15:57:56.8317350Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8317500Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8317900Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8318050Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8318110Z             plot_object = getattr(
2025-02-24T15:57:56.8318210Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8318270Z             )
2025-02-24T15:57:56.8318350Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8318480Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8318560Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8318630Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8318860Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8318930Z                 )
2025-02-24T15:57:56.8318930Z 
2025-02-24T15:57:56.8319050Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8319140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8319140Z 
2025-02-24T15:57:56.8319530Z args = (<function assert_allclose.<locals>.compare at 0x31dff96c0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:57:56.8319610Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8319810Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8319810Z 
2025-02-24T15:57:56.8319860Z     @wraps(func)
2025-02-24T15:57:56.8319920Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8319990Z         with self._recreate_cm():
2025-02-24T15:57:56.8320060Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8320120Z E           AssertionError: 
2025-02-24T15:57:56.8320210Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8320270Z E           
2025-02-24T15:57:56.8320350Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.8320430Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:57:56.8320500Z E           Max relative difference: 4.76021355
2025-02-24T15:57:56.8320630Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8320690Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8320810Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8320870Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8320880Z 
2025-02-24T15:57:56.8321040Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8321220Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-02-24T15:57:56.8321220Z 
2025-02-24T15:57:56.8321430Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006c9b0>
2025-02-24T15:57:56.8321670Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8321910Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x3031d43e0>
2025-02-24T15:57:56.8322160Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data1]>>
2025-02-24T15:57:56.8322170Z 
2025-02-24T15:57:56.8322240Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8322280Z         self,
2025-02-24T15:57:56.8322350Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8322410Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8322470Z         request,
2025-02-24T15:57:56.8322510Z     ):
2025-02-24T15:57:56.8322600Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8322740Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8322800Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8323020Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8323090Z             plot_object = getattr(
2025-02-24T15:57:56.8323190Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8323240Z             )
2025-02-24T15:57:56.8323320Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8323460Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8323540Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8323610Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8323710Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8323810Z                 )
2025-02-24T15:57:56.8323810Z 
2025-02-24T15:57:56.8323930Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8324020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8324020Z 
2025-02-24T15:57:56.8324390Z args = (<function assert_allclose.<locals>.compare at 0x31dff9300>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:57:56.8324470Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8324660Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8324670Z 
2025-02-24T15:57:56.8324720Z     @wraps(func)
2025-02-24T15:57:56.8324770Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8324840Z         with self._recreate_cm():
2025-02-24T15:57:56.8324900Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8324970Z E           AssertionError: 
2025-02-24T15:57:56.8325050Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8325100Z E           
2025-02-24T15:57:56.8325170Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.8325250Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:57:56.8325330Z E           Max relative difference: 4.76021355
2025-02-24T15:57:56.8325450Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8325510Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8325630Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8325700Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8325700Z 
2025-02-24T15:57:56.8325860Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8326050Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-02-24T15:57:56.8326050Z 
2025-02-24T15:57:56.8326260Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006ce60>
2025-02-24T15:57:56.8326520Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8326780Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31c966d80>
2025-02-24T15:57:56.8327010Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data2]>>
2025-02-24T15:57:56.8327010Z 
2025-02-24T15:57:56.8327090Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8327130Z         self,
2025-02-24T15:57:56.8327200Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8327270Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8327320Z         request,
2025-02-24T15:57:56.8327370Z     ):
2025-02-24T15:57:56.8327450Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8327620Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8327680Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8327830Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8327890Z             plot_object = getattr(
2025-02-24T15:57:56.8328070Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8328120Z             )
2025-02-24T15:57:56.8328200Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8328330Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8328410Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8328480Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8328580Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8328630Z                 )
2025-02-24T15:57:56.8328680Z 
2025-02-24T15:57:56.8328790Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8328880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8328890Z 
2025-02-24T15:57:56.8329270Z args = (<function assert_allclose.<locals>.compare at 0x31dffb9c0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:57:56.8329370Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8329570Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8329580Z 
2025-02-24T15:57:56.8329630Z     @wraps(func)
2025-02-24T15:57:56.8329690Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8329750Z         with self._recreate_cm():
2025-02-24T15:57:56.8329820Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8329880Z E           AssertionError: 
2025-02-24T15:57:56.8329970Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8330010Z E           
2025-02-24T15:57:56.8330090Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.8330170Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:57:56.8330260Z E           Max relative difference: 4.76021355
2025-02-24T15:57:56.8330380Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8330460Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8330590Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8330650Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8330650Z 
2025-02-24T15:57:56.8330810Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8331010Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-02-24T15:57:56.8331010Z 
2025-02-24T15:57:56.8331230Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006cf50>
2025-02-24T15:57:56.8331470Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8331730Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15a9f1fa0>
2025-02-24T15:57:56.8331960Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data3]>>
2025-02-24T15:57:56.8331960Z 
2025-02-24T15:57:56.8332030Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8332080Z         self,
2025-02-24T15:57:56.8332140Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8332210Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8332250Z         request,
2025-02-24T15:57:56.8332300Z     ):
2025-02-24T15:57:56.8332400Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8332540Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8332610Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8332750Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8332810Z             plot_object = getattr(
2025-02-24T15:57:56.8332910Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8333020Z             )
2025-02-24T15:57:56.8333100Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8333230Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8333310Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8333380Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8333490Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8333530Z                 )
2025-02-24T15:57:56.8333530Z 
2025-02-24T15:57:56.8333670Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8333890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8333890Z 
2025-02-24T15:57:56.8334270Z args = (<function assert_allclose.<locals>.compare at 0x15b1304a0>, array([1.53211324e-06, 1.14480943e-06, 1.97566465e-06, .....), array([1.52953793e-06, 1.14288558e-06, 1.97234209e-06, ...,
2025-02-24T15:57:56.8334350Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8334600Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8334600Z 
2025-02-24T15:57:56.8334660Z     @wraps(func)
2025-02-24T15:57:56.8334720Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8334780Z         with self._recreate_cm():
2025-02-24T15:57:56.8334880Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8334950Z E           AssertionError: 
2025-02-24T15:57:56.8335030Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8335080Z E           
2025-02-24T15:57:56.8335170Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.8335290Z E           Max absolute difference: 4.3299331e-05
2025-02-24T15:57:56.8337940Z E           Max relative difference: 4.76021355
2025-02-24T15:57:56.8338130Z E            x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8338210Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8338340Z E            y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8338410Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8338410Z 
2025-02-24T15:57:56.8338570Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8338750Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-02-24T15:57:56.8338750Z 
2025-02-24T15:57:56.8339190Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d010>
2025-02-24T15:57:56.8339450Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8339710Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x3003650d0>
2025-02-24T15:57:56.8339920Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data4]>>
2025-02-24T15:57:56.8339930Z 
2025-02-24T15:57:56.8340000Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8340050Z         self,
2025-02-24T15:57:56.8340120Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8340180Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8340540Z         request,
2025-02-24T15:57:56.8340650Z     ):
2025-02-24T15:57:56.8340760Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8340910Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8340980Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8341150Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8341210Z             plot_object = getattr(
2025-02-24T15:57:56.8341320Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8341370Z             )
2025-02-24T15:57:56.8341850Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8341990Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8342080Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8342150Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8342260Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8342310Z                 )
2025-02-24T15:57:56.8342320Z 
2025-02-24T15:57:56.8342440Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8342540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8342650Z 
2025-02-24T15:57:56.8343040Z args = (<function assert_allclose.<locals>.compare at 0x31dff8d60>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:57:56.8343120Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8343320Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8343320Z 
2025-02-24T15:57:56.8343380Z     @wraps(func)
2025-02-24T15:57:56.8343440Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8343500Z         with self._recreate_cm():
2025-02-24T15:57:56.8343570Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8343630Z E           AssertionError: 
2025-02-24T15:57:56.8343720Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8343760Z E           
2025-02-24T15:57:56.8343840Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.8343920Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:57:56.8344000Z E           Max relative difference: 178.93768705
2025-02-24T15:57:56.8344130Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8344190Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8344320Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8344380Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8344380Z 
2025-02-24T15:57:56.8344560Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8344740Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-02-24T15:57:56.8344740Z 
2025-02-24T15:57:56.8344960Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d0d0>
2025-02-24T15:57:56.8345210Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8345470Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x300364770>
2025-02-24T15:57:56.8345710Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data5]>>
2025-02-24T15:57:56.8345710Z 
2025-02-24T15:57:56.8345790Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8345840Z         self,
2025-02-24T15:57:56.8345910Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8345980Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8346030Z         request,
2025-02-24T15:57:56.8346090Z     ):
2025-02-24T15:57:56.8346170Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8346320Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8346380Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8346530Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8346600Z             plot_object = getattr(
2025-02-24T15:57:56.8346700Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8346760Z             )
2025-02-24T15:57:56.8346830Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8347050Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8347150Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8347220Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8347330Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8347390Z                 )
2025-02-24T15:57:56.8347390Z 
2025-02-24T15:57:56.8347500Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8347600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8347610Z 
2025-02-24T15:57:56.8360050Z args = (<function assert_allclose.<locals>.compare at 0x31dff80e0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:57:56.8361030Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8361250Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8361270Z 
2025-02-24T15:57:56.8361320Z     @wraps(func)
2025-02-24T15:57:56.8361390Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8361450Z         with self._recreate_cm():
2025-02-24T15:57:56.8361530Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8361590Z E           AssertionError: 
2025-02-24T15:57:56.8361680Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8361730Z E           
2025-02-24T15:57:56.8361810Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.8361890Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:57:56.8361960Z E           Max relative difference: 178.93768705
2025-02-24T15:57:56.8362100Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8362160Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8362290Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8362360Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8362360Z 
2025-02-24T15:57:56.8362550Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8362730Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-02-24T15:57:56.8362730Z 
2025-02-24T15:57:56.8362950Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d190>
2025-02-24T15:57:56.8363200Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8363460Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x305b11ac0>
2025-02-24T15:57:56.8363690Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data6]>>
2025-02-24T15:57:56.8363700Z 
2025-02-24T15:57:56.8363770Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8363820Z         self,
2025-02-24T15:57:56.8363900Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8363960Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8364020Z         request,
2025-02-24T15:57:56.8364060Z     ):
2025-02-24T15:57:56.8364150Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8364300Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8364370Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8364510Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8364570Z             plot_object = getattr(
2025-02-24T15:57:56.8364670Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8364730Z             )
2025-02-24T15:57:56.8364810Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8364940Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8365030Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8365280Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8365400Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8365450Z                 )
2025-02-24T15:57:56.8365450Z 
2025-02-24T15:57:56.8365570Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8365670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8365670Z 
2025-02-24T15:57:56.8366060Z args = (<function assert_allclose.<locals>.compare at 0x31e0be7a0>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:57:56.8366220Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8366420Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8366430Z 
2025-02-24T15:57:56.8366480Z     @wraps(func)
2025-02-24T15:57:56.8366540Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8366610Z         with self._recreate_cm():
2025-02-24T15:57:56.8366680Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8366750Z E           AssertionError: 
2025-02-24T15:57:56.8366840Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8366890Z E           
2025-02-24T15:57:56.8366970Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.8367050Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:57:56.8367120Z E           Max relative difference: 178.93768705
2025-02-24T15:57:56.8367240Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8367320Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8367430Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8367500Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8367500Z 
2025-02-24T15:57:56.8367670Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8367850Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-02-24T15:57:56.8367860Z 
2025-02-24T15:57:56.8368080Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d280>
2025-02-24T15:57:56.8368320Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8368590Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x305adf110>
2025-02-24T15:57:56.8368830Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data7]>>
2025-02-24T15:57:56.8368830Z 
2025-02-24T15:57:56.8368910Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8368960Z         self,
2025-02-24T15:57:56.8369040Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8369170Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8369230Z         request,
2025-02-24T15:57:56.8369280Z     ):
2025-02-24T15:57:56.8369360Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8369510Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8369580Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8369720Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8369780Z             plot_object = getattr(
2025-02-24T15:57:56.8370380Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8370470Z             )
2025-02-24T15:57:56.8370580Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8370720Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8370810Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8371510Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8371980Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8372050Z                 )
2025-02-24T15:57:56.8372050Z 
2025-02-24T15:57:56.8372180Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8372280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8372290Z 
2025-02-24T15:57:56.8372680Z args = (<function assert_allclose.<locals>.compare at 0x31dff9d00>, array([3.59555432e-06, 1.68536709e-06, 3.01523328e-06, .....), array([3.52269417e-06, 1.63497091e-06, 3.37014136e-06, ...,
2025-02-24T15:57:56.8372770Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8373060Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8373060Z 
2025-02-24T15:57:56.8373120Z     @wraps(func)
2025-02-24T15:57:56.8373190Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8373250Z         with self._recreate_cm():
2025-02-24T15:57:56.8373320Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8373380Z E           AssertionError: 
2025-02-24T15:57:56.8373470Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8373510Z E           
2025-02-24T15:57:56.8374300Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.8374440Z E           Max absolute difference: 3.16368526e-05
2025-02-24T15:57:56.8374510Z E           Max relative difference: 178.93768705
2025-02-24T15:57:56.8374640Z E            x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8374700Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8374830Z E            y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.8374890Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8374900Z 
2025-02-24T15:57:56.8375070Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8375240Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-02-24T15:57:56.8375250Z 
2025-02-24T15:57:56.8375450Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d340>
2025-02-24T15:57:56.8375850Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8376110Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x141672240>
2025-02-24T15:57:56.8377840Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data8]>>
2025-02-24T15:57:56.8377860Z 
2025-02-24T15:57:56.8377950Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8384380Z         self,
2025-02-24T15:57:56.8384470Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8384860Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8385250Z         request,
2025-02-24T15:57:56.8385400Z     ):
2025-02-24T15:57:56.8385690Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8387020Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8387130Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8387290Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8387360Z             plot_object = getattr(
2025-02-24T15:57:56.8387460Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8387520Z             )
2025-02-24T15:57:56.8387600Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8387750Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8387840Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8387910Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8388020Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8388540Z                 )
2025-02-24T15:57:56.8388540Z 
2025-02-24T15:57:56.8388690Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8388780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8390050Z 
2025-02-24T15:57:56.8390490Z args = (<function assert_allclose.<locals>.compare at 0x31dff8860>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:57:56.8390590Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8390800Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8391030Z 
2025-02-24T15:57:56.8391090Z     @wraps(func)
2025-02-24T15:57:56.8391160Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8391220Z         with self._recreate_cm():
2025-02-24T15:57:56.8391290Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8391360Z E           AssertionError: 
2025-02-24T15:57:56.8391890Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8391950Z E           
2025-02-24T15:57:56.8392030Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.8392100Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:57:56.8392180Z E           Max relative difference: 4.76021355
2025-02-24T15:57:56.8392320Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8392400Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8392530Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8392610Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8392610Z 
2025-02-24T15:57:56.8392780Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8393410Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-02-24T15:57:56.8393420Z 
2025-02-24T15:57:56.8393640Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d400>
2025-02-24T15:57:56.8393890Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8394180Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x305b38e00>
2025-02-24T15:57:56.8395390Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data9]>>
2025-02-24T15:57:56.8395390Z 
2025-02-24T15:57:56.8395480Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8395540Z         self,
2025-02-24T15:57:56.8395610Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8395680Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8395730Z         request,
2025-02-24T15:57:56.8395780Z     ):
2025-02-24T15:57:56.8395860Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8396040Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8396110Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8396840Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8396930Z             plot_object = getattr(
2025-02-24T15:57:56.8397040Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8397100Z             )
2025-02-24T15:57:56.8397180Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8397320Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8397410Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8397500Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8397610Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8397660Z                 )
2025-02-24T15:57:56.8397670Z 
2025-02-24T15:57:56.8397970Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8398080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8398090Z 
2025-02-24T15:57:56.8398480Z args = (<function assert_allclose.<locals>.compare at 0x31dffb9c0>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:57:56.8398570Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8398780Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8398780Z 
2025-02-24T15:57:56.8398910Z     @wraps(func)
2025-02-24T15:57:56.8400030Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8400120Z         with self._recreate_cm():
2025-02-24T15:57:56.8400190Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8400250Z E           AssertionError: 
2025-02-24T15:57:56.8400350Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8400400Z E           
2025-02-24T15:57:56.8400480Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.8400560Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:57:56.8400870Z E           Max relative difference: 4.76021355
2025-02-24T15:57:56.8401140Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8401220Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8401350Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8401420Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8401420Z 
2025-02-24T15:57:56.8401590Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8401770Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-02-24T15:57:56.8401770Z 
2025-02-24T15:57:56.8401990Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d4c0>
2025-02-24T15:57:56.8402240Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8402500Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17e4faff0>
2025-02-24T15:57:56.8402730Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data10]>>
2025-02-24T15:57:56.8402730Z 
2025-02-24T15:57:56.8402800Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8402860Z         self,
2025-02-24T15:57:56.8402930Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8403000Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8403050Z         request,
2025-02-24T15:57:56.8403100Z     ):
2025-02-24T15:57:56.8403180Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8403340Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8403410Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8403550Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8403620Z             plot_object = getattr(
2025-02-24T15:57:56.8403720Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8403770Z             )
2025-02-24T15:57:56.8403840Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8403980Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8404060Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8404140Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8404250Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8404300Z                 )
2025-02-24T15:57:56.8404300Z 
2025-02-24T15:57:56.8404420Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8404670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8404670Z 
2025-02-24T15:57:56.8405050Z args = (<function assert_allclose.<locals>.compare at 0x31e0bfc40>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:57:56.8405130Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8405340Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8405340Z 
2025-02-24T15:57:56.8405390Z     @wraps(func)
2025-02-24T15:57:56.8405450Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8405580Z         with self._recreate_cm():
2025-02-24T15:57:56.8405650Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8407770Z E           AssertionError: 
2025-02-24T15:57:56.8407890Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8407940Z E           
2025-02-24T15:57:56.8408020Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.8408110Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:57:56.8408180Z E           Max relative difference: 4.76021355
2025-02-24T15:57:56.8408310Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8408380Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8408500Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8408570Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8408570Z 
2025-02-24T15:57:56.8408730Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8408920Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-02-24T15:57:56.8408920Z 
2025-02-24T15:57:56.8409130Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d580>
2025-02-24T15:57:56.8409380Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8409660Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15a9f3e30>
2025-02-24T15:57:56.8409890Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data11]>>
2025-02-24T15:57:56.8409890Z 
2025-02-24T15:57:56.8409970Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8410020Z         self,
2025-02-24T15:57:56.8410100Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8410160Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8410210Z         request,
2025-02-24T15:57:56.8410260Z     ):
2025-02-24T15:57:56.8410350Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8410500Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8410570Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8410720Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8410780Z             plot_object = getattr(
2025-02-24T15:57:56.8410890Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8410930Z             )
2025-02-24T15:57:56.8411010Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8411150Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8411240Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8411310Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8411420Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8411470Z                 )
2025-02-24T15:57:56.8411480Z 
2025-02-24T15:57:56.8411610Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8411710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8411710Z 
2025-02-24T15:57:56.8413460Z args = (<function assert_allclose.<locals>.compare at 0x31dffaf20>, array([1.83316611e+46, 1.36975896e+46, 2.36387324e+46, .....), array([1.83008477e+46, 1.36745709e+46, 2.35989781e+46, ...,
2025-02-24T15:57:56.8413550Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8413750Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8413760Z 
2025-02-24T15:57:56.8413810Z     @wraps(func)
2025-02-24T15:57:56.8413870Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8413940Z         with self._recreate_cm():
2025-02-24T15:57:56.8414000Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8414130Z E           AssertionError: 
2025-02-24T15:57:56.8414220Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8414260Z E           
2025-02-24T15:57:56.8414340Z E           Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.8414420Z E           Max absolute difference: 5.1807441e+47
2025-02-24T15:57:56.8414490Z E           Max relative difference: 4.76021355
2025-02-24T15:57:56.8414610Z E            x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8414680Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8414800Z E            y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8414870Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8414870Z 
2025-02-24T15:57:56.8415040Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8415220Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-02-24T15:57:56.8415220Z 
2025-02-24T15:57:56.8415440Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d640>
2025-02-24T15:57:56.8415820Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8416080Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x150239f10>
2025-02-24T15:57:56.8416320Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data12]>>
2025-02-24T15:57:56.8416320Z 
2025-02-24T15:57:56.8416390Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8416440Z         self,
2025-02-24T15:57:56.8416510Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8416580Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8416630Z         request,
2025-02-24T15:57:56.8416680Z     ):
2025-02-24T15:57:56.8416770Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8416920Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8416990Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8417140Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8417210Z             plot_object = getattr(
2025-02-24T15:57:56.8417310Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8417360Z             )
2025-02-24T15:57:56.8417440Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8417570Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8417650Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8417730Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8417840Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8417890Z                 )
2025-02-24T15:57:56.8417890Z 
2025-02-24T15:57:56.8418010Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8418780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8418790Z 
2025-02-24T15:57:56.8421950Z args = (<function assert_allclose.<locals>.compare at 0x15b130900>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:57:56.8422050Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8422250Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8422250Z 
2025-02-24T15:57:56.8422300Z     @wraps(func)
2025-02-24T15:57:56.8422360Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8422420Z         with self._recreate_cm():
2025-02-24T15:57:56.8422490Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8422550Z E           AssertionError: 
2025-02-24T15:57:56.8422750Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8422810Z E           
2025-02-24T15:57:56.8422880Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.8422970Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:57:56.8423040Z E           Max relative difference: 178.93768705
2025-02-24T15:57:56.8423170Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8423240Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8423380Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8423450Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8423450Z 
2025-02-24T15:57:56.8426690Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8432450Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-02-24T15:57:56.8432460Z 
2025-02-24T15:57:56.8432700Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d730>
2025-02-24T15:57:56.8432960Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8433230Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1416a48c0>
2025-02-24T15:57:56.8434920Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data13]>>
2025-02-24T15:57:56.8434950Z 
2025-02-24T15:57:56.8443300Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8443510Z         self,
2025-02-24T15:57:56.8443610Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8443680Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8443730Z         request,
2025-02-24T15:57:56.8443780Z     ):
2025-02-24T15:57:56.8443870Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8444020Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8444110Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8444250Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8444320Z             plot_object = getattr(
2025-02-24T15:57:56.8444420Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8444470Z             )
2025-02-24T15:57:56.8444560Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8444690Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8444770Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8444840Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8447630Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8447820Z                 )
2025-02-24T15:57:56.8447830Z 
2025-02-24T15:57:56.8448180Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8448450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8448460Z 
2025-02-24T15:57:56.8449470Z args = (<function assert_allclose.<locals>.compare at 0x15b1328e0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:57:56.8459650Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8460000Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8460000Z 
2025-02-24T15:57:56.8460060Z     @wraps(func)
2025-02-24T15:57:56.8460120Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8460200Z         with self._recreate_cm():
2025-02-24T15:57:56.8460260Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8460330Z E           AssertionError: 
2025-02-24T15:57:56.8460420Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8460470Z E           
2025-02-24T15:57:56.8460690Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.8460760Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:57:56.8460840Z E           Max relative difference: 178.93768705
2025-02-24T15:57:56.8460960Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8461040Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8461160Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8461240Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8461240Z 
2025-02-24T15:57:56.8461410Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8461590Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-02-24T15:57:56.8461590Z 
2025-02-24T15:57:56.8461800Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d850>
2025-02-24T15:57:56.8462050Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8462320Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1416a5b80>
2025-02-24T15:57:56.8462550Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data14]>>
2025-02-24T15:57:56.8462550Z 
2025-02-24T15:57:56.8462630Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8462680Z         self,
2025-02-24T15:57:56.8462750Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8462820Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8462870Z         request,
2025-02-24T15:57:56.8462920Z     ):
2025-02-24T15:57:56.8463000Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8463150Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8463220Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8463370Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8463430Z             plot_object = getattr(
2025-02-24T15:57:56.8463530Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8463580Z             )
2025-02-24T15:57:56.8463670Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8463810Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8463890Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8463970Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8464080Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8464130Z                 )
2025-02-24T15:57:56.8464130Z 
2025-02-24T15:57:56.8464250Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8464340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8464350Z 
2025-02-24T15:57:56.8464720Z args = (<function assert_allclose.<locals>.compare at 0x31e0be7a0>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:57:56.8464810Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8465090Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8465090Z 
2025-02-24T15:57:56.8465150Z     @wraps(func)
2025-02-24T15:57:56.8465220Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8465290Z         with self._recreate_cm():
2025-02-24T15:57:56.8465360Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8465420Z E           AssertionError: 
2025-02-24T15:57:56.8465510Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8465560Z E           
2025-02-24T15:57:56.8465640Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.8465780Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:57:56.8465860Z E           Max relative difference: 178.93768705
2025-02-24T15:57:56.8465990Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8466060Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8466190Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8466250Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8466250Z 
2025-02-24T15:57:56.8466420Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8466600Z _ TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-02-24T15:57:56.8466610Z 
2025-02-24T15:57:56.8466820Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006d9a0>
2025-02-24T15:57:56.8467070Z plotter_calculate_plotting_data = <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>
2025-02-24T15:57:56.8467330Z calculate_plotting_data_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x300d45c70>
2025-02-24T15:57:56.8467560Z request = <FixtureRequest for <Function test_calculate_plotting_data[plotter_calculate_plotting_data15]>>
2025-02-24T15:57:56.8467560Z 
2025-02-24T15:57:56.8467640Z     def test_calculate_plotting_data(
2025-02-24T15:57:56.8467690Z         self,
2025-02-24T15:57:56.8467770Z         plotter_calculate_plotting_data,
2025-02-24T15:57:56.8467830Z         calculate_plotting_data_hdf,
2025-02-24T15:57:56.8467880Z         request,
2025-02-24T15:57:56.8467930Z     ):
2025-02-24T15:57:56.8468010Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8468160Z         expected = regression_data.sync_hdf_store(calculate_plotting_data_hdf)
2025-02-24T15:57:56.8468230Z         group = "plot_data_hdf/"
2025-02-24T15:57:56.8468370Z         for attribute_type, attribute_name in self.plotting_data_attributes:
2025-02-24T15:57:56.8468450Z             plot_object = getattr(
2025-02-24T15:57:56.8468540Z                 plotter_calculate_plotting_data, attribute_name
2025-02-24T15:57:56.8468590Z             )
2025-02-24T15:57:56.8468670Z             if attribute_type == "attributes_np":
2025-02-24T15:57:56.8468810Z                 if isinstance(plot_object, astropy.units.quantity.Quantity):
2025-02-24T15:57:56.8468890Z                     plot_object = plot_object.cgs.value
2025-02-24T15:57:56.8468960Z >               np.testing.assert_allclose(
2025-02-24T15:57:56.8469060Z                     plot_object, expected.get(group + attribute_name)
2025-02-24T15:57:56.8469110Z                 )
2025-02-24T15:57:56.8469110Z 
2025-02-24T15:57:56.8469230Z tardis/visualization/tools/tests/test_sdec_plot.py:227: 
2025-02-24T15:57:56.8469310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8469320Z 
2025-02-24T15:57:56.8469690Z args = (<function assert_allclose.<locals>.compare at 0x31dff8400>, array([4.30206343e+46, 2.01653360e+46, 3.60771209e+46, .....), array([4.21488660e+46, 1.95623482e+46, 4.03235790e+46, ...,
2025-02-24T15:57:56.8469770Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8470050Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8470050Z 
2025-02-24T15:57:56.8470110Z     @wraps(func)
2025-02-24T15:57:56.8470170Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8470240Z         with self._recreate_cm():
2025-02-24T15:57:56.8470300Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8470370Z E           AssertionError: 
2025-02-24T15:57:56.8470450Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8470500Z E           
2025-02-24T15:57:56.8470580Z E           Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.8470650Z E           Max absolute difference: 3.78533417e+47
2025-02-24T15:57:56.8470780Z E           Max relative difference: 178.93768705
2025-02-24T15:57:56.8470900Z E            x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8470970Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8471090Z E            y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.8471160Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8471160Z 
2025-02-24T15:57:56.8471320Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8471490Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] ______
2025-02-24T15:57:56.8471490Z 
2025-02-24T15:57:56.8471690Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006c8f0>
2025-02-24T15:57:56.8471950Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x1413317f0>
2025-02-24T15:57:56.8472030Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8472090Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8472170Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8472310Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:57:56.8472470Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8472670Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply0]>>
2025-02-24T15:57:56.8472670Z 
2025-02-24T15:57:56.8472730Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8472870Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8472920Z     ):
2025-02-24T15:57:56.8472990Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8473070Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8473210Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8473250Z     
2025-02-24T15:57:56.8473350Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8473420Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8473550Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8473630Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8473680Z             )
2025-02-24T15:57:56.8473730Z     
2025-02-24T15:57:56.8473810Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8473900Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8473970Z             if data.stackgroup:
2025-02-24T15:57:56.8474030Z                 assert (
2025-02-24T15:57:56.8474090Z                     data.stackgroup
2025-02-24T15:57:56.8474150Z                     == getattr(
2025-02-24T15:57:56.8474240Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8474310Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8474370Z                     ).decode()
2025-02-24T15:57:56.8474430Z                 )
2025-02-24T15:57:56.8474490Z             if data.name:
2025-02-24T15:57:56.8474540Z                 assert (
2025-02-24T15:57:56.8474590Z                     data.name
2025-02-24T15:57:56.8474650Z                     == getattr(
2025-02-24T15:57:56.8474850Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8474940Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8475000Z                     ).decode()
2025-02-24T15:57:56.8475050Z                 )
2025-02-24T15:57:56.8475120Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8475220Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8475280Z             )
2025-02-24T15:57:56.8475350Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8475450Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8475500Z             )
2025-02-24T15:57:56.8475500Z 
2025-02-24T15:57:56.8475730Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8489330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8489450Z 
2025-02-24T15:57:56.8495250Z args = (<function assert_allclose.<locals>.compare at 0x17191a8e0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:57:56.8509130Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8509760Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8509790Z 
2025-02-24T15:57:56.8509870Z     @wraps(func)
2025-02-24T15:57:56.8509930Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8509990Z         with self._recreate_cm():
2025-02-24T15:57:56.8510070Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8510140Z E           AssertionError: 
2025-02-24T15:57:56.8510230Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8510300Z E           
2025-02-24T15:57:56.8510390Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.8510470Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:57:56.8510560Z E           Max relative difference: 3.01858991
2025-02-24T15:57:56.8510700Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8510780Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8510900Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8510970Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8510980Z 
2025-02-24T15:57:56.8511160Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8511330Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] ______
2025-02-24T15:57:56.8511330Z 
2025-02-24T15:57:56.8511550Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006dd60>
2025-02-24T15:57:56.8511810Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x300365f10>
2025-02-24T15:57:56.8511890Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8511960Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8512050Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8512130Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:57:56.8512300Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8512510Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply1]>>
2025-02-24T15:57:56.8512510Z 
2025-02-24T15:57:56.8512580Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8512730Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8512780Z     ):
2025-02-24T15:57:56.8512860Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8512950Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8513090Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8513140Z     
2025-02-24T15:57:56.8513230Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8513840Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8513960Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8514050Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8514100Z             )
2025-02-24T15:57:56.8514150Z     
2025-02-24T15:57:56.8514230Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8514310Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8514370Z             if data.stackgroup:
2025-02-24T15:57:56.8514420Z                 assert (
2025-02-24T15:57:56.8514480Z                     data.stackgroup
2025-02-24T15:57:56.8514680Z                     == getattr(
2025-02-24T15:57:56.8514770Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8514860Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8514920Z                     ).decode()
2025-02-24T15:57:56.8514970Z                 )
2025-02-24T15:57:56.8515040Z             if data.name:
2025-02-24T15:57:56.8515090Z                 assert (
2025-02-24T15:57:56.8515160Z                     data.name
2025-02-24T15:57:56.8515210Z                     == getattr(
2025-02-24T15:57:56.8515310Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8515380Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8515440Z                     ).decode()
2025-02-24T15:57:56.8515480Z                 )
2025-02-24T15:57:56.8515550Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8515660Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8515710Z             )
2025-02-24T15:57:56.8515780Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8515880Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8515920Z             )
2025-02-24T15:57:56.8515920Z 
2025-02-24T15:57:56.8516040Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8516140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8516140Z 
2025-02-24T15:57:56.8516500Z args = (<function assert_allclose.<locals>.compare at 0x14124f600>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:57:56.8516580Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8516790Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8516790Z 
2025-02-24T15:57:56.8516840Z     @wraps(func)
2025-02-24T15:57:56.8516900Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8516960Z         with self._recreate_cm():
2025-02-24T15:57:56.8517030Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8517090Z E           AssertionError: 
2025-02-24T15:57:56.8517180Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8517230Z E           
2025-02-24T15:57:56.8517310Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.8517380Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:57:56.8517460Z E           Max relative difference: 3.01858991
2025-02-24T15:57:56.8517580Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8517640Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8517760Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8517820Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8517830Z 
2025-02-24T15:57:56.8518000Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8518150Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] ______
2025-02-24T15:57:56.8518160Z 
2025-02-24T15:57:56.8518370Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006e1e0>
2025-02-24T15:57:56.8518670Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x16385d280>
2025-02-24T15:57:56.8518750Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8518830Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8518910Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8518990Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:57:56.8519140Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8519340Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply2]>>
2025-02-24T15:57:56.8519390Z 
2025-02-24T15:57:56.8519450Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8519590Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8519640Z     ):
2025-02-24T15:57:56.8519710Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8519800Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8524460Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8524530Z     
2025-02-24T15:57:56.8524630Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8524700Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8524810Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8524910Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8524960Z             )
2025-02-24T15:57:56.8525010Z     
2025-02-24T15:57:56.8525090Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8525170Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8525240Z             if data.stackgroup:
2025-02-24T15:57:56.8525300Z                 assert (
2025-02-24T15:57:56.8525370Z                     data.stackgroup
2025-02-24T15:57:56.8525420Z                     == getattr(
2025-02-24T15:57:56.8525510Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8525590Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8525650Z                     ).decode()
2025-02-24T15:57:56.8525690Z                 )
2025-02-24T15:57:56.8525750Z             if data.name:
2025-02-24T15:57:56.8525800Z                 assert (
2025-02-24T15:57:56.8525860Z                     data.name
2025-02-24T15:57:56.8525910Z                     == getattr(
2025-02-24T15:57:56.8525990Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8526060Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8526120Z                     ).decode()
2025-02-24T15:57:56.8526170Z                 )
2025-02-24T15:57:56.8526240Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8526340Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8526390Z             )
2025-02-24T15:57:56.8526460Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8526560Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8526610Z             )
2025-02-24T15:57:56.8526610Z 
2025-02-24T15:57:56.8526730Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8526820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8526830Z 
2025-02-24T15:57:56.8527200Z args = (<function assert_allclose.<locals>.compare at 0x1718cb1a0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:57:56.8527280Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8527490Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8527490Z 
2025-02-24T15:57:56.8527540Z     @wraps(func)
2025-02-24T15:57:56.8527620Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8527810Z         with self._recreate_cm():
2025-02-24T15:57:56.8527870Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8527940Z E           AssertionError: 
2025-02-24T15:57:56.8528030Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8528080Z E           
2025-02-24T15:57:56.8528160Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.8528230Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:57:56.8528310Z E           Max relative difference: 3.01858991
2025-02-24T15:57:56.8528440Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8528500Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8528670Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8528740Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8528750Z 
2025-02-24T15:57:56.8528910Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8529080Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] ______
2025-02-24T15:57:56.8529080Z 
2025-02-24T15:57:56.8529290Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006e2a0>
2025-02-24T15:57:56.8529540Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x30319e7b0>
2025-02-24T15:57:56.8529610Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8529680Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8529760Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8529850Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:57:56.8530010Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8530210Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply3]>>
2025-02-24T15:57:56.8530210Z 
2025-02-24T15:57:56.8530280Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8530410Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8530460Z     ):
2025-02-24T15:57:56.8530530Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8530620Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8530760Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8530810Z     
2025-02-24T15:57:56.8530900Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8530970Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8531090Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8531180Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8531230Z             )
2025-02-24T15:57:56.8531280Z     
2025-02-24T15:57:56.8531360Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8531440Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8531510Z             if data.stackgroup:
2025-02-24T15:57:56.8531560Z                 assert (
2025-02-24T15:57:56.8531630Z                     data.stackgroup
2025-02-24T15:57:56.8531680Z                     == getattr(
2025-02-24T15:57:56.8531770Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8531850Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8531900Z                     ).decode()
2025-02-24T15:57:56.8531950Z                 )
2025-02-24T15:57:56.8532000Z             if data.name:
2025-02-24T15:57:56.8532050Z                 assert (
2025-02-24T15:57:56.8532110Z                     data.name
2025-02-24T15:57:56.8532170Z                     == getattr(
2025-02-24T15:57:56.8532250Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8532320Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8532380Z                     ).decode()
2025-02-24T15:57:56.8532420Z                 )
2025-02-24T15:57:56.8532610Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8532720Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8532770Z             )
2025-02-24T15:57:56.8532840Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8532940Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8532990Z             )
2025-02-24T15:57:56.8532990Z 
2025-02-24T15:57:56.8533110Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8533200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8533300Z 
2025-02-24T15:57:56.8533680Z args = (<function assert_allclose.<locals>.compare at 0x14f7680e0>, array([7.65507159e-15, 3.89102019e-15, 1.58936459e-14, .....), array([7.64220430e-15, 3.88447983e-15, 1.58669305e-14, ...,
2025-02-24T15:57:56.8533770Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8533980Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8533980Z 
2025-02-24T15:57:56.8534040Z     @wraps(func)
2025-02-24T15:57:56.8534100Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8534160Z         with self._recreate_cm():
2025-02-24T15:57:56.8534230Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8534300Z E           AssertionError: 
2025-02-24T15:57:56.8534380Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8534440Z E           
2025-02-24T15:57:56.8534510Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.8534600Z E           Max absolute difference: 2.08771842e-13
2025-02-24T15:57:56.8534680Z E           Max relative difference: 3.01858991
2025-02-24T15:57:56.8534810Z E            x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8534880Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8535000Z E            y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8535070Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8535070Z 
2025-02-24T15:57:56.8535240Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8535400Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] ______
2025-02-24T15:57:56.8535410Z 
2025-02-24T15:57:56.8535610Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006c710>
2025-02-24T15:57:56.8535860Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x162aa6480>
2025-02-24T15:57:56.8535940Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8536000Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8536080Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8536160Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:57:56.8536340Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8536540Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply4]>>
2025-02-24T15:57:56.8536540Z 
2025-02-24T15:57:56.8536610Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8536750Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8536790Z     ):
2025-02-24T15:57:56.8536880Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8536960Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8537100Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8537150Z     
2025-02-24T15:57:56.8537240Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8537310Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8537430Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8537570Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8537630Z             )
2025-02-24T15:57:56.8537680Z     
2025-02-24T15:57:56.8537750Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8537840Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8537900Z             if data.stackgroup:
2025-02-24T15:57:56.8537960Z                 assert (
2025-02-24T15:57:56.8538020Z                     data.stackgroup
2025-02-24T15:57:56.8538080Z                     == getattr(
2025-02-24T15:57:56.8538170Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8538250Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8538350Z                     ).decode()
2025-02-24T15:57:56.8538400Z                 )
2025-02-24T15:57:56.8538450Z             if data.name:
2025-02-24T15:57:56.8538510Z                 assert (
2025-02-24T15:57:56.8538560Z                     data.name
2025-02-24T15:57:56.8538610Z                     == getattr(
2025-02-24T15:57:56.8538710Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8538770Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8538830Z                     ).decode()
2025-02-24T15:57:56.8538870Z                 )
2025-02-24T15:57:56.8538940Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8539040Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8539090Z             )
2025-02-24T15:57:56.8539160Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8539260Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8539310Z             )
2025-02-24T15:57:56.8539310Z 
2025-02-24T15:57:56.8539440Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8539540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8539540Z 
2025-02-24T15:57:56.8539910Z args = (<function assert_allclose.<locals>.compare at 0x15add0c20>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:57:56.8539990Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8540180Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8540180Z 
2025-02-24T15:57:56.8540240Z     @wraps(func)
2025-02-24T15:57:56.8540300Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8540360Z         with self._recreate_cm():
2025-02-24T15:57:56.8540430Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8540490Z E           AssertionError: 
2025-02-24T15:57:56.8540570Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8540610Z E           
2025-02-24T15:57:56.8540690Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.8540760Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:57:56.8540840Z E           Max relative difference: 15766.1580412
2025-02-24T15:57:56.8540960Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8541030Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8541150Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8541210Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8541210Z 
2025-02-24T15:57:56.8541380Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8541700Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] ______
2025-02-24T15:57:56.8541710Z 
2025-02-24T15:57:56.8541930Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006c9e0>
2025-02-24T15:57:56.8542180Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15ac41b20>
2025-02-24T15:57:56.8542250Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8542400Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8542490Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8542580Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:57:56.8542740Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8542940Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply5]>>
2025-02-24T15:57:56.8542950Z 
2025-02-24T15:57:56.8543010Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8543150Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8543240Z     ):
2025-02-24T15:57:56.8543320Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8543400Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8543550Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8543590Z     
2025-02-24T15:57:56.8543680Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8543750Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8543870Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8543950Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8543990Z             )
2025-02-24T15:57:56.8544040Z     
2025-02-24T15:57:56.8544120Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8544200Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8544260Z             if data.stackgroup:
2025-02-24T15:57:56.8544310Z                 assert (
2025-02-24T15:57:56.8544380Z                     data.stackgroup
2025-02-24T15:57:56.8544440Z                     == getattr(
2025-02-24T15:57:56.8544520Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8544600Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8544650Z                     ).decode()
2025-02-24T15:57:56.8544700Z                 )
2025-02-24T15:57:56.8544770Z             if data.name:
2025-02-24T15:57:56.8544820Z                 assert (
2025-02-24T15:57:56.8544880Z                     data.name
2025-02-24T15:57:56.8544930Z                     == getattr(
2025-02-24T15:57:56.8545010Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8545080Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8545140Z                     ).decode()
2025-02-24T15:57:56.8545190Z                 )
2025-02-24T15:57:56.8545250Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8545360Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8545400Z             )
2025-02-24T15:57:56.8545480Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8545580Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8545630Z             )
2025-02-24T15:57:56.8545630Z 
2025-02-24T15:57:56.8545740Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8545840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8545840Z 
2025-02-24T15:57:56.8546200Z args = (<function assert_allclose.<locals>.compare at 0x31a2a4540>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:57:56.8546290Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8546490Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8546490Z 
2025-02-24T15:57:56.8546540Z     @wraps(func)
2025-02-24T15:57:56.8546600Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8546670Z         with self._recreate_cm():
2025-02-24T15:57:56.8546740Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8546800Z E           AssertionError: 
2025-02-24T15:57:56.8546940Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8547000Z E           
2025-02-24T15:57:56.8547080Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.8547160Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:57:56.8547230Z E           Max relative difference: 15766.1580412
2025-02-24T15:57:56.8547360Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8547420Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8547550Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8547660Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8547660Z 
2025-02-24T15:57:56.8547830Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8547990Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] ______
2025-02-24T15:57:56.8548000Z 
2025-02-24T15:57:56.8548210Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006e420>
2025-02-24T15:57:56.8548470Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x16385c350>
2025-02-24T15:57:56.8548530Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8548610Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8548690Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8548770Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:57:56.8548920Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8549120Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply6]>>
2025-02-24T15:57:56.8549120Z 
2025-02-24T15:57:56.8549190Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8549320Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8549370Z     ):
2025-02-24T15:57:56.8549440Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8549520Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8549660Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8549710Z     
2025-02-24T15:57:56.8549790Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8549860Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8549970Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8550050Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8550100Z             )
2025-02-24T15:57:56.8550150Z     
2025-02-24T15:57:56.8550230Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8550300Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8550370Z             if data.stackgroup:
2025-02-24T15:57:56.8550420Z                 assert (
2025-02-24T15:57:56.8550480Z                     data.stackgroup
2025-02-24T15:57:56.8550540Z                     == getattr(
2025-02-24T15:57:56.8550630Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8550700Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8550760Z                     ).decode()
2025-02-24T15:57:56.8550800Z                 )
2025-02-24T15:57:56.8550860Z             if data.name:
2025-02-24T15:57:56.8550910Z                 assert (
2025-02-24T15:57:56.8550960Z                     data.name
2025-02-24T15:57:56.8551020Z                     == getattr(
2025-02-24T15:57:56.8551100Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8551180Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8551230Z                     ).decode()
2025-02-24T15:57:56.8551280Z                 )
2025-02-24T15:57:56.8551350Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8551450Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8551590Z             )
2025-02-24T15:57:56.8551670Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8551770Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8551820Z             )
2025-02-24T15:57:56.8551820Z 
2025-02-24T15:57:56.8551930Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8552020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8552020Z 
2025-02-24T15:57:56.8552390Z args = (<function assert_allclose.<locals>.compare at 0x1718cade0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:57:56.8552550Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8552750Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8552760Z 
2025-02-24T15:57:56.8552810Z     @wraps(func)
2025-02-24T15:57:56.8552870Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8552940Z         with self._recreate_cm():
2025-02-24T15:57:56.8553000Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8553060Z E           AssertionError: 
2025-02-24T15:57:56.8553150Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8553200Z E           
2025-02-24T15:57:56.8553270Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.8553350Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:57:56.8553420Z E           Max relative difference: 15766.1580412
2025-02-24T15:57:56.8553550Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8553610Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8553740Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8553800Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8553800Z 
2025-02-24T15:57:56.8553960Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8554130Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] ______
2025-02-24T15:57:56.8554130Z 
2025-02-24T15:57:56.8554340Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006e4e0>
2025-02-24T15:57:56.8554590Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x162aa4c50>
2025-02-24T15:57:56.8554660Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8554730Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8554820Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8554900Z               '...-1}\\,\\mathring{A}^{-1}\\,cm^{-2}}]$'}}}
2025-02-24T15:57:56.8555060Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8555260Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply7]>>
2025-02-24T15:57:56.8555260Z 
2025-02-24T15:57:56.8555330Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8555460Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8555510Z     ):
2025-02-24T15:57:56.8555580Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8555660Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8555800Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8555850Z     
2025-02-24T15:57:56.8555930Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8556000Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8556130Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8556210Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8556270Z             )
2025-02-24T15:57:56.8556310Z     
2025-02-24T15:57:56.8556390Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8556520Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8556590Z             if data.stackgroup:
2025-02-24T15:57:56.8556650Z                 assert (
2025-02-24T15:57:56.8556710Z                     data.stackgroup
2025-02-24T15:57:56.8556770Z                     == getattr(
2025-02-24T15:57:56.8556850Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8556930Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8556980Z                     ).decode()
2025-02-24T15:57:56.8557030Z                 )
2025-02-24T15:57:56.8557080Z             if data.name:
2025-02-24T15:57:56.8557190Z                 assert (
2025-02-24T15:57:56.8557250Z                     data.name
2025-02-24T15:57:56.8557310Z                     == getattr(
2025-02-24T15:57:56.8557390Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8557450Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8557510Z                     ).decode()
2025-02-24T15:57:56.8557560Z                 )
2025-02-24T15:57:56.8557640Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8557740Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8557790Z             )
2025-02-24T15:57:56.8557850Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8557950Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8558000Z             )
2025-02-24T15:57:56.8558000Z 
2025-02-24T15:57:56.8558120Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8558210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8558210Z 
2025-02-24T15:57:56.8558580Z args = (<function assert_allclose.<locals>.compare at 0x31a4e4cc0>, array([5.81620934e-15, 7.68544667e-15, 1.64359739e-14, .....), array([8.00550570e-15, 5.82912819e-15, 2.43262670e-14, ...,
2025-02-24T15:57:56.8558660Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8558850Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8558860Z 
2025-02-24T15:57:56.8558910Z     @wraps(func)
2025-02-24T15:57:56.8558970Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8559030Z         with self._recreate_cm():
2025-02-24T15:57:56.8559100Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8559160Z E           AssertionError: 
2025-02-24T15:57:56.8559240Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8559290Z E           
2025-02-24T15:57:56.8559370Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.8559450Z E           Max absolute difference: 3.02728422e-13
2025-02-24T15:57:56.8559530Z E           Max relative difference: 15766.1580412
2025-02-24T15:57:56.8559650Z E            x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8559720Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8559840Z E            y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.8559900Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8559910Z 
2025-02-24T15:57:56.8560070Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8560370Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] ______
2025-02-24T15:57:56.8560390Z 
2025-02-24T15:57:56.8560610Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006e750>
2025-02-24T15:57:56.8560870Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31c966720>
2025-02-24T15:57:56.8560940Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8561010Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8561090Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8561410Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:57:56.8561600Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8561790Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply8]>>
2025-02-24T15:57:56.8561800Z 
2025-02-24T15:57:56.8561870Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8562000Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8562040Z     ):
2025-02-24T15:57:56.8562120Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8562200Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8562440Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8562480Z     
2025-02-24T15:57:56.8562570Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8562640Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8562760Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8562840Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8562900Z             )
2025-02-24T15:57:56.8562950Z     
2025-02-24T15:57:56.8563020Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8563100Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8563160Z             if data.stackgroup:
2025-02-24T15:57:56.8563220Z                 assert (
2025-02-24T15:57:56.8563280Z                     data.stackgroup
2025-02-24T15:57:56.8563330Z                     == getattr(
2025-02-24T15:57:56.8563410Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8563490Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8563550Z                     ).decode()
2025-02-24T15:57:56.8563600Z                 )
2025-02-24T15:57:56.8563650Z             if data.name:
2025-02-24T15:57:56.8563700Z                 assert (
2025-02-24T15:57:56.8563760Z                     data.name
2025-02-24T15:57:56.8563820Z                     == getattr(
2025-02-24T15:57:56.8563900Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8563960Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8564020Z                     ).decode()
2025-02-24T15:57:56.8564070Z                 )
2025-02-24T15:57:56.8564140Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8564230Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8564280Z             )
2025-02-24T15:57:56.8564350Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8564450Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8564490Z             )
2025-02-24T15:57:56.8564500Z 
2025-02-24T15:57:56.8564610Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8564710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8564710Z 
2025-02-24T15:57:56.8565070Z args = (<function assert_allclose.<locals>.compare at 0x15ae02980>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:57:56.8565150Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8565350Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8565350Z 
2025-02-24T15:57:56.8565400Z     @wraps(func)
2025-02-24T15:57:56.8565470Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8565530Z         with self._recreate_cm():
2025-02-24T15:57:56.8565590Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8565650Z E           AssertionError: 
2025-02-24T15:57:56.8565740Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8565780Z E           
2025-02-24T15:57:56.8565860Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.8566000Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:57:56.8566090Z E           Max relative difference: 3.01858991
2025-02-24T15:57:56.8566220Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8566290Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8566410Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8566480Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8566480Z 
2025-02-24T15:57:56.8566640Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8566850Z ______ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] ______
2025-02-24T15:57:56.8566850Z 
2025-02-24T15:57:56.8567070Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006e810>
2025-02-24T15:57:56.8567330Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x30b93bec0>
2025-02-24T15:57:56.8567400Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8567460Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8567550Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8567640Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:57:56.8567800Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8568000Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply9]>>
2025-02-24T15:57:56.8568000Z 
2025-02-24T15:57:56.8568060Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8568200Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8568250Z     ):
2025-02-24T15:57:56.8568330Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8568410Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8568540Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8568590Z     
2025-02-24T15:57:56.8568680Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8568750Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8568860Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8568940Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8568990Z             )
2025-02-24T15:57:56.8569040Z     
2025-02-24T15:57:56.8569110Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8569200Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8569260Z             if data.stackgroup:
2025-02-24T15:57:56.8569320Z                 assert (
2025-02-24T15:57:56.8569390Z                     data.stackgroup
2025-02-24T15:57:56.8569440Z                     == getattr(
2025-02-24T15:57:56.8569530Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8569600Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8569660Z                     ).decode()
2025-02-24T15:57:56.8569710Z                 )
2025-02-24T15:57:56.8569770Z             if data.name:
2025-02-24T15:57:56.8569820Z                 assert (
2025-02-24T15:57:56.8569870Z                     data.name
2025-02-24T15:57:56.8569920Z                     == getattr(
2025-02-24T15:57:56.8570000Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8570070Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8570120Z                     ).decode()
2025-02-24T15:57:56.8570170Z                 )
2025-02-24T15:57:56.8570240Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8570340Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8570380Z             )
2025-02-24T15:57:56.8570450Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8570550Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8570700Z             )
2025-02-24T15:57:56.8570710Z 
2025-02-24T15:57:56.8575150Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8575280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8575290Z 
2025-02-24T15:57:56.8575650Z args = (<function assert_allclose.<locals>.compare at 0x171a90040>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:57:56.8575720Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8575920Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8576200Z 
2025-02-24T15:57:56.8576250Z     @wraps(func)
2025-02-24T15:57:56.8576310Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8576370Z         with self._recreate_cm():
2025-02-24T15:57:56.8576430Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8576490Z E           AssertionError: 
2025-02-24T15:57:56.8576580Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8581430Z E           
2025-02-24T15:57:56.8582940Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.8583220Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:57:56.8583420Z E           Max relative difference: 3.01858991
2025-02-24T15:57:56.8583770Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8583940Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8584260Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8584460Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8584470Z 
2025-02-24T15:57:56.8584920Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8585390Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] ______
2025-02-24T15:57:56.8585400Z 
2025-02-24T15:57:56.8585950Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006e8d0>
2025-02-24T15:57:56.8586640Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x162aa5730>
2025-02-24T15:57:56.8586830Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8587030Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8587250Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8587470Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:57:56.8587900Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8588440Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply10]>>
2025-02-24T15:57:56.8588440Z 
2025-02-24T15:57:56.8588630Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8589010Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8589160Z     ):
2025-02-24T15:57:56.8589350Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8589580Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8589950Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8590100Z     
2025-02-24T15:57:56.8590320Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8590530Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8590830Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8591070Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8591230Z             )
2025-02-24T15:57:56.8591370Z     
2025-02-24T15:57:56.8591590Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8591800Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8591980Z             if data.stackgroup:
2025-02-24T15:57:56.8593080Z                 assert (
2025-02-24T15:57:56.8593280Z                     data.stackgroup
2025-02-24T15:57:56.8593430Z                     == getattr(
2025-02-24T15:57:56.8593650Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8593850Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8594010Z                     ).decode()
2025-02-24T15:57:56.8594160Z                 )
2025-02-24T15:57:56.8594320Z             if data.name:
2025-02-24T15:57:56.8594480Z                 assert (
2025-02-24T15:57:56.8594640Z                     data.name
2025-02-24T15:57:56.8594800Z                     == getattr(
2025-02-24T15:57:56.8595270Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8595470Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8595630Z                     ).decode()
2025-02-24T15:57:56.8595790Z                 )
2025-02-24T15:57:56.8595970Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8596250Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8596390Z             )
2025-02-24T15:57:56.8596590Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8596860Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8597000Z             )
2025-02-24T15:57:56.8597010Z 
2025-02-24T15:57:56.8598780Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8599030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8599040Z 
2025-02-24T15:57:56.8600110Z args = (<function assert_allclose.<locals>.compare at 0x31e0bf240>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:57:56.8602420Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8603340Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8603360Z 
2025-02-24T15:57:56.8603530Z     @wraps(func)
2025-02-24T15:57:56.8604450Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8606010Z         with self._recreate_cm():
2025-02-24T15:57:56.8606650Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8615770Z E           AssertionError: 
2025-02-24T15:57:56.8624190Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8624380Z E           
2025-02-24T15:57:56.8624590Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.8624810Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:57:56.8625010Z E           Max relative difference: 3.01858991
2025-02-24T15:57:56.8625390Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8625570Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8625890Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8626090Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8626100Z 
2025-02-24T15:57:56.8626540Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8630510Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] ______
2025-02-24T15:57:56.8631090Z 
2025-02-24T15:57:56.8632660Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006e990>
2025-02-24T15:57:56.8634840Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15c2c5460>
2025-02-24T15:57:56.8634970Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8635050Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8635150Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8635230Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:57:56.8635400Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8636090Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply11]>>
2025-02-24T15:57:56.8636090Z 
2025-02-24T15:57:56.8636170Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8636310Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8636360Z     ):
2025-02-24T15:57:56.8636430Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8636510Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8636650Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8636700Z     
2025-02-24T15:57:56.8636790Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8636980Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8637110Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8637190Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8637250Z             )
2025-02-24T15:57:56.8637300Z     
2025-02-24T15:57:56.8637380Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8637460Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8637550Z             if data.stackgroup:
2025-02-24T15:57:56.8637600Z                 assert (
2025-02-24T15:57:56.8637660Z                     data.stackgroup
2025-02-24T15:57:56.8637720Z                     == getattr(
2025-02-24T15:57:56.8637800Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8637880Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8637930Z                     ).decode()
2025-02-24T15:57:56.8637990Z                 )
2025-02-24T15:57:56.8638040Z             if data.name:
2025-02-24T15:57:56.8638090Z                 assert (
2025-02-24T15:57:56.8638150Z                     data.name
2025-02-24T15:57:56.8638200Z                     == getattr(
2025-02-24T15:57:56.8638280Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8638360Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8638420Z                     ).decode()
2025-02-24T15:57:56.8638470Z                 )
2025-02-24T15:57:56.8638540Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8638640Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8638690Z             )
2025-02-24T15:57:56.8638760Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8638860Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8638910Z             )
2025-02-24T15:57:56.8638910Z 
2025-02-24T15:57:56.8639030Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8639120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8639130Z 
2025-02-24T15:57:56.8639500Z args = (<function assert_allclose.<locals>.compare at 0x15ae002c0>, array([9.15925628e+37, 4.65558691e+37, 1.90166708e+38, .....), array([9.14386063e+37, 4.64776140e+37, 1.89847059e+38, ...,
2025-02-24T15:57:56.8639570Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8639770Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8639770Z 
2025-02-24T15:57:56.8639820Z     @wraps(func)
2025-02-24T15:57:56.8639880Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8639940Z         with self._recreate_cm():
2025-02-24T15:57:56.8640000Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8640060Z E           AssertionError: 
2025-02-24T15:57:56.8640150Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8640200Z E           
2025-02-24T15:57:56.8640270Z E           Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.8640350Z E           Max absolute difference: 2.49794504e+39
2025-02-24T15:57:56.8640420Z E           Max relative difference: 3.01858991
2025-02-24T15:57:56.8640640Z E            x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8640720Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8640830Z E            y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8640900Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8640900Z 
2025-02-24T15:57:56.8641060Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8641220Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] ______
2025-02-24T15:57:56.8641230Z 
2025-02-24T15:57:56.8641440Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006ea50>
2025-02-24T15:57:56.8641740Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15c260680>
2025-02-24T15:57:56.8641820Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8641880Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8641960Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8642050Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:57:56.8642210Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8642410Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply12]>>
2025-02-24T15:57:56.8642410Z 
2025-02-24T15:57:56.8642470Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8642610Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8642650Z     ):
2025-02-24T15:57:56.8642730Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8642810Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8642950Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8643000Z     
2025-02-24T15:57:56.8643080Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8643150Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8643270Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8643350Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8643400Z             )
2025-02-24T15:57:56.8643440Z     
2025-02-24T15:57:56.8643510Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8643600Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8643660Z             if data.stackgroup:
2025-02-24T15:57:56.8643710Z                 assert (
2025-02-24T15:57:56.8643770Z                     data.stackgroup
2025-02-24T15:57:56.8643820Z                     == getattr(
2025-02-24T15:57:56.8643900Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8643980Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8644040Z                     ).decode()
2025-02-24T15:57:56.8644080Z                 )
2025-02-24T15:57:56.8644140Z             if data.name:
2025-02-24T15:57:56.8644190Z                 assert (
2025-02-24T15:57:56.8644250Z                     data.name
2025-02-24T15:57:56.8644300Z                     == getattr(
2025-02-24T15:57:56.8644380Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8644450Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8644500Z                     ).decode()
2025-02-24T15:57:56.8644540Z                 )
2025-02-24T15:57:56.8644610Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8644710Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8644760Z             )
2025-02-24T15:57:56.8644830Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8644930Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8644980Z             )
2025-02-24T15:57:56.8644980Z 
2025-02-24T15:57:56.8645090Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8645510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8645520Z 
2025-02-24T15:57:56.8645900Z args = (<function assert_allclose.<locals>.compare at 0x15ae00900>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:57:56.8645980Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8646180Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8646180Z 
2025-02-24T15:57:56.8646230Z     @wraps(func)
2025-02-24T15:57:56.8646400Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8646460Z         with self._recreate_cm():
2025-02-24T15:57:56.8646530Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8646590Z E           AssertionError: 
2025-02-24T15:57:56.8646680Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8646720Z E           
2025-02-24T15:57:56.8647600Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.8647720Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:57:56.8647810Z E           Max relative difference: 15766.15804934
2025-02-24T15:57:56.8647940Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8648010Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8648130Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8648200Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8648200Z 
2025-02-24T15:57:56.8648380Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8648540Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] ______
2025-02-24T15:57:56.8648550Z 
2025-02-24T15:57:56.8648760Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006eb10>
2025-02-24T15:57:56.8649020Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x17b2a6180>
2025-02-24T15:57:56.8649090Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8649160Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8649240Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8649330Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:57:56.8649480Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8649680Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply13]>>
2025-02-24T15:57:56.8649690Z 
2025-02-24T15:57:56.8649750Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8649890Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8649940Z     ):
2025-02-24T15:57:56.8650010Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8650100Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8650230Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8650280Z     
2025-02-24T15:57:56.8650370Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8650440Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8650550Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8650650Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8650700Z             )
2025-02-24T15:57:56.8650740Z     
2025-02-24T15:57:56.8650820Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8650900Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8650970Z             if data.stackgroup:
2025-02-24T15:57:56.8651020Z                 assert (
2025-02-24T15:57:56.8651090Z                     data.stackgroup
2025-02-24T15:57:56.8651140Z                     == getattr(
2025-02-24T15:57:56.8651560Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8651650Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8651710Z                     ).decode()
2025-02-24T15:57:56.8651760Z                 )
2025-02-24T15:57:56.8651810Z             if data.name:
2025-02-24T15:57:56.8651860Z                 assert (
2025-02-24T15:57:56.8651920Z                     data.name
2025-02-24T15:57:56.8651970Z                     == getattr(
2025-02-24T15:57:56.8652050Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8652120Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8652250Z                     ).decode()
2025-02-24T15:57:56.8652300Z                 )
2025-02-24T15:57:56.8652370Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8652480Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8652520Z             )
2025-02-24T15:57:56.8652590Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8652690Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8652740Z             )
2025-02-24T15:57:56.8652740Z 
2025-02-24T15:57:56.8652860Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8652950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8652960Z 
2025-02-24T15:57:56.8653320Z args = (<function assert_allclose.<locals>.compare at 0x31dff8220>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:57:56.8653400Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8653610Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8653610Z 
2025-02-24T15:57:56.8653660Z     @wraps(func)
2025-02-24T15:57:56.8653720Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8653790Z         with self._recreate_cm():
2025-02-24T15:57:56.8653850Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8653920Z E           AssertionError: 
2025-02-24T15:57:56.8654000Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8654050Z E           
2025-02-24T15:57:56.8654120Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.8654200Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:57:56.8654270Z E           Max relative difference: 15766.15804934
2025-02-24T15:57:56.8654400Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8654460Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8654590Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8654650Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8654650Z 
2025-02-24T15:57:56.8654820Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8655000Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] ______
2025-02-24T15:57:56.8655000Z 
2025-02-24T15:57:56.8655230Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006ebd0>
2025-02-24T15:57:56.8655500Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x31a08a3f0>
2025-02-24T15:57:56.8655570Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8655640Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8655720Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8655810Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:57:56.8655970Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8656170Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply14]>>
2025-02-24T15:57:56.8656170Z 
2025-02-24T15:57:56.8656340Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8656480Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8656530Z     ):
2025-02-24T15:57:56.8656600Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8656680Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8656810Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8656870Z     
2025-02-24T15:57:56.8656950Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8657020Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8657140Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8657290Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8657340Z             )
2025-02-24T15:57:56.8657390Z     
2025-02-24T15:57:56.8657470Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8657550Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8657620Z             if data.stackgroup:
2025-02-24T15:57:56.8657670Z                 assert (
2025-02-24T15:57:56.8657730Z                     data.stackgroup
2025-02-24T15:57:56.8657790Z                     == getattr(
2025-02-24T15:57:56.8657870Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8657940Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8658000Z                     ).decode()
2025-02-24T15:57:56.8658050Z                 )
2025-02-24T15:57:56.8658100Z             if data.name:
2025-02-24T15:57:56.8658150Z                 assert (
2025-02-24T15:57:56.8658200Z                     data.name
2025-02-24T15:57:56.8658260Z                     == getattr(
2025-02-24T15:57:56.8658340Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8658410Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8658470Z                     ).decode()
2025-02-24T15:57:56.8658510Z                 )
2025-02-24T15:57:56.8658580Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8658680Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8658740Z             )
2025-02-24T15:57:56.8658800Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8658900Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8658940Z             )
2025-02-24T15:57:56.8658950Z 
2025-02-24T15:57:56.8659060Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8659160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8659160Z 
2025-02-24T15:57:56.8659530Z args = (<function assert_allclose.<locals>.compare at 0x171a90ea0>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:57:56.8659600Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8659810Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8659820Z 
2025-02-24T15:57:56.8659870Z     @wraps(func)
2025-02-24T15:57:56.8659930Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8659990Z         with self._recreate_cm():
2025-02-24T15:57:56.8660050Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8660110Z E           AssertionError: 
2025-02-24T15:57:56.8660200Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8660240Z E           
2025-02-24T15:57:56.8660320Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.8660390Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:57:56.8660470Z E           Max relative difference: 15766.15804934
2025-02-24T15:57:56.8660600Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8660660Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8660870Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8660940Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8660950Z 
2025-02-24T15:57:56.8661110Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8661280Z _____ TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] ______
2025-02-24T15:57:56.8661280Z 
2025-02-24T15:57:56.8661490Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x14006ec90>
2025-02-24T15:57:56.8661730Z generate_plot_plotly_hdf = <tardis.visualization.tools.tests.test_sdec_plot.PlotDataHDF object at 0x15c0dcc20>
2025-02-24T15:57:56.8661880Z plotter_generate_plot_ply = (Figure({
2025-02-24T15:57:56.8661940Z     'data': [{'fillcolor': '#4C4C4C',
2025-02-24T15:57:56.8662020Z               'hovertemplate': '(%{x:.2f}, %{y:.3g})',
2025-02-24T15:57:56.8662100Z               '...{erg\\,s^{-1}\\,\\mathring{A}^{-1}}]$'}}}
2025-02-24T15:57:56.8662260Z }), <tardis.visualization.tools.sdec_plot.SDECPlotter object at 0x17ffb1e20>)
2025-02-24T15:57:56.8662460Z request = <FixtureRequest for <Function test_generate_plot_mpl[plotter_generate_plot_ply15]>>
2025-02-24T15:57:56.8662460Z 
2025-02-24T15:57:56.8662530Z     def test_generate_plot_mpl(
2025-02-24T15:57:56.8662660Z         self, generate_plot_plotly_hdf, plotter_generate_plot_ply, request
2025-02-24T15:57:56.8662710Z     ):
2025-02-24T15:57:56.8662780Z         fig, _ = plotter_generate_plot_ply
2025-02-24T15:57:56.8662860Z         regression_data = RegressionData(request)
2025-02-24T15:57:56.8663000Z         expected = regression_data.sync_hdf_store(generate_plot_plotly_hdf)
2025-02-24T15:57:56.8663040Z     
2025-02-24T15:57:56.8663130Z         for item in ["_species_name", "_color_list"]:
2025-02-24T15:57:56.8663200Z             np.testing.assert_array_equal(
2025-02-24T15:57:56.8663320Z                 expected.get("plot_data_hdf/" + item).values.flatten(),
2025-02-24T15:57:56.8663520Z                 getattr(generate_plot_plotly_hdf, item),
2025-02-24T15:57:56.8663570Z             )
2025-02-24T15:57:56.8663620Z     
2025-02-24T15:57:56.8663700Z         for index, data in enumerate(fig.data):
2025-02-24T15:57:56.8663790Z             group = "plot_data_hdf/" + "_" + str(index)
2025-02-24T15:57:56.8663850Z             if data.stackgroup:
2025-02-24T15:57:56.8663900Z                 assert (
2025-02-24T15:57:56.8663960Z                     data.stackgroup
2025-02-24T15:57:56.8664010Z                     == getattr(
2025-02-24T15:57:56.8664090Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8664170Z                         "_" + str(index) + "stackgroup",
2025-02-24T15:57:56.8664230Z                     ).decode()
2025-02-24T15:57:56.8664280Z                 )
2025-02-24T15:57:56.8664340Z             if data.name:
2025-02-24T15:57:56.8664390Z                 assert (
2025-02-24T15:57:56.8664440Z                     data.name
2025-02-24T15:57:56.8664500Z                     == getattr(
2025-02-24T15:57:56.8664580Z                         expected["/plot_data_hdf/scalars"],
2025-02-24T15:57:56.8664650Z                         "_" + str(index) + "name",
2025-02-24T15:57:56.8664710Z                     ).decode()
2025-02-24T15:57:56.8664750Z                 )
2025-02-24T15:57:56.8664820Z             np.testing.assert_allclose(
2025-02-24T15:57:56.8664920Z                 data.x, expected.get(group + "x").values.flatten()
2025-02-24T15:57:56.8664970Z             )
2025-02-24T15:57:56.8665030Z >           np.testing.assert_allclose(
2025-02-24T15:57:56.8665130Z                 data.y, expected.get(group + "y").values.flatten()
2025-02-24T15:57:56.8665180Z             )
2025-02-24T15:57:56.8665180Z 
2025-02-24T15:57:56.8665300Z tardis/visualization/tools/tests/test_sdec_plot.py:417: 
2025-02-24T15:57:56.8665390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-02-24T15:57:56.8665390Z 
2025-02-24T15:57:56.8665950Z args = (<function assert_allclose.<locals>.compare at 0x15b133d80>, array([6.95906645e+37, 9.19559992e+37, 1.96655636e+38, .....), array([9.57854901e+37, 6.97452380e+37, 2.91062613e+38, ...,
2025-02-24T15:57:56.8666060Z        0.00000000e+00, 0.00000000e+00, 0.00000000e+00]))
2025-02-24T15:57:56.8666250Z kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0', 'verbose': True}
2025-02-24T15:57:56.8666260Z 
2025-02-24T15:57:56.8666310Z     @wraps(func)
2025-02-24T15:57:56.8666370Z     def inner(*args, **kwds):
2025-02-24T15:57:56.8666430Z         with self._recreate_cm():
2025-02-24T15:57:56.8666500Z >           return func(*args, **kwds)
2025-02-24T15:57:56.8666650Z E           AssertionError: 
2025-02-24T15:57:56.8666740Z E           Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8666790Z E           
2025-02-24T15:57:56.8666870Z E           Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.8666940Z E           Max absolute difference: 3.62213099e+39
2025-02-24T15:57:56.8667020Z E           Max relative difference: 15766.15804934
2025-02-24T15:57:56.8667130Z E            x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8667210Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8667320Z E            y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.8667390Z E                  0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.8667390Z 
2025-02-24T15:57:56.8667550Z ../../../micromamba/envs/tardis/lib/python3.12/contextlib.py:81: AssertionError
2025-02-24T15:57:56.8667650Z =============================== warnings summary ===============================
2025-02-24T15:57:56.8667740Z tardis/io/configuration/config_validator.py:6
2025-02-24T15:57:56.8667830Z tardis/io/configuration/config_validator.py:6
2025-02-24T15:57:56.8668080Z   /Users/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-02-24T15:57:56.8668120Z   
2025-02-24T15:57:56.8669030Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-02-24T15:57:56.8669030Z 
2025-02-24T15:57:56.8669230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-02-24T15:57:56.8669510Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-02-24T15:57:56.8669560Z   
2025-02-24T15:57:56.8669680Z   Jupyter is migrating its paths to use standard platformdirs
2025-02-24T15:57:56.8669810Z   given by the platformdirs library.  To remove this warning and
2025-02-24T15:57:56.8669940Z   see the appropriate new directories, set the environment variable
2025-02-24T15:57:56.8670060Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-02-24T15:57:56.8670180Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-02-24T15:57:56.8670180Z 
2025-02-24T15:57:56.8675900Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-02-24T15:57:56.8676140Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:57:56.8676310Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-02-24T15:57:56.8676350Z   
2025-02-24T15:57:56.8676390Z   
2025-02-24T15:57:56.8676560Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T15:57:56.8676780Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T15:57:56.8676790Z 
2025-02-24T15:57:56.8676950Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-02-24T15:57:56.8677920Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-02-24T15:57:56.8678300Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-02-24T15:57:56.8678470Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-02-24T15:57:56.8678730Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-02-24T15:57:56.8678780Z   
2025-02-24T15:57:56.8678860Z   The current CMFGEN model parser is deprecated
2025-02-24T15:57:56.8678870Z 
2025-02-24T15:57:56.8678950Z tardis/io/tests/test_model_reader.py: 1 warning
2025-02-24T15:57:56.8679090Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-02-24T15:57:56.8679760Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-02-24T15:57:56.8679810Z   
2025-02-24T15:57:56.8679890Z   The current CMFGEN model parser is deprecated
2025-02-24T15:57:56.8679890Z 
2025-02-24T15:57:56.8680060Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-02-24T15:57:56.8680360Z   /Users/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-02-24T15:57:56.8680410Z   
2025-02-24T15:57:56.8680740Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-02-24T15:57:56.8680750Z 
2025-02-24T15:57:56.8680830Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T15:57:56.8680920Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T15:57:56.8681050Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T15:57:56.8681270Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-02-24T15:57:56.8681310Z   
2025-02-24T15:57:56.8681390Z   v_inner_boundary < 0, assuming default value
2025-02-24T15:57:56.8681400Z 
2025-02-24T15:57:56.8681470Z tardis/model/tests/test_base.py: 6 warnings
2025-02-24T15:57:56.8681560Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-02-24T15:57:56.8681700Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-02-24T15:57:56.8681910Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-02-24T15:57:56.8681950Z   
2025-02-24T15:57:56.8682030Z   v_outer_boundary < 0, assuming default value
2025-02-24T15:57:56.8682030Z 
2025-02-24T15:57:56.8682390Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-02-24T15:57:56.8682630Z   /Users/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-02-24T15:57:56.8682680Z   
2025-02-24T15:57:56.8682890Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-02-24T15:57:56.8683240Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-02-24T15:57:56.8683290Z   
2025-02-24T15:57:56.8683710Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-02-24T15:57:56.8683710Z 
2025-02-24T15:57:56.8683890Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-02-24T15:57:56.8684050Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-02-24T15:57:56.8684220Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-02-24T15:57:56.8684410Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-02-24T15:57:56.8684460Z   
2025-02-24T15:57:56.8684600Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-02-24T15:57:56.8684610Z 
2025-02-24T15:57:56.8684780Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T15:57:56.8685020Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-02-24T15:57:56.8685060Z   
2025-02-24T15:57:56.8685330Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-02-24T15:57:56.8685330Z 
2025-02-24T15:57:56.8685490Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-02-24T15:57:56.8685660Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-02-24T15:57:56.8685710Z   
2025-02-24T15:57:56.8685980Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-02-24T15:57:56.8686050Z 
2025-02-24T15:57:56.8686220Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-02-24T15:57:56.8686310Z   <string>:3: NumbaPendingDeprecationWarning:
2025-02-24T15:57:56.8686360Z   
2025-02-24T15:57:56.8687170Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-02-24T15:57:56.8687230Z   Exception origin:
2025-02-24T15:57:56.8687430Z     File "/Users/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-02-24T15:57:56.8687510Z       raise TypeError(msg) from None
2025-02-24T15:57:56.8692140Z   [0m[0m
2025-02-24T15:57:56.8692150Z 
2025-02-24T15:57:56.8692460Z tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4]
2025-02-24T15:57:56.8692710Z   /Users/runner/work/tardis/tardis/tardis/visualization/tools/sdec_plot.py:1225: RuntimeWarning:
2025-02-24T15:57:56.8692750Z   
2025-02-24T15:57:56.8693440Z   More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
2025-02-24T15:57:56.8693440Z 
2025-02-24T15:57:56.8693720Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:57:56.8694010Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:57:56.8694300Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:57:56.8694580Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:57:56.8694860Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:57:56.8695140Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:57:56.8695420Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T15:57:56.8695470Z   
2025-02-24T15:57:56.8695620Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-02-24T15:57:56.8695760Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T15:57:56.8695950Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T15:57:56.8695950Z 
2025-02-24T15:57:56.8696230Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:57:56.8696500Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:57:56.8696780Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T15:57:56.8697000Z   
2025-02-24T15:57:56.8697150Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-02-24T15:57:56.8697290Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T15:57:56.8697480Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T15:57:56.8697480Z 
2025-02-24T15:57:56.8697770Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-02-24T15:57:56.8698040Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-02-24T15:57:56.8698160Z   
2025-02-24T15:57:56.8698300Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-02-24T15:57:56.8698440Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-02-24T15:57:56.8698630Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-02-24T15:57:56.8698630Z 
2025-02-24T15:57:56.8698970Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-02-24T15:57:56.8699240Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:820: DeprecationWarning:
2025-02-24T15:57:56.8699280Z   
2025-02-24T15:57:56.8699500Z   QgridWidget._precision_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-02-24T15:57:56.8699500Z 
2025-02-24T15:57:56.8699700Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:57:56.8699870Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-02-24T15:57:56.8699920Z   
2025-02-24T15:57:56.8699960Z   
2025-02-24T15:57:56.8700120Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T15:57:56.8700330Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-02-24T15:57:56.8700330Z 
2025-02-24T15:57:56.8700530Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:57:56.8700700Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-02-24T15:57:56.8700740Z   
2025-02-24T15:57:56.8700790Z   
2025-02-24T15:57:56.8700950Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-02-24T15:57:56.8701080Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-02-24T15:57:56.8701090Z 
2025-02-24T15:57:56.8701290Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-02-24T15:57:56.8701480Z   /Users/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-02-24T15:57:56.8701520Z   
2025-02-24T15:57:56.8701670Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-02-24T15:57:56.8701680Z 
2025-02-24T15:57:56.8701830Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-02-24T15:57:56.8701840Z 
2025-02-24T15:57:56.8701970Z ---------- coverage: platform darwin, python 3.12.4-final-0 ----------
2025-02-24T15:57:56.8702060Z Coverage HTML written to dir coverage_html_report
2025-02-24T15:57:56.8702140Z Coverage XML written to file coverage.xml
2025-02-24T15:57:56.8702140Z 
2025-02-24T15:57:56.8702250Z =========================== short test summary info ============================
2025-02-24T15:57:56.8702570Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - AssertionError: MultiIndex level [0] are different
2025-02-24T15:57:56.8702570Z 
2025-02-24T15:57:56.8702680Z MultiIndex level [0] values are different (0.09581 %)
2025-02-24T15:57:56.8702770Z [left]:  Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:57:56.8702820Z        ...
2025-02-24T15:57:56.8702890Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:57:56.8703230Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:57:56.8703410Z [right]: Index([14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
2025-02-24T15:57:56.8703550Z        ...
2025-02-24T15:57:56.8703620Z        20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
2025-02-24T15:57:56.8703710Z       dtype='int64', name='atomic_number', length=29224)
2025-02-24T15:57:56.8703780Z At positional index 54, first diff: 14 != 12
2025-02-24T15:57:56.8704020Z FAILED tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - AssertionError: 
2025-02-24T15:57:56.8704390Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.8704620Z 
2025-02-24T15:57:56.8704710Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:57:56.8704780Z Max absolute difference: 0.99984222
2025-02-24T15:57:56.8704840Z Max relative difference: 6337.12154973
2025-02-24T15:57:56.8704910Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.8704960Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.8705030Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:57:56.8705090Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.8705140Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.8705200Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:57:56.8705670Z FAILED tardis/plasma/equilibrium/tests/test_rate_matrix.py::test_rate_matrix_solver[collisional_rate_solver0-radiative_transitions0] - ModuleNotFoundError: No module named 'numpy._core.numeric'
2025-02-24T15:57:56.8706060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8706060Z 
2025-02-24T15:57:56.8706170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8706250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8706300Z        ...
2025-02-24T15:57:56.8706370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8706470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8706550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8706600Z        ...
2025-02-24T15:57:56.8706660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8706760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8706830Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8707230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8707240Z 
2025-02-24T15:57:56.8707310Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8707620Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8707900Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8708170Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8708650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8708650Z 
2025-02-24T15:57:56.8708730Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8709030Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8709380Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8709690Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8710070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8710070Z 
2025-02-24T15:57:56.8710170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8710260Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8710310Z        ...
2025-02-24T15:57:56.8710380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8710470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8710570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8710610Z        ...
2025-02-24T15:57:56.8710670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8710770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8710840Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8711250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8711250Z 
2025-02-24T15:57:56.8711350Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8711440Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8711480Z        ...
2025-02-24T15:57:56.8711540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8711640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8711730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8711770Z        ...
2025-02-24T15:57:56.8711830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8711930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8712000Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8712370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8712380Z 
2025-02-24T15:57:56.8712470Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8712560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8712600Z        ...
2025-02-24T15:57:56.8712670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8712770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8712910Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8712960Z        ...
2025-02-24T15:57:56.8713020Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8713120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8713200Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8713600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8713610Z 
2025-02-24T15:57:56.8713700Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8713850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8713900Z        ...
2025-02-24T15:57:56.8713960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8714060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8714140Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8714190Z        ...
2025-02-24T15:57:56.8714250Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8714340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8714410Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8714810Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8714810Z 
2025-02-24T15:57:56.8714910Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8715000Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8715050Z        ...
2025-02-24T15:57:56.8715110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8715360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8715450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8715500Z        ...
2025-02-24T15:57:56.8715560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8715660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8715730Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8716120Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:nebular-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8716120Z 
2025-02-24T15:57:56.8716220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8716300Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8716350Z        ...
2025-02-24T15:57:56.8716420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8716510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8716590Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8716640Z        ...
2025-02-24T15:57:56.8716700Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8716800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8716880Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8717240Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8717240Z 
2025-02-24T15:57:56.8717340Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8717420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8717470Z        ...
2025-02-24T15:57:56.8717530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8717630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8717710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8717760Z        ...
2025-02-24T15:57:56.8717820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8718050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8718130Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8718520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8718520Z 
2025-02-24T15:57:56.8718590Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8718880Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8719200Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8719470Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8719850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8719860Z 
2025-02-24T15:57:56.8719920Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8720220Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8720520Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8720820Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8721190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8721190Z 
2025-02-24T15:57:56.8721280Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8721370Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8721410Z        ...
2025-02-24T15:57:56.8721480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8721580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8721660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8721710Z        ...
2025-02-24T15:57:56.8721770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8721870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8722180Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8722690Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8722690Z 
2025-02-24T15:57:56.8722790Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8722870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8722920Z        ...
2025-02-24T15:57:56.8722980Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8723080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8723320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8723370Z        ...
2025-02-24T15:57:56.8723430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8723530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8723600Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8723970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8723970Z 
2025-02-24T15:57:56.8724070Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8724150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8724200Z        ...
2025-02-24T15:57:56.8724260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8724350Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8724430Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8724480Z        ...
2025-02-24T15:57:56.8724540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8724640Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8724710Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8725100Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8725100Z 
2025-02-24T15:57:56.8725200Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8725280Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8725320Z        ...
2025-02-24T15:57:56.8725380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8725480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8725560Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8725610Z        ...
2025-02-24T15:57:56.8725670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8725760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8725840Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8726220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8726220Z 
2025-02-24T15:57:56.8726320Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8726400Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8726450Z        ...
2025-02-24T15:57:56.8726510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8726600Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8726690Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8726730Z        ...
2025-02-24T15:57:56.8726800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8726890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8726970Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8727410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[ionization:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8727410Z 
2025-02-24T15:57:56.8727520Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8727600Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8727650Z        ...
2025-02-24T15:57:56.8727710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8727800Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8727890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8727930Z        ...
2025-02-24T15:57:56.8728000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8728140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8728220Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8728580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8728580Z 
2025-02-24T15:57:56.8728680Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8728760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8728810Z        ...
2025-02-24T15:57:56.8728870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8728970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8729050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8729100Z        ...
2025-02-24T15:57:56.8729160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8729250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8729330Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8729700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8729710Z 
2025-02-24T15:57:56.8729780Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8730080Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8730340Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8730620Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8731000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8731000Z 
2025-02-24T15:57:56.8731070Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8731360Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8731720Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8732020Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8732440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8732440Z 
2025-02-24T15:57:56.8732540Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8732630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8732670Z        ...
2025-02-24T15:57:56.8732730Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8732830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8732920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8732970Z        ...
2025-02-24T15:57:56.8733030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8733120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8733190Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8733590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8733590Z 
2025-02-24T15:57:56.8733690Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8733770Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8733820Z        ...
2025-02-24T15:57:56.8733880Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8733970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8734050Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8734100Z        ...
2025-02-24T15:57:56.8734160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8734290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8734380Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8734740Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8734740Z 
2025-02-24T15:57:56.8734850Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8734930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8734980Z        ...
2025-02-24T15:57:56.8735040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8735130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8735210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8735260Z        ...
2025-02-24T15:57:56.8735320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8735410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8735490Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8735860Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8735870Z 
2025-02-24T15:57:56.8735970Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8736050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8736210Z        ...
2025-02-24T15:57:56.8736280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8736380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8736460Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8736500Z        ...
2025-02-24T15:57:56.8736560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8736660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8736730Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8737110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8737170Z 
2025-02-24T15:57:56.8737280Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8737360Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8737410Z        ...
2025-02-24T15:57:56.8737470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8737560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8737650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8737700Z        ...
2025-02-24T15:57:56.8737760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8737850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8737930Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8738340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8738340Z 
2025-02-24T15:57:56.8738450Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8738530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8738570Z        ...
2025-02-24T15:57:56.8738630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8738730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8738810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8738850Z        ...
2025-02-24T15:57:56.8738920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8739010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8739090Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8739480Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8739490Z 
2025-02-24T15:57:56.8739590Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8739680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8739730Z        ...
2025-02-24T15:57:56.8739800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8739900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8739990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8740040Z        ...
2025-02-24T15:57:56.8740100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8740200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8740280Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8740700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8740700Z 
2025-02-24T15:57:56.8740770Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8741230Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8741520Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8741800Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8742420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8742430Z 
2025-02-24T15:57:56.8742500Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8742790Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8743090Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8743390Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8743850Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8743860Z 
2025-02-24T15:57:56.8743970Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8744050Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8744090Z        ...
2025-02-24T15:57:56.8744150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8744250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8744330Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8744380Z        ...
2025-02-24T15:57:56.8744450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8744540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8744610Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8745020Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8745020Z 
2025-02-24T15:57:56.8745130Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8745220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8745270Z        ...
2025-02-24T15:57:56.8745330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8745430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8745640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8745690Z        ...
2025-02-24T15:57:56.8745760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8745850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8745920Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8746300Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8746310Z 
2025-02-24T15:57:56.8746410Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8746550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8746600Z        ...
2025-02-24T15:57:56.8746660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8746750Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8746840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8746890Z        ...
2025-02-24T15:57:56.8746950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8747040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8747120Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8747530Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8747530Z 
2025-02-24T15:57:56.8747630Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8747710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8747760Z        ...
2025-02-24T15:57:56.8747820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8747920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8748010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8748050Z        ...
2025-02-24T15:57:56.8748120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8748210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8748290Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8748700Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8748710Z 
2025-02-24T15:57:56.8748810Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8748890Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8748940Z        ...
2025-02-24T15:57:56.8749010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8749110Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8749200Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8749240Z        ...
2025-02-24T15:57:56.8749310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8749410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8749490Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8749890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[excitation:dilute-lte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8749890Z 
2025-02-24T15:57:56.8749990Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8750070Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8750120Z        ...
2025-02-24T15:57:56.8750180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8750740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8750860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8750910Z        ...
2025-02-24T15:57:56.8750970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8751240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8751330Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8751780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8751790Z 
2025-02-24T15:57:56.8751880Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8751960Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8752010Z        ...
2025-02-24T15:57:56.8752080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8752230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8752310Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8752360Z        ...
2025-02-24T15:57:56.8752420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8752510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8752590Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8753050Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8753050Z 
2025-02-24T15:57:56.8753120Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8753420Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8753690Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8753960Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8754410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8754420Z 
2025-02-24T15:57:56.8754490Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8754780Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8755090Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8755440Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8755870Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8755880Z 
2025-02-24T15:57:56.8755980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8756060Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8756110Z        ...
2025-02-24T15:57:56.8756210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8756310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8756390Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8756440Z        ...
2025-02-24T15:57:56.8756500Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8756600Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8756680Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8757140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8757140Z 
2025-02-24T15:57:56.8757240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8757320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8757360Z        ...
2025-02-24T15:57:56.8757430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8757520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8757600Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8757650Z        ...
2025-02-24T15:57:56.8757710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8757810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8757880Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8758320Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8758320Z 
2025-02-24T15:57:56.8758420Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8758500Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8758550Z        ...
2025-02-24T15:57:56.8758610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8758710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8758800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8758840Z        ...
2025-02-24T15:57:56.8758910Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8759000Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8759080Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8759540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8759550Z 
2025-02-24T15:57:56.8759640Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8759730Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8759770Z        ...
2025-02-24T15:57:56.8759840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8759930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8760030Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8760070Z        ...
2025-02-24T15:57:56.8760140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8764210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8764520Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8765000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8765000Z 
2025-02-24T15:57:56.8765100Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8765190Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8765230Z        ...
2025-02-24T15:57:56.8765300Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8765390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8765570Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8765620Z        ...
2025-02-24T15:57:56.8765680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8765780Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8765850Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8766310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8766310Z 
2025-02-24T15:57:56.8766410Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8766500Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8766540Z        ...
2025-02-24T15:57:56.8766600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8766700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8766790Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8766840Z        ...
2025-02-24T15:57:56.8766900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8767000Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8767070Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8767490Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8767490Z 
2025-02-24T15:57:56.8767600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8767680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8767720Z        ...
2025-02-24T15:57:56.8767780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8767880Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8767960Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8768010Z        ...
2025-02-24T15:57:56.8768070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8768170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8768240Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8768670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8768670Z 
2025-02-24T15:57:56.8768740Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8769040Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8769370Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8769650Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8770070Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8770120Z 
2025-02-24T15:57:56.8770200Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8770500Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8770810Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8771130Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8771540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8771540Z 
2025-02-24T15:57:56.8771640Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8771730Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8771780Z        ...
2025-02-24T15:57:56.8771840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8771940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8772020Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8772080Z        ...
2025-02-24T15:57:56.8772140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8772230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8772300Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8772740Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8772750Z 
2025-02-24T15:57:56.8772840Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8772930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8772980Z        ...
2025-02-24T15:57:56.8773040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8773130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8773220Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8773270Z        ...
2025-02-24T15:57:56.8773330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8773420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8773490Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8773950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8773950Z 
2025-02-24T15:57:56.8774050Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8774140Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8774200Z        ...
2025-02-24T15:57:56.8774260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8774360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8774440Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8774550Z        ...
2025-02-24T15:57:56.8774610Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8774710Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8774790Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8775220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8775230Z 
2025-02-24T15:57:56.8775330Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8775410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8775460Z        ...
2025-02-24T15:57:56.8775520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8775620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8775710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8775760Z        ...
2025-02-24T15:57:56.8775820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8775920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8775990Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8776430Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8776430Z 
2025-02-24T15:57:56.8776530Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8776610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8776660Z        ...
2025-02-24T15:57:56.8776720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8776820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8776890Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8776940Z        ...
2025-02-24T15:57:56.8777000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8777100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8777180Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8777580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8777580Z 
2025-02-24T15:57:56.8777680Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8777760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8777810Z        ...
2025-02-24T15:57:56.8777870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8777970Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8778040Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8778090Z        ...
2025-02-24T15:57:56.8778150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8778250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8778330Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8778740Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8778740Z 
2025-02-24T15:57:56.8778910Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8779000Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8779050Z        ...
2025-02-24T15:57:56.8779110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8779200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8779290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8779330Z        ...
2025-02-24T15:57:56.8779400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8779490Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8779620Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8780050Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8780050Z 
2025-02-24T15:57:56.8780130Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8780430Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8780700Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8780980Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8781410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8781410Z 
2025-02-24T15:57:56.8781480Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8781770Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8782080Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8782390Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8782790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8782880Z 
2025-02-24T15:57:56.8783000Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8783080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8783130Z        ...
2025-02-24T15:57:56.8783190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8783280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8783370Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8783410Z        ...
2025-02-24T15:57:56.8783470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8783680Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8783920Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8784360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8784360Z 
2025-02-24T15:57:56.8784470Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8784550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8784600Z        ...
2025-02-24T15:57:56.8784660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8784760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8784840Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8784890Z        ...
2025-02-24T15:57:56.8784940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8785040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8785120Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8785530Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8785530Z 
2025-02-24T15:57:56.8785630Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8785710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8785760Z        ...
2025-02-24T15:57:56.8785820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8785920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8786000Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8786050Z        ...
2025-02-24T15:57:56.8786120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8786210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8786290Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8786710Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8786720Z 
2025-02-24T15:57:56.8786820Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8786900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8786950Z        ...
2025-02-24T15:57:56.8787010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8787100Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8787180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8787230Z        ...
2025-02-24T15:57:56.8787290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8787380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8787460Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8787890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8787890Z 
2025-02-24T15:57:56.8787990Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8788130Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8788180Z        ...
2025-02-24T15:57:56.8788240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8788340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8788420Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8788470Z        ...
2025-02-24T15:57:56.8788530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8788620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8788690Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8789110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8789170Z 
2025-02-24T15:57:56.8789280Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8789360Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8789410Z        ...
2025-02-24T15:57:56.8789470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8789560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8789650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8789690Z        ...
2025-02-24T15:57:56.8789750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8789840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8789920Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8790350Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8790360Z 
2025-02-24T15:57:56.8790460Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8790540Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8790590Z        ...
2025-02-24T15:57:56.8790660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8790760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8790850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8790890Z        ...
2025-02-24T15:57:56.8790950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8791040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8791120Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8791570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8791580Z 
2025-02-24T15:57:56.8791650Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8791950Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8792210Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8792490Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8792990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8792990Z 
2025-02-24T15:57:56.8793060Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8793360Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8793710Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8794010Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8794440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8794450Z 
2025-02-24T15:57:56.8794540Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8794620Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8794680Z        ...
2025-02-24T15:57:56.8794740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8794840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8794920Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8794970Z        ...
2025-02-24T15:57:56.8795030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8795130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8795200Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8795640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8795650Z 
2025-02-24T15:57:56.8795750Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8795830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8795890Z        ...
2025-02-24T15:57:56.8795950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8796050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8796140Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8796180Z        ...
2025-02-24T15:57:56.8796240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8796330Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8796410Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8796820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8796830Z 
2025-02-24T15:57:56.8796930Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8797010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8797060Z        ...
2025-02-24T15:57:56.8797180Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8797280Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8797360Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8797410Z        ...
2025-02-24T15:57:56.8797480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8797570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8797640Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8798080Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8798140Z 
2025-02-24T15:57:56.8798240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8798320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8798370Z        ...
2025-02-24T15:57:56.8798430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8798520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8798610Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8798650Z        ...
2025-02-24T15:57:56.8798720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8798810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8798890Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8799340Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8799350Z 
2025-02-24T15:57:56.8799440Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8799530Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8799570Z        ...
2025-02-24T15:57:56.8799630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8799730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8799810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8799850Z        ...
2025-02-24T15:57:56.8799920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8800010Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8800090Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8800520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:dilute-blackbody-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8800530Z 
2025-02-24T15:57:56.8800620Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8800710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8800750Z        ...
2025-02-24T15:57:56.8800820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8800910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8800990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8801040Z        ...
2025-02-24T15:57:56.8801110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8801200Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8801270Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8801680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8801690Z 
2025-02-24T15:57:56.8801780Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8801870Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8801910Z        ...
2025-02-24T15:57:56.8801970Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8802060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8802250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8802310Z        ...
2025-02-24T15:57:56.8802370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8802470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8802540Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8802970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8802980Z 
2025-02-24T15:57:56.8803050Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8803460Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8803730Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8803990Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8804420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8804420Z 
2025-02-24T15:57:56.8804490Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8804780Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8805090Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8805390Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8805780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8805790Z 
2025-02-24T15:57:56.8805890Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8805970Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8806020Z        ...
2025-02-24T15:57:56.8806080Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8806170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8806320Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8806370Z        ...
2025-02-24T15:57:56.8806430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8806520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8806600Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8807030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8807030Z 
2025-02-24T15:57:56.8807130Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8807260Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8807310Z        ...
2025-02-24T15:57:56.8807370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8807460Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8807550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8807600Z        ...
2025-02-24T15:57:56.8807660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8807760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8807830Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8808230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8808230Z 
2025-02-24T15:57:56.8808320Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8808410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8808450Z        ...
2025-02-24T15:57:56.8808520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8808610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8808690Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8808740Z        ...
2025-02-24T15:57:56.8808800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8808890Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8808960Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8809380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8809380Z 
2025-02-24T15:57:56.8809480Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8809560Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8809600Z        ...
2025-02-24T15:57:56.8809670Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8809760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8809850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8809900Z        ...
2025-02-24T15:57:56.8809960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8810060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8810130Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8810540Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:scatter-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8810540Z 
2025-02-24T15:57:56.8810640Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8810720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8810770Z        ...
2025-02-24T15:57:56.8810830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8810930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8811010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8811050Z        ...
2025-02-24T15:57:56.8811160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8811270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8811340Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8811750Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8811760Z 
2025-02-24T15:57:56.8811850Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8811930Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8811980Z        ...
2025-02-24T15:57:56.8812040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8812190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8812270Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8812320Z        ...
2025-02-24T15:57:56.8812380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8812480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8812560Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8812980Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8812980Z 
2025-02-24T15:57:56.8813050Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8813340Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8813620Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8813890Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8814310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8814310Z 
2025-02-24T15:57:56.8814380Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8814680Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8814980Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8815330Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8815730Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8815740Z 
2025-02-24T15:57:56.8815830Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8815920Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8815960Z        ...
2025-02-24T15:57:56.8816070Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8816170Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8816260Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8816300Z        ...
2025-02-24T15:57:56.8816370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8816460Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8816530Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8816970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8816970Z 
2025-02-24T15:57:56.8817070Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8817150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8817200Z        ...
2025-02-24T15:57:56.8817260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8817360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8817440Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8817490Z        ...
2025-02-24T15:57:56.8817550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8817650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8817720Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8818140Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8818140Z 
2025-02-24T15:57:56.8818240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8818320Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8818370Z        ...
2025-02-24T15:57:56.8818430Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8818530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8818610Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8818660Z        ...
2025-02-24T15:57:56.8818720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8818820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8818890Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8819330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8819330Z 
2025-02-24T15:57:56.8819430Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8819510Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8819560Z        ...
2025-02-24T15:57:56.8819620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8819720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8819810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8819860Z        ...
2025-02-24T15:57:56.8819920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8820020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8820190Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8820640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8820650Z 
2025-02-24T15:57:56.8820750Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8820830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8820880Z        ...
2025-02-24T15:57:56.8820940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8821050Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8821240Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8821290Z        ...
2025-02-24T15:57:56.8821350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8821440Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8821520Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8821960Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:macroatom-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8821960Z 
2025-02-24T15:57:56.8822070Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8822150Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8822200Z        ...
2025-02-24T15:57:56.8822260Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8822360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8822450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8822500Z        ...
2025-02-24T15:57:56.8822560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8822660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8822740Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8823160Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8823160Z 
2025-02-24T15:57:56.8823270Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8823350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8823400Z        ...
2025-02-24T15:57:56.8823460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8823560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8823640Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8823790Z        ...
2025-02-24T15:57:56.8823850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8823950Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8824020Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8824460Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8824460Z 
2025-02-24T15:57:56.8824540Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8824840Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8825220Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8825510Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8825950Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8826020Z 
2025-02-24T15:57:56.8826090Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8826400Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8831260Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8832300Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8835760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8835780Z 
2025-02-24T15:57:56.8835930Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8836020Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8836070Z        ...
2025-02-24T15:57:56.8836150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8836250Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8836340Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8836410Z        ...
2025-02-24T15:57:56.8836470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8836570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8836660Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8837150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8837150Z 
2025-02-24T15:57:56.8837250Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8837350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8837400Z        ...
2025-02-24T15:57:56.8837460Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8837560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8837650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8837700Z        ...
2025-02-24T15:57:56.8837770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8842610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8842700Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8843580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8843590Z 
2025-02-24T15:57:56.8844080Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8844180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8844230Z        ...
2025-02-24T15:57:56.8844290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8844390Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8844470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8844520Z        ...
2025-02-24T15:57:56.8844720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8844820Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8844900Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8845360Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8845360Z 
2025-02-24T15:57:56.8845470Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8845550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8845600Z        ...
2025-02-24T15:57:56.8845660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8845770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8845850Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8845890Z        ...
2025-02-24T15:57:56.8845960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8846060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8846140Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8846590Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8846590Z 
2025-02-24T15:57:56.8846690Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8846770Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8846830Z        ...
2025-02-24T15:57:56.8846890Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8846990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8847070Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8847120Z        ...
2025-02-24T15:57:56.8847190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8847290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8847360Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8847790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[line_interaction_type:downbranch-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8847800Z 
2025-02-24T15:57:56.8847900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8847990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8848030Z        ...
2025-02-24T15:57:56.8848090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8848190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8848370Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8848420Z        ...
2025-02-24T15:57:56.8848480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8848580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8848670Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8849090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8849100Z 
2025-02-24T15:57:56.8849300Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8849390Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8849440Z        ...
2025-02-24T15:57:56.8849510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8849600Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8849700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8849740Z        ...
2025-02-24T15:57:56.8849800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8849900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8850050Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8850500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8850500Z 
2025-02-24T15:57:56.8850580Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8850900Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8851170Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8851450Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8851890Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8851890Z 
2025-02-24T15:57:56.8851960Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8852260Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8852580Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8852880Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8853310Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8853470Z 
2025-02-24T15:57:56.8853600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8853690Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8853740Z        ...
2025-02-24T15:57:56.8853800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8853900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8853980Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8854030Z        ...
2025-02-24T15:57:56.8854090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8854190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8854360Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8854820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8854820Z 
2025-02-24T15:57:56.8854930Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8855010Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8855060Z        ...
2025-02-24T15:57:56.8855120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8855240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8855340Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8855380Z        ...
2025-02-24T15:57:56.8855440Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8855530Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8855620Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8856030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8856030Z 
2025-02-24T15:57:56.8856140Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8856220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8856270Z        ...
2025-02-24T15:57:56.8856330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8856420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8856520Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8856560Z        ...
2025-02-24T15:57:56.8856630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8856720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8856800Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8857230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8857240Z 
2025-02-24T15:57:56.8857340Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8857430Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8857470Z        ...
2025-02-24T15:57:56.8857540Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8857630Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8857720Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8857760Z        ...
2025-02-24T15:57:56.8857830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8857920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8858000Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8858430Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8858430Z 
2025-02-24T15:57:56.8858540Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8858720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8858770Z        ...
2025-02-24T15:57:56.8858840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8858940Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8859020Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8859070Z        ...
2025-02-24T15:57:56.8859130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8859220Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8859300Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8859720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:True-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8859780Z 
2025-02-24T15:57:56.8859910Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8860000Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8860050Z        ...
2025-02-24T15:57:56.8860120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8860220Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8860300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8860350Z        ...
2025-02-24T15:57:56.8860410Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8860500Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8860580Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8860990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8861000Z 
2025-02-24T15:57:56.8861090Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8861180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8861220Z        ...
2025-02-24T15:57:56.8861290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8861380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8861470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8861510Z        ...
2025-02-24T15:57:56.8861570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8861670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8861740Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8862170Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8862170Z 
2025-02-24T15:57:56.8862240Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8862540Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8862810Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8863080Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8863570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8863580Z 
2025-02-24T15:57:56.8863650Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8864080Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8864500Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8864810Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8865220Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8865230Z 
2025-02-24T15:57:56.8865320Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8865410Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8865450Z        ...
2025-02-24T15:57:56.8865520Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8865610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8865700Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8865740Z        ...
2025-02-24T15:57:56.8865810Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8865910Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8865980Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8866420Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8866430Z 
2025-02-24T15:57:56.8866520Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8866610Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8866650Z        ...
2025-02-24T15:57:56.8866720Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8866810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8866900Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8866940Z        ...
2025-02-24T15:57:56.8867000Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8867090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8867160Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8867570Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8867580Z 
2025-02-24T15:57:56.8867680Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8867760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8867810Z        ...
2025-02-24T15:57:56.8867870Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8868020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8868110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8868160Z        ...
2025-02-24T15:57:56.8868230Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8868320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8868390Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8868820Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8868880Z 
2025-02-24T15:57:56.8868980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8869060Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8869110Z        ...
2025-02-24T15:57:56.8869170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8869260Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8869350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8869390Z        ...
2025-02-24T15:57:56.8869450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8869550Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8869620Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8870060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8870060Z 
2025-02-24T15:57:56.8870160Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8870250Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8870290Z        ...
2025-02-24T15:57:56.8870350Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8870450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8870530Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8870580Z        ...
2025-02-24T15:57:56.8870640Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8870730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8870810Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8871230Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[disable_electron_scattering:False-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8871230Z 
2025-02-24T15:57:56.8871330Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8871420Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8871470Z        ...
2025-02-24T15:57:56.8871530Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8871620Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8871710Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8871760Z        ...
2025-02-24T15:57:56.8871820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8871920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8871990Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8872440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8872440Z 
2025-02-24T15:57:56.8872540Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8872630Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8872680Z        ...
2025-02-24T15:57:56.8872740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8872840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8873040Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8873100Z        ...
2025-02-24T15:57:56.8873170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8873270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8873340Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8874580Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8874620Z 
2025-02-24T15:57:56.8874730Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8875550Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8875830Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8876110Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8876620Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8876620Z 
2025-02-24T15:57:56.8876700Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8877000Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8877300Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8877610Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8878060Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8878070Z 
2025-02-24T15:57:56.8878170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8878260Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8878310Z        ...
2025-02-24T15:57:56.8878370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8878580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8878670Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8878720Z        ...
2025-02-24T15:57:56.8878780Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8878880Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8878960Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8879440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8879500Z 
2025-02-24T15:57:56.8879610Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8879700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8879740Z        ...
2025-02-24T15:57:56.8879820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8879920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8880010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8880050Z        ...
2025-02-24T15:57:56.8880120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8880220Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8880300Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8882680Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8882710Z 
2025-02-24T15:57:56.8882810Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8882900Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8882950Z        ...
2025-02-24T15:57:56.8883010Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8883120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8883200Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8883250Z        ...
2025-02-24T15:57:56.8883310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8883410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8883480Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8885800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.8885820Z 
2025-02-24T15:57:56.8885980Z DataFrame.iloc[:, 0] (column name="0") values are different (0.80972 %)
2025-02-24T15:57:56.8886290Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8890340Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995995247961845, 0.9995981197664222, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464476, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812783, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235581, ...]
2025-02-24T15:57:56.8894140Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9999999999978895, 0.9999999999978842, 0.9999999999978614, 0.999999999991747, 0.9999999999917402, 0.9999999999917224, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9999999999997459, 0.9999999999668421, 0.9999999999668189, 0.9999999999666556, 0.9999999999997972, 0.999599343867006, 0.9995981197664222, 0.9995995247961845, 0.9993088316650953, 0.9993091437844136, 0.9979241854543773, 0.9914207638642889, 0.9852000359750833, 0.9555506538044028, 0.7424017134464478, 0.0, 0.9994315890431902, 0.9994270684185246, 0.999389211869484, 0.9990194393091552, 0.9989463348233469, 0.9970550413811967, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9952260126497807, 0.9917644368425119, 0.9752657913703978, 0.49698607605812817, 0.9999999999989754, 0.0, 0.9987812048558925, 0.998906855427952, 0.9987925708884063, 0.9978974673267881, 0.9981142260121504, 0.9936853763616037, 0.0, 0.8383155552750279, 0.7210796010896983, 0.16230678998235593, ...]
2025-02-24T15:57:56.8894300Z At positional index 124, first diff: 0.9929028359129612 != 0.9928779361771577
2025-02-24T15:57:56.8894830Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8894830Z 
2025-02-24T15:57:56.8895240Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8896260Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8896420Z        ...
2025-02-24T15:57:56.8896590Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8896870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8897110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8897260Z        ...
2025-02-24T15:57:56.8897470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8897740Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8897970Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8899450Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8899460Z 
2025-02-24T15:57:56.8899600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8899700Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8899750Z        ...
2025-02-24T15:57:56.8899820Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8899930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8900020Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8900070Z        ...
2025-02-24T15:57:56.8900140Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8900320Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8900400Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8900900Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8900910Z 
2025-02-24T15:57:56.8901010Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8901100Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8901150Z        ...
2025-02-24T15:57:56.8901210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8901310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8901400Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8901440Z        ...
2025-02-24T15:57:56.8901510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8901610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8901690Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8902160Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'coronal_approximation': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8902160Z 
2025-02-24T15:57:56.8902260Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8902350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8902400Z        ...
2025-02-24T15:57:56.8902470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8902560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8902650Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8902700Z        ...
2025-02-24T15:57:56.8902760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8902860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8902940Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8903380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8903380Z 
2025-02-24T15:57:56.8903480Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8903570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8903610Z        ...
2025-02-24T15:57:56.8903680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8903850Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8903940Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8903990Z        ...
2025-02-24T15:57:56.8904050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8904150Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8904220Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8904670Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8904830Z 
2025-02-24T15:57:56.8904910Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8905210Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8905480Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8905840Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8906280Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8906280Z 
2025-02-24T15:57:56.8906360Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8906660Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8906970Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8907280Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8907720Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8907720Z 
2025-02-24T15:57:56.8907830Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8907910Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8907960Z        ...
2025-02-24T15:57:56.8908030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8908120Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8908210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8908250Z        ...
2025-02-24T15:57:56.8908320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8908420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8908500Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8909010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8909020Z 
2025-02-24T15:57:56.8909120Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8909210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8909250Z        ...
2025-02-24T15:57:56.8909320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8909410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8909500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8909540Z        ...
2025-02-24T15:57:56.8909660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8909760Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8909840Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8910260Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8910270Z 
2025-02-24T15:57:56.8910370Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8910450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8910500Z        ...
2025-02-24T15:57:56.8910570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8910660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8910740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8910790Z        ...
2025-02-24T15:57:56.8910850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8910950Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8911030Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8911560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.8911570Z 
2025-02-24T15:57:56.8911700Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:57:56.8912000Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8916680Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T15:57:56.8920480Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:57:56.8920680Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:57:56.8921180Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8921190Z 
2025-02-24T15:57:56.8921290Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8921370Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8921420Z        ...
2025-02-24T15:57:56.8921480Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8921580Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8921660Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8921700Z        ...
2025-02-24T15:57:56.8921760Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8921860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8921930Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8922380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8922390Z 
2025-02-24T15:57:56.8922490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8922570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8922620Z        ...
2025-02-24T15:57:56.8922750Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8922840Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8922930Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8922980Z        ...
2025-02-24T15:57:56.8923040Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8923130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8923210Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8923640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8923690Z 
2025-02-24T15:57:56.8923800Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8923880Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8923930Z        ...
2025-02-24T15:57:56.8923990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8924090Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8924180Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8924220Z        ...
2025-02-24T15:57:56.8924290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8924380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8924450Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8924880Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I'], 'classical_nebular': True}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8924890Z 
2025-02-24T15:57:56.8924980Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8925060Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8925110Z        ...
2025-02-24T15:57:56.8925170Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8925270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8925350Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8925400Z        ...
2025-02-24T15:57:56.8925470Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8925560Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8925630Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8926010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8926020Z 
2025-02-24T15:57:56.8926120Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8926200Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8926250Z        ...
2025-02-24T15:57:56.8926310Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8926400Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8926490Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8926530Z        ...
2025-02-24T15:57:56.8926600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8926690Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8926770Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8927150Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8927160Z 
2025-02-24T15:57:56.8927220Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8928190Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8928550Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8928840Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8929520Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8929530Z 
2025-02-24T15:57:56.8929600Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8929900Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8930200Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8930500Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8931350Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8931370Z 
2025-02-24T15:57:56.8931490Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8931580Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8931630Z        ...
2025-02-24T15:57:56.8931690Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8931790Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8931880Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8931920Z        ...
2025-02-24T15:57:56.8931990Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8932080Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8932160Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8932560Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8932570Z 
2025-02-24T15:57:56.8932670Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8932760Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8932800Z        ...
2025-02-24T15:57:56.8932860Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8932960Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8933250Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8933300Z        ...
2025-02-24T15:57:56.8933360Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8933450Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8933530Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8933900Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8933900Z 
2025-02-24T15:57:56.8934000Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8934160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8934200Z        ...
2025-02-24T15:57:56.8934270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8934360Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8934450Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8934490Z        ...
2025-02-24T15:57:56.8934560Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8934650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8934720Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8935190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-stimulated_emission_factor] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.8935200Z 
2025-02-24T15:57:56.8935340Z DataFrame.iloc[:, 0] (column name="0") values are different (1.61943 %)
2025-02-24T15:57:56.8935640Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8943790Z [left]:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988854404408907, 0.988842577117688, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834782, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279234367635, 0.9540279035289663, 0.9540263108772171, 0.954026284332555, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737092, 0.9718136298684907, 0.9672065440240926, 0.9636425351097363, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.933263704238496, ...]
2025-02-24T15:57:56.8953030Z [right]: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9999999999997263, 0.9999999999996098, 0.9999999999991557, 0.999999999992512, 0.9999983338674766, 0.9999983337847421, 0.9999983337551588, 0.9999983336649623, 0.9999983324883531, 0.9999983324582653, 0.9999983323754609, 0.9999930693019476, 0.9999930688347333, 0.9999930686296292, 0.9999930681023338, 0.9999930636842842, 0.9999930634399783, 0.9999930627670911, 0.9998492464454313, 0.9998492363263092, 0.9998492117764549, 0.9998491985422514, 0.9998491315262693, 0.9998491189384007, 0.9998490842401014, 0.9978173594554944, 0.9978184182059014, 0.9978147545318927, 0.9966566695952355, 0.9966568290980872, 0.9966584936543016, 0.9889507362418339, 0.9889505145446142, 0.9889501875729707, 0.9889499164184155, 0.9889481665140082, 0.9889479670998393, 0.9889479734811484, 0.9889474182934699, 0.9889473752173978, 0.9889470513437773, 0.9908636941799814, 0.9910733310867013, 0.9910707479354033, 0.99106827366808, 0.9869706197340086, 0.9888680023784624, 0.988842577117688, 0.988854404408907, 0.9888439969744192, 0.9888303696817571, 0.9888167635191049, 0.9873476955698869, 0.987320411726479, 0.9872894589739691, 0.9821262955834781, 0.9791232244226186, 0.9838502240610797, 0.983809063007667, 0.9838288171331826, 0.983815398155631, 0.9837939450651338, 0.9837758891459887, 0.9540378032764323, 0.9540368810709838, 0.9540333446728257, 0.9540320242592908, 0.9540279035289663, 0.9540279234367635, 0.954026284332555, 0.9540263108772171, 0.9540248973525776, 0.9540240877085595, 0.9540224750144676, 0.9540218246115432, 0.9540214529485972, 0.9784972121335433, 0.9784508428179596, 0.9783982381343796, 0.9758601305737091, 0.9718136298684907, 0.9672065440240926, 0.9636425351097364, 0.963579613478006, 0.9635221713362545, 0.9635641326823955, 0.963501075364399, 0.9634751873350202, 0.9500536378743768, 0.9335694736531381, 0.9334262206917217, 0.9332637042384961, ...]
2025-02-24T15:57:56.8953310Z At positional index 55, first diff: 0.988854404408907 != 0.988842577117688
2025-02-24T15:57:56.8953790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-previous_beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8953790Z 
2025-02-24T15:57:56.8953900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8953990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8954040Z        ...
2025-02-24T15:57:56.8954110Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8954210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8954300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8954350Z        ...
2025-02-24T15:57:56.8954420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8954520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8954600Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8955010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8955020Z 
2025-02-24T15:57:56.8955120Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8955210Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8955250Z        ...
2025-02-24T15:57:56.8955320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8955430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8955520Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8955560Z        ...
2025-02-24T15:57:56.8955620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8955720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8955790Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8956250Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8956260Z 
2025-02-24T15:57:56.8956360Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8956450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8956500Z        ...
2025-02-24T15:57:56.8956570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8956660Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8956740Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8956790Z        ...
2025-02-24T15:57:56.8956850Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8956990Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8957070Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8957470Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[nlte:{'species': ['He I']}-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8957480Z 
2025-02-24T15:57:56.8957570Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8957660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8957710Z        ...
2025-02-24T15:57:56.8957770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8957870Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8957950Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8958000Z        ...
2025-02-24T15:57:56.8958060Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8958160Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8958240Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8958640Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8958640Z 
2025-02-24T15:57:56.8958740Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8958830Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8958870Z        ...
2025-02-24T15:57:56.8958930Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8959030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8959110Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8959160Z        ...
2025-02-24T15:57:56.8959220Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8959310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8959390Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8961000Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8961040Z 
2025-02-24T15:57:56.8961270Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8962200Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8963220Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8965080Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8965660Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8965670Z 
2025-02-24T15:57:56.8965750Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8966180Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8966890Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8967200Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8967600Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8967600Z 
2025-02-24T15:57:56.8967700Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8967790Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8967840Z        ...
2025-02-24T15:57:56.8967900Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8968000Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8968090Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8968130Z        ...
2025-02-24T15:57:56.8968200Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8968290Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8968370Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8968790Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8968790Z 
2025-02-24T15:57:56.8968900Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8968980Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8969030Z        ...
2025-02-24T15:57:56.8969100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8969190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8969280Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8969320Z        ...
2025-02-24T15:57:56.8969380Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8969480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8969550Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8969930Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8969930Z 
2025-02-24T15:57:56.8970030Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8970200Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8970250Z        ...
2025-02-24T15:57:56.8970320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8970410Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8970500Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8970540Z        ...
2025-02-24T15:57:56.8970600Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8970700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8970770Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8971190Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8971240Z 
2025-02-24T15:57:56.8971340Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8971850Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8972110Z        ...
2025-02-24T15:57:56.8972290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8972570Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8972800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8972960Z        ...
2025-02-24T15:57:56.8973320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8973950Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8974210Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8975410Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8975430Z 
2025-02-24T15:57:56.8975710Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8975940Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8976090Z        ...
2025-02-24T15:57:56.8976280Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8976540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8976960Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8977090Z        ...
2025-02-24T15:57:56.8977160Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8977270Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8977350Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8977780Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_inner:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8977800Z 
2025-02-24T15:57:56.8977910Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8977990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8978040Z        ...
2025-02-24T15:57:56.8978100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8978220Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8978300Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8978360Z        ...
2025-02-24T15:57:56.8978420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8978510Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8978590Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8978970Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8978980Z 
2025-02-24T15:57:56.8979080Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8979160Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8979210Z        ...
2025-02-24T15:57:56.8979270Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8979700Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8979800Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8979850Z        ...
2025-02-24T15:57:56.8979920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8980020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8980110Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8980510Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8980510Z 
2025-02-24T15:57:56.8980700Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8981010Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8981290Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8981600Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8982010Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8982020Z 
2025-02-24T15:57:56.8982090Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8982380Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8982680Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8982990Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8983740Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8983760Z 
2025-02-24T15:57:56.8983870Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8984080Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8984130Z        ...
2025-02-24T15:57:56.8984190Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8984420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8984510Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8984560Z        ...
2025-02-24T15:57:56.8984620Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8984720Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8984800Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8985210Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8985210Z 
2025-02-24T15:57:56.8985360Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8985450Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8985490Z        ...
2025-02-24T15:57:56.8985550Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8985650Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8985730Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8985780Z        ...
2025-02-24T15:57:56.8985840Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8985930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8986000Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8986380Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8986380Z 
2025-02-24T15:57:56.8986480Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8986570Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8986620Z        ...
2025-02-24T15:57:56.8986680Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8986770Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8986860Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8986900Z        ...
2025-02-24T15:57:56.8986960Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8987060Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8987130Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8987530Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8987540Z 
2025-02-24T15:57:56.8987640Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8987720Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8987770Z        ...
2025-02-24T15:57:56.8987830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8987930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8988010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8988070Z        ...
2025-02-24T15:57:56.8988130Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8988230Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8988310Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8989050Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8989060Z 
2025-02-24T15:57:56.8989170Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8989260Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8989310Z        ...
2025-02-24T15:57:56.8989370Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8989470Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8989550Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8989600Z        ...
2025-02-24T15:57:56.8989830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8989930Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8990010Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8990440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[initial_t_rad:10000 K-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8990450Z 
2025-02-24T15:57:56.8990550Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8990620Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8990670Z        ...
2025-02-24T15:57:56.8991030Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8991130Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8991210Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8991260Z        ...
2025-02-24T15:57:56.8991320Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8991420Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8991490Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8991910Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8991910Z 
2025-02-24T15:57:56.8992020Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8992100Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8992150Z        ...
2025-02-24T15:57:56.8992210Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8992310Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8992390Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8992440Z        ...
2025-02-24T15:57:56.8992510Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8992610Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8992680Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8993110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8993110Z 
2025-02-24T15:57:56.8993200Z Series values are different (4.04858 %)
2025-02-24T15:57:56.8993510Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8993790Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8994070Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.8994500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.8994500Z 
2025-02-24T15:57:56.8994580Z Series values are different (6.47773 %)
2025-02-24T15:57:56.8995000Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.8995320Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8995690Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.8996110Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8996110Z 
2025-02-24T15:57:56.8996220Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8996300Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8996350Z        ...
2025-02-24T15:57:56.8996420Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8996520Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8996600Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8996650Z        ...
2025-02-24T15:57:56.8996710Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8996810Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8996890Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8997330Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8997330Z 
2025-02-24T15:57:56.8997430Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8997520Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8997570Z        ...
2025-02-24T15:57:56.8997630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8997730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8997810Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8997860Z        ...
2025-02-24T15:57:56.8997920Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8998020Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8998100Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8998500Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8998500Z 
2025-02-24T15:57:56.8998600Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8998680Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8998740Z        ...
2025-02-24T15:57:56.8998800Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8998900Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8998990Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8999030Z        ...
2025-02-24T15:57:56.8999090Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.8999180Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.8999340Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.8999760Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.8999760Z 
2025-02-24T15:57:56.8999860Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.8999940Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.8999990Z        ...
2025-02-24T15:57:56.9000050Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9000140Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9000290Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9000340Z        ...
2025-02-24T15:57:56.9000400Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9000500Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9000570Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.9000990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.9001000Z 
2025-02-24T15:57:56.9001100Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.9001180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9001230Z        ...
2025-02-24T15:57:56.9001290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9001380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9001470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9001520Z        ...
2025-02-24T15:57:56.9001580Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9001670Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9001750Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.9002160Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.9002170Z 
2025-02-24T15:57:56.9002260Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.9002350Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9002390Z        ...
2025-02-24T15:57:56.9002450Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9002540Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9002630Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9002680Z        ...
2025-02-24T15:57:56.9002740Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9002830Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9002910Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.9003370Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.9003380Z 
2025-02-24T15:57:56.9003470Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.9003550Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9003600Z        ...
2025-02-24T15:57:56.9003660Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9003750Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9003830Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9003880Z        ...
2025-02-24T15:57:56.9003950Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9004040Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9004120Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.9004650Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_lower_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.9004650Z 
2025-02-24T15:57:56.9004720Z Series values are different (4.04858 %)
2025-02-24T15:57:56.9005030Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.9005300Z [left]:  [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 55, 56, 55, 56, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.9005610Z [right]: [49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, 50, 50, 51, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 50, 51, 50, 51, 52, 52, 52, 1, 1, 1, 1, 1, 1, 53, 54, 53, 54, 56, 56, 55, 56, 55, 57, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 5, 3, 4, 5, 6, 6, 3, 3, 3, 4, 4, 5, 53, 54, 53, 54, 56, 55, 56, 55, 57, 57, 57, 56, 55, 3, 4, 5, 6, 2, 6, 3, 3, 3, 4, 4, 5, 6, 3, 4, 5, ...]
2025-02-24T15:57:56.9006090Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-lines_upper_level_index] - AssertionError: Series are different
2025-02-24T15:57:56.9006090Z 
2025-02-24T15:57:56.9006170Z Series values are different (6.47773 %)
2025-02-24T15:57:56.9006470Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.9006770Z [left]:  [68, 65, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 36, 37, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 63, 62, 61, 60, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.9007080Z [right]: [65, 68, 58, 61, 56, 53, 52, 50, 48, 30, 16, 6, 67, 66, 68, 65, 69, 67, 66, 60, 61, 59, 58, 62, 60, 59, 55, 56, 54, 53, 57, 55, 54, 35, 34, 33, 21, 20, 19, 67, 68, 66, 65, 69, 67, 68, 66, 65, 68, 48, 11, 10, 9, 30, 38, 37, 36, 38, 36, 38, 31, 31, 31, 39, 32, 24, 22, 23, 24, 23, 24, 60, 61, 59, 58, 62, 63, 60, 61, 64, 63, 61, 59, 58, 17, 17, 17, 25, 16, 18, 14, 13, 12, 14, 13, 14, 15, 7, 7, 7, ...]
2025-02-24T15:57:56.9007530Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-nu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.9007530Z 
2025-02-24T15:57:56.9007630Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.9007710Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9007760Z        ...
2025-02-24T15:57:56.9007830Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9007920Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9008010Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9008050Z        ...
2025-02-24T15:57:56.9008120Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9008210Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9008280Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.9009440Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-wavelength_cm] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.9009460Z 
2025-02-24T15:57:56.9009570Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.9009660Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9009700Z        ...
2025-02-24T15:57:56.9009770Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9009860Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9009940Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9010080Z        ...
2025-02-24T15:57:56.9010150Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9010240Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9010330Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.9010800Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-f_lu] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.9010810Z 
2025-02-24T15:57:56.9010910Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.9010990Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9011040Z        ...
2025-02-24T15:57:56.9011100Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9011190Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9011280Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9011330Z        ...
2025-02-24T15:57:56.9011390Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9011480Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9011560Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.9012030Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-tau_sobolevs] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.9012040Z 
2025-02-24T15:57:56.9012130Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.9012220Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9012270Z        ...
2025-02-24T15:57:56.9012330Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9012430Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9012520Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9012560Z        ...
2025-02-24T15:57:56.9012630Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9012730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9012810Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.9013290Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-beta_sobolev] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.9013290Z 
2025-02-24T15:57:56.9013400Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.9013820Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9013870Z        ...
2025-02-24T15:57:56.9013940Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9014030Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9014130Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9014170Z        ...
2025-02-24T15:57:56.9014240Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9014340Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9014410Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.9014990Z FAILED tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[helium_treatment:recomb-nlte-delta_treatment:0.5-j_blues] - AssertionError: MultiIndex level [2] are different
2025-02-24T15:57:56.9014990Z 
2025-02-24T15:57:56.9015100Z MultiIndex level [2] values are different (4.04858 %)
2025-02-24T15:57:56.9015180Z [left]:  Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9015230Z        ...
2025-02-24T15:57:56.9015290Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9015380Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9015470Z [right]: Index([ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
2025-02-24T15:57:56.9015510Z        ...
2025-02-24T15:57:56.9015570Z        20, 21, 15, 25, 23, 22, 22, 23, 24, 25],
2025-02-24T15:57:56.9015730Z       dtype='int64', name='level_number_lower', length=247)
2025-02-24T15:57:56.9015800Z At positional index 75, first diff: 6 != 7
2025-02-24T15:57:56.9016050Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - AssertionError: 
2025-02-24T15:57:56.9016130Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9016130Z 
2025-02-24T15:57:56.9016210Z Mismatched elements: 120 / 584480 (0.0205%)
2025-02-24T15:57:56.9016270Z Max absolute difference: 1.
2025-02-24T15:57:56.9016330Z Max relative difference: 1.
2025-02-24T15:57:56.9016440Z  x: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:57:56.9016520Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:57:56.9016610Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:57:56.9016700Z  y: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:57:56.9016780Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
2025-02-24T15:57:56.9016860Z        [0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-02-24T15:57:56.9017100Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - AssertionError: 
2025-02-24T15:57:56.9017170Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9017170Z 
2025-02-24T15:57:56.9017240Z Mismatched elements: 748 / 29224 (2.56%)
2025-02-24T15:57:56.9017310Z Max absolute difference: 4005
2025-02-24T15:57:56.9017370Z Max relative difference: 26.00649351
2025-02-24T15:57:56.9017450Z  x: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:57:56.9017530Z  y: array([2577, 2577, 2577, ..., 3886, 3846, 3885])
2025-02-24T15:57:56.9017760Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - AssertionError: 
2025-02-24T15:57:56.9017830Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9017830Z 
2025-02-24T15:57:56.9017900Z Mismatched elements: 1847 / 29224 (6.32%)
2025-02-24T15:57:56.9017960Z Max absolute difference: 4046
2025-02-24T15:57:56.9018030Z Max relative difference: 24.82208589
2025-02-24T15:57:56.9018110Z  x: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:57:56.9018180Z  y: array([2613, 2612, 2611, ..., 3899, 3852, 3898])
2025-02-24T15:57:56.9018390Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - AssertionError: 
2025-02-24T15:57:56.9018460Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9018470Z 
2025-02-24T15:57:56.9018540Z Mismatched elements: 13536 / 584480 (2.32%)
2025-02-24T15:57:56.9018600Z Max absolute difference: 0.99984222
2025-02-24T15:57:56.9018680Z Max relative difference: 6337.12154973
2025-02-24T15:57:56.9018730Z  x: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.9018790Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.9018840Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:57:56.9018910Z  y: array([[1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.9018970Z        [1., 1., 1., ..., 1., 1., 1.],
2025-02-24T15:57:56.9019020Z        [1., 1., 1., ..., 1., 1., 1.],...
2025-02-24T15:57:56.9019210Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - AssertionError: 
2025-02-24T15:57:56.9019340Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9019340Z 
2025-02-24T15:57:56.9019430Z Mismatched elements: 13335 / 263016 (5.07%)
2025-02-24T15:57:56.9019490Z Max absolute difference: 4.25260542e+12
2025-02-24T15:57:56.9019560Z Max relative difference: 18196.0085861
2025-02-24T15:57:56.9019680Z  x: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:57:56.9019740Z         4.043917e+10, 6.677200e-07],
2025-02-24T15:57:56.9020310Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:57:56.9020600Z  y: array([[6.781300e+04, 6.677200e+01, 2.703017e-02, ..., 3.030251e+07,
2025-02-24T15:57:56.9021020Z         4.043917e+10, 6.677200e-07],
2025-02-24T15:57:56.9021130Z        [6.781400e+04, 6.920400e+01, 8.668421e-02, ..., 1.007179e+08,...
2025-02-24T15:57:56.9021370Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - AssertionError: 
2025-02-24T15:57:56.9021450Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9021450Z 
2025-02-24T15:57:56.9021530Z Mismatched elements: 2221 / 29224 (7.6%)
2025-02-24T15:57:56.9021590Z Max absolute difference: 2.92713618
2025-02-24T15:57:56.9021670Z Max relative difference: 18196.0085861
2025-02-24T15:57:56.9021790Z  x: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:57:56.9021850Z        1.126883e+00, 4.414472e-04])
2025-02-24T15:57:56.9021970Z  y: array([4.054525e-02, 8.668421e-02, 9.288381e-02, ..., 9.931846e-04,
2025-02-24T15:57:56.9022020Z        1.126883e+00, 4.414472e-04])
2025-02-24T15:57:56.9022250Z FAILED tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - AssertionError: 
2025-02-24T15:57:56.9022320Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9022320Z 
2025-02-24T15:57:56.9022400Z Mismatched elements: 39620 / 584480 (6.78%)
2025-02-24T15:57:56.9022480Z Max absolute difference: 282815.33818472
2025-02-24T15:57:56.9022550Z Max relative difference: 4.12352828e+47
2025-02-24T15:57:56.9022670Z  x: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:57:56.9022720Z         0.000000e+00, 0.000000e+00],
2025-02-24T15:57:56.9022840Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:57:56.9022950Z  y: array([[0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,
2025-02-24T15:57:56.9023010Z         0.000000e+00, 0.000000e+00],
2025-02-24T15:57:56.9023110Z        [0.000000e+00, 0.000000e+00, 0.000000e+00, ..., 0.000000e+00,...
2025-02-24T15:57:56.9023500Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.9023510Z 
2025-02-24T15:57:56.9023640Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:57:56.9023690Z [index]: [0, 1]
2025-02-24T15:57:56.9023770Z [left]:  [0.40039163797855976, 0.4500690173218345]
2025-02-24T15:57:56.9023850Z [right]: [0.40039163797855976, 0.45013644671958974]
2025-02-24T15:57:56.9024110Z At positional index 1, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T15:57:56.9024510Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.9024520Z 
2025-02-24T15:57:56.9024650Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:57:56.9024700Z [index]: [0, 1]
2025-02-24T15:57:56.9024770Z [left]:  [9967.488442185557, 10091.396322818851]
2025-02-24T15:57:56.9024840Z [right]: [9967.488442185557, 10090.925208074616]
2025-02-24T15:57:56.9024980Z At positional index 1, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T15:57:56.9026790Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - AssertionError: DataFrame.iloc[:, 0] (column name="0") are different
2025-02-24T15:57:56.9026850Z 
2025-02-24T15:57:56.9027820Z DataFrame.iloc[:, 0] (column name="0") values are different (50.0 %)
2025-02-24T15:57:56.9027990Z [index]: [0, 1]
2025-02-24T15:57:56.9028180Z [left]:  [2869544645.3209715, 2881024886.0882792]
2025-02-24T15:57:56.9028400Z [right]: [2869544645.3209715, 2880986026.9779425]
2025-02-24T15:57:56.9028770Z At positional index 1, first diff: 2881024886.0882792 != 2880986026.9779425
2025-02-24T15:57:56.9029480Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - AssertionError: Series are different
2025-02-24T15:57:56.9029500Z 
2025-02-24T15:57:56.9029580Z Series values are different (100.0 %)
2025-02-24T15:57:56.9029690Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:57:56.9030820Z [left]:  [1.0202042777991753e+29, 8.604643039338655e+28, 7.621843612415326e+28, 6.887796775939633e+28, 6.338143063845967e+28, 5.961770832970249e+28, 5.583215038688499e+28, 5.26214201104387e+28, 5.00719468999816e+28, 4.795144203550334e+28, 4.630537292368217e+28, 4.425690259081018e+28, 4.270865369572798e+28, 4.094544283657345e+28, 3.972280940559004e+28, 3.884152385274923e+28, 3.7498225331847723e+28, 3.6666118688506634e+28, 3.5319738797726287e+28, 3.437270715325205e+28]
2025-02-24T15:57:56.9031750Z [right]: [1.0190851489144414e+29, 8.620293210130916e+28, 7.627182111494611e+28, 6.892948616165262e+28, 6.33792769094367e+28, 5.96002040258715e+28, 5.586558872212224e+28, 5.256359181780157e+28, 5.018051447190144e+28, 4.80142717097284e+28, 4.635443103818662e+28, 4.42760082209026e+28, 4.266701646003403e+28, 4.095148200480327e+28, 3.973054136677623e+28, 3.881348463924801e+28, 3.749648114483988e+28, 3.6669667839395174e+28, 3.5309131816469346e+28, 3.4364426470451254e+28]
2025-02-24T15:57:56.9031910Z At positional index 0, first diff: 1.0202042777991753e+29 != 1.0190851489144414e+29
2025-02-24T15:57:56.9032220Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - AssertionError: Series are different
2025-02-24T15:57:56.9032220Z 
2025-02-24T15:57:56.9032290Z Series values are different (100.0 %)
2025-02-24T15:57:56.9032400Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:57:56.9037850Z [left]:  [116635492761989.08, 98171051632121.94, 86872515261186.84, 78289696965690.05, 72209193315676.42, 67743848273202.76, 63510940656108.0, 60117004438842.5, 57572723670164.91, 55316097836075.18, 53398108009568.71, 51391839595543.54, 49914799926154.195, 48252386019894.61, 46984233483222.1, 46076787175987.44, 45005288890715.74, 44179675761283.02, 43040066710169.69, 42141149121109.82]
2025-02-24T15:57:56.9039050Z [right]: [116548101693134.0, 98287497352449.0, 86880176732435.3, 78272950854373.0, 72163814877095.83, 67694196332568.8, 63443304042094.88, 60039709300008.766, 57626147839330.93, 55320363334244.24, 53407234761435.555, 51398562237742.71, 49867122015465.38, 48237829093150.86, 46995101666576.03, 46046276744657.68, 44990423974887.06, 44175537951010.664, 43032079683987.45, 42141581527839.66]
2025-02-24T15:57:56.9039270Z At positional index 0, first diff: 116635492761989.08 != 116548101693134.0
2025-02-24T15:57:56.9039600Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - AssertionError: Series are different
2025-02-24T15:57:56.9039600Z 
2025-02-24T15:57:56.9039680Z Series values are different (90.0 %)
2025-02-24T15:57:56.9039780Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:57:56.9040580Z [left]:  [10091.396322818851, 10113.672762424394, 10138.57214647089, 10142.40782954104, 10149.471061360664, 10124.731447668686, 10084.96501000204, 10057.88480134284, 10073.983914823793, 10031.924501830883, 10029.890159447663, 9982.658841271636, 9943.375727608092, 9914.259749796103, 9893.924180562475, 9854.860600288932, 9802.891513260798, 9774.848565783677, 9735.162327402864, 9698.911095826039]
2025-02-24T15:57:56.9041760Z [right]: [10090.925208074616, 10114.284007169754, 10139.419400388753, 10142.763627360704, 10149.780795955081, 10123.09844072696, 10084.70389705666, 10058.012622231076, 10075.221831273808, 10032.602564737463, 10029.923783575228, 9982.400974610373, 9943.057719983486, 9914.605779635785, 9894.245392559053, 9854.911578885576, 9802.511064512953, 9775.252526407034, 9735.554945100961, 9699.295793920262]
2025-02-24T15:57:56.9041930Z At positional index 0, first diff: 10091.396322818851 != 10090.925208074616
2025-02-24T15:57:56.9042230Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - AssertionError: Series are different
2025-02-24T15:57:56.9042240Z 
2025-02-24T15:57:56.9042310Z Series values are different (95.0 %)
2025-02-24T15:57:56.9042410Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
2025-02-24T15:57:56.9043480Z [left]:  [0.4500690173218345, 0.3591778672440072, 0.299315794490968, 0.2578615845098735, 0.2254422032786788, 0.20109997630618956, 0.18257381854718482, 0.166581017494628, 0.15049754388199085, 0.13975435818105286, 0.12862206084807348, 0.12092168181342122, 0.1134233405695467, 0.10650389106044364, 0.10016109465785483, 0.09484390983006763, 0.09052533757303871, 0.08585912682814001, 0.0820302832176511, 0.07824287530618068]
2025-02-24T15:57:56.9044710Z [right]: [0.45013644671958974, 0.3590876501536774, 0.29922866259325875, 0.2578248359585449, 0.22541895309871685, 0.2011998403594266, 0.1825952857379094, 0.16657898370897484, 0.15044998950385866, 0.13972884748944558, 0.12862444897046627, 0.12093391136570561, 0.1134368459236266, 0.1064936133229687, 0.1001521163428717, 0.09484336636678078, 0.090537247519663, 0.08584829670213995, 0.08202005255449264, 0.07823319609488677]
2025-02-24T15:57:56.9044880Z At positional index 0, first diff: 0.4500690173218345 != 0.45013644671958974
2025-02-24T15:57:56.9045210Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - AssertionError: Series are different
2025-02-24T15:57:56.9045210Z 
2025-02-24T15:57:56.9045290Z Series values are different (5.1125 %)
2025-02-24T15:57:56.9045610Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.9049780Z [left]:  [1806512041912368.8, 620828912578783.0, 651561681514283.2, 320926793622792.2, 561113831783033.0, 241800185490365.7, 676657497080704.5, 599041295479916.1, 607335547665201.9, 916923063058785.2, 944437910067241.0, 768263081009078.1, 3180974191574679.5, 2598971968757746.0, 857737633068955.4, 618928023168687.5, 551416803496124.25, 1086549942730966.9, 754833333392143.2, 491321027587878.7, 463440568130160.4, 1490299638092356.5, 820039899773855.1, 2452391211684156.5, 735351500669317.2, 754784724695130.1, 1199750254428993.5, 555501175228475.94, 1389863217827777.5, 1385857288100655.8, 368681996608404.06, 1912110698856825.8, 2017785344022282.2, 627651183748411.8, 1067430591325981.9, 948623864004036.0, 1978326785288413.0, 445362302085804.25, 1003071799286044.6, 849734798686120.6, 967665593846029.1, 1280673803031827.2, 1146262107204918.5, 1001868875822752.4, 1119192629281446.4, 508267969421775.25, 1892642922899362.8, 781543400968040.9, 1151095341031394.2, 604503914702702.6, 725907718720482.8, 457818283293006.9, 527261796217634.44, 341748696489478.8, 562196737455386.1, 1275152810939863.2, 657003154645147.8, 723858331274613.6, 1885552835316985.5, 585988709997902.4, 917033611382352.2, 696895494383372.0, 267978405454919.2, 343749870964784.4, 96583519241591.61, 1296758039945233.8, 491338550899887.9, 1492219434855197.0, 764008995416200.5, 1572724795429636.2, 1559695871999531.0, 476770259286661.5, 1860071011741526.8, 702999878183188.2, 1017511963264823.4, 484489851031166.6, 453151663510803.5, 717543258409877.6, 508990329432545.4, 1838756496639701.8, 663654129595372.2, 1322083461079532.0, 601616268613591.0, 1840388688113732.8, 440724823612140.5, 1641895920313314.8, 1588055811374384.5, 1174127163560797.5, 1215687723496508.2, 997743048820577.1, 1168560411536350.2, 1048577905256173.4, 1513844599143900.5, 1363151613665534.0, 430237017317327.8, 386060300653508.2, 1139153568649478.2, 307475792296687.0, 403474269212082.0, 1156228838695875.2, ...]
2025-02-24T15:57:56.9056480Z [right]: [1806497964363691.5, 620824050797791.0, 651557470803973.5, 320924283401155.06, 561113873787112.25, 241798291122606.1, 676659115957490.4, 599043646843299.5, 607330789848065.1, 916915882531221.8, 944436308170835.4, 768263702028831.1, 3180981513893847.5, 2598977918829023.0, 857730899770804.0, 618923179519891.8, 551416875835854.44, 1086541433542293.5, 754833971959408.2, 491317193158596.1, 463436938874983.3, 1490288028825510.8, 820033385297487.8, 2452394921854276.0, 735345782477539.2, 754787342662615.8, 1199748305923909.8, 555498342552241.7, 1389852333652706.2, 1385846435296470.8, 368679109418251.0, 1912095724903033.2, 2017769542518466.0, 627651232172153.5, 1067422242306306.2, 948629480189651.8, 1978325812571257.2, 445358814403560.5, 1003063944118045.1, 849728144317407.0, 967658015948004.0, 1280663773931335.5, 1146264300342218.8, 1001861030074981.8, 1119183834838938.5, 508263982580230.94, 1892628101399911.5, 781537280613827.0, 1151086326674402.2, 604499180764604.0, 725902034055549.9, 457814698066574.3, 527262173332999.9, 341748821526544.94, 562192309822701.44, 1275142789503603.2, 657025184715239.1, 723852885328246.5, 1885538050889659.0, 585984121054452.8, 917026429989072.4, 696897964334913.8, 267976306885906.9, 343747179020909.4, 96582762885197.0, 1296746601148043.2, 491334710156273.4, 1492212625817827.0, 764003012375887.5, 1572736205466074.5, 1559683657845856.8, 476769967588303.4, 1860056739912971.5, 702994366583567.1, 1017518348351587.6, 484486056936689.44, 453148114829195.1, 717528815454204.8, 508993320531592.06, 1838746711006649.2, 663648932445292.6, 1322073114843600.0, 601612805662424.9, 1840374275823067.5, 440721373409527.9, 1641950783987409.2, 1588043382663297.8, 1174117968839014.5, 1215683099165958.0, 997747131579365.4, 1168546500179118.0, 1048569696680261.6, 1513832752764706.8, 1363140908755187.5, 430233648082889.1, 386057265404197.6, 1139144647809848.2, 307473380309096.1, 403471109559731.6, 1156219784137886.0, ...]
2025-02-24T15:57:56.9056800Z At positional index 56, first diff: 657003154645147.8 != 657025184715239.1
2025-02-24T15:57:56.9057130Z FAILED tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - AssertionError: Series are different
2025-02-24T15:57:56.9057130Z 
2025-02-24T15:57:56.9057210Z Series values are different (1.3025 %)
2025-02-24T15:57:56.9057510Z [index]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...]
2025-02-24T15:57:56.9062460Z [left]:  [2.580187060760512e-05, 2.5615305276449435e-05, 2.585830862681326e-05, -2.4286539523836896e-05, 2.4924327273178824e-05, -2.4562308329704016e-05, 2.4102796735064873e-05, -2.4386264249292878e-05, -2.4539054606359595e-05, 2.5417984817525785e-05, 2.5119851241109903e-05, -2.464236975797002e-05, -2.423310551200988e-05, -2.4507495750261827e-05, 2.4958491461131913e-05, -2.4193730203503752e-05, 2.5671279598406848e-05, 2.571778434758039e-05, 2.464924146734715e-05, -2.4227735746845522e-05, 2.5447471360622184e-05, -2.409627535779648e-05, 2.5614846934356755e-05, -2.4320296346496788e-05, 2.5377783180930537e-05, -2.345680162082186e-05, 2.436898893045542e-05, 2.5580712211859562e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4678990692654424e-05, 2.5692099452386407e-05, 2.270905632364821e-05, -2.4227512425411162e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.2214142249592017e-05, 2.588758262836899e-05, -2.4715606408157026e-05, 2.5511122485544443e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127338442376704e-05, -2.4681216640073288e-05, -2.4704319074974646e-05, -2.3740909354181544e-05, 2.4831415400580145e-05, -2.4131554413805748e-05, -2.420844496771843e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.4137581143845235e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.471887326730884e-05, 2.5235644520855386e-05, 2.5660032958970583e-05, 2.5705887025490933e-05, -2.3536700387812003e-05, 2.5942471740302383e-05, 2.4779076546395e-05, -2.4437167612038533e-05, -2.4885874975052928e-05, -2.461782418608366e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721880722086934e-05, -2.391585609212342e-05, -2.407321716937353e-05, 2.5426114770306902e-05, 2.5043044930642476e-05, -2.3655959156054043e-05, 2.564649452803889e-05, -2.389913546657555e-05, 2.533792518100767e-05, 2.4848582397006154e-05, 2.5806793260333468e-05, 2.5380277617431415e-05, -2.4207282609290893e-05, 2.4528010028979532e-05, 2.491662531246e-05, -2.4248093837055892e-05, -2.4259085434617066e-05, 2.5042343244083765e-05, -2.4184000860153038e-05, 2.534949108326902e-05, -2.4389186927485497e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:57:56.9067570Z [right]: [2.5801871599548787e-05, 2.5615305276449435e-05, 2.5858344017372144e-05, -2.4286539750273696e-05, 2.4924524325725243e-05, -2.456230824810029e-05, 2.4103043153710077e-05, -2.438655094434287e-05, -2.4539054537501715e-05, 2.5417984817525785e-05, 2.512000535197746e-05, -2.4642582656280976e-05, -2.423335106855554e-05, -2.4507743780475822e-05, 2.4958490988042172e-05, -2.4193730330394604e-05, 2.5671484002468758e-05, 2.571778434062277e-05, 2.464945535255098e-05, -2.422773639583352e-05, 2.5447471360622184e-05, -2.409627635116542e-05, 2.5614844040255083e-05, -2.4320523596905817e-05, 2.5377784576172196e-05, -2.3457066675560312e-05, 2.4369140190445265e-05, 2.5580782093694832e-05, 2.500916000868505e-05, 2.5607655801196168e-05, 2.579299539089642e-05, 2.5878529010134043e-05, 2.5847853785554793e-05, 2.4679185862134628e-05, 2.5692099696671885e-05, 2.2709368608835504e-05, -2.422769024282858e-05, 2.58085782843688e-05, 2.581290010721019e-05, 2.5342132806068496e-05, 2.543451735883577e-05, 2.5608096392788184e-05, 2.221435871493417e-05, 2.588758262836899e-05, -2.4715605747432618e-05, 2.5511122157387355e-05, 2.5795485644498618e-05, 2.592050972545506e-05, 2.5164494022525347e-05, 2.584317762440439e-05, 2.5503993551590287e-05, 2.5856838411420908e-05, -2.3127536098161385e-05, -2.468141895326209e-05, -2.47043179761032e-05, -2.3740908691907106e-05, 2.4832442492096064e-05, -2.413156183708872e-05, -2.4208444730823924e-05, 2.5773786671578585e-05, 2.5945101664127274e-05, -2.413785571902468e-05, 2.5389082054809254e-05, 2.5721255832406715e-05, 2.5248897337823434e-05, 2.4718848796409172e-05, 2.5235644879553273e-05, 2.5660116818809676e-05, 2.5705887025490933e-05, -2.3537055466673638e-05, 2.5942471740302383e-05, 2.4779255435154302e-05, -2.4437171482408422e-05, -2.488587475102296e-05, -2.461817145541738e-05, 2.5780939080246854e-05, 2.5596677948915614e-05, -2.3721589006402834e-05, -2.3916183924792534e-05, -2.4073277575252532e-05, 2.5426114770306902e-05, 2.504304506604637e-05, -2.365600824332809e-05, 2.564649452803889e-05, -2.3899135529642785e-05, 2.5338970275810367e-05, 2.484858251486878e-05, 2.5806793260333468e-05, 2.538037983050111e-05, -2.4207571237562553e-05, 2.4527910111281257e-05, 2.4916625382690475e-05, -2.4248093976538034e-05, -2.4259084902202997e-05, 2.5042343244083765e-05, -2.4184000110453416e-05, 2.534949108326902e-05, -2.438918660146681e-05, 2.5538918657626514e-05, 2.5607197079302785e-05, ...]
2025-02-24T15:57:56.9067750Z At positional index 414, first diff: 2.5657552576608082e-05 != 2.5347525852067693e-05
2025-02-24T15:57:56.9068160Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - AssertionError: 
2025-02-24T15:57:56.9068250Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9068250Z 
2025-02-24T15:57:56.9068310Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:57:56.9068390Z Max absolute difference: 4.30543741e+37
2025-02-24T15:57:56.9068460Z Max relative difference: 1.
2025-02-24T15:57:56.9068580Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9068630Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9068790Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9068850Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9069200Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - AssertionError: 
2025-02-24T15:57:56.9069280Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9069280Z 
2025-02-24T15:57:56.9069350Z Mismatched elements: 252 / 10000 (2.52%)
2025-02-24T15:57:56.9069420Z Max absolute difference: 4.15247374e+37
2025-02-24T15:57:56.9069490Z Max relative difference: 1.
2025-02-24T15:57:56.9069630Z  x: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9069690Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9069800Z  y: array([2.039204e+38, 3.728825e+38, 2.296469e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9069860Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9070100Z FAILED tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - AssertionError: 
2025-02-24T15:57:56.9070180Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9070180Z 
2025-02-24T15:57:56.9070250Z Mismatched elements: 309 / 10000 (3.09%)
2025-02-24T15:57:56.9070310Z Max absolute difference: 4.30543741e+37
2025-02-24T15:57:56.9070370Z Max relative difference: 1.
2025-02-24T15:57:56.9070490Z  x: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9070540Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9070660Z  y: array([1.335111e+39, 1.337387e+39, 9.415985e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9070710Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9070950Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - AssertionError: 
2025-02-24T15:57:56.9071020Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9071030Z 
2025-02-24T15:57:56.9071100Z Mismatched elements: 491895 / 584480 (84.2%)
2025-02-24T15:57:56.9071180Z Max absolute difference: 5.32418652e-19
2025-02-24T15:57:56.9071240Z Max relative difference: 12.23359055
2025-02-24T15:57:56.9071310Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9071360Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9071420Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.9071480Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9071540Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9071590Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.9071800Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - AssertionError: 
2025-02-24T15:57:56.9071880Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9071880Z 
2025-02-24T15:57:56.9071950Z Mismatched elements: 4832 / 10000 (48.3%)
2025-02-24T15:57:56.9072020Z Max absolute difference: 1.38672909e+39
2025-02-24T15:57:56.9072080Z Max relative difference: 5.25284451
2025-02-24T15:57:56.9072200Z  x: array([1.471192e+39, 1.695642e+39, 1.353685e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9072260Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9072370Z  y: array([1.414459e+39, 1.753650e+39, 1.413044e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9072430Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9072670Z FAILED tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - AssertionError: 
2025-02-24T15:57:56.9072750Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9072750Z 
2025-02-24T15:57:56.9072970Z Mismatched elements: 5933 / 10000 (59.3%)
2025-02-24T15:57:56.9073050Z Max absolute difference: 5.26760031e+38
2025-02-24T15:57:56.9073120Z Max relative difference: 35562.41947434
2025-02-24T15:57:56.9073240Z  x: array([1.440332e+39, 1.356114e+39, 1.397557e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9073290Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9073410Z  y: array([1.454843e+39, 1.363063e+39, 1.389398e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9073460Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9073830Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - AssertionError: 
2025-02-24T15:57:56.9074130Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9074130Z 
2025-02-24T15:57:56.9074200Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:57:56.9074270Z Max absolute difference: 7.03072887e-19
2025-02-24T15:57:56.9074330Z Max relative difference: 7.72237896
2025-02-24T15:57:56.9074400Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9074460Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9074530Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.9074580Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9074640Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9074700Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.9075040Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - AssertionError: 
2025-02-24T15:57:56.9075120Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9075130Z 
2025-02-24T15:57:56.9075590Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:57:56.9077470Z Max absolute difference: 2.09719426e+39
2025-02-24T15:57:56.9077560Z Max relative difference: 4.0036592
2025-02-24T15:57:56.9077690Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9077760Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9077880Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9077940Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9078340Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - AssertionError: 
2025-02-24T15:57:56.9078430Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9078430Z 
2025-02-24T15:57:56.9078500Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:57:56.9078580Z Max absolute difference: 5.00661745e+37
2025-02-24T15:57:56.9078640Z Max relative difference: 17.51202125
2025-02-24T15:57:56.9079680Z  x: array([1.551142e+39, 1.555226e+39, 1.548880e+39, ..., 2.256713e+31,
2025-02-24T15:57:56.9079940Z        2.279436e+31, 2.243943e+31])
2025-02-24T15:57:56.9080280Z  y: array([1.541783e+39, 1.545645e+39, 1.540310e+39, ..., 2.274707e+31,
2025-02-24T15:57:56.9080440Z        2.292907e+31, 2.257206e+31])
2025-02-24T15:57:56.9081690Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - AssertionError: 
2025-02-24T15:57:56.9081820Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9081830Z 
2025-02-24T15:57:56.9081910Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:57:56.9081980Z Max absolute difference: 4.67863561e-19
2025-02-24T15:57:56.9082040Z Max relative difference: 3.25828651
2025-02-24T15:57:56.9082110Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9082170Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9082230Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.9082300Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9082360Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9082410Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.9083230Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - AssertionError: 
2025-02-24T15:57:56.9083320Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9083320Z 
2025-02-24T15:57:56.9083390Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:57:56.9083460Z Max absolute difference: 8.5486318e+38
2025-02-24T15:57:56.9083520Z Max relative difference: 1.86186015
2025-02-24T15:57:56.9083650Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9083700Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9083830Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9083880Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9084350Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - AssertionError: 
2025-02-24T15:57:56.9084430Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9084430Z 
2025-02-24T15:57:56.9084500Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:57:56.9084570Z Max absolute difference: 2.90101642e+37
2025-02-24T15:57:56.9084630Z Max relative difference: 0.98973757
2025-02-24T15:57:56.9084760Z  x: array([1.545562e+39, 1.556608e+39, 1.545912e+39, ..., 1.352607e+31,
2025-02-24T15:57:56.9084810Z        1.330497e+31, 1.294462e+31])
2025-02-24T15:57:56.9084930Z  y: array([1.546350e+39, 1.557400e+39, 1.546571e+39, ..., 1.400403e+31,
2025-02-24T15:57:56.9084980Z        1.375141e+31, 1.337928e+31])
2025-02-24T15:57:56.9085320Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - AssertionError: 
2025-02-24T15:57:56.9085410Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9085410Z 
2025-02-24T15:57:56.9085480Z Mismatched elements: 441248 / 584480 (75.5%)
2025-02-24T15:57:56.9085550Z Max absolute difference: 4.67863561e-19
2025-02-24T15:57:56.9085610Z Max relative difference: 3.25828651
2025-02-24T15:57:56.9085670Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9085730Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9085790Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.9085850Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9085900Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9085960Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.9086280Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - AssertionError: 
2025-02-24T15:57:56.9086350Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9086350Z 
2025-02-24T15:57:56.9086420Z Mismatched elements: 3913 / 10000 (39.1%)
2025-02-24T15:57:56.9086490Z Max absolute difference: 8.5486318e+38
2025-02-24T15:57:56.9086560Z Max relative difference: 1.86186015
2025-02-24T15:57:56.9086670Z  x: array([1.745595e+39, 1.447277e+39, 1.293832e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9086730Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9086850Z  y: array([1.745665e+39, 1.447336e+39, 1.293884e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9086910Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9087270Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - AssertionError: 
2025-02-24T15:57:56.9087340Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9087340Z 
2025-02-24T15:57:56.9087410Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:57:56.9087480Z Max absolute difference: 2.99183385e+37
2025-02-24T15:57:56.9087540Z Max relative difference: 0.98992197
2025-02-24T15:57:56.9087650Z  x: array([1.544211e+39, 1.552533e+39, 1.542958e+39, ..., 1.273258e+31,
2025-02-24T15:57:56.9087710Z        1.260980e+31, 1.222587e+31])
2025-02-24T15:57:56.9087820Z  y: array([1.545064e+39, 1.553365e+39, 1.543643e+39, ..., 1.222961e+31,
2025-02-24T15:57:56.9088280Z        1.193005e+31, 1.164854e+31])
2025-02-24T15:57:56.9089870Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - AssertionError: 
2025-02-24T15:57:56.9090090Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9090100Z 
2025-02-24T15:57:56.9090300Z Mismatched elements: 441164 / 584480 (75.5%)
2025-02-24T15:57:56.9090500Z Max absolute difference: 7.03072887e-19
2025-02-24T15:57:56.9090670Z Max relative difference: 7.72237896
2025-02-24T15:57:56.9090850Z  x: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9091010Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9091170Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.9091340Z  y: array([[0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9091700Z        [0., 0., 0., ..., 0., 0., 0.],
2025-02-24T15:57:56.9091860Z        [0., 0., 0., ..., 0., 0., 0.],...
2025-02-24T15:57:56.9092790Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - AssertionError: 
2025-02-24T15:57:56.9093010Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9093020Z 
2025-02-24T15:57:56.9093210Z Mismatched elements: 3719 / 10000 (37.2%)
2025-02-24T15:57:56.9093530Z Max absolute difference: 2.09719426e+39
2025-02-24T15:57:56.9093720Z Max relative difference: 4.0036592
2025-02-24T15:57:56.9094120Z  x: array([2.165541e+39, 1.294926e+39, 1.285609e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9094200Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9094320Z  y: array([2.018627e+39, 1.441000e+39, 1.283638e+39, ..., 0.000000e+00,
2025-02-24T15:57:56.9094380Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9094750Z FAILED tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - AssertionError: 
2025-02-24T15:57:56.9094840Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9094840Z 
2025-02-24T15:57:56.9094910Z Mismatched elements: 10000 / 10000 (100%)
2025-02-24T15:57:56.9094990Z Max absolute difference: 5.0153284e+37
2025-02-24T15:57:56.9095060Z Max relative difference: 4.90769503
2025-02-24T15:57:56.9095180Z  x: array([1.549174e+39, 1.550439e+39, 1.545071e+39, ..., 2.082528e+31,
2025-02-24T15:57:56.9095240Z        2.088676e+31, 2.060278e+31])
2025-02-24T15:57:56.9095360Z  y: array([1.540599e+39, 1.541195e+39, 1.537076e+39, ..., 2.120497e+31,
2025-02-24T15:57:56.9095420Z        2.124305e+31, 2.101081e+31])
2025-02-24T15:57:56.9095700Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - AssertionError: 
2025-02-24T15:57:56.9095770Z Not equal to tolerance rtol=1e-13, atol=0
2025-02-24T15:57:56.9095780Z 
2025-02-24T15:57:56.9095840Z Mismatched elements: 20 / 20 (100%)
2025-02-24T15:57:56.9095920Z Max absolute difference: 2.25821059e+25
2025-02-24T15:57:56.9095990Z Max relative difference: 0.00054426
2025-02-24T15:57:56.9096090Z  x: array([9.408704e+28, 8.067118e+28, 7.202414e+28, 6.547518e+28,
2025-02-24T15:57:56.9096180Z        6.033670e+28, 5.613552e+28, 5.249857e+28, 4.984256e+28,
2025-02-24T15:57:56.9096280Z        4.726016e+28, 4.509481e+28, 4.319969e+28, 4.151368e+28,...
2025-02-24T15:57:56.9096390Z  y: array([9.409976e+28, 8.066324e+28, 7.202565e+28, 6.545908e+28,
2025-02-24T15:57:56.9096470Z        6.032330e+28, 5.614178e+28, 5.250313e+28, 4.984748e+28,
2025-02-24T15:57:56.9096570Z        4.725851e+28, 4.508107e+28, 4.318094e+28, 4.149110e+28,...
2025-02-24T15:57:56.9097750Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - AssertionError: 
2025-02-24T15:57:56.9098030Z Not equal to tolerance rtol=1e-12, atol=1e-15
2025-02-24T15:57:56.9098040Z 
2025-02-24T15:57:56.9098230Z Mismatched elements: 20 / 20 (100%)
2025-02-24T15:57:56.9098450Z Max absolute difference: 1.93283629e+25
2025-02-24T15:57:56.9098630Z Max relative difference: 0.00029148
2025-02-24T15:57:56.9098930Z  x: array([9.397342e+28, 8.064372e+28, 7.189479e+28, 6.549756e+28,
2025-02-24T15:57:56.9099170Z        6.033450e+28, 5.626927e+28, 5.281881e+28, 4.952089e+28,
2025-02-24T15:57:56.9099630Z        4.716388e+28, 4.491655e+28, 4.302267e+28, 4.139741e+28,...
2025-02-24T15:57:56.9100190Z  y: array([9.395409e+28, 8.063377e+28, 7.188356e+28, 6.549146e+28,
2025-02-24T15:57:56.9100310Z        6.034629e+28, 5.628414e+28, 5.283421e+28, 4.953453e+28,
2025-02-24T15:57:56.9100410Z        4.716735e+28, 4.492320e+28, 4.302194e+28, 4.140106e+28,...
2025-02-24T15:57:56.9100690Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - AssertionError: 
2025-02-24T15:57:56.9100750Z Arrays are not equal
2025-02-24T15:57:56.9100750Z 
2025-02-24T15:57:56.9100810Z (shapes (4000, 64), (4000, 62) mismatch)
2025-02-24T15:57:56.9101160Z  x: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:57:56.9101220Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:57:56.9101310Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:57:56.9101430Z  y: array([[( 1,  0, -1), (-1, -1, -1), (-1, -1, -1), ..., (-1, -1, -1),
2025-02-24T15:57:56.9101480Z         (-1, -1, -1), (-1, -1, -1)],
2025-02-24T15:57:56.9101570Z        [( 1,  0,  1), ( 2,  1,  2), ( 3,  2,  3), ..., (-1, -1, -1),...
2025-02-24T15:57:56.9101910Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - AssertionError: 
2025-02-24T15:57:56.9101980Z Not equal to tolerance rtol=0.01, atol=0
2025-02-24T15:57:56.9101990Z 
2025-02-24T15:57:56.9102050Z Mismatched elements: 33 / 100000 (0.033%)
2025-02-24T15:57:56.9102130Z Max absolute difference: 2.00640487e-05
2025-02-24T15:57:56.9102190Z Max relative difference: 2.06329455
2025-02-24T15:57:56.9102320Z  x: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:57:56.9102390Z        -9.757136e-06,  1.019764e-05])
2025-02-24T15:57:56.9102500Z  y: array([ 1.008086e-05, -9.647742e-06,  1.030402e-05, ...,  1.033754e-05,
2025-02-24T15:57:56.9102570Z        -9.757136e-06,  1.019764e-05])
2025-02-24T15:57:56.9102930Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - AssertionError: 
2025-02-24T15:57:56.9103010Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9103010Z 
2025-02-24T15:57:56.9103070Z (shapes (508,), (515,) mismatch)
2025-02-24T15:57:56.9103170Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:57:56.9103260Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:57:56.9103350Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:57:56.9103450Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:57:56.9103540Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:57:56.9103630Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:57:56.9103990Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - AssertionError: 
2025-02-24T15:57:56.9104070Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9104070Z 
2025-02-24T15:57:56.9104260Z (shapes (558,), (560,) mismatch)
2025-02-24T15:57:56.9104370Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:57:56.9104460Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:57:56.9104550Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:57:56.9104650Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:57:56.9105070Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:57:56.9105220Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:57:56.9105610Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - AssertionError: 
2025-02-24T15:57:56.9105920Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9105920Z 
2025-02-24T15:57:56.9105990Z (shapes (147,), (136,) mismatch)
2025-02-24T15:57:56.9106110Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:57:56.9106200Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:57:56.9106290Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:57:56.9106400Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:57:56.9106480Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:57:56.9106580Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:57:56.9107060Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - AssertionError: 
2025-02-24T15:57:56.9107140Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9107140Z 
2025-02-24T15:57:56.9107200Z (shapes (159,), (153,) mismatch)
2025-02-24T15:57:56.9107310Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:57:56.9107400Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:57:56.9107500Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:57:56.9107600Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:57:56.9107680Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:57:56.9107780Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:57:56.9108130Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - AssertionError: 
2025-02-24T15:57:56.9108210Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9108210Z 
2025-02-24T15:57:56.9108270Z (shapes (508,), (515,) mismatch)
2025-02-24T15:57:56.9108380Z  x: array([12955.141698, 12955.141698, 12955.141698, 11622.249767,
2025-02-24T15:57:56.9108460Z        12079.529869, 12630.218315, 11469.83903 , 11810.966898,
2025-02-24T15:57:56.9108550Z        11966.991343, 11812.499308, 11222.198064, 11263.637708,...
2025-02-24T15:57:56.9108660Z  y: array([11843.962255, 11843.962255, 11843.962255, 12641.932838,
2025-02-24T15:57:56.9108740Z        11474.810417, 11699.367498, 11106.744269, 11824.249628,
2025-02-24T15:57:56.9108840Z        11160.389552, 11202.149205, 11711.65796 , 11600.511585,...
2025-02-24T15:57:56.9109210Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - AssertionError: 
2025-02-24T15:57:56.9109290Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9109300Z 
2025-02-24T15:57:56.9109360Z (shapes (1466,), (1481,) mismatch)
2025-02-24T15:57:56.9109480Z  x: array([13692.759737, 11362.937201, 12466.538617, ..., 12605.43284 ,
2025-02-24T15:57:56.9109540Z        11152.962595, 11172.044815])
2025-02-24T15:57:56.9109650Z  y: array([12467.896487, 12467.896487, 12357.74828 , ..., 13068.120893,
2025-02-24T15:57:56.9109710Z        11398.237865, 11111.204868])
2025-02-24T15:57:56.9110060Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - AssertionError: 
2025-02-24T15:57:56.9110140Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9110140Z 
2025-02-24T15:57:56.9110200Z (shapes (147,), (136,) mismatch)
2025-02-24T15:57:56.9110300Z  x: array([12079.529869, 11966.991343, 11263.637708, 14098.493392,
2025-02-24T15:57:56.9110390Z        13656.398245, 12124.454378, 11838.909334, 12616.241701,
2025-02-24T15:57:56.9110480Z        12885.214103, 12350.428924, 15397.475192, 11754.522961,...
2025-02-24T15:57:56.9110590Z  y: array([11202.149205, 13552.38988 , 11630.957821, 12006.254109,
2025-02-24T15:57:56.9110670Z        15295.708346, 11660.899663, 11789.640304, 15161.117263,
2025-02-24T15:57:56.9110760Z        12697.545823, 14157.741775, 11039.708556, 14399.895914,...
2025-02-24T15:57:56.9111180Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - AssertionError: 
2025-02-24T15:57:56.9111260Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9111260Z 
2025-02-24T15:57:56.9111320Z (shapes (379,), (381,) mismatch)
2025-02-24T15:57:56.9111420Z  x: array([12466.538617, 14269.760975, 11910.794005, 11196.260702,
2025-02-24T15:57:56.9111510Z        11633.386223, 12079.529869, 11966.991343, 11263.637708,
2025-02-24T15:57:56.9111600Z        14098.493392, 13656.398245, 12124.454378, 11838.909334,...
2025-02-24T15:57:56.9111700Z  y: array([12467.896487, 12357.74828 , 11118.747393, 11202.149205,
2025-02-24T15:57:56.9111840Z        13552.38988 , 11630.957821, 12006.254109, 15295.708346,
2025-02-24T15:57:56.9111930Z        11660.899663, 11789.640304, 15161.117263, 12697.545823,...
2025-02-24T15:57:56.9112270Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - AssertionError: 
2025-02-24T15:57:56.9112350Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.9112350Z 
2025-02-24T15:57:56.9112410Z Mismatched elements: 4 / 40 (10%)
2025-02-24T15:57:56.9112480Z Max absolute difference: 22.
2025-02-24T15:57:56.9112540Z Max relative difference: 0.8
2025-02-24T15:57:56.9112600Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:57:56.9112660Z        [1.19e+04, 1.67e+02],
2025-02-24T15:57:56.9112720Z        [1.19e+04, 7.60e+01],...
2025-02-24T15:57:56.9112770Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:57:56.9112820Z        [1.19e+04, 1.89e+02],
2025-02-24T15:57:56.9112880Z        [1.19e+04, 8.20e+01],...
2025-02-24T15:57:56.9114390Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - AssertionError: 
2025-02-24T15:57:56.9114650Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.9114660Z 
2025-02-24T15:57:56.9114850Z Mismatched elements: 4 / 40 (10%)
2025-02-24T15:57:56.9115060Z Max absolute difference: 22.
2025-02-24T15:57:56.9115250Z Max relative difference: 0.8
2025-02-24T15:57:56.9115420Z  x: array([[1.10e+04, 1.67e+02],
2025-02-24T15:57:56.9115580Z        [1.19e+04, 1.67e+02],
2025-02-24T15:57:56.9115730Z        [1.19e+04, 7.60e+01],...
2025-02-24T15:57:56.9115900Z  y: array([[1.10e+04, 1.89e+02],
2025-02-24T15:57:56.9116050Z        [1.19e+04, 1.89e+02],
2025-02-24T15:57:56.9116200Z        [1.19e+04, 8.20e+01],...
2025-02-24T15:57:56.9116900Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - AssertionError: 
2025-02-24T15:57:56.9117010Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.9117010Z 
2025-02-24T15:57:56.9117080Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:57:56.9117140Z Max absolute difference: 34
2025-02-24T15:57:56.9117210Z Max relative difference: 0.71428571
2025-02-24T15:57:56.9117330Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:57:56.9117390Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.9117500Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:57:56.9117560Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.9117910Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - AssertionError: 
2025-02-24T15:57:56.9117980Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.9117980Z 
2025-02-24T15:57:56.9118050Z Mismatched elements: 4 / 40 (10%)
2025-02-24T15:57:56.9118110Z Max absolute difference: 34.
2025-02-24T15:57:56.9118170Z Max relative difference: 0.65
2025-02-24T15:57:56.9118230Z  x: array([[1.10e+04, 2.72e+02],
2025-02-24T15:57:56.9118290Z        [1.19e+04, 2.72e+02],
2025-02-24T15:57:56.9118340Z        [1.19e+04, 1.10e+02],...
2025-02-24T15:57:56.9118400Z  y: array([[1.10e+04, 3.06e+02],
2025-02-24T15:57:56.9118450Z        [1.19e+04, 3.06e+02],
2025-02-24T15:57:56.9118710Z        [1.19e+04, 1.18e+02],...
2025-02-24T15:57:56.9119050Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T15:57:56.9119120Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.9119120Z 
2025-02-24T15:57:56.9119180Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:57:56.9119240Z Max absolute difference: 22
2025-02-24T15:57:56.9119300Z Max relative difference: 0.8
2025-02-24T15:57:56.9119400Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:57:56.9119460Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:57:56.9119870Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:57:56.9119950Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:57:56.9120320Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T15:57:56.9120400Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.9120400Z 
2025-02-24T15:57:56.9120480Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:57:56.9120540Z Max absolute difference: 22
2025-02-24T15:57:56.9120610Z Max relative difference: 0.8
2025-02-24T15:57:56.9120720Z  x: array([167, 167,  76,  76,  34,  34,  18,  18,   3,   3,   3,   3,   0,
2025-02-24T15:57:56.9120780Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:57:56.9120890Z  y: array([189, 189,  82,  82,  22,  22,  10,  10,   7,   7,   4,   4,   0,
2025-02-24T15:57:56.9120950Z          0,   0,   0,   0,   0,   0,   0])
2025-02-24T15:57:56.9121300Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T15:57:56.9121380Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.9121380Z 
2025-02-24T15:57:56.9121440Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:57:56.9121500Z Max absolute difference: 34
2025-02-24T15:57:56.9121570Z Max relative difference: 0.71428571
2025-02-24T15:57:56.9121680Z  x: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:57:56.9121740Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.9121840Z  y: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:57:56.9121900Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.9123060Z FAILED tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T15:57:56.9123290Z Not equal to tolerance rtol=0.3, atol=3
2025-02-24T15:57:56.9123310Z 
2025-02-24T15:57:56.9123490Z Mismatched elements: 4 / 20 (20%)
2025-02-24T15:57:56.9123680Z Max absolute difference: 34
2025-02-24T15:57:56.9123870Z Max relative difference: 0.65
2025-02-24T15:57:56.9124170Z  x: array([272, 272, 110, 110,  62,  62,  33,  33,   7,   7,  12,  12,   2,
2025-02-24T15:57:56.9124350Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.9124630Z  y: array([306, 306, 118, 118,  38,  38,  20,  20,  12,  12,   9,   9,   2,
2025-02-24T15:57:56.9124980Z          2,   5,   5,   5,   5,   0,   0])
2025-02-24T15:57:56.9125450Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - AssertionError: 
2025-02-24T15:57:56.9125530Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9125540Z 
2025-02-24T15:57:56.9125600Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.9125680Z Max absolute difference: 4.3299331e-05
2025-02-24T15:57:56.9125760Z Max relative difference: 4.76021355
2025-02-24T15:57:56.9125880Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9125940Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9126050Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9126100Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9126660Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - AssertionError: 
2025-02-24T15:57:56.9126750Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9126750Z 
2025-02-24T15:57:56.9126820Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.9126880Z Max absolute difference: 4.3299331e-05
2025-02-24T15:57:56.9126950Z Max relative difference: 4.76021355
2025-02-24T15:57:56.9127060Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9127120Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9127290Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9127350Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9127720Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - AssertionError: 
2025-02-24T15:57:56.9127800Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9127800Z 
2025-02-24T15:57:56.9127860Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.9127930Z Max absolute difference: 4.3299331e-05
2025-02-24T15:57:56.9128000Z Max relative difference: 4.76021355
2025-02-24T15:57:56.9128110Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9128160Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9128270Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9128330Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9128690Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - AssertionError: 
2025-02-24T15:57:56.9128760Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9128770Z 
2025-02-24T15:57:56.9128830Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.9128900Z Max absolute difference: 4.3299331e-05
2025-02-24T15:57:56.9128960Z Max relative difference: 4.76021355
2025-02-24T15:57:56.9129070Z  x: array([1.532113e-06, 1.144809e-06, 1.975665e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9129120Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9129230Z  y: array([1.529538e-06, 1.142886e-06, 1.972342e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9129290Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9129660Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - AssertionError: 
2025-02-24T15:57:56.9129730Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9129730Z 
2025-02-24T15:57:56.9129800Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.9129870Z Max absolute difference: 3.16368526e-05
2025-02-24T15:57:56.9129930Z Max relative difference: 178.93768705
2025-02-24T15:57:56.9130050Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9130110Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9130210Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9130270Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9130640Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - AssertionError: 
2025-02-24T15:57:56.9130710Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9130710Z 
2025-02-24T15:57:56.9130770Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.9130840Z Max absolute difference: 3.16368526e-05
2025-02-24T15:57:56.9130900Z Max relative difference: 178.93768705
2025-02-24T15:57:56.9131020Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9131080Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9131180Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9131370Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9131740Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - AssertionError: 
2025-02-24T15:57:56.9131820Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9131820Z 
2025-02-24T15:57:56.9131880Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.9131950Z Max absolute difference: 3.16368526e-05
2025-02-24T15:57:56.9132020Z Max relative difference: 178.93768705
2025-02-24T15:57:56.9132130Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9132180Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9132390Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9132450Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9132820Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - AssertionError: 
2025-02-24T15:57:56.9132890Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9132890Z 
2025-02-24T15:57:56.9132950Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.9133020Z Max absolute difference: 3.16368526e-05
2025-02-24T15:57:56.9133080Z Max relative difference: 178.93768705
2025-02-24T15:57:56.9133200Z  x: array([3.595554e-06, 1.685367e-06, 3.015233e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9133250Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9133360Z  y: array([3.522694e-06, 1.634971e-06, 3.370141e-06, ..., 0.000000e+00,
2025-02-24T15:57:56.9133420Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9133790Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - AssertionError: 
2025-02-24T15:57:56.9133860Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9133860Z 
2025-02-24T15:57:56.9133920Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.9133990Z Max absolute difference: 5.1807441e+47
2025-02-24T15:57:56.9134050Z Max relative difference: 4.76021355
2025-02-24T15:57:56.9134180Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9134230Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9134340Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9135370Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9137120Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - AssertionError: 
2025-02-24T15:57:56.9137290Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9137300Z 
2025-02-24T15:57:56.9137370Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.9137440Z Max absolute difference: 5.1807441e+47
2025-02-24T15:57:56.9137500Z Max relative difference: 4.76021355
2025-02-24T15:57:56.9137640Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9137710Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9137820Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9137880Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9138570Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - AssertionError: 
2025-02-24T15:57:56.9138670Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9138670Z 
2025-02-24T15:57:56.9138750Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.9138830Z Max absolute difference: 5.1807441e+47
2025-02-24T15:57:56.9138910Z Max relative difference: 4.76021355
2025-02-24T15:57:56.9139040Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9139100Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9139220Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9139500Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9139880Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - AssertionError: 
2025-02-24T15:57:56.9139960Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9139960Z 
2025-02-24T15:57:56.9140030Z Mismatched elements: 604 / 1938 (31.2%)
2025-02-24T15:57:56.9144690Z Max absolute difference: 5.1807441e+47
2025-02-24T15:57:56.9144760Z Max relative difference: 4.76021355
2025-02-24T15:57:56.9144890Z  x: array([1.833166e+46, 1.369759e+46, 2.363873e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9145100Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9145220Z  y: array([1.830085e+46, 1.367457e+46, 2.359898e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9145270Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9145660Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - AssertionError: 
2025-02-24T15:57:56.9145730Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9145740Z 
2025-02-24T15:57:56.9145800Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.9145870Z Max absolute difference: 3.78533417e+47
2025-02-24T15:57:56.9145940Z Max relative difference: 178.93768705
2025-02-24T15:57:56.9146060Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9146120Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9146230Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9146290Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9146670Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - AssertionError: 
2025-02-24T15:57:56.9146750Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9146910Z 
2025-02-24T15:57:56.9147170Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.9147260Z Max absolute difference: 3.78533417e+47
2025-02-24T15:57:56.9147330Z Max relative difference: 178.93768705
2025-02-24T15:57:56.9147450Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9147510Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9147620Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9147680Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9148050Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - AssertionError: 
2025-02-24T15:57:56.9148130Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9148130Z 
2025-02-24T15:57:56.9148190Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.9148260Z Max absolute difference: 3.78533417e+47
2025-02-24T15:57:56.9148330Z Max relative difference: 178.93768705
2025-02-24T15:57:56.9148450Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9148510Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9148620Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9148680Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9149050Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - AssertionError: 
2025-02-24T15:57:56.9149120Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9149120Z 
2025-02-24T15:57:56.9149190Z Mismatched elements: 692 / 1938 (35.7%)
2025-02-24T15:57:56.9149260Z Max absolute difference: 3.78533417e+47
2025-02-24T15:57:56.9149320Z Max relative difference: 178.93768705
2025-02-24T15:57:56.9149430Z  x: array([4.302063e+46, 2.016534e+46, 3.607712e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9149490Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9149690Z  y: array([4.214887e+46, 1.956235e+46, 4.032358e+46, ..., 0.000000e+00,
2025-02-24T15:57:56.9149750Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9150100Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - AssertionError: 
2025-02-24T15:57:56.9150170Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9150170Z 
2025-02-24T15:57:56.9150240Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.9150310Z Max absolute difference: 2.08771842e-13
2025-02-24T15:57:56.9150370Z Max relative difference: 3.01858991
2025-02-24T15:57:56.9150480Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9150600Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9150720Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9150780Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9151120Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - AssertionError: 
2025-02-24T15:57:56.9151190Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9151200Z 
2025-02-24T15:57:56.9151260Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.9151330Z Max absolute difference: 2.08771842e-13
2025-02-24T15:57:56.9151390Z Max relative difference: 3.01858991
2025-02-24T15:57:56.9151500Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9151560Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9151670Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9151720Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9152060Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - AssertionError: 
2025-02-24T15:57:56.9152140Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9152140Z 
2025-02-24T15:57:56.9152200Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.9152270Z Max absolute difference: 2.08771842e-13
2025-02-24T15:57:56.9152330Z Max relative difference: 3.01858991
2025-02-24T15:57:56.9152450Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9152510Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9152620Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9152680Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9153010Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - AssertionError: 
2025-02-24T15:57:56.9153090Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9153090Z 
2025-02-24T15:57:56.9153150Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.9153220Z Max absolute difference: 2.08771842e-13
2025-02-24T15:57:56.9153290Z Max relative difference: 3.01858991
2025-02-24T15:57:56.9153400Z  x: array([7.655072e-15, 3.891020e-15, 1.589365e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9153460Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9153570Z  y: array([7.642204e-15, 3.884480e-15, 1.586693e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9153630Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9153960Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - AssertionError: 
2025-02-24T15:57:56.9154030Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9154040Z 
2025-02-24T15:57:56.9154100Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.9154160Z Max absolute difference: 3.02728422e-13
2025-02-24T15:57:56.9154230Z Max relative difference: 15766.1580412
2025-02-24T15:57:56.9154350Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9154400Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9154520Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9154640Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9154980Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - AssertionError: 
2025-02-24T15:57:56.9155050Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9155060Z 
2025-02-24T15:57:56.9155120Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.9155190Z Max absolute difference: 3.02728422e-13
2025-02-24T15:57:56.9155260Z Max relative difference: 15766.1580412
2025-02-24T15:57:56.9155370Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9155430Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9155590Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9155650Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9155990Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - AssertionError: 
2025-02-24T15:57:56.9156060Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9156070Z 
2025-02-24T15:57:56.9156130Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.9156200Z Max absolute difference: 3.02728422e-13
2025-02-24T15:57:56.9156270Z Max relative difference: 15766.1580412
2025-02-24T15:57:56.9156380Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9156430Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9156550Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9156600Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9156940Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - AssertionError: 
2025-02-24T15:57:56.9157020Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9157020Z 
2025-02-24T15:57:56.9157080Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.9157150Z Max absolute difference: 3.02728422e-13
2025-02-24T15:57:56.9157220Z Max relative difference: 15766.1580412
2025-02-24T15:57:56.9157330Z  x: array([5.816209e-15, 7.685447e-15, 1.643597e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9157390Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9157500Z  y: array([8.005506e-15, 5.829128e-15, 2.432627e-14, ..., 0.000000e+00,
2025-02-24T15:57:56.9157560Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9157890Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - AssertionError: 
2025-02-24T15:57:56.9157970Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9157980Z 
2025-02-24T15:57:56.9158040Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.9158120Z Max absolute difference: 2.49794504e+39
2025-02-24T15:57:56.9158180Z Max relative difference: 3.01858991
2025-02-24T15:57:56.9158300Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9158360Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9158470Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9158530Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9158870Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - AssertionError: 
2025-02-24T15:57:56.9158940Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9158950Z 
2025-02-24T15:57:56.9159010Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.9159080Z Max absolute difference: 2.49794504e+39
2025-02-24T15:57:56.9159140Z Max relative difference: 3.01858991
2025-02-24T15:57:56.9159260Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9159320Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9159430Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9159490Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9159960Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - AssertionError: 
2025-02-24T15:57:56.9160050Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9160050Z 
2025-02-24T15:57:56.9160120Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.9160190Z Max absolute difference: 2.49794504e+39
2025-02-24T15:57:56.9160250Z Max relative difference: 3.01858991
2025-02-24T15:57:56.9160370Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9160420Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9160650Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9160710Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9161060Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - AssertionError: 
2025-02-24T15:57:56.9161140Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9161140Z 
2025-02-24T15:57:56.9161210Z Mismatched elements: 446 / 1938 (23%)
2025-02-24T15:57:56.9161280Z Max absolute difference: 2.49794504e+39
2025-02-24T15:57:56.9161340Z Max relative difference: 3.01858991
2025-02-24T15:57:56.9161490Z  x: array([9.159256e+37, 4.655587e+37, 1.901667e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9161540Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9161660Z  y: array([9.143861e+37, 4.647761e+37, 1.898471e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9161720Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9162050Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - AssertionError: 
2025-02-24T15:57:56.9162130Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9162140Z 
2025-02-24T15:57:56.9162200Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.9162270Z Max absolute difference: 3.62213099e+39
2025-02-24T15:57:56.9162340Z Max relative difference: 15766.15804934
2025-02-24T15:57:56.9162460Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9162520Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9162630Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9162680Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9163020Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - AssertionError: 
2025-02-24T15:57:56.9163100Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9163100Z 
2025-02-24T15:57:56.9163170Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.9163240Z Max absolute difference: 3.62213099e+39
2025-02-24T15:57:56.9163300Z Max relative difference: 15766.15804934
2025-02-24T15:57:56.9163420Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9163480Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9163600Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9163650Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9163990Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - AssertionError: 
2025-02-24T15:57:56.9164070Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9164070Z 
2025-02-24T15:57:56.9164130Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.9164210Z Max absolute difference: 3.62213099e+39
2025-02-24T15:57:56.9164270Z Max relative difference: 15766.15804934
2025-02-24T15:57:56.9164390Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9164440Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9164560Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9164610Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9165020Z FAILED tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - AssertionError: 
2025-02-24T15:57:56.9165100Z Not equal to tolerance rtol=1e-07, atol=0
2025-02-24T15:57:56.9165100Z 
2025-02-24T15:57:56.9165160Z Mismatched elements: 533 / 1938 (27.5%)
2025-02-24T15:57:56.9165230Z Max absolute difference: 3.62213099e+39
2025-02-24T15:57:56.9165300Z Max relative difference: 15766.15804934
2025-02-24T15:57:56.9165410Z  x: array([6.959066e+37, 9.195600e+37, 1.966556e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9165470Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9165580Z  y: array([9.578549e+37, 6.974524e+37, 2.910626e+38, ..., 0.000000e+00,
2025-02-24T15:57:56.9165680Z        0.000000e+00, 0.000000e+00])
2025-02-24T15:57:56.9165900Z = 274 failed, 1136 passed, 357 skipped, 2 deselected, 19 xfailed, 8 xpassed, 63 warnings in 813.53s (0:13:33) =
2025-02-24T15:57:58.8973050Z ##[error]Process completed with exit code 1.
2025-02-24T15:57:59.0403160Z Post job cleanup.
2025-02-24T15:57:59.0558760Z Post job cleanup.
2025-02-24T15:57:59.5150420Z Will use pre-installed micromamba at /Users/runner/micromamba-bin/micromamba
2025-02-24T15:57:59.5151640Z Removing micromamba run shell ...
2025-02-24T15:57:59.5159580Z ##[group]Deinitialize micromamba for bash
2025-02-24T15:57:59.5259730Z [command]/Users/runner/micromamba-bin/micromamba shell deinit -s bash -r /Users/runner/micromamba --log-level warning --rc-file /Users/runner/work/_temp/setup-micromamba/.condarc
2025-02-24T15:57:59.6174920Z Resetting RC file "/Users/runner/.bash_profile"
2025-02-24T15:57:59.6175300Z Deleting config for root prefix 
2025-02-24T15:57:59.6175580Z Clearing mamba executable environment variable
2025-02-24T15:57:59.6200350Z Removing the following in your "/Users/runner/.bash_profile" file
2025-02-24T15:57:59.6200700Z # >>> mamba initialize >>>
2025-02-24T15:57:59.6200910Z ...
2025-02-24T15:57:59.6201060Z # <<< mamba initialize <<<
2025-02-24T15:57:59.6252430Z Removing environment tardis from auto-activate bash ...
2025-02-24T15:57:59.6361120Z Post job cleanup.
2025-02-24T15:57:59.6406790Z Post job cleanup.
2025-02-24T15:57:59.8844570Z [command]/opt/homebrew/bin/git version
2025-02-24T15:57:59.9113950Z git version 2.48.1
2025-02-24T15:57:59.9142220Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/7c6f1115-7d59-458a-8812-a41cf12d8b2b/.gitconfig'
2025-02-24T15:57:59.9149290Z Temporarily overriding HOME='/Users/runner/work/_temp/7c6f1115-7d59-458a-8812-a41cf12d8b2b' before making global git config changes
2025-02-24T15:57:59.9149870Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T15:57:59.9152600Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis/tardis-regression-data
2025-02-24T15:57:59.9254560Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T15:57:59.9311780Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T15:58:00.1532240Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T15:58:00.1600370Z http.https://github.com/.extraheader
2025-02-24T15:58:00.1612090Z [command]/opt/homebrew/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-02-24T15:58:00.1708010Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T15:58:00.2693260Z Post job cleanup.
2025-02-24T15:58:00.5608100Z [command]/opt/homebrew/bin/git version
2025-02-24T15:58:00.5709840Z git version 2.48.1
2025-02-24T15:58:00.5775310Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/18ae02b0-51a3-40c6-a7ac-c3066bd146e2/.gitconfig'
2025-02-24T15:58:00.5777380Z Temporarily overriding HOME='/Users/runner/work/_temp/18ae02b0-51a3-40c6-a7ac-c3066bd146e2' before making global git config changes
2025-02-24T15:58:00.5780340Z Adding repository directory to the temporary git global config as a safe directory
2025-02-24T15:58:00.5783430Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis
2025-02-24T15:58:00.5900230Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-02-24T15:58:00.6071240Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-02-24T15:58:00.6988380Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-02-24T15:58:00.7043860Z http.https://github.com/.extraheader
2025-02-24T15:58:00.7066210Z [command]/opt/homebrew/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-02-24T15:58:00.7145450Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-02-24T15:58:00.8271090Z Cleaning up orphan processes
