2025-01-24T14:16:01.7174927Z Requested labels: ubuntu-latest
2025-01-24T14:16:01.7175308Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2928/merge
2025-01-24T14:16:01.7175495Z Waiting for a runner to pick up this job...
2025-01-24T14:16:01.9894875Z Job is waiting for a hosted runner to come online.
2025-01-24T14:16:05.2716219Z Job is about to start running on the hosted runner: GitHub Actions 43 (hosted)
2025-01-24T14:16:06.9384124Z Current runner version: '2.321.0'
2025-01-24T14:16:06.9411637Z ##[group]Operating System
2025-01-24T14:16:06.9412403Z Ubuntu
2025-01-24T14:16:06.9412986Z 24.04.1
2025-01-24T14:16:06.9413453Z LTS
2025-01-24T14:16:06.9413981Z ##[endgroup]
2025-01-24T14:16:06.9414586Z ##[group]Runner Image
2025-01-24T14:16:06.9415159Z Image: ubuntu-24.04
2025-01-24T14:16:06.9415645Z Version: 20250120.5.0
2025-01-24T14:16:06.9416769Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250120.5/images/ubuntu/Ubuntu2404-Readme.md
2025-01-24T14:16:06.9418181Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250120.5
2025-01-24T14:16:06.9419234Z ##[endgroup]
2025-01-24T14:16:06.9419832Z ##[group]Runner Image Provisioner
2025-01-24T14:16:06.9421002Z 2.0.417.1
2025-01-24T14:16:06.9421713Z ##[endgroup]
2025-01-24T14:16:06.9425135Z ##[group]GITHUB_TOKEN Permissions
2025-01-24T14:16:06.9427114Z Actions: read
2025-01-24T14:16:06.9427979Z Attestations: read
2025-01-24T14:16:06.9428850Z Checks: read
2025-01-24T14:16:06.9429436Z Contents: read
2025-01-24T14:16:06.9429946Z Deployments: read
2025-01-24T14:16:06.9430444Z Discussions: read
2025-01-24T14:16:06.9431013Z Issues: read
2025-01-24T14:16:06.9431509Z Metadata: read
2025-01-24T14:16:06.9432000Z Packages: read
2025-01-24T14:16:06.9432544Z Pages: read
2025-01-24T14:16:06.9433028Z PullRequests: read
2025-01-24T14:16:06.9433538Z RepositoryProjects: read
2025-01-24T14:16:06.9434138Z SecurityEvents: read
2025-01-24T14:16:06.9434770Z Statuses: read
2025-01-24T14:16:06.9435254Z ##[endgroup]
2025-01-24T14:16:06.9438661Z Secret source: None
2025-01-24T14:16:06.9439421Z Prepare workflow directory
2025-01-24T14:16:07.0085799Z Prepare all required actions
2025-01-24T14:16:07.0123004Z Getting action download info
2025-01-24T14:16:07.1803472Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-24T14:16:07.2682861Z Download action repository 'actions/upload-artifact@v4' (SHA:65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08)
2025-01-24T14:16:07.4480519Z Complete job name: not continuum ubuntu-latest 
2025-01-24T14:16:07.5176827Z ##[group]Run actions/checkout@v4
2025-01-24T14:16:07.5177686Z with:
2025-01-24T14:16:07.5178091Z   repository: tardis-sn/tardis
2025-01-24T14:16:07.5178932Z   token: ***
2025-01-24T14:16:07.5179312Z   ssh-strict: true
2025-01-24T14:16:07.5179706Z   ssh-user: git
2025-01-24T14:16:07.5180102Z   persist-credentials: true
2025-01-24T14:16:07.5180549Z   clean: true
2025-01-24T14:16:07.5180952Z   sparse-checkout-cone-mode: true
2025-01-24T14:16:07.5181445Z   fetch-depth: 1
2025-01-24T14:16:07.5181834Z   fetch-tags: false
2025-01-24T14:16:07.5182233Z   show-progress: true
2025-01-24T14:16:07.5182669Z   lfs: false
2025-01-24T14:16:07.5183030Z   submodules: false
2025-01-24T14:16:07.5183432Z   set-safe-directory: true
2025-01-24T14:16:07.5184465Z env:
2025-01-24T14:16:07.5184848Z   CACHE_NUMBER: 0
2025-01-24T14:16:07.5186024Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:07.5187288Z   CODECOV_TOKEN: 
2025-01-24T14:16:07.5187663Z ##[endgroup]
2025-01-24T14:16:07.7787600Z Syncing repository: tardis-sn/tardis
2025-01-24T14:16:07.7789796Z ##[group]Getting Git version info
2025-01-24T14:16:07.7790523Z Working directory is '/home/runner/work/tardis/tardis'
2025-01-24T14:16:07.7791511Z [command]/usr/bin/git version
2025-01-24T14:16:07.7821470Z git version 2.48.1
2025-01-24T14:16:07.7851758Z ##[endgroup]
2025-01-24T14:16:07.7865947Z Temporarily overriding HOME='/home/runner/work/_temp/3110a20c-7973-43db-8c5c-389e2bbc3866' before making global git config changes
2025-01-24T14:16:07.7872129Z Adding repository directory to the temporary git global config as a safe directory
2025-01-24T14:16:07.7873405Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-24T14:16:07.7911873Z Deleting the contents of '/home/runner/work/tardis/tardis'
2025-01-24T14:16:07.7915280Z ##[group]Initializing the repository
2025-01-24T14:16:07.7919903Z [command]/usr/bin/git init /home/runner/work/tardis/tardis
2025-01-24T14:16:07.8018013Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-24T14:16:07.8019754Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-24T14:16:07.8020908Z hint: of your new repositories, which will suppress this warning, call:
2025-01-24T14:16:07.8021837Z hint:
2025-01-24T14:16:07.8022394Z hint: 	git config --global init.defaultBranch <name>
2025-01-24T14:16:07.8023101Z hint:
2025-01-24T14:16:07.8023745Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-24T14:16:07.8024858Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-24T14:16:07.8025782Z hint:
2025-01-24T14:16:07.8026224Z hint: 	git branch -m <name>
2025-01-24T14:16:07.8029049Z Initialized empty Git repository in /home/runner/work/tardis/tardis/.git/
2025-01-24T14:16:07.8040636Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-24T14:16:07.8076431Z ##[endgroup]
2025-01-24T14:16:07.8077280Z ##[group]Disabling automatic garbage collection
2025-01-24T14:16:07.8080878Z [command]/usr/bin/git config --local gc.auto 0
2025-01-24T14:16:07.8109038Z ##[endgroup]
2025-01-24T14:16:07.8109773Z ##[group]Setting up auth
2025-01-24T14:16:07.8115829Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-24T14:16:07.8146847Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-24T14:16:07.8500950Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-24T14:16:07.8532316Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-24T14:16:07.8761719Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-24T14:16:07.8799811Z ##[endgroup]
2025-01-24T14:16:07.8801457Z ##[group]Fetching the repository
2025-01-24T14:16:07.8811411Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +0adda341208ae850ea9ee0150ae991d96107f7d9:refs/remotes/pull/2928/merge
2025-01-24T14:16:09.1396214Z From https://github.com/tardis-sn/tardis
2025-01-24T14:16:09.1399228Z  * [new ref]         0adda341208ae850ea9ee0150ae991d96107f7d9 -> pull/2928/merge
2025-01-24T14:16:09.1424367Z ##[endgroup]
2025-01-24T14:16:09.1510678Z ##[group]Determining the checkout info
2025-01-24T14:16:09.1512085Z ##[endgroup]
2025-01-24T14:16:09.1512927Z [command]/usr/bin/git sparse-checkout disable
2025-01-24T14:16:09.1514843Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-24T14:16:09.1518620Z ##[group]Checking out the ref
2025-01-24T14:16:09.1520690Z [command]/usr/bin/git checkout --progress --force refs/remotes/pull/2928/merge
2025-01-24T14:16:09.3582247Z Note: switching to 'refs/remotes/pull/2928/merge'.
2025-01-24T14:16:09.3583415Z 
2025-01-24T14:16:09.3584299Z You are in 'detached HEAD' state. You can look around, make experimental
2025-01-24T14:16:09.3585992Z changes and commit them, and you can discard any commits you make in this
2025-01-24T14:16:09.3587524Z state without impacting any branches by switching back to a branch.
2025-01-24T14:16:09.3588660Z 
2025-01-24T14:16:09.3589295Z If you want to create a new branch to retain commits you create, you may
2025-01-24T14:16:09.3590649Z do so (now or later) by using -c with the switch command. Example:
2025-01-24T14:16:09.3591410Z 
2025-01-24T14:16:09.3591756Z   git switch -c <new-branch-name>
2025-01-24T14:16:09.3592341Z 
2025-01-24T14:16:09.3592675Z Or undo this operation with:
2025-01-24T14:16:09.3593201Z 
2025-01-24T14:16:09.3593850Z   git switch -
2025-01-24T14:16:09.3594280Z 
2025-01-24T14:16:09.3594990Z Turn off this advice by setting config variable advice.detachedHead to false
2025-01-24T14:16:09.3596039Z 
2025-01-24T14:16:09.3597178Z HEAD is now at 0adda34 Merge b993fdd8f473bcfe99a09157045d2326c1385f1f into ae0258463989e6da4742a80583fab03a19ae940c
2025-01-24T14:16:09.3613901Z ##[endgroup]
2025-01-24T14:16:09.3654531Z [command]/usr/bin/git log -1 --format=%H
2025-01-24T14:16:09.3679349Z 0adda341208ae850ea9ee0150ae991d96107f7d9
2025-01-24T14:16:09.3985564Z Prepare all required actions
2025-01-24T14:16:09.3986109Z Getting action download info
2025-01-24T14:16:09.5364056Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-24T14:16:09.6655825Z ##[group]Run ./.github/actions/setup_lfs
2025-01-24T14:16:09.6656190Z with:
2025-01-24T14:16:09.6656534Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-24T14:16:09.6656936Z env:
2025-01-24T14:16:09.6657240Z   CACHE_NUMBER: 0
2025-01-24T14:16:09.6657989Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:09.6658946Z   CODECOV_TOKEN: 
2025-01-24T14:16:09.6659217Z ##[endgroup]
2025-01-24T14:16:09.6799424Z ##[group]Run actions/checkout@v4
2025-01-24T14:16:09.6799815Z with:
2025-01-24T14:16:09.6800151Z   repository: tardis-sn/tardis-regression-data
2025-01-24T14:16:09.6800580Z   path: tardis-regression-data
2025-01-24T14:16:09.6801151Z   token: ***
2025-01-24T14:16:09.6801446Z   ssh-strict: true
2025-01-24T14:16:09.6801757Z   ssh-user: git
2025-01-24T14:16:09.6802073Z   persist-credentials: true
2025-01-24T14:16:09.6802397Z   clean: true
2025-01-24T14:16:09.6802710Z   sparse-checkout-cone-mode: true
2025-01-24T14:16:09.6803070Z   fetch-depth: 1
2025-01-24T14:16:09.6803363Z   fetch-tags: false
2025-01-24T14:16:09.6803684Z   show-progress: true
2025-01-24T14:16:09.6803998Z   lfs: false
2025-01-24T14:16:09.6804297Z   submodules: false
2025-01-24T14:16:09.6804610Z   set-safe-directory: true
2025-01-24T14:16:09.6804932Z env:
2025-01-24T14:16:09.6805196Z   CACHE_NUMBER: 0
2025-01-24T14:16:09.6805947Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:09.6806758Z   CODECOV_TOKEN: 
2025-01-24T14:16:09.6807041Z ##[endgroup]
2025-01-24T14:16:09.7737454Z Syncing repository: tardis-sn/tardis-regression-data
2025-01-24T14:16:09.7744194Z ##[group]Getting Git version info
2025-01-24T14:16:09.7744916Z Working directory is '/home/runner/work/tardis/tardis/tardis-regression-data'
2025-01-24T14:16:09.7786757Z [command]/usr/bin/git version
2025-01-24T14:16:09.7831836Z git version 2.48.1
2025-01-24T14:16:09.7858058Z ##[endgroup]
2025-01-24T14:16:09.7871553Z Temporarily overriding HOME='/home/runner/work/_temp/aad97f84-b4e6-4144-bf84-b50037759b82' before making global git config changes
2025-01-24T14:16:09.7873197Z Adding repository directory to the temporary git global config as a safe directory
2025-01-24T14:16:09.7878098Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-24T14:16:09.7910398Z ##[group]Initializing the repository
2025-01-24T14:16:09.7916295Z [command]/usr/bin/git init /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-24T14:16:09.7954544Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-24T14:16:09.7955942Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-24T14:16:09.7957752Z hint: of your new repositories, which will suppress this warning, call:
2025-01-24T14:16:09.7958508Z hint:
2025-01-24T14:16:09.7958941Z hint: 	git config --global init.defaultBranch <name>
2025-01-24T14:16:09.7959345Z hint:
2025-01-24T14:16:09.7959751Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-24T14:16:09.7960368Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-24T14:16:09.7961309Z hint:
2025-01-24T14:16:09.7961793Z hint: 	git branch -m <name>
2025-01-24T14:16:09.7962532Z Initialized empty Git repository in /home/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-24T14:16:09.7966893Z [command]/usr/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-01-24T14:16:09.7996855Z ##[endgroup]
2025-01-24T14:16:09.8001980Z ##[group]Disabling automatic garbage collection
2025-01-24T14:16:09.8002771Z [command]/usr/bin/git config --local gc.auto 0
2025-01-24T14:16:09.8029797Z ##[endgroup]
2025-01-24T14:16:09.8030298Z ##[group]Setting up auth
2025-01-24T14:16:09.8036346Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-24T14:16:09.8065620Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-24T14:16:09.8293729Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-24T14:16:09.8322763Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-24T14:16:09.8554337Z [command]/usr/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-24T14:16:09.8593731Z ##[endgroup]
2025-01-24T14:16:09.8594423Z ##[group]Determining the default branch
2025-01-24T14:16:09.8597359Z Retrieving the default branch name
2025-01-24T14:16:10.0747395Z Default branch 'main'
2025-01-24T14:16:10.0748976Z ##[endgroup]
2025-01-24T14:16:10.0752532Z ##[group]Fetching the repository
2025-01-24T14:16:10.0757143Z [command]/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-01-24T14:16:10.4951092Z From https://github.com/tardis-sn/tardis-regression-data
2025-01-24T14:16:10.4952197Z  * [new branch]      main       -> origin/main
2025-01-24T14:16:10.4981495Z ##[endgroup]
2025-01-24T14:16:10.4982131Z ##[group]Determining the checkout info
2025-01-24T14:16:10.4982765Z ##[endgroup]
2025-01-24T14:16:10.4987393Z [command]/usr/bin/git sparse-checkout disable
2025-01-24T14:16:10.5031119Z [command]/usr/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-24T14:16:10.5062088Z ##[group]Checking out the ref
2025-01-24T14:16:10.5066637Z [command]/usr/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-01-24T14:16:11.4311466Z Switched to a new branch 'main'
2025-01-24T14:16:11.4313489Z branch 'main' set up to track 'origin/main'.
2025-01-24T14:16:11.4581007Z ##[endgroup]
2025-01-24T14:16:11.4621936Z [command]/usr/bin/git log -1 --format=%H
2025-01-24T14:16:11.4645826Z fa7729bc9c30e14b69acd641af8b692b56fcd416
2025-01-24T14:16:11.4786461Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-24T14:16:11.4787038Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-24T14:16:11.4820173Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-24T14:16:11.4820498Z env:
2025-01-24T14:16:11.4820671Z   CACHE_NUMBER: 0
2025-01-24T14:16:11.4821290Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:11.4821955Z   CODECOV_TOKEN: 
2025-01-24T14:16:11.4822140Z ##[endgroup]
2025-01-24T14:16:11.6289040Z ##[group]Run actions/cache/restore@v4
2025-01-24T14:16:11.6289336Z with:
2025-01-24T14:16:11.6289578Z   path: tardis-regression-data/.git/lfs
2025-01-24T14:16:11.6290024Z   key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-24T14:16:11.6290474Z   enableCrossOsArchive: false
2025-01-24T14:16:11.6290718Z   fail-on-cache-miss: false
2025-01-24T14:16:11.6291231Z   lookup-only: false
2025-01-24T14:16:11.6291439Z env:
2025-01-24T14:16:11.6291608Z   CACHE_NUMBER: 0
2025-01-24T14:16:11.6292260Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:11.6292966Z   CODECOV_TOKEN: 
2025-01-24T14:16:11.6293152Z ##[endgroup]
2025-01-24T14:16:13.0220254Z Received 201326592 of 1708418946 (11.8%), 192.0 MBs/sec
2025-01-24T14:16:14.0230450Z Received 503316480 of 1708418946 (29.5%), 239.9 MBs/sec
2025-01-24T14:16:15.0232014Z Received 796917760 of 1708418946 (46.6%), 253.2 MBs/sec
2025-01-24T14:16:16.0239979Z Received 1056964608 of 1708418946 (61.9%), 251.9 MBs/sec
2025-01-24T14:16:17.0234517Z Received 1325400064 of 1708418946 (77.6%), 252.7 MBs/sec
2025-01-24T14:16:18.0237733Z Received 1602224128 of 1708418946 (93.8%), 254.6 MBs/sec
2025-01-24T14:16:18.4152685Z Cache Size: ~1629 MB (1708418946 B)
2025-01-24T14:16:18.4193582Z [command]/usr/bin/tar -xf /home/runner/work/_temp/e4682d1c-6c74-47c2-9d13-b0b06447df92/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-24T14:16:19.0260976Z Received 1708418946 of 1708418946 (100.0%), 232.6 MBs/sec
2025-01-24T14:16:24.7684059Z Cache restored successfully
2025-01-24T14:16:25.0978099Z Cache restored from key: Linux-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-24T14:16:25.1148727Z ##[group]Run git lfs checkout
2025-01-24T14:16:25.1148995Z [36;1mgit lfs checkout[0m
2025-01-24T14:16:25.1176864Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-24T14:16:25.1177194Z env:
2025-01-24T14:16:25.1177373Z   CACHE_NUMBER: 0
2025-01-24T14:16:25.1177996Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:25.1178770Z   CODECOV_TOKEN: 
2025-01-24T14:16:25.1178963Z ##[endgroup]
2025-01-24T14:16:35.6120325Z Checking out LFS objects: 100% (204/204), 3.5 GB | 349 MB/s, done.
2025-01-24T14:16:39.0125019Z Prepare all required actions
2025-01-24T14:16:39.0125378Z Getting action download info
2025-01-24T14:16:39.1779669Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-24T14:16:39.6036830Z ##[group]Run ./.github/actions/setup_env
2025-01-24T14:16:39.6037104Z with:
2025-01-24T14:16:39.6037303Z   os-label: linux-64
2025-01-24T14:16:39.6037495Z env:
2025-01-24T14:16:39.6037662Z   CACHE_NUMBER: 0
2025-01-24T14:16:39.6038510Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:39.6039223Z   CODECOV_TOKEN: 
2025-01-24T14:16:39.6039420Z ##[endgroup]
2025-01-24T14:16:39.6060312Z ##[group]Run file_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-24T14:16:39.6060813Z [36;1mfile_hash=$(cat conda-linux-64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-24T14:16:39.6061269Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-24T14:16:39.6088214Z shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-24T14:16:39.6088660Z env:
2025-01-24T14:16:39.6088827Z   CACHE_NUMBER: 0
2025-01-24T14:16:39.6089435Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:39.6090082Z   CODECOV_TOKEN: 
2025-01-24T14:16:39.6090270Z ##[endgroup]
2025-01-24T14:16:39.6716916Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-24T14:16:39.6717196Z with:
2025-01-24T14:16:39.6717392Z   environment-file: conda-linux-64.lock
2025-01-24T14:16:39.6717813Z   cache-environment-key: d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee
2025-01-24T14:16:39.6718767Z   cache-downloads-key: d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee
2025-01-24T14:16:39.6719177Z   environment-name: tardis
2025-01-24T14:16:39.6719675Z   cache-environment: true
2025-01-24T14:16:39.6719900Z   cache-downloads: true
2025-01-24T14:16:39.6720095Z env:
2025-01-24T14:16:39.6720259Z   CACHE_NUMBER: 0
2025-01-24T14:16:39.6720875Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:39.6721503Z   CODECOV_TOKEN: 
2025-01-24T14:16:39.6721688Z ##[endgroup]
2025-01-24T14:16:39.8089078Z Will download micromamba to /home/runner/micromamba-bin/micromamba
2025-01-24T14:16:39.8098654Z ##[group]Install micromamba
2025-01-24T14:16:40.1047528Z micromamba installed to /home/runner/micromamba-bin/micromamba
2025-01-24T14:16:40.1048524Z ##[endgroup]
2025-01-24T14:16:40.1049713Z Adding conda-forge to condarc channels ...
2025-01-24T14:16:40.1061915Z ##[group]Initialize micromamba for bash.
2025-01-24T14:16:40.1087625Z [command]/home/runner/micromamba-bin/micromamba shell init -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:16:40.1209614Z Modifying RC file "/home/runner/.bashrc"
2025-01-24T14:16:40.1210740Z Generating config for root prefix [1m"/home/runner/micromamba"[0m
2025-01-24T14:16:40.1214353Z Setting mamba executable to: [1m"/home/runner/micromamba-bin/micromamba"[0m
2025-01-24T14:16:40.1215141Z Adding (or replacing) the following in your "/home/runner/.bashrc" file
2025-01-24T14:16:40.1215582Z 
2025-01-24T14:16:40.1215713Z # >>> mamba initialize >>>
2025-01-24T14:16:40.1216157Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-24T14:16:40.1216746Z export MAMBA_EXE='/home/runner/micromamba-bin/micromamba';
2025-01-24T14:16:40.1217334Z export MAMBA_ROOT_PREFIX='/home/runner/micromamba';
2025-01-24T14:16:40.1218088Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-24T14:16:40.1218978Z if [ $? -eq 0 ]; then
2025-01-24T14:16:40.1219307Z     eval "$__mamba_setup"
2025-01-24T14:16:40.1219531Z else
2025-01-24T14:16:40.1220056Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-24T14:16:40.1220411Z fi
2025-01-24T14:16:40.1220562Z unset __mamba_setup
2025-01-24T14:16:40.1220752Z # <<< mamba initialize <<<
2025-01-24T14:16:40.1220885Z 
2025-01-24T14:16:40.1236301Z Moving mamba initialize block to .bash_profile
2025-01-24T14:16:40.1249654Z ##[endgroup]
2025-01-24T14:16:40.1251065Z ##[group]Restoring downloads from `/home/runner/micromamba/pkgs` ...
2025-01-24T14:16:41.3691303Z Received 213909504 of 356800233 (60.0%), 203.8 MBs/sec
2025-01-24T14:16:41.8602292Z Cache Size: ~340 MB (356800233 B)
2025-01-24T14:16:41.8705162Z [command]/usr/bin/tar -xf /home/runner/work/_temp/a7640bcd-420c-4cdd-9da8-ca601d009d3b/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-24T14:16:42.3423527Z Cache restored successfully
2025-01-24T14:16:42.3702790Z Received 356800233 of 356800233 (100.0%), 169.9 MBs/sec
2025-01-24T14:16:42.4165922Z Restored cache with key `d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-linux-64`
2025-01-24T14:16:42.4168065Z ##[endgroup]
2025-01-24T14:16:42.4178761Z ##[group]Restoring environment `tardis` from `/home/runner/micromamba/envs/tardis` ...
2025-01-24T14:16:43.5643818Z Received 201326592 of 444592193 (45.3%), 191.8 MBs/sec
2025-01-24T14:16:44.3735316Z Cache Size: ~424 MB (444592193 B)
2025-01-24T14:16:44.3879602Z [command]/usr/bin/tar -xf /home/runner/work/_temp/1d6b12eb-9fa0-44a6-8022-8a308b782163/cache.tzst -P -C /home/runner/work/tardis/tardis --use-compress-program unzstd
2025-01-24T14:16:44.5651223Z Received 444592193 of 444592193 (100.0%), 211.9 MBs/sec
2025-01-24T14:16:49.8454825Z Cache restored successfully
2025-01-24T14:16:49.9324442Z Restored cache with key `d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee-linux-64-tardis-args-4f53cda-root-dcc80ee-bin-[object Promise]-file-d7cd390425b0fd3cf82649dcc003efba9915fb4928f15d342148c3ccffcbe2ee`
2025-01-24T14:16:49.9326879Z ##[endgroup]
2025-01-24T14:16:49.9327269Z Adding environment tardis to auto-activate bash ...
2025-01-24T14:16:49.9336848Z Generating micromamba run shell.
2025-01-24T14:16:49.9348942Z ##[endgroup]
2025-01-24T14:16:49.9355176Z Set environment variables.
2025-01-24T14:16:49.9360135Z ##[group]micromamba info
2025-01-24T14:16:49.9363757Z [command]/home/runner/micromamba-bin/micromamba info -r /home/runner/micromamba -n tardis
2025-01-24T14:16:49.9624082Z 
2025-01-24T14:16:49.9625029Z        libmamba version : 1.5.10
2025-01-24T14:16:49.9625945Z      micromamba version : 1.5.10
2025-01-24T14:16:49.9627823Z            curl version : libcurl/8.10.1 OpenSSL/3.3.2 zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-24T14:16:49.9629096Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-24T14:16:49.9629979Z        envs directories : /home/runner/micromamba/envs
2025-01-24T14:16:49.9632047Z           package cache : /home/runner/micromamba/pkgs
2025-01-24T14:16:49.9632789Z                           /home/runner/.mamba/pkgs
2025-01-24T14:16:49.9633479Z             environment : tardis
2025-01-24T14:16:49.9633920Z            env location : /home/runner/micromamba/envs/tardis
2025-01-24T14:16:49.9634452Z       user config files : /home/runner/.mambarc
2025-01-24T14:16:49.9635073Z  populated config files : /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:16:49.9637180Z        virtual packages : __unix=0=0
2025-01-24T14:16:49.9637656Z                           __linux=6.8.0=0
2025-01-24T14:16:49.9638062Z                           __glibc=2.39=0
2025-01-24T14:16:49.9638682Z                           __archspec=1=x86_64_v3
2025-01-24T14:16:49.9639272Z                channels : https://conda.anaconda.org/conda-forge/linux-64
2025-01-24T14:16:49.9639873Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-24T14:16:49.9640416Z        base environment : /home/runner/micromamba
2025-01-24T14:16:49.9640858Z                platform : linux-64
2025-01-24T14:16:49.9641593Z ##[endgroup]
2025-01-24T14:16:49.9642470Z ##[group]micromamba list
2025-01-24T14:16:49.9643398Z [command]/home/runner/micromamba-bin/micromamba list -r /home/runner/micromamba -n tardis
2025-01-24T14:16:50.4379741Z List of packages in environment: "/home/runner/micromamba/envs/tardis"
2025-01-24T14:16:50.4380239Z 
2025-01-24T14:16:50.4380493Z   Name                           Version              Build                    Channel    
2025-01-24T14:16:50.4381562Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-24T14:16:50.4382243Z   _libgcc_mutex                  0.1                  conda_forge              conda-forge
2025-01-24T14:16:50.4382887Z   _openmp_mutex                  4.5                  2_gnu                    conda-forge
2025-01-24T14:16:50.4383521Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4384123Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4384602Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4385082Z   argon2-cffi-bindings           21.2.0               py312h98912ed_4          conda-forge
2025-01-24T14:16:50.4385506Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4385875Z   astropy                        6.1.1                py312h085067d_0          conda-forge
2025-01-24T14:16:50.4386507Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4387274Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4387961Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4388865Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4389863Z   atk-1.0                        2.38.0               h04ea711_2               conda-forge
2025-01-24T14:16:50.4390509Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-24T14:16:50.4391077Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4391721Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-01-24T14:16:50.4392364Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4392960Z   blosc                          1.21.5               hc2324a3_1               conda-forge
2025-01-24T14:16:50.4393530Z   brotli                         1.1.0                hd590300_1               conda-forge
2025-01-24T14:16:50.4394133Z   brotli-bin                     1.1.0                hd590300_1               conda-forge
2025-01-24T14:16:50.4394770Z   brotli-python                  1.1.0                py312h30efb56_1          conda-forge
2025-01-24T14:16:50.4395405Z   bzip2                          1.0.8                hd590300_5               conda-forge
2025-01-24T14:16:50.4395953Z   c-ares                         1.28.1               hd590300_0               conda-forge
2025-01-24T14:16:50.4396521Z   c-blosc2                       2.14.4               hb4ffafa_1               conda-forge
2025-01-24T14:16:50.4397182Z   ca-certificates                2024.6.2             hbcca054_0               conda-forge
2025-01-24T14:16:50.4397881Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-24T14:16:50.4398705Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-24T14:16:50.4399336Z   cairo                          1.18.0               h3faef2a_0               conda-forge
2025-01-24T14:16:50.4400071Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4401015Z   cffi                           1.16.0               py312hf06ca03_0          conda-forge
2025-01-24T14:16:50.4401863Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4402871Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-01-24T14:16:50.4403659Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4404646Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4405406Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4406163Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-24T14:16:50.4407013Z   contourpy                      1.2.1                py312h8572e83_0          conda-forge
2025-01-24T14:16:50.4407819Z   coverage                       7.5.3                py312h9a8786e_0          conda-forge
2025-01-24T14:16:50.4408786Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4409649Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-24T14:16:50.4410487Z   debugpy                        1.8.1                py312h30efb56_0          conda-forge
2025-01-24T14:16:50.4493465Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4494304Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4494978Z   docutils                       0.20.1               py312h7900ff3_3          conda-forge
2025-01-24T14:16:50.4495625Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4496293Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4497026Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-24T14:16:50.4498007Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4498805Z   expat                          2.6.2                h59595ed_0               conda-forge
2025-01-24T14:16:50.4499469Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-24T14:16:50.4500203Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-24T14:16:50.4500943Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-24T14:16:50.4501652Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-01-24T14:16:50.4502285Z   fontconfig                     2.14.2               h14ed4e7_0               conda-forge
2025-01-24T14:16:50.4502948Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-24T14:16:50.4503632Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-24T14:16:50.4504322Z   fonttools                      4.53.0               py312h9a8786e_0          conda-forge
2025-01-24T14:16:50.4504906Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4505506Z   freetype                       2.12.1               h267a509_2               conda-forge
2025-01-24T14:16:50.4506114Z   fribidi                        1.0.10               h36c2ea0_0               conda-forge
2025-01-24T14:16:50.4506716Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4507342Z   gdk-pixbuf                     2.42.12              hb9ae30d_0               conda-forge
2025-01-24T14:16:50.4508059Z   giflib                         5.2.2                hd590300_0               conda-forge
2025-01-24T14:16:50.4509021Z   git-lfs                        3.5.1                ha770c72_0               conda-forge
2025-01-24T14:16:50.4509633Z   gmp                            6.3.0                h59595ed_1               conda-forge
2025-01-24T14:16:50.4510219Z   gmpy2                          2.1.5                py312h1d5cde6_1          conda-forge
2025-01-24T14:16:50.4510846Z   graphite2                      1.3.13               h59595ed_1003            conda-forge
2025-01-24T14:16:50.4511472Z   graphviz                       11.0.0               hc68bbd7_0               conda-forge
2025-01-24T14:16:50.4512069Z   gtk2                           2.24.33              h280cfa0_4               conda-forge
2025-01-24T14:16:50.4512629Z   gts                            0.7.6                h977cf35_4               conda-forge
2025-01-24T14:16:50.4513188Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4513739Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4514311Z   h5py                           3.11.0               nompi_py312hb7ab980_102  conda-forge
2025-01-24T14:16:50.4514915Z   harfbuzz                       8.5.0                hfac3d4d_0               conda-forge
2025-01-24T14:16:50.4515520Z   hdf5                           1.14.3               nompi_hdf9ad27_105       conda-forge
2025-01-24T14:16:50.4516110Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-01-24T14:16:50.4516724Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4517349Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4517981Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4518710Z   icu                            73.2                 h59595ed_0               conda-forge
2025-01-24T14:16:50.4519273Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4520058Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4520766Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-24T14:16:50.4521518Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-24T14:16:50.4522276Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4522980Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4523617Z   ipykernel                      6.29.4               pyh3099207_0             conda-forge
2025-01-24T14:16:50.4524242Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-24T14:16:50.4524903Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-01-24T14:16:50.4525598Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4526276Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4526927Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4527522Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4528119Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4528859Z   jsonpointer                    3.0.0                py312h7900ff3_0          conda-forge
2025-01-24T14:16:50.4529500Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4530247Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4531270Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4532036Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4532682Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4533336Z   jupyter_core                   5.7.2                py312h7900ff3_0          conda-forge
2025-01-24T14:16:50.4533982Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4534649Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4535362Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4536071Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4536756Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-01-24T14:16:50.4537445Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4538129Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4538892Z   keyutils                       1.6.1                h166bdaf_0               conda-forge
2025-01-24T14:16:50.4539483Z   kiwisolver                     1.4.5                py312h8572e83_1          conda-forge
2025-01-24T14:16:50.4540054Z   krb5                           1.21.2               h659d440_0               conda-forge
2025-01-24T14:16:50.4540635Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-24T14:16:50.4541218Z   lcms2                          2.16                 hb7c19ff_0               conda-forge
2025-01-24T14:16:50.4541840Z   ld_impl_linux-64               2.40                 hf3520f5_7               conda-forge
2025-01-24T14:16:50.4542446Z   lerc                           4.0.0                h27087fc_0               conda-forge
2025-01-24T14:16:50.4543186Z   libaec                         1.1.3                h59595ed_0               conda-forge
2025-01-24T14:16:50.4543801Z   libblas                        3.9.0                22_linux64_openblas      conda-forge
2025-01-24T14:16:50.4544490Z   libbrotlicommon                1.1.0                hd590300_1               conda-forge
2025-01-24T14:16:50.4545179Z   libbrotlidec                   1.1.0                hd590300_1               conda-forge
2025-01-24T14:16:50.4545842Z   libbrotlienc                   1.1.0                hd590300_1               conda-forge
2025-01-24T14:16:50.4546501Z   libcblas                       3.9.0                22_linux64_openblas      conda-forge
2025-01-24T14:16:50.4547122Z   libcurl                        8.8.0                hca28451_0               conda-forge
2025-01-24T14:16:50.4547742Z   libdeflate                     1.20                 hd590300_0               conda-forge
2025-01-24T14:16:50.4548562Z   libedit                        3.1.20191231         he28a2e2_2               conda-forge
2025-01-24T14:16:50.4549178Z   libev                          4.33                 hd590300_2               conda-forge
2025-01-24T14:16:50.4549776Z   libexpat                       2.6.2                h59595ed_0               conda-forge
2025-01-24T14:16:50.4550372Z   libffi                         3.4.2                h7f98852_5               conda-forge
2025-01-24T14:16:50.4550967Z   libgcc-ng                      13.2.0               h77fa898_10              conda-forge
2025-01-24T14:16:50.4551565Z   libgd                          2.3.3                h119a65a_9               conda-forge
2025-01-24T14:16:50.4552203Z   libgfortran-ng                 13.2.0               h69a702a_10              conda-forge
2025-01-24T14:16:50.4552889Z   libgfortran5                   13.2.0               h3d2ce59_10              conda-forge
2025-01-24T14:16:50.4553508Z   libglib                        2.80.2               h8a4344b_1               conda-forge
2025-01-24T14:16:50.4554243Z   libgomp                        13.2.0               h77fa898_10              conda-forge
2025-01-24T14:16:50.4554821Z   libiconv                       1.17                 hd590300_2               conda-forge
2025-01-24T14:16:50.4555454Z   libjpeg-turbo                  3.0.0                hd590300_1               conda-forge
2025-01-24T14:16:50.4556121Z   liblapack                      3.9.0                22_linux64_openblas      conda-forge
2025-01-24T14:16:50.4556749Z   libllvm14                      14.0.6               hcd5def8_4               conda-forge
2025-01-24T14:16:50.4557188Z   libnghttp2                     1.58.0               h47da74e_1               conda-forge
2025-01-24T14:16:50.4557589Z   libnsl                         2.0.1                hd590300_0               conda-forge
2025-01-24T14:16:50.4558018Z   libopenblas                    0.3.27               pthreads_h413a1c8_0      conda-forge
2025-01-24T14:16:50.4558673Z   libpng                         1.6.43               h2797004_0               conda-forge
2025-01-24T14:16:50.4559058Z   librsvg                        2.58.1               hadf69e7_0               conda-forge
2025-01-24T14:16:50.4559468Z   libsodium                      1.0.18               h36c2ea0_1               conda-forge
2025-01-24T14:16:50.4559873Z   libsqlite                      3.46.0               hde9e2c9_0               conda-forge
2025-01-24T14:16:50.4560260Z   libssh2                        1.11.0               h0841786_0               conda-forge
2025-01-24T14:16:50.4560657Z   libstdcxx-ng                   13.2.0               hc0a3c3a_10              conda-forge
2025-01-24T14:16:50.4561065Z   libtiff                        4.6.0                h1dd3fc0_3               conda-forge
2025-01-24T14:16:50.4561450Z   libuuid                        2.38.1               h0b41bf4_0               conda-forge
2025-01-24T14:16:50.4561830Z   libwebp                        1.4.0                h2c329e2_0               conda-forge
2025-01-24T14:16:50.4562411Z   libwebp-base                   1.4.0                hd590300_0               conda-forge
2025-01-24T14:16:50.4562812Z   libxcb                         1.15                 h0b41bf4_0               conda-forge
2025-01-24T14:16:50.4563202Z   libxcrypt                      4.4.36               hd590300_1               conda-forge
2025-01-24T14:16:50.4563608Z   libxml2                        2.12.7               hc051c1a_1               conda-forge
2025-01-24T14:16:50.4564014Z   libxslt                        1.1.39               h76b75d6_0               conda-forge
2025-01-24T14:16:50.4564408Z   libzlib                        1.3.1                h4ab18f5_1               conda-forge
2025-01-24T14:16:50.4564809Z   llvmlite                       0.42.0               py312hb06c811_1          conda-forge
2025-01-24T14:16:50.4565209Z   lxml                           5.2.2                py312hb90d8a5_0          conda-forge
2025-01-24T14:16:50.4565580Z   lz4-c                          1.9.4                hcb278e6_0               conda-forge
2025-01-24T14:16:50.4565941Z   lzo                            2.10                 hd590300_1001            conda-forge
2025-01-24T14:16:50.4566329Z   markupsafe                     2.1.5                py312h98912ed_0          conda-forge
2025-01-24T14:16:50.4566767Z   matplotlib-base                3.8.4                py312h20ab3a6_2          conda-forge
2025-01-24T14:16:50.4567227Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4567672Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4568048Z   mpc                            1.3.1                hfe3b2da_0               conda-forge
2025-01-24T14:16:50.4568602Z   mpfr                           4.2.1                h9458935_1               conda-forge
2025-01-24T14:16:50.4568979Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4569531Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-24T14:16:50.4569977Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-01-24T14:16:50.4570412Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4570834Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4571239Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-01-24T14:16:50.4571663Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-01-24T14:16:50.4572123Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-01-24T14:16:50.4572564Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4572974Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4573372Z   ncurses                        6.5                  h59595ed_0               conda-forge
2025-01-24T14:16:50.4573772Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4574185Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-24T14:16:50.4574564Z   nomkl                          1.0                  h5ca1d4c_0               conda-forge
2025-01-24T14:16:50.4574948Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4575363Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4575773Z   numba                          0.59.1               py312hacefee8_0          conda-forge
2025-01-24T14:16:50.4576158Z   numexpr                        2.10.0               py312hf412c99_100        conda-forge
2025-01-24T14:16:50.4576668Z   numpy                          1.26.4               py312heda63a1_0          conda-forge
2025-01-24T14:16:50.4577059Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-01-24T14:16:50.4577469Z   openjpeg                       2.5.2                h488ebb8_0               conda-forge
2025-01-24T14:16:50.4577877Z   openssl                        3.3.1                h4ab18f5_0               conda-forge
2025-01-24T14:16:50.4578505Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4578942Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4579352Z   pandas                         2.2.2                py312h1d6d2e6_1          conda-forge
2025-01-24T14:16:50.4579764Z   pandoc                         3.2                  ha770c72_0               conda-forge
2025-01-24T14:16:50.4580177Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4580593Z   pango                          1.54.0               h84a9a3c_0               conda-forge
2025-01-24T14:16:50.4580970Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4581373Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4581764Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4582145Z   pcre2                          10.44                h0f59acf_0               conda-forge
2025-01-24T14:16:50.4582534Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4582945Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-01-24T14:16:50.4583353Z   pillow                         10.3.0               py312hdcec9eb_0          conda-forge
2025-01-24T14:16:50.4583863Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4584243Z   pixman                         0.43.2               h59595ed_0               conda-forge
2025-01-24T14:16:50.4584695Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-01-24T14:16:50.4585160Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4585568Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4585957Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4586381Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4586840Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-24T14:16:50.4587261Z   psutil                         5.9.8                py312h98912ed_0          conda-forge
2025-01-24T14:16:50.4587671Z   pthread-stubs                  0.4                  h36c2ea0_1001            conda-forge
2025-01-24T14:16:50.4588090Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-01-24T14:16:50.4588692Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4589100Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4589508Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-01-24T14:16:50.4589930Z   pybtex-docutils                1.0.3                py312h7900ff3_1          conda-forge
2025-01-24T14:16:50.4590363Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4590769Z   pyerfa                         2.0.1.4              py312h085067d_1          conda-forge
2025-01-24T14:16:50.4591299Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4591709Z   pygraphviz                     1.13                 py312h4a1d8a7_1          conda-forge
2025-01-24T14:16:50.4592126Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4592529Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-01-24T14:16:50.4592922Z   pytables                       3.9.2                py312h96d95ec_2          conda-forge
2025-01-24T14:16:50.4593313Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4593714Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4594164Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4594625Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4595070Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4595507Z   python                         3.12.4               h194c7f8_0_cpython       conda-forge
2025-01-24T14:16:50.4595933Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4596415Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4596921Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4597386Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4597814Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-01-24T14:16:50.4598196Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4599297Z   pyyaml                         6.0.1                py312h98912ed_1          conda-forge
2025-01-24T14:16:50.4599901Z   pyzmq                          26.0.3               py312h8fd38d8_0          conda-forge
2025-01-24T14:16:50.4600491Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-24T14:16:50.4601032Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4601464Z   readline                       8.2                  h8228510_1               conda-forge
2025-01-24T14:16:50.4601867Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4602300Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4602723Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4603157Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4603633Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-24T14:16:50.4604050Z   rpds-py                        0.18.1               py312h4413252_0          conda-forge
2025-01-24T14:16:50.4604461Z   ruff                           0.4.9                py312h5715c7c_0          conda-forge
2025-01-24T14:16:50.4604833Z   scipy                          1.13.1               py312hc2bc53b_0          conda-forge
2025-01-24T14:16:50.4605232Z   send2trash                     1.8.3                pyh0d859eb_0             conda-forge
2025-01-24T14:16:50.4605646Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4606081Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4606519Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-01-24T14:16:50.4607052Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-01-24T14:16:50.4607445Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4607835Z   snappy                         1.2.0                hdb0a2a9_1               conda-forge
2025-01-24T14:16:50.4608421Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4608864Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4609306Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-24T14:16:50.4609710Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4610129Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4610590Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-24T14:16:50.4611057Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4611518Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4612004Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4612475Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-24T14:16:50.4612935Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-24T14:16:50.4613439Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4613988Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4614491Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4615133Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4615648Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4616136Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4616630Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4617173Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4617665Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4618061Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-24T14:16:50.4618607Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-01-24T14:16:50.4619011Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4619423Z   terminado                      0.18.1               pyh0d859eb_0             conda-forge
2025-01-24T14:16:50.4619827Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4620205Z   tk                             8.6.13               noxft_h4845f30_101       conda-forge
2025-01-24T14:16:50.4620564Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4620941Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4621339Z   tornado                        6.4.1                py312h9a8786e_0          conda-forge
2025-01-24T14:16:50.4621721Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4622111Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4622526Z   typed-ast                      1.5.5                py312h98912ed_1          conda-forge
2025-01-24T14:16:50.4623138Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4623641Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-01-24T14:16:50.4624105Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-01-24T14:16:50.4624543Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4624956Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-01-24T14:16:50.4625364Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4625773Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4626171Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4626588Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4627017Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-01-24T14:16:50.4627477Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4627905Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-24T14:16:50.4628480Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4628942Z   xorg-kbproto                   1.0.7                h7f98852_1002            conda-forge
2025-01-24T14:16:50.4629352Z   xorg-libice                    1.1.1                hd590300_0               conda-forge
2025-01-24T14:16:50.4629754Z   xorg-libsm                     1.2.4                h7391055_0               conda-forge
2025-01-24T14:16:50.4630276Z   xorg-libx11                    1.8.9                h8ee46fc_0               conda-forge
2025-01-24T14:16:50.4630693Z   xorg-libxau                    1.0.11               hd590300_0               conda-forge
2025-01-24T14:16:50.4631104Z   xorg-libxdmcp                  1.1.3                h7f98852_0               conda-forge
2025-01-24T14:16:50.4631524Z   xorg-libxext                   1.3.4                h0b41bf4_2               conda-forge
2025-01-24T14:16:50.4631951Z   xorg-libxrender                0.9.11               hd590300_0               conda-forge
2025-01-24T14:16:50.4632401Z   xorg-renderproto               0.11.1               h7f98852_1002            conda-forge
2025-01-24T14:16:50.4632842Z   xorg-xextproto                 7.3.0                h0b41bf4_1003            conda-forge
2025-01-24T14:16:50.4633270Z   xorg-xproto                    7.0.31               h7f98852_1007            conda-forge
2025-01-24T14:16:50.4633648Z   xz                             5.2.6                h166bdaf_0               conda-forge
2025-01-24T14:16:50.4634006Z   yaml                           0.2.5                h7f98852_2               conda-forge
2025-01-24T14:16:50.4634370Z   zeromq                         4.3.5                h75354e8_4               conda-forge
2025-01-24T14:16:50.4634742Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-24T14:16:50.4635112Z   zlib                           1.3.1                h4ab18f5_1               conda-forge
2025-01-24T14:16:50.4635474Z   zlib-ng                        2.0.7                h0b41bf4_0               conda-forge
2025-01-24T14:16:50.4635836Z   zstd                           1.5.6                ha6fb4c9_0               conda-forge
2025-01-24T14:16:50.4636427Z ##[endgroup]
2025-01-24T14:16:50.4670714Z ##[group]Run pip install -e . --user
2025-01-24T14:16:50.4671100Z [36;1mpip install -e . --user[0m
2025-01-24T14:16:50.4701436Z shell: /usr/bin/bash -l {0}
2025-01-24T14:16:50.4701718Z env:
2025-01-24T14:16:50.4702087Z   CACHE_NUMBER: 0
2025-01-24T14:16:50.4702850Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:50.4703621Z   CODECOV_TOKEN: 
2025-01-24T14:16:50.4703894Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-24T14:16:50.4704303Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-24T14:16:50.4704730Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:16:50.4705102Z ##[endgroup]
2025-01-24T14:16:51.8935068Z Obtaining file:///home/runner/work/tardis/tardis
2025-01-24T14:16:51.8968886Z   Installing build dependencies: started
2025-01-24T14:16:55.4934064Z   Installing build dependencies: finished with status 'done'
2025-01-24T14:16:55.4939154Z   Checking if build backend supports build_editable: started
2025-01-24T14:16:55.6176113Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-24T14:16:55.6184086Z   Getting requirements to build editable: started
2025-01-24T14:16:56.0729531Z   Getting requirements to build editable: finished with status 'done'
2025-01-24T14:16:56.0738955Z   Preparing editable metadata (pyproject.toml): started
2025-01-24T14:16:56.5260321Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-24T14:16:56.5849964Z Requirement already satisfied: astropy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-24T14:16:56.6262927Z Requirement already satisfied: numpy>=1.23 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-01-24T14:16:56.6273024Z Requirement already satisfied: pyerfa>=2.0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-24T14:16:56.6283328Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-24T14:16:56.6291712Z Requirement already satisfied: PyYAML>=3.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-24T14:16:56.6301228Z Requirement already satisfied: packaging>=19.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-24T14:16:56.6389264Z Building wheels for collected packages: tardis
2025-01-24T14:16:56.6398215Z   Building editable for tardis (pyproject.toml): started
2025-01-24T14:16:57.3954177Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-24T14:16:57.3960954Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8876 sha256=67a10c3b1f669cdd1813298f80c9ee5f1c2dc2e0b8957d74cd972123ce2bd531
2025-01-24T14:16:57.3962562Z   Stored in directory: /tmp/pip-ephem-wheel-cache-2sicpoic/wheels/6a/c7/ae/89fa6dc2565455898176888ef0e2e475e4e90eb0124afcb995
2025-01-24T14:16:57.3988396Z Successfully built tardis
2025-01-24T14:16:58.1675844Z Installing collected packages: tardis
2025-01-24T14:16:58.1765974Z Successfully installed tardis-0.0.0
2025-01-24T14:16:58.6387565Z ##[group]Run pip install qgridnext
2025-01-24T14:16:58.6387907Z [36;1mpip install qgridnext[0m
2025-01-24T14:16:58.6415378Z shell: /usr/bin/bash -l {0}
2025-01-24T14:16:58.6415626Z env:
2025-01-24T14:16:58.6415806Z   CACHE_NUMBER: 0
2025-01-24T14:16:58.6416426Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:58.6417082Z   CODECOV_TOKEN: 
2025-01-24T14:16:58.6417306Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-24T14:16:58.6417627Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-24T14:16:58.6417981Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:16:58.6418458Z ##[endgroup]
2025-01-24T14:16:59.2538609Z Collecting qgridnext
2025-01-24T14:16:59.2720866Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-24T14:16:59.2807064Z Requirement already satisfied: pandas>=0.20.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-24T14:16:59.2816196Z Requirement already satisfied: ipywidgets>=7.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-24T14:16:59.2826082Z Requirement already satisfied: numpy in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-01-24T14:16:59.2836619Z Requirement already satisfied: traitlets in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-24T14:16:59.2920185Z Requirement already satisfied: comm>=0.1.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-24T14:16:59.2929319Z Requirement already satisfied: ipython-genutils~=0.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-24T14:16:59.2942794Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-24T14:16:59.2961092Z Requirement already satisfied: ipython>=4.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-24T14:16:59.2975786Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-24T14:16:59.3415082Z Requirement already satisfied: python-dateutil>=2.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-01-24T14:16:59.3427950Z Requirement already satisfied: pytz>=2020.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-24T14:16:59.3435872Z Requirement already satisfied: tzdata>=2022.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-24T14:16:59.3747878Z Requirement already satisfied: decorator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-24T14:16:59.3761806Z Requirement already satisfied: jedi>=0.16 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-24T14:16:59.3770056Z Requirement already satisfied: matplotlib-inline in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-24T14:16:59.3780566Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-24T14:16:59.3789552Z Requirement already satisfied: pygments>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-24T14:16:59.3798965Z Requirement already satisfied: stack-data in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-24T14:16:59.3817591Z Requirement already satisfied: pexpect>4.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-24T14:16:59.3865589Z Requirement already satisfied: six>=1.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-24T14:16:59.3922161Z Requirement already satisfied: notebook>=4.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-24T14:16:59.4108198Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-24T14:16:59.4251193Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-24T14:16:59.4264717Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-24T14:16:59.4280552Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-24T14:16:59.4290983Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-24T14:16:59.4299207Z Requirement already satisfied: tornado>=6.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-24T14:16:59.4330756Z Requirement already satisfied: ptyprocess>=0.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-24T14:16:59.4359793Z Requirement already satisfied: wcwidth in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-24T14:16:59.4496595Z Requirement already satisfied: executing>=1.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-24T14:16:59.4507201Z Requirement already satisfied: asttokens>=2.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-24T14:16:59.4515090Z Requirement already satisfied: pure-eval in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-24T14:16:59.4856023Z Requirement already satisfied: anyio>=3.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-24T14:16:59.4866603Z Requirement already satisfied: argon2-cffi>=21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-24T14:16:59.4875759Z Requirement already satisfied: jinja2>=3.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-24T14:16:59.4887449Z Requirement already satisfied: jupyter-client>=7.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-24T14:16:59.4901596Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-24T14:16:59.4914375Z Requirement already satisfied: jupyter-events>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-24T14:16:59.4925418Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-24T14:16:59.4938963Z Requirement already satisfied: nbconvert>=6.4.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-24T14:16:59.4949078Z Requirement already satisfied: nbformat>=5.3.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-24T14:16:59.4958403Z Requirement already satisfied: overrides>=5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-24T14:16:59.4967751Z Requirement already satisfied: packaging>=22.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-24T14:16:59.4976244Z Requirement already satisfied: prometheus-client>=0.9 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-24T14:16:59.4986907Z Requirement already satisfied: pyzmq>=24 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-24T14:16:59.4996212Z Requirement already satisfied: send2trash>=1.8.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-24T14:16:59.5007884Z Requirement already satisfied: terminado>=0.8.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-24T14:16:59.5025110Z Requirement already satisfied: websocket-client>=1.7 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-24T14:16:59.5305771Z Requirement already satisfied: async-lru>=1.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-24T14:16:59.5317474Z Requirement already satisfied: httpx>=0.25.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-24T14:16:59.5329664Z Requirement already satisfied: ipykernel>=6.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-24T14:16:59.5343888Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-24T14:16:59.5369611Z Requirement already satisfied: setuptools>=40.1.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-24T14:16:59.5565515Z Requirement already satisfied: babel>=2.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-24T14:16:59.5593988Z Requirement already satisfied: json5>=0.9.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-24T14:16:59.5605948Z Requirement already satisfied: jsonschema>=4.18.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-24T14:16:59.5625790Z Requirement already satisfied: requests>=2.31 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-24T14:16:59.5985086Z Requirement already satisfied: idna>=2.8 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-24T14:16:59.5994506Z Requirement already satisfied: sniffio>=1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-24T14:16:59.6088212Z Requirement already satisfied: argon2-cffi-bindings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-24T14:16:59.6262361Z Requirement already satisfied: certifi in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-01-24T14:16:59.6277537Z Requirement already satisfied: httpcore==1.* in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-24T14:16:59.6355357Z Requirement already satisfied: h11<0.15,>=0.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-24T14:16:59.6540865Z Requirement already satisfied: debugpy>=1.6.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-24T14:16:59.6562123Z Requirement already satisfied: nest-asyncio in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-24T14:16:59.6576307Z Requirement already satisfied: psutil in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-24T14:16:59.6640136Z Requirement already satisfied: MarkupSafe>=2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-24T14:16:59.6833832Z Requirement already satisfied: attrs>=22.2.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-24T14:16:59.6844516Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-24T14:16:59.6854293Z Requirement already satisfied: referencing>=0.28.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-24T14:16:59.6863554Z Requirement already satisfied: rpds-py>=0.7.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-24T14:16:59.7286675Z Requirement already satisfied: platformdirs>=2.5 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-24T14:16:59.7460020Z Requirement already satisfied: python-json-logger>=2.0.4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-24T14:16:59.7470043Z Requirement already satisfied: pyyaml>=5.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-24T14:16:59.7482472Z Requirement already satisfied: rfc3339-validator in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-24T14:16:59.7492509Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-24T14:16:59.7930724Z Requirement already satisfied: beautifulsoup4 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-24T14:16:59.7951495Z Requirement already satisfied: bleach!=5.0.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-24T14:16:59.7967069Z Requirement already satisfied: defusedxml in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-24T14:16:59.7983249Z Requirement already satisfied: jupyterlab-pygments in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-24T14:16:59.7996759Z Requirement already satisfied: mistune<4,>=2.0.3 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-24T14:16:59.8010185Z Requirement already satisfied: nbclient>=0.5.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-24T14:16:59.8028208Z Requirement already satisfied: pandocfilters>=1.4.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-24T14:16:59.8039077Z Requirement already satisfied: tinycss2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-24T14:16:59.8162214Z Requirement already satisfied: fastjsonschema>=2.15 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-24T14:16:59.8481225Z Requirement already satisfied: charset-normalizer<4,>=2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-24T14:16:59.8497675Z Requirement already satisfied: urllib3<3,>=1.21.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-24T14:16:59.9290654Z Requirement already satisfied: webencodings in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-24T14:16:59.9875801Z Requirement already satisfied: fqdn in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-24T14:16:59.9895501Z Requirement already satisfied: isoduration in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-24T14:16:59.9916695Z Requirement already satisfied: jsonpointer>1.13 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-24T14:16:59.9933283Z Requirement already satisfied: uri-template in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-24T14:16:59.9948175Z Requirement already satisfied: webcolors>=1.11 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-24T14:17:00.1025294Z Requirement already satisfied: cffi>=1.0.1 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-24T14:17:00.1129393Z Requirement already satisfied: soupsieve>1.2 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-24T14:17:00.1675022Z Requirement already satisfied: pycparser in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-24T14:17:00.2188849Z Requirement already satisfied: arrow>=0.15.0 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-24T14:17:00.2511552Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-24T14:17:00.2783332Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-24T14:17:00.2986328Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 70.9 MB/s eta 0:00:00
2025-01-24T14:17:01.1137129Z Installing collected packages: qgridnext
2025-01-24T14:17:01.1838701Z Successfully installed qgridnext-2.0.4
2025-01-24T14:17:01.3823764Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-24T14:17:01.3825097Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-24T14:17:01.3853403Z shell: /usr/bin/bash -l {0}
2025-01-24T14:17:01.3853649Z env:
2025-01-24T14:17:01.3853831Z   CACHE_NUMBER: 0
2025-01-24T14:17:01.3854466Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:17:01.3855123Z   CODECOV_TOKEN: 
2025-01-24T14:17:01.3855349Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-24T14:17:01.3855660Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-24T14:17:01.3856053Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:17:01.3856371Z ##[endgroup]
2025-01-24T14:17:11.1217314Z ============================= test session starts ==============================
2025-01-24T14:17:11.1218035Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-24T14:17:11.1218811Z rootdir: /home/runner/work/tardis/tardis
2025-01-24T14:17:11.1219281Z configfile: pyproject.toml
2025-01-24T14:17:11.1219884Z plugins: anyio-4.4.0, doctestplus-1.2.1, html-4.1.1, metadata-3.1.1, cov-5.0.0
2025-01-24T14:17:11.1220573Z collected 1796 items / 2 deselected / 1794 selected
2025-01-24T14:17:11.1220939Z 
2025-01-24T14:17:16.2023186Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-24T14:17:19.2863198Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-24T14:17:20.8903418Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-24T14:17:22.6586367Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-24T14:17:22.6676667Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-24T14:17:24.0210895Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-24T14:17:24.3652610Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-24T14:17:24.3668599Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-24T14:17:27.8263414Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-24T14:17:27.8390345Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-24T14:17:27.8656372Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-24T14:18:07.7470613Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-24T14:18:07.7623569Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-24T14:18:07.7743761Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-24T14:18:07.8089345Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-24T14:18:07.8334592Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-24T14:18:08.1836584Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-24T14:18:08.5210618Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-24T14:18:08.5418579Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-24T14:18:08.7422846Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-24T14:18:08.7493099Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-24T14:19:07.4234919Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-24T14:19:08.4193892Z ............                                                             [ 10%]
2025-01-24T14:19:11.4896476Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-24T14:19:11.5368987Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-24T14:19:12.8243907Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-24T14:19:14.1567004Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-24T14:19:15.7341106Z tardis/opacities/tests/test_tau_sobolev.py ..                            [ 12%]
2025-01-24T14:19:18.7082034Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-24T14:20:04.5179501Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-24T14:20:16.0639632Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-24T14:20:17.4659667Z tardis/plasma/tests/test_complete_plasmas.py .....................s..... [ 13%]
2025-01-24T14:20:20.3487580Z s....ssssss............s............ss.....s....ssssss............s..... [ 18%]
2025-01-24T14:20:22.3033086Z .......ss.....s....ssssss............s............ss.....s....ssssss.... [ 22%]
2025-01-24T14:20:25.1577739Z ........s............ss.....s........ss............s............ss.....s [ 26%]
2025-01-24T14:20:28.0055534Z ........ss............s............ss.....s....ssssss............s...... [ 30%]
2025-01-24T14:20:28.7460607Z ......ss.....s....ssssss............s............ss.....s.ss.ssssss..... [ 34%]
2025-01-24T14:20:31.6126418Z .......s............ss.....s....ssssss............s............ss.....s. [ 38%]
2025-01-24T14:20:34.7331481Z ...ssssss............s............ss.....s....ssssss............s....... [ 42%]
2025-01-24T14:20:37.7615183Z .....ss.....s....ssssss............s............s...........ssssss...... [ 46%]
2025-01-24T14:20:39.5629155Z ......s............s...........ssssss............s............s......... [ 50%]
2025-01-24T14:20:42.4333377Z ..ssssss............s............ss.....s....ssssss............s........ [ 54%]
2025-01-24T14:20:45.8869566Z ....ss.....s....ssssss..........................s.....s....ssss......... [ 58%]
2025-01-24T14:20:46.2072902Z ...................s.....s....ssss.......                                [ 60%]
2025-01-24T14:20:46.3166931Z tardis/plasma/tests/test_hdf_plasma.py ................................. [ 62%]
2025-01-24T14:20:46.3277957Z ......                                                                   [ 62%]
2025-01-24T14:20:46.4543032Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-24T14:23:01.6602778Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-24T14:23:01.6630578Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-24T14:23:24.6524488Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-24T14:23:37.6858802Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-24T14:23:38.4346862Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-24T14:23:46.9792641Z tardis/simulation/tests/test_simulation.py .............                 [ 65%]
2025-01-24T14:23:46.9983591Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-24T14:23:47.4908737Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-24T14:23:47.4981918Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-24T14:23:49.1025587Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-24T14:23:49.1219383Z ..........                                                               [ 69%]
2025-01-24T14:23:49.2965538Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-24T14:23:49.3301815Z .........                                                                [ 72%]
2025-01-24T14:24:08.4098198Z tardis/spectrum/tests/test_spectrum_solver.py ....                       [ 72%]
2025-01-24T14:25:09.9049579Z tardis/tests/test_tardis_full.py ....                                    [ 72%]
2025-01-24T14:26:33.9059443Z tardis/tests/test_tardis_full_formal_integral.py ................        [ 73%]
2025-01-24T14:26:33.9804918Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-24T14:26:36.5720956Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-24T14:26:44.0460557Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-24T14:26:44.2565107Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-24T14:26:44.2737179Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-24T14:26:44.3149075Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-24T14:26:53.0888068Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py x..       [ 81%]
2025-01-24T14:26:53.0955654Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-24T14:26:58.8981259Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-24T14:26:59.3829046Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-24T14:27:00.8689086Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-24T14:27:01.0000025Z XX.........                                                              [ 84%]
2025-01-24T14:27:01.0278670Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-24T14:27:01.3293859Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-24T14:27:01.7306215Z .....                                                                    [ 85%]
2025-01-24T14:27:36.5126926Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ......         [ 85%]
2025-01-24T14:27:36.5407001Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-24T14:27:36.5437993Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-24T14:27:38.9381326Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-24T14:27:38.9554411Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-24T14:27:42.3681825Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py . [ 86%]
2025-01-24T14:27:42.3684188Z                                                                          [ 86%]
2025-01-24T14:27:43.1113083Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-24T14:27:44.4492579Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-24T14:27:46.6349814Z ......                                                                   [ 88%]
2025-01-24T14:27:51.9771206Z tardis/visualization/tools/tests/test_liv_plot.py EEEEEEEEEEEEEEEEEEEEEE [ 90%]
2025-01-24T14:27:54.2338552Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                            [ 91%]
2025-01-24T14:27:57.0577267Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-24T14:28:04.0623597Z ....                                                                     [ 92%]
2025-01-24T14:28:09.5762195Z tardis/visualization/tools/tests/test_sdec_plot.py EEEEEEEEEEEEEEEEEEEEE [ 94%]
2025-01-24T14:28:12.2711177Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                           [ 95%]
2025-01-24T14:28:12.6972305Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-24T14:28:12.7674517Z ....                                                                     [ 96%]
2025-01-24T14:28:13.8080025Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-24T14:28:14.4282343Z ..................                                                       [ 98%]
2025-01-24T14:29:17.8333068Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-24T14:29:24.3847615Z ......                                                                   [100%]
2025-01-24T14:29:24.3848172Z 
2025-01-24T14:29:24.3848729Z ==================================== ERRORS ====================================
2025-01-24T14:29:24.3849689Z ___ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_list] ____
2025-01-24T14:29:24.3850384Z 
2025-01-24T14:29:24.3850871Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3851573Z 
2025-01-24T14:29:24.3851778Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.3852346Z     def plotter(simulation_simple):
2025-01-24T14:29:24.3852878Z         """
2025-01-24T14:29:24.3853491Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.3854135Z     
2025-01-24T14:29:24.3854420Z         Parameters:
2025-01-24T14:29:24.3854773Z         -----------
2025-01-24T14:29:24.3855201Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.3855698Z     
2025-01-24T14:29:24.3855988Z         Returns:
2025-01-24T14:29:24.3856317Z         --------
2025-01-24T14:29:24.3856671Z         An LIVPlotter instance.
2025-01-24T14:29:24.3857106Z         """
2025-01-24T14:29:24.3857518Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.3857918Z 
2025-01-24T14:29:24.3858171Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.3859055Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3859755Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.3860483Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.3861286Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.3862145Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.3862744Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3863122Z 
2025-01-24T14:29:24.3863522Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.3864379Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3864954Z packets_mode = 'real'
2025-01-24T14:29:24.3865179Z 
2025-01-24T14:29:24.3865301Z     @classmethod
2025-01-24T14:29:24.3865662Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.3866096Z         """
2025-01-24T14:29:24.3866582Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.3867182Z     
2025-01-24T14:29:24.3867448Z         Parameters
2025-01-24T14:29:24.3867750Z         ----------
2025-01-24T14:29:24.3868087Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.3868734Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.3869085Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.3869401Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.3869688Z     
2025-01-24T14:29:24.3869932Z         Returns
2025-01-24T14:29:24.3870138Z         -------
2025-01-24T14:29:24.3870574Z         SimulationPacketData
2025-01-24T14:29:24.3870802Z         """
2025-01-24T14:29:24.3871014Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.3871363Z             raise ValueError(
2025-01-24T14:29:24.3871812Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.3872347Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.3872790Z             )
2025-01-24T14:29:24.3873138Z         # Properties common among both packet modes
2025-01-24T14:29:24.3873735Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.3874270Z             "line_id"
2025-01-24T14:29:24.3874801Z         )
2025-01-24T14:29:24.3875145Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.3875584Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.3875880Z         time_of_simulation = (
2025-01-24T14:29:24.3876189Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.3876518Z         )
2025-01-24T14:29:24.3876689Z     
2025-01-24T14:29:24.3876858Z         spectrum = (
2025-01-24T14:29:24.3877229Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.3877727Z             if packets_mode == "virtual"
2025-01-24T14:29:24.3878203Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.3878764Z         )
2025-01-24T14:29:24.3878936Z     
2025-01-24T14:29:24.3879118Z         if packets_mode == "virtual":
2025-01-24T14:29:24.3879416Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.3879707Z             return cls(
2025-01-24T14:29:24.3880003Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.3880429Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.3880873Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.3881315Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.3881726Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.3882129Z                 lines_df=lines_df,
2025-01-24T14:29:24.3882615Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.3883243Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.3883885Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.3884441Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.3885111Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.3885771Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.3886155Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.3886446Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.3886715Z                 simulation=sim,
2025-01-24T14:29:24.3887078Z             )
2025-01-24T14:29:24.3887387Z         else: # real packets
2025-01-24T14:29:24.3887901Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.3888566Z             # which got emitted
2025-01-24T14:29:24.3888829Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.3889102Z >           return cls(
2025-01-24T14:29:24.3889408Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.3889861Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.3890216Z                     mask
2025-01-24T14:29:24.3890415Z                 ],
2025-01-24T14:29:24.3890718Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.3891071Z                     mask
2025-01-24T14:29:24.3891269Z                 ],
2025-01-24T14:29:24.3891850Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.3892437Z                     mask
2025-01-24T14:29:24.3892763Z                 ],
2025-01-24T14:29:24.3893207Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.3893699Z                 lines_df=lines_df,
2025-01-24T14:29:24.3894031Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.3894465Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.3894805Z                     mask
2025-01-24T14:29:24.3895004Z                 ],
2025-01-24T14:29:24.3895387Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.3895731Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.3896146Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.3897041Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.3897544Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.3897910Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.3898173Z                 simulation=sim,
2025-01-24T14:29:24.3898564Z             )
2025-01-24T14:29:24.3899015Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.3899445Z 
2025-01-24T14:29:24.3899620Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.3900047Z ---------------------------- Captured stdout setup -----------------------------
2025-01-24T14:29:24.3900753Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-24T14:29:24.3901744Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-24T14:29:24.3902848Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3903308Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-24T14:29:24.3903722Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3904005Z 	
2025-01-24T14:29:24.3904255Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-24T14:29:24.3904612Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3904889Z 	
2025-01-24T14:29:24.3905073Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-24T14:29:24.3905341Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-24T14:29:24.3905604Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3905887Z  ([1mbase.py[0m:657)
2025-01-24T14:29:24.3906173Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3906445Z 	
2025-01-24T14:29:24.3906757Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-24T14:29:24.3907377Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3907837Z 	
2025-01-24T14:29:24.3908157Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-24T14:29:24.3908655Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-24T14:29:24.3908909Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-24T14:29:24.3909161Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-24T14:29:24.3909412Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-24T14:29:24.3909697Z  ([1mbase.py[0m:650)
2025-01-24T14:29:24.3909986Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3910266Z 	
2025-01-24T14:29:24.3910439Z 	Current t_inner = 9974.969 K
2025-01-24T14:29:24.3910708Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-24T14:29:24.3911018Z  ([1mbase.py[0m:652)
2025-01-24T14:29:24.3911408Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3911875Z 	
2025-01-24T14:29:24.3912287Z 	Starting iteration 2 of 3 ([1mbase.py[0m:444)
2025-01-24T14:29:24.3912884Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3913334Z 	
2025-01-24T14:29:24.3913519Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-24T14:29:24.3913780Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-24T14:29:24.3914049Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3914336Z  ([1mbase.py[0m:657)
2025-01-24T14:29:24.3914619Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3914888Z 	
2025-01-24T14:29:24.3915123Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-24T14:29:24.3915466Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3915736Z 	
2025-01-24T14:29:24.3915932Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-24T14:29:24.3916324Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-24T14:29:24.3916584Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-24T14:29:24.3916995Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-24T14:29:24.3917428Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-24T14:29:24.3917901Z  ([1mbase.py[0m:650)
2025-01-24T14:29:24.3918525Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3918807Z 	
2025-01-24T14:29:24.3918981Z 	Current t_inner = 10712.281 K
2025-01-24T14:29:24.3919244Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-24T14:29:24.3919555Z  ([1mbase.py[0m:652)
2025-01-24T14:29:24.3919836Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3920110Z 	
2025-01-24T14:29:24.3920296Z 	Simulation finished in 2 iterations 
2025-01-24T14:29:24.3920560Z 	Simulation took 2.28 s
2025-01-24T14:29:24.3920793Z  ([1mbase.py[0m:542)
2025-01-24T14:29:24.3921072Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3921518Z 	
2025-01-24T14:29:24.3921889Z 	Starting iteration 3 of 3 ([1mbase.py[0m:444)
2025-01-24T14:29:24.3922242Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3922512Z 	
2025-01-24T14:29:24.3922692Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-24T14:29:24.3922956Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-24T14:29:24.3923222Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3923496Z  ([1mbase.py[0m:657)
2025-01-24T14:29:24.3923775Z ---------------------------- Captured stderr setup -----------------------------
2025-01-24T14:29:24.3924026Z 
2025-01-24T14:29:24.3924184Z Iterations:                                                                                46/? [08:45<00:00,  7.49s/it]
2025-01-24T14:29:24.3924429Z 
2025-01-24T14:29:24.3924676Z Packets:                                                                                   103999/? [00:07<00:00, 110085.40it/s]    [A
2025-01-24T14:29:24.3924920Z 
2025-01-24T14:29:24.3925158Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:29:24.3925540Z Iterations:                                                                                47/? [08:46<00:00,  5.59s/it]
2025-01-24T14:29:24.3925776Z 
2025-01-24T14:29:24.3926273Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 98903.60it/s][A
2025-01-24T14:29:24.3926557Z 
2025-01-24T14:29:24.3926801Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:29:24.3927189Z Iterations:                                                                                48/? [08:47<00:00,  4.26s/it]
2025-01-24T14:29:24.3927552Z 
2025-01-24T14:29:24.3928090Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 61943.52it/s][A
2025-01-24T14:29:24.3928757Z ------------------------------ Captured log setup ------------------------------
2025-01-24T14:29:24.3929551Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-24T14:29:24.3930368Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-24T14:29:24.3930978Z INFO     tardis.simulation.base:base.py:444 
2025-01-24T14:29:24.3931256Z 	Starting iteration 1 of 3
2025-01-24T14:29:24.3931506Z INFO     tardis.simulation.base:base.py:657 
2025-01-24T14:29:24.3931785Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-24T14:29:24.3932052Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-24T14:29:24.3932366Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3932693Z 
2025-01-24T14:29:24.3932888Z INFO     tardis.simulation.base:base.py:649 
2025-01-24T14:29:24.3933192Z 	Plasma stratification:
2025-01-24T14:29:24.3933569Z INFO     tardis.simulation.base:base.py:650 
2025-01-24T14:29:24.3933882Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-24T14:29:24.3934167Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-24T14:29:24.3934423Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-24T14:29:24.3934675Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-24T14:29:24.3934937Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-24T14:29:24.3935102Z 
2025-01-24T14:29:24.3935213Z INFO     tardis.simulation.base:base.py:652 
2025-01-24T14:29:24.3935484Z 	Current t_inner = 9974.969 K
2025-01-24T14:29:24.3935751Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-24T14:29:24.3935952Z 
2025-01-24T14:29:24.3936064Z INFO     tardis.simulation.base:base.py:444 
2025-01-24T14:29:24.3936334Z 	Starting iteration 2 of 3
2025-01-24T14:29:24.3936577Z INFO     tardis.simulation.base:base.py:657 
2025-01-24T14:29:24.3936850Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-24T14:29:24.3937118Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-24T14:29:24.3937383Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3937557Z 
2025-01-24T14:29:24.3937661Z INFO     tardis.simulation.base:base.py:649 
2025-01-24T14:29:24.3937932Z 	Plasma stratification:
2025-01-24T14:29:24.3938168Z INFO     tardis.simulation.base:base.py:650 
2025-01-24T14:29:24.3938807Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-24T14:29:24.3939134Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-24T14:29:24.3939392Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-24T14:29:24.3939653Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-24T14:29:24.3939905Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-24T14:29:24.3940069Z 
2025-01-24T14:29:24.3940180Z INFO     tardis.simulation.base:base.py:652 
2025-01-24T14:29:24.3940450Z 	Current t_inner = 10712.281 K
2025-01-24T14:29:24.3940715Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-24T14:29:24.3940914Z 
2025-01-24T14:29:24.3941029Z INFO     tardis.simulation.base:base.py:542 
2025-01-24T14:29:24.3941306Z 	Simulation finished in 2 iterations 
2025-01-24T14:29:24.3941561Z 	Simulation took 2.28 s
2025-01-24T14:29:24.3941690Z 
2025-01-24T14:29:24.3941800Z INFO     tardis.simulation.base:base.py:444 
2025-01-24T14:29:24.3942068Z 	Starting iteration 3 of 3
2025-01-24T14:29:24.3942318Z INFO     tardis.simulation.base:base.py:657 
2025-01-24T14:29:24.3942593Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-24T14:29:24.3942955Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-24T14:29:24.3943381Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3943758Z ____ ERROR at setup of TestLIVPlotter.test_parse_species_list[_keep_colour] ____
2025-01-24T14:29:24.3944058Z 
2025-01-24T14:29:24.3944271Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3944580Z 
2025-01-24T14:29:24.3944676Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.3944940Z     def plotter(simulation_simple):
2025-01-24T14:29:24.3945191Z         """
2025-01-24T14:29:24.3945444Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.3945756Z     
2025-01-24T14:29:24.3945930Z         Parameters:
2025-01-24T14:29:24.3946134Z         -----------
2025-01-24T14:29:24.3946372Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.3946789Z     
2025-01-24T14:29:24.3946955Z         Returns:
2025-01-24T14:29:24.3947141Z         --------
2025-01-24T14:29:24.3947336Z         An LIVPlotter instance.
2025-01-24T14:29:24.3947693Z         """
2025-01-24T14:29:24.3948052Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.3948436Z 
2025-01-24T14:29:24.3948592Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.3948933Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3949332Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.3949862Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.3950321Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.3950763Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.3951099Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3951314Z 
2025-01-24T14:29:24.3951531Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.3952095Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3952632Z packets_mode = 'real'
2025-01-24T14:29:24.3952768Z 
2025-01-24T14:29:24.3952843Z     @classmethod
2025-01-24T14:29:24.3953066Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.3953329Z         """
2025-01-24T14:29:24.3953651Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.3954011Z     
2025-01-24T14:29:24.3954180Z         Parameters
2025-01-24T14:29:24.3954382Z         ----------
2025-01-24T14:29:24.3954597Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.3954930Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.3955266Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.3955578Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.3955879Z     
2025-01-24T14:29:24.3956041Z         Returns
2025-01-24T14:29:24.3956223Z         -------
2025-01-24T14:29:24.3956453Z         SimulationPacketData
2025-01-24T14:29:24.3956829Z         """
2025-01-24T14:29:24.3957108Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.3957388Z             raise ValueError(
2025-01-24T14:29:24.3957654Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.3957971Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.3958352Z             )
2025-01-24T14:29:24.3958572Z         # Properties common among both packet modes
2025-01-24T14:29:24.3958926Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.3959255Z             "line_id"
2025-01-24T14:29:24.3959445Z         )
2025-01-24T14:29:24.3959654Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.3959973Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.3960269Z         time_of_simulation = (
2025-01-24T14:29:24.3960578Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.3960889Z         )
2025-01-24T14:29:24.3961053Z     
2025-01-24T14:29:24.3961220Z         spectrum = (
2025-01-24T14:29:24.3961460Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.3961894Z             if packets_mode == "virtual"
2025-01-24T14:29:24.3962318Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.3962598Z         )
2025-01-24T14:29:24.3962763Z     
2025-01-24T14:29:24.3962947Z         if packets_mode == "virtual":
2025-01-24T14:29:24.3963242Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.3963532Z             return cls(
2025-01-24T14:29:24.3963814Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.3964238Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.3964823Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.3965261Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.3965759Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.3966307Z                 lines_df=lines_df,
2025-01-24T14:29:24.3966724Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.3967100Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.3967598Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.3967938Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.3968475Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.3968872Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.3969177Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.3969460Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.3969732Z                 simulation=sim,
2025-01-24T14:29:24.3969949Z             )
2025-01-24T14:29:24.3970135Z         else: # real packets
2025-01-24T14:29:24.3970447Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.3970781Z             # which got emitted
2025-01-24T14:29:24.3971076Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.3971545Z >           return cls(
2025-01-24T14:29:24.3971895Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.3972345Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.3972695Z                     mask
2025-01-24T14:29:24.3972893Z                 ],
2025-01-24T14:29:24.3973196Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.3973555Z                     mask
2025-01-24T14:29:24.3973754Z                 ],
2025-01-24T14:29:24.3974036Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.3974373Z                     mask
2025-01-24T14:29:24.3974570Z                 ],
2025-01-24T14:29:24.3974850Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.3975441Z                 lines_df=lines_df,
2025-01-24T14:29:24.3975772Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.3976207Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.3976550Z                     mask
2025-01-24T14:29:24.3976752Z                 ],
2025-01-24T14:29:24.3976992Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.3977331Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.3977730Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.3978116Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.3978542Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.3978824Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.3979085Z                 simulation=sim,
2025-01-24T14:29:24.3979300Z             )
2025-01-24T14:29:24.3979738Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.3980194Z 
2025-01-24T14:29:24.3980498Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.3981077Z __ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_mapped] ___
2025-01-24T14:29:24.3981377Z 
2025-01-24T14:29:24.3981591Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3982038Z 
2025-01-24T14:29:24.3982132Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.3982390Z     def plotter(simulation_simple):
2025-01-24T14:29:24.3982627Z         """
2025-01-24T14:29:24.3982876Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.3983182Z     
2025-01-24T14:29:24.3983351Z         Parameters:
2025-01-24T14:29:24.3983546Z         -----------
2025-01-24T14:29:24.3983780Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.3984051Z     
2025-01-24T14:29:24.3984301Z         Returns:
2025-01-24T14:29:24.3984614Z         --------
2025-01-24T14:29:24.3985004Z         An LIVPlotter instance.
2025-01-24T14:29:24.3985235Z         """
2025-01-24T14:29:24.3985468Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.3985689Z 
2025-01-24T14:29:24.3985834Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.3986167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3986535Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.3986925Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.3987377Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.3987813Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.3988138Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3988461Z 
2025-01-24T14:29:24.3988684Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.3989240Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3989774Z packets_mode = 'real'
2025-01-24T14:29:24.3989920Z 
2025-01-24T14:29:24.3990000Z     @classmethod
2025-01-24T14:29:24.3990224Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.3990490Z         """
2025-01-24T14:29:24.3990792Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.3991154Z     
2025-01-24T14:29:24.3991321Z         Parameters
2025-01-24T14:29:24.3991512Z         ----------
2025-01-24T14:29:24.3991727Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.3992062Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.3992395Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.3992710Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.3993007Z     
2025-01-24T14:29:24.3993170Z         Returns
2025-01-24T14:29:24.3993418Z         -------
2025-01-24T14:29:24.3993758Z         SimulationPacketData
2025-01-24T14:29:24.3994105Z         """
2025-01-24T14:29:24.3994366Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.3994645Z             raise ValueError(
2025-01-24T14:29:24.3994911Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.3995226Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.3995482Z             )
2025-01-24T14:29:24.3995694Z         # Properties common among both packet modes
2025-01-24T14:29:24.3996060Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.3996381Z             "line_id"
2025-01-24T14:29:24.3996574Z         )
2025-01-24T14:29:24.3996779Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.3997101Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.3997403Z         time_of_simulation = (
2025-01-24T14:29:24.3997714Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.3998180Z         )
2025-01-24T14:29:24.3998572Z     
2025-01-24T14:29:24.3998752Z         spectrum = (
2025-01-24T14:29:24.3999005Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.3999298Z             if packets_mode == "virtual"
2025-01-24T14:29:24.3999759Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4000038Z         )
2025-01-24T14:29:24.4000203Z     
2025-01-24T14:29:24.4000384Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4000677Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4000969Z             return cls(
2025-01-24T14:29:24.4001261Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4001681Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4002310Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4003037Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4003456Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4003792Z                 lines_df=lines_df,
2025-01-24T14:29:24.4004078Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4004461Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4004835Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4005166Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4005559Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4005952Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4006256Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4006544Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4006814Z                 simulation=sim,
2025-01-24T14:29:24.4007188Z             )
2025-01-24T14:29:24.4007466Z         else: # real packets
2025-01-24T14:29:24.4007780Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4008114Z             # which got emitted
2025-01-24T14:29:24.4008501Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4008773Z >           return cls(
2025-01-24T14:29:24.4009078Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4009528Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4009881Z                     mask
2025-01-24T14:29:24.4010093Z                 ],
2025-01-24T14:29:24.4010398Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4010752Z                     mask
2025-01-24T14:29:24.4010954Z                 ],
2025-01-24T14:29:24.4011239Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4011576Z                     mask
2025-01-24T14:29:24.4011773Z                 ],
2025-01-24T14:29:24.4012051Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4012620Z                 lines_df=lines_df,
2025-01-24T14:29:24.4013002Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4013438Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4013777Z                     mask
2025-01-24T14:29:24.4013980Z                 ],
2025-01-24T14:29:24.4014226Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4014570Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4014974Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4015366Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4015667Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4015949Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4016241Z                 simulation=sim,
2025-01-24T14:29:24.4016805Z             )
2025-01-24T14:29:24.4017253Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4017669Z 
2025-01-24T14:29:24.4017844Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4018466Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] _
2025-01-24T14:29:24.4018810Z 
2025-01-24T14:29:24.4019035Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4019341Z 
2025-01-24T14:29:24.4019434Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4019808Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4020052Z         """
2025-01-24T14:29:24.4020298Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4020818Z     
2025-01-24T14:29:24.4021045Z         Parameters:
2025-01-24T14:29:24.4021244Z         -----------
2025-01-24T14:29:24.4021486Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4021755Z     
2025-01-24T14:29:24.4021919Z         Returns:
2025-01-24T14:29:24.4022103Z         --------
2025-01-24T14:29:24.4022299Z         An LIVPlotter instance.
2025-01-24T14:29:24.4022520Z         """
2025-01-24T14:29:24.4022753Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4022979Z 
2025-01-24T14:29:24.4023117Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4023461Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4023830Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4024222Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4024675Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4025112Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4025456Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4025822Z 
2025-01-24T14:29:24.4026142Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4026627Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4026965Z packets_mode = 'real'
2025-01-24T14:29:24.4027096Z 
2025-01-24T14:29:24.4027170Z     @classmethod
2025-01-24T14:29:24.4027391Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4027652Z         """
2025-01-24T14:29:24.4027957Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4028462Z     
2025-01-24T14:29:24.4028630Z         Parameters
2025-01-24T14:29:24.4028820Z         ----------
2025-01-24T14:29:24.4029053Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4029432Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4029853Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4030425Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4030776Z     
2025-01-24T14:29:24.4030945Z         Returns
2025-01-24T14:29:24.4031168Z         -------
2025-01-24T14:29:24.4031379Z         SimulationPacketData
2025-01-24T14:29:24.4031609Z         """
2025-01-24T14:29:24.4031862Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4032342Z             raise ValueError(
2025-01-24T14:29:24.4032768Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4033203Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4033643Z             )
2025-01-24T14:29:24.4050723Z         # Properties common among both packet modes
2025-01-24T14:29:24.4051413Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4051979Z             "line_id"
2025-01-24T14:29:24.4052294Z         )
2025-01-24T14:29:24.4052630Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4053406Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4053907Z         time_of_simulation = (
2025-01-24T14:29:24.4054410Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4054867Z         )
2025-01-24T14:29:24.4055041Z     
2025-01-24T14:29:24.4055210Z         spectrum = (
2025-01-24T14:29:24.4055468Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4055783Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4056090Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4056390Z         )
2025-01-24T14:29:24.4056860Z     
2025-01-24T14:29:24.4057148Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4057458Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4057751Z             return cls(
2025-01-24T14:29:24.4058046Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4058632Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4059075Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4059510Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4059921Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4060247Z                 lines_df=lines_df,
2025-01-24T14:29:24.4060539Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4060924Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4061540Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4061937Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4062336Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4062735Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4063035Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4063317Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4063581Z                 simulation=sim,
2025-01-24T14:29:24.4063807Z             )
2025-01-24T14:29:24.4064006Z         else: # real packets
2025-01-24T14:29:24.4064335Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4064684Z             # which got emitted
2025-01-24T14:29:24.4064942Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4065215Z >           return cls(
2025-01-24T14:29:24.4065520Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4066186Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4066629Z                     mask
2025-01-24T14:29:24.4066838Z                 ],
2025-01-24T14:29:24.4067150Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4067508Z                     mask
2025-01-24T14:29:24.4067706Z                 ],
2025-01-24T14:29:24.4067991Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4068439Z                     mask
2025-01-24T14:29:24.4068634Z                 ],
2025-01-24T14:29:24.4068918Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4069264Z                 lines_df=lines_df,
2025-01-24T14:29:24.4069596Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4070024Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4070528Z                     mask
2025-01-24T14:29:24.4070843Z                 ],
2025-01-24T14:29:24.4071222Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4071957Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4072429Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4072830Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4073130Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4073414Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4073679Z                 simulation=sim,
2025-01-24T14:29:24.4073896Z             )
2025-01-24T14:29:24.4074475Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4074901Z 
2025-01-24T14:29:24.4075081Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4075827Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] _
2025-01-24T14:29:24.4076282Z 
2025-01-24T14:29:24.4076517Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4076832Z 
2025-01-24T14:29:24.4076927Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4077182Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4077421Z         """
2025-01-24T14:29:24.4077674Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4077981Z     
2025-01-24T14:29:24.4078153Z         Parameters:
2025-01-24T14:29:24.4078467Z         -----------
2025-01-24T14:29:24.4078704Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4078980Z     
2025-01-24T14:29:24.4079150Z         Returns:
2025-01-24T14:29:24.4079338Z         --------
2025-01-24T14:29:24.4079537Z         An LIVPlotter instance.
2025-01-24T14:29:24.4079759Z         """
2025-01-24T14:29:24.4080158Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4080488Z 
2025-01-24T14:29:24.4080639Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4080989Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4081359Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4081747Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4082195Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4082624Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4082943Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4083141Z 
2025-01-24T14:29:24.4083360Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4083833Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4084174Z packets_mode = 'real'
2025-01-24T14:29:24.4084308Z 
2025-01-24T14:29:24.4084383Z     @classmethod
2025-01-24T14:29:24.4084608Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4085033Z         """
2025-01-24T14:29:24.4085428Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4085781Z     
2025-01-24T14:29:24.4085949Z         Parameters
2025-01-24T14:29:24.4086144Z         ----------
2025-01-24T14:29:24.4086357Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4086690Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4087013Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4087328Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4087624Z     
2025-01-24T14:29:24.4087788Z         Returns
2025-01-24T14:29:24.4087971Z         -------
2025-01-24T14:29:24.4088166Z         SimulationPacketData
2025-01-24T14:29:24.4088546Z         """
2025-01-24T14:29:24.4088750Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4089107Z             raise ValueError(
2025-01-24T14:29:24.4089673Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4089979Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4090236Z             )
2025-01-24T14:29:24.4090446Z         # Properties common among both packet modes
2025-01-24T14:29:24.4090813Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4091137Z             "line_id"
2025-01-24T14:29:24.4091330Z         )
2025-01-24T14:29:24.4091539Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4091857Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4092273Z         time_of_simulation = (
2025-01-24T14:29:24.4092586Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4092900Z         )
2025-01-24T14:29:24.4093069Z     
2025-01-24T14:29:24.4093240Z         spectrum = (
2025-01-24T14:29:24.4093480Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4093773Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4094162Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4094635Z         )
2025-01-24T14:29:24.4094812Z     
2025-01-24T14:29:24.4094999Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4095303Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4095596Z             return cls(
2025-01-24T14:29:24.4095879Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4096298Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4096743Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4097182Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4097597Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4098000Z                 lines_df=lines_df,
2025-01-24T14:29:24.4098597Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4098976Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4099352Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4099685Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4100077Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4100470Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4100778Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4101061Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4101338Z                 simulation=sim,
2025-01-24T14:29:24.4101557Z             )
2025-01-24T14:29:24.4101748Z         else: # real packets
2025-01-24T14:29:24.4102065Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4102405Z             # which got emitted
2025-01-24T14:29:24.4102660Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4102930Z >           return cls(
2025-01-24T14:29:24.4103374Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4103969Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4104318Z                     mask
2025-01-24T14:29:24.4104510Z                 ],
2025-01-24T14:29:24.4104810Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4105163Z                     mask
2025-01-24T14:29:24.4105360Z                 ],
2025-01-24T14:29:24.4105643Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4105984Z                     mask
2025-01-24T14:29:24.4106178Z                 ],
2025-01-24T14:29:24.4106595Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4106937Z                 lines_df=lines_df,
2025-01-24T14:29:24.4107456Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4108141Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4108869Z                     mask
2025-01-24T14:29:24.4109170Z                 ],
2025-01-24T14:29:24.4109568Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4110126Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4110988Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4111711Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4112237Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4112731Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4113203Z                 simulation=sim,
2025-01-24T14:29:24.4113585Z             )
2025-01-24T14:29:24.4115939Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4116684Z 
2025-01-24T14:29:24.4116999Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4117923Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] _
2025-01-24T14:29:24.4118749Z 
2025-01-24T14:29:24.4119135Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4119686Z 
2025-01-24T14:29:24.4119852Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4120296Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4120704Z         """
2025-01-24T14:29:24.4121133Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4121649Z     
2025-01-24T14:29:24.4121935Z         Parameters:
2025-01-24T14:29:24.4122264Z         -----------
2025-01-24T14:29:24.4122661Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4123123Z     
2025-01-24T14:29:24.4123400Z         Returns:
2025-01-24T14:29:24.4123720Z         --------
2025-01-24T14:29:24.4124047Z         An LIVPlotter instance.
2025-01-24T14:29:24.4124436Z         """
2025-01-24T14:29:24.4124829Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4125213Z 
2025-01-24T14:29:24.4125463Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4126051Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4126705Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4127387Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4128159Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4129104Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4129722Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4130083Z 
2025-01-24T14:29:24.4130447Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4131252Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4131817Z packets_mode = 'real'
2025-01-24T14:29:24.4131957Z 
2025-01-24T14:29:24.4132040Z     @classmethod
2025-01-24T14:29:24.4132279Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4132716Z         """
2025-01-24T14:29:24.4133112Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4133475Z     
2025-01-24T14:29:24.4133649Z         Parameters
2025-01-24T14:29:24.4133846Z         ----------
2025-01-24T14:29:24.4134072Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4134407Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4134920Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4135238Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4135535Z     
2025-01-24T14:29:24.4135696Z         Returns
2025-01-24T14:29:24.4135880Z         -------
2025-01-24T14:29:24.4136075Z         SimulationPacketData
2025-01-24T14:29:24.4136301Z         """
2025-01-24T14:29:24.4136507Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4136784Z             raise ValueError(
2025-01-24T14:29:24.4137049Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4137550Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4138014Z             )
2025-01-24T14:29:24.4138430Z         # Properties common among both packet modes
2025-01-24T14:29:24.4138827Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4139153Z             "line_id"
2025-01-24T14:29:24.4139353Z         )
2025-01-24T14:29:24.4139561Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4139883Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4140173Z         time_of_simulation = (
2025-01-24T14:29:24.4140477Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4140799Z         )
2025-01-24T14:29:24.4140966Z     
2025-01-24T14:29:24.4141134Z         spectrum = (
2025-01-24T14:29:24.4141378Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4141715Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4142229Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4142507Z         )
2025-01-24T14:29:24.4142670Z     
2025-01-24T14:29:24.4142851Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4143142Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4143427Z             return cls(
2025-01-24T14:29:24.4143716Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4144158Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4144603Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4145042Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4145449Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4145774Z                 lines_df=lines_df,
2025-01-24T14:29:24.4146071Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4146673Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4147059Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4147398Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4147794Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4148194Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4148722Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4149008Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4149275Z                 simulation=sim,
2025-01-24T14:29:24.4149495Z             )
2025-01-24T14:29:24.4149683Z         else: # real packets
2025-01-24T14:29:24.4149998Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4150335Z             # which got emitted
2025-01-24T14:29:24.4150597Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4150899Z >           return cls(
2025-01-24T14:29:24.4151423Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4151881Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4152373Z                     mask
2025-01-24T14:29:24.4152573Z                 ],
2025-01-24T14:29:24.4152874Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4153227Z                     mask
2025-01-24T14:29:24.4153425Z                 ],
2025-01-24T14:29:24.4153708Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4154044Z                     mask
2025-01-24T14:29:24.4154245Z                 ],
2025-01-24T14:29:24.4154526Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4155000Z                 lines_df=lines_df,
2025-01-24T14:29:24.4155338Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4156030Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4156383Z                     mask
2025-01-24T14:29:24.4156582Z                 ],
2025-01-24T14:29:24.4156837Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4157169Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4157556Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4157953Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4158363Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4158650Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4158911Z                 simulation=sim,
2025-01-24T14:29:24.4159132Z             )
2025-01-24T14:29:24.4159594Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4160019Z 
2025-01-24T14:29:24.4160261Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4160974Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] _
2025-01-24T14:29:24.4161341Z 
2025-01-24T14:29:24.4161563Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4161873Z 
2025-01-24T14:29:24.4161966Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4162226Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4162473Z         """
2025-01-24T14:29:24.4162725Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4163043Z     
2025-01-24T14:29:24.4163221Z         Parameters:
2025-01-24T14:29:24.4163422Z         -----------
2025-01-24T14:29:24.4163662Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4163932Z     
2025-01-24T14:29:24.4164099Z         Returns:
2025-01-24T14:29:24.4164287Z         --------
2025-01-24T14:29:24.4164483Z         An LIVPlotter instance.
2025-01-24T14:29:24.4164826Z         """
2025-01-24T14:29:24.4165180Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4165410Z 
2025-01-24T14:29:24.4165559Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4165898Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4166263Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4166654Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4167111Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4167551Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4167889Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4168096Z 
2025-01-24T14:29:24.4168455Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4168977Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4169318Z packets_mode = 'real'
2025-01-24T14:29:24.4169591Z 
2025-01-24T14:29:24.4169667Z     @classmethod
2025-01-24T14:29:24.4169897Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4170164Z         """
2025-01-24T14:29:24.4170463Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4170817Z     
2025-01-24T14:29:24.4170991Z         Parameters
2025-01-24T14:29:24.4171185Z         ----------
2025-01-24T14:29:24.4171402Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4171742Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4172072Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4172514Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4172826Z     
2025-01-24T14:29:24.4172990Z         Returns
2025-01-24T14:29:24.4173178Z         -------
2025-01-24T14:29:24.4173376Z         SimulationPacketData
2025-01-24T14:29:24.4173596Z         """
2025-01-24T14:29:24.4173804Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4174246Z             raise ValueError(
2025-01-24T14:29:24.4174612Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4174921Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4175178Z             )
2025-01-24T14:29:24.4175393Z         # Properties common among both packet modes
2025-01-24T14:29:24.4175753Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4176081Z             "line_id"
2025-01-24T14:29:24.4176275Z         )
2025-01-24T14:29:24.4176486Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4176813Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4177108Z         time_of_simulation = (
2025-01-24T14:29:24.4177414Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4177728Z         )
2025-01-24T14:29:24.4177898Z     
2025-01-24T14:29:24.4178069Z         spectrum = (
2025-01-24T14:29:24.4178458Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4178755Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4179045Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4179320Z         )
2025-01-24T14:29:24.4179483Z     
2025-01-24T14:29:24.4179661Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4179952Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4180237Z             return cls(
2025-01-24T14:29:24.4180524Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4180947Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4181396Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4181834Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4182248Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4182579Z                 lines_df=lines_df,
2025-01-24T14:29:24.4182868Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4183239Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4183605Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4183937Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4184328Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4184725Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4185024Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4185313Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4185577Z                 simulation=sim,
2025-01-24T14:29:24.4185799Z             )
2025-01-24T14:29:24.4185989Z         else: # real packets
2025-01-24T14:29:24.4186438Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4186775Z             # which got emitted
2025-01-24T14:29:24.4187055Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4187324Z >           return cls(
2025-01-24T14:29:24.4187627Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4188077Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4188536Z                     mask
2025-01-24T14:29:24.4188734Z                 ],
2025-01-24T14:29:24.4189173Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4189532Z                     mask
2025-01-24T14:29:24.4189725Z                 ],
2025-01-24T14:29:24.4190008Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4190344Z                     mask
2025-01-24T14:29:24.4190548Z                 ],
2025-01-24T14:29:24.4190827Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4191170Z                 lines_df=lines_df,
2025-01-24T14:29:24.4191489Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4191924Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4192260Z                     mask
2025-01-24T14:29:24.4192596Z                 ],
2025-01-24T14:29:24.4192929Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4193363Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4193817Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4194329Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4194681Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4195002Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4195370Z                 simulation=sim,
2025-01-24T14:29:24.4195593Z             )
2025-01-24T14:29:24.4196036Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4196455Z 
2025-01-24T14:29:24.4196637Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4197161Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] _
2025-01-24T14:29:24.4197523Z 
2025-01-24T14:29:24.4197749Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4198058Z 
2025-01-24T14:29:24.4198150Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4198516Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4198755Z         """
2025-01-24T14:29:24.4199005Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4199314Z     
2025-01-24T14:29:24.4199482Z         Parameters:
2025-01-24T14:29:24.4199673Z         -----------
2025-01-24T14:29:24.4199900Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4200165Z     
2025-01-24T14:29:24.4200328Z         Returns:
2025-01-24T14:29:24.4200515Z         --------
2025-01-24T14:29:24.4200714Z         An LIVPlotter instance.
2025-01-24T14:29:24.4200933Z         """
2025-01-24T14:29:24.4201168Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4201390Z 
2025-01-24T14:29:24.4201537Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4201880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4202246Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4202638Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4203090Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4203837Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4204167Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4204377Z 
2025-01-24T14:29:24.4204597Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4205077Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4205413Z packets_mode = 'real'
2025-01-24T14:29:24.4205546Z 
2025-01-24T14:29:24.4205619Z     @classmethod
2025-01-24T14:29:24.4205838Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4206224Z         """
2025-01-24T14:29:24.4206524Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4206881Z     
2025-01-24T14:29:24.4207050Z         Parameters
2025-01-24T14:29:24.4207242Z         ----------
2025-01-24T14:29:24.4207462Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4207803Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4208128Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4208579Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4208873Z     
2025-01-24T14:29:24.4209040Z         Returns
2025-01-24T14:29:24.4209220Z         -------
2025-01-24T14:29:24.4209410Z         SimulationPacketData
2025-01-24T14:29:24.4209626Z         """
2025-01-24T14:29:24.4209832Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4210106Z             raise ValueError(
2025-01-24T14:29:24.4210375Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4210691Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4210952Z             )
2025-01-24T14:29:24.4211166Z         # Properties common among both packet modes
2025-01-24T14:29:24.4211517Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4211848Z             "line_id"
2025-01-24T14:29:24.4212044Z         )
2025-01-24T14:29:24.4212248Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4212562Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4212854Z         time_of_simulation = (
2025-01-24T14:29:24.4213156Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4213468Z         )
2025-01-24T14:29:24.4213635Z     
2025-01-24T14:29:24.4213812Z         spectrum = (
2025-01-24T14:29:24.4214060Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4214360Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4214659Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4214937Z         )
2025-01-24T14:29:24.4215109Z     
2025-01-24T14:29:24.4215295Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4215598Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4215891Z             return cls(
2025-01-24T14:29:24.4216173Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4216588Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4217032Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4217471Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4217886Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4218214Z                 lines_df=lines_df,
2025-01-24T14:29:24.4218629Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4219005Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4219377Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4219783Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4220647Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4221217Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4221521Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4221806Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4222071Z                 simulation=sim,
2025-01-24T14:29:24.4222291Z             )
2025-01-24T14:29:24.4222480Z         else: # real packets
2025-01-24T14:29:24.4222796Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4223289Z             # which got emitted
2025-01-24T14:29:24.4223549Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4223818Z >           return cls(
2025-01-24T14:29:24.4224121Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4224575Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4224933Z                     mask
2025-01-24T14:29:24.4225132Z                 ],
2025-01-24T14:29:24.4225438Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4225793Z                     mask
2025-01-24T14:29:24.4225988Z                 ],
2025-01-24T14:29:24.4226267Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4226605Z                     mask
2025-01-24T14:29:24.4226800Z                 ],
2025-01-24T14:29:24.4227086Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4227427Z                 lines_df=lines_df,
2025-01-24T14:29:24.4227756Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4228186Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4228666Z                     mask
2025-01-24T14:29:24.4228861Z                 ],
2025-01-24T14:29:24.4229101Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4229458Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4229852Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4230240Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4230536Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4230634Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4230723Z                 simulation=sim,
2025-01-24T14:29:24.4230798Z             )
2025-01-24T14:29:24.4231142Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4231148Z 
2025-01-24T14:29:24.4231323Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4231606Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] _
2025-01-24T14:29:24.4231611Z 
2025-01-24T14:29:24.4231829Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4231833Z 
2025-01-24T14:29:24.4231931Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4232031Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4232105Z         """
2025-01-24T14:29:24.4232267Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4232337Z     
2025-01-24T14:29:24.4232419Z         Parameters:
2025-01-24T14:29:24.4232498Z         -----------
2025-01-24T14:29:24.4232621Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4232691Z     
2025-01-24T14:29:24.4232769Z         Returns:
2025-01-24T14:29:24.4232844Z         --------
2025-01-24T14:29:24.4232936Z         An LIVPlotter instance.
2025-01-24T14:29:24.4233008Z         """
2025-01-24T14:29:24.4233269Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4233274Z 
2025-01-24T14:29:24.4233413Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4233536Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4233701Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4233849Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4234068Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4234205Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4234427Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4234433Z 
2025-01-24T14:29:24.4234652Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4234827Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4234916Z packets_mode = 'real'
2025-01-24T14:29:24.4234920Z 
2025-01-24T14:29:24.4235000Z     @classmethod
2025-01-24T14:29:24.4235118Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4235195Z         """
2025-01-24T14:29:24.4235398Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4235470Z     
2025-01-24T14:29:24.4235551Z         Parameters
2025-01-24T14:29:24.4235626Z         ----------
2025-01-24T14:29:24.4235732Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4235882Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4235985Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4236130Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4236206Z     
2025-01-24T14:29:24.4236280Z         Returns
2025-01-24T14:29:24.4236359Z         -------
2025-01-24T14:29:24.4236448Z         SimulationPacketData
2025-01-24T14:29:24.4236527Z         """
2025-01-24T14:29:24.4236633Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4236722Z             raise ValueError(
2025-01-24T14:29:24.4236849Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4236956Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4237033Z             )
2025-01-24T14:29:24.4237140Z         # Properties common among both packet modes
2025-01-24T14:29:24.4237306Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4237382Z             "line_id"
2025-01-24T14:29:24.4237458Z         )
2025-01-24T14:29:24.4237571Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4237701Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4237785Z         time_of_simulation = (
2025-01-24T14:29:24.4237949Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4238025Z         )
2025-01-24T14:29:24.4238103Z     
2025-01-24T14:29:24.4238181Z         spectrum = (
2025-01-24T14:29:24.4238404Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4238497Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4238622Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4238698Z         )
2025-01-24T14:29:24.4238770Z     
2025-01-24T14:29:24.4238866Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4238992Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4239073Z             return cls(
2025-01-24T14:29:24.4239239Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4239419Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4239598Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4239778Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4240054Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4240141Z                 lines_df=lines_df,
2025-01-24T14:29:24.4240275Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4240431Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4240565Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4240681Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4240978Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4241090Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4241201Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4241301Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4241387Z                 simulation=sim,
2025-01-24T14:29:24.4241464Z             )
2025-01-24T14:29:24.4241555Z         else: # real packets
2025-01-24T14:29:24.4241724Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4241810Z             # which got emitted
2025-01-24T14:29:24.4241925Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4242002Z >           return cls(
2025-01-24T14:29:24.4242184Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4242370Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4242455Z                     mask
2025-01-24T14:29:24.4242528Z                 ],
2025-01-24T14:29:24.4242725Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4242801Z                     mask
2025-01-24T14:29:24.4242879Z                 ],
2025-01-24T14:29:24.4243045Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4243129Z                     mask
2025-01-24T14:29:24.4243201Z                 ],
2025-01-24T14:29:24.4243372Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4243454Z                 lines_df=lines_df,
2025-01-24T14:29:24.4243624Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4243804Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4243876Z                     mask
2025-01-24T14:29:24.4243960Z                 ],
2025-01-24T14:29:24.4244094Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4244210Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4244395Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4244507Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4244611Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4244712Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4244794Z                 simulation=sim,
2025-01-24T14:29:24.4244870Z             )
2025-01-24T14:29:24.4245218Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4245223Z 
2025-01-24T14:29:24.4245395Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4245662Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] _
2025-01-24T14:29:24.4245671Z 
2025-01-24T14:29:24.4245889Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4245894Z 
2025-01-24T14:29:24.4245989Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4246081Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4246159Z         """
2025-01-24T14:29:24.4246400Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4246476Z     
2025-01-24T14:29:24.4246554Z         Parameters:
2025-01-24T14:29:24.4246635Z         -----------
2025-01-24T14:29:24.4246755Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4246826Z     
2025-01-24T14:29:24.4246905Z         Returns:
2025-01-24T14:29:24.4246980Z         --------
2025-01-24T14:29:24.4247069Z         An LIVPlotter instance.
2025-01-24T14:29:24.4247141Z         """
2025-01-24T14:29:24.4247279Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4247284Z 
2025-01-24T14:29:24.4247499Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4247624Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4247784Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4247938Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4248164Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4248486Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4248606Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4248611Z 
2025-01-24T14:29:24.4248826Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4249000Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4249082Z packets_mode = 'real'
2025-01-24T14:29:24.4249087Z 
2025-01-24T14:29:24.4249165Z     @classmethod
2025-01-24T14:29:24.4249280Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4249354Z         """
2025-01-24T14:29:24.4249547Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4249621Z     
2025-01-24T14:29:24.4249696Z         Parameters
2025-01-24T14:29:24.4249782Z         ----------
2025-01-24T14:29:24.4249889Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4250040Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4250141Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4250282Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4250357Z     
2025-01-24T14:29:24.4250430Z         Returns
2025-01-24T14:29:24.4250507Z         -------
2025-01-24T14:29:24.4250597Z         SimulationPacketData
2025-01-24T14:29:24.4250673Z         """
2025-01-24T14:29:24.4250781Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4250873Z             raise ValueError(
2025-01-24T14:29:24.4250992Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4251103Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4251175Z             )
2025-01-24T14:29:24.4251287Z         # Properties common among both packet modes
2025-01-24T14:29:24.4251456Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4251540Z             "line_id"
2025-01-24T14:29:24.4251617Z         )
2025-01-24T14:29:24.4251729Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4251859Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4251943Z         time_of_simulation = (
2025-01-24T14:29:24.4252106Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4252177Z         )
2025-01-24T14:29:24.4252251Z     
2025-01-24T14:29:24.4252328Z         spectrum = (
2025-01-24T14:29:24.4252453Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4252544Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4252668Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4252739Z         )
2025-01-24T14:29:24.4252816Z     
2025-01-24T14:29:24.4252905Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4253180Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4253266Z             return cls(
2025-01-24T14:29:24.4253424Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4253603Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4253780Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4253951Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4254204Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4254296Z                 lines_df=lines_df,
2025-01-24T14:29:24.4254426Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4254596Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4254724Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4254849Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4255040Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4255149Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4255258Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4255356Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4255441Z                 simulation=sim,
2025-01-24T14:29:24.4255513Z             )
2025-01-24T14:29:24.4255600Z         else: # real packets
2025-01-24T14:29:24.4255772Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4255858Z             # which got emitted
2025-01-24T14:29:24.4255966Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4256047Z >           return cls(
2025-01-24T14:29:24.4256219Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4256411Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4256498Z                     mask
2025-01-24T14:29:24.4270933Z                 ],
2025-01-24T14:29:24.4271199Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4271284Z                     mask
2025-01-24T14:29:24.4271364Z                 ],
2025-01-24T14:29:24.4271557Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4271640Z                     mask
2025-01-24T14:29:24.4271721Z                 ],
2025-01-24T14:29:24.4271902Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4271992Z                 lines_df=lines_df,
2025-01-24T14:29:24.4272173Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4272352Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4272437Z                     mask
2025-01-24T14:29:24.4272507Z                 ],
2025-01-24T14:29:24.4272645Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4272772Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4272967Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4273087Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4273193Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4273304Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4273389Z                 simulation=sim,
2025-01-24T14:29:24.4273466Z             )
2025-01-24T14:29:24.4273808Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4273815Z 
2025-01-24T14:29:24.4274180Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4274461Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] _
2025-01-24T14:29:24.4274471Z 
2025-01-24T14:29:24.4274694Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4274699Z 
2025-01-24T14:29:24.4274800Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4274894Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4274972Z         """
2025-01-24T14:29:24.4275129Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4275205Z     
2025-01-24T14:29:24.4275395Z         Parameters:
2025-01-24T14:29:24.4275482Z         -----------
2025-01-24T14:29:24.4275606Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4275683Z     
2025-01-24T14:29:24.4275757Z         Returns:
2025-01-24T14:29:24.4275838Z         --------
2025-01-24T14:29:24.4275932Z         An LIVPlotter instance.
2025-01-24T14:29:24.4276008Z         """
2025-01-24T14:29:24.4276147Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4276157Z 
2025-01-24T14:29:24.4276302Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4276425Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4276586Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4276736Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4276953Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4277098Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4277215Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4277220Z 
2025-01-24T14:29:24.4277442Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4277619Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4277708Z packets_mode = 'real'
2025-01-24T14:29:24.4277712Z 
2025-01-24T14:29:24.4277792Z     @classmethod
2025-01-24T14:29:24.4277909Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4277988Z         """
2025-01-24T14:29:24.4278188Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4278376Z     
2025-01-24T14:29:24.4278457Z         Parameters
2025-01-24T14:29:24.4278539Z         ----------
2025-01-24T14:29:24.4278640Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4278805Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4278897Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4279042Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4279115Z     
2025-01-24T14:29:24.4279193Z         Returns
2025-01-24T14:29:24.4279272Z         -------
2025-01-24T14:29:24.4279366Z         SimulationPacketData
2025-01-24T14:29:24.4279442Z         """
2025-01-24T14:29:24.4279549Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4279638Z             raise ValueError(
2025-01-24T14:29:24.4279760Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4279874Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4279945Z             )
2025-01-24T14:29:24.4280060Z         # Properties common among both packet modes
2025-01-24T14:29:24.4280223Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4280306Z             "line_id"
2025-01-24T14:29:24.4280377Z         )
2025-01-24T14:29:24.4280492Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4280614Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4280703Z         time_of_simulation = (
2025-01-24T14:29:24.4280857Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4281055Z         )
2025-01-24T14:29:24.4281132Z     
2025-01-24T14:29:24.4281210Z         spectrum = (
2025-01-24T14:29:24.4281329Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4281422Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4281547Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4281617Z         )
2025-01-24T14:29:24.4281690Z     
2025-01-24T14:29:24.4281780Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4281906Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4282095Z             return cls(
2025-01-24T14:29:24.4282260Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4282441Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4282620Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4282796Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4282946Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4283034Z                 lines_df=lines_df,
2025-01-24T14:29:24.4283171Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4283323Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4283454Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4283571Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4283767Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4283876Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4283986Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4284085Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4284176Z                 simulation=sim,
2025-01-24T14:29:24.4284247Z             )
2025-01-24T14:29:24.4284335Z         else: # real packets
2025-01-24T14:29:24.4284502Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4284588Z             # which got emitted
2025-01-24T14:29:24.4284702Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4284781Z >           return cls(
2025-01-24T14:29:24.4284962Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4285151Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4285232Z                     mask
2025-01-24T14:29:24.4285304Z                 ],
2025-01-24T14:29:24.4285498Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4285575Z                     mask
2025-01-24T14:29:24.4285656Z                 ],
2025-01-24T14:29:24.4285823Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4285902Z                     mask
2025-01-24T14:29:24.4285973Z                 ],
2025-01-24T14:29:24.4286143Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4286232Z                 lines_df=lines_df,
2025-01-24T14:29:24.4286394Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4286571Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4286645Z                     mask
2025-01-24T14:29:24.4286728Z                 ],
2025-01-24T14:29:24.4286858Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4286978Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4287160Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4287366Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4287467Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4287563Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4287643Z                 simulation=sim,
2025-01-24T14:29:24.4287720Z             )
2025-01-24T14:29:24.4288066Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4288071Z 
2025-01-24T14:29:24.4288361Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4288758Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] _
2025-01-24T14:29:24.4288764Z 
2025-01-24T14:29:24.4288985Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4288990Z 
2025-01-24T14:29:24.4289086Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4289184Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4289260Z         """
2025-01-24T14:29:24.4289416Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4289492Z     
2025-01-24T14:29:24.4289575Z         Parameters:
2025-01-24T14:29:24.4289652Z         -----------
2025-01-24T14:29:24.4289771Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4289840Z     
2025-01-24T14:29:24.4289918Z         Returns:
2025-01-24T14:29:24.4289993Z         --------
2025-01-24T14:29:24.4290084Z         An LIVPlotter instance.
2025-01-24T14:29:24.4290154Z         """
2025-01-24T14:29:24.4290301Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4290305Z 
2025-01-24T14:29:24.4290443Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4290563Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4290729Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4290886Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4291104Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4291243Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4291356Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4291360Z 
2025-01-24T14:29:24.4291577Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4291748Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4291837Z packets_mode = 'real'
2025-01-24T14:29:24.4291841Z 
2025-01-24T14:29:24.4291923Z     @classmethod
2025-01-24T14:29:24.4292039Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4292116Z         """
2025-01-24T14:29:24.4292315Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4292393Z     
2025-01-24T14:29:24.4292470Z         Parameters
2025-01-24T14:29:24.4292548Z         ----------
2025-01-24T14:29:24.4292657Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4292808Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4292904Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4293046Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4293121Z     
2025-01-24T14:29:24.4293193Z         Returns
2025-01-24T14:29:24.4293270Z         -------
2025-01-24T14:29:24.4293358Z         SimulationPacketData
2025-01-24T14:29:24.4293434Z         """
2025-01-24T14:29:24.4293545Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4293634Z             raise ValueError(
2025-01-24T14:29:24.4293753Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4293863Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4294103Z             )
2025-01-24T14:29:24.4294218Z         # Properties common among both packet modes
2025-01-24T14:29:24.4294386Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4294461Z             "line_id"
2025-01-24T14:29:24.4294534Z         )
2025-01-24T14:29:24.4294644Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4294775Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4294858Z         time_of_simulation = (
2025-01-24T14:29:24.4295015Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4295082Z         )
2025-01-24T14:29:24.4295152Z     
2025-01-24T14:29:24.4295308Z         spectrum = (
2025-01-24T14:29:24.4295431Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4295522Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4295644Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4295715Z         )
2025-01-24T14:29:24.4295795Z     
2025-01-24T14:29:24.4295884Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4296011Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4296092Z             return cls(
2025-01-24T14:29:24.4296249Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4296423Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4296600Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4296772Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4296927Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4297015Z                 lines_df=lines_df,
2025-01-24T14:29:24.4297142Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4297302Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4297435Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4297556Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4297756Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4297864Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4297971Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4298070Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4298157Z                 simulation=sim,
2025-01-24T14:29:24.4298389Z             )
2025-01-24T14:29:24.4298532Z         else: # real packets
2025-01-24T14:29:24.4298703Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4298789Z             # which got emitted
2025-01-24T14:29:24.4298896Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4298982Z >           return cls(
2025-01-24T14:29:24.4299155Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4299343Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4299420Z                     mask
2025-01-24T14:29:24.4299493Z                 ],
2025-01-24T14:29:24.4299682Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4299755Z                     mask
2025-01-24T14:29:24.4299834Z                 ],
2025-01-24T14:29:24.4300001Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4300083Z                     mask
2025-01-24T14:29:24.4300154Z                 ],
2025-01-24T14:29:24.4300327Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4300409Z                 lines_df=lines_df,
2025-01-24T14:29:24.4300594Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4300908Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4300989Z                     mask
2025-01-24T14:29:24.4301066Z                 ],
2025-01-24T14:29:24.4301196Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4301317Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4301503Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4301617Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4301823Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4301928Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4302010Z                 simulation=sim,
2025-01-24T14:29:24.4302086Z             )
2025-01-24T14:29:24.4302427Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4302436Z 
2025-01-24T14:29:24.4302616Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4302884Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] _
2025-01-24T14:29:24.4302889Z 
2025-01-24T14:29:24.4303103Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4303107Z 
2025-01-24T14:29:24.4303199Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4303289Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4303362Z         """
2025-01-24T14:29:24.4303516Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4303591Z     
2025-01-24T14:29:24.4303669Z         Parameters:
2025-01-24T14:29:24.4303756Z         -----------
2025-01-24T14:29:24.4303871Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4303946Z     
2025-01-24T14:29:24.4304019Z         Returns:
2025-01-24T14:29:24.4304105Z         --------
2025-01-24T14:29:24.4304193Z         An LIVPlotter instance.
2025-01-24T14:29:24.4304269Z         """
2025-01-24T14:29:24.4304407Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4304411Z 
2025-01-24T14:29:24.4304546Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4304666Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4304824Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4304974Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4305202Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4305335Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4305448Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4305452Z 
2025-01-24T14:29:24.4305671Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4305845Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4305928Z packets_mode = 'real'
2025-01-24T14:29:24.4305940Z 
2025-01-24T14:29:24.4306015Z     @classmethod
2025-01-24T14:29:24.4306130Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4306202Z         """
2025-01-24T14:29:24.4306401Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4306472Z     
2025-01-24T14:29:24.4306551Z         Parameters
2025-01-24T14:29:24.4306626Z         ----------
2025-01-24T14:29:24.4306733Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4306879Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4306976Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4307113Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4307281Z     
2025-01-24T14:29:24.4307353Z         Returns
2025-01-24T14:29:24.4307431Z         -------
2025-01-24T14:29:24.4307518Z         SimulationPacketData
2025-01-24T14:29:24.4307596Z         """
2025-01-24T14:29:24.4307708Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4307792Z             raise ValueError(
2025-01-24T14:29:24.4307915Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4308018Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4308097Z             )
2025-01-24T14:29:24.4308201Z         # Properties common among both packet modes
2025-01-24T14:29:24.4308586Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4308666Z             "line_id"
2025-01-24T14:29:24.4308742Z         )
2025-01-24T14:29:24.4308852Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4308981Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4309070Z         time_of_simulation = (
2025-01-24T14:29:24.4309230Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4309301Z         )
2025-01-24T14:29:24.4309374Z     
2025-01-24T14:29:24.4309450Z         spectrum = (
2025-01-24T14:29:24.4309569Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4309664Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4309782Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4309857Z         )
2025-01-24T14:29:24.4309924Z     
2025-01-24T14:29:24.4310017Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4310140Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4310220Z             return cls(
2025-01-24T14:29:24.4310378Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4310555Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4310740Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4310914Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4311066Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4311153Z                 lines_df=lines_df,
2025-01-24T14:29:24.4311285Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4311438Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4311574Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4311694Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4311890Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4311997Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4312103Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4312205Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4312293Z                 simulation=sim,
2025-01-24T14:29:24.4312365Z             )
2025-01-24T14:29:24.4312451Z         else: # real packets
2025-01-24T14:29:24.4312620Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4312701Z             # which got emitted
2025-01-24T14:29:24.4312815Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4312890Z >           return cls(
2025-01-24T14:29:24.4313068Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4313258Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4313338Z                     mask
2025-01-24T14:29:24.4313410Z                 ],
2025-01-24T14:29:24.4313604Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4313799Z                     mask
2025-01-24T14:29:24.4313873Z                 ],
2025-01-24T14:29:24.4314039Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4314118Z                     mask
2025-01-24T14:29:24.4314186Z                 ],
2025-01-24T14:29:24.4314356Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4314441Z                 lines_df=lines_df,
2025-01-24T14:29:24.4314602Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4314878Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4314957Z                     mask
2025-01-24T14:29:24.4315033Z                 ],
2025-01-24T14:29:24.4315160Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4315278Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4315469Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4315585Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4315688Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4315788Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4315874Z                 simulation=sim,
2025-01-24T14:29:24.4315943Z             )
2025-01-24T14:29:24.4316280Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4316285Z 
2025-01-24T14:29:24.4316464Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4316734Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] _
2025-01-24T14:29:24.4316739Z 
2025-01-24T14:29:24.4316952Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4316960Z 
2025-01-24T14:29:24.4317054Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4317144Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4317218Z         """
2025-01-24T14:29:24.4317373Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4317444Z     
2025-01-24T14:29:24.4317530Z         Parameters:
2025-01-24T14:29:24.4317605Z         -----------
2025-01-24T14:29:24.4317725Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4317795Z     
2025-01-24T14:29:24.4317872Z         Returns:
2025-01-24T14:29:24.4317946Z         --------
2025-01-24T14:29:24.4318036Z         An LIVPlotter instance.
2025-01-24T14:29:24.4318110Z         """
2025-01-24T14:29:24.4318345Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4318351Z 
2025-01-24T14:29:24.4318488Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4318603Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4318765Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4318918Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4319138Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4319270Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4319382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4319387Z 
2025-01-24T14:29:24.4319601Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4319778Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4319860Z packets_mode = 'real'
2025-01-24T14:29:24.4319864Z 
2025-01-24T14:29:24.4319944Z     @classmethod
2025-01-24T14:29:24.4320054Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4320131Z         """
2025-01-24T14:29:24.4320322Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4320517Z     
2025-01-24T14:29:24.4320595Z         Parameters
2025-01-24T14:29:24.4320671Z         ----------
2025-01-24T14:29:24.4320776Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4320925Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4321020Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4321158Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4321233Z     
2025-01-24T14:29:24.4321306Z         Returns
2025-01-24T14:29:24.4321386Z         -------
2025-01-24T14:29:24.4321579Z         SimulationPacketData
2025-01-24T14:29:24.4321658Z         """
2025-01-24T14:29:24.4321764Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4321852Z             raise ValueError(
2025-01-24T14:29:24.4321970Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4322078Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4322154Z             )
2025-01-24T14:29:24.4322265Z         # Properties common among both packet modes
2025-01-24T14:29:24.4322430Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4322506Z             "line_id"
2025-01-24T14:29:24.4322582Z         )
2025-01-24T14:29:24.4322691Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4322820Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4322903Z         time_of_simulation = (
2025-01-24T14:29:24.4323065Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4323135Z         )
2025-01-24T14:29:24.4323207Z     
2025-01-24T14:29:24.4323286Z         spectrum = (
2025-01-24T14:29:24.4323404Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4323494Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4323617Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4323694Z         )
2025-01-24T14:29:24.4323769Z     
2025-01-24T14:29:24.4323862Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4323984Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4324065Z             return cls(
2025-01-24T14:29:24.4324228Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4324405Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4324583Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4324757Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4324909Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4324998Z                 lines_df=lines_df,
2025-01-24T14:29:24.4325125Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4325286Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4325420Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4325534Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4325726Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4325836Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4325945Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4326051Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4326158Z                 simulation=sim,
2025-01-24T14:29:24.4326230Z             )
2025-01-24T14:29:24.4326318Z         else: # real packets
2025-01-24T14:29:24.4326482Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4326567Z             # which got emitted
2025-01-24T14:29:24.4326675Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4326846Z >           return cls(
2025-01-24T14:29:24.4327020Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4327211Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4327292Z                     mask
2025-01-24T14:29:24.4327364Z                 ],
2025-01-24T14:29:24.4327559Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4327635Z                     mask
2025-01-24T14:29:24.4327710Z                 ],
2025-01-24T14:29:24.4327954Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4328034Z                     mask
2025-01-24T14:29:24.4328108Z                 ],
2025-01-24T14:29:24.4328384Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4328467Z                 lines_df=lines_df,
2025-01-24T14:29:24.4328641Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4328817Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4328890Z                     mask
2025-01-24T14:29:24.4328964Z                 ],
2025-01-24T14:29:24.4329101Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4329227Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4329440Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4329557Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4329657Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4329753Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4329833Z                 simulation=sim,
2025-01-24T14:29:24.4329906Z             )
2025-01-24T14:29:24.4330245Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4330255Z 
2025-01-24T14:29:24.4330424Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4330700Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] _
2025-01-24T14:29:24.4330705Z 
2025-01-24T14:29:24.4330921Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4330925Z 
2025-01-24T14:29:24.4331022Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4331120Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4331229Z         """
2025-01-24T14:29:24.4331379Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4331454Z     
2025-01-24T14:29:24.4331530Z         Parameters:
2025-01-24T14:29:24.4331609Z         -----------
2025-01-24T14:29:24.4331723Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4331802Z     
2025-01-24T14:29:24.4331880Z         Returns:
2025-01-24T14:29:24.4331954Z         --------
2025-01-24T14:29:24.4332044Z         An LIVPlotter instance.
2025-01-24T14:29:24.4332114Z         """
2025-01-24T14:29:24.4332250Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4332254Z 
2025-01-24T14:29:24.4332390Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4332507Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4332665Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4332822Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4333039Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4333180Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4333288Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4333420Z 
2025-01-24T14:29:24.4333637Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4333808Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4333889Z packets_mode = 'real'
2025-01-24T14:29:24.4333894Z 
2025-01-24T14:29:24.4333970Z     @classmethod
2025-01-24T14:29:24.4334079Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4334153Z         """
2025-01-24T14:29:24.4334344Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4334420Z     
2025-01-24T14:29:24.4334601Z         Parameters
2025-01-24T14:29:24.4334683Z         ----------
2025-01-24T14:29:24.4334783Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4334938Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4335029Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4335176Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4335251Z     
2025-01-24T14:29:24.4335322Z         Returns
2025-01-24T14:29:24.4335400Z         -------
2025-01-24T14:29:24.4335486Z         SimulationPacketData
2025-01-24T14:29:24.4335561Z         """
2025-01-24T14:29:24.4335669Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4335756Z             raise ValueError(
2025-01-24T14:29:24.4335873Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4335981Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4336052Z             )
2025-01-24T14:29:24.4336167Z         # Properties common among both packet modes
2025-01-24T14:29:24.4336326Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4336407Z             "line_id"
2025-01-24T14:29:24.4336479Z         )
2025-01-24T14:29:24.4336596Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4336732Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4336816Z         time_of_simulation = (
2025-01-24T14:29:24.4336977Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4337049Z         )
2025-01-24T14:29:24.4337124Z     
2025-01-24T14:29:24.4337202Z         spectrum = (
2025-01-24T14:29:24.4337322Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4337412Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4337534Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4337604Z         )
2025-01-24T14:29:24.4337681Z     
2025-01-24T14:29:24.4337773Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4337898Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4337974Z             return cls(
2025-01-24T14:29:24.4338134Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4338493Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4338681Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4338853Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4339005Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4339092Z                 lines_df=lines_df,
2025-01-24T14:29:24.4339219Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4339376Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4339510Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4339629Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4339816Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4339928Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4340162Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4340259Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4340344Z                 simulation=sim,
2025-01-24T14:29:24.4340414Z             )
2025-01-24T14:29:24.4340500Z         else: # real packets
2025-01-24T14:29:24.4340667Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4340752Z             # which got emitted
2025-01-24T14:29:24.4340861Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4340942Z >           return cls(
2025-01-24T14:29:24.4341238Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4341430Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4341505Z                     mask
2025-01-24T14:29:24.4341583Z                 ],
2025-01-24T14:29:24.4341779Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4341857Z                     mask
2025-01-24T14:29:24.4341933Z                 ],
2025-01-24T14:29:24.4342098Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4342174Z                     mask
2025-01-24T14:29:24.4342245Z                 ],
2025-01-24T14:29:24.4342416Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4342498Z                 lines_df=lines_df,
2025-01-24T14:29:24.4342663Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4342838Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4342918Z                     mask
2025-01-24T14:29:24.4342989Z                 ],
2025-01-24T14:29:24.4343121Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4343241Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4343431Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4343544Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4343642Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4343741Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4343823Z                 simulation=sim,
2025-01-24T14:29:24.4343898Z             )
2025-01-24T14:29:24.4344235Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4344243Z 
2025-01-24T14:29:24.4344418Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4344686Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] _
2025-01-24T14:29:24.4344691Z 
2025-01-24T14:29:24.4344907Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4344915Z 
2025-01-24T14:29:24.4345009Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4345101Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4345179Z         """
2025-01-24T14:29:24.4345330Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4345406Z     
2025-01-24T14:29:24.4345482Z         Parameters:
2025-01-24T14:29:24.4345561Z         -----------
2025-01-24T14:29:24.4345674Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4345749Z     
2025-01-24T14:29:24.4345821Z         Returns:
2025-01-24T14:29:24.4345908Z         --------
2025-01-24T14:29:24.4345993Z         An LIVPlotter instance.
2025-01-24T14:29:24.4346068Z         """
2025-01-24T14:29:24.4346197Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4346206Z 
2025-01-24T14:29:24.4346339Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4346544Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4346703Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4346853Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4347065Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4347207Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4347317Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4347321Z 
2025-01-24T14:29:24.4347616Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4347786Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4347873Z packets_mode = 'real'
2025-01-24T14:29:24.4347877Z 
2025-01-24T14:29:24.4347958Z     @classmethod
2025-01-24T14:29:24.4348068Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4348147Z         """
2025-01-24T14:29:24.4348456Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4348535Z     
2025-01-24T14:29:24.4348610Z         Parameters
2025-01-24T14:29:24.4348688Z         ----------
2025-01-24T14:29:24.4348788Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4348941Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4349033Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4349177Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4349247Z     
2025-01-24T14:29:24.4349328Z         Returns
2025-01-24T14:29:24.4349400Z         -------
2025-01-24T14:29:24.4349493Z         SimulationPacketData
2025-01-24T14:29:24.4349563Z         """
2025-01-24T14:29:24.4349673Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4349760Z             raise ValueError(
2025-01-24T14:29:24.4349878Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4349990Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4350062Z             )
2025-01-24T14:29:24.4350169Z         # Properties common among both packet modes
2025-01-24T14:29:24.4350326Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4350405Z             "line_id"
2025-01-24T14:29:24.4350474Z         )
2025-01-24T14:29:24.4350586Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4350710Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4350800Z         time_of_simulation = (
2025-01-24T14:29:24.4350958Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4351034Z         )
2025-01-24T14:29:24.4351104Z     
2025-01-24T14:29:24.4351186Z         spectrum = (
2025-01-24T14:29:24.4351303Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4351391Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4351516Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4351587Z         )
2025-01-24T14:29:24.4351661Z     
2025-01-24T14:29:24.4351750Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4351876Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4351951Z             return cls(
2025-01-24T14:29:24.4352110Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4352281Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4352464Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4352629Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4352784Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4352871Z                 lines_df=lines_df,
2025-01-24T14:29:24.4353123Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4353281Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4353410Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4353529Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4353714Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4353826Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4353926Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4354127Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4354210Z                 simulation=sim,
2025-01-24T14:29:24.4354285Z             )
2025-01-24T14:29:24.4354367Z         else: # real packets
2025-01-24T14:29:24.4354537Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4354631Z             # which got emitted
2025-01-24T14:29:24.4354737Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4354817Z >           return cls(
2025-01-24T14:29:24.4354991Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4355181Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4355256Z                     mask
2025-01-24T14:29:24.4355330Z                 ],
2025-01-24T14:29:24.4355518Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4355600Z                     mask
2025-01-24T14:29:24.4355672Z                 ],
2025-01-24T14:29:24.4355843Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4355916Z                     mask
2025-01-24T14:29:24.4355990Z                 ],
2025-01-24T14:29:24.4356160Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4356248Z                 lines_df=lines_df,
2025-01-24T14:29:24.4356416Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4356590Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4356668Z                     mask
2025-01-24T14:29:24.4356738Z                 ],
2025-01-24T14:29:24.4356869Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4356983Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4357180Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4357286Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4357387Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4357481Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4357565Z                 simulation=sim,
2025-01-24T14:29:24.4357642Z             )
2025-01-24T14:29:24.4357973Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4357978Z 
2025-01-24T14:29:24.4358155Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4358556Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] _
2025-01-24T14:29:24.4358561Z 
2025-01-24T14:29:24.4358779Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4358784Z 
2025-01-24T14:29:24.4358879Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4358974Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4359045Z         """
2025-01-24T14:29:24.4359200Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4359275Z     
2025-01-24T14:29:24.4359351Z         Parameters:
2025-01-24T14:29:24.4359429Z         -----------
2025-01-24T14:29:24.4359688Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4359762Z     
2025-01-24T14:29:24.4359835Z         Returns:
2025-01-24T14:29:24.4359914Z         --------
2025-01-24T14:29:24.4359998Z         An LIVPlotter instance.
2025-01-24T14:29:24.4360078Z         """
2025-01-24T14:29:24.4360211Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4360215Z 
2025-01-24T14:29:24.4360354Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4360467Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4360736Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4360890Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4361105Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4361244Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4361359Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4361363Z 
2025-01-24T14:29:24.4361580Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4361747Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4361834Z packets_mode = 'real'
2025-01-24T14:29:24.4361837Z 
2025-01-24T14:29:24.4361911Z     @classmethod
2025-01-24T14:29:24.4362026Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4362097Z         """
2025-01-24T14:29:24.4362299Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4362379Z     
2025-01-24T14:29:24.4362455Z         Parameters
2025-01-24T14:29:24.4362534Z         ----------
2025-01-24T14:29:24.4362633Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4362784Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4362879Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4363021Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4363091Z     
2025-01-24T14:29:24.4363167Z         Returns
2025-01-24T14:29:24.4363240Z         -------
2025-01-24T14:29:24.4363331Z         SimulationPacketData
2025-01-24T14:29:24.4363401Z         """
2025-01-24T14:29:24.4363510Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4363592Z             raise ValueError(
2025-01-24T14:29:24.4363713Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4363819Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4363895Z             )
2025-01-24T14:29:24.4364008Z         # Properties common among both packet modes
2025-01-24T14:29:24.4364169Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4364248Z             "line_id"
2025-01-24T14:29:24.4364318Z         )
2025-01-24T14:29:24.4364435Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4364559Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4364655Z         time_of_simulation = (
2025-01-24T14:29:24.4364809Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4364884Z         )
2025-01-24T14:29:24.4364954Z     
2025-01-24T14:29:24.4365035Z         spectrum = (
2025-01-24T14:29:24.4365150Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4365243Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4365360Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4365441Z         )
2025-01-24T14:29:24.4365515Z     
2025-01-24T14:29:24.4365605Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4365733Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4365810Z             return cls(
2025-01-24T14:29:24.4365971Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4366250Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4366430Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4366597Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4366752Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4366834Z                 lines_df=lines_df,
2025-01-24T14:29:24.4366965Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4367193Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4367332Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4367453Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4367639Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4367756Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4367857Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4367957Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4368039Z                 simulation=sim,
2025-01-24T14:29:24.4368114Z             )
2025-01-24T14:29:24.4368194Z         else: # real packets
2025-01-24T14:29:24.4368471Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4368551Z             # which got emitted
2025-01-24T14:29:24.4368662Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4368743Z >           return cls(
2025-01-24T14:29:24.4368920Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4369110Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4369186Z                     mask
2025-01-24T14:29:24.4369270Z                 ],
2025-01-24T14:29:24.4369458Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4369536Z                     mask
2025-01-24T14:29:24.4369607Z                 ],
2025-01-24T14:29:24.4369777Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4369850Z                     mask
2025-01-24T14:29:24.4369926Z                 ],
2025-01-24T14:29:24.4370094Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4370182Z                 lines_df=lines_df,
2025-01-24T14:29:24.4370347Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4370531Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4370609Z                     mask
2025-01-24T14:29:24.4370680Z                 ],
2025-01-24T14:29:24.4370812Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4370933Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4371124Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4371231Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4371334Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4371429Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4371516Z                 simulation=sim,
2025-01-24T14:29:24.4371587Z             )
2025-01-24T14:29:24.4371925Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4371929Z 
2025-01-24T14:29:24.4372104Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4372370Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] _
2025-01-24T14:29:24.4372519Z 
2025-01-24T14:29:24.4372736Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4372741Z 
2025-01-24T14:29:24.4372829Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4372922Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4372993Z         """
2025-01-24T14:29:24.4373149Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4373219Z     
2025-01-24T14:29:24.4373300Z         Parameters:
2025-01-24T14:29:24.4373373Z         -----------
2025-01-24T14:29:24.4373490Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4373565Z     
2025-01-24T14:29:24.4373750Z         Returns:
2025-01-24T14:29:24.4373830Z         --------
2025-01-24T14:29:24.4373914Z         An LIVPlotter instance.
2025-01-24T14:29:24.4373989Z         """
2025-01-24T14:29:24.4374120Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4374124Z 
2025-01-24T14:29:24.4374273Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4374385Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4374545Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4374690Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4374907Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4375039Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4375152Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4375160Z 
2025-01-24T14:29:24.4375380Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4375547Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4375634Z packets_mode = 'real'
2025-01-24T14:29:24.4375639Z 
2025-01-24T14:29:24.4375713Z     @classmethod
2025-01-24T14:29:24.4375832Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4375903Z         """
2025-01-24T14:29:24.4376100Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4376171Z     
2025-01-24T14:29:24.4376250Z         Parameters
2025-01-24T14:29:24.4376323Z         ----------
2025-01-24T14:29:24.4376428Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4376572Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4376668Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4376813Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4376883Z     
2025-01-24T14:29:24.4376959Z         Returns
2025-01-24T14:29:24.4377032Z         -------
2025-01-24T14:29:24.4377123Z         SimulationPacketData
2025-01-24T14:29:24.4377193Z         """
2025-01-24T14:29:24.4377303Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4377389Z             raise ValueError(
2025-01-24T14:29:24.4377514Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4377616Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4377690Z             )
2025-01-24T14:29:24.4377796Z         # Properties common among both packet modes
2025-01-24T14:29:24.4377962Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4378036Z             "line_id"
2025-01-24T14:29:24.4378111Z         )
2025-01-24T14:29:24.4378324Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4378457Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4378546Z         time_of_simulation = (
2025-01-24T14:29:24.4378701Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4378777Z         )
2025-01-24T14:29:24.4378845Z     
2025-01-24T14:29:24.4378926Z         spectrum = (
2025-01-24T14:29:24.4379043Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4379261Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4379378Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4379455Z         )
2025-01-24T14:29:24.4379524Z     
2025-01-24T14:29:24.4379617Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4379738Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4379819Z             return cls(
2025-01-24T14:29:24.4379975Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4380251Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4380436Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4380605Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4380761Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4380849Z                 lines_df=lines_df,
2025-01-24T14:29:24.4380978Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4381131Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4381262Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4381377Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4381566Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4381678Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4381784Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4381884Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4381966Z                 simulation=sim,
2025-01-24T14:29:24.4382041Z             )
2025-01-24T14:29:24.4382121Z         else: # real packets
2025-01-24T14:29:24.4382293Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4382373Z             # which got emitted
2025-01-24T14:29:24.4382485Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4382559Z >           return cls(
2025-01-24T14:29:24.4382737Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4382919Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4382999Z                     mask
2025-01-24T14:29:24.4383070Z                 ],
2025-01-24T14:29:24.4383267Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4383345Z                     mask
2025-01-24T14:29:24.4383417Z                 ],
2025-01-24T14:29:24.4383589Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4383662Z                     mask
2025-01-24T14:29:24.4383742Z                 ],
2025-01-24T14:29:24.4383911Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4384001Z                 lines_df=lines_df,
2025-01-24T14:29:24.4384165Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4384343Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4384421Z                     mask
2025-01-24T14:29:24.4384498Z                 ],
2025-01-24T14:29:24.4384625Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4384753Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4384947Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4385057Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4385161Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4385257Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4385434Z                 simulation=sim,
2025-01-24T14:29:24.4385506Z             )
2025-01-24T14:29:24.4385846Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4385851Z 
2025-01-24T14:29:24.4386022Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4386285Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] _
2025-01-24T14:29:24.4386290Z 
2025-01-24T14:29:24.4386588Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4386592Z 
2025-01-24T14:29:24.4386684Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4386780Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4386851Z         """
2025-01-24T14:29:24.4387011Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4387082Z     
2025-01-24T14:29:24.4387169Z         Parameters:
2025-01-24T14:29:24.4387247Z         -----------
2025-01-24T14:29:24.4387365Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4387435Z     
2025-01-24T14:29:24.4387514Z         Returns:
2025-01-24T14:29:24.4387587Z         --------
2025-01-24T14:29:24.4387682Z         An LIVPlotter instance.
2025-01-24T14:29:24.4387752Z         """
2025-01-24T14:29:24.4387887Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4387891Z 
2025-01-24T14:29:24.4388033Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4388152Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4388416Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4388564Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4388778Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4388915Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4389027Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4389031Z 
2025-01-24T14:29:24.4389247Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4389423Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4389509Z packets_mode = 'real'
2025-01-24T14:29:24.4389513Z 
2025-01-24T14:29:24.4389588Z     @classmethod
2025-01-24T14:29:24.4389701Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4389772Z         """
2025-01-24T14:29:24.4389974Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4390045Z     
2025-01-24T14:29:24.4390125Z         Parameters
2025-01-24T14:29:24.4390199Z         ----------
2025-01-24T14:29:24.4390304Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4390455Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4390556Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4390694Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4390769Z     
2025-01-24T14:29:24.4390842Z         Returns
2025-01-24T14:29:24.4390920Z         -------
2025-01-24T14:29:24.4391006Z         SimulationPacketData
2025-01-24T14:29:24.4391080Z         """
2025-01-24T14:29:24.4391191Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4391273Z             raise ValueError(
2025-01-24T14:29:24.4391396Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4391504Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4391577Z             )
2025-01-24T14:29:24.4391684Z         # Properties common among both packet modes
2025-01-24T14:29:24.4391851Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4392068Z             "line_id"
2025-01-24T14:29:24.4392144Z         )
2025-01-24T14:29:24.4392254Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4392384Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4392466Z         time_of_simulation = (
2025-01-24T14:29:24.4392629Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4392701Z         )
2025-01-24T14:29:24.4392775Z     
2025-01-24T14:29:24.4392855Z         spectrum = (
2025-01-24T14:29:24.4392969Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4393064Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4393287Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4393366Z         )
2025-01-24T14:29:24.4393438Z     
2025-01-24T14:29:24.4393532Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4393657Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4393738Z             return cls(
2025-01-24T14:29:24.4393900Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4394076Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4394252Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4394421Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4394581Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4394665Z                 lines_df=lines_df,
2025-01-24T14:29:24.4394801Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4394955Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4395089Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4395203Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4395397Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4395506Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4395612Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4395710Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4395795Z                 simulation=sim,
2025-01-24T14:29:24.4395867Z             )
2025-01-24T14:29:24.4395953Z         else: # real packets
2025-01-24T14:29:24.4396122Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4396203Z             # which got emitted
2025-01-24T14:29:24.4396317Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4396392Z >           return cls(
2025-01-24T14:29:24.4396570Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4396754Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4396837Z                     mask
2025-01-24T14:29:24.4396908Z                 ],
2025-01-24T14:29:24.4397102Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4397176Z                     mask
2025-01-24T14:29:24.4397255Z                 ],
2025-01-24T14:29:24.4397421Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4397499Z                     mask
2025-01-24T14:29:24.4397574Z                 ],
2025-01-24T14:29:24.4397739Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4397832Z                 lines_df=lines_df,
2025-01-24T14:29:24.4397994Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4398171Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4398349Z                     mask
2025-01-24T14:29:24.4398550Z                 ],
2025-01-24T14:29:24.4398682Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4398802Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4398987Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4399101Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4399199Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4399300Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4399384Z                 simulation=sim,
2025-01-24T14:29:24.4399558Z             )
2025-01-24T14:29:24.4399904Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4399909Z 
2025-01-24T14:29:24.4400079Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4400347Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-24T14:29:24.4400357Z 
2025-01-24T14:29:24.4400571Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4400576Z 
2025-01-24T14:29:24.4400669Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4400759Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4400835Z         """
2025-01-24T14:29:24.4400992Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4401062Z     
2025-01-24T14:29:24.4401143Z         Parameters:
2025-01-24T14:29:24.4401217Z         -----------
2025-01-24T14:29:24.4401339Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4401409Z     
2025-01-24T14:29:24.4401487Z         Returns:
2025-01-24T14:29:24.4401560Z         --------
2025-01-24T14:29:24.4401649Z         An LIVPlotter instance.
2025-01-24T14:29:24.4401722Z         """
2025-01-24T14:29:24.4401856Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4401864Z 
2025-01-24T14:29:24.4401997Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4402114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4402270Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4402419Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4402635Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4402765Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4402880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4402884Z 
2025-01-24T14:29:24.4403099Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4403266Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4403346Z packets_mode = 'real'
2025-01-24T14:29:24.4403354Z 
2025-01-24T14:29:24.4403431Z     @classmethod
2025-01-24T14:29:24.4403541Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4403616Z         """
2025-01-24T14:29:24.4403810Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4403880Z     
2025-01-24T14:29:24.4403960Z         Parameters
2025-01-24T14:29:24.4404032Z         ----------
2025-01-24T14:29:24.4404133Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4404279Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4404383Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4404520Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4404598Z     
2025-01-24T14:29:24.4404670Z         Returns
2025-01-24T14:29:24.4404748Z         -------
2025-01-24T14:29:24.4404835Z         SimulationPacketData
2025-01-24T14:29:24.4404912Z         """
2025-01-24T14:29:24.4405108Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4405192Z             raise ValueError(
2025-01-24T14:29:24.4405311Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4405416Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4405489Z             )
2025-01-24T14:29:24.4405595Z         # Properties common among both packet modes
2025-01-24T14:29:24.4405762Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4405838Z             "line_id"
2025-01-24T14:29:24.4405913Z         )
2025-01-24T14:29:24.4406098Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4406229Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4406312Z         time_of_simulation = (
2025-01-24T14:29:24.4406471Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4406541Z         )
2025-01-24T14:29:24.4406615Z     
2025-01-24T14:29:24.4406697Z         spectrum = (
2025-01-24T14:29:24.4406817Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4406905Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4407027Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4407103Z         )
2025-01-24T14:29:24.4407171Z     
2025-01-24T14:29:24.4407268Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4407390Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4407471Z             return cls(
2025-01-24T14:29:24.4407626Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4407807Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4407983Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4408154Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4408407Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4408496Z                 lines_df=lines_df,
2025-01-24T14:29:24.4408625Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4408782Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4408917Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4409032Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4409223Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4409334Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4409442Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4409537Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4409623Z                 simulation=sim,
2025-01-24T14:29:24.4409693Z             )
2025-01-24T14:29:24.4409783Z         else: # real packets
2025-01-24T14:29:24.4409947Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4410033Z             # which got emitted
2025-01-24T14:29:24.4410138Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4410220Z >           return cls(
2025-01-24T14:29:24.4410401Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4410584Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4410663Z                     mask
2025-01-24T14:29:24.4410736Z                 ],
2025-01-24T14:29:24.4410934Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4411008Z                     mask
2025-01-24T14:29:24.4411084Z                 ],
2025-01-24T14:29:24.4411251Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4411460Z                     mask
2025-01-24T14:29:24.4411530Z                 ],
2025-01-24T14:29:24.4411701Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4411783Z                 lines_df=lines_df,
2025-01-24T14:29:24.4411948Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4412127Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4412200Z                     mask
2025-01-24T14:29:24.4412276Z                 ],
2025-01-24T14:29:24.4412527Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4412649Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4412836Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4412947Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4413046Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4413154Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4413234Z                 simulation=sim,
2025-01-24T14:29:24.4413311Z             )
2025-01-24T14:29:24.4413643Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4413653Z 
2025-01-24T14:29:24.4413822Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4414091Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] _
2025-01-24T14:29:24.4414097Z 
2025-01-24T14:29:24.4414312Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4414317Z 
2025-01-24T14:29:24.4414412Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4414504Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4414583Z         """
2025-01-24T14:29:24.4414732Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4414812Z     
2025-01-24T14:29:24.4414889Z         Parameters:
2025-01-24T14:29:24.4414968Z         -----------
2025-01-24T14:29:24.4415082Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4415158Z     
2025-01-24T14:29:24.4415238Z         Returns:
2025-01-24T14:29:24.4415312Z         --------
2025-01-24T14:29:24.4415401Z         An LIVPlotter instance.
2025-01-24T14:29:24.4415473Z         """
2025-01-24T14:29:24.4415610Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4415614Z 
2025-01-24T14:29:24.4415752Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4415870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4416029Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4416183Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4416398Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4416534Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4416651Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4416655Z 
2025-01-24T14:29:24.4416872Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4417045Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4417127Z packets_mode = 'real'
2025-01-24T14:29:24.4417131Z 
2025-01-24T14:29:24.4417208Z     @classmethod
2025-01-24T14:29:24.4417322Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4417394Z         """
2025-01-24T14:29:24.4417584Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4417660Z     
2025-01-24T14:29:24.4417734Z         Parameters
2025-01-24T14:29:24.4417813Z         ----------
2025-01-24T14:29:24.4418001Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4418154Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4418355Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4418495Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4418569Z     
2025-01-24T14:29:24.4418640Z         Returns
2025-01-24T14:29:24.4418714Z         -------
2025-01-24T14:29:24.4418800Z         SimulationPacketData
2025-01-24T14:29:24.4418875Z         """
2025-01-24T14:29:24.4418980Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4419067Z             raise ValueError(
2025-01-24T14:29:24.4419316Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4419428Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4419498Z             )
2025-01-24T14:29:24.4419609Z         # Properties common among both packet modes
2025-01-24T14:29:24.4419767Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4419852Z             "line_id"
2025-01-24T14:29:24.4419924Z         )
2025-01-24T14:29:24.4420038Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4420165Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4420248Z         time_of_simulation = (
2025-01-24T14:29:24.4420406Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4420477Z         )
2025-01-24T14:29:24.4420551Z     
2025-01-24T14:29:24.4420628Z         spectrum = (
2025-01-24T14:29:24.4420747Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4420839Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4420960Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4421031Z         )
2025-01-24T14:29:24.4421105Z     
2025-01-24T14:29:24.4421193Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4421320Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4421400Z             return cls(
2025-01-24T14:29:24.4421558Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4421733Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4421907Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4422078Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4422228Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4422320Z                 lines_df=lines_df,
2025-01-24T14:29:24.4422449Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4422607Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4422735Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4422857Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4423045Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4423158Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4423265Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4423359Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4423443Z                 simulation=sim,
2025-01-24T14:29:24.4423514Z             )
2025-01-24T14:29:24.4423603Z         else: # real packets
2025-01-24T14:29:24.4423773Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4423858Z             # which got emitted
2025-01-24T14:29:24.4423963Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4424040Z >           return cls(
2025-01-24T14:29:24.4424214Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4424521Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4424596Z                     mask
2025-01-24T14:29:24.4424680Z                 ],
2025-01-24T14:29:24.4424873Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4424949Z                     mask
2025-01-24T14:29:24.4425027Z                 ],
2025-01-24T14:29:24.4425193Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4425272Z                     mask
2025-01-24T14:29:24.4425342Z                 ],
2025-01-24T14:29:24.4425591Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4425676Z                 lines_df=lines_df,
2025-01-24T14:29:24.4425844Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4426016Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4426098Z                     mask
2025-01-24T14:29:24.4426168Z                 ],
2025-01-24T14:29:24.4426299Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4426417Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4426603Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4426715Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4426813Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4426912Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4426996Z                 simulation=sim,
2025-01-24T14:29:24.4427077Z             )
2025-01-24T14:29:24.4427409Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4427415Z 
2025-01-24T14:29:24.4427592Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4427854Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] _
2025-01-24T14:29:24.4427865Z 
2025-01-24T14:29:24.4428077Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4428081Z 
2025-01-24T14:29:24.4428176Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4428373Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4428451Z         """
2025-01-24T14:29:24.4428601Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4428678Z     
2025-01-24T14:29:24.4428755Z         Parameters:
2025-01-24T14:29:24.4428839Z         -----------
2025-01-24T14:29:24.4428952Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4429027Z     
2025-01-24T14:29:24.4429100Z         Returns:
2025-01-24T14:29:24.4429179Z         --------
2025-01-24T14:29:24.4429263Z         An LIVPlotter instance.
2025-01-24T14:29:24.4429367Z         """
2025-01-24T14:29:24.4429499Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4429509Z 
2025-01-24T14:29:24.4429644Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4429761Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4429919Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4430075Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4430285Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4430426Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4430535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4430539Z 
2025-01-24T14:29:24.4430765Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4430932Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4431142Z packets_mode = 'real'
2025-01-24T14:29:24.4431146Z 
2025-01-24T14:29:24.4431226Z     @classmethod
2025-01-24T14:29:24.4431341Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4431415Z         """
2025-01-24T14:29:24.4431608Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4431684Z     
2025-01-24T14:29:24.4431760Z         Parameters
2025-01-24T14:29:24.4431838Z         ----------
2025-01-24T14:29:24.4431937Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4432196Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4432294Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4432517Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4432644Z     
2025-01-24T14:29:24.4432784Z         Returns
2025-01-24T14:29:24.4433069Z         -------
2025-01-24T14:29:24.4433246Z         SimulationPacketData
2025-01-24T14:29:24.4433348Z         """
2025-01-24T14:29:24.4433539Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4433654Z             raise ValueError(
2025-01-24T14:29:24.4433883Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4434037Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4434176Z             )
2025-01-24T14:29:24.4434364Z         # Properties common among both packet modes
2025-01-24T14:29:24.4434564Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4434740Z             "line_id"
2025-01-24T14:29:24.4434862Z         )
2025-01-24T14:29:24.4435052Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4435206Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4435356Z         time_of_simulation = (
2025-01-24T14:29:24.4435528Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4435727Z         )
2025-01-24T14:29:24.4435829Z     
2025-01-24T14:29:24.4435988Z         spectrum = (
2025-01-24T14:29:24.4436132Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4436274Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4445289Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4445398Z         )
2025-01-24T14:29:24.4445477Z     
2025-01-24T14:29:24.4445586Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4445742Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4445828Z             return cls(
2025-01-24T14:29:24.4446009Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4446194Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4446372Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4446544Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4446701Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4446791Z                 lines_df=lines_df,
2025-01-24T14:29:24.4446926Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4447089Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4447224Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4447350Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4447548Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4447663Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4447777Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4447878Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4448137Z                 simulation=sim,
2025-01-24T14:29:24.4448210Z             )
2025-01-24T14:29:24.4448440Z         else: # real packets
2025-01-24T14:29:24.4448621Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4448707Z             # which got emitted
2025-01-24T14:29:24.4448819Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4448900Z >           return cls(
2025-01-24T14:29:24.4449084Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4449276Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4449473Z                     mask
2025-01-24T14:29:24.4449550Z                 ],
2025-01-24T14:29:24.4449752Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4449826Z                     mask
2025-01-24T14:29:24.4449903Z                 ],
2025-01-24T14:29:24.4450076Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4450154Z                     mask
2025-01-24T14:29:24.4450227Z                 ],
2025-01-24T14:29:24.4450399Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4450482Z                 lines_df=lines_df,
2025-01-24T14:29:24.4450656Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4450838Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4450917Z                     mask
2025-01-24T14:29:24.4450989Z                 ],
2025-01-24T14:29:24.4451133Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4451258Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4451451Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4451570Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4451679Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4451783Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4451866Z                 simulation=sim,
2025-01-24T14:29:24.4451943Z             )
2025-01-24T14:29:24.4452288Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4452295Z 
2025-01-24T14:29:24.4452479Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4452756Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] _
2025-01-24T14:29:24.4452761Z 
2025-01-24T14:29:24.4452980Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4452984Z 
2025-01-24T14:29:24.4453081Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4453174Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4453255Z         """
2025-01-24T14:29:24.4453410Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4453485Z     
2025-01-24T14:29:24.4453564Z         Parameters:
2025-01-24T14:29:24.4453648Z         -----------
2025-01-24T14:29:24.4453770Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4453846Z     
2025-01-24T14:29:24.4453920Z         Returns:
2025-01-24T14:29:24.4454000Z         --------
2025-01-24T14:29:24.4454086Z         An LIVPlotter instance.
2025-01-24T14:29:24.4454162Z         """
2025-01-24T14:29:24.4454305Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4454314Z 
2025-01-24T14:29:24.4454456Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4454579Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4454744Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4454899Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4455266Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4455411Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4455525Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4455529Z 
2025-01-24T14:29:24.4455755Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4455931Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4456015Z packets_mode = 'real'
2025-01-24T14:29:24.4456020Z 
2025-01-24T14:29:24.4456175Z     @classmethod
2025-01-24T14:29:24.4456290Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4456368Z         """
2025-01-24T14:29:24.4456573Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4456648Z     
2025-01-24T14:29:24.4456726Z         Parameters
2025-01-24T14:29:24.4456810Z         ----------
2025-01-24T14:29:24.4456914Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4457071Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4457169Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4457308Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4457383Z     
2025-01-24T14:29:24.4457455Z         Returns
2025-01-24T14:29:24.4457533Z         -------
2025-01-24T14:29:24.4457622Z         SimulationPacketData
2025-01-24T14:29:24.4457699Z         """
2025-01-24T14:29:24.4457815Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4457899Z             raise ValueError(
2025-01-24T14:29:24.4458026Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4458133Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4458207Z             )
2025-01-24T14:29:24.4458426Z         # Properties common among both packet modes
2025-01-24T14:29:24.4458602Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4458678Z             "line_id"
2025-01-24T14:29:24.4458753Z         )
2025-01-24T14:29:24.4458863Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4458994Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4459078Z         time_of_simulation = (
2025-01-24T14:29:24.4459240Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4459313Z         )
2025-01-24T14:29:24.4459387Z     
2025-01-24T14:29:24.4459466Z         spectrum = (
2025-01-24T14:29:24.4459592Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4459688Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4459805Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4459880Z         )
2025-01-24T14:29:24.4459950Z     
2025-01-24T14:29:24.4460048Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4460174Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4460254Z             return cls(
2025-01-24T14:29:24.4460414Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4460595Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4460772Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4460945Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4461104Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4461188Z                 lines_df=lines_df,
2025-01-24T14:29:24.4461325Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4461481Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4461742Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4461859Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4462053Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4462163Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4462269Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4462366Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4462455Z                 simulation=sim,
2025-01-24T14:29:24.4462526Z             )
2025-01-24T14:29:24.4462718Z         else: # real packets
2025-01-24T14:29:24.4462893Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4462976Z             # which got emitted
2025-01-24T14:29:24.4463094Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4463170Z >           return cls(
2025-01-24T14:29:24.4463359Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4463542Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4463626Z                     mask
2025-01-24T14:29:24.4463697Z                 ],
2025-01-24T14:29:24.4463889Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4463963Z                     mask
2025-01-24T14:29:24.4464039Z                 ],
2025-01-24T14:29:24.4464208Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4464290Z                     mask
2025-01-24T14:29:24.4464361Z                 ],
2025-01-24T14:29:24.4464532Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4464621Z                 lines_df=lines_df,
2025-01-24T14:29:24.4464785Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4464969Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4465042Z                     mask
2025-01-24T14:29:24.4465117Z                 ],
2025-01-24T14:29:24.4465247Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4465367Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4465555Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4465670Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4465771Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4465875Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4465962Z                 simulation=sim,
2025-01-24T14:29:24.4466032Z             )
2025-01-24T14:29:24.4466378Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4466386Z 
2025-01-24T14:29:24.4466561Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4466833Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] _
2025-01-24T14:29:24.4466837Z 
2025-01-24T14:29:24.4467053Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4467058Z 
2025-01-24T14:29:24.4467152Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4467244Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4467320Z         """
2025-01-24T14:29:24.4467486Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4467557Z     
2025-01-24T14:29:24.4467639Z         Parameters:
2025-01-24T14:29:24.4467713Z         -----------
2025-01-24T14:29:24.4467834Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4467904Z     
2025-01-24T14:29:24.4467982Z         Returns:
2025-01-24T14:29:24.4468054Z         --------
2025-01-24T14:29:24.4468340Z         An LIVPlotter instance.
2025-01-24T14:29:24.4468414Z         """
2025-01-24T14:29:24.4468557Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4468562Z 
2025-01-24T14:29:24.4468696Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4468813Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4468975Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4469126Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4469463Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4469603Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4469718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4469722Z 
2025-01-24T14:29:24.4469941Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4470120Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4470201Z packets_mode = 'real'
2025-01-24T14:29:24.4470205Z 
2025-01-24T14:29:24.4470282Z     @classmethod
2025-01-24T14:29:24.4470393Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4470467Z         """
2025-01-24T14:29:24.4470662Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4470737Z     
2025-01-24T14:29:24.4470818Z         Parameters
2025-01-24T14:29:24.4470891Z         ----------
2025-01-24T14:29:24.4470997Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4471152Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4471249Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4471389Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4471463Z     
2025-01-24T14:29:24.4471539Z         Returns
2025-01-24T14:29:24.4471618Z         -------
2025-01-24T14:29:24.4471707Z         SimulationPacketData
2025-01-24T14:29:24.4471783Z         """
2025-01-24T14:29:24.4471889Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4471978Z             raise ValueError(
2025-01-24T14:29:24.4472096Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4472207Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4472279Z             )
2025-01-24T14:29:24.4472390Z         # Properties common among both packet modes
2025-01-24T14:29:24.4472561Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4472636Z             "line_id"
2025-01-24T14:29:24.4472712Z         )
2025-01-24T14:29:24.4472822Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4472950Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4473033Z         time_of_simulation = (
2025-01-24T14:29:24.4473197Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4473268Z         )
2025-01-24T14:29:24.4473340Z     
2025-01-24T14:29:24.4473416Z         spectrum = (
2025-01-24T14:29:24.4473534Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4473623Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4473745Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4473816Z         )
2025-01-24T14:29:24.4473889Z     
2025-01-24T14:29:24.4473986Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4474109Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4474197Z             return cls(
2025-01-24T14:29:24.4474354Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4474530Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4474704Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4475006Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4475158Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4475249Z                 lines_df=lines_df,
2025-01-24T14:29:24.4475377Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4475537Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4475670Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4475876Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4476074Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4476181Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4476286Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4476387Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4476473Z                 simulation=sim,
2025-01-24T14:29:24.4476544Z             )
2025-01-24T14:29:24.4476631Z         else: # real packets
2025-01-24T14:29:24.4476798Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4476882Z             # which got emitted
2025-01-24T14:29:24.4476988Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4477067Z >           return cls(
2025-01-24T14:29:24.4477246Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4477434Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4477513Z                     mask
2025-01-24T14:29:24.4477584Z                 ],
2025-01-24T14:29:24.4477780Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4477854Z                     mask
2025-01-24T14:29:24.4477934Z                 ],
2025-01-24T14:29:24.4478104Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4478183Z                     mask
2025-01-24T14:29:24.4478382Z                 ],
2025-01-24T14:29:24.4478558Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4478640Z                 lines_df=lines_df,
2025-01-24T14:29:24.4478805Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4478984Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4479060Z                     mask
2025-01-24T14:29:24.4479135Z                 ],
2025-01-24T14:29:24.4479269Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4479390Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4479578Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4479690Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4479791Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4479886Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4479969Z                 simulation=sim,
2025-01-24T14:29:24.4480037Z             )
2025-01-24T14:29:24.4480382Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4480387Z 
2025-01-24T14:29:24.4480560Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4480829Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] _
2025-01-24T14:29:24.4480834Z 
2025-01-24T14:29:24.4481052Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4481057Z 
2025-01-24T14:29:24.4481147Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4481365Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4481436Z         """
2025-01-24T14:29:24.4481627Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4481696Z     
2025-01-24T14:29:24.4481775Z         Parameters:
2025-01-24T14:29:24.4481849Z         -----------
2025-01-24T14:29:24.4481970Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4482039Z     
2025-01-24T14:29:24.4482114Z         Returns:
2025-01-24T14:29:24.4482187Z         --------
2025-01-24T14:29:24.4482275Z         An LIVPlotter instance.
2025-01-24T14:29:24.4482343Z         """
2025-01-24T14:29:24.4482585Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4482590Z 
2025-01-24T14:29:24.4482732Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4482845Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4483010Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4483164Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4483383Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4483517Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4483629Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4483634Z 
2025-01-24T14:29:24.4483848Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4484021Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4484111Z packets_mode = 'real'
2025-01-24T14:29:24.4484115Z 
2025-01-24T14:29:24.4484189Z     @classmethod
2025-01-24T14:29:24.4484304Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4484374Z         """
2025-01-24T14:29:24.4484576Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4484649Z     
2025-01-24T14:29:24.4484726Z         Parameters
2025-01-24T14:29:24.4484800Z         ----------
2025-01-24T14:29:24.4484903Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4485050Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4485146Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4485282Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4485360Z     
2025-01-24T14:29:24.4485432Z         Returns
2025-01-24T14:29:24.4485511Z         -------
2025-01-24T14:29:24.4485601Z         SimulationPacketData
2025-01-24T14:29:24.4485675Z         """
2025-01-24T14:29:24.4485785Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4485869Z             raise ValueError(
2025-01-24T14:29:24.4485988Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4486092Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4486170Z             )
2025-01-24T14:29:24.4486277Z         # Properties common among both packet modes
2025-01-24T14:29:24.4486441Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4486513Z             "line_id"
2025-01-24T14:29:24.4486587Z         )
2025-01-24T14:29:24.4486694Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4486820Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4486903Z         time_of_simulation = (
2025-01-24T14:29:24.4487062Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4487136Z         )
2025-01-24T14:29:24.4487209Z     
2025-01-24T14:29:24.4487289Z         spectrum = (
2025-01-24T14:29:24.4487403Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4487495Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4487611Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4487776Z         )
2025-01-24T14:29:24.4487845Z     
2025-01-24T14:29:24.4487937Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4488058Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4488137Z             return cls(
2025-01-24T14:29:24.4488434Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4488610Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4488786Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4489071Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4489227Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4489310Z                 lines_df=lines_df,
2025-01-24T14:29:24.4489441Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4489593Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4489727Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4489839Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4490030Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4490135Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4490239Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4490334Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4490419Z                 simulation=sim,
2025-01-24T14:29:24.4490498Z             )
2025-01-24T14:29:24.4490580Z         else: # real packets
2025-01-24T14:29:24.4490750Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4490830Z             # which got emitted
2025-01-24T14:29:24.4490940Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4491020Z >           return cls(
2025-01-24T14:29:24.4491198Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4491382Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4491461Z                     mask
2025-01-24T14:29:24.4491532Z                 ],
2025-01-24T14:29:24.4491728Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4491802Z                     mask
2025-01-24T14:29:24.4491877Z                 ],
2025-01-24T14:29:24.4492046Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4492124Z                     mask
2025-01-24T14:29:24.4492198Z                 ],
2025-01-24T14:29:24.4492361Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4492450Z                 lines_df=lines_df,
2025-01-24T14:29:24.4492616Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4492793Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4492867Z                     mask
2025-01-24T14:29:24.4492942Z                 ],
2025-01-24T14:29:24.4493071Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4493191Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4493377Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4493490Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4493592Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4493694Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4493778Z                 simulation=sim,
2025-01-24T14:29:24.4493846Z             )
2025-01-24T14:29:24.4494186Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4494311Z 
2025-01-24T14:29:24.4494486Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4494767Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-24T14:29:24.4494774Z 
2025-01-24T14:29:24.4494984Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4494989Z 
2025-01-24T14:29:24.4495082Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4495176Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4495247Z         """
2025-01-24T14:29:24.4495496Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4495568Z     
2025-01-24T14:29:24.4495646Z         Parameters:
2025-01-24T14:29:24.4495721Z         -----------
2025-01-24T14:29:24.4495836Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4495904Z     
2025-01-24T14:29:24.4495983Z         Returns:
2025-01-24T14:29:24.4496056Z         --------
2025-01-24T14:29:24.4496142Z         An LIVPlotter instance.
2025-01-24T14:29:24.4496212Z         """
2025-01-24T14:29:24.4496351Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4496355Z 
2025-01-24T14:29:24.4496487Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4496599Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4496759Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4496911Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4497125Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4497258Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4497369Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4497378Z 
2025-01-24T14:29:24.4497595Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4497768Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4497853Z packets_mode = 'real'
2025-01-24T14:29:24.4497856Z 
2025-01-24T14:29:24.4497933Z     @classmethod
2025-01-24T14:29:24.4498043Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4498114Z         """
2025-01-24T14:29:24.4498420Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4498491Z     
2025-01-24T14:29:24.4498569Z         Parameters
2025-01-24T14:29:24.4498647Z         ----------
2025-01-24T14:29:24.4498750Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4498896Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4498990Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4499128Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4499205Z     
2025-01-24T14:29:24.4499276Z         Returns
2025-01-24T14:29:24.4499352Z         -------
2025-01-24T14:29:24.4499438Z         SimulationPacketData
2025-01-24T14:29:24.4499512Z         """
2025-01-24T14:29:24.4499615Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4499702Z             raise ValueError(
2025-01-24T14:29:24.4499819Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4499925Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4499999Z             )
2025-01-24T14:29:24.4500104Z         # Properties common among both packet modes
2025-01-24T14:29:24.4500272Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4500347Z             "line_id"
2025-01-24T14:29:24.4500419Z         )
2025-01-24T14:29:24.4500527Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4500654Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4500865Z         time_of_simulation = (
2025-01-24T14:29:24.4501025Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4501095Z         )
2025-01-24T14:29:24.4501169Z     
2025-01-24T14:29:24.4501245Z         spectrum = (
2025-01-24T14:29:24.4501363Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4501451Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4501574Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4501646Z         )
2025-01-24T14:29:24.4501714Z     
2025-01-24T14:29:24.4501805Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4502050Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4502132Z             return cls(
2025-01-24T14:29:24.4502287Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4502460Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4502640Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4502809Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4502959Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4503046Z                 lines_df=lines_df,
2025-01-24T14:29:24.4503171Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4503328Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4503466Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4503581Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4503771Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4503878Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4503987Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4504084Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4504169Z                 simulation=sim,
2025-01-24T14:29:24.4504242Z             )
2025-01-24T14:29:24.4504325Z         else: # real packets
2025-01-24T14:29:24.4504489Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4504571Z             # which got emitted
2025-01-24T14:29:24.4504676Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4504755Z >           return cls(
2025-01-24T14:29:24.4504934Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4505116Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4505197Z                     mask
2025-01-24T14:29:24.4505269Z                 ],
2025-01-24T14:29:24.4505461Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4505538Z                     mask
2025-01-24T14:29:24.4505612Z                 ],
2025-01-24T14:29:24.4505779Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4505855Z                     mask
2025-01-24T14:29:24.4505923Z                 ],
2025-01-24T14:29:24.4506091Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4506171Z                 lines_df=lines_df,
2025-01-24T14:29:24.4506335Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4506517Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4506590Z                     mask
2025-01-24T14:29:24.4506664Z                 ],
2025-01-24T14:29:24.4506790Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4506906Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4507180Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4507289Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4507386Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4507484Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4507563Z                 simulation=sim,
2025-01-24T14:29:24.4507634Z             )
2025-01-24T14:29:24.4507969Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4507977Z 
2025-01-24T14:29:24.4508319Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4508597Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] _
2025-01-24T14:29:24.4508602Z 
2025-01-24T14:29:24.4508814Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4508823Z 
2025-01-24T14:29:24.4508914Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4509003Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4509076Z         """
2025-01-24T14:29:24.4509222Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4509294Z     
2025-01-24T14:29:24.4509368Z         Parameters:
2025-01-24T14:29:24.4509445Z         -----------
2025-01-24T14:29:24.4509561Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4509629Z     
2025-01-24T14:29:24.4509702Z         Returns:
2025-01-24T14:29:24.4509773Z         --------
2025-01-24T14:29:24.4509862Z         An LIVPlotter instance.
2025-01-24T14:29:24.4509931Z         """
2025-01-24T14:29:24.4510068Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4510072Z 
2025-01-24T14:29:24.4510204Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4510316Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4510476Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4510626Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4510837Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4510973Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4511082Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4511087Z 
2025-01-24T14:29:24.4511302Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4511477Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4511558Z packets_mode = 'real'
2025-01-24T14:29:24.4511562Z 
2025-01-24T14:29:24.4511640Z     @classmethod
2025-01-24T14:29:24.4511748Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4511824Z         """
2025-01-24T14:29:24.4512020Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4512094Z     
2025-01-24T14:29:24.4512169Z         Parameters
2025-01-24T14:29:24.4512246Z         ----------
2025-01-24T14:29:24.4512346Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4512497Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4512595Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4512732Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4512807Z     
2025-01-24T14:29:24.4512880Z         Returns
2025-01-24T14:29:24.4512959Z         -------
2025-01-24T14:29:24.4513046Z         SimulationPacketData
2025-01-24T14:29:24.4513120Z         """
2025-01-24T14:29:24.4513225Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4513310Z             raise ValueError(
2025-01-24T14:29:24.4513425Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4513652Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4513721Z             )
2025-01-24T14:29:24.4513832Z         # Properties common among both packet modes
2025-01-24T14:29:24.4513990Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4514070Z             "line_id"
2025-01-24T14:29:24.4514142Z         )
2025-01-24T14:29:24.4514249Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4514379Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4514462Z         time_of_simulation = (
2025-01-24T14:29:24.4514723Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4514798Z         )
2025-01-24T14:29:24.4514870Z     
2025-01-24T14:29:24.4514945Z         spectrum = (
2025-01-24T14:29:24.4515064Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4515152Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4515276Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4515344Z         )
2025-01-24T14:29:24.4515414Z     
2025-01-24T14:29:24.4515502Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4515624Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4515699Z             return cls(
2025-01-24T14:29:24.4515855Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4516029Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4516206Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4516373Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4516520Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4516604Z                 lines_df=lines_df,
2025-01-24T14:29:24.4516729Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4516887Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4517012Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4517130Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4517315Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4517425Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4517529Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4517626Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4517710Z                 simulation=sim,
2025-01-24T14:29:24.4517780Z             )
2025-01-24T14:29:24.4517863Z         else: # real packets
2025-01-24T14:29:24.4518028Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4518111Z             # which got emitted
2025-01-24T14:29:24.4518219Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4518399Z >           return cls(
2025-01-24T14:29:24.4518570Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4518756Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4518829Z                     mask
2025-01-24T14:29:24.4518904Z                 ],
2025-01-24T14:29:24.4519094Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4519166Z                     mask
2025-01-24T14:29:24.4519242Z                 ],
2025-01-24T14:29:24.4519408Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4519488Z                     mask
2025-01-24T14:29:24.4519559Z                 ],
2025-01-24T14:29:24.4519727Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4519925Z                 lines_df=lines_df,
2025-01-24T14:29:24.4520088Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4520260Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4520337Z                     mask
2025-01-24T14:29:24.4520408Z                 ],
2025-01-24T14:29:24.4520539Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4520658Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4520841Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4521056Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4521158Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4521257Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4521336Z                 simulation=sim,
2025-01-24T14:29:24.4521414Z             )
2025-01-24T14:29:24.4521744Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4521749Z 
2025-01-24T14:29:24.4521925Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4522149Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _
2025-01-24T14:29:24.4522158Z 
2025-01-24T14:29:24.4522369Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4522373Z 
2025-01-24T14:29:24.4522466Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4522559Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4522634Z         """
2025-01-24T14:29:24.4522784Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4522859Z     
2025-01-24T14:29:24.4522936Z         Parameters:
2025-01-24T14:29:24.4523014Z         -----------
2025-01-24T14:29:24.4523126Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4523204Z     
2025-01-24T14:29:24.4523276Z         Returns:
2025-01-24T14:29:24.4523355Z         --------
2025-01-24T14:29:24.4523439Z         An LIVPlotter instance.
2025-01-24T14:29:24.4523513Z         """
2025-01-24T14:29:24.4523644Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4523652Z 
2025-01-24T14:29:24.4523787Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4523901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4524055Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4524206Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4524416Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4524551Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4524661Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4524668Z 
2025-01-24T14:29:24.4524887Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4525060Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4525141Z packets_mode = 'real'
2025-01-24T14:29:24.4525145Z 
2025-01-24T14:29:24.4525224Z     @classmethod
2025-01-24T14:29:24.4525334Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4525409Z         """
2025-01-24T14:29:24.4525600Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4525675Z     
2025-01-24T14:29:24.4525754Z         Parameters
2025-01-24T14:29:24.4525834Z         ----------
2025-01-24T14:29:24.4525932Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4526083Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4526176Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4526422Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4526492Z     
2025-01-24T14:29:24.4526570Z         Returns
2025-01-24T14:29:24.4526644Z         -------
2025-01-24T14:29:24.4526736Z         SimulationPacketData
2025-01-24T14:29:24.4526810Z         """
2025-01-24T14:29:24.4526916Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4527003Z             raise ValueError(
2025-01-24T14:29:24.4527118Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4527229Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4527304Z             )
2025-01-24T14:29:24.4527495Z         # Properties common among both packet modes
2025-01-24T14:29:24.4527660Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4527738Z             "line_id"
2025-01-24T14:29:24.4527810Z         )
2025-01-24T14:29:24.4527924Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4528055Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4528142Z         time_of_simulation = (
2025-01-24T14:29:24.4528403Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4528480Z         )
2025-01-24T14:29:24.4528554Z     
2025-01-24T14:29:24.4528634Z         spectrum = (
2025-01-24T14:29:24.4528755Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4528846Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4528968Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4529038Z         )
2025-01-24T14:29:24.4529109Z     
2025-01-24T14:29:24.4529203Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4529357Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4529435Z             return cls(
2025-01-24T14:29:24.4529598Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4529772Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4529953Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4530126Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4530277Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4530364Z                 lines_df=lines_df,
2025-01-24T14:29:24.4530495Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4530656Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4530784Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4530905Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4531092Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4531206Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4531305Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4531405Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4531484Z                 simulation=sim,
2025-01-24T14:29:24.4531560Z             )
2025-01-24T14:29:24.4531648Z         else: # real packets
2025-01-24T14:29:24.4531811Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4531897Z             # which got emitted
2025-01-24T14:29:24.4532005Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4532085Z >           return cls(
2025-01-24T14:29:24.4532258Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4532445Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4532520Z                     mask
2025-01-24T14:29:24.4532597Z                 ],
2025-01-24T14:29:24.4532907Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4532987Z                     mask
2025-01-24T14:29:24.4533058Z                 ],
2025-01-24T14:29:24.4533229Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4533306Z                     mask
2025-01-24T14:29:24.4533376Z                 ],
2025-01-24T14:29:24.4533545Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4533626Z                 lines_df=lines_df,
2025-01-24T14:29:24.4533916Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4534097Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4534174Z                     mask
2025-01-24T14:29:24.4534245Z                 ],
2025-01-24T14:29:24.4534376Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4534497Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4534687Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4534795Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4534898Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4534998Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4535079Z                 simulation=sim,
2025-01-24T14:29:24.4535154Z             )
2025-01-24T14:29:24.4535489Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4535493Z 
2025-01-24T14:29:24.4535668Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4535892Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _
2025-01-24T14:29:24.4535896Z 
2025-01-24T14:29:24.4536113Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4536120Z 
2025-01-24T14:29:24.4536212Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4536308Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4536384Z         """
2025-01-24T14:29:24.4536534Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4536611Z     
2025-01-24T14:29:24.4536688Z         Parameters:
2025-01-24T14:29:24.4536770Z         -----------
2025-01-24T14:29:24.4536883Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4536958Z     
2025-01-24T14:29:24.4537030Z         Returns:
2025-01-24T14:29:24.4537112Z         --------
2025-01-24T14:29:24.4537195Z         An LIVPlotter instance.
2025-01-24T14:29:24.4537270Z         """
2025-01-24T14:29:24.4537403Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4537407Z 
2025-01-24T14:29:24.4537547Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4537663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4537828Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4537980Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4538193Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4538436Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4538548Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4538553Z 
2025-01-24T14:29:24.4538772Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4538945Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4539031Z packets_mode = 'real'
2025-01-24T14:29:24.4539035Z 
2025-01-24T14:29:24.4539109Z     @classmethod
2025-01-24T14:29:24.4539222Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4539417Z         """
2025-01-24T14:29:24.4539614Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4539688Z     
2025-01-24T14:29:24.4539763Z         Parameters
2025-01-24T14:29:24.4539841Z         ----------
2025-01-24T14:29:24.4539943Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4540096Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4540188Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4540332Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4540402Z     
2025-01-24T14:29:24.4540585Z         Returns
2025-01-24T14:29:24.4540663Z         -------
2025-01-24T14:29:24.4540755Z         SimulationPacketData
2025-01-24T14:29:24.4540826Z         """
2025-01-24T14:29:24.4540937Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4541019Z             raise ValueError(
2025-01-24T14:29:24.4541150Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4541258Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4541328Z             )
2025-01-24T14:29:24.4541440Z         # Properties common among both packet modes
2025-01-24T14:29:24.4541599Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4541680Z             "line_id"
2025-01-24T14:29:24.4541750Z         )
2025-01-24T14:29:24.4541865Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4541989Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4542077Z         time_of_simulation = (
2025-01-24T14:29:24.4542236Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4542312Z         )
2025-01-24T14:29:24.4542382Z     
2025-01-24T14:29:24.4542463Z         spectrum = (
2025-01-24T14:29:24.4542577Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4542676Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4542793Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4542868Z         )
2025-01-24T14:29:24.4542941Z     
2025-01-24T14:29:24.4543030Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4543156Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4543233Z             return cls(
2025-01-24T14:29:24.4543393Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4543564Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4543748Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4543914Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4544070Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4544152Z                 lines_df=lines_df,
2025-01-24T14:29:24.4544287Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4544447Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4544574Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4544694Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4544879Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4544992Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4545100Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4545202Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4545284Z                 simulation=sim,
2025-01-24T14:29:24.4545359Z             )
2025-01-24T14:29:24.4545439Z         else: # real packets
2025-01-24T14:29:24.4545606Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4545773Z             # which got emitted
2025-01-24T14:29:24.4545883Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4545964Z >           return cls(
2025-01-24T14:29:24.4546134Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4546321Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4546394Z                     mask
2025-01-24T14:29:24.4546469Z                 ],
2025-01-24T14:29:24.4546657Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4546808Z                     mask
2025-01-24T14:29:24.4546881Z                 ],
2025-01-24T14:29:24.4547052Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4547125Z                     mask
2025-01-24T14:29:24.4547200Z                 ],
2025-01-24T14:29:24.4547367Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4547457Z                 lines_df=lines_df,
2025-01-24T14:29:24.4547622Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4547797Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4547873Z                     mask
2025-01-24T14:29:24.4547943Z                 ],
2025-01-24T14:29:24.4548073Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4548187Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4548504Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4548613Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4548719Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4548814Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4548899Z                 simulation=sim,
2025-01-24T14:29:24.4548972Z             )
2025-01-24T14:29:24.4549311Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4549317Z 
2025-01-24T14:29:24.4549490Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4549715Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl2] _
2025-01-24T14:29:24.4549720Z 
2025-01-24T14:29:24.4549935Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4549939Z 
2025-01-24T14:29:24.4550030Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4550128Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4550198Z         """
2025-01-24T14:29:24.4550351Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4550421Z     
2025-01-24T14:29:24.4550502Z         Parameters:
2025-01-24T14:29:24.4550576Z         -----------
2025-01-24T14:29:24.4550699Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4550773Z     
2025-01-24T14:29:24.4550845Z         Returns:
2025-01-24T14:29:24.4550923Z         --------
2025-01-24T14:29:24.4551007Z         An LIVPlotter instance.
2025-01-24T14:29:24.4551081Z         """
2025-01-24T14:29:24.4551213Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4551217Z 
2025-01-24T14:29:24.4551357Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4551468Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4551636Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4551783Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4552000Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4552134Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4552385Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4552389Z 
2025-01-24T14:29:24.4552611Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4552780Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4552869Z packets_mode = 'real'
2025-01-24T14:29:24.4552873Z 
2025-01-24T14:29:24.4552948Z     @classmethod
2025-01-24T14:29:24.4553062Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4553133Z         """
2025-01-24T14:29:24.4553431Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4553505Z     
2025-01-24T14:29:24.4553591Z         Parameters
2025-01-24T14:29:24.4553664Z         ----------
2025-01-24T14:29:24.4553771Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4553925Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4554022Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4554166Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4554236Z     
2025-01-24T14:29:24.4554312Z         Returns
2025-01-24T14:29:24.4554387Z         -------
2025-01-24T14:29:24.4554479Z         SimulationPacketData
2025-01-24T14:29:24.4554550Z         """
2025-01-24T14:29:24.4554659Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4554741Z             raise ValueError(
2025-01-24T14:29:24.4554871Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4554977Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4555053Z             )
2025-01-24T14:29:24.4555159Z         # Properties common among both packet modes
2025-01-24T14:29:24.4555325Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4555400Z             "line_id"
2025-01-24T14:29:24.4555477Z         )
2025-01-24T14:29:24.4555592Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4555715Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4555802Z         time_of_simulation = (
2025-01-24T14:29:24.4555957Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4556034Z         )
2025-01-24T14:29:24.4556104Z     
2025-01-24T14:29:24.4556185Z         spectrum = (
2025-01-24T14:29:24.4556297Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4556394Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4556511Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4556591Z         )
2025-01-24T14:29:24.4556661Z     
2025-01-24T14:29:24.4556755Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4556875Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4556958Z             return cls(
2025-01-24T14:29:24.4557118Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4557292Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4557470Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4557637Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4557792Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4557875Z                 lines_df=lines_df,
2025-01-24T14:29:24.4558006Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4558162Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4558393Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4558511Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4558705Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4558949Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4559050Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4559149Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4559230Z                 simulation=sim,
2025-01-24T14:29:24.4559307Z             )
2025-01-24T14:29:24.4559387Z         else: # real packets
2025-01-24T14:29:24.4559556Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4559637Z             # which got emitted
2025-01-24T14:29:24.4559748Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4559929Z >           return cls(
2025-01-24T14:29:24.4560112Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4560299Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4560377Z                     mask
2025-01-24T14:29:24.4560458Z                 ],
2025-01-24T14:29:24.4560647Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4560726Z                     mask
2025-01-24T14:29:24.4560796Z                 ],
2025-01-24T14:29:24.4560965Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4561038Z                     mask
2025-01-24T14:29:24.4561115Z                 ],
2025-01-24T14:29:24.4561280Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4561367Z                 lines_df=lines_df,
2025-01-24T14:29:24.4561528Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4561709Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4561782Z                     mask
2025-01-24T14:29:24.4561859Z                 ],
2025-01-24T14:29:24.4561986Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4562106Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4562295Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4562403Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4562507Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4562601Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4562685Z                 simulation=sim,
2025-01-24T14:29:24.4562756Z             )
2025-01-24T14:29:24.4563097Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4563103Z 
2025-01-24T14:29:24.4563274Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4563506Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl3] _
2025-01-24T14:29:24.4563513Z 
2025-01-24T14:29:24.4563732Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4563737Z 
2025-01-24T14:29:24.4563827Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4563926Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4563997Z         """
2025-01-24T14:29:24.4564152Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4564222Z     
2025-01-24T14:29:24.4564303Z         Parameters:
2025-01-24T14:29:24.4564377Z         -----------
2025-01-24T14:29:24.4564495Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4564565Z     
2025-01-24T14:29:24.4564645Z         Returns:
2025-01-24T14:29:24.4564718Z         --------
2025-01-24T14:29:24.4564807Z         An LIVPlotter instance.
2025-01-24T14:29:24.4564877Z         """
2025-01-24T14:29:24.4565014Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4565019Z 
2025-01-24T14:29:24.4565157Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4565355Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4565518Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4565666Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4565886Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4566018Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4566133Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4566137Z 
2025-01-24T14:29:24.4566426Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4566601Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4566688Z packets_mode = 'real'
2025-01-24T14:29:24.4566692Z 
2025-01-24T14:29:24.4566767Z     @classmethod
2025-01-24T14:29:24.4566885Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4566956Z         """
2025-01-24T14:29:24.4567155Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4567229Z     
2025-01-24T14:29:24.4567310Z         Parameters
2025-01-24T14:29:24.4567386Z         ----------
2025-01-24T14:29:24.4567494Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4567641Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4567739Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4567880Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4567955Z     
2025-01-24T14:29:24.4568027Z         Returns
2025-01-24T14:29:24.4568103Z         -------
2025-01-24T14:29:24.4568195Z         SimulationPacketData
2025-01-24T14:29:24.4568365Z         """
2025-01-24T14:29:24.4568479Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4568564Z             raise ValueError(
2025-01-24T14:29:24.4568683Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4568786Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4568861Z             )
2025-01-24T14:29:24.4568966Z         # Properties common among both packet modes
2025-01-24T14:29:24.4569129Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4569202Z             "line_id"
2025-01-24T14:29:24.4569277Z         )
2025-01-24T14:29:24.4569384Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4569512Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4569598Z         time_of_simulation = (
2025-01-24T14:29:24.4569757Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4569833Z         )
2025-01-24T14:29:24.4569902Z     
2025-01-24T14:29:24.4569985Z         spectrum = (
2025-01-24T14:29:24.4570098Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4570196Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4570313Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4570388Z         )
2025-01-24T14:29:24.4570457Z     
2025-01-24T14:29:24.4570554Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4570675Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4570755Z             return cls(
2025-01-24T14:29:24.4570910Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4571127Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4571313Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4571496Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4571649Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4571856Z                 lines_df=lines_df,
2025-01-24T14:29:24.4571986Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4572138Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4572269Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4572383Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4572575Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4572685Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4572913Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4573012Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4573100Z                 simulation=sim,
2025-01-24T14:29:24.4573176Z             )
2025-01-24T14:29:24.4573261Z         else: # real packets
2025-01-24T14:29:24.4573429Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4573513Z             # which got emitted
2025-01-24T14:29:24.4573624Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4573700Z >           return cls(
2025-01-24T14:29:24.4573878Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4574061Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4574141Z                     mask
2025-01-24T14:29:24.4574213Z                 ],
2025-01-24T14:29:24.4574410Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4574484Z                     mask
2025-01-24T14:29:24.4574561Z                 ],
2025-01-24T14:29:24.4574727Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4574804Z                     mask
2025-01-24T14:29:24.4574881Z                 ],
2025-01-24T14:29:24.4575049Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4575136Z                 lines_df=lines_df,
2025-01-24T14:29:24.4575298Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4575474Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4575547Z                     mask
2025-01-24T14:29:24.4575625Z                 ],
2025-01-24T14:29:24.4575750Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4575870Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4576057Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4576171Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4576277Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4576374Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4576461Z                 simulation=sim,
2025-01-24T14:29:24.4576531Z             )
2025-01-24T14:29:24.4576871Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4576875Z 
2025-01-24T14:29:24.4577044Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4577272Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _
2025-01-24T14:29:24.4577277Z 
2025-01-24T14:29:24.4577488Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4577495Z 
2025-01-24T14:29:24.4577590Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4577687Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4577760Z         """
2025-01-24T14:29:24.4577916Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4577986Z     
2025-01-24T14:29:24.4578158Z         Parameters:
2025-01-24T14:29:24.4578335Z         -----------
2025-01-24T14:29:24.4578456Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4578525Z     
2025-01-24T14:29:24.4578604Z         Returns:
2025-01-24T14:29:24.4578677Z         --------
2025-01-24T14:29:24.4578766Z         An LIVPlotter instance.
2025-01-24T14:29:24.4578836Z         """
2025-01-24T14:29:24.4578973Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4578977Z 
2025-01-24T14:29:24.4579112Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4579341Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4579508Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4579653Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4579870Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4580007Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4580124Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4580128Z 
2025-01-24T14:29:24.4580342Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4580513Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4580595Z packets_mode = 'real'
2025-01-24T14:29:24.4580600Z 
2025-01-24T14:29:24.4580680Z     @classmethod
2025-01-24T14:29:24.4580789Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4580865Z         """
2025-01-24T14:29:24.4581066Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4581135Z     
2025-01-24T14:29:24.4581216Z         Parameters
2025-01-24T14:29:24.4581291Z         ----------
2025-01-24T14:29:24.4581395Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4581539Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4581641Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4581781Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4581856Z     
2025-01-24T14:29:24.4581928Z         Returns
2025-01-24T14:29:24.4582006Z         -------
2025-01-24T14:29:24.4582092Z         SimulationPacketData
2025-01-24T14:29:24.4582167Z         """
2025-01-24T14:29:24.4582273Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4582362Z             raise ValueError(
2025-01-24T14:29:24.4582478Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4582587Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4582663Z             )
2025-01-24T14:29:24.4582768Z         # Properties common among both packet modes
2025-01-24T14:29:24.4582936Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4583010Z             "line_id"
2025-01-24T14:29:24.4583087Z         )
2025-01-24T14:29:24.4583196Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4583324Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4583409Z         time_of_simulation = (
2025-01-24T14:29:24.4583568Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4583638Z         )
2025-01-24T14:29:24.4583713Z     
2025-01-24T14:29:24.4583791Z         spectrum = (
2025-01-24T14:29:24.4583909Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4583998Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4584125Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4584202Z         )
2025-01-24T14:29:24.4584271Z     
2025-01-24T14:29:24.4584364Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4584487Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4584565Z             return cls(
2025-01-24T14:29:24.4584839Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4585012Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4585189Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4585367Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4585516Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4585604Z                 lines_df=lines_df,
2025-01-24T14:29:24.4585807Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4585967Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4586099Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4586213Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4586406Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4586512Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4586618Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4586713Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4586799Z                 simulation=sim,
2025-01-24T14:29:24.4586870Z             )
2025-01-24T14:29:24.4586957Z         else: # real packets
2025-01-24T14:29:24.4587120Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4587206Z             # which got emitted
2025-01-24T14:29:24.4587314Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4587395Z >           return cls(
2025-01-24T14:29:24.4587573Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4587756Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4587838Z                     mask
2025-01-24T14:29:24.4587909Z                 ],
2025-01-24T14:29:24.4588103Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4588176Z                     mask
2025-01-24T14:29:24.4588350Z                 ],
2025-01-24T14:29:24.4588521Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4588597Z                     mask
2025-01-24T14:29:24.4588668Z                 ],
2025-01-24T14:29:24.4588837Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4588921Z                 lines_df=lines_df,
2025-01-24T14:29:24.4589087Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4589263Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4589336Z                     mask
2025-01-24T14:29:24.4589414Z                 ],
2025-01-24T14:29:24.4589540Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4589660Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4589844Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4589956Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4590056Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4590154Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4590236Z                 simulation=sim,
2025-01-24T14:29:24.4590312Z             )
2025-01-24T14:29:24.4590647Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4590656Z 
2025-01-24T14:29:24.4590829Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4591057Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _
2025-01-24T14:29:24.4591178Z 
2025-01-24T14:29:24.4591393Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4591398Z 
2025-01-24T14:29:24.4591492Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4591583Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4591658Z         """
2025-01-24T14:29:24.4591806Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4591882Z     
2025-01-24T14:29:24.4591959Z         Parameters:
2025-01-24T14:29:24.4592038Z         -----------
2025-01-24T14:29:24.4592258Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4592331Z     
2025-01-24T14:29:24.4592410Z         Returns:
2025-01-24T14:29:24.4592484Z         --------
2025-01-24T14:29:24.4592573Z         An LIVPlotter instance.
2025-01-24T14:29:24.4592643Z         """
2025-01-24T14:29:24.4592779Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4592787Z 
2025-01-24T14:29:24.4592921Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4593037Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4593194Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4593344Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4593555Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4593691Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4593808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4593813Z 
2025-01-24T14:29:24.4594027Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4594198Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4594280Z packets_mode = 'real'
2025-01-24T14:29:24.4594287Z 
2025-01-24T14:29:24.4594366Z     @classmethod
2025-01-24T14:29:24.4594475Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4594550Z         """
2025-01-24T14:29:24.4594746Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4594821Z     
2025-01-24T14:29:24.4594907Z         Parameters
2025-01-24T14:29:24.4594987Z         ----------
2025-01-24T14:29:24.4595086Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4595242Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4595339Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4595479Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4595555Z     
2025-01-24T14:29:24.4595628Z         Returns
2025-01-24T14:29:24.4595705Z         -------
2025-01-24T14:29:24.4595792Z         SimulationPacketData
2025-01-24T14:29:24.4595867Z         """
2025-01-24T14:29:24.4595974Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4596065Z             raise ValueError(
2025-01-24T14:29:24.4596180Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4596291Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4596361Z             )
2025-01-24T14:29:24.4596472Z         # Properties common among both packet modes
2025-01-24T14:29:24.4596632Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4596711Z             "line_id"
2025-01-24T14:29:24.4596786Z         )
2025-01-24T14:29:24.4596894Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4597025Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4597111Z         time_of_simulation = (
2025-01-24T14:29:24.4597271Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4597341Z         )
2025-01-24T14:29:24.4597416Z     
2025-01-24T14:29:24.4597493Z         spectrum = (
2025-01-24T14:29:24.4597699Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4597789Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4597910Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4597980Z         )
2025-01-24T14:29:24.4598054Z     
2025-01-24T14:29:24.4598144Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4598368Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4598446Z             return cls(
2025-01-24T14:29:24.4598609Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4598913Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4599093Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4599264Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4599415Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4599506Z                 lines_df=lines_df,
2025-01-24T14:29:24.4599633Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4599793Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4599919Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4600038Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4600222Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4600338Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4600444Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4600543Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4600632Z                 simulation=sim,
2025-01-24T14:29:24.4600704Z             )
2025-01-24T14:29:24.4600794Z         else: # real packets
2025-01-24T14:29:24.4600968Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4601054Z             # which got emitted
2025-01-24T14:29:24.4601163Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4601244Z >           return cls(
2025-01-24T14:29:24.4601420Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4601611Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4601686Z                     mask
2025-01-24T14:29:24.4601763Z                 ],
2025-01-24T14:29:24.4601961Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4602035Z                     mask
2025-01-24T14:29:24.4602111Z                 ],
2025-01-24T14:29:24.4602279Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4602360Z                     mask
2025-01-24T14:29:24.4602433Z                 ],
2025-01-24T14:29:24.4602606Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4602688Z                 lines_df=lines_df,
2025-01-24T14:29:24.4602858Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4603032Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4603112Z                     mask
2025-01-24T14:29:24.4603183Z                 ],
2025-01-24T14:29:24.4603316Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4603439Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4603624Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4603738Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4603840Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4604059Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4604139Z                 simulation=sim,
2025-01-24T14:29:24.4604214Z             )
2025-01-24T14:29:24.4604549Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4604554Z 
2025-01-24T14:29:24.4604727Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4604958Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl6] _
2025-01-24T14:29:24.4604971Z 
2025-01-24T14:29:24.4605260Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4605265Z 
2025-01-24T14:29:24.4605366Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4605457Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4605531Z         """
2025-01-24T14:29:24.4605678Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4605755Z     
2025-01-24T14:29:24.4605831Z         Parameters:
2025-01-24T14:29:24.4605911Z         -----------
2025-01-24T14:29:24.4606028Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4606104Z     
2025-01-24T14:29:24.4606177Z         Returns:
2025-01-24T14:29:24.4606255Z         --------
2025-01-24T14:29:24.4606339Z         An LIVPlotter instance.
2025-01-24T14:29:24.4606413Z         """
2025-01-24T14:29:24.4606545Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4606556Z 
2025-01-24T14:29:24.4606691Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4606811Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4606967Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4607119Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4607333Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4607476Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4607585Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4607589Z 
2025-01-24T14:29:24.4607807Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4607973Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4608061Z packets_mode = 'real'
2025-01-24T14:29:24.4608065Z 
2025-01-24T14:29:24.4608145Z     @classmethod
2025-01-24T14:29:24.4608355Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4608436Z         """
2025-01-24T14:29:24.4608633Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4616126Z     
2025-01-24T14:29:24.4616233Z         Parameters
2025-01-24T14:29:24.4616321Z         ----------
2025-01-24T14:29:24.4616434Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4616606Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4616709Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4616860Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4616937Z     
2025-01-24T14:29:24.4617012Z         Returns
2025-01-24T14:29:24.4617091Z         -------
2025-01-24T14:29:24.4617180Z         SimulationPacketData
2025-01-24T14:29:24.4617255Z         """
2025-01-24T14:29:24.4617366Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4617455Z             raise ValueError(
2025-01-24T14:29:24.4617584Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4617699Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4617771Z             )
2025-01-24T14:29:24.4617888Z         # Properties common among both packet modes
2025-01-24T14:29:24.4618058Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4618451Z             "line_id"
2025-01-24T14:29:24.4618533Z         )
2025-01-24T14:29:24.4618648Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4618785Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4618871Z         time_of_simulation = (
2025-01-24T14:29:24.4619033Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4619105Z         )
2025-01-24T14:29:24.4619183Z     
2025-01-24T14:29:24.4619261Z         spectrum = (
2025-01-24T14:29:24.4619382Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4619589Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4619721Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4619792Z         )
2025-01-24T14:29:24.4619867Z     
2025-01-24T14:29:24.4619957Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4620091Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4620176Z             return cls(
2025-01-24T14:29:24.4620337Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4620517Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4620697Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4620873Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4621024Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4621114Z                 lines_df=lines_df,
2025-01-24T14:29:24.4621249Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4621410Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4621543Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4621665Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4621864Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4621977Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4622086Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4622184Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4622276Z                 simulation=sim,
2025-01-24T14:29:24.4622347Z             )
2025-01-24T14:29:24.4622437Z         else: # real packets
2025-01-24T14:29:24.4622603Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4622692Z             # which got emitted
2025-01-24T14:29:24.4622804Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4622886Z >           return cls(
2025-01-24T14:29:24.4623064Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4623257Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4623340Z                     mask
2025-01-24T14:29:24.4623416Z                 ],
2025-01-24T14:29:24.4623612Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4623687Z                     mask
2025-01-24T14:29:24.4623763Z                 ],
2025-01-24T14:29:24.4623932Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4624010Z                     mask
2025-01-24T14:29:24.4624083Z                 ],
2025-01-24T14:29:24.4624270Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4624361Z                 lines_df=lines_df,
2025-01-24T14:29:24.4624535Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4624712Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4624914Z                     mask
2025-01-24T14:29:24.4624990Z                 ],
2025-01-24T14:29:24.4625135Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4625260Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4625452Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4625571Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4625678Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4625782Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4625866Z                 simulation=sim,
2025-01-24T14:29:24.4626022Z             )
2025-01-24T14:29:24.4626372Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4626378Z 
2025-01-24T14:29:24.4626561Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4626809Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _
2025-01-24T14:29:24.4626814Z 
2025-01-24T14:29:24.4627032Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4627037Z 
2025-01-24T14:29:24.4627137Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4627231Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4627307Z         """
2025-01-24T14:29:24.4627467Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4627538Z     
2025-01-24T14:29:24.4627625Z         Parameters:
2025-01-24T14:29:24.4627702Z         -----------
2025-01-24T14:29:24.4627829Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4627899Z     
2025-01-24T14:29:24.4627980Z         Returns:
2025-01-24T14:29:24.4628053Z         --------
2025-01-24T14:29:24.4628143Z         An LIVPlotter instance.
2025-01-24T14:29:24.4628214Z         """
2025-01-24T14:29:24.4628455Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4628464Z 
2025-01-24T14:29:24.4628608Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4628724Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4628888Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4629037Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4629256Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4629418Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4629537Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4629542Z 
2025-01-24T14:29:24.4629763Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4629940Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4630026Z packets_mode = 'real'
2025-01-24T14:29:24.4630036Z 
2025-01-24T14:29:24.4630110Z     @classmethod
2025-01-24T14:29:24.4630227Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4630298Z         """
2025-01-24T14:29:24.4630501Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4630572Z     
2025-01-24T14:29:24.4630652Z         Parameters
2025-01-24T14:29:24.4630725Z         ----------
2025-01-24T14:29:24.4630832Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4630983Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4631084Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4631223Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4631304Z     
2025-01-24T14:29:24.4631375Z         Returns
2025-01-24T14:29:24.4631458Z         -------
2025-01-24T14:29:24.4631545Z         SimulationPacketData
2025-01-24T14:29:24.4631794Z         """
2025-01-24T14:29:24.4631909Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4631993Z             raise ValueError(
2025-01-24T14:29:24.4632119Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4632225Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4632298Z             )
2025-01-24T14:29:24.4632408Z         # Properties common among both packet modes
2025-01-24T14:29:24.4632574Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4632650Z             "line_id"
2025-01-24T14:29:24.4632726Z         )
2025-01-24T14:29:24.4632938Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4633071Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4633154Z         time_of_simulation = (
2025-01-24T14:29:24.4633316Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4633386Z         )
2025-01-24T14:29:24.4633464Z     
2025-01-24T14:29:24.4633540Z         spectrum = (
2025-01-24T14:29:24.4633659Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4633756Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4633873Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4633948Z         )
2025-01-24T14:29:24.4634018Z     
2025-01-24T14:29:24.4634112Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4634235Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4634316Z             return cls(
2025-01-24T14:29:24.4634475Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4634653Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4634831Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4635003Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4635160Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4635250Z                 lines_df=lines_df,
2025-01-24T14:29:24.4635384Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4635536Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4635670Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4635786Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4635980Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4636092Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4636199Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4636296Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4636384Z                 simulation=sim,
2025-01-24T14:29:24.4636458Z             )
2025-01-24T14:29:24.4636544Z         else: # real packets
2025-01-24T14:29:24.4636715Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4636794Z             # which got emitted
2025-01-24T14:29:24.4636905Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4636982Z >           return cls(
2025-01-24T14:29:24.4637161Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4637346Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4637425Z                     mask
2025-01-24T14:29:24.4637501Z                 ],
2025-01-24T14:29:24.4637696Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4637769Z                     mask
2025-01-24T14:29:24.4637844Z                 ],
2025-01-24T14:29:24.4638011Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4638198Z                     mask
2025-01-24T14:29:24.4638449Z                 ],
2025-01-24T14:29:24.4638622Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4638712Z                 lines_df=lines_df,
2025-01-24T14:29:24.4638872Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4639049Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4639126Z                     mask
2025-01-24T14:29:24.4639201Z                 ],
2025-01-24T14:29:24.4639439Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4639561Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4639747Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4639859Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4639964Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4640067Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4640150Z                 simulation=sim,
2025-01-24T14:29:24.4640223Z             )
2025-01-24T14:29:24.4640565Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4640571Z 
2025-01-24T14:29:24.4640744Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4640951Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl0] __
2025-01-24T14:29:24.4640956Z 
2025-01-24T14:29:24.4641168Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4641173Z 
2025-01-24T14:29:24.4641268Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4641359Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4641436Z         """
2025-01-24T14:29:24.4641589Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4641668Z     
2025-01-24T14:29:24.4641750Z         Parameters:
2025-01-24T14:29:24.4641825Z         -----------
2025-01-24T14:29:24.4641946Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4642016Z     
2025-01-24T14:29:24.4642098Z         Returns:
2025-01-24T14:29:24.4642171Z         --------
2025-01-24T14:29:24.4642262Z         An LIVPlotter instance.
2025-01-24T14:29:24.4642334Z         """
2025-01-24T14:29:24.4642471Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4642475Z 
2025-01-24T14:29:24.4642617Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4642731Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4642890Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4643047Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4643268Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4643401Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4643513Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4643517Z 
2025-01-24T14:29:24.4643730Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4643904Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4643989Z packets_mode = 'real'
2025-01-24T14:29:24.4643993Z 
2025-01-24T14:29:24.4644072Z     @classmethod
2025-01-24T14:29:24.4644185Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4644262Z         """
2025-01-24T14:29:24.4644455Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4644534Z     
2025-01-24T14:29:24.4644615Z         Parameters
2025-01-24T14:29:24.4644689Z         ----------
2025-01-24T14:29:24.4644913Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4645064Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4645168Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4645309Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4645383Z     
2025-01-24T14:29:24.4645454Z         Returns
2025-01-24T14:29:24.4645531Z         -------
2025-01-24T14:29:24.4645619Z         SimulationPacketData
2025-01-24T14:29:24.4645697Z         """
2025-01-24T14:29:24.4645803Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4645890Z             raise ValueError(
2025-01-24T14:29:24.4646084Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4646197Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4646270Z             )
2025-01-24T14:29:24.4646383Z         # Properties common among both packet modes
2025-01-24T14:29:24.4646549Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4646629Z             "line_id"
2025-01-24T14:29:24.4646707Z         )
2025-01-24T14:29:24.4646818Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4646948Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4647032Z         time_of_simulation = (
2025-01-24T14:29:24.4647192Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4647264Z         )
2025-01-24T14:29:24.4647339Z     
2025-01-24T14:29:24.4647416Z         spectrum = (
2025-01-24T14:29:24.4647535Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4647629Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4647753Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4647824Z         )
2025-01-24T14:29:24.4647899Z     
2025-01-24T14:29:24.4647989Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4648116Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4648203Z             return cls(
2025-01-24T14:29:24.4648471Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4648649Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4648825Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4648995Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4649144Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4649235Z                 lines_df=lines_df,
2025-01-24T14:29:24.4649364Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4649526Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4649666Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4649784Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4649982Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4650102Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4650204Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4650306Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4650387Z                 simulation=sim,
2025-01-24T14:29:24.4650462Z             )
2025-01-24T14:29:24.4650545Z         else: # real packets
2025-01-24T14:29:24.4650716Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4650799Z             # which got emitted
2025-01-24T14:29:24.4650916Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4650993Z >           return cls(
2025-01-24T14:29:24.4651173Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4651477Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4651556Z                     mask
2025-01-24T14:29:24.4651626Z                 ],
2025-01-24T14:29:24.4651822Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4651900Z                     mask
2025-01-24T14:29:24.4651970Z                 ],
2025-01-24T14:29:24.4652139Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4652211Z                     mask
2025-01-24T14:29:24.4652285Z                 ],
2025-01-24T14:29:24.4652569Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4652661Z                 lines_df=lines_df,
2025-01-24T14:29:24.4652822Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4653001Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4653088Z                     mask
2025-01-24T14:29:24.4653163Z                 ],
2025-01-24T14:29:24.4653290Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4653408Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4653595Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4653701Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4653803Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4653898Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4653984Z                 simulation=sim,
2025-01-24T14:29:24.4654055Z             )
2025-01-24T14:29:24.4654390Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4654395Z 
2025-01-24T14:29:24.4654564Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4654772Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl1] __
2025-01-24T14:29:24.4654777Z 
2025-01-24T14:29:24.4655000Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4655005Z 
2025-01-24T14:29:24.4655093Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4655187Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4655259Z         """
2025-01-24T14:29:24.4655417Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4655486Z     
2025-01-24T14:29:24.4655569Z         Parameters:
2025-01-24T14:29:24.4655647Z         -----------
2025-01-24T14:29:24.4655789Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4655864Z     
2025-01-24T14:29:24.4655941Z         Returns:
2025-01-24T14:29:24.4656014Z         --------
2025-01-24T14:29:24.4656101Z         An LIVPlotter instance.
2025-01-24T14:29:24.4656174Z         """
2025-01-24T14:29:24.4656312Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4656316Z 
2025-01-24T14:29:24.4656455Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4656565Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4656726Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4656871Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4657086Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4657220Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4657335Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4657339Z 
2025-01-24T14:29:24.4657552Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4657722Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4657922Z packets_mode = 'real'
2025-01-24T14:29:24.4657931Z 
2025-01-24T14:29:24.4658005Z     @classmethod
2025-01-24T14:29:24.4658117Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4658185Z         """
2025-01-24T14:29:24.4658490Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4658559Z     
2025-01-24T14:29:24.4658635Z         Parameters
2025-01-24T14:29:24.4658707Z         ----------
2025-01-24T14:29:24.4658810Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4658956Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4659167Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4659308Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4659381Z     
2025-01-24T14:29:24.4659455Z         Returns
2025-01-24T14:29:24.4659541Z         -------
2025-01-24T14:29:24.4659627Z         SimulationPacketData
2025-01-24T14:29:24.4659706Z         """
2025-01-24T14:29:24.4659816Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4659897Z             raise ValueError(
2025-01-24T14:29:24.4660018Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4660119Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4660193Z             )
2025-01-24T14:29:24.4660298Z         # Properties common among both packet modes
2025-01-24T14:29:24.4660460Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4660539Z             "line_id"
2025-01-24T14:29:24.4660637Z         )
2025-01-24T14:29:24.4660745Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4660870Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4660952Z         time_of_simulation = (
2025-01-24T14:29:24.4661109Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4661181Z         )
2025-01-24T14:29:24.4661258Z     
2025-01-24T14:29:24.4661337Z         spectrum = (
2025-01-24T14:29:24.4661450Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4661540Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4661659Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4661735Z         )
2025-01-24T14:29:24.4661808Z     
2025-01-24T14:29:24.4661901Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4662021Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4662102Z             return cls(
2025-01-24T14:29:24.4662259Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4662434Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4662608Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4662776Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4662934Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4663016Z                 lines_df=lines_df,
2025-01-24T14:29:24.4663147Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4663299Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4663432Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4663544Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4663734Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4663841Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4663947Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4664041Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4664126Z                 simulation=sim,
2025-01-24T14:29:24.4664315Z             )
2025-01-24T14:29:24.4664402Z         else: # real packets
2025-01-24T14:29:24.4664571Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4664651Z             # which got emitted
2025-01-24T14:29:24.4664760Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4664835Z >           return cls(
2025-01-24T14:29:24.4665011Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4665195Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4665351Z                     mask
2025-01-24T14:29:24.4665425Z                 ],
2025-01-24T14:29:24.4665616Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4665692Z                     mask
2025-01-24T14:29:24.4665769Z                 ],
2025-01-24T14:29:24.4665936Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4666017Z                     mask
2025-01-24T14:29:24.4666091Z                 ],
2025-01-24T14:29:24.4666259Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4666347Z                 lines_df=lines_df,
2025-01-24T14:29:24.4666510Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4666686Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4666759Z                     mask
2025-01-24T14:29:24.4666837Z                 ],
2025-01-24T14:29:24.4666965Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4667084Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4667267Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4667379Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4667482Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4667605Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4667695Z                 simulation=sim,
2025-01-24T14:29:24.4667766Z             )
2025-01-24T14:29:24.4668099Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4668104Z 
2025-01-24T14:29:24.4668406Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4668614Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl2] __
2025-01-24T14:29:24.4668623Z 
2025-01-24T14:29:24.4668834Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4668838Z 
2025-01-24T14:29:24.4668933Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4669024Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4669100Z         """
2025-01-24T14:29:24.4669261Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4669333Z     
2025-01-24T14:29:24.4669414Z         Parameters:
2025-01-24T14:29:24.4669490Z         -----------
2025-01-24T14:29:24.4669608Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4669677Z     
2025-01-24T14:29:24.4669753Z         Returns:
2025-01-24T14:29:24.4669827Z         --------
2025-01-24T14:29:24.4669917Z         An LIVPlotter instance.
2025-01-24T14:29:24.4669985Z         """
2025-01-24T14:29:24.4670120Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4670124Z 
2025-01-24T14:29:24.4670263Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4670377Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4670535Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4670689Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4671026Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4671158Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4671271Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4671274Z 
2025-01-24T14:29:24.4671489Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4671660Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4671742Z packets_mode = 'real'
2025-01-24T14:29:24.4671746Z 
2025-01-24T14:29:24.4671927Z     @classmethod
2025-01-24T14:29:24.4672041Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4672118Z         """
2025-01-24T14:29:24.4672311Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4672385Z     
2025-01-24T14:29:24.4672463Z         Parameters
2025-01-24T14:29:24.4672540Z         ----------
2025-01-24T14:29:24.4672643Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4672790Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4672887Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4673024Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4673096Z     
2025-01-24T14:29:24.4673166Z         Returns
2025-01-24T14:29:24.4673246Z         -------
2025-01-24T14:29:24.4673331Z         SimulationPacketData
2025-01-24T14:29:24.4673405Z         """
2025-01-24T14:29:24.4673511Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4673601Z             raise ValueError(
2025-01-24T14:29:24.4673719Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4673825Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4673895Z             )
2025-01-24T14:29:24.4674004Z         # Properties common among both packet modes
2025-01-24T14:29:24.4674173Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4674247Z             "line_id"
2025-01-24T14:29:24.4674319Z         )
2025-01-24T14:29:24.4674427Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4674554Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4674637Z         time_of_simulation = (
2025-01-24T14:29:24.4674795Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4674869Z         )
2025-01-24T14:29:24.4674942Z     
2025-01-24T14:29:24.4675019Z         spectrum = (
2025-01-24T14:29:24.4675145Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4675239Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4675362Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4675433Z         )
2025-01-24T14:29:24.4675507Z     
2025-01-24T14:29:24.4675603Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4675729Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4675811Z             return cls(
2025-01-24T14:29:24.4675969Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4676147Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4676323Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4676495Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4676648Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4676737Z                 lines_df=lines_df,
2025-01-24T14:29:24.4676865Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4677022Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4677157Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4677363Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4677554Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4677663Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4677770Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4677866Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4677950Z                 simulation=sim,
2025-01-24T14:29:24.4678021Z             )
2025-01-24T14:29:24.4678106Z         else: # real packets
2025-01-24T14:29:24.4678497Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4678589Z             # which got emitted
2025-01-24T14:29:24.4678704Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4678784Z >           return cls(
2025-01-24T14:29:24.4678966Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4679159Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4679239Z                     mask
2025-01-24T14:29:24.4679309Z                 ],
2025-01-24T14:29:24.4679506Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4679579Z                     mask
2025-01-24T14:29:24.4679654Z                 ],
2025-01-24T14:29:24.4679823Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4679901Z                     mask
2025-01-24T14:29:24.4679974Z                 ],
2025-01-24T14:29:24.4680140Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4680224Z                 lines_df=lines_df,
2025-01-24T14:29:24.4680393Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4680570Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4680646Z                     mask
2025-01-24T14:29:24.4680720Z                 ],
2025-01-24T14:29:24.4680851Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4680974Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4681161Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4681275Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4681374Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4681479Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4681563Z                 simulation=sim,
2025-01-24T14:29:24.4681639Z             )
2025-01-24T14:29:24.4681979Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4681988Z 
2025-01-24T14:29:24.4682166Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4682374Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl3] __
2025-01-24T14:29:24.4682379Z 
2025-01-24T14:29:24.4682589Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4682593Z 
2025-01-24T14:29:24.4682691Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4682783Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4682859Z         """
2025-01-24T14:29:24.4683009Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4683084Z     
2025-01-24T14:29:24.4683166Z         Parameters:
2025-01-24T14:29:24.4683248Z         -----------
2025-01-24T14:29:24.4683363Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4683436Z     
2025-01-24T14:29:24.4683513Z         Returns:
2025-01-24T14:29:24.4683589Z         --------
2025-01-24T14:29:24.4683678Z         An LIVPlotter instance.
2025-01-24T14:29:24.4683867Z         """
2025-01-24T14:29:24.4684004Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4684010Z 
2025-01-24T14:29:24.4684147Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4684265Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4684425Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4684575Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4684789Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4685005Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4685116Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4685124Z 
2025-01-24T14:29:24.4685341Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4685520Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4685601Z packets_mode = 'real'
2025-01-24T14:29:24.4685605Z 
2025-01-24T14:29:24.4685682Z     @classmethod
2025-01-24T14:29:24.4685796Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4685872Z         """
2025-01-24T14:29:24.4686067Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4686141Z     
2025-01-24T14:29:24.4686217Z         Parameters
2025-01-24T14:29:24.4686296Z         ----------
2025-01-24T14:29:24.4686396Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4686552Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4686645Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4686788Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4686866Z     
2025-01-24T14:29:24.4686940Z         Returns
2025-01-24T14:29:24.4687020Z         -------
2025-01-24T14:29:24.4687113Z         SimulationPacketData
2025-01-24T14:29:24.4687188Z         """
2025-01-24T14:29:24.4687293Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4687380Z             raise ValueError(
2025-01-24T14:29:24.4687498Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4687605Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4687675Z             )
2025-01-24T14:29:24.4687785Z         # Properties common among both packet modes
2025-01-24T14:29:24.4687946Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4688028Z             "line_id"
2025-01-24T14:29:24.4688099Z         )
2025-01-24T14:29:24.4688210Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4688440Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4688524Z         time_of_simulation = (
2025-01-24T14:29:24.4688683Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4688756Z         )
2025-01-24T14:29:24.4688830Z     
2025-01-24T14:29:24.4688908Z         spectrum = (
2025-01-24T14:29:24.4689027Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4689118Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4689240Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4689309Z         )
2025-01-24T14:29:24.4689382Z     
2025-01-24T14:29:24.4689470Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4689604Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4689680Z             return cls(
2025-01-24T14:29:24.4689846Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4690025Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4690202Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4690493Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4690642Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4690729Z                 lines_df=lines_df,
2025-01-24T14:29:24.4690858Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4691017Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4691145Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4691265Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4691569Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4691685Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4691794Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4691891Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4691980Z                 simulation=sim,
2025-01-24T14:29:24.4692056Z             )
2025-01-24T14:29:24.4692143Z         else: # real packets
2025-01-24T14:29:24.4692308Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4692397Z             # which got emitted
2025-01-24T14:29:24.4692504Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4692587Z >           return cls(
2025-01-24T14:29:24.4692761Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4692953Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4693028Z                     mask
2025-01-24T14:29:24.4693107Z                 ],
2025-01-24T14:29:24.4693297Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4693379Z                     mask
2025-01-24T14:29:24.4693455Z                 ],
2025-01-24T14:29:24.4693626Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4693704Z                     mask
2025-01-24T14:29:24.4693775Z                 ],
2025-01-24T14:29:24.4693946Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4694028Z                 lines_df=lines_df,
2025-01-24T14:29:24.4694196Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4694368Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4694446Z                     mask
2025-01-24T14:29:24.4694520Z                 ],
2025-01-24T14:29:24.4694649Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4694763Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4694956Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4695071Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4695181Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4695283Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4695364Z                 simulation=sim,
2025-01-24T14:29:24.4695440Z             )
2025-01-24T14:29:24.4695777Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4695782Z 
2025-01-24T14:29:24.4695959Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4696163Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl4] __
2025-01-24T14:29:24.4696168Z 
2025-01-24T14:29:24.4696385Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4696389Z 
2025-01-24T14:29:24.4696488Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4696581Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4696743Z         """
2025-01-24T14:29:24.4696894Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4696968Z     
2025-01-24T14:29:24.4697043Z         Parameters:
2025-01-24T14:29:24.4697123Z         -----------
2025-01-24T14:29:24.4697239Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4697312Z     
2025-01-24T14:29:24.4697383Z         Returns:
2025-01-24T14:29:24.4697462Z         --------
2025-01-24T14:29:24.4697546Z         An LIVPlotter instance.
2025-01-24T14:29:24.4697621Z         """
2025-01-24T14:29:24.4697750Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4697831Z 
2025-01-24T14:29:24.4697976Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4698089Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4698350Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4698505Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4698720Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4698858Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4698966Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4698969Z 
2025-01-24T14:29:24.4699188Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4699354Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4699440Z packets_mode = 'real'
2025-01-24T14:29:24.4699448Z 
2025-01-24T14:29:24.4699528Z     @classmethod
2025-01-24T14:29:24.4699637Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4699712Z         """
2025-01-24T14:29:24.4699905Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4699979Z     
2025-01-24T14:29:24.4700057Z         Parameters
2025-01-24T14:29:24.4700135Z         ----------
2025-01-24T14:29:24.4700235Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4700388Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4700482Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4700624Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4700695Z     
2025-01-24T14:29:24.4700773Z         Returns
2025-01-24T14:29:24.4700848Z         -------
2025-01-24T14:29:24.4700939Z         SimulationPacketData
2025-01-24T14:29:24.4701009Z         """
2025-01-24T14:29:24.4701121Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4701209Z             raise ValueError(
2025-01-24T14:29:24.4701326Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4701434Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4701504Z             )
2025-01-24T14:29:24.4701616Z         # Properties common among both packet modes
2025-01-24T14:29:24.4701773Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4701853Z             "line_id"
2025-01-24T14:29:24.4701922Z         )
2025-01-24T14:29:24.4702036Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4702160Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4702249Z         time_of_simulation = (
2025-01-24T14:29:24.4702402Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4702478Z         )
2025-01-24T14:29:24.4702546Z     
2025-01-24T14:29:24.4702630Z         spectrum = (
2025-01-24T14:29:24.4702748Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4702837Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4702959Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4703030Z         )
2025-01-24T14:29:24.4703103Z     
2025-01-24T14:29:24.4703314Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4703442Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4703517Z             return cls(
2025-01-24T14:29:24.4703677Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4703848Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4704028Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4704192Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4704466Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4704560Z                 lines_df=lines_df,
2025-01-24T14:29:24.4704688Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4704845Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4704977Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4705096Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4705282Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4705394Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4705493Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4705593Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4705675Z                 simulation=sim,
2025-01-24T14:29:24.4705750Z             )
2025-01-24T14:29:24.4705835Z         else: # real packets
2025-01-24T14:29:24.4706007Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4706094Z             # which got emitted
2025-01-24T14:29:24.4706200Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4706283Z >           return cls(
2025-01-24T14:29:24.4706459Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4706648Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4706722Z                     mask
2025-01-24T14:29:24.4706800Z                 ],
2025-01-24T14:29:24.4706988Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4707067Z                     mask
2025-01-24T14:29:24.4707138Z                 ],
2025-01-24T14:29:24.4707309Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4707384Z                     mask
2025-01-24T14:29:24.4707460Z                 ],
2025-01-24T14:29:24.4707629Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4707710Z                 lines_df=lines_df,
2025-01-24T14:29:24.4707875Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4708059Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4708144Z                     mask
2025-01-24T14:29:24.4708219Z                 ],
2025-01-24T14:29:24.4708474Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4708592Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4708786Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4708896Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4709006Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4709102Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4709189Z                 simulation=sim,
2025-01-24T14:29:24.4709266Z             )
2025-01-24T14:29:24.4709601Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4709723Z 
2025-01-24T14:29:24.4709902Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4710109Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl5] __
2025-01-24T14:29:24.4710113Z 
2025-01-24T14:29:24.4710326Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4710330Z 
2025-01-24T14:29:24.4710420Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4710516Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4710588Z         """
2025-01-24T14:29:24.4710745Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4710924Z     
2025-01-24T14:29:24.4711005Z         Parameters:
2025-01-24T14:29:24.4711082Z         -----------
2025-01-24T14:29:24.4711202Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4711278Z     
2025-01-24T14:29:24.4711352Z         Returns:
2025-01-24T14:29:24.4711430Z         --------
2025-01-24T14:29:24.4711518Z         An LIVPlotter instance.
2025-01-24T14:29:24.4711593Z         """
2025-01-24T14:29:24.4711725Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4711729Z 
2025-01-24T14:29:24.4711871Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4711981Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4712145Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4712293Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4712514Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4712653Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4712767Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4712771Z 
2025-01-24T14:29:24.4712993Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4713165Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4713251Z packets_mode = 'real'
2025-01-24T14:29:24.4713255Z 
2025-01-24T14:29:24.4713327Z     @classmethod
2025-01-24T14:29:24.4713444Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4713514Z         """
2025-01-24T14:29:24.4713712Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4713782Z     
2025-01-24T14:29:24.4713862Z         Parameters
2025-01-24T14:29:24.4713939Z         ----------
2025-01-24T14:29:24.4714039Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4714197Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4714290Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4714431Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4714502Z     
2025-01-24T14:29:24.4714578Z         Returns
2025-01-24T14:29:24.4714654Z         -------
2025-01-24T14:29:24.4714749Z         SimulationPacketData
2025-01-24T14:29:24.4714820Z         """
2025-01-24T14:29:24.4714929Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4715011Z             raise ValueError(
2025-01-24T14:29:24.4715133Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4715246Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4715322Z             )
2025-01-24T14:29:24.4715433Z         # Properties common among both packet modes
2025-01-24T14:29:24.4715596Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4715679Z             "line_id"
2025-01-24T14:29:24.4715751Z         )
2025-01-24T14:29:24.4715864Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4715988Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4716076Z         time_of_simulation = (
2025-01-24T14:29:24.4716318Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4716393Z         )
2025-01-24T14:29:24.4716462Z     
2025-01-24T14:29:24.4716546Z         spectrum = (
2025-01-24T14:29:24.4716659Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4716753Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4716868Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4716947Z         )
2025-01-24T14:29:24.4717016Z     
2025-01-24T14:29:24.4717110Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4717235Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4717384Z             return cls(
2025-01-24T14:29:24.4717546Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4717718Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4717898Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4718067Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4718322Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4718406Z                 lines_df=lines_df,
2025-01-24T14:29:24.4718539Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4718692Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4718822Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4718946Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4719137Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4719251Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4719354Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4719458Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4719538Z                 simulation=sim,
2025-01-24T14:29:24.4719614Z             )
2025-01-24T14:29:24.4719696Z         else: # real packets
2025-01-24T14:29:24.4719866Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4719945Z             # which got emitted
2025-01-24T14:29:24.4720055Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4720130Z >           return cls(
2025-01-24T14:29:24.4720310Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4720501Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4720575Z                     mask
2025-01-24T14:29:24.4720650Z                 ],
2025-01-24T14:29:24.4720836Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4720914Z                     mask
2025-01-24T14:29:24.4720989Z                 ],
2025-01-24T14:29:24.4721160Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4721233Z                     mask
2025-01-24T14:29:24.4721309Z                 ],
2025-01-24T14:29:24.4721475Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4721565Z                 lines_df=lines_df,
2025-01-24T14:29:24.4721726Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4721903Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4721985Z                     mask
2025-01-24T14:29:24.4722057Z                 ],
2025-01-24T14:29:24.4722189Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4722305Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4722497Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4722724Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4722829Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4722924Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4723009Z                 simulation=sim,
2025-01-24T14:29:24.4723079Z             )
2025-01-24T14:29:24.4723415Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4723420Z 
2025-01-24T14:29:24.4723595Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4723902Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl6] __
2025-01-24T14:29:24.4723908Z 
2025-01-24T14:29:24.4724125Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4724129Z 
2025-01-24T14:29:24.4724218Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4724317Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4724388Z         """
2025-01-24T14:29:24.4724542Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4724611Z     
2025-01-24T14:29:24.4724696Z         Parameters:
2025-01-24T14:29:24.4724770Z         -----------
2025-01-24T14:29:24.4724890Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4724960Z     
2025-01-24T14:29:24.4725039Z         Returns:
2025-01-24T14:29:24.4725117Z         --------
2025-01-24T14:29:24.4725201Z         An LIVPlotter instance.
2025-01-24T14:29:24.4725277Z         """
2025-01-24T14:29:24.4725415Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4725420Z 
2025-01-24T14:29:24.4725560Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4725670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4725833Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4725983Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4726198Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4726329Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4726440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4726444Z 
2025-01-24T14:29:24.4726663Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4726831Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4726922Z packets_mode = 'real'
2025-01-24T14:29:24.4726927Z 
2025-01-24T14:29:24.4727000Z     @classmethod
2025-01-24T14:29:24.4727114Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4727184Z         """
2025-01-24T14:29:24.4727380Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4727454Z     
2025-01-24T14:29:24.4727534Z         Parameters
2025-01-24T14:29:24.4727607Z         ----------
2025-01-24T14:29:24.4727712Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4727858Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4727955Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4728099Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4728170Z     
2025-01-24T14:29:24.4728345Z         Returns
2025-01-24T14:29:24.4728420Z         -------
2025-01-24T14:29:24.4728512Z         SimulationPacketData
2025-01-24T14:29:24.4728583Z         """
2025-01-24T14:29:24.4728696Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4728778Z             raise ValueError(
2025-01-24T14:29:24.4728900Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4729004Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4729217Z             )
2025-01-24T14:29:24.4729348Z         # Properties common among both packet modes
2025-01-24T14:29:24.4729514Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4729589Z             "line_id"
2025-01-24T14:29:24.4729667Z         )
2025-01-24T14:29:24.4729774Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4729902Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4729991Z         time_of_simulation = (
2025-01-24T14:29:24.4730143Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4730218Z         )
2025-01-24T14:29:24.4730394Z     
2025-01-24T14:29:24.4730479Z         spectrum = (
2025-01-24T14:29:24.4730598Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4730690Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4730809Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4730884Z         )
2025-01-24T14:29:24.4730959Z     
2025-01-24T14:29:24.4731052Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4731173Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4731258Z             return cls(
2025-01-24T14:29:24.4731412Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4731587Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4731767Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4731934Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4732089Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4732171Z                 lines_df=lines_df,
2025-01-24T14:29:24.4732302Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4732454Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4732588Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4732703Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4732895Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4733004Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4733111Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4733210Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4733290Z                 simulation=sim,
2025-01-24T14:29:24.4733367Z             )
2025-01-24T14:29:24.4733447Z         else: # real packets
2025-01-24T14:29:24.4733613Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4733693Z             # which got emitted
2025-01-24T14:29:24.4733803Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4733883Z >           return cls(
2025-01-24T14:29:24.4734060Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4734241Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4734321Z                     mask
2025-01-24T14:29:24.4734392Z                 ],
2025-01-24T14:29:24.4734587Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4734666Z                     mask
2025-01-24T14:29:24.4734736Z                 ],
2025-01-24T14:29:24.4734909Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4734982Z                     mask
2025-01-24T14:29:24.4735056Z                 ],
2025-01-24T14:29:24.4735219Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4735304Z                 lines_df=lines_df,
2025-01-24T14:29:24.4735464Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4735735Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4735809Z                     mask
2025-01-24T14:29:24.4735883Z                 ],
2025-01-24T14:29:24.4736009Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4736126Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4736316Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4736424Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4736607Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4736706Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4736790Z                 simulation=sim,
2025-01-24T14:29:24.4736860Z             )
2025-01-24T14:29:24.4737196Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4737204Z 
2025-01-24T14:29:24.4737374Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4737582Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl7] __
2025-01-24T14:29:24.4737586Z 
2025-01-24T14:29:24.4737795Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4737803Z 
2025-01-24T14:29:24.4737895Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4737992Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4738064Z         """
2025-01-24T14:29:24.4738219Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4738386Z     
2025-01-24T14:29:24.4738467Z         Parameters:
2025-01-24T14:29:24.4738539Z         -----------
2025-01-24T14:29:24.4738661Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4738731Z     
2025-01-24T14:29:24.4738807Z         Returns:
2025-01-24T14:29:24.4738883Z         --------
2025-01-24T14:29:24.4738972Z         An LIVPlotter instance.
2025-01-24T14:29:24.4739041Z         """
2025-01-24T14:29:24.4739179Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4739183Z 
2025-01-24T14:29:24.4739323Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4739440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4739609Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4739758Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4739982Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4740115Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4740228Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4740232Z 
2025-01-24T14:29:24.4740447Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4740626Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4740709Z packets_mode = 'real'
2025-01-24T14:29:24.4740717Z 
2025-01-24T14:29:24.4740790Z     @classmethod
2025-01-24T14:29:24.4740906Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4740978Z         """
2025-01-24T14:29:24.4741181Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4741250Z     
2025-01-24T14:29:24.4741329Z         Parameters
2025-01-24T14:29:24.4741402Z         ----------
2025-01-24T14:29:24.4741512Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4741661Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4741756Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4741894Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4742088Z     
2025-01-24T14:29:24.4742161Z         Returns
2025-01-24T14:29:24.4742239Z         -------
2025-01-24T14:29:24.4742327Z         SimulationPacketData
2025-01-24T14:29:24.4742402Z         """
2025-01-24T14:29:24.4742509Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4742599Z             raise ValueError(
2025-01-24T14:29:24.4742724Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4742830Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4742905Z             )
2025-01-24T14:29:24.4743013Z         # Properties common among both packet modes
2025-01-24T14:29:24.4743286Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4743364Z             "line_id"
2025-01-24T14:29:24.4743438Z         )
2025-01-24T14:29:24.4743547Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4743676Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4743764Z         time_of_simulation = (
2025-01-24T14:29:24.4743927Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4743997Z         )
2025-01-24T14:29:24.4744070Z     
2025-01-24T14:29:24.4744146Z         spectrum = (
2025-01-24T14:29:24.4744269Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4744364Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4744483Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4744559Z         )
2025-01-24T14:29:24.4744629Z     
2025-01-24T14:29:24.4744722Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4744847Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4744929Z             return cls(
2025-01-24T14:29:24.4745086Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4745266Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4745448Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4745620Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4745771Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4745858Z                 lines_df=lines_df,
2025-01-24T14:29:24.4745991Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4746145Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4746278Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4746396Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4746590Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4746697Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4746803Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4746904Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4746992Z                 simulation=sim,
2025-01-24T14:29:24.4747064Z             )
2025-01-24T14:29:24.4747151Z         else: # real packets
2025-01-24T14:29:24.4747322Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4747402Z             # which got emitted
2025-01-24T14:29:24.4747512Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4747588Z >           return cls(
2025-01-24T14:29:24.4747766Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4747953Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4748032Z                     mask
2025-01-24T14:29:24.4748103Z                 ],
2025-01-24T14:29:24.4748401Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4748596Z                     mask
2025-01-24T14:29:24.4748673Z                 ],
2025-01-24T14:29:24.4748842Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4748920Z                     mask
2025-01-24T14:29:24.4748990Z                 ],
2025-01-24T14:29:24.4749160Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4749248Z                 lines_df=lines_df,
2025-01-24T14:29:24.4749413Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4749693Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4749770Z                     mask
2025-01-24T14:29:24.4749844Z                 ],
2025-01-24T14:29:24.4749974Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4750094Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4750285Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4750399Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4750499Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4750599Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4750689Z                 simulation=sim,
2025-01-24T14:29:24.4750760Z             )
2025-01-24T14:29:24.4751103Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4751108Z 
2025-01-24T14:29:24.4751288Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4751519Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _
2025-01-24T14:29:24.4751524Z 
2025-01-24T14:29:24.4751737Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4751741Z 
2025-01-24T14:29:24.4751840Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4751933Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4752009Z         """
2025-01-24T14:29:24.4752159Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4752235Z     
2025-01-24T14:29:24.4752316Z         Parameters:
2025-01-24T14:29:24.4752392Z         -----------
2025-01-24T14:29:24.4752513Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4752583Z     
2025-01-24T14:29:24.4752665Z         Returns:
2025-01-24T14:29:24.4752738Z         --------
2025-01-24T14:29:24.4752826Z         An LIVPlotter instance.
2025-01-24T14:29:24.4752899Z         """
2025-01-24T14:29:24.4753039Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4753044Z 
2025-01-24T14:29:24.4753180Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4753299Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4753459Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4753612Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4753830Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4753963Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4754075Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4754079Z 
2025-01-24T14:29:24.4754294Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4754469Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4754551Z packets_mode = 'real'
2025-01-24T14:29:24.4754555Z 
2025-01-24T14:29:24.4754633Z     @classmethod
2025-01-24T14:29:24.4754743Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4754818Z         """
2025-01-24T14:29:24.4755010Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4755195Z     
2025-01-24T14:29:24.4755278Z         Parameters
2025-01-24T14:29:24.4755352Z         ----------
2025-01-24T14:29:24.4755456Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4755604Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4755700Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4755835Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4755911Z     
2025-01-24T14:29:24.4755981Z         Returns
2025-01-24T14:29:24.4756058Z         -------
2025-01-24T14:29:24.4756234Z         SimulationPacketData
2025-01-24T14:29:24.4756310Z         """
2025-01-24T14:29:24.4756416Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4756504Z             raise ValueError(
2025-01-24T14:29:24.4756621Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4756742Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4756815Z             )
2025-01-24T14:29:24.4756926Z         # Properties common among both packet modes
2025-01-24T14:29:24.4757093Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4757167Z             "line_id"
2025-01-24T14:29:24.4757243Z         )
2025-01-24T14:29:24.4757351Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4757480Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4757562Z         time_of_simulation = (
2025-01-24T14:29:24.4757722Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4757795Z         )
2025-01-24T14:29:24.4757869Z     
2025-01-24T14:29:24.4757947Z         spectrum = (
2025-01-24T14:29:24.4758066Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4758156Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4758378Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4758453Z         )
2025-01-24T14:29:24.4758526Z     
2025-01-24T14:29:24.4758615Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4758743Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4758821Z             return cls(
2025-01-24T14:29:24.4758976Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4759152Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4759328Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4759502Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4759651Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4759737Z                 lines_df=lines_df,
2025-01-24T14:29:24.4759862Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4760024Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4760152Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4760272Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4760463Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4760577Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4760682Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4760777Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4760864Z                 simulation=sim,
2025-01-24T14:29:24.4760933Z             )
2025-01-24T14:29:24.4761020Z         else: # real packets
2025-01-24T14:29:24.4761186Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4761273Z             # which got emitted
2025-01-24T14:29:24.4761378Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4761579Z >           return cls(
2025-01-24T14:29:24.4761753Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4761941Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4762022Z                     mask
2025-01-24T14:29:24.4762092Z                 ],
2025-01-24T14:29:24.4762286Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4762360Z                     mask
2025-01-24T14:29:24.4762435Z                 ],
2025-01-24T14:29:24.4762705Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4762787Z                     mask
2025-01-24T14:29:24.4762857Z                 ],
2025-01-24T14:29:24.4763029Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4763111Z                 lines_df=lines_df,
2025-01-24T14:29:24.4763286Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4763459Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4763538Z                     mask
2025-01-24T14:29:24.4763613Z                 ],
2025-01-24T14:29:24.4763740Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4763859Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4764044Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4764160Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4764260Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4764358Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4764439Z                 simulation=sim,
2025-01-24T14:29:24.4764514Z             )
2025-01-24T14:29:24.4764849Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4764857Z 
2025-01-24T14:29:24.4765037Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4765269Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _
2025-01-24T14:29:24.4765274Z 
2025-01-24T14:29:24.4765487Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4765491Z 
2025-01-24T14:29:24.4765586Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4765679Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4765757Z         """
2025-01-24T14:29:24.4765908Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4765984Z     
2025-01-24T14:29:24.4766061Z         Parameters:
2025-01-24T14:29:24.4766140Z         -----------
2025-01-24T14:29:24.4766255Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4766334Z     
2025-01-24T14:29:24.4766407Z         Returns:
2025-01-24T14:29:24.4766486Z         --------
2025-01-24T14:29:24.4766576Z         An LIVPlotter instance.
2025-01-24T14:29:24.4766647Z         """
2025-01-24T14:29:24.4766785Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4766789Z 
2025-01-24T14:29:24.4766926Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4767042Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4767199Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4767355Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4767567Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4767707Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4767819Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4767916Z 
2025-01-24T14:29:24.4768135Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4768399Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4768486Z packets_mode = 'real'
2025-01-24T14:29:24.4768491Z 
2025-01-24T14:29:24.4768568Z     @classmethod
2025-01-24T14:29:24.4768678Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4768751Z         """
2025-01-24T14:29:24.4768944Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4769020Z     
2025-01-24T14:29:24.4769095Z         Parameters
2025-01-24T14:29:24.4769288Z         ----------
2025-01-24T14:29:24.4769391Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4769545Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4769636Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4769778Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4769857Z     
2025-01-24T14:29:24.4769928Z         Returns
2025-01-24T14:29:24.4770005Z         -------
2025-01-24T14:29:24.4770091Z         SimulationPacketData
2025-01-24T14:29:24.4770167Z         """
2025-01-24T14:29:24.4770272Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4770359Z             raise ValueError(
2025-01-24T14:29:24.4770476Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4770585Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4770655Z             )
2025-01-24T14:29:24.4770768Z         # Properties common among both packet modes
2025-01-24T14:29:24.4770928Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4771007Z             "line_id"
2025-01-24T14:29:24.4771077Z         )
2025-01-24T14:29:24.4771200Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4771332Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4771420Z         time_of_simulation = (
2025-01-24T14:29:24.4771579Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4771650Z         )
2025-01-24T14:29:24.4771725Z     
2025-01-24T14:29:24.4771802Z         spectrum = (
2025-01-24T14:29:24.4771922Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4772012Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4772134Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4772205Z         )
2025-01-24T14:29:24.4772280Z     
2025-01-24T14:29:24.4772371Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4772497Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4772574Z             return cls(
2025-01-24T14:29:24.4772738Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4772910Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4773097Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4773267Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4773416Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4773505Z                 lines_df=lines_df,
2025-01-24T14:29:24.4773632Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4773789Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4773920Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4774042Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4774227Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4774341Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4774572Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4774669Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4774755Z                 simulation=sim,
2025-01-24T14:29:24.4774827Z             )
2025-01-24T14:29:24.4774913Z         else: # real packets
2025-01-24T14:29:24.4775077Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4775163Z             # which got emitted
2025-01-24T14:29:24.4775269Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4775352Z >           return cls(
2025-01-24T14:29:24.4775615Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4775805Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4775879Z                     mask
2025-01-24T14:29:24.4775955Z                 ],
2025-01-24T14:29:24.4776143Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4776226Z                     mask
2025-01-24T14:29:24.4776302Z                 ],
2025-01-24T14:29:24.4776469Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4776547Z                     mask
2025-01-24T14:29:24.4776618Z                 ],
2025-01-24T14:29:24.4776787Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4776870Z                 lines_df=lines_df,
2025-01-24T14:29:24.4777036Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4777212Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4777292Z                     mask
2025-01-24T14:29:24.4777362Z                 ],
2025-01-24T14:29:24.4777495Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4777608Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4777802Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4777914Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4778013Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4778115Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4778196Z                 simulation=sim,
2025-01-24T14:29:24.4778372Z             )
2025-01-24T14:29:24.4778707Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4778712Z 
2025-01-24T14:29:24.4778891Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4786533Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply2] _
2025-01-24T14:29:24.4786544Z 
2025-01-24T14:29:24.4786806Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4786819Z 
2025-01-24T14:29:24.4786927Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4787025Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4787106Z         """
2025-01-24T14:29:24.4787271Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4787347Z     
2025-01-24T14:29:24.4787428Z         Parameters:
2025-01-24T14:29:24.4787509Z         -----------
2025-01-24T14:29:24.4787638Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4787712Z     
2025-01-24T14:29:24.4787791Z         Returns:
2025-01-24T14:29:24.4787866Z         --------
2025-01-24T14:29:24.4787963Z         An LIVPlotter instance.
2025-01-24T14:29:24.4788034Z         """
2025-01-24T14:29:24.4788180Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4788185Z 
2025-01-24T14:29:24.4788479Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4788608Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4788944Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4789103Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4789324Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4789465Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4789578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4789588Z 
2025-01-24T14:29:24.4789805Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4790087Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4790174Z packets_mode = 'real'
2025-01-24T14:29:24.4790178Z 
2025-01-24T14:29:24.4790260Z     @classmethod
2025-01-24T14:29:24.4790376Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4790454Z         """
2025-01-24T14:29:24.4790659Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4790735Z     
2025-01-24T14:29:24.4790813Z         Parameters
2025-01-24T14:29:24.4790894Z         ----------
2025-01-24T14:29:24.4790996Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4791152Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4791254Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4791395Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4791471Z     
2025-01-24T14:29:24.4791544Z         Returns
2025-01-24T14:29:24.4791627Z         -------
2025-01-24T14:29:24.4791718Z         SimulationPacketData
2025-01-24T14:29:24.4791793Z         """
2025-01-24T14:29:24.4791902Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4791991Z             raise ValueError(
2025-01-24T14:29:24.4792111Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4792230Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4792300Z             )
2025-01-24T14:29:24.4792415Z         # Properties common among both packet modes
2025-01-24T14:29:24.4792579Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4792661Z             "line_id"
2025-01-24T14:29:24.4792732Z         )
2025-01-24T14:29:24.4792851Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4792987Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4793071Z         time_of_simulation = (
2025-01-24T14:29:24.4793238Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4793310Z         )
2025-01-24T14:29:24.4793385Z     
2025-01-24T14:29:24.4793463Z         spectrum = (
2025-01-24T14:29:24.4793582Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4793674Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4793803Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4793876Z         )
2025-01-24T14:29:24.4793952Z     
2025-01-24T14:29:24.4794042Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4794173Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4794250Z             return cls(
2025-01-24T14:29:24.4794418Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4794601Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4794783Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4794958Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4795108Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4795198Z                 lines_df=lines_df,
2025-01-24T14:29:24.4795328Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4795584Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4795716Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4795837Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4796027Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4796142Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4796250Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4796422Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4796512Z                 simulation=sim,
2025-01-24T14:29:24.4796584Z             )
2025-01-24T14:29:24.4796672Z         else: # real packets
2025-01-24T14:29:24.4796841Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4796925Z             # which got emitted
2025-01-24T14:29:24.4797038Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4797117Z >           return cls(
2025-01-24T14:29:24.4797300Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4797486Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4797567Z                     mask
2025-01-24T14:29:24.4797638Z                 ],
2025-01-24T14:29:24.4797832Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4797905Z                     mask
2025-01-24T14:29:24.4797984Z                 ],
2025-01-24T14:29:24.4798168Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4798415Z                     mask
2025-01-24T14:29:24.4798491Z                 ],
2025-01-24T14:29:24.4798657Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4798764Z                 lines_df=lines_df,
2025-01-24T14:29:24.4798932Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4799114Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4799188Z                     mask
2025-01-24T14:29:24.4799264Z                 ],
2025-01-24T14:29:24.4799392Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4799513Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4799699Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4799816Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4799922Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4800020Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4800104Z                 simulation=sim,
2025-01-24T14:29:24.4800178Z             )
2025-01-24T14:29:24.4800519Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4800525Z 
2025-01-24T14:29:24.4800699Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4800933Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply3] _
2025-01-24T14:29:24.4800939Z 
2025-01-24T14:29:24.4801158Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4801162Z 
2025-01-24T14:29:24.4801260Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4801360Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4801433Z         """
2025-01-24T14:29:24.4801592Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4801664Z     
2025-01-24T14:29:24.4801749Z         Parameters:
2025-01-24T14:29:24.4801826Z         -----------
2025-01-24T14:29:24.4801953Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4802145Z     
2025-01-24T14:29:24.4802222Z         Returns:
2025-01-24T14:29:24.4802295Z         --------
2025-01-24T14:29:24.4802386Z         An LIVPlotter instance.
2025-01-24T14:29:24.4802457Z         """
2025-01-24T14:29:24.4802597Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4802602Z 
2025-01-24T14:29:24.4802740Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4802859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4803022Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4803269Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4803492Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4803626Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4803741Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4803749Z 
2025-01-24T14:29:24.4803967Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4804144Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4804228Z packets_mode = 'real'
2025-01-24T14:29:24.4804232Z 
2025-01-24T14:29:24.4804311Z     @classmethod
2025-01-24T14:29:24.4804423Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4804497Z         """
2025-01-24T14:29:24.4804700Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4804770Z     
2025-01-24T14:29:24.4804852Z         Parameters
2025-01-24T14:29:24.4804926Z         ----------
2025-01-24T14:29:24.4805032Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4805182Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4805279Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4805422Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4805498Z     
2025-01-24T14:29:24.4805569Z         Returns
2025-01-24T14:29:24.4805647Z         -------
2025-01-24T14:29:24.4805737Z         SimulationPacketData
2025-01-24T14:29:24.4805815Z         """
2025-01-24T14:29:24.4805922Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4806010Z             raise ValueError(
2025-01-24T14:29:24.4806137Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4806244Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4806322Z             )
2025-01-24T14:29:24.4806430Z         # Properties common among both packet modes
2025-01-24T14:29:24.4806594Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4806669Z             "line_id"
2025-01-24T14:29:24.4806746Z         )
2025-01-24T14:29:24.4806856Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4806988Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4807072Z         time_of_simulation = (
2025-01-24T14:29:24.4807233Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4807303Z         )
2025-01-24T14:29:24.4807378Z     
2025-01-24T14:29:24.4807454Z         spectrum = (
2025-01-24T14:29:24.4807575Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4807663Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4807788Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4807863Z         )
2025-01-24T14:29:24.4807934Z     
2025-01-24T14:29:24.4808031Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4808156Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4808338Z             return cls(
2025-01-24T14:29:24.4808498Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4808797Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4808975Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4809145Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4809297Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4809386Z                 lines_df=lines_df,
2025-01-24T14:29:24.4809524Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4809801Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4809940Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4810056Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4810249Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4810361Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4810468Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4810565Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4810651Z                 simulation=sim,
2025-01-24T14:29:24.4810721Z             )
2025-01-24T14:29:24.4810809Z         else: # real packets
2025-01-24T14:29:24.4810973Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4811058Z             # which got emitted
2025-01-24T14:29:24.4811170Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4811246Z >           return cls(
2025-01-24T14:29:24.4811429Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4811615Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4811694Z                     mask
2025-01-24T14:29:24.4811765Z                 ],
2025-01-24T14:29:24.4811964Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4812040Z                     mask
2025-01-24T14:29:24.4812115Z                 ],
2025-01-24T14:29:24.4812281Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4812359Z                     mask
2025-01-24T14:29:24.4812429Z                 ],
2025-01-24T14:29:24.4812601Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4812684Z                 lines_df=lines_df,
2025-01-24T14:29:24.4812858Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4813040Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4813114Z                     mask
2025-01-24T14:29:24.4813191Z                 ],
2025-01-24T14:29:24.4813319Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4813444Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4813630Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4813743Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4813843Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4813947Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4814028Z                 simulation=sim,
2025-01-24T14:29:24.4814105Z             )
2025-01-24T14:29:24.4814451Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4814456Z 
2025-01-24T14:29:24.4814630Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4814862Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _
2025-01-24T14:29:24.4814867Z 
2025-01-24T14:29:24.4815085Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4815195Z 
2025-01-24T14:29:24.4815301Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4815393Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4815469Z         """
2025-01-24T14:29:24.4815623Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4815699Z     
2025-01-24T14:29:24.4815779Z         Parameters:
2025-01-24T14:29:24.4815859Z         -----------
2025-01-24T14:29:24.4815984Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4816052Z     
2025-01-24T14:29:24.4816130Z         Returns:
2025-01-24T14:29:24.4816281Z         --------
2025-01-24T14:29:24.4816375Z         An LIVPlotter instance.
2025-01-24T14:29:24.4816446Z         """
2025-01-24T14:29:24.4816587Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4816591Z 
2025-01-24T14:29:24.4816726Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4816851Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4817010Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4817164Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4817379Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4817519Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4817632Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4817637Z 
2025-01-24T14:29:24.4817855Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4818028Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4818111Z packets_mode = 'real'
2025-01-24T14:29:24.4818115Z 
2025-01-24T14:29:24.4818197Z     @classmethod
2025-01-24T14:29:24.4818415Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4818495Z         """
2025-01-24T14:29:24.4818690Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4818765Z     
2025-01-24T14:29:24.4818840Z         Parameters
2025-01-24T14:29:24.4818919Z         ----------
2025-01-24T14:29:24.4819021Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4819176Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4819273Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4819412Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4819488Z     
2025-01-24T14:29:24.4819564Z         Returns
2025-01-24T14:29:24.4819640Z         -------
2025-01-24T14:29:24.4819727Z         SimulationPacketData
2025-01-24T14:29:24.4819803Z         """
2025-01-24T14:29:24.4819910Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4820001Z             raise ValueError(
2025-01-24T14:29:24.4820126Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4820230Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4820308Z             )
2025-01-24T14:29:24.4820413Z         # Properties common among both packet modes
2025-01-24T14:29:24.4820577Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4820652Z             "line_id"
2025-01-24T14:29:24.4820727Z         )
2025-01-24T14:29:24.4820835Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4820964Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4821057Z         time_of_simulation = (
2025-01-24T14:29:24.4821212Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4821288Z         )
2025-01-24T14:29:24.4821357Z     
2025-01-24T14:29:24.4821437Z         spectrum = (
2025-01-24T14:29:24.4821550Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4821764Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4821880Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4821953Z         )
2025-01-24T14:29:24.4822022Z     
2025-01-24T14:29:24.4822118Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4822238Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4822317Z             return cls(
2025-01-24T14:29:24.4822472Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4822646Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4822931Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4823100Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4823254Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4823336Z                 lines_df=lines_df,
2025-01-24T14:29:24.4823472Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4823625Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4823759Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4823872Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4824065Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4824171Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4824278Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4824380Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4824463Z                 simulation=sim,
2025-01-24T14:29:24.4824538Z             )
2025-01-24T14:29:24.4824619Z         else: # real packets
2025-01-24T14:29:24.4824786Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4824868Z             # which got emitted
2025-01-24T14:29:24.4824977Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4825054Z >           return cls(
2025-01-24T14:29:24.4825233Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4825416Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4825495Z                     mask
2025-01-24T14:29:24.4825565Z                 ],
2025-01-24T14:29:24.4825761Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4825838Z                     mask
2025-01-24T14:29:24.4825914Z                 ],
2025-01-24T14:29:24.4826083Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4826156Z                     mask
2025-01-24T14:29:24.4826231Z                 ],
2025-01-24T14:29:24.4826398Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4826489Z                 lines_df=lines_df,
2025-01-24T14:29:24.4826650Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4826830Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4826903Z                     mask
2025-01-24T14:29:24.4826979Z                 ],
2025-01-24T14:29:24.4827106Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4827224Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4827412Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4827525Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4827628Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4827722Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4827913Z                 simulation=sim,
2025-01-24T14:29:24.4827985Z             )
2025-01-24T14:29:24.4828425Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4828430Z 
2025-01-24T14:29:24.4828602Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4828834Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _
2025-01-24T14:29:24.4828838Z 
2025-01-24T14:29:24.4829054Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4829063Z 
2025-01-24T14:29:24.4829263Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4829388Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4829460Z         """
2025-01-24T14:29:24.4829616Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4829686Z     
2025-01-24T14:29:24.4829766Z         Parameters:
2025-01-24T14:29:24.4829844Z         -----------
2025-01-24T14:29:24.4829963Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4830031Z     
2025-01-24T14:29:24.4830107Z         Returns:
2025-01-24T14:29:24.4830179Z         --------
2025-01-24T14:29:24.4830267Z         An LIVPlotter instance.
2025-01-24T14:29:24.4830336Z         """
2025-01-24T14:29:24.4830471Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4830475Z 
2025-01-24T14:29:24.4830609Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4830725Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4830892Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4831039Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4831255Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4831385Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4831500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4831504Z 
2025-01-24T14:29:24.4831719Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4831889Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4831971Z packets_mode = 'real'
2025-01-24T14:29:24.4831975Z 
2025-01-24T14:29:24.4832055Z     @classmethod
2025-01-24T14:29:24.4832169Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4832240Z         """
2025-01-24T14:29:24.4832439Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4832510Z     
2025-01-24T14:29:24.4832592Z         Parameters
2025-01-24T14:29:24.4832666Z         ----------
2025-01-24T14:29:24.4832770Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4832917Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4833016Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4833154Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4833229Z     
2025-01-24T14:29:24.4833301Z         Returns
2025-01-24T14:29:24.4833378Z         -------
2025-01-24T14:29:24.4833465Z         SimulationPacketData
2025-01-24T14:29:24.4833541Z         """
2025-01-24T14:29:24.4833645Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4833732Z             raise ValueError(
2025-01-24T14:29:24.4833852Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4833958Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4834037Z             )
2025-01-24T14:29:24.4834142Z         # Properties common among both packet modes
2025-01-24T14:29:24.4834304Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4834379Z             "line_id"
2025-01-24T14:29:24.4834455Z         )
2025-01-24T14:29:24.4834703Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4834830Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4834913Z         time_of_simulation = (
2025-01-24T14:29:24.4835070Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4835141Z         )
2025-01-24T14:29:24.4835215Z     
2025-01-24T14:29:24.4835291Z         spectrum = (
2025-01-24T14:29:24.4835407Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4835500Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4835618Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4835772Z         )
2025-01-24T14:29:24.4835845Z     
2025-01-24T14:29:24.4835936Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4836058Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4836138Z             return cls(
2025-01-24T14:29:24.4836292Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4836470Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4836648Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4836817Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4836965Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4837051Z                 lines_df=lines_df,
2025-01-24T14:29:24.4837183Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4837342Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4837477Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4837593Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4837784Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4837894Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4838000Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4838094Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4838179Z                 simulation=sim,
2025-01-24T14:29:24.4838353Z             )
2025-01-24T14:29:24.4838442Z         else: # real packets
2025-01-24T14:29:24.4838611Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4838697Z             # which got emitted
2025-01-24T14:29:24.4838816Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4838893Z >           return cls(
2025-01-24T14:29:24.4839074Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4839258Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4839337Z                     mask
2025-01-24T14:29:24.4839412Z                 ],
2025-01-24T14:29:24.4839606Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4839680Z                     mask
2025-01-24T14:29:24.4839754Z                 ],
2025-01-24T14:29:24.4839925Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4840002Z                     mask
2025-01-24T14:29:24.4840073Z                 ],
2025-01-24T14:29:24.4840245Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4840332Z                 lines_df=lines_df,
2025-01-24T14:29:24.4840496Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4840676Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4840752Z                     mask
2025-01-24T14:29:24.4840829Z                 ],
2025-01-24T14:29:24.4840957Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4841201Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4841390Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4841505Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4841604Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4841704Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4841787Z                 simulation=sim,
2025-01-24T14:29:24.4841862Z             )
2025-01-24T14:29:24.4842303Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4842309Z 
2025-01-24T14:29:24.4842484Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4842712Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply6] _
2025-01-24T14:29:24.4842720Z 
2025-01-24T14:29:24.4842934Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4842938Z 
2025-01-24T14:29:24.4843034Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4843124Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4843198Z         """
2025-01-24T14:29:24.4843347Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4843421Z     
2025-01-24T14:29:24.4843500Z         Parameters:
2025-01-24T14:29:24.4843574Z         -----------
2025-01-24T14:29:24.4843693Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4843763Z     
2025-01-24T14:29:24.4843844Z         Returns:
2025-01-24T14:29:24.4843917Z         --------
2025-01-24T14:29:24.4844004Z         An LIVPlotter instance.
2025-01-24T14:29:24.4844073Z         """
2025-01-24T14:29:24.4844209Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4844214Z 
2025-01-24T14:29:24.4844347Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4844467Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4844625Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4844777Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4844992Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4845135Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4845246Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4845250Z 
2025-01-24T14:29:24.4845466Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4845642Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4845725Z packets_mode = 'real'
2025-01-24T14:29:24.4845729Z 
2025-01-24T14:29:24.4845808Z     @classmethod
2025-01-24T14:29:24.4845921Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4845994Z         """
2025-01-24T14:29:24.4846188Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4846263Z     
2025-01-24T14:29:24.4846338Z         Parameters
2025-01-24T14:29:24.4846416Z         ----------
2025-01-24T14:29:24.4846519Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4846666Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4846764Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4846908Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4846983Z     
2025-01-24T14:29:24.4847055Z         Returns
2025-01-24T14:29:24.4847129Z         -------
2025-01-24T14:29:24.4847216Z         SimulationPacketData
2025-01-24T14:29:24.4847290Z         """
2025-01-24T14:29:24.4847395Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4847572Z             raise ValueError(
2025-01-24T14:29:24.4847690Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4847799Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4847868Z             )
2025-01-24T14:29:24.4847976Z         # Properties common among both packet modes
2025-01-24T14:29:24.4848139Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4848214Z             "line_id"
2025-01-24T14:29:24.4848413Z         )
2025-01-24T14:29:24.4848523Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4848761Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4848848Z         time_of_simulation = (
2025-01-24T14:29:24.4849005Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4849074Z         )
2025-01-24T14:29:24.4849147Z     
2025-01-24T14:29:24.4849224Z         spectrum = (
2025-01-24T14:29:24.4849343Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4849436Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4849558Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4849627Z         )
2025-01-24T14:29:24.4849704Z     
2025-01-24T14:29:24.4849793Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4849919Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4849998Z             return cls(
2025-01-24T14:29:24.4850156Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4850334Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4850512Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4850683Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4850833Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4850926Z                 lines_df=lines_df,
2025-01-24T14:29:24.4851052Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4851212Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4851344Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4851462Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4851654Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4851761Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4851869Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4851965Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4852051Z                 simulation=sim,
2025-01-24T14:29:24.4852122Z             )
2025-01-24T14:29:24.4852209Z         else: # real packets
2025-01-24T14:29:24.4852374Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4852462Z             # which got emitted
2025-01-24T14:29:24.4852570Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4852650Z >           return cls(
2025-01-24T14:29:24.4852822Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4853013Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4853092Z                     mask
2025-01-24T14:29:24.4853163Z                 ],
2025-01-24T14:29:24.4853361Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4853440Z                     mask
2025-01-24T14:29:24.4853516Z                 ],
2025-01-24T14:29:24.4853682Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4853760Z                     mask
2025-01-24T14:29:24.4853834Z                 ],
2025-01-24T14:29:24.4854132Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4854216Z                 lines_df=lines_df,
2025-01-24T14:29:24.4854385Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4854559Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4854639Z                     mask
2025-01-24T14:29:24.4854717Z                 ],
2025-01-24T14:29:24.4854848Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4855044Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4855241Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4855364Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4855465Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4855565Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4855648Z                 simulation=sim,
2025-01-24T14:29:24.4855725Z             )
2025-01-24T14:29:24.4856061Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4856066Z 
2025-01-24T14:29:24.4856248Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4856478Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _
2025-01-24T14:29:24.4856482Z 
2025-01-24T14:29:24.4856693Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4856700Z 
2025-01-24T14:29:24.4856792Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4856885Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4856960Z         """
2025-01-24T14:29:24.4857110Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4857186Z     
2025-01-24T14:29:24.4857266Z         Parameters:
2025-01-24T14:29:24.4857345Z         -----------
2025-01-24T14:29:24.4857458Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4857532Z     
2025-01-24T14:29:24.4857606Z         Returns:
2025-01-24T14:29:24.4857683Z         --------
2025-01-24T14:29:24.4857770Z         An LIVPlotter instance.
2025-01-24T14:29:24.4857839Z         """
2025-01-24T14:29:24.4857974Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4857978Z 
2025-01-24T14:29:24.4858113Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4858338Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4858502Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4858654Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4858872Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4859014Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4859128Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4859132Z 
2025-01-24T14:29:24.4859353Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4859529Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4859610Z packets_mode = 'real'
2025-01-24T14:29:24.4859614Z 
2025-01-24T14:29:24.4859692Z     @classmethod
2025-01-24T14:29:24.4859804Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4859878Z         """
2025-01-24T14:29:24.4860077Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4860154Z     
2025-01-24T14:29:24.4860230Z         Parameters
2025-01-24T14:29:24.4860308Z         ----------
2025-01-24T14:29:24.4860407Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4860562Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4860792Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4860943Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4861018Z     
2025-01-24T14:29:24.4861093Z         Returns
2025-01-24T14:29:24.4861170Z         -------
2025-01-24T14:29:24.4861257Z         SimulationPacketData
2025-01-24T14:29:24.4861332Z         """
2025-01-24T14:29:24.4861440Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4861528Z             raise ValueError(
2025-01-24T14:29:24.4861652Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4861867Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4861942Z             )
2025-01-24T14:29:24.4862054Z         # Properties common among both packet modes
2025-01-24T14:29:24.4862215Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4862295Z             "line_id"
2025-01-24T14:29:24.4862370Z         )
2025-01-24T14:29:24.4862485Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4862609Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4862699Z         time_of_simulation = (
2025-01-24T14:29:24.4862861Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4862932Z         )
2025-01-24T14:29:24.4863004Z     
2025-01-24T14:29:24.4863080Z         spectrum = (
2025-01-24T14:29:24.4863200Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4863290Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4863415Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4863486Z         )
2025-01-24T14:29:24.4863559Z     
2025-01-24T14:29:24.4863649Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4863778Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4863853Z             return cls(
2025-01-24T14:29:24.4864021Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4864194Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4864377Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4864550Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4864700Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4864788Z                 lines_df=lines_df,
2025-01-24T14:29:24.4864923Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4865081Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4865219Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4865341Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4865532Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4865644Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4865746Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4865848Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4865936Z                 simulation=sim,
2025-01-24T14:29:24.4866008Z             )
2025-01-24T14:29:24.4866093Z         else: # real packets
2025-01-24T14:29:24.4866257Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4866342Z             # which got emitted
2025-01-24T14:29:24.4866453Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4866535Z >           return cls(
2025-01-24T14:29:24.4866708Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4866899Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4867065Z                     mask
2025-01-24T14:29:24.4867141Z                 ],
2025-01-24T14:29:24.4867335Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4867414Z                     mask
2025-01-24T14:29:24.4867489Z                 ],
2025-01-24T14:29:24.4867660Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4867740Z                     mask
2025-01-24T14:29:24.4867810Z                 ],
2025-01-24T14:29:24.4867982Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4868146Z                 lines_df=lines_df,
2025-01-24T14:29:24.4868421Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4868601Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4868681Z                     mask
2025-01-24T14:29:24.4868757Z                 ],
2025-01-24T14:29:24.4868892Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4869010Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4869206Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4869324Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4869427Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4869529Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4869612Z                 simulation=sim,
2025-01-24T14:29:24.4869688Z             )
2025-01-24T14:29:24.4870029Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4870033Z 
2025-01-24T14:29:24.4870213Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4870420Z _ ERROR at setup of TestSDECPlotter.test_parse_species_list[_full_species_list] _
2025-01-24T14:29:24.4870427Z 
2025-01-24T14:29:24.4870704Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4870924Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4871156Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4871161Z 
2025-01-24T14:29:24.4871256Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4871372Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4871447Z         """
2025-01-24T14:29:24.4871541Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4871616Z     
2025-01-24T14:29:24.4871692Z         Parameters
2025-01-24T14:29:24.4871774Z         ----------
2025-01-24T14:29:24.4871919Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4872009Z             Simulation object.
2025-01-24T14:29:24.4872082Z     
2025-01-24T14:29:24.4872159Z         Returns
2025-01-24T14:29:24.4872233Z         -------
2025-01-24T14:29:24.4872372Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4872447Z         """
2025-01-24T14:29:24.4872579Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4872583Z 
2025-01-24T14:29:24.4872732Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4872847Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4873015Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4873170Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4873392Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4873527Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4873643Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4873767Z 
2025-01-24T14:29:24.4873991Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4874160Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4874246Z packets_mode = 'real'
2025-01-24T14:29:24.4874250Z 
2025-01-24T14:29:24.4874324Z     @classmethod
2025-01-24T14:29:24.4874439Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4874510Z         """
2025-01-24T14:29:24.4874714Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4874785Z     
2025-01-24T14:29:24.4874864Z         Parameters
2025-01-24T14:29:24.4875041Z         ----------
2025-01-24T14:29:24.4875153Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4875305Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4875403Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4875541Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4875620Z     
2025-01-24T14:29:24.4875696Z         Returns
2025-01-24T14:29:24.4875768Z         -------
2025-01-24T14:29:24.4875860Z         SimulationPacketData
2025-01-24T14:29:24.4875930Z         """
2025-01-24T14:29:24.4876044Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4876126Z             raise ValueError(
2025-01-24T14:29:24.4876251Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4876355Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4876431Z             )
2025-01-24T14:29:24.4876542Z         # Properties common among both packet modes
2025-01-24T14:29:24.4876709Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4876784Z             "line_id"
2025-01-24T14:29:24.4876860Z         )
2025-01-24T14:29:24.4876967Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4877098Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4877191Z         time_of_simulation = (
2025-01-24T14:29:24.4877344Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4877420Z         )
2025-01-24T14:29:24.4877489Z     
2025-01-24T14:29:24.4877570Z         spectrum = (
2025-01-24T14:29:24.4877686Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4877783Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4877901Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4877976Z         )
2025-01-24T14:29:24.4878045Z     
2025-01-24T14:29:24.4878144Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4878372Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4878455Z             return cls(
2025-01-24T14:29:24.4878612Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4878791Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4878981Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4879150Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4879307Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4879391Z                 lines_df=lines_df,
2025-01-24T14:29:24.4879527Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4879681Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4879819Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4879936Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4880128Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4880238Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4880471Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4880571Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4880652Z                 simulation=sim,
2025-01-24T14:29:24.4880729Z             )
2025-01-24T14:29:24.4880811Z         else: # real packets
2025-01-24T14:29:24.4880979Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4881060Z             # which got emitted
2025-01-24T14:29:24.4881172Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4881248Z >           return cls(
2025-01-24T14:29:24.4881552Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4881741Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4881823Z                     mask
2025-01-24T14:29:24.4881897Z                 ],
2025-01-24T14:29:24.4882097Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4882175Z                     mask
2025-01-24T14:29:24.4882250Z                 ],
2025-01-24T14:29:24.4882423Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4882495Z                     mask
2025-01-24T14:29:24.4882570Z                 ],
2025-01-24T14:29:24.4882737Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4882825Z                 lines_df=lines_df,
2025-01-24T14:29:24.4882990Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4883175Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4883249Z                     mask
2025-01-24T14:29:24.4883324Z                 ],
2025-01-24T14:29:24.4883451Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4883570Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4883760Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4883872Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4883978Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4884075Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4884161Z                 simulation=sim,
2025-01-24T14:29:24.4884234Z             )
2025-01-24T14:29:24.4884575Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4884583Z 
2025-01-24T14:29:24.4884753Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4884916Z ---------------------------- Captured stdout setup -----------------------------
2025-01-24T14:29:24.4885131Z log_level is defined both in Functional Argument & YAML Configuration {debug section}
2025-01-24T14:29:24.4885285Z log_level = CRITICAL will be used for Log Level Determination
2025-01-24T14:29:24.4885289Z 
2025-01-24T14:29:24.4885444Z ---------------------------- Captured stderr setup -----------------------------
2025-01-24T14:29:24.4885448Z 
2025-01-24T14:29:24.4885452Z 
2025-01-24T14:29:24.4885872Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:29:24.4885878Z 
2025-01-24T14:29:24.4886113Z Packets:                                                                                   0/4000 [00:00<?, ?it/s][A
2025-01-24T14:29:24.4886266Z Iterations:                                                                                49/? [09:03<00:00,  7.52s/it]
2025-01-24T14:29:24.4886271Z 
2025-01-24T14:29:24.4886646Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉3999/4000 [00:00<00:00, 98528.05it/s][A
2025-01-24T14:29:24.4886651Z 
2025-01-24T14:29:24.4886991Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:29:24.4887135Z Iterations:                                                                                50/? [09:04<00:00,  5.60s/it]
2025-01-24T14:29:24.4887139Z 
2025-01-24T14:29:24.4887459Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 99245.28it/s][A
2025-01-24T14:29:24.4887465Z 
2025-01-24T14:29:24.4887690Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:29:24.4887927Z Iterations:                                                                                51/? [09:05<00:00,  4.26s/it]
2025-01-24T14:29:24.4887932Z 
2025-01-24T14:29:24.4888367Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 66886.53it/s][A
2025-01-24T14:29:24.4888587Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_species_list] ___
2025-01-24T14:29:24.4888592Z 
2025-01-24T14:29:24.4888871Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4889080Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4889321Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4889326Z 
2025-01-24T14:29:24.4889419Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4889543Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4889627Z         """
2025-01-24T14:29:24.4889719Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4889795Z     
2025-01-24T14:29:24.4889872Z         Parameters
2025-01-24T14:29:24.4889951Z         ----------
2025-01-24T14:29:24.4890097Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4890184Z             Simulation object.
2025-01-24T14:29:24.4890258Z     
2025-01-24T14:29:24.4890335Z         Returns
2025-01-24T14:29:24.4890410Z         -------
2025-01-24T14:29:24.4890549Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4890619Z         """
2025-01-24T14:29:24.4890759Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4890763Z 
2025-01-24T14:29:24.4890904Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4891024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4891192Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4891345Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4891566Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4891698Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4891810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4891953Z 
2025-01-24T14:29:24.4892170Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4892342Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4892424Z packets_mode = 'real'
2025-01-24T14:29:24.4892429Z 
2025-01-24T14:29:24.4892508Z     @classmethod
2025-01-24T14:29:24.4892625Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4892696Z         """
2025-01-24T14:29:24.4892898Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4892969Z     
2025-01-24T14:29:24.4893053Z         Parameters
2025-01-24T14:29:24.4893128Z         ----------
2025-01-24T14:29:24.4893230Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4893384Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4893484Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4893628Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4893702Z     
2025-01-24T14:29:24.4893774Z         Returns
2025-01-24T14:29:24.4893854Z         -------
2025-01-24T14:29:24.4893941Z         SimulationPacketData
2025-01-24T14:29:24.4894018Z         """
2025-01-24T14:29:24.4894125Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4894214Z             raise ValueError(
2025-01-24T14:29:24.4894336Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4894445Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4894520Z             )
2025-01-24T14:29:24.4894741Z         # Properties common among both packet modes
2025-01-24T14:29:24.4894911Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4894986Z             "line_id"
2025-01-24T14:29:24.4895060Z         )
2025-01-24T14:29:24.4895167Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4895301Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4895385Z         time_of_simulation = (
2025-01-24T14:29:24.4895545Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4895616Z         )
2025-01-24T14:29:24.4895690Z     
2025-01-24T14:29:24.4895768Z         spectrum = (
2025-01-24T14:29:24.4895889Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4895986Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4896103Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4896179Z         )
2025-01-24T14:29:24.4896251Z     
2025-01-24T14:29:24.4896347Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4896469Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4896549Z             return cls(
2025-01-24T14:29:24.4896707Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4896888Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4897063Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4897234Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4897383Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4897471Z                 lines_df=lines_df,
2025-01-24T14:29:24.4897608Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4897766Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4897902Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4898018Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4898209Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4898550Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4898661Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4898757Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4898843Z                 simulation=sim,
2025-01-24T14:29:24.4898914Z             )
2025-01-24T14:29:24.4899003Z         else: # real packets
2025-01-24T14:29:24.4899168Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4899254Z             # which got emitted
2025-01-24T14:29:24.4899366Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4899442Z >           return cls(
2025-01-24T14:29:24.4899627Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4899813Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4899893Z                     mask
2025-01-24T14:29:24.4899964Z                 ],
2025-01-24T14:29:24.4900165Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4900241Z                     mask
2025-01-24T14:29:24.4900317Z                 ],
2025-01-24T14:29:24.4900484Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4900562Z                     mask
2025-01-24T14:29:24.4900634Z                 ],
2025-01-24T14:29:24.4900806Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4900895Z                 lines_df=lines_df,
2025-01-24T14:29:24.4901172Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4901356Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4901429Z                     mask
2025-01-24T14:29:24.4901505Z                 ],
2025-01-24T14:29:24.4901634Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4901758Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4901942Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4902054Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4902153Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4902257Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4902337Z                 simulation=sim,
2025-01-24T14:29:24.4902415Z             )
2025-01-24T14:29:24.4902758Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4902763Z 
2025-01-24T14:29:24.4902934Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4903138Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_keep_colour] ____
2025-01-24T14:29:24.4903142Z 
2025-01-24T14:29:24.4903410Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4903630Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4903864Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4903869Z 
2025-01-24T14:29:24.4903964Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4904086Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4904159Z         """
2025-01-24T14:29:24.4904258Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4904329Z     
2025-01-24T14:29:24.4904410Z         Parameters
2025-01-24T14:29:24.4904487Z         ----------
2025-01-24T14:29:24.4904635Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4904718Z             Simulation object.
2025-01-24T14:29:24.4904793Z     
2025-01-24T14:29:24.4904865Z         Returns
2025-01-24T14:29:24.4904945Z         -------
2025-01-24T14:29:24.4905180Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4905255Z         """
2025-01-24T14:29:24.4905387Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4905391Z 
2025-01-24T14:29:24.4905540Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4905650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4905818Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4905972Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4906189Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4906327Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4906437Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4906440Z 
2025-01-24T14:29:24.4906660Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4906830Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4906919Z packets_mode = 'real'
2025-01-24T14:29:24.4906924Z 
2025-01-24T14:29:24.4906997Z     @classmethod
2025-01-24T14:29:24.4907114Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4907189Z         """
2025-01-24T14:29:24.4907382Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4907456Z     
2025-01-24T14:29:24.4907531Z         Parameters
2025-01-24T14:29:24.4907609Z         ----------
2025-01-24T14:29:24.4907710Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4907973Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4908069Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4908212Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4908417Z     
2025-01-24T14:29:24.4908497Z         Returns
2025-01-24T14:29:24.4908573Z         -------
2025-01-24T14:29:24.4908665Z         SimulationPacketData
2025-01-24T14:29:24.4908737Z         """
2025-01-24T14:29:24.4908845Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4908929Z             raise ValueError(
2025-01-24T14:29:24.4909051Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4909158Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4909229Z             )
2025-01-24T14:29:24.4909341Z         # Properties common among both packet modes
2025-01-24T14:29:24.4909504Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4909583Z             "line_id"
2025-01-24T14:29:24.4909654Z         )
2025-01-24T14:29:24.4909770Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4909897Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4909989Z         time_of_simulation = (
2025-01-24T14:29:24.4910148Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4910227Z         )
2025-01-24T14:29:24.4910297Z     
2025-01-24T14:29:24.4910381Z         spectrum = (
2025-01-24T14:29:24.4910494Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4910589Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4910712Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4910784Z         )
2025-01-24T14:29:24.4910857Z     
2025-01-24T14:29:24.4910946Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4911075Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4911156Z             return cls(
2025-01-24T14:29:24.4911319Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4911490Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4911670Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4911964Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4912122Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4912204Z                 lines_df=lines_df,
2025-01-24T14:29:24.4912340Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4912499Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4912629Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4912755Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4912944Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4913056Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4913158Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4913263Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4913345Z                 simulation=sim,
2025-01-24T14:29:24.4913423Z             )
2025-01-24T14:29:24.4913505Z         else: # real packets
2025-01-24T14:29:24.4913675Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4913754Z             # which got emitted
2025-01-24T14:29:24.4913868Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4913950Z >           return cls(
2025-01-24T14:29:24.4914126Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4914426Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4914505Z                     mask
2025-01-24T14:29:24.4914581Z                 ],
2025-01-24T14:29:24.4914771Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4914855Z                     mask
2025-01-24T14:29:24.4914929Z                 ],
2025-01-24T14:29:24.4915100Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4915174Z                     mask
2025-01-24T14:29:24.4915250Z                 ],
2025-01-24T14:29:24.4915416Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4915502Z                 lines_df=lines_df,
2025-01-24T14:29:24.4915673Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4915847Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4915928Z                     mask
2025-01-24T14:29:24.4916002Z                 ],
2025-01-24T14:29:24.4916135Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4916250Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4916440Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4916553Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4916659Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4916755Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4916841Z                 simulation=sim,
2025-01-24T14:29:24.4916912Z             )
2025-01-24T14:29:24.4917251Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4917256Z 
2025-01-24T14:29:24.4917431Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4917707Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-24T14:29:24.4917712Z 
2025-01-24T14:29:24.4917982Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4918194Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4918646Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4918652Z 
2025-01-24T14:29:24.4918742Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4918862Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4918937Z         """
2025-01-24T14:29:24.4919026Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4919101Z     
2025-01-24T14:29:24.4919177Z         Parameters
2025-01-24T14:29:24.4919257Z         ----------
2025-01-24T14:29:24.4919396Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4919485Z             Simulation object.
2025-01-24T14:29:24.4919558Z     
2025-01-24T14:29:24.4919637Z         Returns
2025-01-24T14:29:24.4919709Z         -------
2025-01-24T14:29:24.4919844Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4919914Z         """
2025-01-24T14:29:24.4920053Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4920062Z 
2025-01-24T14:29:24.4920204Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4920320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4920485Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4920634Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4920854Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4920988Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4921218Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4921224Z 
2025-01-24T14:29:24.4921444Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4921615Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4921703Z packets_mode = 'real'
2025-01-24T14:29:24.4921707Z 
2025-01-24T14:29:24.4921788Z     @classmethod
2025-01-24T14:29:24.4921899Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4921975Z         """
2025-01-24T14:29:24.4922172Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4922243Z     
2025-01-24T14:29:24.4922323Z         Parameters
2025-01-24T14:29:24.4922398Z         ----------
2025-01-24T14:29:24.4922505Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4922652Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4922753Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4922891Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4922967Z     
2025-01-24T14:29:24.4923039Z         Returns
2025-01-24T14:29:24.4923116Z         -------
2025-01-24T14:29:24.4923204Z         SimulationPacketData
2025-01-24T14:29:24.4923280Z         """
2025-01-24T14:29:24.4923388Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4923476Z             raise ValueError(
2025-01-24T14:29:24.4923597Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4923700Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4923776Z             )
2025-01-24T14:29:24.4923882Z         # Properties common among both packet modes
2025-01-24T14:29:24.4924046Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4924122Z             "line_id"
2025-01-24T14:29:24.4924197Z         )
2025-01-24T14:29:24.4924308Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4924439Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4924524Z         time_of_simulation = (
2025-01-24T14:29:24.4924683Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4924755Z         )
2025-01-24T14:29:24.4924939Z     
2025-01-24T14:29:24.4925017Z         spectrum = (
2025-01-24T14:29:24.4925136Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4925226Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4925352Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4925427Z         )
2025-01-24T14:29:24.4925496Z     
2025-01-24T14:29:24.4925594Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4925716Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4925798Z             return cls(
2025-01-24T14:29:24.4925957Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4926132Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4926308Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4926481Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4926634Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4926722Z                 lines_df=lines_df,
2025-01-24T14:29:24.4926849Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4927010Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4927145Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4927260Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4927451Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4927643Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4927753Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4927851Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4927936Z                 simulation=sim,
2025-01-24T14:29:24.4928010Z             )
2025-01-24T14:29:24.4928098Z         else: # real packets
2025-01-24T14:29:24.4928361Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4928450Z             # which got emitted
2025-01-24T14:29:24.4928564Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4928641Z >           return cls(
2025-01-24T14:29:24.4928819Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4929006Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4929086Z                     mask
2025-01-24T14:29:24.4929160Z                 ],
2025-01-24T14:29:24.4929380Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4929455Z                     mask
2025-01-24T14:29:24.4929530Z                 ],
2025-01-24T14:29:24.4929697Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4929783Z                     mask
2025-01-24T14:29:24.4929857Z                 ],
2025-01-24T14:29:24.4930027Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4930110Z                 lines_df=lines_df,
2025-01-24T14:29:24.4930278Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4930459Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4930531Z                     mask
2025-01-24T14:29:24.4930606Z                 ],
2025-01-24T14:29:24.4930739Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4930858Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4931047Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4931161Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4931407Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4931508Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4931587Z                 simulation=sim,
2025-01-24T14:29:24.4931663Z             )
2025-01-24T14:29:24.4931999Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4932004Z 
2025-01-24T14:29:24.4932173Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4932446Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-24T14:29:24.4932450Z 
2025-01-24T14:29:24.4932718Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4932938Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4933169Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4933177Z 
2025-01-24T14:29:24.4933270Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4933388Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4933461Z         """
2025-01-24T14:29:24.4933558Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4933628Z     
2025-01-24T14:29:24.4933707Z         Parameters
2025-01-24T14:29:24.4933781Z         ----------
2025-01-24T14:29:24.4933927Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4934010Z             Simulation object.
2025-01-24T14:29:24.4934085Z     
2025-01-24T14:29:24.4934156Z         Returns
2025-01-24T14:29:24.4934348Z         -------
2025-01-24T14:29:24.4934481Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4934556Z         """
2025-01-24T14:29:24.4934688Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4934693Z 
2025-01-24T14:29:24.4934840Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4934956Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4935121Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4935272Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4935483Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4935622Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4935735Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4935738Z 
2025-01-24T14:29:24.4935963Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4936129Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4936217Z packets_mode = 'real'
2025-01-24T14:29:24.4936221Z 
2025-01-24T14:29:24.4936296Z     @classmethod
2025-01-24T14:29:24.4936413Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4936491Z         """
2025-01-24T14:29:24.4936687Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4936762Z     
2025-01-24T14:29:24.4936837Z         Parameters
2025-01-24T14:29:24.4936916Z         ----------
2025-01-24T14:29:24.4937015Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4937169Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4937262Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4937404Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4937477Z     
2025-01-24T14:29:24.4937554Z         Returns
2025-01-24T14:29:24.4937629Z         -------
2025-01-24T14:29:24.4937723Z         SimulationPacketData
2025-01-24T14:29:24.4937795Z         """
2025-01-24T14:29:24.4937905Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4937991Z             raise ValueError(
2025-01-24T14:29:24.4938217Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4938444Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4938514Z             )
2025-01-24T14:29:24.4938629Z         # Properties common among both packet modes
2025-01-24T14:29:24.4938789Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4938870Z             "line_id"
2025-01-24T14:29:24.4938940Z         )
2025-01-24T14:29:24.4939052Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4939175Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4939266Z         time_of_simulation = (
2025-01-24T14:29:24.4939419Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4939499Z         )
2025-01-24T14:29:24.4939569Z     
2025-01-24T14:29:24.4939651Z         spectrum = (
2025-01-24T14:29:24.4939764Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4939861Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4939987Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4940058Z         )
2025-01-24T14:29:24.4940133Z     
2025-01-24T14:29:24.4940223Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4940348Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4940424Z             return cls(
2025-01-24T14:29:24.4940588Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4940761Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4941064Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4941235Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4941390Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4941478Z                 lines_df=lines_df,
2025-01-24T14:29:24.4941609Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4941768Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4941896Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4942017Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4942205Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4942318Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4942424Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4942526Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4942607Z                 simulation=sim,
2025-01-24T14:29:24.4942685Z             )
2025-01-24T14:29:24.4942767Z         else: # real packets
2025-01-24T14:29:24.4942935Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4943018Z             # which got emitted
2025-01-24T14:29:24.4943132Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4943214Z >           return cls(
2025-01-24T14:29:24.4943388Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4943578Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4943653Z                     mask
2025-01-24T14:29:24.4943729Z                 ],
2025-01-24T14:29:24.4943919Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4944001Z                     mask
2025-01-24T14:29:24.4944072Z                 ],
2025-01-24T14:29:24.4944244Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4944319Z                     mask
2025-01-24T14:29:24.4944397Z                 ],
2025-01-24T14:29:24.4944705Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4944793Z                 lines_df=lines_df,
2025-01-24T14:29:24.4944962Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4945135Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4945217Z                     mask
2025-01-24T14:29:24.4945288Z                 ],
2025-01-24T14:29:24.4945420Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4945541Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4945737Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4945846Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4945955Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4946050Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4946140Z                 simulation=sim,
2025-01-24T14:29:24.4946211Z             )
2025-01-24T14:29:24.4946552Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4946557Z 
2025-01-24T14:29:24.4946736Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4947006Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-24T14:29:24.4947010Z 
2025-01-24T14:29:24.4947281Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4947577Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4947816Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4947821Z 
2025-01-24T14:29:24.4947911Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4948033Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4948110Z         """
2025-01-24T14:29:24.4948201Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4948390Z     
2025-01-24T14:29:24.4948471Z         Parameters
2025-01-24T14:29:24.4948551Z         ----------
2025-01-24T14:29:24.4948694Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4948782Z             Simulation object.
2025-01-24T14:29:24.4948851Z     
2025-01-24T14:29:24.4948930Z         Returns
2025-01-24T14:29:24.4949003Z         -------
2025-01-24T14:29:24.4949138Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4949213Z         """
2025-01-24T14:29:24.4949354Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4949358Z 
2025-01-24T14:29:24.4949497Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4949615Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4949784Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4949933Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4950153Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4950286Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4950402Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4950407Z 
2025-01-24T14:29:24.4950622Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4950795Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4950877Z packets_mode = 'real'
2025-01-24T14:29:24.4950881Z 
2025-01-24T14:29:24.4950961Z     @classmethod
2025-01-24T14:29:24.4951074Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4951152Z         """
2025-01-24T14:29:24.4951350Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4951541Z     
2025-01-24T14:29:24.4951623Z         Parameters
2025-01-24T14:29:24.4951699Z         ----------
2025-01-24T14:29:24.4951805Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4951954Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4952056Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4952196Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4952274Z     
2025-01-24T14:29:24.4952347Z         Returns
2025-01-24T14:29:24.4952428Z         -------
2025-01-24T14:29:24.4952519Z         SimulationPacketData
2025-01-24T14:29:24.4952597Z         """
2025-01-24T14:29:24.4952703Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4952793Z             raise ValueError(
2025-01-24T14:29:24.4952911Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4953019Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4953100Z             )
2025-01-24T14:29:24.4953208Z         # Properties common among both packet modes
2025-01-24T14:29:24.4953376Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4953452Z             "line_id"
2025-01-24T14:29:24.4953529Z         )
2025-01-24T14:29:24.4963598Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4963785Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4963886Z         time_of_simulation = (
2025-01-24T14:29:24.4964063Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4964348Z         )
2025-01-24T14:29:24.4964425Z     
2025-01-24T14:29:24.4964513Z         spectrum = (
2025-01-24T14:29:24.4964642Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4964743Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4964868Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4964949Z         )
2025-01-24T14:29:24.4965019Z     
2025-01-24T14:29:24.4965117Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4965250Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4965336Z             return cls(
2025-01-24T14:29:24.4965515Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4965699Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4965885Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4966062Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4966222Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4966312Z                 lines_df=lines_df,
2025-01-24T14:29:24.4966451Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4966614Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4966752Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4966872Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4967073Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4967184Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4967295Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4967400Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4967487Z                 simulation=sim,
2025-01-24T14:29:24.4967566Z             )
2025-01-24T14:29:24.4967654Z         else: # real packets
2025-01-24T14:29:24.4967835Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4967916Z             # which got emitted
2025-01-24T14:29:24.4968034Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4968383Z >           return cls(
2025-01-24T14:29:24.4968573Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4968760Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4968842Z                     mask
2025-01-24T14:29:24.4968915Z                 ],
2025-01-24T14:29:24.4969112Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4969190Z                     mask
2025-01-24T14:29:24.4969268Z                 ],
2025-01-24T14:29:24.4969453Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4969531Z                     mask
2025-01-24T14:29:24.4969612Z                 ],
2025-01-24T14:29:24.4969781Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4969870Z                 lines_df=lines_df,
2025-01-24T14:29:24.4970040Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4970218Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4970294Z                     mask
2025-01-24T14:29:24.4970373Z                 ],
2025-01-24T14:29:24.4970507Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4970629Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4970822Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4971063Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4971175Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4971274Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4971362Z                 simulation=sim,
2025-01-24T14:29:24.4971434Z             )
2025-01-24T14:29:24.4971779Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4971789Z 
2025-01-24T14:29:24.4971967Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4972245Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-24T14:29:24.4972250Z 
2025-01-24T14:29:24.4972520Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4972740Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4972983Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4972989Z 
2025-01-24T14:29:24.4973079Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4973199Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4973272Z         """
2025-01-24T14:29:24.4973373Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4973449Z     
2025-01-24T14:29:24.4973534Z         Parameters
2025-01-24T14:29:24.4973613Z         ----------
2025-01-24T14:29:24.4973770Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4973861Z             Simulation object.
2025-01-24T14:29:24.4973937Z     
2025-01-24T14:29:24.4974011Z         Returns
2025-01-24T14:29:24.4974091Z         -------
2025-01-24T14:29:24.4974227Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4974306Z         """
2025-01-24T14:29:24.4974448Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4974453Z 
2025-01-24T14:29:24.4974603Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4974728Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4974893Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4975051Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4975393Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4975535Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4975656Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4975660Z 
2025-01-24T14:29:24.4975884Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4976064Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4976159Z packets_mode = 'real'
2025-01-24T14:29:24.4976163Z 
2025-01-24T14:29:24.4976243Z     @classmethod
2025-01-24T14:29:24.4976367Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4976440Z         """
2025-01-24T14:29:24.4976652Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4976724Z     
2025-01-24T14:29:24.4976807Z         Parameters
2025-01-24T14:29:24.4976886Z         ----------
2025-01-24T14:29:24.4976994Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4977146Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4977246Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4977387Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4977465Z     
2025-01-24T14:29:24.4977539Z         Returns
2025-01-24T14:29:24.4977617Z         -------
2025-01-24T14:29:24.4977708Z         SimulationPacketData
2025-01-24T14:29:24.4977785Z         """
2025-01-24T14:29:24.4977903Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4978092Z             raise ValueError(
2025-01-24T14:29:24.4978332Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4978446Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4978525Z             )
2025-01-24T14:29:24.4978637Z         # Properties common among both packet modes
2025-01-24T14:29:24.4978812Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4978888Z             "line_id"
2025-01-24T14:29:24.4978964Z         )
2025-01-24T14:29:24.4979076Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4979206Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4979292Z         time_of_simulation = (
2025-01-24T14:29:24.4979457Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4979528Z         )
2025-01-24T14:29:24.4979606Z     
2025-01-24T14:29:24.4979690Z         spectrum = (
2025-01-24T14:29:24.4979811Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4979909Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4980031Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4980109Z         )
2025-01-24T14:29:24.4980184Z     
2025-01-24T14:29:24.4980278Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4980410Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4980493Z             return cls(
2025-01-24T14:29:24.4980652Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4980835Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4981013Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4981190Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4981351Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4981438Z                 lines_df=lines_df,
2025-01-24T14:29:24.4981574Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4981732Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4981869Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4982116Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4982310Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4982420Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4982530Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4982630Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4982718Z                 simulation=sim,
2025-01-24T14:29:24.4982790Z             )
2025-01-24T14:29:24.4982879Z         else: # real packets
2025-01-24T14:29:24.4983055Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4983135Z             # which got emitted
2025-01-24T14:29:24.4983249Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4983326Z >           return cls(
2025-01-24T14:29:24.4983506Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4983696Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4983778Z                     mask
2025-01-24T14:29:24.4983852Z                 ],
2025-01-24T14:29:24.4984047Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4984122Z                     mask
2025-01-24T14:29:24.4984201Z                 ],
2025-01-24T14:29:24.4984369Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4984448Z                     mask
2025-01-24T14:29:24.4984636Z                 ],
2025-01-24T14:29:24.4984809Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4984897Z                 lines_df=lines_df,
2025-01-24T14:29:24.4985061Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4985247Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4985321Z                     mask
2025-01-24T14:29:24.4985401Z                 ],
2025-01-24T14:29:24.4985532Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4985653Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4985839Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4985956Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4986060Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4986185Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4986336Z                 simulation=sim,
2025-01-24T14:29:24.4986455Z             )
2025-01-24T14:29:24.4986929Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4986941Z 
2025-01-24T14:29:24.4987123Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4987403Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-24T14:29:24.4987407Z 
2025-01-24T14:29:24.4987677Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4987901Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4988136Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4988146Z 
2025-01-24T14:29:24.4988356Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4988481Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4988552Z         """
2025-01-24T14:29:24.4988649Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4988720Z     
2025-01-24T14:29:24.4988801Z         Parameters
2025-01-24T14:29:24.4988880Z         ----------
2025-01-24T14:29:24.4989165Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4989250Z             Simulation object.
2025-01-24T14:29:24.4989326Z     
2025-01-24T14:29:24.4989399Z         Returns
2025-01-24T14:29:24.4989480Z         -------
2025-01-24T14:29:24.4989611Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4989689Z         """
2025-01-24T14:29:24.4989824Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4989835Z 
2025-01-24T14:29:24.4989981Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4990107Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4990272Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4990429Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4990646Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4990791Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4990901Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4990905Z 
2025-01-24T14:29:24.4991128Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4991299Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4991389Z packets_mode = 'real'
2025-01-24T14:29:24.4991394Z 
2025-01-24T14:29:24.4991477Z     @classmethod
2025-01-24T14:29:24.4991587Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4991664Z         """
2025-01-24T14:29:24.4991994Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4992078Z     
2025-01-24T14:29:24.4992159Z         Parameters
2025-01-24T14:29:24.4992242Z         ----------
2025-01-24T14:29:24.4992345Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4992501Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4992600Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4992744Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4992816Z     
2025-01-24T14:29:24.4992896Z         Returns
2025-01-24T14:29:24.4992971Z         -------
2025-01-24T14:29:24.4993067Z         SimulationPacketData
2025-01-24T14:29:24.4993145Z         """
2025-01-24T14:29:24.4993256Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4993345Z             raise ValueError(
2025-01-24T14:29:24.4993467Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4993581Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4993654Z             )
2025-01-24T14:29:24.4993766Z         # Properties common among both packet modes
2025-01-24T14:29:24.4993931Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4994016Z             "line_id"
2025-01-24T14:29:24.4994087Z         )
2025-01-24T14:29:24.4994248Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4994452Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4994573Z         time_of_simulation = (
2025-01-24T14:29:24.4994733Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4994811Z         )
2025-01-24T14:29:24.4994886Z     
2025-01-24T14:29:24.4994966Z         spectrum = (
2025-01-24T14:29:24.4995086Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4995177Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4995306Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4995379Z         )
2025-01-24T14:29:24.4995455Z     
2025-01-24T14:29:24.4995545Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4995674Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4995751Z             return cls(
2025-01-24T14:29:24.4996008Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4996183Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4996363Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4996532Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4996690Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4996780Z                 lines_df=lines_df,
2025-01-24T14:29:24.4996915Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4997076Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4997293Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4997485Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4997771Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4997889Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4997997Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4998102Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4998190Z                 simulation=sim,
2025-01-24T14:29:24.4998377Z             )
2025-01-24T14:29:24.4998469Z         else: # real packets
2025-01-24T14:29:24.4998642Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4998728Z             # which got emitted
2025-01-24T14:29:24.4998970Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4999059Z >           return cls(
2025-01-24T14:29:24.4999244Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4999429Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4999513Z                     mask
2025-01-24T14:29:24.4999584Z                 ],
2025-01-24T14:29:24.4999782Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4999856Z                     mask
2025-01-24T14:29:24.4999932Z                 ],
2025-01-24T14:29:24.5000100Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5000181Z                     mask
2025-01-24T14:29:24.5000252Z                 ],
2025-01-24T14:29:24.5000425Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5000515Z                 lines_df=lines_df,
2025-01-24T14:29:24.5000684Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5000865Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5000939Z                     mask
2025-01-24T14:29:24.5001018Z                 ],
2025-01-24T14:29:24.5001149Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5001269Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5001457Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5001571Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5001673Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5001774Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5001855Z                 simulation=sim,
2025-01-24T14:29:24.5001934Z             )
2025-01-24T14:29:24.5002269Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5002280Z 
2025-01-24T14:29:24.5002456Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5002733Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-24T14:29:24.5002861Z 
2025-01-24T14:29:24.5003134Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5003358Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5003593Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5003597Z 
2025-01-24T14:29:24.5003697Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5003812Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5003888Z         """
2025-01-24T14:29:24.5003986Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5004057Z     
2025-01-24T14:29:24.5004138Z         Parameters
2025-01-24T14:29:24.5004213Z         ----------
2025-01-24T14:29:24.5004363Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5004446Z             Simulation object.
2025-01-24T14:29:24.5004526Z     
2025-01-24T14:29:24.5004599Z         Returns
2025-01-24T14:29:24.5004679Z         -------
2025-01-24T14:29:24.5004811Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5004886Z         """
2025-01-24T14:29:24.5005022Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5005026Z 
2025-01-24T14:29:24.5005174Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5005288Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5005459Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5005699Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5005926Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5006066Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5006177Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5006184Z 
2025-01-24T14:29:24.5006406Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5006573Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5006664Z packets_mode = 'real'
2025-01-24T14:29:24.5006668Z 
2025-01-24T14:29:24.5006742Z     @classmethod
2025-01-24T14:29:24.5006860Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5006932Z         """
2025-01-24T14:29:24.5007133Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5007209Z     
2025-01-24T14:29:24.5007289Z         Parameters
2025-01-24T14:29:24.5007369Z         ----------
2025-01-24T14:29:24.5007470Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5007623Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5007717Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5007866Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5007938Z     
2025-01-24T14:29:24.5008016Z         Returns
2025-01-24T14:29:24.5008089Z         -------
2025-01-24T14:29:24.5008181Z         SimulationPacketData
2025-01-24T14:29:24.5008352Z         """
2025-01-24T14:29:24.5008469Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5008553Z             raise ValueError(
2025-01-24T14:29:24.5008676Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5008785Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5008859Z             )
2025-01-24T14:29:24.5008974Z         # Properties common among both packet modes
2025-01-24T14:29:24.5009134Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5009213Z             "line_id"
2025-01-24T14:29:24.5009283Z         )
2025-01-24T14:29:24.5009399Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5009642Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5009732Z         time_of_simulation = (
2025-01-24T14:29:24.5009886Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5009965Z         )
2025-01-24T14:29:24.5010035Z     
2025-01-24T14:29:24.5010118Z         spectrum = (
2025-01-24T14:29:24.5010231Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5010326Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5010443Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5010522Z         )
2025-01-24T14:29:24.5010597Z     
2025-01-24T14:29:24.5010691Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5010821Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5010898Z             return cls(
2025-01-24T14:29:24.5011062Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5011237Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5011424Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5011593Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5011750Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5011836Z                 lines_df=lines_df,
2025-01-24T14:29:24.5011969Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5012130Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5012381Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5012511Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5012699Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5012813Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5012921Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5013023Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5013105Z                 simulation=sim,
2025-01-24T14:29:24.5013182Z             )
2025-01-24T14:29:24.5013266Z         else: # real packets
2025-01-24T14:29:24.5013438Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5013519Z             # which got emitted
2025-01-24T14:29:24.5013632Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5013715Z >           return cls(
2025-01-24T14:29:24.5013892Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5014081Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5014158Z                     mask
2025-01-24T14:29:24.5014234Z                 ],
2025-01-24T14:29:24.5014427Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5014506Z                     mask
2025-01-24T14:29:24.5014577Z                 ],
2025-01-24T14:29:24.5014751Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5014824Z                     mask
2025-01-24T14:29:24.5014901Z                 ],
2025-01-24T14:29:24.5015068Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5015156Z                 lines_df=lines_df,
2025-01-24T14:29:24.5015331Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5015505Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5015584Z                     mask
2025-01-24T14:29:24.5015655Z                 ],
2025-01-24T14:29:24.5015786Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5015991Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5016184Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5016292Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5016398Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5016494Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5016579Z                 simulation=sim,
2025-01-24T14:29:24.5016651Z             )
2025-01-24T14:29:24.5016998Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5017003Z 
2025-01-24T14:29:24.5017179Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5017449Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-24T14:29:24.5017453Z 
2025-01-24T14:29:24.5017722Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5017940Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5018180Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5018184Z 
2025-01-24T14:29:24.5018376Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5018501Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5018578Z         """
2025-01-24T14:29:24.5018669Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5018744Z     
2025-01-24T14:29:24.5018820Z         Parameters
2025-01-24T14:29:24.5019037Z         ----------
2025-01-24T14:29:24.5019183Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5019270Z             Simulation object.
2025-01-24T14:29:24.5019341Z     
2025-01-24T14:29:24.5019418Z         Returns
2025-01-24T14:29:24.5019491Z         -------
2025-01-24T14:29:24.5019630Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5019700Z         """
2025-01-24T14:29:24.5019843Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5019848Z 
2025-01-24T14:29:24.5019993Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5020110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5020275Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5020422Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5020643Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5020777Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5020892Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5020896Z 
2025-01-24T14:29:24.5021111Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5021288Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5021371Z packets_mode = 'real'
2025-01-24T14:29:24.5021375Z 
2025-01-24T14:29:24.5021457Z     @classmethod
2025-01-24T14:29:24.5021569Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5021645Z         """
2025-01-24T14:29:24.5021843Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5021915Z     
2025-01-24T14:29:24.5021994Z         Parameters
2025-01-24T14:29:24.5022068Z         ----------
2025-01-24T14:29:24.5022176Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5022330Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5022430Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5022569Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5022645Z     
2025-01-24T14:29:24.5022837Z         Returns
2025-01-24T14:29:24.5022915Z         -------
2025-01-24T14:29:24.5023003Z         SimulationPacketData
2025-01-24T14:29:24.5023079Z         """
2025-01-24T14:29:24.5023187Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5023274Z             raise ValueError(
2025-01-24T14:29:24.5023391Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5023501Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5023578Z             )
2025-01-24T14:29:24.5023685Z         # Properties common among both packet modes
2025-01-24T14:29:24.5023850Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5023926Z             "line_id"
2025-01-24T14:29:24.5024002Z         )
2025-01-24T14:29:24.5024110Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5024238Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5024322Z         time_of_simulation = (
2025-01-24T14:29:24.5024485Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5024557Z         )
2025-01-24T14:29:24.5024633Z     
2025-01-24T14:29:24.5024711Z         spectrum = (
2025-01-24T14:29:24.5024830Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5024919Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5025042Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5025120Z         )
2025-01-24T14:29:24.5025190Z     
2025-01-24T14:29:24.5025285Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5025498Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5025583Z             return cls(
2025-01-24T14:29:24.5025749Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5025926Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5026103Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5026281Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5026432Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5026520Z                 lines_df=lines_df,
2025-01-24T14:29:24.5026646Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5026807Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5026941Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5027060Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5027252Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5027362Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5027469Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5027569Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5027654Z                 simulation=sim,
2025-01-24T14:29:24.5027726Z             )
2025-01-24T14:29:24.5027816Z         else: # real packets
2025-01-24T14:29:24.5027980Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5028066Z             # which got emitted
2025-01-24T14:29:24.5028174Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5028386Z >           return cls(
2025-01-24T14:29:24.5028568Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5028755Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5028836Z                     mask
2025-01-24T14:29:24.5028908Z                 ],
2025-01-24T14:29:24.5029103Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5029178Z                     mask
2025-01-24T14:29:24.5029407Z                 ],
2025-01-24T14:29:24.5029579Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5029661Z                     mask
2025-01-24T14:29:24.5029732Z                 ],
2025-01-24T14:29:24.5029905Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5029987Z                 lines_df=lines_df,
2025-01-24T14:29:24.5030155Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5030336Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5030414Z                     mask
2025-01-24T14:29:24.5030491Z                 ],
2025-01-24T14:29:24.5030619Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5030739Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5030924Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5031045Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5031149Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5031251Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5031331Z                 simulation=sim,
2025-01-24T14:29:24.5031409Z             )
2025-01-24T14:29:24.5031738Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5031749Z 
2025-01-24T14:29:24.5031923Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5032340Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-24T14:29:24.5032346Z 
2025-01-24T14:29:24.5032618Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5032838Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5033073Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5033077Z 
2025-01-24T14:29:24.5033173Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5033288Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5033365Z         """
2025-01-24T14:29:24.5033459Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5033530Z     
2025-01-24T14:29:24.5033612Z         Parameters
2025-01-24T14:29:24.5033687Z         ----------
2025-01-24T14:29:24.5033834Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5033920Z             Simulation object.
2025-01-24T14:29:24.5033995Z     
2025-01-24T14:29:24.5034067Z         Returns
2025-01-24T14:29:24.5034147Z         -------
2025-01-24T14:29:24.5034278Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5034355Z         """
2025-01-24T14:29:24.5034488Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5034495Z 
2025-01-24T14:29:24.5034647Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5034761Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5034927Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5035081Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5035292Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5035429Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5035543Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5035547Z 
2025-01-24T14:29:24.5035767Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5035934Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5036111Z packets_mode = 'real'
2025-01-24T14:29:24.5036115Z 
2025-01-24T14:29:24.5036190Z     @classmethod
2025-01-24T14:29:24.5036305Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5036376Z         """
2025-01-24T14:29:24.5036574Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5036650Z     
2025-01-24T14:29:24.5036726Z         Parameters
2025-01-24T14:29:24.5036807Z         ----------
2025-01-24T14:29:24.5036907Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5037059Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5037155Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5037298Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5037370Z     
2025-01-24T14:29:24.5037447Z         Returns
2025-01-24T14:29:24.5037521Z         -------
2025-01-24T14:29:24.5037613Z         SimulationPacketData
2025-01-24T14:29:24.5037688Z         """
2025-01-24T14:29:24.5037800Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5037883Z             raise ValueError(
2025-01-24T14:29:24.5038009Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5038120Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5038191Z             )
2025-01-24T14:29:24.5038414Z         # Properties common among both packet modes
2025-01-24T14:29:24.5038576Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5038655Z             "line_id"
2025-01-24T14:29:24.5038725Z         )
2025-01-24T14:29:24.5038956Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5039085Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5039174Z         time_of_simulation = (
2025-01-24T14:29:24.5039329Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5039404Z         )
2025-01-24T14:29:24.5039478Z     
2025-01-24T14:29:24.5039560Z         spectrum = (
2025-01-24T14:29:24.5039675Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5039769Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5039887Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5039963Z         )
2025-01-24T14:29:24.5040038Z     
2025-01-24T14:29:24.5040126Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5040255Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5040334Z             return cls(
2025-01-24T14:29:24.5040502Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5040677Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5040859Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5041025Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5041185Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5041274Z                 lines_df=lines_df,
2025-01-24T14:29:24.5041410Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5041575Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5041707Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5041828Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5042020Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5042135Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5042238Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5042339Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5042424Z                 simulation=sim,
2025-01-24T14:29:24.5042641Z             )
2025-01-24T14:29:24.5042725Z         else: # real packets
2025-01-24T14:29:24.5042896Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5042976Z             # which got emitted
2025-01-24T14:29:24.5043090Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5043171Z >           return cls(
2025-01-24T14:29:24.5043348Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5043538Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5043614Z                     mask
2025-01-24T14:29:24.5043694Z                 ],
2025-01-24T14:29:24.5043883Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5043962Z                     mask
2025-01-24T14:29:24.5044032Z                 ],
2025-01-24T14:29:24.5044205Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5044281Z                     mask
2025-01-24T14:29:24.5044360Z                 ],
2025-01-24T14:29:24.5044526Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5044613Z                 lines_df=lines_df,
2025-01-24T14:29:24.5044782Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5044957Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5045038Z                     mask
2025-01-24T14:29:24.5045109Z                 ],
2025-01-24T14:29:24.5045398Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5045519Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5045711Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5045820Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5045935Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5046038Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5046129Z                 simulation=sim,
2025-01-24T14:29:24.5046204Z             )
2025-01-24T14:29:24.5046541Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5046547Z 
2025-01-24T14:29:24.5046728Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5047002Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-24T14:29:24.5047009Z 
2025-01-24T14:29:24.5047281Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5047497Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5047738Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5047745Z 
2025-01-24T14:29:24.5047838Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5047961Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5048040Z         """
2025-01-24T14:29:24.5048132Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5048212Z     
2025-01-24T14:29:24.5048396Z         Parameters
2025-01-24T14:29:24.5048476Z         ----------
2025-01-24T14:29:24.5048622Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5048712Z             Simulation object.
2025-01-24T14:29:24.5048783Z     
2025-01-24T14:29:24.5048860Z         Returns
2025-01-24T14:29:24.5048937Z         -------
2025-01-24T14:29:24.5049077Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5049149Z         """
2025-01-24T14:29:24.5049292Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5049296Z 
2025-01-24T14:29:24.5049440Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5049686Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5049850Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5050003Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5050222Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5050359Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5050475Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5050479Z 
2025-01-24T14:29:24.5050697Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5050874Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5050958Z packets_mode = 'real'
2025-01-24T14:29:24.5050963Z 
2025-01-24T14:29:24.5051045Z     @classmethod
2025-01-24T14:29:24.5051159Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5051238Z         """
2025-01-24T14:29:24.5051440Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5051512Z     
2025-01-24T14:29:24.5051594Z         Parameters
2025-01-24T14:29:24.5051668Z         ----------
2025-01-24T14:29:24.5051773Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5051922Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5052021Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5052160Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5052350Z     
2025-01-24T14:29:24.5052427Z         Returns
2025-01-24T14:29:24.5052506Z         -------
2025-01-24T14:29:24.5052594Z         SimulationPacketData
2025-01-24T14:29:24.5052671Z         """
2025-01-24T14:29:24.5052780Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5052870Z             raise ValueError(
2025-01-24T14:29:24.5052993Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5053103Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5053181Z             )
2025-01-24T14:29:24.5053287Z         # Properties common among both packet modes
2025-01-24T14:29:24.5053455Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5053531Z             "line_id"
2025-01-24T14:29:24.5053607Z         )
2025-01-24T14:29:24.5053716Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5053846Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5053934Z         time_of_simulation = (
2025-01-24T14:29:24.5054096Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5054166Z         )
2025-01-24T14:29:24.5054243Z     
2025-01-24T14:29:24.5054322Z         spectrum = (
2025-01-24T14:29:24.5054445Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5054540Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5054665Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5054741Z         )
2025-01-24T14:29:24.5054814Z     
2025-01-24T14:29:24.5054916Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5055038Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5055122Z             return cls(
2025-01-24T14:29:24.5055282Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5055461Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5055643Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5055820Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5055971Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5056148Z                 lines_df=lines_df,
2025-01-24T14:29:24.5056277Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5056438Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5056574Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5056694Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5056886Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5056997Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5057109Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5057208Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5057296Z                 simulation=sim,
2025-01-24T14:29:24.5057369Z             )
2025-01-24T14:29:24.5057462Z         else: # real packets
2025-01-24T14:29:24.5057631Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5057722Z             # which got emitted
2025-01-24T14:29:24.5057835Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5057918Z >           return cls(
2025-01-24T14:29:24.5058100Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5058420Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5058507Z                     mask
2025-01-24T14:29:24.5058579Z                 ],
2025-01-24T14:29:24.5058892Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5058971Z                     mask
2025-01-24T14:29:24.5059048Z                 ],
2025-01-24T14:29:24.5059221Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5059301Z                     mask
2025-01-24T14:29:24.5059373Z                 ],
2025-01-24T14:29:24.5059548Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5059633Z                 lines_df=lines_df,
2025-01-24T14:29:24.5059804Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5059984Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5060059Z                     mask
2025-01-24T14:29:24.5060136Z                 ],
2025-01-24T14:29:24.5060269Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5060393Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5060584Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5060701Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5060806Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5060910Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5060995Z                 simulation=sim,
2025-01-24T14:29:24.5061072Z             )
2025-01-24T14:29:24.5061409Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5061419Z 
2025-01-24T14:29:24.5061590Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5061868Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-24T14:29:24.5061872Z 
2025-01-24T14:29:24.5062139Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5062366Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5062598Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5062603Z 
2025-01-24T14:29:24.5062703Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5062936Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5063017Z         """
2025-01-24T14:29:24.5063114Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5063186Z     
2025-01-24T14:29:24.5063267Z         Parameters
2025-01-24T14:29:24.5063341Z         ----------
2025-01-24T14:29:24.5063493Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5063577Z             Simulation object.
2025-01-24T14:29:24.5063651Z     
2025-01-24T14:29:24.5063723Z         Returns
2025-01-24T14:29:24.5063806Z         -------
2025-01-24T14:29:24.5063940Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5064019Z         """
2025-01-24T14:29:24.5064157Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5064161Z 
2025-01-24T14:29:24.5064310Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5064428Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5064602Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5064757Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5064970Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5065108Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5065219Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5065223Z 
2025-01-24T14:29:24.5065443Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5065696Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5065786Z packets_mode = 'real'
2025-01-24T14:29:24.5065790Z 
2025-01-24T14:29:24.5065867Z     @classmethod
2025-01-24T14:29:24.5065985Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5066056Z         """
2025-01-24T14:29:24.5066263Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5066366Z     
2025-01-24T14:29:24.5066443Z         Parameters
2025-01-24T14:29:24.5066524Z         ----------
2025-01-24T14:29:24.5066625Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5066779Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5066874Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5067022Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5067093Z     
2025-01-24T14:29:24.5067173Z         Returns
2025-01-24T14:29:24.5067248Z         -------
2025-01-24T14:29:24.5067344Z         SimulationPacketData
2025-01-24T14:29:24.5067417Z         """
2025-01-24T14:29:24.5067528Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5067612Z             raise ValueError(
2025-01-24T14:29:24.5067740Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5067851Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5067925Z             )
2025-01-24T14:29:24.5068037Z         # Properties common among both packet modes
2025-01-24T14:29:24.5068200Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5068400Z             "line_id"
2025-01-24T14:29:24.5068474Z         )
2025-01-24T14:29:24.5068587Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5068714Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5068803Z         time_of_simulation = (
2025-01-24T14:29:24.5068958Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5069038Z         )
2025-01-24T14:29:24.5069109Z     
2025-01-24T14:29:24.5069190Z         spectrum = (
2025-01-24T14:29:24.5069309Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5069403Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5069524Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5069739Z         )
2025-01-24T14:29:24.5069817Z     
2025-01-24T14:29:24.5069906Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5070035Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5070112Z             return cls(
2025-01-24T14:29:24.5070276Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5070450Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5070634Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5070804Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5070964Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5071048Z                 lines_df=lines_df,
2025-01-24T14:29:24.5071184Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5071350Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5071481Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5071605Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5071794Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5071908Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5072012Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5072113Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5072316Z                 simulation=sim,
2025-01-24T14:29:24.5072396Z             )
2025-01-24T14:29:24.5072480Z         else: # real packets
2025-01-24T14:29:24.5072653Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5072735Z             # which got emitted
2025-01-24T14:29:24.5072848Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5072933Z >           return cls(
2025-01-24T14:29:24.5073108Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5073298Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5073374Z                     mask
2025-01-24T14:29:24.5073453Z                 ],
2025-01-24T14:29:24.5073644Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5073724Z                     mask
2025-01-24T14:29:24.5073795Z                 ],
2025-01-24T14:29:24.5073973Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5074051Z                     mask
2025-01-24T14:29:24.5074128Z                 ],
2025-01-24T14:29:24.5074299Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5074387Z                 lines_df=lines_df,
2025-01-24T14:29:24.5074555Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5074742Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5074823Z                     mask
2025-01-24T14:29:24.5074895Z                 ],
2025-01-24T14:29:24.5075028Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5075144Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5075336Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5075449Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5075556Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5075653Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5075740Z                 simulation=sim,
2025-01-24T14:29:24.5075811Z             )
2025-01-24T14:29:24.5076154Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5076249Z 
2025-01-24T14:29:24.5076429Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5076706Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-24T14:29:24.5076711Z 
2025-01-24T14:29:24.5076981Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5077197Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5077436Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5077441Z 
2025-01-24T14:29:24.5077531Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5077650Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5077722Z         """
2025-01-24T14:29:24.5077816Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5077898Z     
2025-01-24T14:29:24.5077975Z         Parameters
2025-01-24T14:29:24.5078055Z         ----------
2025-01-24T14:29:24.5078200Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5078386Z             Simulation object.
2025-01-24T14:29:24.5078458Z     
2025-01-24T14:29:24.5078536Z         Returns
2025-01-24T14:29:24.5078609Z         -------
2025-01-24T14:29:24.5078746Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5078817Z         """
2025-01-24T14:29:24.5078958Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5078962Z 
2025-01-24T14:29:24.5079222Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5079352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5079516Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5079668Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5079894Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5080030Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5080146Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5080151Z 
2025-01-24T14:29:24.5080367Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5080539Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5080621Z packets_mode = 'real'
2025-01-24T14:29:24.5080625Z 
2025-01-24T14:29:24.5080709Z     @classmethod
2025-01-24T14:29:24.5080820Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5080897Z         """
2025-01-24T14:29:24.5081096Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5081166Z     
2025-01-24T14:29:24.5081247Z         Parameters
2025-01-24T14:29:24.5081326Z         ----------
2025-01-24T14:29:24.5081431Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5081579Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5081677Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5081818Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5081895Z     
2025-01-24T14:29:24.5081967Z         Returns
2025-01-24T14:29:24.5082044Z         -------
2025-01-24T14:29:24.5082131Z         SimulationPacketData
2025-01-24T14:29:24.5082208Z         """
2025-01-24T14:29:24.5082315Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5082408Z             raise ValueError(
2025-01-24T14:29:24.5082528Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5082637Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5082714Z             )
2025-01-24T14:29:24.5082822Z         # Properties common among both packet modes
2025-01-24T14:29:24.5083108Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5083186Z             "line_id"
2025-01-24T14:29:24.5083261Z         )
2025-01-24T14:29:24.5083370Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5083501Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5083586Z         time_of_simulation = (
2025-01-24T14:29:24.5083751Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5083823Z         )
2025-01-24T14:29:24.5083898Z     
2025-01-24T14:29:24.5083976Z         spectrum = (
2025-01-24T14:29:24.5084100Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5084190Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5084315Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5084392Z         )
2025-01-24T14:29:24.5084462Z     
2025-01-24T14:29:24.5084557Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5084686Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5084770Z             return cls(
2025-01-24T14:29:24.5084929Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5085108Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5085286Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5085458Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5085689Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5085782Z                 lines_df=lines_df,
2025-01-24T14:29:24.5085910Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5086072Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5086206Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5086326Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5086519Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5086629Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5086739Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5086837Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5086925Z                 simulation=sim,
2025-01-24T14:29:24.5086997Z             )
2025-01-24T14:29:24.5087085Z         else: # real packets
2025-01-24T14:29:24.5087254Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5087340Z             # which got emitted
2025-01-24T14:29:24.5087449Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5087535Z >           return cls(
2025-01-24T14:29:24.5087714Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5087900Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5087980Z                     mask
2025-01-24T14:29:24.5088052Z                 ],
2025-01-24T14:29:24.5088347Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5088426Z                     mask
2025-01-24T14:29:24.5088503Z                 ],
2025-01-24T14:29:24.5088674Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5088755Z                     mask
2025-01-24T14:29:24.5088830Z                 ],
2025-01-24T14:29:24.5089004Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5089086Z                 lines_df=lines_df,
2025-01-24T14:29:24.5089257Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5089559Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5089634Z                     mask
2025-01-24T14:29:24.5089711Z                 ],
2025-01-24T14:29:24.5089841Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5089961Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5090150Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5090264Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5090364Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5090471Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5090551Z                 simulation=sim,
2025-01-24T14:29:24.5090629Z             )
2025-01-24T14:29:24.5090963Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5090976Z 
2025-01-24T14:29:24.5091155Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5091436Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-24T14:29:24.5091441Z 
2025-01-24T14:29:24.5091708Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5091928Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5092161Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5092165Z 
2025-01-24T14:29:24.5092390Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5092511Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5092589Z         """
2025-01-24T14:29:24.5092684Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5092755Z     
2025-01-24T14:29:24.5092837Z         Parameters
2025-01-24T14:29:24.5092911Z         ----------
2025-01-24T14:29:24.5093064Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5093149Z             Simulation object.
2025-01-24T14:29:24.5093225Z     
2025-01-24T14:29:24.5093297Z         Returns
2025-01-24T14:29:24.5093376Z         -------
2025-01-24T14:29:24.5093508Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5093584Z         """
2025-01-24T14:29:24.5093718Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5093722Z 
2025-01-24T14:29:24.5093870Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5093991Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5094160Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5094310Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5094526Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5094669Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5094779Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5094783Z 
2025-01-24T14:29:24.5095075Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5095346Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5095438Z packets_mode = 'real'
2025-01-24T14:29:24.5095442Z 
2025-01-24T14:29:24.5095519Z     @classmethod
2025-01-24T14:29:24.5095637Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5095709Z         """
2025-01-24T14:29:24.5095919Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5095998Z     
2025-01-24T14:29:24.5096074Z         Parameters
2025-01-24T14:29:24.5096156Z         ----------
2025-01-24T14:29:24.5096257Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5096526Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5096620Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5096764Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5096835Z     
2025-01-24T14:29:24.5096912Z         Returns
2025-01-24T14:29:24.5096986Z         -------
2025-01-24T14:29:24.5097079Z         SimulationPacketData
2025-01-24T14:29:24.5097150Z         """
2025-01-24T14:29:24.5097265Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5097350Z             raise ValueError(
2025-01-24T14:29:24.5097480Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5097593Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5097665Z             )
2025-01-24T14:29:24.5097777Z         # Properties common among both packet modes
2025-01-24T14:29:24.5097938Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5098023Z             "line_id"
2025-01-24T14:29:24.5098095Z         )
2025-01-24T14:29:24.5098208Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5098459Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5098552Z         time_of_simulation = (
2025-01-24T14:29:24.5098712Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5098788Z         )
2025-01-24T14:29:24.5098859Z     
2025-01-24T14:29:24.5098941Z         spectrum = (
2025-01-24T14:29:24.5099060Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5099157Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5099397Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5099479Z         )
2025-01-24T14:29:24.5099557Z     
2025-01-24T14:29:24.5099647Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5099779Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5099860Z             return cls(
2025-01-24T14:29:24.5100026Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5100202Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5100387Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5100567Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5100726Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5100810Z                 lines_df=lines_df,
2025-01-24T14:29:24.5100948Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5101111Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5101242Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5101368Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5101559Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5101675Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5101781Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5101885Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5101971Z                 simulation=sim,
2025-01-24T14:29:24.5102050Z             )
2025-01-24T14:29:24.5102133Z         else: # real packets
2025-01-24T14:29:24.5102303Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5102387Z             # which got emitted
2025-01-24T14:29:24.5102504Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5102586Z >           return cls(
2025-01-24T14:29:24.5102762Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5102951Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5103147Z                     mask
2025-01-24T14:29:24.5103224Z                 ],
2025-01-24T14:29:24.5103417Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5103497Z                     mask
2025-01-24T14:29:24.5103570Z                 ],
2025-01-24T14:29:24.5103743Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5103818Z                     mask
2025-01-24T14:29:24.5103895Z                 ],
2025-01-24T14:29:24.5104063Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5104155Z                 lines_df=lines_df,
2025-01-24T14:29:24.5104321Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5104500Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5104581Z                     mask
2025-01-24T14:29:24.5104657Z                 ],
2025-01-24T14:29:24.5104793Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5104914Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5105108Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5105218Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5105327Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5105423Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5105521Z                 simulation=sim,
2025-01-24T14:29:24.5105709Z             )
2025-01-24T14:29:24.5106065Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5106069Z 
2025-01-24T14:29:24.5106248Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5106521Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-24T14:29:24.5106530Z 
2025-01-24T14:29:24.5106801Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5107018Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5107261Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5107266Z 
2025-01-24T14:29:24.5107357Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5107478Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5107553Z         """
2025-01-24T14:29:24.5107649Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5107725Z     
2025-01-24T14:29:24.5107802Z         Parameters
2025-01-24T14:29:24.5107880Z         ----------
2025-01-24T14:29:24.5108025Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5108114Z             Simulation object.
2025-01-24T14:29:24.5108189Z     
2025-01-24T14:29:24.5108422Z         Returns
2025-01-24T14:29:24.5108501Z         -------
2025-01-24T14:29:24.5108638Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5108711Z         """
2025-01-24T14:29:24.5108853Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5108857Z 
2025-01-24T14:29:24.5109001Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5109123Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5109284Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5109445Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5109665Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5109798Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5109913Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5110041Z 
2025-01-24T14:29:24.5110264Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5110437Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5110523Z packets_mode = 'real'
2025-01-24T14:29:24.5110528Z 
2025-01-24T14:29:24.5110609Z     @classmethod
2025-01-24T14:29:24.5110720Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5110798Z         """
2025-01-24T14:29:24.5110997Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5111068Z     
2025-01-24T14:29:24.5111152Z         Parameters
2025-01-24T14:29:24.5111228Z         ----------
2025-01-24T14:29:24.5111336Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5111487Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5111590Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5111734Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5111811Z     
2025-01-24T14:29:24.5111884Z         Returns
2025-01-24T14:29:24.5111963Z         -------
2025-01-24T14:29:24.5112053Z         SimulationPacketData
2025-01-24T14:29:24.5112130Z         """
2025-01-24T14:29:24.5112236Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5112328Z             raise ValueError(
2025-01-24T14:29:24.5112446Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5112555Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5112632Z             )
2025-01-24T14:29:24.5112855Z         # Properties common among both packet modes
2025-01-24T14:29:24.5113026Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5113101Z             "line_id"
2025-01-24T14:29:24.5113180Z         )
2025-01-24T14:29:24.5113288Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5113421Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5113507Z         time_of_simulation = (
2025-01-24T14:29:24.5113673Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5113749Z         )
2025-01-24T14:29:24.5113824Z     
2025-01-24T14:29:24.5113904Z         spectrum = (
2025-01-24T14:29:24.5114024Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5114114Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5114237Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5114315Z         )
2025-01-24T14:29:24.5114389Z     
2025-01-24T14:29:24.5114484Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5114608Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5114690Z             return cls(
2025-01-24T14:29:24.5114850Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5115032Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5115211Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5115384Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5115533Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5115625Z                 lines_df=lines_df,
2025-01-24T14:29:24.5115751Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5115915Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5116059Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5116175Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5116368Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5116567Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5116677Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5116774Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5116862Z                 simulation=sim,
2025-01-24T14:29:24.5116934Z             )
2025-01-24T14:29:24.5117021Z         else: # real packets
2025-01-24T14:29:24.5117204Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5117314Z             # which got emitted
2025-01-24T14:29:24.5117424Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5117511Z >           return cls(
2025-01-24T14:29:24.5117693Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5117879Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5117965Z                     mask
2025-01-24T14:29:24.5118038Z                 ],
2025-01-24T14:29:24.5118359Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5118436Z                     mask
2025-01-24T14:29:24.5118516Z                 ],
2025-01-24T14:29:24.5118685Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5118765Z                     mask
2025-01-24T14:29:24.5118836Z                 ],
2025-01-24T14:29:24.5119011Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5119094Z                 lines_df=lines_df,
2025-01-24T14:29:24.5119404Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5119588Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5119663Z                     mask
2025-01-24T14:29:24.5119739Z                 ],
2025-01-24T14:29:24.5119867Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5119992Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5120180Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5120293Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5120400Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5120498Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5120579Z                 simulation=sim,
2025-01-24T14:29:24.5120656Z             )
2025-01-24T14:29:24.5120994Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5121004Z 
2025-01-24T14:29:24.5121175Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5121456Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-24T14:29:24.5121461Z 
2025-01-24T14:29:24.5121728Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5121949Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5122180Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5122185Z 
2025-01-24T14:29:24.5122281Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5122398Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5122479Z         """
2025-01-24T14:29:24.5122574Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5122646Z     
2025-01-24T14:29:24.5122732Z         Parameters
2025-01-24T14:29:24.5122808Z         ----------
2025-01-24T14:29:24.5122955Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5123039Z             Simulation object.
2025-01-24T14:29:24.5123117Z     
2025-01-24T14:29:24.5123189Z         Returns
2025-01-24T14:29:24.5123268Z         -------
2025-01-24T14:29:24.5123518Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5123597Z         """
2025-01-24T14:29:24.5123732Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5123736Z 
2025-01-24T14:29:24.5123882Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5123996Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5124165Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5124318Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5124533Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5124673Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5124787Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5124791Z 
2025-01-24T14:29:24.5125013Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5125187Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5125275Z packets_mode = 'real'
2025-01-24T14:29:24.5125279Z 
2025-01-24T14:29:24.5125355Z     @classmethod
2025-01-24T14:29:24.5125471Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5125543Z         """
2025-01-24T14:29:24.5125743Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5125820Z     
2025-01-24T14:29:24.5125905Z         Parameters
2025-01-24T14:29:24.5125985Z         ----------
2025-01-24T14:29:24.5126165Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5126324Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5126417Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5126565Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5126636Z     
2025-01-24T14:29:24.5126725Z         Returns
2025-01-24T14:29:24.5126803Z         -------
2025-01-24T14:29:24.5126898Z         SimulationPacketData
2025-01-24T14:29:24.5126972Z         """
2025-01-24T14:29:24.5127088Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5127173Z             raise ValueError(
2025-01-24T14:29:24.5127296Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5127407Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5127480Z             )
2025-01-24T14:29:24.5127594Z         # Properties common among both packet modes
2025-01-24T14:29:24.5127759Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5127841Z             "line_id"
2025-01-24T14:29:24.5127914Z         )
2025-01-24T14:29:24.5128027Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5128153Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5128345Z         time_of_simulation = (
2025-01-24T14:29:24.5128512Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5128589Z         )
2025-01-24T14:29:24.5128660Z     
2025-01-24T14:29:24.5128744Z         spectrum = (
2025-01-24T14:29:24.5128865Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5128962Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5129080Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5129158Z         )
2025-01-24T14:29:24.5129234Z     
2025-01-24T14:29:24.5129325Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5129487Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5129566Z             return cls(
2025-01-24T14:29:24.5129730Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5129904Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5130089Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5130381Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5130540Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5130625Z                 lines_df=lines_df,
2025-01-24T14:29:24.5130758Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5130917Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5131049Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5131175Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5131365Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5131486Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5131592Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5131700Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5131784Z                 simulation=sim,
2025-01-24T14:29:24.5131863Z             )
2025-01-24T14:29:24.5131947Z         else: # real packets
2025-01-24T14:29:24.5132121Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5132202Z             # which got emitted
2025-01-24T14:29:24.5132317Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5132401Z >           return cls(
2025-01-24T14:29:24.5132580Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5132887Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5132968Z                     mask
2025-01-24T14:29:24.5133046Z                 ],
2025-01-24T14:29:24.5133236Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5133321Z                     mask
2025-01-24T14:29:24.5133394Z                 ],
2025-01-24T14:29:24.5133568Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5133643Z                     mask
2025-01-24T14:29:24.5133721Z                 ],
2025-01-24T14:29:24.5133888Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5133977Z                 lines_df=lines_df,
2025-01-24T14:29:24.5134142Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5134324Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5144988Z                     mask
2025-01-24T14:29:24.5145090Z                 ],
2025-01-24T14:29:24.5145257Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5145387Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5145599Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5145724Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5145836Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5145946Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5146033Z                 simulation=sim,
2025-01-24T14:29:24.5146111Z             )
2025-01-24T14:29:24.5146459Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5146466Z 
2025-01-24T14:29:24.5146656Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5146936Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-24T14:29:24.5146941Z 
2025-01-24T14:29:24.5147219Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5147446Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5147851Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5147857Z 
2025-01-24T14:29:24.5147957Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5148077Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5148156Z         """
2025-01-24T14:29:24.5148369Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5148448Z     
2025-01-24T14:29:24.5148528Z         Parameters
2025-01-24T14:29:24.5148610Z         ----------
2025-01-24T14:29:24.5148772Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5148863Z             Simulation object.
2025-01-24T14:29:24.5148933Z     
2025-01-24T14:29:24.5149012Z         Returns
2025-01-24T14:29:24.5149086Z         -------
2025-01-24T14:29:24.5149227Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5149299Z         """
2025-01-24T14:29:24.5149444Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5149449Z 
2025-01-24T14:29:24.5149603Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5149720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5149889Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5150041Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5150263Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5150397Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5150634Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5150640Z 
2025-01-24T14:29:24.5150858Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5151037Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5151131Z packets_mode = 'real'
2025-01-24T14:29:24.5151136Z 
2025-01-24T14:29:24.5151212Z     @classmethod
2025-01-24T14:29:24.5151329Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5151401Z         """
2025-01-24T14:29:24.5151610Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5151681Z     
2025-01-24T14:29:24.5151762Z         Parameters
2025-01-24T14:29:24.5151837Z         ----------
2025-01-24T14:29:24.5151950Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5152105Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5152209Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5152354Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5152431Z     
2025-01-24T14:29:24.5152510Z         Returns
2025-01-24T14:29:24.5152586Z         -------
2025-01-24T14:29:24.5152684Z         SimulationPacketData
2025-01-24T14:29:24.5152759Z         """
2025-01-24T14:29:24.5152872Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5152956Z             raise ValueError(
2025-01-24T14:29:24.5153083Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5153190Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5153267Z             )
2025-01-24T14:29:24.5153376Z         # Properties common among both packet modes
2025-01-24T14:29:24.5153545Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5153621Z             "line_id"
2025-01-24T14:29:24.5153699Z         )
2025-01-24T14:29:24.5153812Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5153944Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5154031Z         time_of_simulation = (
2025-01-24T14:29:24.5154198Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5154274Z         )
2025-01-24T14:29:24.5154485Z     
2025-01-24T14:29:24.5154569Z         spectrum = (
2025-01-24T14:29:24.5154693Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5154792Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5154913Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5154992Z         )
2025-01-24T14:29:24.5155062Z     
2025-01-24T14:29:24.5155158Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5155284Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5155366Z             return cls(
2025-01-24T14:29:24.5155531Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5155710Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5155890Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5156064Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5156225Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5156318Z                 lines_df=lines_df,
2025-01-24T14:29:24.5156449Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5156608Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5156739Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5156862Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5157137Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5157256Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5157364Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5157467Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5157549Z                 simulation=sim,
2025-01-24T14:29:24.5157630Z             )
2025-01-24T14:29:24.5157713Z         else: # real packets
2025-01-24T14:29:24.5157885Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5157970Z             # which got emitted
2025-01-24T14:29:24.5158078Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5158159Z >           return cls(
2025-01-24T14:29:24.5158442Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5158632Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5158708Z                     mask
2025-01-24T14:29:24.5158790Z                 ],
2025-01-24T14:29:24.5158980Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5159061Z                     mask
2025-01-24T14:29:24.5159133Z                 ],
2025-01-24T14:29:24.5159306Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5159382Z                     mask
2025-01-24T14:29:24.5159460Z                 ],
2025-01-24T14:29:24.5159633Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5159718Z                 lines_df=lines_df,
2025-01-24T14:29:24.5159887Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5160058Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5160137Z                     mask
2025-01-24T14:29:24.5160209Z                 ],
2025-01-24T14:29:24.5160346Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5160464Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5160654Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5160764Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5160993Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5161089Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5161177Z                 simulation=sim,
2025-01-24T14:29:24.5161253Z             )
2025-01-24T14:29:24.5161594Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5161599Z 
2025-01-24T14:29:24.5161781Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5162061Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-24T14:29:24.5162069Z 
2025-01-24T14:29:24.5162345Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5162560Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5162802Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5162810Z 
2025-01-24T14:29:24.5162909Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5163027Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5163104Z         """
2025-01-24T14:29:24.5163194Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5163276Z     
2025-01-24T14:29:24.5163356Z         Parameters
2025-01-24T14:29:24.5163438Z         ----------
2025-01-24T14:29:24.5163586Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5163678Z             Simulation object.
2025-01-24T14:29:24.5163748Z     
2025-01-24T14:29:24.5163829Z         Returns
2025-01-24T14:29:24.5164017Z         -------
2025-01-24T14:29:24.5164163Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5164238Z         """
2025-01-24T14:29:24.5164377Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5164381Z 
2025-01-24T14:29:24.5164532Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5164654Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5164824Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5164974Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5165195Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5165330Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5165446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5165450Z 
2025-01-24T14:29:24.5165670Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5165847Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5165931Z packets_mode = 'real'
2025-01-24T14:29:24.5165940Z 
2025-01-24T14:29:24.5166015Z     @classmethod
2025-01-24T14:29:24.5166143Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5166213Z         """
2025-01-24T14:29:24.5166415Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5166486Z     
2025-01-24T14:29:24.5166566Z         Parameters
2025-01-24T14:29:24.5166641Z         ----------
2025-01-24T14:29:24.5166745Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5166898Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5166998Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5167139Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5167217Z     
2025-01-24T14:29:24.5167290Z         Returns
2025-01-24T14:29:24.5167368Z         -------
2025-01-24T14:29:24.5167455Z         SimulationPacketData
2025-01-24T14:29:24.5167532Z         """
2025-01-24T14:29:24.5167639Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5167822Z             raise ValueError(
2025-01-24T14:29:24.5167944Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5168047Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5168124Z             )
2025-01-24T14:29:24.5168335Z         # Properties common among both packet modes
2025-01-24T14:29:24.5168502Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5168576Z             "line_id"
2025-01-24T14:29:24.5168652Z         )
2025-01-24T14:29:24.5168760Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5168888Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5168977Z         time_of_simulation = (
2025-01-24T14:29:24.5169139Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5169209Z         )
2025-01-24T14:29:24.5169284Z     
2025-01-24T14:29:24.5169361Z         spectrum = (
2025-01-24T14:29:24.5169484Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5169583Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5169703Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5169779Z         )
2025-01-24T14:29:24.5169848Z     
2025-01-24T14:29:24.5169944Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5170068Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5170149Z             return cls(
2025-01-24T14:29:24.5170306Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5170599Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5170782Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5170955Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5171104Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5171201Z                 lines_df=lines_df,
2025-01-24T14:29:24.5171335Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5171491Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5171629Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5171749Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5171942Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5172050Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5172164Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5172261Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5172350Z                 simulation=sim,
2025-01-24T14:29:24.5172422Z             )
2025-01-24T14:29:24.5172511Z         else: # real packets
2025-01-24T14:29:24.5172683Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5172769Z             # which got emitted
2025-01-24T14:29:24.5172881Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5172957Z >           return cls(
2025-01-24T14:29:24.5173141Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5173325Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5173406Z                     mask
2025-01-24T14:29:24.5173478Z                 ],
2025-01-24T14:29:24.5173678Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5173753Z                     mask
2025-01-24T14:29:24.5173829Z                 ],
2025-01-24T14:29:24.5173996Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5174077Z                     mask
2025-01-24T14:29:24.5174148Z                 ],
2025-01-24T14:29:24.5174460Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5174548Z                 lines_df=lines_df,
2025-01-24T14:29:24.5174712Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5174889Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5174963Z                     mask
2025-01-24T14:29:24.5175040Z                 ],
2025-01-24T14:29:24.5175168Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5175290Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5175479Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5175593Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5175694Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5175799Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5175887Z                 simulation=sim,
2025-01-24T14:29:24.5175966Z             )
2025-01-24T14:29:24.5176308Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5176314Z 
2025-01-24T14:29:24.5176485Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5176716Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] _
2025-01-24T14:29:24.5176721Z 
2025-01-24T14:29:24.5176988Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5177289Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5177528Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5177538Z 
2025-01-24T14:29:24.5177628Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5177750Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5177822Z         """
2025-01-24T14:29:24.5177918Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5177988Z     
2025-01-24T14:29:24.5178068Z         Parameters
2025-01-24T14:29:24.5178144Z         ----------
2025-01-24T14:29:24.5178396Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5178481Z             Simulation object.
2025-01-24T14:29:24.5178556Z     
2025-01-24T14:29:24.5178628Z         Returns
2025-01-24T14:29:24.5178706Z         -------
2025-01-24T14:29:24.5178836Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5178917Z         """
2025-01-24T14:29:24.5179050Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5179054Z 
2025-01-24T14:29:24.5179201Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5179322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5179488Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5179641Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5179866Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5180015Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5180131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5180135Z 
2025-01-24T14:29:24.5180353Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5180533Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5180617Z packets_mode = 'real'
2025-01-24T14:29:24.5180621Z 
2025-01-24T14:29:24.5180702Z     @classmethod
2025-01-24T14:29:24.5180816Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5180893Z         """
2025-01-24T14:29:24.5181087Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5181304Z     
2025-01-24T14:29:24.5181386Z         Parameters
2025-01-24T14:29:24.5181460Z         ----------
2025-01-24T14:29:24.5181566Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5181716Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5181814Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5181953Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5182031Z     
2025-01-24T14:29:24.5182103Z         Returns
2025-01-24T14:29:24.5182181Z         -------
2025-01-24T14:29:24.5182272Z         SimulationPacketData
2025-01-24T14:29:24.5182349Z         """
2025-01-24T14:29:24.5182456Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5182546Z             raise ValueError(
2025-01-24T14:29:24.5182665Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5182774Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5182853Z             )
2025-01-24T14:29:24.5182961Z         # Properties common among both packet modes
2025-01-24T14:29:24.5183127Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5183204Z             "line_id"
2025-01-24T14:29:24.5183280Z         )
2025-01-24T14:29:24.5183388Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5183518Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5183603Z         time_of_simulation = (
2025-01-24T14:29:24.5183763Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5183946Z         )
2025-01-24T14:29:24.5184025Z     
2025-01-24T14:29:24.5184103Z         spectrum = (
2025-01-24T14:29:24.5184221Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5184312Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5184433Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5184507Z         )
2025-01-24T14:29:24.5184582Z     
2025-01-24T14:29:24.5184676Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5184798Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5184886Z             return cls(
2025-01-24T14:29:24.5185045Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5185225Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5185403Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5185579Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5185733Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5185821Z                 lines_df=lines_df,
2025-01-24T14:29:24.5185949Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5186111Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5186245Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5186362Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5186555Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5186665Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5186774Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5186873Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5186965Z                 simulation=sim,
2025-01-24T14:29:24.5187037Z             )
2025-01-24T14:29:24.5187124Z         else: # real packets
2025-01-24T14:29:24.5187289Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5187376Z             # which got emitted
2025-01-24T14:29:24.5187484Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5187658Z >           return cls(
2025-01-24T14:29:24.5187837Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5188022Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5188103Z                     mask
2025-01-24T14:29:24.5188174Z                 ],
2025-01-24T14:29:24.5188505Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5188580Z                     mask
2025-01-24T14:29:24.5188656Z                 ],
2025-01-24T14:29:24.5188826Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5188906Z                     mask
2025-01-24T14:29:24.5188977Z                 ],
2025-01-24T14:29:24.5189150Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5189232Z                 lines_df=lines_df,
2025-01-24T14:29:24.5189403Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5189581Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5189654Z                     mask
2025-01-24T14:29:24.5189729Z                 ],
2025-01-24T14:29:24.5189855Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5189976Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5190164Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5190397Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5190502Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5190602Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5190682Z                 simulation=sim,
2025-01-24T14:29:24.5190758Z             )
2025-01-24T14:29:24.5191095Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5191107Z 
2025-01-24T14:29:24.5191280Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5191513Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] _
2025-01-24T14:29:24.5191517Z 
2025-01-24T14:29:24.5191784Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5192001Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5192241Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5192246Z 
2025-01-24T14:29:24.5192340Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5192454Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5192532Z         """
2025-01-24T14:29:24.5192623Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5192702Z     
2025-01-24T14:29:24.5192782Z         Parameters
2025-01-24T14:29:24.5192857Z         ----------
2025-01-24T14:29:24.5193004Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5193088Z             Simulation object.
2025-01-24T14:29:24.5193163Z     
2025-01-24T14:29:24.5193235Z         Returns
2025-01-24T14:29:24.5193313Z         -------
2025-01-24T14:29:24.5193441Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5193516Z         """
2025-01-24T14:29:24.5193648Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5193653Z 
2025-01-24T14:29:24.5193804Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5193917Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5194084Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5194231Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5194572Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5194711Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5194818Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5194822Z 
2025-01-24T14:29:24.5195039Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5195208Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5195295Z packets_mode = 'real'
2025-01-24T14:29:24.5195299Z 
2025-01-24T14:29:24.5195377Z     @classmethod
2025-01-24T14:29:24.5195496Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5195568Z         """
2025-01-24T14:29:24.5195764Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5195841Z     
2025-01-24T14:29:24.5195918Z         Parameters
2025-01-24T14:29:24.5196002Z         ----------
2025-01-24T14:29:24.5196102Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5196255Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5196348Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5196493Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5196564Z     
2025-01-24T14:29:24.5196641Z         Returns
2025-01-24T14:29:24.5196715Z         -------
2025-01-24T14:29:24.5196807Z         SimulationPacketData
2025-01-24T14:29:24.5196879Z         """
2025-01-24T14:29:24.5196990Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5197160Z             raise ValueError(
2025-01-24T14:29:24.5197286Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5197388Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5197463Z             )
2025-01-24T14:29:24.5197574Z         # Properties common among both packet modes
2025-01-24T14:29:24.5197739Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5197818Z             "line_id"
2025-01-24T14:29:24.5197888Z         )
2025-01-24T14:29:24.5198000Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5198126Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5198213Z         time_of_simulation = (
2025-01-24T14:29:24.5198468Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5198546Z         )
2025-01-24T14:29:24.5198615Z     
2025-01-24T14:29:24.5198697Z         spectrum = (
2025-01-24T14:29:24.5198814Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5198910Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5199026Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5199102Z         )
2025-01-24T14:29:24.5199172Z     
2025-01-24T14:29:24.5199266Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5199397Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5199474Z             return cls(
2025-01-24T14:29:24.5199636Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5199807Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5199989Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5200155Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5200314Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5200399Z                 lines_df=lines_df,
2025-01-24T14:29:24.5200532Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5200688Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5200821Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5201066Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5201251Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5201365Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5201472Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5201573Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5201655Z                 simulation=sim,
2025-01-24T14:29:24.5201731Z             )
2025-01-24T14:29:24.5201814Z         else: # real packets
2025-01-24T14:29:24.5201988Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5202069Z             # which got emitted
2025-01-24T14:29:24.5202182Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5202258Z >           return cls(
2025-01-24T14:29:24.5202437Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5202630Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5202706Z                     mask
2025-01-24T14:29:24.5202782Z                 ],
2025-01-24T14:29:24.5202970Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5203049Z                     mask
2025-01-24T14:29:24.5203120Z                 ],
2025-01-24T14:29:24.5203294Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5203368Z                     mask
2025-01-24T14:29:24.5203574Z                 ],
2025-01-24T14:29:24.5203745Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5203833Z                 lines_df=lines_df,
2025-01-24T14:29:24.5203998Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5204181Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5204263Z                     mask
2025-01-24T14:29:24.5204333Z                 ],
2025-01-24T14:29:24.5204466Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5204581Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5204774Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5204882Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5204986Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5205084Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5205171Z                 simulation=sim,
2025-01-24T14:29:24.5205241Z             )
2025-01-24T14:29:24.5205581Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5205589Z 
2025-01-24T14:29:24.5205764Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5205990Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] _
2025-01-24T14:29:24.5205995Z 
2025-01-24T14:29:24.5206267Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5206488Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5206727Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5206733Z 
2025-01-24T14:29:24.5206826Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5206946Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5207019Z         """
2025-01-24T14:29:24.5207114Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5207184Z     
2025-01-24T14:29:24.5207265Z         Parameters
2025-01-24T14:29:24.5207348Z         ----------
2025-01-24T14:29:24.5207580Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5207666Z             Simulation object.
2025-01-24T14:29:24.5207736Z     
2025-01-24T14:29:24.5207813Z         Returns
2025-01-24T14:29:24.5207886Z         -------
2025-01-24T14:29:24.5208020Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5208090Z         """
2025-01-24T14:29:24.5208329Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5208335Z 
2025-01-24T14:29:24.5208480Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5208600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5208765Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5208920Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5209142Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5209281Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5209395Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5209399Z 
2025-01-24T14:29:24.5209612Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5209785Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5209868Z packets_mode = 'real'
2025-01-24T14:29:24.5209872Z 
2025-01-24T14:29:24.5209954Z     @classmethod
2025-01-24T14:29:24.5210066Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5210142Z         """
2025-01-24T14:29:24.5210453Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5210533Z     
2025-01-24T14:29:24.5210614Z         Parameters
2025-01-24T14:29:24.5210689Z         ----------
2025-01-24T14:29:24.5210795Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5210945Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5211047Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5211185Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5211262Z     
2025-01-24T14:29:24.5211335Z         Returns
2025-01-24T14:29:24.5211412Z         -------
2025-01-24T14:29:24.5211500Z         SimulationPacketData
2025-01-24T14:29:24.5211576Z         """
2025-01-24T14:29:24.5211683Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5211773Z             raise ValueError(
2025-01-24T14:29:24.5211889Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5212001Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5212073Z             )
2025-01-24T14:29:24.5212185Z         # Properties common among both packet modes
2025-01-24T14:29:24.5212349Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5212424Z             "line_id"
2025-01-24T14:29:24.5212503Z         )
2025-01-24T14:29:24.5212611Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5212738Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5212823Z         time_of_simulation = (
2025-01-24T14:29:24.5212980Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5213053Z         )
2025-01-24T14:29:24.5213129Z     
2025-01-24T14:29:24.5213207Z         spectrum = (
2025-01-24T14:29:24.5213327Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5213419Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5213543Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5213615Z         )
2025-01-24T14:29:24.5213689Z     
2025-01-24T14:29:24.5213784Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5213907Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5213988Z             return cls(
2025-01-24T14:29:24.5214268Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5214445Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5214620Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5214793Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5214944Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5215035Z                 lines_df=lines_df,
2025-01-24T14:29:24.5215164Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5215324Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5215458Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5215576Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5215773Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5215883Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5215990Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5216089Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5216185Z                 simulation=sim,
2025-01-24T14:29:24.5216256Z             )
2025-01-24T14:29:24.5216343Z         else: # real packets
2025-01-24T14:29:24.5216510Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5216596Z             # which got emitted
2025-01-24T14:29:24.5216786Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5216871Z >           return cls(
2025-01-24T14:29:24.5217045Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5217236Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5217319Z                     mask
2025-01-24T14:29:24.5217390Z                 ],
2025-01-24T14:29:24.5217585Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5217659Z                     mask
2025-01-24T14:29:24.5217737Z                 ],
2025-01-24T14:29:24.5217903Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5217981Z                     mask
2025-01-24T14:29:24.5218052Z                 ],
2025-01-24T14:29:24.5218348Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5218437Z                 lines_df=lines_df,
2025-01-24T14:29:24.5218604Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5218776Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5218855Z                     mask
2025-01-24T14:29:24.5218935Z                 ],
2025-01-24T14:29:24.5219062Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5219183Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5219368Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5219479Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5219578Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5219680Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5219761Z                 simulation=sim,
2025-01-24T14:29:24.5219837Z             )
2025-01-24T14:29:24.5220170Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5220175Z 
2025-01-24T14:29:24.5220353Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5220584Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] _
2025-01-24T14:29:24.5220713Z 
2025-01-24T14:29:24.5220981Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5221201Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5221432Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5221436Z 
2025-01-24T14:29:24.5221532Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5221646Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5221722Z         """
2025-01-24T14:29:24.5221815Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5221894Z     
2025-01-24T14:29:24.5221978Z         Parameters
2025-01-24T14:29:24.5222053Z         ----------
2025-01-24T14:29:24.5222199Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5222282Z             Simulation object.
2025-01-24T14:29:24.5222362Z     
2025-01-24T14:29:24.5222433Z         Returns
2025-01-24T14:29:24.5222512Z         -------
2025-01-24T14:29:24.5222641Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5222719Z         """
2025-01-24T14:29:24.5222852Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5222856Z 
2025-01-24T14:29:24.5223002Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5223114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5223281Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5223543Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5223761Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5223898Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5224007Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5224015Z 
2025-01-24T14:29:24.5224232Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5224399Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5224486Z packets_mode = 'real'
2025-01-24T14:29:24.5224490Z 
2025-01-24T14:29:24.5224565Z     @classmethod
2025-01-24T14:29:24.5224679Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5224750Z         """
2025-01-24T14:29:24.5224948Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5225019Z     
2025-01-24T14:29:24.5225106Z         Parameters
2025-01-24T14:29:24.5225187Z         ----------
2025-01-24T14:29:24.5225287Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5225440Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5225534Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5225677Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5225750Z     
2025-01-24T14:29:24.5225827Z         Returns
2025-01-24T14:29:24.5225901Z         -------
2025-01-24T14:29:24.5225992Z         SimulationPacketData
2025-01-24T14:29:24.5226065Z         """
2025-01-24T14:29:24.5226176Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5226258Z             raise ValueError(
2025-01-24T14:29:24.5226381Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5226482Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5226558Z             )
2025-01-24T14:29:24.5226672Z         # Properties common among both packet modes
2025-01-24T14:29:24.5226833Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5226913Z             "line_id"
2025-01-24T14:29:24.5226984Z         )
2025-01-24T14:29:24.5227096Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5227308Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5227397Z         time_of_simulation = (
2025-01-24T14:29:24.5227552Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5227627Z         )
2025-01-24T14:29:24.5227696Z     
2025-01-24T14:29:24.5227777Z         spectrum = (
2025-01-24T14:29:24.5227892Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5227990Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5228107Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5228183Z         )
2025-01-24T14:29:24.5228371Z     
2025-01-24T14:29:24.5228470Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5228597Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5228674Z             return cls(
2025-01-24T14:29:24.5228836Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5229006Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5229190Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5229358Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5229547Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5229630Z                 lines_df=lines_df,
2025-01-24T14:29:24.5229762Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5229916Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5230186Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5230316Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5230502Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5230614Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5230719Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5230820Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5230903Z                 simulation=sim,
2025-01-24T14:29:24.5230978Z             )
2025-01-24T14:29:24.5231059Z         else: # real packets
2025-01-24T14:29:24.5231229Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5231312Z             # which got emitted
2025-01-24T14:29:24.5231425Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5231501Z >           return cls(
2025-01-24T14:29:24.5231684Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5231870Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5231945Z                     mask
2025-01-24T14:29:24.5232022Z                 ],
2025-01-24T14:29:24.5232213Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5232294Z                     mask
2025-01-24T14:29:24.5232365Z                 ],
2025-01-24T14:29:24.5232536Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5232610Z                     mask
2025-01-24T14:29:24.5232687Z                 ],
2025-01-24T14:29:24.5232851Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5232939Z                 lines_df=lines_df,
2025-01-24T14:29:24.5233099Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5233280Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5233361Z                     mask
2025-01-24T14:29:24.5233432Z                 ],
2025-01-24T14:29:24.5233566Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5233681Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5233992Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5234103Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5234210Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5234305Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5234389Z                 simulation=sim,
2025-01-24T14:29:24.5234460Z             )
2025-01-24T14:29:24.5234797Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5234805Z 
2025-01-24T14:29:24.5234983Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5235209Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] _
2025-01-24T14:29:24.5235213Z 
2025-01-24T14:29:24.5235487Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5235700Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5235939Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5235944Z 
2025-01-24T14:29:24.5236034Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5236151Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5236222Z         """
2025-01-24T14:29:24.5236318Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5236389Z     
2025-01-24T14:29:24.5236469Z         Parameters
2025-01-24T14:29:24.5236645Z         ----------
2025-01-24T14:29:24.5236791Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5236879Z             Simulation object.
2025-01-24T14:29:24.5236949Z     
2025-01-24T14:29:24.5237026Z         Returns
2025-01-24T14:29:24.5237100Z         -------
2025-01-24T14:29:24.5237233Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5237308Z         """
2025-01-24T14:29:24.5237448Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5237452Z 
2025-01-24T14:29:24.5237593Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5237710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5237870Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5238023Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5238341Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5238478Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5238592Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5238596Z 
2025-01-24T14:29:24.5238808Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5238983Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5239065Z packets_mode = 'real'
2025-01-24T14:29:24.5239070Z 
2025-01-24T14:29:24.5239150Z     @classmethod
2025-01-24T14:29:24.5239261Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5239336Z         """
2025-01-24T14:29:24.5239529Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5239605Z     
2025-01-24T14:29:24.5239685Z         Parameters
2025-01-24T14:29:24.5239760Z         ----------
2025-01-24T14:29:24.5239864Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5240016Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5240114Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5240255Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5240334Z     
2025-01-24T14:29:24.5240406Z         Returns
2025-01-24T14:29:24.5240605Z         -------
2025-01-24T14:29:24.5240692Z         SimulationPacketData
2025-01-24T14:29:24.5240769Z         """
2025-01-24T14:29:24.5240875Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5240965Z             raise ValueError(
2025-01-24T14:29:24.5241082Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5241193Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5241264Z             )
2025-01-24T14:29:24.5241375Z         # Properties common among both packet modes
2025-01-24T14:29:24.5241541Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5241619Z             "line_id"
2025-01-24T14:29:24.5241699Z         )
2025-01-24T14:29:24.5241808Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5241938Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5242023Z         time_of_simulation = (
2025-01-24T14:29:24.5242187Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5242261Z         )
2025-01-24T14:29:24.5242336Z     
2025-01-24T14:29:24.5242413Z         spectrum = (
2025-01-24T14:29:24.5242533Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5242622Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5242745Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5242815Z         )
2025-01-24T14:29:24.5242890Z     
2025-01-24T14:29:24.5242980Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5243108Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5243303Z             return cls(
2025-01-24T14:29:24.5243463Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5243639Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5243818Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5243992Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5244142Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5244230Z                 lines_df=lines_df,
2025-01-24T14:29:24.5244356Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5244516Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5244644Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5244768Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5244959Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5245067Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5245173Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5245270Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5245360Z                 simulation=sim,
2025-01-24T14:29:24.5245431Z             )
2025-01-24T14:29:24.5245517Z         else: # real packets
2025-01-24T14:29:24.5245683Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5245769Z             # which got emitted
2025-01-24T14:29:24.5245876Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5245963Z >           return cls(
2025-01-24T14:29:24.5246135Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5246326Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5246408Z                     mask
2025-01-24T14:29:24.5246479Z                 ],
2025-01-24T14:29:24.5246671Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5246746Z                     mask
2025-01-24T14:29:24.5246911Z                 ],
2025-01-24T14:29:24.5247078Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5247157Z                     mask
2025-01-24T14:29:24.5247228Z                 ],
2025-01-24T14:29:24.5247398Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5247480Z                 lines_df=lines_df,
2025-01-24T14:29:24.5247645Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5247818Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5247897Z                     mask
2025-01-24T14:29:24.5247976Z                 ],
2025-01-24T14:29:24.5248105Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5248322Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5248512Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5248632Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5248739Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5248845Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5248926Z                 simulation=sim,
2025-01-24T14:29:24.5249001Z             )
2025-01-24T14:29:24.5249336Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5249341Z 
2025-01-24T14:29:24.5249516Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5249863Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] _
2025-01-24T14:29:24.5249869Z 
2025-01-24T14:29:24.5250138Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5250358Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5250592Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5250597Z 
2025-01-24T14:29:24.5250693Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5250810Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5250888Z         """
2025-01-24T14:29:24.5250978Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5251052Z     
2025-01-24T14:29:24.5251128Z         Parameters
2025-01-24T14:29:24.5251206Z         ----------
2025-01-24T14:29:24.5251356Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5251443Z             Simulation object.
2025-01-24T14:29:24.5251518Z     
2025-01-24T14:29:24.5251590Z         Returns
2025-01-24T14:29:24.5251667Z         -------
2025-01-24T14:29:24.5251801Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5251878Z         """
2025-01-24T14:29:24.5252010Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5252017Z 
2025-01-24T14:29:24.5252165Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5252281Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5252448Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5252597Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5252815Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5252954Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5253065Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5253070Z 
2025-01-24T14:29:24.5253288Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5253456Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5253543Z packets_mode = 'real'
2025-01-24T14:29:24.5253684Z 
2025-01-24T14:29:24.5253761Z     @classmethod
2025-01-24T14:29:24.5253876Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5253947Z         """
2025-01-24T14:29:24.5254148Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5254217Z     
2025-01-24T14:29:24.5254297Z         Parameters
2025-01-24T14:29:24.5254375Z         ----------
2025-01-24T14:29:24.5254475Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5254632Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5254728Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5254875Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5254947Z     
2025-01-24T14:29:24.5255026Z         Returns
2025-01-24T14:29:24.5255101Z         -------
2025-01-24T14:29:24.5255195Z         SimulationPacketData
2025-01-24T14:29:24.5255265Z         """
2025-01-24T14:29:24.5255383Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5255465Z             raise ValueError(
2025-01-24T14:29:24.5255588Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5255690Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5255765Z             )
2025-01-24T14:29:24.5255873Z         # Properties common among both packet modes
2025-01-24T14:29:24.5256038Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5256117Z             "line_id"
2025-01-24T14:29:24.5256189Z         )
2025-01-24T14:29:24.5256301Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5256508Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5256601Z         time_of_simulation = (
2025-01-24T14:29:24.5256756Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5256833Z         )
2025-01-24T14:29:24.5256903Z     
2025-01-24T14:29:24.5256988Z         spectrum = (
2025-01-24T14:29:24.5257104Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5257199Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5257315Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5257390Z         )
2025-01-24T14:29:24.5257459Z     
2025-01-24T14:29:24.5257553Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5257682Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5257759Z             return cls(
2025-01-24T14:29:24.5257923Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5258098Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5258406Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5258578Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5258735Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5258820Z                 lines_df=lines_df,
2025-01-24T14:29:24.5258951Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5259105Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5259239Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5259361Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5259549Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5259665Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5259770Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5259870Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5259951Z                 simulation=sim,
2025-01-24T14:29:24.5260029Z             )
2025-01-24T14:29:24.5260249Z         else: # real packets
2025-01-24T14:29:24.5260422Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5260501Z             # which got emitted
2025-01-24T14:29:24.5260614Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5260692Z >           return cls(
2025-01-24T14:29:24.5260875Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5261063Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5261139Z                     mask
2025-01-24T14:29:24.5261214Z                 ],
2025-01-24T14:29:24.5261406Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5261484Z                     mask
2025-01-24T14:29:24.5261555Z                 ],
2025-01-24T14:29:24.5261728Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5261804Z                     mask
2025-01-24T14:29:24.5261880Z                 ],
2025-01-24T14:29:24.5262047Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5262134Z                 lines_df=lines_df,
2025-01-24T14:29:24.5262298Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5262476Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5262555Z                     mask
2025-01-24T14:29:24.5262626Z                 ],
2025-01-24T14:29:24.5262760Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5262991Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5263187Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5263295Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5263399Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5263498Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5263583Z                 simulation=sim,
2025-01-24T14:29:24.5263653Z             )
2025-01-24T14:29:24.5263993Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5263998Z 
2025-01-24T14:29:24.5264170Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5264403Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] _
2025-01-24T14:29:24.5264407Z 
2025-01-24T14:29:24.5264683Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5264899Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5265135Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5265143Z 
2025-01-24T14:29:24.5265233Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5265353Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5265424Z         """
2025-01-24T14:29:24.5265519Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5265590Z     
2025-01-24T14:29:24.5265673Z         Parameters
2025-01-24T14:29:24.5265752Z         ----------
2025-01-24T14:29:24.5265895Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5265982Z             Simulation object.
2025-01-24T14:29:24.5266052Z     
2025-01-24T14:29:24.5266130Z         Returns
2025-01-24T14:29:24.5266204Z         -------
2025-01-24T14:29:24.5266348Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5266419Z         """
2025-01-24T14:29:24.5266557Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5266562Z 
2025-01-24T14:29:24.5266704Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5266923Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5267083Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5267237Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5267449Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5267587Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5267700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5267706Z 
2025-01-24T14:29:24.5267924Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5268098Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5268179Z packets_mode = 'real'
2025-01-24T14:29:24.5268183Z 
2025-01-24T14:29:24.5268388Z     @classmethod
2025-01-24T14:29:24.5268501Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5268581Z         """
2025-01-24T14:29:24.5268777Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5268852Z     
2025-01-24T14:29:24.5268927Z         Parameters
2025-01-24T14:29:24.5269008Z         ----------
2025-01-24T14:29:24.5269115Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5269267Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5269370Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5269510Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5269585Z     
2025-01-24T14:29:24.5269777Z         Returns
2025-01-24T14:29:24.5269859Z         -------
2025-01-24T14:29:24.5269947Z         SimulationPacketData
2025-01-24T14:29:24.5270021Z         """
2025-01-24T14:29:24.5270126Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5270213Z             raise ValueError(
2025-01-24T14:29:24.5270330Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5270441Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5270513Z             )
2025-01-24T14:29:24.5270623Z         # Properties common among both packet modes
2025-01-24T14:29:24.5270789Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5270864Z             "line_id"
2025-01-24T14:29:24.5270939Z         )
2025-01-24T14:29:24.5271061Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5271209Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5271317Z         time_of_simulation = (
2025-01-24T14:29:24.5271480Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5271552Z         )
2025-01-24T14:29:24.5271626Z     
2025-01-24T14:29:24.5271703Z         spectrum = (
2025-01-24T14:29:24.5271824Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5271915Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5272039Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5272111Z         )
2025-01-24T14:29:24.5272185Z     
2025-01-24T14:29:24.5272273Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5272401Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5272482Z             return cls(
2025-01-24T14:29:24.5272638Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5272814Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5272992Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5273163Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5273315Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5273402Z                 lines_df=lines_df,
2025-01-24T14:29:24.5273651Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5273811Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5273940Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5274064Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5274256Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5274365Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5274473Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5274572Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5274662Z                 simulation=sim,
2025-01-24T14:29:24.5274733Z             )
2025-01-24T14:29:24.5274820Z         else: # real packets
2025-01-24T14:29:24.5274985Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5275075Z             # which got emitted
2025-01-24T14:29:24.5275182Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5275266Z >           return cls(
2025-01-24T14:29:24.5275437Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5275623Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5275704Z                     mask
2025-01-24T14:29:24.5275777Z                 ],
2025-01-24T14:29:24.5275972Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5276046Z                     mask
2025-01-24T14:29:24.5276212Z                 ],
2025-01-24T14:29:24.5276381Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5276461Z                     mask
2025-01-24T14:29:24.5276530Z                 ],
2025-01-24T14:29:24.5276699Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5276785Z                 lines_df=lines_df,
2025-01-24T14:29:24.5276955Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5277127Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5277205Z                     mask
2025-01-24T14:29:24.5277282Z                 ],
2025-01-24T14:29:24.5277411Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5277531Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5277720Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5277836Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5277936Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5278034Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5278113Z                 simulation=sim,
2025-01-24T14:29:24.5278192Z             )
2025-01-24T14:29:24.5278627Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5278632Z 
2025-01-24T14:29:24.5278806Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5279036Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] _
2025-01-24T14:29:24.5279041Z 
2025-01-24T14:29:24.5279310Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5279531Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5279769Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5279773Z 
2025-01-24T14:29:24.5279869Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5279982Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5280201Z         """
2025-01-24T14:29:24.5280293Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5280368Z     
2025-01-24T14:29:24.5280442Z         Parameters
2025-01-24T14:29:24.5280520Z         ----------
2025-01-24T14:29:24.5280667Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5280749Z             Simulation object.
2025-01-24T14:29:24.5280823Z     
2025-01-24T14:29:24.5280894Z         Returns
2025-01-24T14:29:24.5280972Z         -------
2025-01-24T14:29:24.5281101Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5281176Z         """
2025-01-24T14:29:24.5281310Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5281315Z 
2025-01-24T14:29:24.5281465Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5281577Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5281741Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5281891Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5282107Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5282247Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5282355Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5282359Z 
2025-01-24T14:29:24.5282576Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5282744Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5282944Z packets_mode = 'real'
2025-01-24T14:29:24.5282949Z 
2025-01-24T14:29:24.5283027Z     @classmethod
2025-01-24T14:29:24.5283143Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5283214Z         """
2025-01-24T14:29:24.5283412Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5283487Z     
2025-01-24T14:29:24.5283567Z         Parameters
2025-01-24T14:29:24.5283641Z         ----------
2025-01-24T14:29:24.5283744Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5283896Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5283990Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5284135Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5284205Z     
2025-01-24T14:29:24.5284282Z         Returns
2025-01-24T14:29:24.5284355Z         -------
2025-01-24T14:29:24.5284448Z         SimulationPacketData
2025-01-24T14:29:24.5284519Z         """
2025-01-24T14:29:24.5284633Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5284716Z             raise ValueError(
2025-01-24T14:29:24.5284837Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5284938Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5285018Z             )
2025-01-24T14:29:24.5285125Z         # Properties common among both packet modes
2025-01-24T14:29:24.5285291Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5285371Z             "line_id"
2025-01-24T14:29:24.5285443Z         )
2025-01-24T14:29:24.5285555Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5285679Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5285768Z         time_of_simulation = (
2025-01-24T14:29:24.5285923Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5285999Z         )
2025-01-24T14:29:24.5286068Z     
2025-01-24T14:29:24.5286155Z         spectrum = (
2025-01-24T14:29:24.5286268Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5286362Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5286478Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5286553Z         )
2025-01-24T14:29:24.5286713Z     
2025-01-24T14:29:24.5286808Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5286928Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5287009Z             return cls(
2025-01-24T14:29:24.5287170Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5287342Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5287523Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5287690Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5287850Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5287934Z                 lines_df=lines_df,
2025-01-24T14:29:24.5288066Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5288320Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5288461Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5288580Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5288766Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5288883Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5288985Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5289087Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5289170Z                 simulation=sim,
2025-01-24T14:29:24.5289245Z             )
2025-01-24T14:29:24.5289442Z         else: # real packets
2025-01-24T14:29:24.5289616Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5289696Z             # which got emitted
2025-01-24T14:29:24.5289808Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5289888Z >           return cls(
2025-01-24T14:29:24.5290067Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5290257Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5290331Z                     mask
2025-01-24T14:29:24.5290407Z                 ],
2025-01-24T14:29:24.5290595Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5290675Z                     mask
2025-01-24T14:29:24.5290747Z                 ],
2025-01-24T14:29:24.5290921Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5290998Z                     mask
2025-01-24T14:29:24.5291075Z                 ],
2025-01-24T14:29:24.5291240Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5291328Z                 lines_df=lines_df,
2025-01-24T14:29:24.5291490Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5291672Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5291746Z                     mask
2025-01-24T14:29:24.5291822Z                 ],
2025-01-24T14:29:24.5291956Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5292072Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5292261Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5292367Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5292475Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5292571Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5292656Z                 simulation=sim,
2025-01-24T14:29:24.5292727Z             )
2025-01-24T14:29:24.5293064Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5293186Z 
2025-01-24T14:29:24.5293357Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5293590Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] _
2025-01-24T14:29:24.5293594Z 
2025-01-24T14:29:24.5293867Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5294080Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5294318Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5294327Z 
2025-01-24T14:29:24.5294417Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5294536Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5294608Z         """
2025-01-24T14:29:24.5294704Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5294775Z     
2025-01-24T14:29:24.5294859Z         Parameters
2025-01-24T14:29:24.5294932Z         ----------
2025-01-24T14:29:24.5295079Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5295167Z             Simulation object.
2025-01-24T14:29:24.5295236Z     
2025-01-24T14:29:24.5295313Z         Returns
2025-01-24T14:29:24.5295387Z         -------
2025-01-24T14:29:24.5295520Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5295592Z         """
2025-01-24T14:29:24.5295728Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5295732Z 
2025-01-24T14:29:24.5295873Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5296080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5296245Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5296397Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5296606Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5296747Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5296860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5296865Z 
2025-01-24T14:29:24.5297078Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5297248Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5297329Z packets_mode = 'real'
2025-01-24T14:29:24.5297334Z 
2025-01-24T14:29:24.5297413Z     @classmethod
2025-01-24T14:29:24.5297526Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5297603Z         """
2025-01-24T14:29:24.5297794Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5297870Z     
2025-01-24T14:29:24.5297945Z         Parameters
2025-01-24T14:29:24.5298023Z         ----------
2025-01-24T14:29:24.5298128Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5298398Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5298499Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5298639Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5298713Z     
2025-01-24T14:29:24.5298784Z         Returns
2025-01-24T14:29:24.5298861Z         -------
2025-01-24T14:29:24.5298947Z         SimulationPacketData
2025-01-24T14:29:24.5299027Z         """
2025-01-24T14:29:24.5299133Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5299219Z             raise ValueError(
2025-01-24T14:29:24.5299338Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5299446Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5299520Z             )
2025-01-24T14:29:24.5299631Z         # Properties common among both packet modes
2025-01-24T14:29:24.5299791Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5300000Z             "line_id"
2025-01-24T14:29:24.5300077Z         )
2025-01-24T14:29:24.5300186Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5300314Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5300397Z         time_of_simulation = (
2025-01-24T14:29:24.5300557Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5300628Z         )
2025-01-24T14:29:24.5300703Z     
2025-01-24T14:29:24.5300779Z         spectrum = (
2025-01-24T14:29:24.5300898Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5300989Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5301112Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5301183Z         )
2025-01-24T14:29:24.5301258Z     
2025-01-24T14:29:24.5301346Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5301474Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5301562Z             return cls(
2025-01-24T14:29:24.5301720Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5301896Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5302074Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5302245Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5302394Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5302632Z                 lines_df=lines_df,
2025-01-24T14:29:24.5302765Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5302926Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5303056Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5303182Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5303376Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5303482Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5303589Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5303685Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5303770Z                 simulation=sim,
2025-01-24T14:29:24.5303841Z             )
2025-01-24T14:29:24.5303928Z         else: # real packets
2025-01-24T14:29:24.5304095Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5304182Z             # which got emitted
2025-01-24T14:29:24.5304290Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5304372Z >           return cls(
2025-01-24T14:29:24.5304545Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5304746Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5304830Z                     mask
2025-01-24T14:29:24.5304902Z                 ],
2025-01-24T14:29:24.5305100Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5305176Z                     mask
2025-01-24T14:29:24.5305253Z                 ],
2025-01-24T14:29:24.5305421Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5305500Z                     mask
2025-01-24T14:29:24.5305573Z                 ],
2025-01-24T14:29:24.5305752Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5305836Z                 lines_df=lines_df,
2025-01-24T14:29:24.5306006Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5306181Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5306351Z                     mask
2025-01-24T14:29:24.5306428Z                 ],
2025-01-24T14:29:24.5306559Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5306679Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5306865Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5306978Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5307078Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5307179Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5307263Z                 simulation=sim,
2025-01-24T14:29:24.5307338Z             )
2025-01-24T14:29:24.5307667Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5307672Z 
2025-01-24T14:29:24.5307846Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5308081Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] _
2025-01-24T14:29:24.5308085Z 
2025-01-24T14:29:24.5308482Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5308702Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5308934Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5308938Z 
2025-01-24T14:29:24.5309032Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5309276Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5309356Z         """
2025-01-24T14:29:24.5309447Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5309523Z     
2025-01-24T14:29:24.5309598Z         Parameters
2025-01-24T14:29:24.5309676Z         ----------
2025-01-24T14:29:24.5309821Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5309907Z             Simulation object.
2025-01-24T14:29:24.5309981Z     
2025-01-24T14:29:24.5310053Z         Returns
2025-01-24T14:29:24.5310136Z         -------
2025-01-24T14:29:24.5310265Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5310342Z         """
2025-01-24T14:29:24.5310476Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5310481Z 
2025-01-24T14:29:24.5310630Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5310744Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5310915Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5311063Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5311282Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5311422Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5311535Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5311539Z 
2025-01-24T14:29:24.5311758Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5311925Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5312014Z packets_mode = 'real'
2025-01-24T14:29:24.5312019Z 
2025-01-24T14:29:24.5312097Z     @classmethod
2025-01-24T14:29:24.5312214Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5312285Z         """
2025-01-24T14:29:24.5312487Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5312557Z     
2025-01-24T14:29:24.5312640Z         Parameters
2025-01-24T14:29:24.5312714Z         ----------
2025-01-24T14:29:24.5312820Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5322823Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5323145Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5323320Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5323394Z     
2025-01-24T14:29:24.5323476Z         Returns
2025-01-24T14:29:24.5323552Z         -------
2025-01-24T14:29:24.5323647Z         SimulationPacketData
2025-01-24T14:29:24.5323718Z         """
2025-01-24T14:29:24.5323844Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5323936Z             raise ValueError(
2025-01-24T14:29:24.5324070Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5324186Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5324263Z             )
2025-01-24T14:29:24.5324382Z         # Properties common among both packet modes
2025-01-24T14:29:24.5324553Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5324634Z             "line_id"
2025-01-24T14:29:24.5324706Z         )
2025-01-24T14:29:24.5324829Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5324965Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5325059Z         time_of_simulation = (
2025-01-24T14:29:24.5325225Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5325301Z         )
2025-01-24T14:29:24.5325373Z     
2025-01-24T14:29:24.5325456Z         spectrum = (
2025-01-24T14:29:24.5325580Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5325674Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5325801Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5325992Z         )
2025-01-24T14:29:24.5326072Z     
2025-01-24T14:29:24.5326164Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5326303Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5326380Z             return cls(
2025-01-24T14:29:24.5326554Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5326737Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5326924Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5327091Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5327252Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5327343Z                 lines_df=lines_df,
2025-01-24T14:29:24.5327476Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5327639Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5327771Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5327893Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5328085Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5328205Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5328440Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5328548Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5328632Z                 simulation=sim,
2025-01-24T14:29:24.5328709Z             )
2025-01-24T14:29:24.5328794Z         else: # real packets
2025-01-24T14:29:24.5328983Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5329073Z             # which got emitted
2025-01-24T14:29:24.5329189Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5329278Z >           return cls(
2025-01-24T14:29:24.5329490Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5329685Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5329762Z                     mask
2025-01-24T14:29:24.5329958Z                 ],
2025-01-24T14:29:24.5330151Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5330230Z                     mask
2025-01-24T14:29:24.5330301Z                 ],
2025-01-24T14:29:24.5330478Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5330553Z                     mask
2025-01-24T14:29:24.5330629Z                 ],
2025-01-24T14:29:24.5330799Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5330884Z                 lines_df=lines_df,
2025-01-24T14:29:24.5331058Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5331234Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5331313Z                     mask
2025-01-24T14:29:24.5331385Z                 ],
2025-01-24T14:29:24.5331521Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5331644Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5331839Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5331954Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5332061Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5332158Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5332245Z                 simulation=sim,
2025-01-24T14:29:24.5332323Z             )
2025-01-24T14:29:24.5332789Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5332797Z 
2025-01-24T14:29:24.5332986Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5333232Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] _
2025-01-24T14:29:24.5333240Z 
2025-01-24T14:29:24.5333517Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5333734Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5333973Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5333977Z 
2025-01-24T14:29:24.5334074Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5334192Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5334272Z         """
2025-01-24T14:29:24.5334368Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5334441Z     
2025-01-24T14:29:24.5334525Z         Parameters
2025-01-24T14:29:24.5334601Z         ----------
2025-01-24T14:29:24.5334754Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5334838Z             Simulation object.
2025-01-24T14:29:24.5334913Z     
2025-01-24T14:29:24.5334986Z         Returns
2025-01-24T14:29:24.5335067Z         -------
2025-01-24T14:29:24.5335204Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5335282Z         """
2025-01-24T14:29:24.5335418Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5335422Z 
2025-01-24T14:29:24.5335576Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5335693Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5335864Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5336020Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5336239Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5336387Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5336500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5336505Z 
2025-01-24T14:29:24.5336812Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5336982Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5337071Z packets_mode = 'real'
2025-01-24T14:29:24.5337076Z 
2025-01-24T14:29:24.5337150Z     @classmethod
2025-01-24T14:29:24.5337268Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5337340Z         """
2025-01-24T14:29:24.5337541Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5337617Z     
2025-01-24T14:29:24.5337693Z         Parameters
2025-01-24T14:29:24.5337774Z         ----------
2025-01-24T14:29:24.5337878Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5338035Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5338130Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5338383Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5338459Z     
2025-01-24T14:29:24.5338540Z         Returns
2025-01-24T14:29:24.5338614Z         -------
2025-01-24T14:29:24.5338708Z         SimulationPacketData
2025-01-24T14:29:24.5338779Z         """
2025-01-24T14:29:24.5338893Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5338977Z             raise ValueError(
2025-01-24T14:29:24.5339105Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5339211Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5339288Z             )
2025-01-24T14:29:24.5339401Z         # Properties common among both packet modes
2025-01-24T14:29:24.5339701Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5339787Z             "line_id"
2025-01-24T14:29:24.5339858Z         )
2025-01-24T14:29:24.5339973Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5340096Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5340191Z         time_of_simulation = (
2025-01-24T14:29:24.5340348Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5340424Z         )
2025-01-24T14:29:24.5340494Z     
2025-01-24T14:29:24.5340578Z         spectrum = (
2025-01-24T14:29:24.5340694Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5340792Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5340911Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5340988Z         )
2025-01-24T14:29:24.5341065Z     
2025-01-24T14:29:24.5341155Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5341286Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5341363Z             return cls(
2025-01-24T14:29:24.5341528Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5341702Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5341887Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5342055Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5342211Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5342297Z                 lines_df=lines_df,
2025-01-24T14:29:24.5342431Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5342587Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5342725Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5342851Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5343043Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5343158Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5343262Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5343484Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5343566Z                 simulation=sim,
2025-01-24T14:29:24.5343642Z             )
2025-01-24T14:29:24.5343725Z         else: # real packets
2025-01-24T14:29:24.5343899Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5343979Z             # which got emitted
2025-01-24T14:29:24.5344090Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5344166Z >           return cls(
2025-01-24T14:29:24.5344345Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5344538Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5344613Z                     mask
2025-01-24T14:29:24.5344689Z                 ],
2025-01-24T14:29:24.5344876Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5344961Z                     mask
2025-01-24T14:29:24.5345031Z                 ],
2025-01-24T14:29:24.5345204Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5345277Z                     mask
2025-01-24T14:29:24.5345353Z                 ],
2025-01-24T14:29:24.5345519Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5345611Z                 lines_df=lines_df,
2025-01-24T14:29:24.5345774Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5346035Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5346117Z                     mask
2025-01-24T14:29:24.5346188Z                 ],
2025-01-24T14:29:24.5346322Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5346445Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5346644Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5346752Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5346857Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5346952Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5347038Z                 simulation=sim,
2025-01-24T14:29:24.5347109Z             )
2025-01-24T14:29:24.5347446Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5347451Z 
2025-01-24T14:29:24.5347632Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5347867Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] _
2025-01-24T14:29:24.5348189Z 
2025-01-24T14:29:24.5348575Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5348793Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5349030Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5349035Z 
2025-01-24T14:29:24.5349124Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5349244Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5349320Z         """
2025-01-24T14:29:24.5349409Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5349483Z     
2025-01-24T14:29:24.5349558Z         Parameters
2025-01-24T14:29:24.5349637Z         ----------
2025-01-24T14:29:24.5349788Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5349876Z             Simulation object.
2025-01-24T14:29:24.5349945Z     
2025-01-24T14:29:24.5350022Z         Returns
2025-01-24T14:29:24.5350098Z         -------
2025-01-24T14:29:24.5350235Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5350306Z         """
2025-01-24T14:29:24.5350566Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5350571Z 
2025-01-24T14:29:24.5350714Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5350834Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5351001Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5351148Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5351369Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5351507Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5351620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5351624Z 
2025-01-24T14:29:24.5351838Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5352012Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5352099Z packets_mode = 'real'
2025-01-24T14:29:24.5352103Z 
2025-01-24T14:29:24.5352182Z     @classmethod
2025-01-24T14:29:24.5352297Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5352374Z         """
2025-01-24T14:29:24.5352574Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5352643Z     
2025-01-24T14:29:24.5352722Z         Parameters
2025-01-24T14:29:24.5352797Z         ----------
2025-01-24T14:29:24.5352903Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5353050Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5353264Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5353406Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5353482Z     
2025-01-24T14:29:24.5353554Z         Returns
2025-01-24T14:29:24.5353632Z         -------
2025-01-24T14:29:24.5353719Z         SimulationPacketData
2025-01-24T14:29:24.5353800Z         """
2025-01-24T14:29:24.5353908Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5353998Z             raise ValueError(
2025-01-24T14:29:24.5354119Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5354226Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5354302Z             )
2025-01-24T14:29:24.5354409Z         # Properties common among both packet modes
2025-01-24T14:29:24.5354575Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5354650Z             "line_id"
2025-01-24T14:29:24.5354728Z         )
2025-01-24T14:29:24.5354840Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5354975Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5355059Z         time_of_simulation = (
2025-01-24T14:29:24.5355222Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5355294Z         )
2025-01-24T14:29:24.5355368Z     
2025-01-24T14:29:24.5355446Z         spectrum = (
2025-01-24T14:29:24.5355566Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5355657Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5355780Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5355855Z         )
2025-01-24T14:29:24.5355924Z     
2025-01-24T14:29:24.5356019Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5356141Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5356222Z             return cls(
2025-01-24T14:29:24.5356392Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5356568Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5356758Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5356933Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5357181Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5357272Z                 lines_df=lines_df,
2025-01-24T14:29:24.5357413Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5357570Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5357706Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5357825Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5358025Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5358144Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5358349Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5358459Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5358545Z                 simulation=sim,
2025-01-24T14:29:24.5358626Z             )
2025-01-24T14:29:24.5358711Z         else: # real packets
2025-01-24T14:29:24.5358895Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5358976Z             # which got emitted
2025-01-24T14:29:24.5359093Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5359170Z >           return cls(
2025-01-24T14:29:24.5359355Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5359541Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5359737Z                     mask
2025-01-24T14:29:24.5359816Z                 ],
2025-01-24T14:29:24.5360006Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5360086Z                     mask
2025-01-24T14:29:24.5360158Z                 ],
2025-01-24T14:29:24.5360334Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5360413Z                     mask
2025-01-24T14:29:24.5360489Z                 ],
2025-01-24T14:29:24.5360658Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5360747Z                 lines_df=lines_df,
2025-01-24T14:29:24.5360909Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5361090Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5361165Z                     mask
2025-01-24T14:29:24.5361244Z                 ],
2025-01-24T14:29:24.5361386Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5361504Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5361700Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5361813Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5361922Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5362019Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5362106Z                 simulation=sim,
2025-01-24T14:29:24.5362178Z             )
2025-01-24T14:29:24.5362520Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5362525Z 
2025-01-24T14:29:24.5362699Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5362945Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] _
2025-01-24T14:29:24.5362949Z 
2025-01-24T14:29:24.5363228Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5363446Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5363685Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5363830Z 
2025-01-24T14:29:24.5363922Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5364047Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5364119Z         """
2025-01-24T14:29:24.5364215Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5364286Z     
2025-01-24T14:29:24.5364370Z         Parameters
2025-01-24T14:29:24.5364446Z         ----------
2025-01-24T14:29:24.5364598Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5364688Z             Simulation object.
2025-01-24T14:29:24.5364759Z     
2025-01-24T14:29:24.5364839Z         Returns
2025-01-24T14:29:24.5364914Z         -------
2025-01-24T14:29:24.5365051Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5365122Z         """
2025-01-24T14:29:24.5365264Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5365269Z 
2025-01-24T14:29:24.5365415Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5365540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5365705Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5365858Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5366071Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5366212Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5366330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5366334Z 
2025-01-24T14:29:24.5366643Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5366821Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5366905Z packets_mode = 'real'
2025-01-24T14:29:24.5366909Z 
2025-01-24T14:29:24.5366990Z     @classmethod
2025-01-24T14:29:24.5367106Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5367183Z         """
2025-01-24T14:29:24.5367378Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5367454Z     
2025-01-24T14:29:24.5367530Z         Parameters
2025-01-24T14:29:24.5367611Z         ----------
2025-01-24T14:29:24.5367716Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5367866Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5367969Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5368113Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5368192Z     
2025-01-24T14:29:24.5368361Z         Returns
2025-01-24T14:29:24.5368445Z         -------
2025-01-24T14:29:24.5368532Z         SimulationPacketData
2025-01-24T14:29:24.5368609Z         """
2025-01-24T14:29:24.5368717Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5368810Z             raise ValueError(
2025-01-24T14:29:24.5368929Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5369037Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5369108Z             )
2025-01-24T14:29:24.5369219Z         # Properties common among both packet modes
2025-01-24T14:29:24.5369379Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5369459Z             "line_id"
2025-01-24T14:29:24.5369534Z         )
2025-01-24T14:29:24.5369644Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5369778Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5369866Z         time_of_simulation = (
2025-01-24T14:29:24.5370026Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5370097Z         )
2025-01-24T14:29:24.5370172Z     
2025-01-24T14:29:24.5370251Z         spectrum = (
2025-01-24T14:29:24.5370373Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5370584Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5370708Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5370780Z         )
2025-01-24T14:29:24.5370856Z     
2025-01-24T14:29:24.5370946Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5371077Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5371162Z             return cls(
2025-01-24T14:29:24.5371322Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5371502Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5371682Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5371857Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5372006Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5372101Z                 lines_df=lines_df,
2025-01-24T14:29:24.5372231Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5372391Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5372523Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5372644Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5372842Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5372950Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5373169Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5373272Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5373358Z                 simulation=sim,
2025-01-24T14:29:24.5373430Z             )
2025-01-24T14:29:24.5373519Z         else: # real packets
2025-01-24T14:29:24.5373689Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5373779Z             # which got emitted
2025-01-24T14:29:24.5373885Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5373970Z >           return cls(
2025-01-24T14:29:24.5374144Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5374333Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5374415Z                     mask
2025-01-24T14:29:24.5374487Z                 ],
2025-01-24T14:29:24.5374686Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5374762Z                     mask
2025-01-24T14:29:24.5374838Z                 ],
2025-01-24T14:29:24.5375005Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5375085Z                     mask
2025-01-24T14:29:24.5375157Z                 ],
2025-01-24T14:29:24.5375332Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5375415Z                 lines_df=lines_df,
2025-01-24T14:29:24.5375581Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5375756Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5375836Z                     mask
2025-01-24T14:29:24.5375908Z                 ],
2025-01-24T14:29:24.5376043Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5376168Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5376358Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5376471Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5376571Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5376674Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5376864Z                 simulation=sim,
2025-01-24T14:29:24.5376941Z             )
2025-01-24T14:29:24.5377280Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5377284Z 
2025-01-24T14:29:24.5377464Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5377704Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] _
2025-01-24T14:29:24.5377709Z 
2025-01-24T14:29:24.5377981Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5378198Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5378564Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5378570Z 
2025-01-24T14:29:24.5378667Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5378788Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5378865Z         """
2025-01-24T14:29:24.5378956Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5379033Z     
2025-01-24T14:29:24.5379108Z         Parameters
2025-01-24T14:29:24.5379187Z         ----------
2025-01-24T14:29:24.5379332Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5379422Z             Simulation object.
2025-01-24T14:29:24.5379499Z     
2025-01-24T14:29:24.5379572Z         Returns
2025-01-24T14:29:24.5379650Z         -------
2025-01-24T14:29:24.5379782Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5379977Z         """
2025-01-24T14:29:24.5380119Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5380123Z 
2025-01-24T14:29:24.5380273Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5380387Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5380558Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5380708Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5380926Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5381070Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5381180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5381184Z 
2025-01-24T14:29:24.5381404Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5381579Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5381668Z packets_mode = 'real'
2025-01-24T14:29:24.5381672Z 
2025-01-24T14:29:24.5381750Z     @classmethod
2025-01-24T14:29:24.5381867Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5381939Z         """
2025-01-24T14:29:24.5382138Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5382212Z     
2025-01-24T14:29:24.5382294Z         Parameters
2025-01-24T14:29:24.5382368Z         ----------
2025-01-24T14:29:24.5382474Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5382629Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5382723Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5382867Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5382937Z     
2025-01-24T14:29:24.5383015Z         Returns
2025-01-24T14:29:24.5383089Z         -------
2025-01-24T14:29:24.5383185Z         SimulationPacketData
2025-01-24T14:29:24.5383259Z         """
2025-01-24T14:29:24.5383373Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5383459Z             raise ValueError(
2025-01-24T14:29:24.5383586Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5383810Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5383890Z             )
2025-01-24T14:29:24.5383997Z         # Properties common among both packet modes
2025-01-24T14:29:24.5384166Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5384246Z             "line_id"
2025-01-24T14:29:24.5384321Z         )
2025-01-24T14:29:24.5384436Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5384561Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5384650Z         time_of_simulation = (
2025-01-24T14:29:24.5384810Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5384889Z         )
2025-01-24T14:29:24.5384960Z     
2025-01-24T14:29:24.5385043Z         spectrum = (
2025-01-24T14:29:24.5385158Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5385254Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5385372Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5385454Z         )
2025-01-24T14:29:24.5385524Z     
2025-01-24T14:29:24.5385620Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5385743Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5385827Z             return cls(
2025-01-24T14:29:24.5385995Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5386168Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5386350Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5386603Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5386764Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5386849Z                 lines_df=lines_df,
2025-01-24T14:29:24.5386983Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5387142Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5387277Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5387395Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5387588Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5387701Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5387805Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5387906Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5387991Z                 simulation=sim,
2025-01-24T14:29:24.5388070Z             )
2025-01-24T14:29:24.5388153Z         else: # real packets
2025-01-24T14:29:24.5388456Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5388540Z             # which got emitted
2025-01-24T14:29:24.5388657Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5388734Z >           return cls(
2025-01-24T14:29:24.5388912Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5389096Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5389177Z                     mask
2025-01-24T14:29:24.5389254Z                 ],
2025-01-24T14:29:24.5389444Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5389524Z                     mask
2025-01-24T14:29:24.5389595Z                 ],
2025-01-24T14:29:24.5389770Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5389845Z                     mask
2025-01-24T14:29:24.5389922Z                 ],
2025-01-24T14:29:24.5390087Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5390175Z                 lines_df=lines_df,
2025-01-24T14:29:24.5390486Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5390666Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5390741Z                     mask
2025-01-24T14:29:24.5390817Z                 ],
2025-01-24T14:29:24.5390951Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5391067Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5391258Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5391370Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5391477Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5391578Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5391664Z                 simulation=sim,
2025-01-24T14:29:24.5391736Z             )
2025-01-24T14:29:24.5392073Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5392078Z 
2025-01-24T14:29:24.5392249Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5392486Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] _
2025-01-24T14:29:24.5392490Z 
2025-01-24T14:29:24.5392764Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5392976Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5393328Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5393334Z 
2025-01-24T14:29:24.5393425Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5393546Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5393618Z         """
2025-01-24T14:29:24.5393714Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5393788Z     
2025-01-24T14:29:24.5393869Z         Parameters
2025-01-24T14:29:24.5393944Z         ----------
2025-01-24T14:29:24.5394092Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5394181Z             Simulation object.
2025-01-24T14:29:24.5394252Z     
2025-01-24T14:29:24.5394331Z         Returns
2025-01-24T14:29:24.5394406Z         -------
2025-01-24T14:29:24.5394542Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5394614Z         """
2025-01-24T14:29:24.5394754Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5394760Z 
2025-01-24T14:29:24.5394905Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5395025Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5395190Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5395344Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5395565Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5395704Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5395822Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5395826Z 
2025-01-24T14:29:24.5396042Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5396215Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5396298Z packets_mode = 'real'
2025-01-24T14:29:24.5396302Z 
2025-01-24T14:29:24.5396385Z     @classmethod
2025-01-24T14:29:24.5396499Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5396576Z         """
2025-01-24T14:29:24.5396768Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5396848Z     
2025-01-24T14:29:24.5396924Z         Parameters
2025-01-24T14:29:24.5397097Z         ----------
2025-01-24T14:29:24.5397197Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5397353Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5397450Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5397595Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5397670Z     
2025-01-24T14:29:24.5397743Z         Returns
2025-01-24T14:29:24.5397820Z         -------
2025-01-24T14:29:24.5397908Z         SimulationPacketData
2025-01-24T14:29:24.5397984Z         """
2025-01-24T14:29:24.5398089Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5398181Z             raise ValueError(
2025-01-24T14:29:24.5398401Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5398511Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5398583Z             )
2025-01-24T14:29:24.5398695Z         # Properties common among both packet modes
2025-01-24T14:29:24.5398862Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5398946Z             "line_id"
2025-01-24T14:29:24.5399022Z         )
2025-01-24T14:29:24.5399130Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5399258Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5399343Z         time_of_simulation = (
2025-01-24T14:29:24.5399503Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5399575Z         )
2025-01-24T14:29:24.5399649Z     
2025-01-24T14:29:24.5399727Z         spectrum = (
2025-01-24T14:29:24.5399964Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5400059Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5400184Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5400255Z         )
2025-01-24T14:29:24.5400329Z     
2025-01-24T14:29:24.5400419Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5400551Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5400635Z             return cls(
2025-01-24T14:29:24.5400792Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5400970Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5401147Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5401320Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5401473Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5401561Z                 lines_df=lines_df,
2025-01-24T14:29:24.5401690Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5401850Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5401982Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5402107Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5402299Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5402409Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5402518Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5402615Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5402703Z                 simulation=sim,
2025-01-24T14:29:24.5402774Z             )
2025-01-24T14:29:24.5402861Z         else: # real packets
2025-01-24T14:29:24.5403030Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5403117Z             # which got emitted
2025-01-24T14:29:24.5403224Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5403307Z >           return cls(
2025-01-24T14:29:24.5403480Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5403788Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5403869Z                     mask
2025-01-24T14:29:24.5403941Z                 ],
2025-01-24T14:29:24.5404136Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5404211Z                     mask
2025-01-24T14:29:24.5404288Z                 ],
2025-01-24T14:29:24.5404456Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5404535Z                     mask
2025-01-24T14:29:24.5404610Z                 ],
2025-01-24T14:29:24.5404780Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5404863Z                 lines_df=lines_df,
2025-01-24T14:29:24.5405033Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5405210Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5405291Z                     mask
2025-01-24T14:29:24.5405364Z                 ],
2025-01-24T14:29:24.5405500Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5405623Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5405810Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5405927Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5406028Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5406210Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5406295Z                 simulation=sim,
2025-01-24T14:29:24.5406371Z             )
2025-01-24T14:29:24.5406705Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5406714Z 
2025-01-24T14:29:24.5406890Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5407127Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] _
2025-01-24T14:29:24.5407137Z 
2025-01-24T14:29:24.5407413Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5407632Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5407866Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5407870Z 
2025-01-24T14:29:24.5407971Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5408087Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5408165Z         """
2025-01-24T14:29:24.5408350Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5408428Z     
2025-01-24T14:29:24.5408505Z         Parameters
2025-01-24T14:29:24.5408586Z         ----------
2025-01-24T14:29:24.5408733Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5408821Z             Simulation object.
2025-01-24T14:29:24.5408896Z     
2025-01-24T14:29:24.5408970Z         Returns
2025-01-24T14:29:24.5409049Z         -------
2025-01-24T14:29:24.5409180Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5409256Z         """
2025-01-24T14:29:24.5409391Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5409395Z 
2025-01-24T14:29:24.5409546Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5409663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5409832Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5409981Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5410203Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5410464Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5410580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5410584Z 
2025-01-24T14:29:24.5410801Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5410968Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5411058Z packets_mode = 'real'
2025-01-24T14:29:24.5411062Z 
2025-01-24T14:29:24.5411136Z     @classmethod
2025-01-24T14:29:24.5411258Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5411330Z         """
2025-01-24T14:29:24.5411540Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5411613Z     
2025-01-24T14:29:24.5411697Z         Parameters
2025-01-24T14:29:24.5411772Z         ----------
2025-01-24T14:29:24.5411879Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5412036Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5412137Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5412285Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5412356Z     
2025-01-24T14:29:24.5412433Z         Returns
2025-01-24T14:29:24.5412506Z         -------
2025-01-24T14:29:24.5412600Z         SimulationPacketData
2025-01-24T14:29:24.5412672Z         """
2025-01-24T14:29:24.5412789Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5412872Z             raise ValueError(
2025-01-24T14:29:24.5412996Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5413232Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5413313Z             )
2025-01-24T14:29:24.5413424Z         # Properties common among both packet modes
2025-01-24T14:29:24.5413592Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5413676Z             "line_id"
2025-01-24T14:29:24.5413747Z         )
2025-01-24T14:29:24.5413862Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5413989Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5414077Z         time_of_simulation = (
2025-01-24T14:29:24.5414232Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5414311Z         )
2025-01-24T14:29:24.5414382Z     
2025-01-24T14:29:24.5414466Z         spectrum = (
2025-01-24T14:29:24.5414582Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5414680Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5414801Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5414879Z         )
2025-01-24T14:29:24.5414952Z     
2025-01-24T14:29:24.5415047Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5415170Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5415252Z             return cls(
2025-01-24T14:29:24.5415420Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5415591Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5415771Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5415937Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5416093Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5416178Z                 lines_df=lines_df,
2025-01-24T14:29:24.5416316Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5416472Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5416608Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5416727Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5417014Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5417128Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5417231Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5417335Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5417417Z                 simulation=sim,
2025-01-24T14:29:24.5417497Z             )
2025-01-24T14:29:24.5417581Z         else: # real packets
2025-01-24T14:29:24.5417752Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5417833Z             # which got emitted
2025-01-24T14:29:24.5417954Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5418031Z >           return cls(
2025-01-24T14:29:24.5418214Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5418521Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5418609Z                     mask
2025-01-24T14:29:24.5418686Z                 ],
2025-01-24T14:29:24.5418874Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5418955Z                     mask
2025-01-24T14:29:24.5419027Z                 ],
2025-01-24T14:29:24.5419200Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5419275Z                     mask
2025-01-24T14:29:24.5419352Z                 ],
2025-01-24T14:29:24.5419518Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5419722Z                 lines_df=lines_df,
2025-01-24T14:29:24.5419890Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5420072Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5420145Z                     mask
2025-01-24T14:29:24.5420225Z                 ],
2025-01-24T14:29:24.5420360Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5420476Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5420666Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5420775Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5420885Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5420984Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5421069Z                 simulation=sim,
2025-01-24T14:29:24.5421144Z             )
2025-01-24T14:29:24.5421486Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5421492Z 
2025-01-24T14:29:24.5421666Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5421878Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl0] _
2025-01-24T14:29:24.5421886Z 
2025-01-24T14:29:24.5422162Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5422375Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5422613Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5422617Z 
2025-01-24T14:29:24.5422710Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5422830Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5422904Z         """
2025-01-24T14:29:24.5423006Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5423079Z     
2025-01-24T14:29:24.5423166Z         Parameters
2025-01-24T14:29:24.5423242Z         ----------
2025-01-24T14:29:24.5423397Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5423487Z             Simulation object.
2025-01-24T14:29:24.5423679Z     
2025-01-24T14:29:24.5423756Z         Returns
2025-01-24T14:29:24.5423831Z         -------
2025-01-24T14:29:24.5423967Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5424040Z         """
2025-01-24T14:29:24.5424181Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5424186Z 
2025-01-24T14:29:24.5424328Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5424447Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5424613Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5424769Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5424983Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5425123Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5425238Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5425246Z 
2025-01-24T14:29:24.5425463Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5425636Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5425718Z packets_mode = 'real'
2025-01-24T14:29:24.5425722Z 
2025-01-24T14:29:24.5425802Z     @classmethod
2025-01-24T14:29:24.5425913Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5425990Z         """
2025-01-24T14:29:24.5426183Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5426260Z     
2025-01-24T14:29:24.5426441Z         Parameters
2025-01-24T14:29:24.5426534Z         ----------
2025-01-24T14:29:24.5426635Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5426789Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5426887Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5427026Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5427105Z     
2025-01-24T14:29:24.5427178Z         Returns
2025-01-24T14:29:24.5427257Z         -------
2025-01-24T14:29:24.5427353Z         SimulationPacketData
2025-01-24T14:29:24.5427453Z         """
2025-01-24T14:29:24.5427558Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5427647Z             raise ValueError(
2025-01-24T14:29:24.5427767Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5427874Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5427945Z             )
2025-01-24T14:29:24.5428059Z         # Properties common among both packet modes
2025-01-24T14:29:24.5428220Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5428433Z             "line_id"
2025-01-24T14:29:24.5428510Z         )
2025-01-24T14:29:24.5428619Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5428766Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5428858Z         time_of_simulation = (
2025-01-24T14:29:24.5429019Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5429091Z         )
2025-01-24T14:29:24.5429168Z     
2025-01-24T14:29:24.5429245Z         spectrum = (
2025-01-24T14:29:24.5429364Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5429477Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5429600Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5429673Z         )
2025-01-24T14:29:24.5429748Z     
2025-01-24T14:29:24.5429840Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5429970Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5430047Z             return cls(
2025-01-24T14:29:24.5430211Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5430392Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5430691Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5430863Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5431015Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5431105Z                 lines_df=lines_df,
2025-01-24T14:29:24.5431233Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5431394Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5431528Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5431650Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5431836Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5431950Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5432062Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5432159Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5432245Z                 simulation=sim,
2025-01-24T14:29:24.5432318Z             )
2025-01-24T14:29:24.5432404Z         else: # real packets
2025-01-24T14:29:24.5432570Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5432657Z             # which got emitted
2025-01-24T14:29:24.5432770Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5432853Z >           return cls(
2025-01-24T14:29:24.5433138Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5433331Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5433406Z                     mask
2025-01-24T14:29:24.5433483Z                 ],
2025-01-24T14:29:24.5433678Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5433756Z                     mask
2025-01-24T14:29:24.5433835Z                 ],
2025-01-24T14:29:24.5434003Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5434082Z                     mask
2025-01-24T14:29:24.5434153Z                 ],
2025-01-24T14:29:24.5434324Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5434408Z                 lines_df=lines_df,
2025-01-24T14:29:24.5434574Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5434754Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5434835Z                     mask
2025-01-24T14:29:24.5434906Z                 ],
2025-01-24T14:29:24.5435038Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5435163Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5435350Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5435465Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5435567Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5435669Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5435749Z                 simulation=sim,
2025-01-24T14:29:24.5435827Z             )
2025-01-24T14:29:24.5436160Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5436168Z 
2025-01-24T14:29:24.5436354Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5436556Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl1] _
2025-01-24T14:29:24.5436568Z 
2025-01-24T14:29:24.5436835Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5437147Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5437379Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5437383Z 
2025-01-24T14:29:24.5437479Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5437594Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5437672Z         """
2025-01-24T14:29:24.5437762Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5437838Z     
2025-01-24T14:29:24.5437914Z         Parameters
2025-01-24T14:29:24.5437997Z         ----------
2025-01-24T14:29:24.5438141Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5438333Z             Simulation object.
2025-01-24T14:29:24.5438411Z     
2025-01-24T14:29:24.5438484Z         Returns
2025-01-24T14:29:24.5438563Z         -------
2025-01-24T14:29:24.5438693Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5438773Z         """
2025-01-24T14:29:24.5438910Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5438915Z 
2025-01-24T14:29:24.5439063Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5439178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5439346Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5439494Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5439718Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5439989Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5440108Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5440113Z 
2025-01-24T14:29:24.5440335Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5440507Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5440595Z packets_mode = 'real'
2025-01-24T14:29:24.5440599Z 
2025-01-24T14:29:24.5440675Z     @classmethod
2025-01-24T14:29:24.5440790Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5440862Z         """
2025-01-24T14:29:24.5441061Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5441133Z     
2025-01-24T14:29:24.5441214Z         Parameters
2025-01-24T14:29:24.5441290Z         ----------
2025-01-24T14:29:24.5441400Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5441553Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5441652Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5441797Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5441868Z     
2025-01-24T14:29:24.5441946Z         Returns
2025-01-24T14:29:24.5442023Z         -------
2025-01-24T14:29:24.5442117Z         SimulationPacketData
2025-01-24T14:29:24.5442188Z         """
2025-01-24T14:29:24.5442298Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5442381Z             raise ValueError(
2025-01-24T14:29:24.5442504Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5442608Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5442684Z             )
2025-01-24T14:29:24.5442791Z         # Properties common among both packet modes
2025-01-24T14:29:24.5442957Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5443036Z             "line_id"
2025-01-24T14:29:24.5443113Z         )
2025-01-24T14:29:24.5443226Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5443349Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5443438Z         time_of_simulation = (
2025-01-24T14:29:24.5443593Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5443808Z         )
2025-01-24T14:29:24.5443877Z     
2025-01-24T14:29:24.5443962Z         spectrum = (
2025-01-24T14:29:24.5444078Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5444175Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5444292Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5444368Z         )
2025-01-24T14:29:24.5444438Z     
2025-01-24T14:29:24.5444533Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5444656Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5444742Z             return cls(
2025-01-24T14:29:24.5444907Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5445080Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5445260Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5445430Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5445585Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5445669Z                 lines_df=lines_df,
2025-01-24T14:29:24.5445801Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5445956Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5446091Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5446208Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5446492Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5446610Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5446713Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5446815Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5446900Z                 simulation=sim,
2025-01-24T14:29:24.5446977Z             )
2025-01-24T14:29:24.5447059Z         else: # real packets
2025-01-24T14:29:24.5447228Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5447309Z             # which got emitted
2025-01-24T14:29:24.5447421Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5447498Z >           return cls(
2025-01-24T14:29:24.5447680Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5447868Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5447948Z                     mask
2025-01-24T14:29:24.5448021Z                 ],
2025-01-24T14:29:24.5448217Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5448402Z                     mask
2025-01-24T14:29:24.5448478Z                 ],
2025-01-24T14:29:24.5448655Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5448729Z                     mask
2025-01-24T14:29:24.5448808Z                 ],
2025-01-24T14:29:24.5448974Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5449062Z                 lines_df=lines_df,
2025-01-24T14:29:24.5449225Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5449406Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5449481Z                     mask
2025-01-24T14:29:24.5449562Z                 ],
2025-01-24T14:29:24.5449690Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5449809Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5449999Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5450229Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5450337Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5450432Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5450518Z                 simulation=sim,
2025-01-24T14:29:24.5450589Z             )
2025-01-24T14:29:24.5450926Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5450931Z 
2025-01-24T14:29:24.5451103Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5451316Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl2] _
2025-01-24T14:29:24.5451321Z 
2025-01-24T14:29:24.5451593Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5451807Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5452048Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5452053Z 
2025-01-24T14:29:24.5452145Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5452264Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5452337Z         """
2025-01-24T14:29:24.5452432Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5452503Z     
2025-01-24T14:29:24.5452584Z         Parameters
2025-01-24T14:29:24.5452659Z         ----------
2025-01-24T14:29:24.5452808Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5452891Z             Simulation object.
2025-01-24T14:29:24.5453080Z     
2025-01-24T14:29:24.5453162Z         Returns
2025-01-24T14:29:24.5453236Z         -------
2025-01-24T14:29:24.5453373Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5453445Z         """
2025-01-24T14:29:24.5453585Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5453594Z 
2025-01-24T14:29:24.5453740Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5453856Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5454019Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5454174Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5454385Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5454527Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5454646Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5454651Z 
2025-01-24T14:29:24.5454867Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5455042Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5455126Z packets_mode = 'real'
2025-01-24T14:29:24.5455133Z 
2025-01-24T14:29:24.5455214Z     @classmethod
2025-01-24T14:29:24.5455326Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5455402Z         """
2025-01-24T14:29:24.5455597Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5455673Z     
2025-01-24T14:29:24.5455748Z         Parameters
2025-01-24T14:29:24.5455828Z         ----------
2025-01-24T14:29:24.5455930Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5456085Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5456185Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5456326Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5456403Z     
2025-01-24T14:29:24.5456476Z         Returns
2025-01-24T14:29:24.5456558Z         -------
2025-01-24T14:29:24.5456645Z         SimulationPacketData
2025-01-24T14:29:24.5456729Z         """
2025-01-24T14:29:24.5456835Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5457017Z             raise ValueError(
2025-01-24T14:29:24.5457135Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5457243Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5457314Z             )
2025-01-24T14:29:24.5457424Z         # Properties common among both packet modes
2025-01-24T14:29:24.5457584Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5457663Z             "line_id"
2025-01-24T14:29:24.5457734Z         )
2025-01-24T14:29:24.5457847Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5457980Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5458064Z         time_of_simulation = (
2025-01-24T14:29:24.5458339Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5458418Z         )
2025-01-24T14:29:24.5458493Z     
2025-01-24T14:29:24.5458572Z         spectrum = (
2025-01-24T14:29:24.5458697Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5458790Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5458915Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5458987Z         )
2025-01-24T14:29:24.5459063Z     
2025-01-24T14:29:24.5459153Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5459280Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5459357Z             return cls(
2025-01-24T14:29:24.5459520Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5459820Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5460001Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5460174Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5460327Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5460420Z                 lines_df=lines_df,
2025-01-24T14:29:24.5460547Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5460707Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5460839Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5460959Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5461147Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5461265Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5461375Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5461472Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5461558Z                 simulation=sim,
2025-01-24T14:29:24.5461630Z             )
2025-01-24T14:29:24.5461718Z         else: # real packets
2025-01-24T14:29:24.5461887Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5461974Z             # which got emitted
2025-01-24T14:29:24.5462082Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5462164Z >           return cls(
2025-01-24T14:29:24.5462336Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5462529Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5462605Z                     mask
2025-01-24T14:29:24.5462683Z                 ],
2025-01-24T14:29:24.5462879Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5462954Z                     mask
2025-01-24T14:29:24.5463031Z                 ],
2025-01-24T14:29:24.5463200Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5463421Z                     mask
2025-01-24T14:29:24.5463492Z                 ],
2025-01-24T14:29:24.5463667Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5463750Z                 lines_df=lines_df,
2025-01-24T14:29:24.5463916Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5464092Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5464173Z                     mask
2025-01-24T14:29:24.5464244Z                 ],
2025-01-24T14:29:24.5464376Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5464499Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5464685Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5464798Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5464899Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5465003Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5465085Z                 simulation=sim,
2025-01-24T14:29:24.5465161Z             )
2025-01-24T14:29:24.5465491Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5465496Z 
2025-01-24T14:29:24.5465670Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5465871Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl3] _
2025-01-24T14:29:24.5465880Z 
2025-01-24T14:29:24.5466232Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5466455Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5466689Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5466693Z 
2025-01-24T14:29:24.5466791Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5466907Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5466982Z         """
2025-01-24T14:29:24.5467074Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5467150Z     
2025-01-24T14:29:24.5467226Z         Parameters
2025-01-24T14:29:24.5467306Z         ----------
2025-01-24T14:29:24.5467448Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5467536Z             Simulation object.
2025-01-24T14:29:24.5467606Z     
2025-01-24T14:29:24.5467689Z         Returns
2025-01-24T14:29:24.5467768Z         -------
2025-01-24T14:29:24.5467902Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5467978Z         """
2025-01-24T14:29:24.5468115Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5468120Z 
2025-01-24T14:29:24.5468391Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5468505Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5468676Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5468823Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5469042Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5469177Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5469292Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5469296Z 
2025-01-24T14:29:24.5469523Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5469690Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5469779Z packets_mode = 'real'
2025-01-24T14:29:24.5469783Z 
2025-01-24T14:29:24.5469858Z     @classmethod
2025-01-24T14:29:24.5469973Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5470168Z         """
2025-01-24T14:29:24.5470368Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5470439Z     
2025-01-24T14:29:24.5470519Z         Parameters
2025-01-24T14:29:24.5470597Z         ----------
2025-01-24T14:29:24.5470704Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5470856Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5470958Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5471103Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5471176Z     
2025-01-24T14:29:24.5471255Z         Returns
2025-01-24T14:29:24.5471332Z         -------
2025-01-24T14:29:24.5471429Z         SimulationPacketData
2025-01-24T14:29:24.5471501Z         """
2025-01-24T14:29:24.5471615Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5471701Z             raise ValueError(
2025-01-24T14:29:24.5471824Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5471932Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5472009Z             )
2025-01-24T14:29:24.5472115Z         # Properties common among both packet modes
2025-01-24T14:29:24.5472283Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5472358Z             "line_id"
2025-01-24T14:29:24.5472436Z         )
2025-01-24T14:29:24.5472552Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5472677Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5472770Z         time_of_simulation = (
2025-01-24T14:29:24.5473040Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5473121Z         )
2025-01-24T14:29:24.5473191Z     
2025-01-24T14:29:24.5473274Z         spectrum = (
2025-01-24T14:29:24.5473389Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5473486Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5473607Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5473685Z         )
2025-01-24T14:29:24.5473754Z     
2025-01-24T14:29:24.5473849Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5473972Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5474055Z             return cls(
2025-01-24T14:29:24.5474217Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5474397Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5474581Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5474750Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5474907Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5474992Z                 lines_df=lines_df,
2025-01-24T14:29:24.5475129Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5475284Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5475419Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5475534Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5475726Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5475840Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5475944Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5476049Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5476133Z                 simulation=sim,
2025-01-24T14:29:24.5476211Z             )
2025-01-24T14:29:24.5476293Z         else: # real packets
2025-01-24T14:29:24.5476466Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5476548Z             # which got emitted
2025-01-24T14:29:24.5476766Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5476844Z >           return cls(
2025-01-24T14:29:24.5477026Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5477211Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5477291Z                     mask
2025-01-24T14:29:24.5477364Z                 ],
2025-01-24T14:29:24.5477563Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5477643Z                     mask
2025-01-24T14:29:24.5477719Z                 ],
2025-01-24T14:29:24.5477890Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5477964Z                     mask
2025-01-24T14:29:24.5478040Z                 ],
2025-01-24T14:29:24.5478208Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5478407Z                 lines_df=lines_df,
2025-01-24T14:29:24.5478573Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5478752Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5478826Z                     mask
2025-01-24T14:29:24.5478903Z                 ],
2025-01-24T14:29:24.5479032Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5479156Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5479463Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5479577Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5479685Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5479783Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5479869Z                 simulation=sim,
2025-01-24T14:29:24.5479944Z             )
2025-01-24T14:29:24.5480285Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5480290Z 
2025-01-24T14:29:24.5480459Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5480671Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl4] _
2025-01-24T14:29:24.5480676Z 
2025-01-24T14:29:24.5480948Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5481161Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5481398Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5481403Z 
2025-01-24T14:29:24.5481493Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5481613Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5481687Z         """
2025-01-24T14:29:24.5481784Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5481854Z     
2025-01-24T14:29:24.5481935Z         Parameters
2025-01-24T14:29:24.5482009Z         ----------
2025-01-24T14:29:24.5482158Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5482242Z             Simulation object.
2025-01-24T14:29:24.5482320Z     
2025-01-24T14:29:24.5482393Z         Returns
2025-01-24T14:29:24.5482475Z         -------
2025-01-24T14:29:24.5482609Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5482679Z         """
2025-01-24T14:29:24.5482822Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5482826Z 
2025-01-24T14:29:24.5482977Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5483097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5483260Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5483532Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5483745Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5483885Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5483996Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5484006Z 
2025-01-24T14:29:24.5484223Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5484395Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5484481Z packets_mode = 'real'
2025-01-24T14:29:24.5484488Z 
2025-01-24T14:29:24.5484572Z     @classmethod
2025-01-24T14:29:24.5484682Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5484758Z         """
2025-01-24T14:29:24.5484952Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5485029Z     
2025-01-24T14:29:24.5485110Z         Parameters
2025-01-24T14:29:24.5485191Z         ----------
2025-01-24T14:29:24.5485291Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5485449Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5485553Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5485694Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5485771Z     
2025-01-24T14:29:24.5485844Z         Returns
2025-01-24T14:29:24.5485923Z         -------
2025-01-24T14:29:24.5486011Z         SimulationPacketData
2025-01-24T14:29:24.5486088Z         """
2025-01-24T14:29:24.5486277Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5486376Z             raise ValueError(
2025-01-24T14:29:24.5486496Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5486603Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5486675Z             )
2025-01-24T14:29:24.5486789Z         # Properties common among both packet modes
2025-01-24T14:29:24.5486950Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5487033Z             "line_id"
2025-01-24T14:29:24.5487106Z         )
2025-01-24T14:29:24.5487220Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5487355Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5487440Z         time_of_simulation = (
2025-01-24T14:29:24.5487605Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5487676Z         )
2025-01-24T14:29:24.5487753Z     
2025-01-24T14:29:24.5487835Z         spectrum = (
2025-01-24T14:29:24.5487956Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5488049Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5488171Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5488347Z         )
2025-01-24T14:29:24.5488430Z     
2025-01-24T14:29:24.5488521Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5488651Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5488731Z             return cls(
2025-01-24T14:29:24.5488896Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5489077Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5489254Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5489426Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5489585Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5489675Z                 lines_df=lines_df,
2025-01-24T14:29:24.5489805Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5489966Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5490236Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5490357Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5490545Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5490662Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5490772Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5501018Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5501145Z                 simulation=sim,
2025-01-24T14:29:24.5501223Z             )
2025-01-24T14:29:24.5501328Z         else: # real packets
2025-01-24T14:29:24.5501521Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5501610Z             # which got emitted
2025-01-24T14:29:24.5501732Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5501818Z >           return cls(
2025-01-24T14:29:24.5502015Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5502207Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5502289Z                     mask
2025-01-24T14:29:24.5502363Z                 ],
2025-01-24T14:29:24.5502559Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5502632Z                     mask
2025-01-24T14:29:24.5502710Z                 ],
2025-01-24T14:29:24.5502882Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5503129Z                     mask
2025-01-24T14:29:24.5503206Z                 ],
2025-01-24T14:29:24.5503384Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5503469Z                 lines_df=lines_df,
2025-01-24T14:29:24.5503644Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5503831Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5503906Z                     mask
2025-01-24T14:29:24.5503981Z                 ],
2025-01-24T14:29:24.5504117Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5504243Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5504436Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5504558Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5504669Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5504774Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5504856Z                 simulation=sim,
2025-01-24T14:29:24.5504936Z             )
2025-01-24T14:29:24.5505274Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5505289Z 
2025-01-24T14:29:24.5505467Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5505683Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl5] _
2025-01-24T14:29:24.5505688Z 
2025-01-24T14:29:24.5505957Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5506175Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5506409Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5506414Z 
2025-01-24T14:29:24.5506518Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5506644Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5506722Z         """
2025-01-24T14:29:24.5506819Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5506891Z     
2025-01-24T14:29:24.5506974Z         Parameters
2025-01-24T14:29:24.5507170Z         ----------
2025-01-24T14:29:24.5507328Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5507413Z             Simulation object.
2025-01-24T14:29:24.5507488Z     
2025-01-24T14:29:24.5507561Z         Returns
2025-01-24T14:29:24.5507642Z         -------
2025-01-24T14:29:24.5507778Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5507855Z         """
2025-01-24T14:29:24.5507989Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5507994Z 
2025-01-24T14:29:24.5508149Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5508391Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5508569Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5508726Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5508945Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5509090Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5509202Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5509206Z 
2025-01-24T14:29:24.5509430Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5509601Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5509689Z packets_mode = 'real'
2025-01-24T14:29:24.5509693Z 
2025-01-24T14:29:24.5509769Z     @classmethod
2025-01-24T14:29:24.5509891Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5510075Z         """
2025-01-24T14:29:24.5510285Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5510362Z     
2025-01-24T14:29:24.5510440Z         Parameters
2025-01-24T14:29:24.5510522Z         ----------
2025-01-24T14:29:24.5510626Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5510790Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5510886Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5511031Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5511101Z     
2025-01-24T14:29:24.5511179Z         Returns
2025-01-24T14:29:24.5511254Z         -------
2025-01-24T14:29:24.5511347Z         SimulationPacketData
2025-01-24T14:29:24.5511421Z         """
2025-01-24T14:29:24.5511534Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5511618Z             raise ValueError(
2025-01-24T14:29:24.5511750Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5511863Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5511933Z             )
2025-01-24T14:29:24.5512049Z         # Properties common among both packet modes
2025-01-24T14:29:24.5512213Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5512296Z             "line_id"
2025-01-24T14:29:24.5512374Z         )
2025-01-24T14:29:24.5512485Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5512617Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5512702Z         time_of_simulation = (
2025-01-24T14:29:24.5512864Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5512934Z         )
2025-01-24T14:29:24.5513008Z     
2025-01-24T14:29:24.5513086Z         spectrum = (
2025-01-24T14:29:24.5513208Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5513302Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5513426Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5513500Z         )
2025-01-24T14:29:24.5513575Z     
2025-01-24T14:29:24.5513664Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5513797Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5513998Z             return cls(
2025-01-24T14:29:24.5514159Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5514340Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5514517Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5514688Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5514838Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5514932Z                 lines_df=lines_df,
2025-01-24T14:29:24.5515065Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5515224Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5515357Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5515480Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5515677Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5515787Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5515897Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5515996Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5516084Z                 simulation=sim,
2025-01-24T14:29:24.5516155Z             )
2025-01-24T14:29:24.5516244Z         else: # real packets
2025-01-24T14:29:24.5516416Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5516601Z             # which got emitted
2025-01-24T14:29:24.5516714Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5516798Z >           return cls(
2025-01-24T14:29:24.5516973Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5517161Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5517245Z                     mask
2025-01-24T14:29:24.5517317Z                 ],
2025-01-24T14:29:24.5517512Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5517587Z                     mask
2025-01-24T14:29:24.5517662Z                 ],
2025-01-24T14:29:24.5517832Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5517911Z                     mask
2025-01-24T14:29:24.5517980Z                 ],
2025-01-24T14:29:24.5518156Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5518345Z                 lines_df=lines_df,
2025-01-24T14:29:24.5518517Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5518690Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5518773Z                     mask
2025-01-24T14:29:24.5518844Z                 ],
2025-01-24T14:29:24.5518978Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5519099Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5519283Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5519397Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5519496Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5519598Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5519680Z                 simulation=sim,
2025-01-24T14:29:24.5519759Z             )
2025-01-24T14:29:24.5520096Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5520101Z 
2025-01-24T14:29:24.5520284Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5520614Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl6] _
2025-01-24T14:29:24.5520619Z 
2025-01-24T14:29:24.5520889Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5521106Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5521343Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5521347Z 
2025-01-24T14:29:24.5521442Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5521558Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5521638Z         """
2025-01-24T14:29:24.5521727Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5521801Z     
2025-01-24T14:29:24.5521876Z         Parameters
2025-01-24T14:29:24.5521956Z         ----------
2025-01-24T14:29:24.5522099Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5522189Z             Simulation object.
2025-01-24T14:29:24.5522267Z     
2025-01-24T14:29:24.5522340Z         Returns
2025-01-24T14:29:24.5522422Z         -------
2025-01-24T14:29:24.5522552Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5522627Z         """
2025-01-24T14:29:24.5522760Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5522765Z 
2025-01-24T14:29:24.5522912Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5523024Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5523192Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5523473Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5523697Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5523835Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5523946Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5523953Z 
2025-01-24T14:29:24.5524171Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5524340Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5524427Z packets_mode = 'real'
2025-01-24T14:29:24.5524431Z 
2025-01-24T14:29:24.5524506Z     @classmethod
2025-01-24T14:29:24.5524625Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5524696Z         """
2025-01-24T14:29:24.5524896Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5524966Z     
2025-01-24T14:29:24.5525049Z         Parameters
2025-01-24T14:29:24.5525124Z         ----------
2025-01-24T14:29:24.5525230Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5525384Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5525476Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5525623Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5525693Z     
2025-01-24T14:29:24.5525770Z         Returns
2025-01-24T14:29:24.5525843Z         -------
2025-01-24T14:29:24.5525934Z         SimulationPacketData
2025-01-24T14:29:24.5526005Z         """
2025-01-24T14:29:24.5526114Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5526198Z             raise ValueError(
2025-01-24T14:29:24.5526318Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5526420Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5526496Z             )
2025-01-24T14:29:24.5526606Z         # Properties common among both packet modes
2025-01-24T14:29:24.5526771Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5526852Z             "line_id"
2025-01-24T14:29:24.5526922Z         )
2025-01-24T14:29:24.5527035Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5527248Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5527337Z         time_of_simulation = (
2025-01-24T14:29:24.5527490Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5527565Z         )
2025-01-24T14:29:24.5527637Z     
2025-01-24T14:29:24.5527719Z         spectrum = (
2025-01-24T14:29:24.5527832Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5527927Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5528045Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5528120Z         )
2025-01-24T14:29:24.5528193Z     
2025-01-24T14:29:24.5528387Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5528510Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5528592Z             return cls(
2025-01-24T14:29:24.5528754Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5528928Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5529109Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5529276Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5529460Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5529546Z                 lines_df=lines_df,
2025-01-24T14:29:24.5529679Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5529949Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5530087Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5530202Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5530397Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5530515Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5530619Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5530721Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5530803Z                 simulation=sim,
2025-01-24T14:29:24.5530878Z             )
2025-01-24T14:29:24.5530959Z         else: # real packets
2025-01-24T14:29:24.5531127Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5531207Z             # which got emitted
2025-01-24T14:29:24.5531319Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5531395Z >           return cls(
2025-01-24T14:29:24.5531575Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5531759Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5531840Z                     mask
2025-01-24T14:29:24.5531915Z                 ],
2025-01-24T14:29:24.5532110Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5532188Z                     mask
2025-01-24T14:29:24.5532258Z                 ],
2025-01-24T14:29:24.5532432Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5532507Z                     mask
2025-01-24T14:29:24.5532583Z                 ],
2025-01-24T14:29:24.5532749Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5532836Z                 lines_df=lines_df,
2025-01-24T14:29:24.5533000Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5533179Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5533254Z                     mask
2025-01-24T14:29:24.5533332Z                 ],
2025-01-24T14:29:24.5533464Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5533704Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5533896Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5534005Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5534109Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5534205Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5534291Z                 simulation=sim,
2025-01-24T14:29:24.5534361Z             )
2025-01-24T14:29:24.5534701Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5534706Z 
2025-01-24T14:29:24.5534878Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5535091Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl7] _
2025-01-24T14:29:24.5535096Z 
2025-01-24T14:29:24.5535369Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5535590Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5535824Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5535828Z 
2025-01-24T14:29:24.5535922Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5536037Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5536114Z         """
2025-01-24T14:29:24.5536204Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5536278Z     
2025-01-24T14:29:24.5536356Z         Parameters
2025-01-24T14:29:24.5536518Z         ----------
2025-01-24T14:29:24.5536664Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5536752Z             Simulation object.
2025-01-24T14:29:24.5536821Z     
2025-01-24T14:29:24.5536897Z         Returns
2025-01-24T14:29:24.5536969Z         -------
2025-01-24T14:29:24.5537109Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5537190Z         """
2025-01-24T14:29:24.5537326Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5537330Z 
2025-01-24T14:29:24.5537477Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5537589Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5537753Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5537900Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5538124Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5538358Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5538474Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5538478Z 
2025-01-24T14:29:24.5538698Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5538868Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5538953Z packets_mode = 'real'
2025-01-24T14:29:24.5538957Z 
2025-01-24T14:29:24.5539032Z     @classmethod
2025-01-24T14:29:24.5539146Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5539217Z         """
2025-01-24T14:29:24.5539414Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5539484Z     
2025-01-24T14:29:24.5539564Z         Parameters
2025-01-24T14:29:24.5539639Z         ----------
2025-01-24T14:29:24.5539745Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5539901Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5540000Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5540139Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5540214Z     
2025-01-24T14:29:24.5540413Z         Returns
2025-01-24T14:29:24.5540488Z         -------
2025-01-24T14:29:24.5540580Z         SimulationPacketData
2025-01-24T14:29:24.5540650Z         """
2025-01-24T14:29:24.5540761Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5540848Z             raise ValueError(
2025-01-24T14:29:24.5540969Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5541072Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5541148Z             )
2025-01-24T14:29:24.5541254Z         # Properties common among both packet modes
2025-01-24T14:29:24.5541424Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5541498Z             "line_id"
2025-01-24T14:29:24.5541574Z         )
2025-01-24T14:29:24.5541683Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5541813Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5541903Z         time_of_simulation = (
2025-01-24T14:29:24.5542067Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5542143Z         )
2025-01-24T14:29:24.5542213Z     
2025-01-24T14:29:24.5542293Z         spectrum = (
2025-01-24T14:29:24.5542409Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5542502Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5542620Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5542696Z         )
2025-01-24T14:29:24.5542765Z     
2025-01-24T14:29:24.5542863Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5542985Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5543191Z             return cls(
2025-01-24T14:29:24.5543352Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5543528Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5543712Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5543884Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5544039Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5544121Z                 lines_df=lines_df,
2025-01-24T14:29:24.5544253Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5544407Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5544539Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5544655Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5544850Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5544959Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5545066Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5545170Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5545251Z                 simulation=sim,
2025-01-24T14:29:24.5545326Z             )
2025-01-24T14:29:24.5545407Z         else: # real packets
2025-01-24T14:29:24.5545578Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5545658Z             # which got emitted
2025-01-24T14:29:24.5545771Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5545846Z >           return cls(
2025-01-24T14:29:24.5546025Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5546212Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5546293Z                     mask
2025-01-24T14:29:24.5546363Z                 ],
2025-01-24T14:29:24.5546562Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5546637Z                     mask
2025-01-24T14:29:24.5546801Z                 ],
2025-01-24T14:29:24.5546972Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5547045Z                     mask
2025-01-24T14:29:24.5547120Z                 ],
2025-01-24T14:29:24.5547284Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5547374Z                 lines_df=lines_df,
2025-01-24T14:29:24.5547537Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5547715Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5547793Z                     mask
2025-01-24T14:29:24.5547870Z                 ],
2025-01-24T14:29:24.5547996Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5548117Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5548406Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5548526Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5548629Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5548725Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5548809Z                 simulation=sim,
2025-01-24T14:29:24.5548880Z             )
2025-01-24T14:29:24.5549216Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5549221Z 
2025-01-24T14:29:24.5549394Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5549744Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl8] _
2025-01-24T14:29:24.5549751Z 
2025-01-24T14:29:24.5550021Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5550239Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5550479Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5550484Z 
2025-01-24T14:29:24.5550574Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5550694Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5550764Z         """
2025-01-24T14:29:24.5550858Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5550927Z     
2025-01-24T14:29:24.5551011Z         Parameters
2025-01-24T14:29:24.5551085Z         ----------
2025-01-24T14:29:24.5551231Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5551315Z             Simulation object.
2025-01-24T14:29:24.5551391Z     
2025-01-24T14:29:24.5551463Z         Returns
2025-01-24T14:29:24.5551542Z         -------
2025-01-24T14:29:24.5551670Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5551746Z         """
2025-01-24T14:29:24.5551884Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5551891Z 
2025-01-24T14:29:24.5552034Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5552153Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5552314Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5552468Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5552681Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5552818Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5552930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5552934Z 
2025-01-24T14:29:24.5553155Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5553329Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5553411Z packets_mode = 'real'
2025-01-24T14:29:24.5553532Z 
2025-01-24T14:29:24.5553614Z     @classmethod
2025-01-24T14:29:24.5553725Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5553801Z         """
2025-01-24T14:29:24.5553994Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5554069Z     
2025-01-24T14:29:24.5554144Z         Parameters
2025-01-24T14:29:24.5554222Z         ----------
2025-01-24T14:29:24.5554322Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5554474Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5554569Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5554712Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5554785Z     
2025-01-24T14:29:24.5554864Z         Returns
2025-01-24T14:29:24.5554942Z         -------
2025-01-24T14:29:24.5555029Z         SimulationPacketData
2025-01-24T14:29:24.5555103Z         """
2025-01-24T14:29:24.5555213Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5555305Z             raise ValueError(
2025-01-24T14:29:24.5555420Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5555528Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5555600Z             )
2025-01-24T14:29:24.5555712Z         # Properties common among both packet modes
2025-01-24T14:29:24.5555871Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5555951Z             "line_id"
2025-01-24T14:29:24.5556022Z         )
2025-01-24T14:29:24.5556219Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5556347Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5556436Z         time_of_simulation = (
2025-01-24T14:29:24.5556595Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5556666Z         )
2025-01-24T14:29:24.5556740Z     
2025-01-24T14:29:24.5556821Z         spectrum = (
2025-01-24T14:29:24.5556941Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5557029Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5557151Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5557221Z         )
2025-01-24T14:29:24.5557296Z     
2025-01-24T14:29:24.5557386Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5557512Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5557589Z             return cls(
2025-01-24T14:29:24.5557751Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5557923Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5558104Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5558382Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5558539Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5558627Z                 lines_df=lines_df,
2025-01-24T14:29:24.5558753Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5558912Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5559040Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5559158Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5559347Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5559464Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5559567Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5559671Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5559758Z                 simulation=sim,
2025-01-24T14:29:24.5559832Z             )
2025-01-24T14:29:24.5560041Z         else: # real packets
2025-01-24T14:29:24.5560209Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5560294Z             # which got emitted
2025-01-24T14:29:24.5560402Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5560487Z >           return cls(
2025-01-24T14:29:24.5560660Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5560848Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5560923Z                     mask
2025-01-24T14:29:24.5561004Z                 ],
2025-01-24T14:29:24.5561194Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5561272Z                     mask
2025-01-24T14:29:24.5561343Z                 ],
2025-01-24T14:29:24.5561515Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5561597Z                     mask
2025-01-24T14:29:24.5561668Z                 ],
2025-01-24T14:29:24.5561838Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5561920Z                 lines_df=lines_df,
2025-01-24T14:29:24.5562086Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5562265Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5562344Z                     mask
2025-01-24T14:29:24.5562414Z                 ],
2025-01-24T14:29:24.5562659Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5562779Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5562970Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5563083Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5563183Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5563286Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5563367Z                 simulation=sim,
2025-01-24T14:29:24.5563444Z             )
2025-01-24T14:29:24.5563775Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5563780Z 
2025-01-24T14:29:24.5563954Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5564157Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl9] _
2025-01-24T14:29:24.5564161Z 
2025-01-24T14:29:24.5564443Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5564661Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5564893Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5564900Z 
2025-01-24T14:29:24.5564995Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5565110Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5565186Z         """
2025-01-24T14:29:24.5565275Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5565349Z     
2025-01-24T14:29:24.5565424Z         Parameters
2025-01-24T14:29:24.5565502Z         ----------
2025-01-24T14:29:24.5565643Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5565731Z             Simulation object.
2025-01-24T14:29:24.5565800Z     
2025-01-24T14:29:24.5565879Z         Returns
2025-01-24T14:29:24.5565952Z         -------
2025-01-24T14:29:24.5566089Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5566160Z         """
2025-01-24T14:29:24.5566299Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5566304Z 
2025-01-24T14:29:24.5566452Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5566656Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5566822Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5566972Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5567190Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5567323Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5567435Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5567440Z 
2025-01-24T14:29:24.5567658Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5567829Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5567917Z packets_mode = 'real'
2025-01-24T14:29:24.5567921Z 
2025-01-24T14:29:24.5567996Z     @classmethod
2025-01-24T14:29:24.5568112Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5568186Z         """
2025-01-24T14:29:24.5568488Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5568558Z     
2025-01-24T14:29:24.5568638Z         Parameters
2025-01-24T14:29:24.5568712Z         ----------
2025-01-24T14:29:24.5568815Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5568962Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5569061Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5569199Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5569273Z     
2025-01-24T14:29:24.5569464Z         Returns
2025-01-24T14:29:24.5569541Z         -------
2025-01-24T14:29:24.5569634Z         SimulationPacketData
2025-01-24T14:29:24.5569704Z         """
2025-01-24T14:29:24.5569814Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5569897Z             raise ValueError(
2025-01-24T14:29:24.5570019Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5570127Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5570202Z             )
2025-01-24T14:29:24.5570309Z         # Properties common among both packet modes
2025-01-24T14:29:24.5570475Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5570549Z             "line_id"
2025-01-24T14:29:24.5570628Z         )
2025-01-24T14:29:24.5570735Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5570866Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5570950Z         time_of_simulation = (
2025-01-24T14:29:24.5571113Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5571190Z         )
2025-01-24T14:29:24.5571261Z     
2025-01-24T14:29:24.5571343Z         spectrum = (
2025-01-24T14:29:24.5571457Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5571558Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5571677Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5571753Z         )
2025-01-24T14:29:24.5571823Z     
2025-01-24T14:29:24.5571921Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5572044Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5572124Z             return cls(
2025-01-24T14:29:24.5572281Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5572458Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5572639Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5572813Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5572967Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5573051Z                 lines_df=lines_df,
2025-01-24T14:29:24.5573321Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5573476Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5573610Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5573724Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5573918Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5574025Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5574132Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5574231Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5574319Z                 simulation=sim,
2025-01-24T14:29:24.5574395Z             )
2025-01-24T14:29:24.5574478Z         else: # real packets
2025-01-24T14:29:24.5574649Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5574732Z             # which got emitted
2025-01-24T14:29:24.5574844Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5574922Z >           return cls(
2025-01-24T14:29:24.5575100Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5575284Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5575363Z                     mask
2025-01-24T14:29:24.5575434Z                 ],
2025-01-24T14:29:24.5575627Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5575781Z                     mask
2025-01-24T14:29:24.5575861Z                 ],
2025-01-24T14:29:24.5576032Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5576108Z                     mask
2025-01-24T14:29:24.5576186Z                 ],
2025-01-24T14:29:24.5576351Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5576441Z                 lines_df=lines_df,
2025-01-24T14:29:24.5576604Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5576784Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5576857Z                     mask
2025-01-24T14:29:24.5576941Z                 ],
2025-01-24T14:29:24.5577066Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5577186Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5577374Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5577487Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5577593Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5577692Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5577777Z                 simulation=sim,
2025-01-24T14:29:24.5577851Z             )
2025-01-24T14:29:24.5578189Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5578194Z 
2025-01-24T14:29:24.5578463Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5578681Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl10] _
2025-01-24T14:29:24.5578685Z 
2025-01-24T14:29:24.5578951Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5579170Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5579410Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5579414Z 
2025-01-24T14:29:24.5579504Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5579623Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5579817Z         """
2025-01-24T14:29:24.5579910Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5579980Z     
2025-01-24T14:29:24.5580059Z         Parameters
2025-01-24T14:29:24.5580132Z         ----------
2025-01-24T14:29:24.5580276Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5580358Z             Simulation object.
2025-01-24T14:29:24.5580433Z     
2025-01-24T14:29:24.5580505Z         Returns
2025-01-24T14:29:24.5580582Z         -------
2025-01-24T14:29:24.5580712Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5580817Z         """
2025-01-24T14:29:24.5580964Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5580969Z 
2025-01-24T14:29:24.5581111Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5581229Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5581390Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5581545Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5581759Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5581897Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5582019Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5582024Z 
2025-01-24T14:29:24.5582250Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5582420Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5582632Z packets_mode = 'real'
2025-01-24T14:29:24.5582637Z 
2025-01-24T14:29:24.5582718Z     @classmethod
2025-01-24T14:29:24.5582828Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5582904Z         """
2025-01-24T14:29:24.5583098Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5583177Z     
2025-01-24T14:29:24.5583251Z         Parameters
2025-01-24T14:29:24.5583331Z         ----------
2025-01-24T14:29:24.5583431Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5583585Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5583678Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5583823Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5583894Z     
2025-01-24T14:29:24.5583971Z         Returns
2025-01-24T14:29:24.5584049Z         -------
2025-01-24T14:29:24.5584135Z         SimulationPacketData
2025-01-24T14:29:24.5584215Z         """
2025-01-24T14:29:24.5584324Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5584412Z             raise ValueError(
2025-01-24T14:29:24.5584529Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5584637Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5584712Z             )
2025-01-24T14:29:24.5584822Z         # Properties common among both packet modes
2025-01-24T14:29:24.5584980Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5585059Z             "line_id"
2025-01-24T14:29:24.5585130Z         )
2025-01-24T14:29:24.5585243Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5585367Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5585457Z         time_of_simulation = (
2025-01-24T14:29:24.5585621Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5585692Z         )
2025-01-24T14:29:24.5585771Z     
2025-01-24T14:29:24.5585848Z         spectrum = (
2025-01-24T14:29:24.5585969Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5586059Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5586179Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5586250Z         )
2025-01-24T14:29:24.5586415Z     
2025-01-24T14:29:24.5586505Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5586631Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5586707Z             return cls(
2025-01-24T14:29:24.5586871Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5587042Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5587223Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5587399Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5587550Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5587639Z                 lines_df=lines_df,
2025-01-24T14:29:24.5587768Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5587925Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5588057Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5588178Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5588507Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5588621Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5588724Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5588825Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5588911Z                 simulation=sim,
2025-01-24T14:29:24.5589099Z             )
2025-01-24T14:29:24.5589190Z         else: # real packets
2025-01-24T14:29:24.5589355Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5589439Z             # which got emitted
2025-01-24T14:29:24.5589546Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5589628Z >           return cls(
2025-01-24T14:29:24.5589802Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5589990Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5590065Z                     mask
2025-01-24T14:29:24.5590141Z                 ],
2025-01-24T14:29:24.5590331Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5590411Z                     mask
2025-01-24T14:29:24.5590483Z                 ],
2025-01-24T14:29:24.5590657Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5590736Z                     mask
2025-01-24T14:29:24.5590807Z                 ],
2025-01-24T14:29:24.5590977Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5591060Z                 lines_df=lines_df,
2025-01-24T14:29:24.5591227Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5591404Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5591482Z                     mask
2025-01-24T14:29:24.5591554Z                 ],
2025-01-24T14:29:24.5591689Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5591804Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5591993Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5592101Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5592208Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5592310Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5592390Z                 simulation=sim,
2025-01-24T14:29:24.5592468Z             )
2025-01-24T14:29:24.5592799Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5592919Z 
2025-01-24T14:29:24.5593095Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5593302Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl11] _
2025-01-24T14:29:24.5593307Z 
2025-01-24T14:29:24.5593575Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5593786Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5594022Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5594030Z 
2025-01-24T14:29:24.5594126Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5594240Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5594318Z         """
2025-01-24T14:29:24.5594407Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5594483Z     
2025-01-24T14:29:24.5594562Z         Parameters
2025-01-24T14:29:24.5594643Z         ----------
2025-01-24T14:29:24.5594783Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5594869Z             Simulation object.
2025-01-24T14:29:24.5594939Z     
2025-01-24T14:29:24.5595017Z         Returns
2025-01-24T14:29:24.5595091Z         -------
2025-01-24T14:29:24.5595225Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5595297Z         """
2025-01-24T14:29:24.5595437Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5595441Z 
2025-01-24T14:29:24.5595588Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5595785Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5595954Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5596105Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5596323Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5596460Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5596573Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5596578Z 
2025-01-24T14:29:24.5596792Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5596965Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5597050Z packets_mode = 'real'
2025-01-24T14:29:24.5597055Z 
2025-01-24T14:29:24.5597128Z     @classmethod
2025-01-24T14:29:24.5597246Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5597318Z         """
2025-01-24T14:29:24.5597516Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5597587Z     
2025-01-24T14:29:24.5597667Z         Parameters
2025-01-24T14:29:24.5597740Z         ----------
2025-01-24T14:29:24.5597843Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5597996Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5598092Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5598330Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5598407Z     
2025-01-24T14:29:24.5598479Z         Returns
2025-01-24T14:29:24.5598557Z         -------
2025-01-24T14:29:24.5598649Z         SimulationPacketData
2025-01-24T14:29:24.5598720Z         """
2025-01-24T14:29:24.5598831Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5598914Z             raise ValueError(
2025-01-24T14:29:24.5599041Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5599143Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5599219Z             )
2025-01-24T14:29:24.5599328Z         # Properties common among both packet modes
2025-01-24T14:29:24.5599492Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5599710Z             "line_id"
2025-01-24T14:29:24.5599786Z         )
2025-01-24T14:29:24.5599895Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5600025Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5600110Z         time_of_simulation = (
2025-01-24T14:29:24.5600271Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5600347Z         )
2025-01-24T14:29:24.5600417Z     
2025-01-24T14:29:24.5600497Z         spectrum = (
2025-01-24T14:29:24.5600610Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5600708Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5600824Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5600900Z         )
2025-01-24T14:29:24.5600971Z     
2025-01-24T14:29:24.5601064Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5601187Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5601271Z             return cls(
2025-01-24T14:29:24.5601430Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5601606Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5601780Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5601953Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5602108Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5602305Z                 lines_df=lines_df,
2025-01-24T14:29:24.5602441Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5602594Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5602728Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5602848Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5603038Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5603146Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5603254Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5603349Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5603437Z                 simulation=sim,
2025-01-24T14:29:24.5603519Z             )
2025-01-24T14:29:24.5603602Z         else: # real packets
2025-01-24T14:29:24.5603774Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5603855Z             # which got emitted
2025-01-24T14:29:24.5603967Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5604044Z >           return cls(
2025-01-24T14:29:24.5604222Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5604410Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5604490Z                     mask
2025-01-24T14:29:24.5604561Z                 ],
2025-01-24T14:29:24.5604755Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5604829Z                     mask
2025-01-24T14:29:24.5604908Z                 ],
2025-01-24T14:29:24.5605075Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5605154Z                     mask
2025-01-24T14:29:24.5605230Z                 ],
2025-01-24T14:29:24.5605397Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5605484Z                 lines_df=lines_df,
2025-01-24T14:29:24.5605646Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5605826Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5605989Z                     mask
2025-01-24T14:29:24.5606065Z                 ],
2025-01-24T14:29:24.5606191Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5606311Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5606504Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5606618Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5606722Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5606816Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5606904Z                 simulation=sim,
2025-01-24T14:29:24.5606978Z             )
2025-01-24T14:29:24.5607318Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5607323Z 
2025-01-24T14:29:24.5607492Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5607705Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl12] _
2025-01-24T14:29:24.5607710Z 
2025-01-24T14:29:24.5607974Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5608192Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5608539Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5608544Z 
2025-01-24T14:29:24.5608634Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5608868Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5608942Z         """
2025-01-24T14:29:24.5609036Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5609106Z     
2025-01-24T14:29:24.5609188Z         Parameters
2025-01-24T14:29:24.5609262Z         ----------
2025-01-24T14:29:24.5609408Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5609493Z             Simulation object.
2025-01-24T14:29:24.5609571Z     
2025-01-24T14:29:24.5609644Z         Returns
2025-01-24T14:29:24.5609722Z         -------
2025-01-24T14:29:24.5609850Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5609925Z         """
2025-01-24T14:29:24.5610059Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5610068Z 
2025-01-24T14:29:24.5610209Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5610326Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5610490Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5610641Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5610853Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5610992Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5611103Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5611107Z 
2025-01-24T14:29:24.5611328Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5611495Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5611581Z packets_mode = 'real'
2025-01-24T14:29:24.5611586Z 
2025-01-24T14:29:24.5611669Z     @classmethod
2025-01-24T14:29:24.5611779Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5611855Z         """
2025-01-24T14:29:24.5612047Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5612125Z     
2025-01-24T14:29:24.5612202Z         Parameters
2025-01-24T14:29:24.5612282Z         ----------
2025-01-24T14:29:24.5612381Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5612533Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5612623Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5612891Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5612962Z     
2025-01-24T14:29:24.5613040Z         Returns
2025-01-24T14:29:24.5613112Z         -------
2025-01-24T14:29:24.5613207Z         SimulationPacketData
2025-01-24T14:29:24.5613282Z         """
2025-01-24T14:29:24.5613388Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5613475Z             raise ValueError(
2025-01-24T14:29:24.5613590Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5613698Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5613773Z             )
2025-01-24T14:29:24.5613885Z         # Properties common among both packet modes
2025-01-24T14:29:24.5614045Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5614125Z             "line_id"
2025-01-24T14:29:24.5614195Z         )
2025-01-24T14:29:24.5614314Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5614437Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5614528Z         time_of_simulation = (
2025-01-24T14:29:24.5614682Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5614758Z         )
2025-01-24T14:29:24.5614836Z     
2025-01-24T14:29:24.5614913Z         spectrum = (
2025-01-24T14:29:24.5615033Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5615123Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5615244Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5615398Z         )
2025-01-24T14:29:24.5615477Z     
2025-01-24T14:29:24.5615567Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5615694Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5615770Z             return cls(
2025-01-24T14:29:24.5615932Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5616109Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5616291Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5616457Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5616615Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5616704Z                 lines_df=lines_df,
2025-01-24T14:29:24.5616831Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5616994Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5617122Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5617246Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5617431Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5617547Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5617650Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5617752Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5617840Z                 simulation=sim,
2025-01-24T14:29:24.5617916Z             )
2025-01-24T14:29:24.5618004Z         else: # real packets
2025-01-24T14:29:24.5618169Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5618379Z             # which got emitted
2025-01-24T14:29:24.5618491Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5618575Z >           return cls(
2025-01-24T14:29:24.5618748Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5618936Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5619011Z                     mask
2025-01-24T14:29:24.5619210Z                 ],
2025-01-24T14:29:24.5619402Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5619481Z                     mask
2025-01-24T14:29:24.5619555Z                 ],
2025-01-24T14:29:24.5619725Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5619805Z                     mask
2025-01-24T14:29:24.5619876Z                 ],
2025-01-24T14:29:24.5620045Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5620129Z                 lines_df=lines_df,
2025-01-24T14:29:24.5620299Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5620474Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5620553Z                     mask
2025-01-24T14:29:24.5620623Z                 ],
2025-01-24T14:29:24.5620755Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5620873Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5621064Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5621172Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5621277Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5621379Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5621460Z                 simulation=sim,
2025-01-24T14:29:24.5621535Z             )
2025-01-24T14:29:24.5621998Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5622004Z 
2025-01-24T14:29:24.5622182Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5622389Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl13] _
2025-01-24T14:29:24.5622393Z 
2025-01-24T14:29:24.5622667Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5622881Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5623122Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5623126Z 
2025-01-24T14:29:24.5623221Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5623336Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5623413Z         """
2025-01-24T14:29:24.5623502Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5623576Z     
2025-01-24T14:29:24.5623654Z         Parameters
2025-01-24T14:29:24.5623733Z         ----------
2025-01-24T14:29:24.5623874Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5623963Z             Simulation object.
2025-01-24T14:29:24.5624032Z     
2025-01-24T14:29:24.5624113Z         Returns
2025-01-24T14:29:24.5624189Z         -------
2025-01-24T14:29:24.5624323Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5624395Z         """
2025-01-24T14:29:24.5624534Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5624538Z 
2025-01-24T14:29:24.5624684Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5624797Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5624963Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5625111Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5625333Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5625466Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5625579Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5625584Z 
2025-01-24T14:29:24.5625796Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5626057Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5626145Z packets_mode = 'real'
2025-01-24T14:29:24.5626149Z 
2025-01-24T14:29:24.5626224Z     @classmethod
2025-01-24T14:29:24.5626338Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5626409Z         """
2025-01-24T14:29:24.5626610Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5626680Z     
2025-01-24T14:29:24.5626764Z         Parameters
2025-01-24T14:29:24.5626837Z         ----------
2025-01-24T14:29:24.5626944Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5627094Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5627195Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5627333Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5627412Z     
2025-01-24T14:29:24.5627483Z         Returns
2025-01-24T14:29:24.5627562Z         -------
2025-01-24T14:29:24.5627654Z         SimulationPacketData
2025-01-24T14:29:24.5627724Z         """
2025-01-24T14:29:24.5627834Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5627917Z             raise ValueError(
2025-01-24T14:29:24.5628039Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5628145Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5628341Z             )
2025-01-24T14:29:24.5628451Z         # Properties common among both packet modes
2025-01-24T14:29:24.5628734Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5628811Z             "line_id"
2025-01-24T14:29:24.5628891Z         )
2025-01-24T14:29:24.5628999Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5629130Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5629218Z         time_of_simulation = (
2025-01-24T14:29:24.5629377Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5629485Z         )
2025-01-24T14:29:24.5629559Z     
2025-01-24T14:29:24.5629641Z         spectrum = (
2025-01-24T14:29:24.5629753Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5629847Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5629963Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5630038Z         )
2025-01-24T14:29:24.5630108Z     
2025-01-24T14:29:24.5630202Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5630328Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5630411Z             return cls(
2025-01-24T14:29:24.5630570Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5630748Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5630927Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5631099Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5631253Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5631338Z                 lines_df=lines_df,
2025-01-24T14:29:24.5631476Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5631629Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5631762Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5631879Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5632071Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5632180Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5632291Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5632506Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5632592Z                 simulation=sim,
2025-01-24T14:29:24.5632663Z             )
2025-01-24T14:29:24.5632750Z         else: # real packets
2025-01-24T14:29:24.5632920Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5633002Z             # which got emitted
2025-01-24T14:29:24.5633114Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5633191Z >           return cls(
2025-01-24T14:29:24.5633371Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5633555Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5633634Z                     mask
2025-01-24T14:29:24.5633705Z                 ],
2025-01-24T14:29:24.5633901Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5633979Z                     mask
2025-01-24T14:29:24.5634057Z                 ],
2025-01-24T14:29:24.5634223Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5634304Z                     mask
2025-01-24T14:29:24.5634382Z                 ],
2025-01-24T14:29:24.5634547Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5634634Z                 lines_df=lines_df,
2025-01-24T14:29:24.5634795Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5635054Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5635131Z                     mask
2025-01-24T14:29:24.5635209Z                 ],
2025-01-24T14:29:24.5635337Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5635458Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5635646Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5635759Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5635858Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5635958Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5636044Z                 simulation=sim,
2025-01-24T14:29:24.5636115Z             )
2025-01-24T14:29:24.5636448Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5636453Z 
2025-01-24T14:29:24.5636625Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5636835Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl14] _
2025-01-24T14:29:24.5636840Z 
2025-01-24T14:29:24.5637110Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5637326Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5637565Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5637569Z 
2025-01-24T14:29:24.5637659Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5637779Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5637851Z         """
2025-01-24T14:29:24.5637944Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5638013Z     
2025-01-24T14:29:24.5638095Z         Parameters
2025-01-24T14:29:24.5638170Z         ----------
2025-01-24T14:29:24.5638423Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5638506Z             Simulation object.
2025-01-24T14:29:24.5638584Z     
2025-01-24T14:29:24.5638656Z         Returns
2025-01-24T14:29:24.5638733Z         -------
2025-01-24T14:29:24.5638862Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5638938Z         """
2025-01-24T14:29:24.5639189Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5639198Z 
2025-01-24T14:29:24.5639338Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5639455Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5639616Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5639768Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5639981Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5640117Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5640228Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5640232Z 
2025-01-24T14:29:24.5640448Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5640614Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5640703Z packets_mode = 'real'
2025-01-24T14:29:24.5640707Z 
2025-01-24T14:29:24.5640787Z     @classmethod
2025-01-24T14:29:24.5640899Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5640974Z         """
2025-01-24T14:29:24.5641168Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5641243Z     
2025-01-24T14:29:24.5641318Z         Parameters
2025-01-24T14:29:24.5641397Z         ----------
2025-01-24T14:29:24.5641496Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5641648Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5641855Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5642002Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5642073Z     
2025-01-24T14:29:24.5642149Z         Returns
2025-01-24T14:29:24.5642222Z         -------
2025-01-24T14:29:24.5642314Z         SimulationPacketData
2025-01-24T14:29:24.5642393Z         """
2025-01-24T14:29:24.5642499Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5642585Z             raise ValueError(
2025-01-24T14:29:24.5642702Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5642810Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5642882Z             )
2025-01-24T14:29:24.5642994Z         # Properties common among both packet modes
2025-01-24T14:29:24.5643153Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5643231Z             "line_id"
2025-01-24T14:29:24.5643302Z         )
2025-01-24T14:29:24.5643417Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5643541Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5643632Z         time_of_simulation = (
2025-01-24T14:29:24.5643788Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5643866Z         )
2025-01-24T14:29:24.5643942Z     
2025-01-24T14:29:24.5644020Z         spectrum = (
2025-01-24T14:29:24.5644139Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5644228Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5644351Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5644421Z         )
2025-01-24T14:29:24.5644496Z     
2025-01-24T14:29:24.5644586Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5644714Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5644790Z             return cls(
2025-01-24T14:29:24.5644955Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5645127Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5645309Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5645475Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5645744Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5645831Z                 lines_df=lines_df,
2025-01-24T14:29:24.5645956Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5646118Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5646248Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5646368Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5646558Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5646672Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5646774Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5646875Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5646964Z                 simulation=sim,
2025-01-24T14:29:24.5647044Z             )
2025-01-24T14:29:24.5647131Z         else: # real packets
2025-01-24T14:29:24.5647295Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5647382Z             # which got emitted
2025-01-24T14:29:24.5647489Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5647571Z >           return cls(
2025-01-24T14:29:24.5647743Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5647929Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5648004Z                     mask
2025-01-24T14:29:24.5648190Z                 ],
2025-01-24T14:29:24.5648492Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5648575Z                     mask
2025-01-24T14:29:24.5648648Z                 ],
2025-01-24T14:29:24.5648819Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5648896Z                     mask
2025-01-24T14:29:24.5648973Z                 ],
2025-01-24T14:29:24.5649142Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5649224Z                 lines_df=lines_df,
2025-01-24T14:29:24.5649391Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5649564Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5649643Z                     mask
2025-01-24T14:29:24.5649714Z                 ],
2025-01-24T14:29:24.5649849Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5649963Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5650154Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5650260Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5650369Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5650469Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5650550Z                 simulation=sim,
2025-01-24T14:29:24.5650628Z             )
2025-01-24T14:29:24.5650963Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5650968Z 
2025-01-24T14:29:24.5651146Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5651353Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl15] _
2025-01-24T14:29:24.5651360Z 
2025-01-24T14:29:24.5651629Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5651841Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5652076Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5652198Z 
2025-01-24T14:29:24.5652294Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5652410Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5652485Z         """
2025-01-24T14:29:24.5652574Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5652648Z     
2025-01-24T14:29:24.5652724Z         Parameters
2025-01-24T14:29:24.5652802Z         ----------
2025-01-24T14:29:24.5652940Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5653027Z             Simulation object.
2025-01-24T14:29:24.5653098Z     
2025-01-24T14:29:24.5653177Z         Returns
2025-01-24T14:29:24.5653253Z         -------
2025-01-24T14:29:24.5653387Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5653458Z         """
2025-01-24T14:29:24.5653596Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5653600Z 
2025-01-24T14:29:24.5653746Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5653861Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5654025Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5654174Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5654390Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5654523Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5654636Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5654640Z 
2025-01-24T14:29:24.5654969Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5655145Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5655229Z packets_mode = 'real'
2025-01-24T14:29:24.5655238Z 
2025-01-24T14:29:24.5655312Z     @classmethod
2025-01-24T14:29:24.5655428Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5655502Z         """
2025-01-24T14:29:24.5655700Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5655771Z     
2025-01-24T14:29:24.5655852Z         Parameters
2025-01-24T14:29:24.5655925Z         ----------
2025-01-24T14:29:24.5656030Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5656178Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5656276Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5656416Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5656495Z     
2025-01-24T14:29:24.5656567Z         Returns
2025-01-24T14:29:24.5656644Z         -------
2025-01-24T14:29:24.5656732Z         SimulationPacketData
2025-01-24T14:29:24.5656808Z         """
2025-01-24T14:29:24.5656922Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5657006Z             raise ValueError(
2025-01-24T14:29:24.5657130Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5657233Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5657309Z             )
2025-01-24T14:29:24.5657415Z         # Properties common among both packet modes
2025-01-24T14:29:24.5657578Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5657653Z             "line_id"
2025-01-24T14:29:24.5657730Z         )
2025-01-24T14:29:24.5657840Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5657969Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5658054Z         time_of_simulation = (
2025-01-24T14:29:24.5658215Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5658405Z         )
2025-01-24T14:29:24.5658481Z     
2025-01-24T14:29:24.5658563Z         spectrum = (
2025-01-24T14:29:24.5658676Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5658894Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5659014Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5659090Z         )
2025-01-24T14:29:24.5659161Z     
2025-01-24T14:29:24.5659259Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5659383Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5659468Z             return cls(
2025-01-24T14:29:24.5659628Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5659805Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5659988Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5660162Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5660317Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5660405Z                 lines_df=lines_df,
2025-01-24T14:29:24.5660539Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5660693Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5660826Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5660941Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5661138Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5661252Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5661479Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5661580Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5661668Z                 simulation=sim,
2025-01-24T14:29:24.5661739Z             )
2025-01-24T14:29:24.5661826Z         else: # real packets
2025-01-24T14:29:24.5662001Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5662085Z             # which got emitted
2025-01-24T14:29:24.5662199Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5662275Z >           return cls(
2025-01-24T14:29:24.5662455Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5662640Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5662720Z                     mask
2025-01-24T14:29:24.5662793Z                 ],
2025-01-24T14:29:24.5662988Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5663065Z                     mask
2025-01-24T14:29:24.5663141Z                 ],
2025-01-24T14:29:24.5663314Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5663394Z                     mask
2025-01-24T14:29:24.5663470Z                 ],
2025-01-24T14:29:24.5663640Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5663730Z                 lines_df=lines_df,
2025-01-24T14:29:24.5663893Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5664073Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5664147Z                     mask
2025-01-24T14:29:24.5664223Z                 ],
2025-01-24T14:29:24.5664353Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5664474Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5664665Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5664784Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5664886Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5664987Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5665161Z                 simulation=sim,
2025-01-24T14:29:24.5665232Z             )
2025-01-24T14:29:24.5665569Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5665573Z 
2025-01-24T14:29:24.5665745Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5665870Z =============================== warnings summary ===============================
2025-01-24T14:29:24.5665984Z tardis/io/configuration/config_validator.py:6
2025-01-24T14:29:24.5666101Z tardis/io/configuration/config_validator.py:6
2025-01-24T14:29:24.5666417Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-24T14:29:24.5666505Z   
2025-01-24T14:29:24.5667633Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-24T14:29:24.5667642Z 
2025-01-24T14:29:24.5667882Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-24T14:29:24.5668367Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-24T14:29:24.5668440Z   
2025-01-24T14:29:24.5668599Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-24T14:29:24.5668872Z   given by the platformdirs library.  To remove this warning and
2025-01-24T14:29:24.5669050Z   see the appropriate new directories, set the environment variable
2025-01-24T14:29:24.5669195Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-24T14:29:24.5669470Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-24T14:29:24.5669478Z 
2025-01-24T14:29:24.5673929Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-24T14:29:24.5674262Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:29:24.5697058Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-24T14:29:24.5697158Z   
2025-01-24T14:29:24.5697233Z   
2025-01-24T14:29:24.5697470Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-24T14:29:24.5697743Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-24T14:29:24.5697750Z 
2025-01-24T14:29:24.5697994Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-24T14:29:24.5698216Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-24T14:29:24.5698599Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-24T14:29:24.5698780Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-24T14:29:24.5699125Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-24T14:29:24.5699196Z   
2025-01-24T14:29:24.5699316Z   The current CMFGEN model parser is deprecated
2025-01-24T14:29:24.5699321Z 
2025-01-24T14:29:24.5699436Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-24T14:29:24.5699612Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-24T14:29:24.5699925Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-24T14:29:24.5699995Z   
2025-01-24T14:29:24.5700111Z   The current CMFGEN model parser is deprecated
2025-01-24T14:29:24.5700115Z 
2025-01-24T14:29:24.5700324Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-24T14:29:24.5700696Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-24T14:29:24.5700947Z   
2025-01-24T14:29:24.5701373Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-24T14:29:24.5701379Z 
2025-01-24T14:29:24.5701488Z tardis/model/tests/test_base.py: 6 warnings
2025-01-24T14:29:24.5701606Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-24T14:29:24.5701790Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-24T14:29:24.5702058Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-24T14:29:24.5702132Z   
2025-01-24T14:29:24.5702237Z   v_inner_boundary < 0, assuming default value
2025-01-24T14:29:24.5702242Z 
2025-01-24T14:29:24.5702351Z tardis/model/tests/test_base.py: 6 warnings
2025-01-24T14:29:24.5702464Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-24T14:29:24.5702638Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-24T14:29:24.5702898Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-24T14:29:24.5702975Z   
2025-01-24T14:29:24.5703082Z   v_outer_boundary < 0, assuming default value
2025-01-24T14:29:24.5703092Z 
2025-01-24T14:29:24.5703566Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-24T14:29:24.5703877Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-24T14:29:24.5703947Z   
2025-01-24T14:29:24.5704235Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-24T14:29:24.5704810Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-24T14:29:24.5704887Z   
2025-01-24T14:29:24.5705411Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-24T14:29:24.5705429Z 
2025-01-24T14:29:24.5705580Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-24T14:29:24.5705875Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:29:24.5705943Z   
2025-01-24T14:29:24.5706041Z   Property "atomic_mass" not found
2025-01-24T14:29:24.5706046Z 
2025-01-24T14:29:24.5706484Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-24T14:29:24.5706892Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-24T14:29:24.5707188Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:29:24.5707266Z   
2025-01-24T14:29:24.5707370Z   Property "j_blues_norm_factor" not found
2025-01-24T14:29:24.5707383Z 
2025-01-24T14:29:24.5707812Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-24T14:29:24.5708195Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-24T14:29:24.5708733Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:29:24.5708809Z   
2025-01-24T14:29:24.5708906Z   Property "j_blue_estimator" not found
2025-01-24T14:29:24.5708910Z 
2025-01-24T14:29:24.5709310Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-24T14:29:24.5709650Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-24T14:29:24.5709934Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:29:24.5710136Z   
2025-01-24T14:29:24.5710227Z   Property "volume" not found
2025-01-24T14:29:24.5710231Z 
2025-01-24T14:29:24.5710635Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-24T14:29:24.5710973Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-24T14:29:24.5711251Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:29:24.5711319Z   
2025-01-24T14:29:24.5711411Z   Property "r_inner" not found
2025-01-24T14:29:24.5711422Z 
2025-01-24T14:29:24.5711635Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-24T14:29:24.5711857Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-24T14:29:24.5712063Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-24T14:29:24.5712305Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-24T14:29:24.5712382Z   
2025-01-24T14:29:24.5712575Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-24T14:29:24.5712580Z 
2025-01-24T14:29:24.5712790Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-24T14:29:24.5712989Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-24T14:29:24.5713064Z   
2025-01-24T14:29:24.5713393Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-24T14:29:24.5713511Z 
2025-01-24T14:29:24.5713731Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-24T14:29:24.5713936Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-24T14:29:24.5714005Z   
2025-01-24T14:29:24.5714359Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-24T14:29:24.5714368Z 
2025-01-24T14:29:24.5714580Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-01-24T14:29:24.5714700Z   <string>:3: NumbaPendingDeprecationWarning:
2025-01-24T14:29:24.5714768Z   
2025-01-24T14:29:24.5715847Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-01-24T14:29:24.5715937Z   Exception origin:
2025-01-24T14:29:24.5716190Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-01-24T14:29:24.5716284Z       raise TypeError(msg) from None
2025-01-24T14:29:24.5716376Z   [0m[0m
2025-01-24T14:29:24.5716380Z 
2025-01-24T14:29:24.5716742Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5717107Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5717457Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5717798Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5718143Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5718612Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5718978Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-24T14:29:24.5719052Z   
2025-01-24T14:29:24.5719376Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-24T14:29:24.5719559Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-24T14:29:24.5719798Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-24T14:29:24.5719803Z 
2025-01-24T14:29:24.5720161Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5720502Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5720862Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-24T14:29:24.5720935Z   
2025-01-24T14:29:24.5721113Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-24T14:29:24.5721288Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-24T14:29:24.5721523Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-24T14:29:24.5721528Z 
2025-01-24T14:29:24.5721878Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5722228Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-24T14:29:24.5722302Z   
2025-01-24T14:29:24.5722478Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-24T14:29:24.5722648Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-24T14:29:24.5722990Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-24T14:29:24.5722996Z 
2025-01-24T14:29:24.5723427Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-24T14:29:24.5723757Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-01-24T14:29:24.5723825Z   
2025-01-24T14:29:24.5724107Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-24T14:29:24.5724112Z 
2025-01-24T14:29:24.5724367Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:29:24.5724578Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-24T14:29:24.5724655Z   
2025-01-24T14:29:24.5724723Z   
2025-01-24T14:29:24.5724934Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-24T14:29:24.5725196Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-24T14:29:24.5725200Z 
2025-01-24T14:29:24.5725458Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:29:24.5725661Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-24T14:29:24.5725737Z   
2025-01-24T14:29:24.5725804Z   
2025-01-24T14:29:24.5726011Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-24T14:29:24.5726191Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-24T14:29:24.5726202Z 
2025-01-24T14:29:24.5726456Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:29:24.5726702Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-24T14:29:24.5726771Z   
2025-01-24T14:29:24.5726971Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-24T14:29:24.5726975Z 
2025-01-24T14:29:24.5727172Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-24T14:29:24.5727177Z 
2025-01-24T14:29:24.5727348Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-24T14:29:24.5727587Z Coverage HTML written to dir coverage_html_report
2025-01-24T14:29:24.5727694Z Coverage XML written to file coverage.xml
2025-01-24T14:29:24.5727698Z 
2025-01-24T14:29:24.5727831Z =========================== short test summary info ============================
2025-01-24T14:29:24.5728647Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_list] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5729348Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_keep_colour] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5730081Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_mapped] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5730844Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5731603Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5732471Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5733225Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5733985Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5734739Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5735480Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5736232Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5736984Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5737738Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5738721Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5739613Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5740372Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5741142Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5741898Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5742656Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5743510Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5744277Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5745015Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5745776Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5746529Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5747278Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5748034Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5748931Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5749659Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5750519Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5751237Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5751954Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5752669Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5753387Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5754104Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5754927Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5755615Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5756317Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5757003Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5757692Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5758473Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5759180Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5759874Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5760574Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5761290Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5762168Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5762881Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5763605Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5764316Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5765028Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5765855Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5766565Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5767261Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_full_species_list] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5767946Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_species_list] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5768744Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_keep_colour] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5769507Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5770284Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5771045Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5771818Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5772580Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5773473Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5774236Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5774999Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5775755Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5776520Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5777402Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5778169Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5779076Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5779858Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5780617Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5781543Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5782793Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5783528Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5784247Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5785128Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5785859Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5786577Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5787296Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5788017Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5788998Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5789749Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5790482Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5791222Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5791942Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5792668Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5793388Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5794120Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5794819Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5795509Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5796331Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5797037Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5797731Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5798523Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5799223Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5800031Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5800729Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl8] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5801417Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl9] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5802127Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl10] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5802830Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl11] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5803529Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl12] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5804232Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl13] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5804927Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl14] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5805620Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl15] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5805897Z = 1336 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 90 warnings, 102 errors in 734.92s (0:12:14) =
2025-01-24T14:29:26.3889206Z ##[error]Process completed with exit code 1.
2025-01-24T14:29:26.3962949Z Post job cleanup.
2025-01-24T14:29:26.3994413Z Post job cleanup.
2025-01-24T14:29:26.5315288Z Will use pre-installed micromamba at /home/runner/micromamba-bin/micromamba
2025-01-24T14:29:26.5322270Z Removing micromamba run shell ...
2025-01-24T14:29:26.5326591Z ##[group]Deinitialize micromamba for bash
2025-01-24T14:29:26.5345618Z [command]/home/runner/micromamba-bin/micromamba shell deinit -s bash -r /home/runner/micromamba --log-level warning --rc-file /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:29:26.5443816Z Resetting RC file "/home/runner/.bashrc"
2025-01-24T14:29:26.5444331Z Deleting config for root prefix 
2025-01-24T14:29:26.5444823Z Clearing mamba executable environment variable
2025-01-24T14:29:26.5447729Z Removing the following in your "/home/runner/.bashrc" file
2025-01-24T14:29:26.5448592Z # >>> mamba initialize >>>
2025-01-24T14:29:26.5448824Z ...
2025-01-24T14:29:26.5448998Z # <<< mamba initialize <<<
2025-01-24T14:29:26.5477019Z Removing mamba initialize block from .bash_profile
2025-01-24T14:29:26.5492358Z ##[endgroup]
2025-01-24T14:29:26.5496806Z Removing environment tardis from auto-activate bash ...
2025-01-24T14:29:26.5615420Z Post job cleanup.
2025-01-24T14:29:26.5653484Z Post job cleanup.
2025-01-24T14:29:26.6629028Z [command]/usr/bin/git version
2025-01-24T14:29:26.6665365Z git version 2.48.1
2025-01-24T14:29:26.6715177Z Temporarily overriding HOME='/home/runner/work/_temp/71d5b6e5-861f-4643-b0e8-3aa766a1c7a8' before making global git config changes
2025-01-24T14:29:26.6716683Z Adding repository directory to the temporary git global config as a safe directory
2025-01-24T14:29:26.6721848Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis/tardis-regression-data
2025-01-24T14:29:26.6755689Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-24T14:29:26.6787876Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-24T14:29:26.7020477Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-24T14:29:26.7041350Z http.https://github.com/.extraheader
2025-01-24T14:29:26.7053971Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-24T14:29:26.7085928Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-24T14:29:26.7430039Z Post job cleanup.
2025-01-24T14:29:26.8381163Z [command]/usr/bin/git version
2025-01-24T14:29:26.8430760Z git version 2.48.1
2025-01-24T14:29:26.8473539Z Temporarily overriding HOME='/home/runner/work/_temp/e9c3ed3e-53e0-47a8-aeef-4e8f99312139' before making global git config changes
2025-01-24T14:29:26.8475779Z Adding repository directory to the temporary git global config as a safe directory
2025-01-24T14:29:26.8479147Z [command]/usr/bin/git config --global --add safe.directory /home/runner/work/tardis/tardis
2025-01-24T14:29:26.8515044Z [command]/usr/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-24T14:29:26.8549170Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-24T14:29:26.8798683Z [command]/usr/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-24T14:29:26.8819216Z http.https://github.com/.extraheader
2025-01-24T14:29:26.8831912Z [command]/usr/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-24T14:29:26.8861210Z [command]/usr/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-24T14:29:26.9188115Z Cleaning up orphan processes
