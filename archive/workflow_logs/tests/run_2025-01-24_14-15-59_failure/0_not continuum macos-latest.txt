2025-01-24T14:16:01.8252207Z Requested labels: macos-latest
2025-01-24T14:16:01.8252471Z Job defined at: tardis-sn/tardis/.github/workflows/tests.yml@refs/pull/2928/merge
2025-01-24T14:16:01.8252606Z Waiting for a runner to pick up this job...
2025-01-24T14:16:02.1405032Z Job is waiting for a hosted runner to come online.
2025-01-24T14:16:06.1294632Z Job is about to start running on the hosted runner: GitHub Actions 42 (hosted)
2025-01-24T14:16:07.6219970Z Current runner version: '2.321.0'
2025-01-24T14:16:07.6236500Z ##[group]Operating System
2025-01-24T14:16:07.6236960Z macOS
2025-01-24T14:16:07.6237270Z 14.7.2
2025-01-24T14:16:07.6237560Z 23H311
2025-01-24T14:16:07.6237860Z ##[endgroup]
2025-01-24T14:16:07.6238190Z ##[group]Runner Image
2025-01-24T14:16:07.6238520Z Image: macos-14-arm64
2025-01-24T14:16:07.6238830Z Version: 20250120.774
2025-01-24T14:16:07.6239480Z Included Software: https://github.com/actions/runner-images/blob/macos-14-arm64/20250120.774/images/macos/macos-14-arm64-Readme.md
2025-01-24T14:16:07.6240390Z Image Release: https://github.com/actions/runner-images/releases/tag/macos-14-arm64%2F20250120.774
2025-01-24T14:16:07.6240950Z ##[endgroup]
2025-01-24T14:16:07.6241250Z ##[group]Runner Image Provisioner
2025-01-24T14:16:07.6241630Z 2.0.417.1+9319b8b0d2fead581272b7201c667f076e8e53f6
2025-01-24T14:16:07.6242010Z ##[endgroup]
2025-01-24T14:16:07.6243300Z ##[group]GITHUB_TOKEN Permissions
2025-01-24T14:16:07.6244290Z Actions: read
2025-01-24T14:16:07.6244610Z Attestations: read
2025-01-24T14:16:07.6244900Z Checks: read
2025-01-24T14:16:07.6245180Z Contents: read
2025-01-24T14:16:07.6245470Z Deployments: read
2025-01-24T14:16:07.6245770Z Discussions: read
2025-01-24T14:16:07.6246060Z Issues: read
2025-01-24T14:16:07.6246340Z Metadata: read
2025-01-24T14:16:07.6246630Z Packages: read
2025-01-24T14:16:07.6246910Z Pages: read
2025-01-24T14:16:07.6247190Z PullRequests: read
2025-01-24T14:16:07.6247500Z RepositoryProjects: read
2025-01-24T14:16:07.6247810Z SecurityEvents: read
2025-01-24T14:16:07.6248120Z Statuses: read
2025-01-24T14:16:07.6248410Z ##[endgroup]
2025-01-24T14:16:07.6250160Z Secret source: None
2025-01-24T14:16:07.6250590Z Prepare workflow directory
2025-01-24T14:16:07.6573940Z Prepare all required actions
2025-01-24T14:16:07.6598820Z Getting action download info
2025-01-24T14:16:07.8324020Z Download action repository 'actions/checkout@v4' (SHA:11bd71901bbe5b1630ceea73d27597364c9af683)
2025-01-24T14:16:08.1112180Z Download action repository 'actions/upload-artifact@v4' (SHA:65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08)
2025-01-24T14:16:08.2309520Z Complete job name: not continuum macos-latest 
2025-01-24T14:16:08.2668920Z ##[group]Run actions/checkout@v4
2025-01-24T14:16:08.2669490Z with:
2025-01-24T14:16:08.2669770Z   repository: tardis-sn/tardis
2025-01-24T14:16:08.2670250Z   token: ***
2025-01-24T14:16:08.2670510Z   ssh-strict: true
2025-01-24T14:16:08.2670800Z   ssh-user: git
2025-01-24T14:16:08.2671090Z   persist-credentials: true
2025-01-24T14:16:08.2671410Z   clean: true
2025-01-24T14:16:08.2671700Z   sparse-checkout-cone-mode: true
2025-01-24T14:16:08.2672030Z   fetch-depth: 1
2025-01-24T14:16:08.2672320Z   fetch-tags: false
2025-01-24T14:16:08.2672600Z   show-progress: true
2025-01-24T14:16:08.2672890Z   lfs: false
2025-01-24T14:16:08.2673160Z   submodules: false
2025-01-24T14:16:08.2673460Z   set-safe-directory: true
2025-01-24T14:16:08.2673870Z env:
2025-01-24T14:16:08.2674120Z   CACHE_NUMBER: 0
2025-01-24T14:16:08.2674900Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:08.2675740Z   CODECOV_TOKEN: 
2025-01-24T14:16:08.2676020Z ##[endgroup]
2025-01-24T14:16:08.6064890Z Syncing repository: tardis-sn/tardis
2025-01-24T14:16:08.6066130Z ##[group]Getting Git version info
2025-01-24T14:16:08.6066600Z Working directory is '/Users/runner/work/tardis/tardis'
2025-01-24T14:16:08.6067260Z [command]/opt/homebrew/bin/git version
2025-01-24T14:16:08.6549300Z git version 2.48.1
2025-01-24T14:16:08.6576400Z ##[endgroup]
2025-01-24T14:16:08.6583180Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/5fda0ad7-a74b-4128-bf15-43647a27d3db/.gitconfig'
2025-01-24T14:16:08.6589100Z Temporarily overriding HOME='/Users/runner/work/_temp/5fda0ad7-a74b-4128-bf15-43647a27d3db' before making global git config changes
2025-01-24T14:16:08.6590120Z Adding repository directory to the temporary git global config as a safe directory
2025-01-24T14:16:08.6593620Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis
2025-01-24T14:16:08.6682400Z Deleting the contents of '/Users/runner/work/tardis/tardis'
2025-01-24T14:16:08.6684560Z ##[group]Initializing the repository
2025-01-24T14:16:08.6689570Z [command]/opt/homebrew/bin/git init /Users/runner/work/tardis/tardis
2025-01-24T14:16:08.6832350Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-24T14:16:08.6833230Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-24T14:16:08.6834000Z hint: of your new repositories, which will suppress this warning, call:
2025-01-24T14:16:08.6834600Z hint:
2025-01-24T14:16:08.6834970Z hint: 	git config --global init.defaultBranch <name>
2025-01-24T14:16:08.6835400Z hint:
2025-01-24T14:16:08.6835940Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-24T14:16:08.6836570Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-24T14:16:08.6837170Z hint:
2025-01-24T14:16:08.6837820Z hint: 	git branch -m <name>
2025-01-24T14:16:08.6838480Z Initialized empty Git repository in /Users/runner/work/tardis/tardis/.git/
2025-01-24T14:16:08.6843070Z [command]/opt/homebrew/bin/git remote add origin https://github.com/tardis-sn/tardis
2025-01-24T14:16:08.6900100Z ##[endgroup]
2025-01-24T14:16:08.6900780Z ##[group]Disabling automatic garbage collection
2025-01-24T14:16:08.6902880Z [command]/opt/homebrew/bin/git config --local gc.auto 0
2025-01-24T14:16:08.6946170Z ##[endgroup]
2025-01-24T14:16:08.6946860Z ##[group]Setting up auth
2025-01-24T14:16:08.6951280Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-24T14:16:08.7000190Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-24T14:16:08.7641370Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-24T14:16:08.7675080Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-24T14:16:08.8131780Z [command]/opt/homebrew/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-24T14:16:08.8189330Z ##[endgroup]
2025-01-24T14:16:08.8189880Z ##[group]Fetching the repository
2025-01-24T14:16:08.8195060Z [command]/opt/homebrew/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +0adda341208ae850ea9ee0150ae991d96107f7d9:refs/remotes/pull/2928/merge
2025-01-24T14:16:10.5719200Z From https://github.com/tardis-sn/tardis
2025-01-24T14:16:10.5720240Z  * [new ref]         0adda341208ae850ea9ee0150ae991d96107f7d9 -> pull/2928/merge
2025-01-24T14:16:10.5888330Z ##[endgroup]
2025-01-24T14:16:10.5889360Z ##[group]Determining the checkout info
2025-01-24T14:16:10.5892590Z ##[endgroup]
2025-01-24T14:16:10.5893220Z [command]/opt/homebrew/bin/git sparse-checkout disable
2025-01-24T14:16:10.5895150Z [command]/opt/homebrew/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-24T14:16:10.5909840Z ##[group]Checking out the ref
2025-01-24T14:16:10.5912630Z [command]/opt/homebrew/bin/git checkout --progress --force refs/remotes/pull/2928/merge
2025-01-24T14:16:10.7566630Z HEAD is now at 0adda34 Merge b993fdd8f473bcfe99a09157045d2326c1385f1f into ae0258463989e6da4742a80583fab03a19ae940c
2025-01-24T14:16:10.7580150Z ##[endgroup]
2025-01-24T14:16:10.7646620Z [command]/opt/homebrew/bin/git log -1 --format=%H
2025-01-24T14:16:10.7686700Z 0adda341208ae850ea9ee0150ae991d96107f7d9
2025-01-24T14:16:10.7902990Z Prepare all required actions
2025-01-24T14:16:10.7903530Z Getting action download info
2025-01-24T14:16:10.9871910Z Download action repository 'actions/cache@v4' (SHA:1bd1e32a3bdc45362d1e726936510720a7c30a57)
2025-01-24T14:16:11.0884430Z ##[group]Run ./.github/actions/setup_lfs
2025-01-24T14:16:11.0884960Z with:
2025-01-24T14:16:11.0885450Z   regression-data-repo: tardis-sn/tardis-regression-data
2025-01-24T14:16:11.0886030Z env:
2025-01-24T14:16:11.0886460Z   CACHE_NUMBER: 0
2025-01-24T14:16:11.0887290Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:11.0888160Z   CODECOV_TOKEN: 
2025-01-24T14:16:11.0888590Z ##[endgroup]
2025-01-24T14:16:11.1018510Z ##[group]Run actions/checkout@v4
2025-01-24T14:16:11.1019050Z with:
2025-01-24T14:16:11.1019530Z   repository: tardis-sn/tardis-regression-data
2025-01-24T14:16:11.1020090Z   path: tardis-regression-data
2025-01-24T14:16:11.1020930Z   token: ***
2025-01-24T14:16:11.1021370Z   ssh-strict: true
2025-01-24T14:16:11.1021830Z   ssh-user: git
2025-01-24T14:16:11.1022740Z   persist-credentials: true
2025-01-24T14:16:11.1024780Z   clean: true
2025-01-24T14:16:11.1025670Z   sparse-checkout-cone-mode: true
2025-01-24T14:16:11.1034480Z   fetch-depth: 1
2025-01-24T14:16:11.1034980Z   fetch-tags: false
2025-01-24T14:16:11.1035420Z   show-progress: true
2025-01-24T14:16:11.1035860Z   lfs: false
2025-01-24T14:16:11.1036490Z   submodules: false
2025-01-24T14:16:11.1036940Z   set-safe-directory: true
2025-01-24T14:16:11.1037410Z env:
2025-01-24T14:16:11.1037830Z   CACHE_NUMBER: 0
2025-01-24T14:16:11.1038740Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:11.1039660Z   CODECOV_TOKEN: 
2025-01-24T14:16:11.1040100Z ##[endgroup]
2025-01-24T14:16:11.2069150Z Syncing repository: tardis-sn/tardis-regression-data
2025-01-24T14:16:11.2072780Z ##[group]Getting Git version info
2025-01-24T14:16:11.2073450Z Working directory is '/Users/runner/work/tardis/tardis/tardis-regression-data'
2025-01-24T14:16:11.2101830Z [command]/opt/homebrew/bin/git version
2025-01-24T14:16:11.2142400Z git version 2.48.1
2025-01-24T14:16:11.2155700Z ##[endgroup]
2025-01-24T14:16:11.2160310Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/8778216c-4e07-439e-abff-ec32d5b4b146/.gitconfig'
2025-01-24T14:16:11.2167270Z Temporarily overriding HOME='/Users/runner/work/_temp/8778216c-4e07-439e-abff-ec32d5b4b146' before making global git config changes
2025-01-24T14:16:11.2168270Z Adding repository directory to the temporary git global config as a safe directory
2025-01-24T14:16:11.2169650Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-24T14:16:11.2208220Z ##[group]Initializing the repository
2025-01-24T14:16:11.2211120Z [command]/opt/homebrew/bin/git init /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-24T14:16:11.2274120Z hint: Using 'master' as the name for the initial branch. This default branch name
2025-01-24T14:16:11.2275290Z hint: is subject to change. To configure the initial branch name to use in all
2025-01-24T14:16:11.2276490Z hint: of your new repositories, which will suppress this warning, call:
2025-01-24T14:16:11.2277130Z hint:
2025-01-24T14:16:11.2277610Z hint: 	git config --global init.defaultBranch <name>
2025-01-24T14:16:11.2278150Z hint:
2025-01-24T14:16:11.2278680Z hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
2025-01-24T14:16:11.2279400Z hint: 'development'. The just-created branch can be renamed via this command:
2025-01-24T14:16:11.2280000Z hint:
2025-01-24T14:16:11.2280440Z hint: 	git branch -m <name>
2025-01-24T14:16:11.2281120Z Initialized empty Git repository in /Users/runner/work/tardis/tardis/tardis-regression-data/.git/
2025-01-24T14:16:11.2283220Z [command]/opt/homebrew/bin/git remote add origin https://github.com/tardis-sn/tardis-regression-data
2025-01-24T14:16:11.2322780Z ##[endgroup]
2025-01-24T14:16:11.2323550Z ##[group]Disabling automatic garbage collection
2025-01-24T14:16:11.2325010Z [command]/opt/homebrew/bin/git config --local gc.auto 0
2025-01-24T14:16:11.2364650Z ##[endgroup]
2025-01-24T14:16:11.2365640Z ##[group]Setting up auth
2025-01-24T14:16:11.2366870Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-24T14:16:11.2404390Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-24T14:16:11.2844670Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-24T14:16:11.2882690Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-24T14:16:11.3329820Z [command]/opt/homebrew/bin/git config --local http.https://github.com/.extraheader AUTHORIZATION: basic ***
2025-01-24T14:16:11.3371580Z ##[endgroup]
2025-01-24T14:16:11.3372510Z ##[group]Determining the default branch
2025-01-24T14:16:11.3373210Z Retrieving the default branch name
2025-01-24T14:16:11.7472620Z Default branch 'main'
2025-01-24T14:16:11.7474170Z ##[endgroup]
2025-01-24T14:16:11.7475100Z ##[group]Fetching the repository
2025-01-24T14:16:11.7477460Z [command]/opt/homebrew/bin/git -c protocol.version=2 fetch --no-tags --prune --no-recurse-submodules --depth=1 origin +refs/heads/main:refs/remotes/origin/main
2025-01-24T14:16:12.7365080Z From https://github.com/tardis-sn/tardis-regression-data
2025-01-24T14:16:12.7366030Z  * [new branch]      main       -> origin/main
2025-01-24T14:16:12.7469030Z ##[endgroup]
2025-01-24T14:16:12.7471310Z ##[group]Determining the checkout info
2025-01-24T14:16:12.7471940Z ##[endgroup]
2025-01-24T14:16:12.7472380Z [command]/opt/homebrew/bin/git sparse-checkout disable
2025-01-24T14:16:12.7574270Z [command]/opt/homebrew/bin/git config --local --unset-all extensions.worktreeConfig
2025-01-24T14:16:12.7634560Z ##[group]Checking out the ref
2025-01-24T14:16:12.7637520Z [command]/opt/homebrew/bin/git checkout --progress --force -B main refs/remotes/origin/main
2025-01-24T14:16:12.9263630Z Switched to a new branch 'main'
2025-01-24T14:16:12.9265430Z branch 'main' set up to track 'origin/main'.
2025-01-24T14:16:12.9784610Z ##[endgroup]
2025-01-24T14:16:12.9832890Z [command]/opt/homebrew/bin/git log -1 --format=%H
2025-01-24T14:16:12.9867390Z fa7729bc9c30e14b69acd641af8b692b56fcd416
2025-01-24T14:16:12.9948390Z ##[group]Run git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
2025-01-24T14:16:12.9948850Z [36;1mgit lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id[0m
2025-01-24T14:16:13.0006400Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-24T14:16:13.0006680Z env:
2025-01-24T14:16:13.0006810Z   CACHE_NUMBER: 0
2025-01-24T14:16:13.0007290Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:13.0007800Z   CODECOV_TOKEN: 
2025-01-24T14:16:13.0007950Z ##[endgroup]
2025-01-24T14:16:13.2326330Z ##[group]Run actions/cache/restore@v4
2025-01-24T14:16:13.2326570Z with:
2025-01-24T14:16:13.2326810Z   path: tardis-regression-data/.git/lfs
2025-01-24T14:16:13.2327200Z   key: macOS-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-24T14:16:13.2327550Z   enableCrossOsArchive: false
2025-01-24T14:16:13.2327780Z   fail-on-cache-miss: false
2025-01-24T14:16:13.2328070Z   lookup-only: false
2025-01-24T14:16:13.2328280Z env:
2025-01-24T14:16:13.2328550Z   CACHE_NUMBER: 0
2025-01-24T14:16:13.2329460Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:13.2330060Z   CODECOV_TOKEN: 
2025-01-24T14:16:13.2330200Z ##[endgroup]
2025-01-24T14:16:14.7617710Z Received 50331648 of 1706796060 (2.9%), 48.0 MBs/sec
2025-01-24T14:16:15.7538420Z Received 117440512 of 1706796060 (6.9%), 55.9 MBs/sec
2025-01-24T14:16:16.7550690Z Received 180355072 of 1706796060 (10.6%), 57.3 MBs/sec
2025-01-24T14:16:17.7549370Z Received 251658240 of 1706796060 (14.7%), 60.0 MBs/sec
2025-01-24T14:16:18.7560280Z Received 318767104 of 1706796060 (18.7%), 60.8 MBs/sec
2025-01-24T14:16:19.7577400Z Received 377487360 of 1706796060 (22.1%), 60.0 MBs/sec
2025-01-24T14:16:20.7569240Z Received 452984832 of 1706796060 (26.5%), 61.7 MBs/sec
2025-01-24T14:16:21.7568400Z Received 541065216 of 1706796060 (31.7%), 64.5 MBs/sec
2025-01-24T14:16:22.7574200Z Received 624951296 of 1706796060 (36.6%), 66.2 MBs/sec
2025-01-24T14:16:23.7658910Z Received 708837376 of 1706796060 (41.5%), 67.6 MBs/sec
2025-01-24T14:16:24.7616060Z Received 788529152 of 1706796060 (46.2%), 68.3 MBs/sec
2025-01-24T14:16:25.7605120Z Received 864026624 of 1706796060 (50.6%), 68.6 MBs/sec
2025-01-24T14:16:26.7601440Z Received 947912704 of 1706796060 (55.5%), 69.5 MBs/sec
2025-01-24T14:16:27.7603950Z Received 1015021568 of 1706796060 (59.5%), 69.1 MBs/sec
2025-01-24T14:16:28.7676880Z Received 1086324736 of 1706796060 (63.6%), 69.0 MBs/sec
2025-01-24T14:16:29.7599110Z Received 1153433600 of 1706796060 (67.6%), 68.7 MBs/sec
2025-01-24T14:16:30.7838250Z Received 1233125376 of 1706796060 (72.2%), 69.1 MBs/sec
2025-01-24T14:16:31.7818790Z Received 1308622848 of 1706796060 (76.7%), 69.3 MBs/sec
2025-01-24T14:16:32.7741000Z Received 1375731712 of 1706796060 (80.6%), 69.0 MBs/sec
2025-01-24T14:16:33.7755490Z Received 1451229184 of 1706796060 (85.0%), 69.1 MBs/sec
2025-01-24T14:16:34.7789480Z Received 1518338048 of 1706796060 (89.0%), 68.9 MBs/sec
2025-01-24T14:16:35.7795530Z Received 1585446912 of 1706796060 (92.9%), 68.6 MBs/sec
2025-01-24T14:16:36.7790720Z Received 1652555776 of 1706796060 (96.8%), 68.4 MBs/sec
2025-01-24T14:16:37.7809390Z Received 1706796060 of 1706796060 (100.0%), 67.7 MBs/sec
2025-01-24T14:16:37.8706650Z Cache Size: ~1628 MB (1706796060 B)
2025-01-24T14:16:37.8795440Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/e660d308-4fa9-40f1-b695-763971542c90/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-24T14:16:44.5566290Z Cache restored successfully
2025-01-24T14:16:44.6846430Z Cache restored from key: macOS-lfs-21f9fa4b6817cc69b9fae3598144724da7828e276a73bd17f47a2a49d9af090a-v1
2025-01-24T14:16:44.7078760Z ##[group]Run git lfs checkout
2025-01-24T14:16:44.7079120Z [36;1mgit lfs checkout[0m
2025-01-24T14:16:44.7217380Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-24T14:16:44.7217740Z env:
2025-01-24T14:16:44.7217920Z   CACHE_NUMBER: 0
2025-01-24T14:16:44.7218510Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:16:44.7219480Z   CODECOV_TOKEN: 
2025-01-24T14:16:44.7219700Z ##[endgroup]
2025-01-24T14:16:52.6555530Z Checking out LFS objects: 100% (204/204), 3.5 GB | 345 MB/s, done.
2025-01-24T14:16:59.5411050Z Prepare all required actions
2025-01-24T14:16:59.5411480Z Getting action download info
2025-01-24T14:16:59.7188370Z Download action repository 'mamba-org/setup-micromamba@v1' (SHA:4b9113af4fba0e9e1124b252dd6497a419e7396d)
2025-01-24T14:17:00.8421770Z ##[group]Run ./.github/actions/setup_env
2025-01-24T14:17:00.8422000Z with:
2025-01-24T14:17:00.8422170Z   os-label: osx-arm64
2025-01-24T14:17:00.8422300Z env:
2025-01-24T14:17:00.8422400Z   CACHE_NUMBER: 0
2025-01-24T14:17:00.8422940Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:17:00.8423460Z   CODECOV_TOKEN: 
2025-01-24T14:17:00.8423630Z ##[endgroup]
2025-01-24T14:17:00.8442990Z ##[group]Run file_hash=$(cat conda-osx-arm64.lock | shasum -a 256 | cut -d' ' -f1)
2025-01-24T14:17:00.8443370Z [36;1mfile_hash=$(cat conda-osx-arm64.lock | shasum -a 256 | cut -d' ' -f1)[0m
2025-01-24T14:17:00.8444370Z [36;1mecho "file_hash=$file_hash" >> "${GITHUB_OUTPUT}"[0m
2025-01-24T14:17:00.8489000Z shell: /bin/bash --noprofile --norc -e -o pipefail {0}
2025-01-24T14:17:00.8489240Z env:
2025-01-24T14:17:00.8489360Z   CACHE_NUMBER: 0
2025-01-24T14:17:00.8489840Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:17:00.8490330Z   CODECOV_TOKEN: 
2025-01-24T14:17:00.8490450Z ##[endgroup]
2025-01-24T14:17:00.9515280Z ##[group]Run mamba-org/setup-micromamba@v1
2025-01-24T14:17:00.9515480Z with:
2025-01-24T14:17:00.9515620Z   environment-file: conda-osx-arm64.lock
2025-01-24T14:17:00.9515950Z   cache-environment-key: bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824
2025-01-24T14:17:00.9516380Z   cache-downloads-key: bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824
2025-01-24T14:17:00.9516690Z   environment-name: tardis
2025-01-24T14:17:00.9516890Z   cache-environment: true
2025-01-24T14:17:00.9517060Z   cache-downloads: true
2025-01-24T14:17:00.9517210Z env:
2025-01-24T14:17:00.9517330Z   CACHE_NUMBER: 0
2025-01-24T14:17:00.9517780Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:17:00.9518240Z   CODECOV_TOKEN: 
2025-01-24T14:17:00.9518370Z ##[endgroup]
2025-01-24T14:17:01.2215200Z Will download micromamba to /Users/runner/micromamba-bin/micromamba
2025-01-24T14:17:01.2217240Z ##[group]Install micromamba
2025-01-24T14:17:01.9465870Z micromamba installed to /Users/runner/micromamba-bin/micromamba
2025-01-24T14:17:01.9467390Z ##[endgroup]
2025-01-24T14:17:01.9498520Z Adding conda-forge to condarc channels ...
2025-01-24T14:17:01.9505020Z ##[group]Initialize micromamba for bash.
2025-01-24T14:17:01.9506000Z [command]/Users/runner/micromamba-bin/micromamba shell init -s bash -r /Users/runner/micromamba --log-level warning --rc-file /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:17:01.9817940Z Modifying RC file "/Users/runner/.bash_profile"
2025-01-24T14:17:01.9938920Z Generating config for root prefix [1m"/Users/runner/micromamba"[0m
2025-01-24T14:17:02.0032920Z Setting mamba executable to: [1m"/Users/runner/micromamba-bin/micromamba"[0m
2025-01-24T14:17:02.0049570Z Adding (or replacing) the following in your "/Users/runner/.bash_profile" file
2025-01-24T14:17:02.0058530Z 
2025-01-24T14:17:02.0067920Z # >>> mamba initialize >>>
2025-01-24T14:17:02.0078370Z # !! Contents within this block are managed by 'mamba init' !!
2025-01-24T14:17:02.0084740Z export MAMBA_EXE='/Users/runner/micromamba-bin/micromamba';
2025-01-24T14:17:02.0086550Z export MAMBA_ROOT_PREFIX='/Users/runner/micromamba';
2025-01-24T14:17:02.0087230Z __mamba_setup="$("$MAMBA_EXE" shell hook --shell bash --root-prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
2025-01-24T14:17:02.0087830Z if [ $? -eq 0 ]; then
2025-01-24T14:17:02.0088590Z     eval "$__mamba_setup"
2025-01-24T14:17:02.0089640Z else
2025-01-24T14:17:02.0090010Z     alias micromamba="$MAMBA_EXE"  # Fallback on help from mamba activate
2025-01-24T14:17:02.0090360Z fi
2025-01-24T14:17:02.0105080Z unset __mamba_setup
2025-01-24T14:17:02.0105610Z # <<< mamba initialize <<<
2025-01-24T14:17:02.0105740Z 
2025-01-24T14:17:02.0106010Z ##[endgroup]
2025-01-24T14:17:02.0106470Z ##[group]Restoring downloads from `/Users/runner/micromamba/pkgs` ...
2025-01-24T14:17:03.4123320Z Received 33554432 of 310595924 (10.8%), 31.9 MBs/sec
2025-01-24T14:17:04.4135050Z Received 92274688 of 310595924 (29.7%), 43.9 MBs/sec
2025-01-24T14:17:05.4137830Z Received 176160768 of 310595924 (56.7%), 55.9 MBs/sec
2025-01-24T14:17:06.4151260Z Received 234881024 of 310595924 (75.6%), 55.9 MBs/sec
2025-01-24T14:17:07.4151960Z Received 310595924 of 310595924 (100.0%), 59.2 MBs/sec
2025-01-24T14:17:07.5728390Z Cache Size: ~296 MB (310595924 B)
2025-01-24T14:17:07.5753570Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/a7c391bc-a208-46a0-a621-e199d1dc8f78/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-24T14:17:08.2253610Z Cache restored successfully
2025-01-24T14:17:08.2274000Z Restored cache with key `bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824-osx-arm64`
2025-01-24T14:17:08.2275080Z ##[endgroup]
2025-01-24T14:17:08.2302090Z ##[group]Restoring environment `tardis` from `/Users/runner/micromamba/envs/tardis` ...
2025-01-24T14:17:09.5756930Z Received 41943040 of 385787123 (10.9%), 40.0 MBs/sec
2025-01-24T14:17:10.5762800Z Received 113246208 of 385787123 (29.4%), 54.0 MBs/sec
2025-01-24T14:17:11.5765960Z Received 176160768 of 385787123 (45.7%), 56.0 MBs/sec
2025-01-24T14:17:12.5790020Z Received 247463936 of 385787123 (64.1%), 59.0 MBs/sec
2025-01-24T14:17:13.5860690Z Received 310378496 of 385787123 (80.5%), 59.1 MBs/sec
2025-01-24T14:17:14.5875610Z Received 385787123 of 385787123 (100.0%), 61.2 MBs/sec
2025-01-24T14:17:14.8490090Z Cache Size: ~368 MB (385787123 B)
2025-01-24T14:17:14.8628090Z [command]/opt/homebrew/bin/gtar -xf /Users/runner/work/_temp/969a2771-e898-4d8b-9530-4aa5f513ee5d/cache.tzst -P -C /Users/runner/work/tardis/tardis --delay-directory-restore --use-compress-program unzstd
2025-01-24T14:17:32.0609510Z Cache restored successfully
2025-01-24T14:17:32.0779650Z Restored cache with key `bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824-osx-arm64-tardis-args-4f53cda-root-873f6fe-bin-[object Promise]-file-bf0d0a4d4c847cca72476c6c68c493d56c484aada7e80de0e42c7607fcef5824`
2025-01-24T14:17:32.0781190Z ##[endgroup]
2025-01-24T14:17:32.0781560Z Adding environment tardis to auto-activate bash ...
2025-01-24T14:17:32.0787300Z Generating micromamba run shell.
2025-01-24T14:17:32.0796910Z ##[endgroup]
2025-01-24T14:17:32.0801460Z Set environment variables.
2025-01-24T14:17:32.0803830Z ##[group]micromamba info
2025-01-24T14:17:32.0806330Z [command]/Users/runner/micromamba-bin/micromamba info -r /Users/runner/micromamba -n tardis
2025-01-24T14:17:32.5526590Z 
2025-01-24T14:17:32.5529550Z        libmamba version : 1.5.10
2025-01-24T14:17:32.5530870Z      micromamba version : 1.5.10
2025-01-24T14:17:32.5531800Z            curl version : libcurl/8.10.1 (OpenSSL/3.3.2) SecureTransport zlib/1.3.1 zstd/1.5.6 libssh2/1.11.0 nghttp2/1.58.0
2025-01-24T14:17:32.5533240Z      libarchive version : libarchive 3.7.4 zlib/1.2.13 bz2lib/1.0.8 libzstd/1.5.6
2025-01-24T14:17:32.5533940Z        envs directories : /Users/runner/micromamba/envs
2025-01-24T14:17:32.5534520Z           package cache : /Users/runner/micromamba/pkgs
2025-01-24T14:17:32.5534950Z                           /Users/runner/.mamba/pkgs
2025-01-24T14:17:32.5535460Z             environment : tardis
2025-01-24T14:17:32.5535950Z            env location : /Users/runner/micromamba/envs/tardis
2025-01-24T14:17:32.5536520Z       user config files : /Users/runner/.mambarc
2025-01-24T14:17:32.5539100Z  populated config files : /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:17:32.5543910Z        virtual packages : __unix=0=0
2025-01-24T14:17:32.5544210Z                           __osx=14.7.2=0
2025-01-24T14:17:32.5544480Z                           __archspec=1=arm64
2025-01-24T14:17:32.5544910Z                channels : https://conda.anaconda.org/conda-forge/osx-arm64
2025-01-24T14:17:32.5545350Z                           https://conda.anaconda.org/conda-forge/noarch
2025-01-24T14:17:32.5545700Z        base environment : /Users/runner/micromamba
2025-01-24T14:17:32.5546030Z                platform : osx-arm64
2025-01-24T14:17:32.5546880Z ##[endgroup]
2025-01-24T14:17:32.5547250Z ##[group]micromamba list
2025-01-24T14:17:32.5548100Z [command]/Users/runner/micromamba-bin/micromamba list -r /Users/runner/micromamba -n tardis
2025-01-24T14:17:33.0755020Z List of packages in environment: "/Users/runner/micromamba/envs/tardis"
2025-01-24T14:17:33.0757580Z 
2025-01-24T14:17:33.0757920Z   Name                           Version              Build                    Channel    
2025-01-24T14:17:33.0769310Z ────────────────────────────────────────────────────────────────────────────────────────────
2025-01-24T14:17:33.0769750Z   alabaster                      0.7.16               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0770180Z   anyio                          4.4.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0771210Z   appnope                        0.1.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0771710Z   argon2-cffi                    23.1.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0772210Z   argon2-cffi-bindings           21.2.0               py312h02f2b3b_4          conda-forge
2025-01-24T14:17:33.0772710Z   arrow                          1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0773060Z   astropy                        6.1.1                py312hbebd99a_0          conda-forge
2025-01-24T14:17:33.0773580Z   astropy-iers-data              0.2024.6.17.0.31.35  pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0774080Z   astropy-sphinx-theme           1.1                  pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0774660Z   asttokens                      2.4.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0775060Z   async-lru                      2.0.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0775540Z   atk-1.0                        2.38.0               hd03087b_2               conda-forge
2025-01-24T14:17:33.0775990Z   attrs                          23.2.0               pyh71513ae_0             conda-forge
2025-01-24T14:17:33.0776360Z   babel                          2.14.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0777090Z   beautifulsoup4                 4.12.3               pyha770c72_0             conda-forge
2025-01-24T14:17:33.0777520Z   bleach                         6.1.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0777990Z   blosc                          1.21.5               h9c252e8_1               conda-forge
2025-01-24T14:17:33.0778400Z   brotli                         1.1.0                hb547adb_1               conda-forge
2025-01-24T14:17:33.0778860Z   brotli-bin                     1.1.0                hb547adb_1               conda-forge
2025-01-24T14:17:33.0779250Z   brotli-python                  1.1.0                py312h9f69965_1          conda-forge
2025-01-24T14:17:33.0779750Z   bzip2                          1.0.8                h93a5062_5               conda-forge
2025-01-24T14:17:33.0780170Z   c-ares                         1.28.1               h93a5062_0               conda-forge
2025-01-24T14:17:33.0780890Z   c-blosc2                       2.14.4               ha57e6be_1               conda-forge
2025-01-24T14:17:33.0781500Z   ca-certificates                2024.6.2             hf0a4a13_0               conda-forge
2025-01-24T14:17:33.0782930Z   cached-property                1.5.2                hd8ed1ab_1               conda-forge
2025-01-24T14:17:33.0783580Z   cached_property                1.5.2                pyha770c72_1             conda-forge
2025-01-24T14:17:33.0784300Z   cairo                          1.18.0               hd1e100b_0               conda-forge
2025-01-24T14:17:33.0785370Z   certifi                        2024.6.2             pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0785760Z   cffi                           1.16.0               py312h8e38eb3_0          conda-forge
2025-01-24T14:17:33.0786240Z   charset-normalizer             3.3.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0786940Z   click                          8.1.7                unix_pyh707e725_0        conda-forge
2025-01-24T14:17:33.0787550Z   codespell                      2.3.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0788080Z   colorama                       0.4.6                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0789320Z   comm                           0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0789810Z   commonmark                     0.9.1                py_0                     conda-forge
2025-01-24T14:17:33.0790360Z   contourpy                      1.2.1                py312h0fef576_0          conda-forge
2025-01-24T14:17:33.0790770Z   coverage                       7.5.3                py312h7e5086c_0          conda-forge
2025-01-24T14:17:33.0791300Z   cycler                         0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0792220Z   dataclasses                    0.8                  pyhc8e2a94_3             conda-forge
2025-01-24T14:17:33.0792790Z   debugpy                        1.8.1                py312h20a0b95_0          conda-forge
2025-01-24T14:17:33.0793330Z   decorator                      5.1.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0793880Z   defusedxml                     0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0794560Z   docutils                       0.20.1               py312h81bd7bf_3          conda-forge
2025-01-24T14:17:33.0795090Z   dot2tex                        2.11.3               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0795620Z   entrypoints                    0.4                  pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0796190Z   exceptiongroup                 1.2.0                pyhd8ed1ab_2             conda-forge
2025-01-24T14:17:33.0796650Z   executing                      2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0797060Z   expat                          2.6.2                hebf3989_0               conda-forge
2025-01-24T14:17:33.0797600Z   font-ttf-dejavu-sans-mono      2.37                 hab24e00_0               conda-forge
2025-01-24T14:17:33.0798090Z   font-ttf-inconsolata           3.000                h77eed37_0               conda-forge
2025-01-24T14:17:33.0798710Z   font-ttf-source-code-pro       2.038                h77eed37_0               conda-forge
2025-01-24T14:17:33.0799180Z   font-ttf-ubuntu                0.83                 h77eed37_2               conda-forge
2025-01-24T14:17:33.0799630Z   fontconfig                     2.14.2               h82840c6_0               conda-forge
2025-01-24T14:17:33.0800080Z   fonts-conda-ecosystem          1                    0                        conda-forge
2025-01-24T14:17:33.0801460Z   fonts-conda-forge              1                    0                        conda-forge
2025-01-24T14:17:33.0801890Z   fonttools                      4.53.0               py312h7e5086c_0          conda-forge
2025-01-24T14:17:33.0802230Z   fqdn                           1.5.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0802660Z   freetype                       2.12.1               hadb7bae_2               conda-forge
2025-01-24T14:17:33.0803000Z   fribidi                        1.0.10               h27ca646_0               conda-forge
2025-01-24T14:17:33.0803730Z   future                         1.0.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0804290Z   gdk-pixbuf                     2.42.12              h7ddc832_0               conda-forge
2025-01-24T14:17:33.0804680Z   gettext                        0.22.5               h8fbad5d_2               conda-forge
2025-01-24T14:17:33.0805050Z   gettext-tools                  0.22.5               h8fbad5d_2               conda-forge
2025-01-24T14:17:33.0805480Z   giflib                         5.2.2                h93a5062_0               conda-forge
2025-01-24T14:17:33.0805860Z   git-lfs                        3.5.1                hce30654_0               conda-forge
2025-01-24T14:17:33.0806290Z   gmp                            6.3.0                hebf3989_1               conda-forge
2025-01-24T14:17:33.0806680Z   gmpy2                          2.1.5                py312hfa9fade_1          conda-forge
2025-01-24T14:17:33.0807510Z   graphite2                      1.3.13               hebf3989_1003            conda-forge
2025-01-24T14:17:33.0807880Z   graphviz                       11.0.0               h9bb9bc9_0               conda-forge
2025-01-24T14:17:33.0808270Z   gtk2                           2.24.33              h7895bb2_4               conda-forge
2025-01-24T14:17:33.0808600Z   gts                            0.7.6                he42f4ea_4               conda-forge
2025-01-24T14:17:33.0808960Z   h11                            0.14.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0809260Z   h2                             4.1.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0809610Z   h5py                           3.11.0               nompi_py312h903599c_102  conda-forge
2025-01-24T14:17:33.0809920Z   harfbuzz                       8.5.0                h1836168_0               conda-forge
2025-01-24T14:17:33.0810290Z   hdf5                           1.14.3               nompi_hec07895_105       conda-forge
2025-01-24T14:17:33.0810630Z   hpack                          4.0.0                pyh9f0ad1d_0             conda-forge
2025-01-24T14:17:33.0811090Z   httpcore                       1.0.5                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0811410Z   httpx                          0.27.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0811800Z   hyperframe                     6.0.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0812180Z   icu                            73.2                 hc8870d7_0               conda-forge
2025-01-24T14:17:33.0812490Z   idna                           3.7                  pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0812880Z   imagesize                      1.4.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0813310Z   importlib-metadata             7.1.0                pyha770c72_0             conda-forge
2025-01-24T14:17:33.0813690Z   importlib_metadata             7.1.0                hd8ed1ab_0               conda-forge
2025-01-24T14:17:33.0814110Z   importlib_resources            6.4.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0814470Z   iniconfig                      2.0.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0814850Z   ipykernel                      6.29.4               pyh57ce528_0             conda-forge
2025-01-24T14:17:33.0815190Z   ipython                        8.25.0               pyh707e725_0             conda-forge
2025-01-24T14:17:33.0815590Z   ipython_genutils               0.2.0                pyhd8ed1ab_1             conda-forge
2025-01-24T14:17:33.0815940Z   ipywidgets                     7.8.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0816320Z   isoduration                    20.11.0              pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0816700Z   jedi                           0.19.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0817360Z   jinja2                         3.1.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0817740Z   json5                          0.9.25               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0818070Z   jsonpointer                    3.0.0                py312h81bd7bf_0          conda-forge
2025-01-24T14:17:33.0818460Z   jsonschema                     4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0818840Z   jsonschema-specifications      2023.12.1            pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0819320Z   jsonschema-with-format-nongpl  4.22.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0819710Z   jupyter-lsp                    2.2.5                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0820120Z   jupyter_client                 8.6.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0820500Z   jupyter_core                   5.7.2                py312h81bd7bf_0          conda-forge
2025-01-24T14:17:33.0821070Z   jupyter_events                 0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0821450Z   jupyter_server                 2.14.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0821870Z   jupyter_server_terminals       0.5.3                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0822290Z   jupyterlab                     4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0824170Z   jupyterlab_pygments            0.3.0                pyhd8ed1ab_1             conda-forge
2025-01-24T14:17:33.0824650Z   jupyterlab_server              2.27.2               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0825190Z   jupyterlab_widgets             1.1.7                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0845890Z   kiwisolver                     1.4.5                py312h389731b_1          conda-forge
2025-01-24T14:17:33.0846270Z   krb5                           1.21.2               h92f50d5_0               conda-forge
2025-01-24T14:17:33.0846720Z   latexcodec                     2.0.1                pyh9f0ad1d_0             conda-forge
2025-01-24T14:17:33.0847130Z   lcms2                          2.16                 ha0e7c42_0               conda-forge
2025-01-24T14:17:33.0847470Z   lerc                           4.0.0                h9a09cb3_0               conda-forge
2025-01-24T14:17:33.0848020Z   libaec                         1.1.3                hebf3989_0               conda-forge
2025-01-24T14:17:33.0848440Z   libasprintf                    0.22.5               h8fbad5d_2               conda-forge
2025-01-24T14:17:33.0848830Z   libasprintf-devel              0.22.5               h8fbad5d_2               conda-forge
2025-01-24T14:17:33.0849280Z   libblas                        3.9.0                22_osxarm64_openblas     conda-forge
2025-01-24T14:17:33.0849610Z   libbrotlicommon                1.1.0                hb547adb_1               conda-forge
2025-01-24T14:17:33.0850030Z   libbrotlidec                   1.1.0                hb547adb_1               conda-forge
2025-01-24T14:17:33.0850490Z   libbrotlienc                   1.1.0                hb547adb_1               conda-forge
2025-01-24T14:17:33.0850830Z   libcblas                       3.9.0                22_osxarm64_openblas     conda-forge
2025-01-24T14:17:33.0851210Z   libcurl                        8.8.0                h7b6f9a7_0               conda-forge
2025-01-24T14:17:33.0851570Z   libcxx                         17.0.6               h5f092b4_0               conda-forge
2025-01-24T14:17:33.0851870Z   libdeflate                     1.20                 h93a5062_0               conda-forge
2025-01-24T14:17:33.0852380Z   libedit                        3.1.20191231         hc8eb9b7_2               conda-forge
2025-01-24T14:17:33.0852830Z   libev                          4.33                 h93a5062_2               conda-forge
2025-01-24T14:17:33.0853550Z   libexpat                       2.6.2                hebf3989_0               conda-forge
2025-01-24T14:17:33.0853980Z   libffi                         3.4.2                h3422bc3_5               conda-forge
2025-01-24T14:17:33.0854300Z   libgd                          2.3.3                hfdf3952_9               conda-forge
2025-01-24T14:17:33.0854680Z   libgettextpo                   0.22.5               h8fbad5d_2               conda-forge
2025-01-24T14:17:33.0855040Z   libgettextpo-devel             0.22.5               h8fbad5d_2               conda-forge
2025-01-24T14:17:33.0855450Z   libgfortran                    5.0.0                13_2_0_hd922786_3        conda-forge
2025-01-24T14:17:33.0855800Z   libgfortran5                   13.2.0               hf226fd6_3               conda-forge
2025-01-24T14:17:33.0856130Z   libglib                        2.80.2               h59d46d9_1               conda-forge
2025-01-24T14:17:33.0856460Z   libiconv                       1.17                 h0d3ecfb_2               conda-forge
2025-01-24T14:17:33.0857130Z   libintl                        0.22.5               h8fbad5d_2               conda-forge
2025-01-24T14:17:33.0857460Z   libintl-devel                  0.22.5               h8fbad5d_2               conda-forge
2025-01-24T14:17:33.0857890Z   libjpeg-turbo                  3.0.0                hb547adb_1               conda-forge
2025-01-24T14:17:33.0858190Z   liblapack                      3.9.0                22_osxarm64_openblas     conda-forge
2025-01-24T14:17:33.0858490Z   libllvm14                      14.0.6               hd1a9a77_4               conda-forge
2025-01-24T14:17:33.0858890Z   libnghttp2                     1.58.0               ha4dd798_1               conda-forge
2025-01-24T14:17:33.0859320Z   libopenblas                    0.3.27               openmp_h6c19121_0        conda-forge
2025-01-24T14:17:33.0859660Z   libpng                         1.6.43               h091b4b1_0               conda-forge
2025-01-24T14:17:33.0859990Z   librsvg                        2.58.1               hbc281fb_0               conda-forge
2025-01-24T14:17:33.0860280Z   libsodium                      1.0.18               h27ca646_1               conda-forge
2025-01-24T14:17:33.0860610Z   libsqlite                      3.46.0               hfb93653_0               conda-forge
2025-01-24T14:17:33.0860900Z   libssh2                        1.11.0               h7a5bd25_0               conda-forge
2025-01-24T14:17:33.0861170Z   libtiff                        4.6.0                h07db509_3               conda-forge
2025-01-24T14:17:33.0861450Z   libwebp                        1.4.0                h54798ee_0               conda-forge
2025-01-24T14:17:33.0861760Z   libwebp-base                   1.4.0                h93a5062_0               conda-forge
2025-01-24T14:17:33.0862050Z   libxcb                         1.16                 hf2054a2_0               conda-forge
2025-01-24T14:17:33.0862320Z   libxml2                        2.12.7               ha661575_1               conda-forge
2025-01-24T14:17:33.0862680Z   libxslt                        1.1.39               h223e5b9_0               conda-forge
2025-01-24T14:17:33.0862960Z   libzlib                        1.3.1                hfb2fe0b_1               conda-forge
2025-01-24T14:17:33.0863250Z   llvm-openmp                    18.1.7               hde57baf_0               conda-forge
2025-01-24T14:17:33.0863590Z   llvmlite                       0.42.0               py312h17030e7_1          conda-forge
2025-01-24T14:17:33.0863900Z   lxml                           5.2.2                py312h0e5ab22_0          conda-forge
2025-01-24T14:17:33.0864250Z   lz4-c                          1.9.4                hb7217d7_0               conda-forge
2025-01-24T14:17:33.0864530Z   markupsafe                     2.1.5                py312he37b823_0          conda-forge
2025-01-24T14:17:33.0864840Z   matplotlib-base                3.8.4                py312h4479663_2          conda-forge
2025-01-24T14:17:33.0865780Z   matplotlib-inline              0.1.7                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0866120Z   mistune                        3.0.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0866390Z   mpc                            1.3.1                h91ba8db_0               conda-forge
2025-01-24T14:17:33.0866690Z   mpfr                           4.2.1                h41d338b_1               conda-forge
2025-01-24T14:17:33.0866970Z   mpmath                         1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0867250Z   munkres                        1.1.4                pyh9f0ad1d_0             conda-forge
2025-01-24T14:17:33.0867550Z   mypy_extensions                1.0.0                pyha770c72_0             conda-forge
2025-01-24T14:17:33.0867850Z   nbclassic                      1.1.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0868140Z   nbclient                       0.10.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0868590Z   nbconvert                      7.16.4               hd8ed1ab_1               conda-forge
2025-01-24T14:17:33.0868960Z   nbconvert-core                 7.16.4               pyhd8ed1ab_1             conda-forge
2025-01-24T14:17:33.0869370Z   nbconvert-pandoc               7.16.4               hd8ed1ab_1               conda-forge
2025-01-24T14:17:33.0869760Z   nbformat                       5.10.4               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0870090Z   nbsphinx                       0.9.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0870440Z   ncurses                        6.5                  hb89a1cb_0               conda-forge
2025-01-24T14:17:33.0870730Z   nest-asyncio                   1.6.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0871070Z   networkx                       3.3                  pyhd8ed1ab_1             conda-forge
2025-01-24T14:17:33.0871390Z   notebook                       7.2.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0871730Z   notebook-shim                  0.2.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0872020Z   numba                          0.59.1               py312hbaff935_0          conda-forge
2025-01-24T14:17:33.0872290Z   numexpr                        2.10.0               py312h8ae5369_0          conda-forge
2025-01-24T14:17:33.0872560Z   numpy                          1.26.4               py312h8442bc7_0          conda-forge
2025-01-24T14:17:33.0872830Z   numpydoc                       1.7.0                pyhd8ed1ab_1             conda-forge
2025-01-24T14:17:33.0873100Z   openjpeg                       2.5.2                h9f1df11_0               conda-forge
2025-01-24T14:17:33.0873380Z   openssl                        3.3.1                hfb2fe0b_0               conda-forge
2025-01-24T14:17:33.0873650Z   overrides                      7.7.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0873940Z   packaging                      24.1                 pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0874210Z   pandas                         2.2.2                py312h8ae5369_1          conda-forge
2025-01-24T14:17:33.0874480Z   pandoc                         3.2                  hce30654_0               conda-forge
2025-01-24T14:17:33.0874760Z   pandocfilters                  1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0875050Z   pango                          1.54.0               h5cb9fbc_0               conda-forge
2025-01-24T14:17:33.0875330Z   parso                          0.8.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0875610Z   pathspec                       0.12.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0875870Z   pbr                            6.0.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0876270Z   pcre2                          10.44                h297a79d_0               conda-forge
2025-01-24T14:17:33.0876550Z   pexpect                        4.9.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0876840Z   pickleshare                    0.7.5                py_1003                  conda-forge
2025-01-24T14:17:33.0877110Z   pillow                         10.3.0               py312h39b1d8d_1          conda-forge
2025-01-24T14:17:33.0877380Z   pip                            24.0                 pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0877640Z   pixman                         0.43.4               hebf3989_0               conda-forge
2025-01-24T14:17:33.0877950Z   pkgutil-resolve-name           1.3.10               pyhd8ed1ab_1             conda-forge
2025-01-24T14:17:33.0878270Z   platformdirs                   4.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0878550Z   plotly                         5.22.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0879060Z   pluggy                         1.5.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0879350Z   prometheus_client              0.20.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0879660Z   prompt-toolkit                 3.0.47               pyha770c72_0             conda-forge
2025-01-24T14:17:33.0879950Z   psutil                         5.9.8                py312he37b823_0          conda-forge
2025-01-24T14:17:33.0880240Z   pthread-stubs                  0.4                  h27ca646_1001            conda-forge
2025-01-24T14:17:33.0880530Z   ptyprocess                     0.7.0                pyhd3deb0d_0             conda-forge
2025-01-24T14:17:33.0880810Z   pure_eval                      0.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0881100Z   py-cpuinfo                     9.0.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0881370Z   pybtex                         0.24.0               pyhd8ed1ab_2             conda-forge
2025-01-24T14:17:33.0881670Z   pybtex-docutils                1.0.3                py312h81bd7bf_1          conda-forge
2025-01-24T14:17:33.0881970Z   pycparser                      2.22                 pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0882260Z   pyerfa                         2.0.1.4              py312hbebd99a_1          conda-forge
2025-01-24T14:17:33.0882530Z   pygments                       2.18.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0882820Z   pygraphviz                     1.13                 py312h5f4d302_1          conda-forge
2025-01-24T14:17:33.0883110Z   pyobjc-core                    10.3.1               py312hbb55c70_0          conda-forge
2025-01-24T14:17:33.0883430Z   pyobjc-framework-cocoa         10.3.1               py312hbb55c70_0          conda-forge
2025-01-24T14:17:33.0883740Z   pyparsing                      3.1.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0884030Z   pysocks                        1.7.1                pyha2e5f31_6             conda-forge
2025-01-24T14:17:33.0884310Z   pytables                       3.9.2                py312hb622ae1_2          conda-forge
2025-01-24T14:17:33.0884580Z   pytest                         8.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0884850Z   pytest-cov                     5.0.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0885160Z   pytest-doctestplus             1.2.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0885470Z   pytest-html                    4.1.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0885770Z   pytest-metadata                3.1.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0886060Z   python                         3.12.4               h30c5eda_0_cpython       conda-forge
2025-01-24T14:17:33.0886480Z   python-dateutil                2.9.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0886820Z   python-fastjsonschema          2.20.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0887160Z   python-json-logger             2.0.7                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0887470Z   python-tzdata                  2024.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0887770Z   python_abi                     3.12                 4_cp312                  conda-forge
2025-01-24T14:17:33.0888040Z   pytz                           2024.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0888300Z   pyyaml                         6.0.1                py312h02f2b3b_1          conda-forge
2025-01-24T14:17:33.0888560Z   pyzmq                          26.0.3               py312hfa13136_0          conda-forge
2025-01-24T14:17:33.0888830Z   qgrid                          1.3.1                pyhd8ed1ab_4             conda-forge
2025-01-24T14:17:33.0889230Z   radioactivedecay               0.5.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0889530Z   readline                       8.2                  h92ec313_1               conda-forge
2025-01-24T14:17:33.0889810Z   recommonmark                   0.7.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0890110Z   referencing                    0.35.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0890400Z   requests                       2.32.3               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0890700Z   rfc3339-validator              0.1.4                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0891010Z   rfc3986-validator              0.1.1                pyh9f0ad1d_0             conda-forge
2025-01-24T14:17:33.0891310Z   rpds-py                        0.18.1               py312h552d48e_0          conda-forge
2025-01-24T14:17:33.0891580Z   ruff                           0.4.9                py312h3402d49_0          conda-forge
2025-01-24T14:17:33.0891840Z   scipy                          1.13.1               py312h14ffa8f_0          conda-forge
2025-01-24T14:17:33.0892120Z   send2trash                     1.8.3                pyh31c8845_0             conda-forge
2025-01-24T14:17:33.0892410Z   setuptools                     70.0.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0892700Z   setuptools-scm                 8.1.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0893000Z   setuptools_scm                 8.1.0                hd8ed1ab_0               conda-forge
2025-01-24T14:17:33.0893290Z   six                            1.16.0               pyh6c4a22f_0             conda-forge
2025-01-24T14:17:33.0893560Z   snakeviz                       2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0893840Z   snappy                         1.2.0                hd04f947_1               conda-forge
2025-01-24T14:17:33.0894130Z   sniffio                        1.3.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0894430Z   snowballstemmer                2.2.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0894740Z   soupsieve                      2.5                  pyhd8ed1ab_1             conda-forge
2025-01-24T14:17:33.0895020Z   sphinx                         7.3.7                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0895320Z   sphinx-astropy                 1.9.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0895650Z   sphinx-automodapi              0.17.0               pyh717bed2_1             conda-forge
2025-01-24T14:17:33.0895970Z   sphinx-gallery                 0.16.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0896300Z   sphinx-jsonschema              1.19.1               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0896730Z   sphinx_bootstrap_theme         0.8.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0897070Z   sphinx_rtd_theme               2.0.0                pyha770c72_0             conda-forge
2025-01-24T14:17:33.0897410Z   sphinxcontrib-apidoc           0.3.0                py_1                     conda-forge
2025-01-24T14:17:33.0897770Z   sphinxcontrib-applehelp        1.0.8                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0898120Z   sphinxcontrib-bibtex           2.6.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0898630Z   sphinxcontrib-devhelp          1.0.6                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0899040Z   sphinxcontrib-htmlhelp         2.0.5                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0899950Z   sphinxcontrib-jquery           4.1                  pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0900310Z   sphinxcontrib-jsmath           1.0.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0900840Z   sphinxcontrib-qthelp           1.0.7                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0901220Z   sphinxcontrib-serializinghtml  1.1.10               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0901570Z   stack_data                     0.6.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0901860Z   sympy                          1.12.1               pypyh2585a3b_103         conda-forge
2025-01-24T14:17:33.0902140Z   tabulate                       0.9.0                pyhd8ed1ab_1             conda-forge
2025-01-24T14:17:33.0902430Z   tenacity                       8.4.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0902720Z   terminado                      0.18.1               pyh31c8845_0             conda-forge
2025-01-24T14:17:33.0903010Z   tinycss2                       1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0903290Z   tk                             8.6.13               h5083fa2_1               conda-forge
2025-01-24T14:17:33.0903560Z   toml                           0.10.2               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0903830Z   tomli                          2.0.1                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0904120Z   tornado                        6.4.1                py312h7e5086c_0          conda-forge
2025-01-24T14:17:33.0904390Z   tqdm                           4.66.4               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0904660Z   traitlets                      5.14.3               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0904950Z   typed-ast                      1.5.5                py312h02f2b3b_1          conda-forge
2025-01-24T14:17:33.0905270Z   types-python-dateutil          2.9.0.20240316       pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0905610Z   typing-extensions              4.12.2               hd8ed1ab_0               conda-forge
2025-01-24T14:17:33.0905940Z   typing_extensions              4.12.2               pyha770c72_0             conda-forge
2025-01-24T14:17:33.0906240Z   typing_utils                   0.1.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0906520Z   tzdata                         2024a                h0c530f3_0               conda-forge
2025-01-24T14:17:33.0906800Z   uri-template                   1.3.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0907090Z   urllib3                        2.2.2                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0907360Z   wcwidth                        0.2.13               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0907640Z   webcolors                      24.6.0               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0907930Z   webencodings                   0.5.1                pyhd8ed1ab_2             conda-forge
2025-01-24T14:17:33.0908240Z   websocket-client               1.8.0                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0908650Z   wheel                          0.43.0               pyhd8ed1ab_1             conda-forge
2025-01-24T14:17:33.0908960Z   widgetsnbextension             3.6.6                pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0909270Z   xorg-libxau                    1.0.11               hb547adb_0               conda-forge
2025-01-24T14:17:33.0909560Z   xorg-libxdmcp                  1.1.3                h27ca646_0               conda-forge
2025-01-24T14:17:33.0909830Z   xz                             5.2.6                h57fd34a_0               conda-forge
2025-01-24T14:17:33.0910080Z   yaml                           0.2.5                h3422bc3_2               conda-forge
2025-01-24T14:17:33.0910340Z   zeromq                         4.3.5                hcc0f68c_4               conda-forge
2025-01-24T14:17:33.0910600Z   zipp                           3.19.2               pyhd8ed1ab_0             conda-forge
2025-01-24T14:17:33.0910960Z   zlib                           1.3.1                hfb2fe0b_1               conda-forge
2025-01-24T14:17:33.0911220Z   zlib-ng                        2.0.7                h1a8c8d9_0               conda-forge
2025-01-24T14:17:33.0911480Z   zstd                           1.5.6                hb46c0d2_0               conda-forge
2025-01-24T14:17:33.0911990Z ##[endgroup]
2025-01-24T14:17:33.0976750Z ##[group]Run pip install -e . --user
2025-01-24T14:17:33.0977000Z [36;1mpip install -e . --user[0m
2025-01-24T14:17:33.2635930Z shell: /bin/bash -l {0}
2025-01-24T14:17:33.2636130Z env:
2025-01-24T14:17:33.2636260Z   CACHE_NUMBER: 0
2025-01-24T14:17:33.2636750Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:17:33.2637250Z   CODECOV_TOKEN: 
2025-01-24T14:17:33.2637420Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-24T14:17:33.2637660Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-24T14:17:33.2637950Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:17:33.2638190Z ##[endgroup]
2025-01-24T14:17:34.2139940Z Obtaining file:///Users/runner/work/tardis/tardis
2025-01-24T14:17:34.2224940Z   Installing build dependencies: started
2025-01-24T14:17:37.4190360Z   Installing build dependencies: finished with status 'done'
2025-01-24T14:17:37.4199160Z   Checking if build backend supports build_editable: started
2025-01-24T14:17:37.5088840Z   Checking if build backend supports build_editable: finished with status 'done'
2025-01-24T14:17:37.5099600Z   Getting requirements to build editable: started
2025-01-24T14:17:38.0285400Z   Getting requirements to build editable: finished with status 'done'
2025-01-24T14:17:38.0296630Z   Preparing editable metadata (pyproject.toml): started
2025-01-24T14:17:38.3891850Z   Preparing editable metadata (pyproject.toml): finished with status 'done'
2025-01-24T14:17:38.4286170Z Requirement already satisfied: astropy in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from tardis==0.0.0) (6.1.1)
2025-01-24T14:17:38.4553500Z Requirement already satisfied: numpy>=1.23 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (1.26.4)
2025-01-24T14:17:38.4566500Z Requirement already satisfied: pyerfa>=2.0.1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (2.0.1.4)
2025-01-24T14:17:38.4569740Z Requirement already satisfied: astropy-iers-data>=0.2024.5.27.0.30.8 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (0.2024.6.17.0.31.35)
2025-01-24T14:17:38.4573750Z Requirement already satisfied: PyYAML>=3.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (6.0.1)
2025-01-24T14:17:38.4580530Z Requirement already satisfied: packaging>=19.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from astropy->tardis==0.0.0) (24.1)
2025-01-24T14:17:38.4647860Z Building wheels for collected packages: tardis
2025-01-24T14:17:38.4657010Z   Building editable for tardis (pyproject.toml): started
2025-01-24T14:17:39.1117580Z   Building editable for tardis (pyproject.toml): finished with status 'done'
2025-01-24T14:17:39.1196700Z   Created wheel for tardis: filename=tardis-0.0.0-0.editable-py3-none-any.whl size=8876 sha256=c149dfd9cab7ec1759a209141a68ef5fb038213e138ee753841bb4428783b316
2025-01-24T14:17:39.1225020Z   Stored in directory: /private/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T/pip-ephem-wheel-cache-lr9r_r9i/wheels/bb/4f/6a/0829b918c1c10bc28535ce7f14be21eee54375bdd9cd0c306a
2025-01-24T14:17:39.1229900Z Successfully built tardis
2025-01-24T14:17:39.6820830Z Installing collected packages: tardis
2025-01-24T14:17:39.6883460Z Successfully installed tardis-0.0.0
2025-01-24T14:17:39.9284070Z ##[group]Run pip install qgridnext
2025-01-24T14:17:39.9284320Z [36;1mpip install qgridnext[0m
2025-01-24T14:17:39.9371000Z shell: /bin/bash -l {0}
2025-01-24T14:17:39.9371190Z env:
2025-01-24T14:17:39.9371310Z   CACHE_NUMBER: 0
2025-01-24T14:17:39.9371810Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:17:39.9372310Z   CODECOV_TOKEN: 
2025-01-24T14:17:39.9372480Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-24T14:17:39.9372750Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-24T14:17:39.9373020Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:17:39.9373250Z ##[endgroup]
2025-01-24T14:17:40.6682170Z Collecting qgridnext
2025-01-24T14:17:40.7000650Z   Downloading qgridnext-2.0.4-py3-none-any.whl.metadata (9.9 kB)
2025-01-24T14:17:40.7626510Z Requirement already satisfied: pandas>=0.20.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (2.2.2)
2025-01-24T14:17:40.7642940Z Requirement already satisfied: ipywidgets>=7.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (7.8.0)
2025-01-24T14:17:40.7643790Z Requirement already satisfied: numpy in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (1.26.4)
2025-01-24T14:17:40.7645310Z Requirement already satisfied: traitlets in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from qgridnext) (5.14.3)
2025-01-24T14:17:40.7700570Z Requirement already satisfied: comm>=0.1.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-24T14:17:40.7705900Z Requirement already satisfied: ipython-genutils~=0.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (0.2.0)
2025-01-24T14:17:40.7714520Z Requirement already satisfied: widgetsnbextension~=3.6.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (3.6.6)
2025-01-24T14:17:40.7723300Z Requirement already satisfied: ipython>=4.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (8.25.0)
2025-01-24T14:17:40.7731650Z Requirement already satisfied: jupyterlab-widgets<3,>=1.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipywidgets>=7.0.0->qgridnext) (1.1.7)
2025-01-24T14:17:40.8131270Z Requirement already satisfied: python-dateutil>=2.8.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2.9.0)
2025-01-24T14:17:40.8195180Z Requirement already satisfied: pytz>=2020.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-24T14:17:40.8214050Z Requirement already satisfied: tzdata>=2022.7 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pandas>=0.20.0->qgridnext) (2024.1)
2025-01-24T14:17:40.8423550Z Requirement already satisfied: decorator in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (5.1.1)
2025-01-24T14:17:40.8434410Z Requirement already satisfied: jedi>=0.16 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.19.1)
2025-01-24T14:17:40.8440180Z Requirement already satisfied: matplotlib-inline in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.1.7)
2025-01-24T14:17:40.8446850Z Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (3.0.47)
2025-01-24T14:17:40.8453720Z Requirement already satisfied: pygments>=2.4.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.18.0)
2025-01-24T14:17:40.8459330Z Requirement already satisfied: stack-data in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.6.2)
2025-01-24T14:17:40.8471530Z Requirement already satisfied: pexpect>4.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (4.9.0)
2025-01-24T14:17:40.8505160Z Requirement already satisfied: six>=1.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from python-dateutil>=2.8.2->pandas>=0.20.0->qgridnext) (1.16.0)
2025-01-24T14:17:40.8547230Z Requirement already satisfied: notebook>=4.4.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.2.1)
2025-01-24T14:17:40.8673170Z Requirement already satisfied: parso<0.9.0,>=0.8.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jedi>=0.16->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.8.4)
2025-01-24T14:17:40.8774030Z Requirement already satisfied: jupyter-server<3,>=2.4.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.1)
2025-01-24T14:17:40.8784090Z Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.27.2)
2025-01-24T14:17:40.8798620Z Requirement already satisfied: jupyterlab<4.3,>=4.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-24T14:17:40.8806540Z Requirement already satisfied: notebook-shim<0.3,>=0.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.2.4)
2025-01-24T14:17:40.8812830Z Requirement already satisfied: tornado>=6.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.4.1)
2025-01-24T14:17:40.8832600Z Requirement already satisfied: ptyprocess>=0.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from pexpect>4.3->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.7.0)
2025-01-24T14:17:40.8849980Z Requirement already satisfied: wcwidth in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.13)
2025-01-24T14:17:40.8956010Z Requirement already satisfied: executing>=1.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.0.1)
2025-01-24T14:17:40.8962440Z Requirement already satisfied: asttokens>=2.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (2.4.1)
2025-01-24T14:17:40.8968170Z Requirement already satisfied: pure-eval in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from stack-data->ipython>=4.0.0->ipywidgets>=7.0.0->qgridnext) (0.2.2)
2025-01-24T14:17:40.9191790Z Requirement already satisfied: anyio>=3.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.4.0)
2025-01-24T14:17:40.9201340Z Requirement already satisfied: argon2-cffi>=21.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.1.0)
2025-01-24T14:17:40.9203550Z Requirement already satisfied: jinja2>=3.0.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.1.4)
2025-01-24T14:17:40.9211400Z Requirement already satisfied: jupyter-client>=7.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (8.6.2)
2025-01-24T14:17:40.9218940Z Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.7.2)
2025-01-24T14:17:40.9228550Z Requirement already satisfied: jupyter-events>=0.9.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-24T14:17:40.9234610Z Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.3)
2025-01-24T14:17:40.9246160Z Requirement already satisfied: nbconvert>=6.4.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.16.4)
2025-01-24T14:17:40.9252340Z Requirement already satisfied: nbformat>=5.3.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.10.4)
2025-01-24T14:17:40.9257650Z Requirement already satisfied: overrides>=5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (7.7.0)
2025-01-24T14:17:40.9263530Z Requirement already satisfied: packaging>=22.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.1)
2025-01-24T14:17:40.9268500Z Requirement already satisfied: prometheus-client>=0.9 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.20.0)
2025-01-24T14:17:40.9275380Z Requirement already satisfied: pyzmq>=24 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (26.0.3)
2025-01-24T14:17:40.9280490Z Requirement already satisfied: send2trash>=1.8.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.3)
2025-01-24T14:17:40.9288050Z Requirement already satisfied: terminado>=0.8.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-24T14:17:40.9298510Z Requirement already satisfied: websocket-client>=1.7 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.0)
2025-01-24T14:17:40.9484700Z Requirement already satisfied: async-lru>=1.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.4)
2025-01-24T14:17:40.9492650Z Requirement already satisfied: httpx>=0.25.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.27.0)
2025-01-24T14:17:40.9500940Z Requirement already satisfied: ipykernel>=6.5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.29.4)
2025-01-24T14:17:40.9509940Z Requirement already satisfied: jupyter-lsp>=2.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.5)
2025-01-24T14:17:40.9528840Z Requirement already satisfied: setuptools>=40.1.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (70.0.0)
2025-01-24T14:17:40.9657610Z Requirement already satisfied: babel>=2.10 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.14.0)
2025-01-24T14:17:40.9687550Z Requirement already satisfied: json5>=0.9.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.9.25)
2025-01-24T14:17:40.9697800Z Requirement already satisfied: jsonschema>=4.18.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.22.0)
2025-01-24T14:17:40.9713620Z Requirement already satisfied: requests>=2.31 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.32.3)
2025-01-24T14:17:40.9962620Z Requirement already satisfied: idna>=2.8 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.7)
2025-01-24T14:17:40.9967090Z Requirement already satisfied: sniffio>=1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from anyio>=3.1.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.1)
2025-01-24T14:17:41.0105860Z Requirement already satisfied: argon2-cffi-bindings in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (21.2.0)
2025-01-24T14:17:41.0174720Z Requirement already satisfied: certifi in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2024.6.2)
2025-01-24T14:17:41.0183900Z Requirement already satisfied: httpcore==1.* in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.0.5)
2025-01-24T14:17:41.0230780Z Requirement already satisfied: h11<0.15,>=0.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.14.0)
2025-01-24T14:17:41.0337430Z Requirement already satisfied: appnope in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-24T14:17:41.0344160Z Requirement already satisfied: debugpy>=1.6.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.8.1)
2025-01-24T14:17:41.0360690Z Requirement already satisfied: nest-asyncio in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.6.0)
2025-01-24T14:17:41.0370210Z Requirement already satisfied: psutil in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from ipykernel>=6.5.0->jupyterlab<4.3,>=4.2.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (5.9.8)
2025-01-24T14:17:41.0415650Z Requirement already satisfied: MarkupSafe>=2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jinja2>=3.0.3->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.1.5)
2025-01-24T14:17:41.0551240Z Requirement already satisfied: attrs>=22.2.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (23.2.0)
2025-01-24T14:17:41.0556580Z Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2023.12.1)
2025-01-24T14:17:41.0561960Z Requirement already satisfied: referencing>=0.28.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.35.1)
2025-01-24T14:17:41.0568690Z Requirement already satisfied: rpds-py>=0.7.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.18.1)
2025-01-24T14:17:41.0742100Z Requirement already satisfied: platformdirs>=2.5 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-core!=5.0.*,>=4.12->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.2.2)
2025-01-24T14:17:41.0840760Z Requirement already satisfied: python-json-logger>=2.0.4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.0.7)
2025-01-24T14:17:41.0847210Z Requirement already satisfied: pyyaml>=5.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.0.1)
2025-01-24T14:17:41.0852860Z Requirement already satisfied: rfc3339-validator in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.4)
2025-01-24T14:17:41.0858820Z Requirement already satisfied: rfc3986-validator>=0.1.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.1.1)
2025-01-24T14:17:41.1114530Z Requirement already satisfied: beautifulsoup4 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (4.12.3)
2025-01-24T14:17:41.1126330Z Requirement already satisfied: bleach!=5.0.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (6.1.0)
2025-01-24T14:17:41.1135550Z Requirement already satisfied: defusedxml in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.7.1)
2025-01-24T14:17:41.1144730Z Requirement already satisfied: jupyterlab-pygments in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.3.0)
2025-01-24T14:17:41.1151740Z Requirement already satisfied: mistune<4,>=2.0.3 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.2)
2025-01-24T14:17:41.1158730Z Requirement already satisfied: nbclient>=0.5.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.10.0)
2025-01-24T14:17:41.1168900Z Requirement already satisfied: pandocfilters>=1.4.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.0)
2025-01-24T14:17:41.1174290Z Requirement already satisfied: tinycss2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-24T14:17:41.1246120Z Requirement already satisfied: fastjsonschema>=2.15 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.20.0)
2025-01-24T14:17:41.1548720Z Requirement already satisfied: charset-normalizer<4,>=2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.3.2)
2025-01-24T14:17:41.1650690Z Requirement already satisfied: urllib3<3,>=1.21.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.2.2)
2025-01-24T14:17:41.2158960Z Requirement already satisfied: webencodings in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from bleach!=5.0.0->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (0.5.1)
2025-01-24T14:17:41.2573660Z Requirement already satisfied: fqdn in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.5.1)
2025-01-24T14:17:41.2677980Z Requirement already satisfied: isoduration in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (20.11.0)
2025-01-24T14:17:41.2780320Z Requirement already satisfied: jsonpointer>1.13 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (3.0.0)
2025-01-24T14:17:41.2882800Z Requirement already satisfied: uri-template in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-24T14:17:41.2991590Z Requirement already satisfied: webcolors>=1.11 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (24.6.0)
2025-01-24T14:17:41.3497000Z Requirement already satisfied: cffi>=1.0.1 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.16.0)
2025-01-24T14:17:41.3599460Z Requirement already satisfied: soupsieve>1.2 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from beautifulsoup4->nbconvert>=6.4.4->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.5)
2025-01-24T14:17:41.4204690Z Requirement already satisfied: pycparser in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.22)
2025-01-24T14:17:41.4576270Z Requirement already satisfied: arrow>=0.15.0 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (1.3.0)
2025-01-24T14:17:41.4760380Z Requirement already satisfied: types-python-dateutil>=2.8.10 in /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->notebook>=4.4.1->widgetsnbextension~=3.6.5->ipywidgets>=7.0.0->qgridnext) (2.9.0.20240316)
2025-01-24T14:17:41.5046310Z Downloading qgridnext-2.0.4-py3-none-any.whl (1.3 MB)
2025-01-24T14:17:41.6152600Z    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 11.5 MB/s eta 0:00:00
2025-01-24T14:17:42.2158270Z Installing collected packages: qgridnext
2025-01-24T14:17:42.2612890Z Successfully installed qgridnext-2.0.4
2025-01-24T14:17:42.4883110Z ##[group]Run pytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-24T14:17:42.4884130Z [36;1mpytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-24T14:17:42.4944820Z shell: /bin/bash -l {0}
2025-01-24T14:17:42.4945000Z env:
2025-01-24T14:17:42.4945190Z   CACHE_NUMBER: 0
2025-01-24T14:17:42.4945680Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:17:42.4946200Z   CODECOV_TOKEN: 
2025-01-24T14:17:42.4946390Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-24T14:17:42.4946640Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-24T14:17:42.4946990Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:17:42.4947240Z ##[endgroup]
2025-01-24T14:17:54.8401870Z ============================= test session starts ==============================
2025-01-24T14:17:54.8402800Z platform darwin -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-24T14:17:54.8403340Z rootdir: /Users/runner/work/tardis/tardis
2025-01-24T14:17:54.8403880Z configfile: pyproject.toml
2025-01-24T14:17:54.8404200Z plugins: cov-5.0.0, html-4.1.1, metadata-3.1.1, doctestplus-1.2.1, anyio-4.4.0
2025-01-24T14:17:54.8405030Z collected 1796 items / 2 deselected / 1794 selected
2025-01-24T14:17:54.8405210Z 
2025-01-24T14:17:57.8763810Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-24T14:17:59.3054870Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-24T14:18:00.3891570Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-24T14:18:01.5306960Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-24T14:18:01.5366840Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-24T14:18:02.4219470Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-24T14:18:02.6778620Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-24T14:18:02.6788280Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-24T14:18:05.4175990Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-24T14:18:05.4276190Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-24T14:18:05.4578360Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-24T14:18:32.8085360Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-24T14:18:32.8224350Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-24T14:18:32.8321730Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-24T14:18:32.8534810Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-24T14:18:32.8682730Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-24T14:18:33.0761880Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-24T14:18:33.5009870Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-24T14:18:33.5111390Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-24T14:18:33.6582810Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-24T14:18:33.6684350Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-24T14:19:00.0668100Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-24T14:19:00.8237670Z ............                                                             [ 10%]
2025-01-24T14:19:03.2452850Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-24T14:19:03.3632530Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-24T14:19:04.6885080Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-24T14:19:05.8506150Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-24T14:19:07.7774850Z tardis/opacities/tests/test_tau_sobolev.py ..                            [ 12%]
2025-01-24T14:19:10.1865530Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-24T14:19:54.5375020Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-24T14:20:06.3193250Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-24T14:20:08.0322950Z tardis/plasma/tests/test_complete_plasmas.py .....................s..... [ 13%]
2025-01-24T14:20:10.8608950Z s....ssssss............s............ss.....s....ssssss............s..... [ 18%]
2025-01-24T14:20:12.5693370Z .......ss.....s....ssssss............s............ss.....s....ssssss.... [ 22%]
2025-01-24T14:20:14.9777080Z ........s............ss.....s........ss............s............ss.....s [ 26%]
2025-01-24T14:20:17.7060820Z ........ss............s............ss.....s....ssssss............s...... [ 30%]
2025-01-24T14:20:18.4103780Z ......ss.....s....ssssss............s............ss.....s.ss.ssssss..... [ 34%]
2025-01-24T14:20:21.1489720Z .......s............ss.....s....ssssss............s............ss.....s. [ 38%]
2025-01-24T14:20:24.1507220Z ...ssssss............s............ss.....s....ssssss............s....... [ 42%]
2025-01-24T14:20:26.9775820Z .....ss.....s....ssssss............s............s...........ssssss...... [ 46%]
2025-01-24T14:20:28.6650400Z ......s............s...........ssssss............s............s......... [ 50%]
2025-01-24T14:20:31.3734160Z ..ssssss............s............ss.....s....ssssss............s........ [ 54%]
2025-01-24T14:20:34.4914410Z ....ss.....s....ssssss..........................s.....s....ssss......... [ 58%]
2025-01-24T14:20:34.8788500Z ...................s.....s....ssss.......                                [ 60%]
2025-01-24T14:20:35.1167700Z tardis/plasma/tests/test_hdf_plasma.py ................................. [ 62%]
2025-01-24T14:20:35.1271650Z ......                                                                   [ 62%]
2025-01-24T14:20:35.3883650Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-24T14:22:23.6334840Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-24T14:22:23.6365890Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-24T14:22:43.3304860Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-24T14:22:54.0784210Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-24T14:22:54.6904450Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-24T14:23:01.5630090Z tardis/simulation/tests/test_simulation.py .............                 [ 65%]
2025-01-24T14:23:01.5754520Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-24T14:23:01.8910590Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-24T14:23:01.8954390Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-24T14:23:02.8437070Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-24T14:23:02.8645450Z ..........                                                               [ 69%]
2025-01-24T14:23:03.0082050Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-24T14:23:03.0438290Z .........                                                                [ 72%]
2025-01-24T14:23:24.0577510Z tardis/spectrum/tests/test_spectrum_solver.py ....                       [ 72%]
2025-01-24T14:24:27.6610300Z tardis/tests/test_tardis_full.py ....                                    [ 72%]
2025-01-24T14:25:58.8269660Z tardis/tests/test_tardis_full_formal_integral.py ................        [ 73%]
2025-01-24T14:25:58.8808250Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-24T14:26:00.9062730Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-24T14:26:05.8831010Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-24T14:26:06.0188440Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-24T14:26:06.0280980Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-24T14:26:06.0550710Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-24T14:26:12.8160000Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py x..       [ 81%]
2025-01-24T14:26:12.8268990Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-24T14:26:14.7083160Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-24T14:26:15.0256490Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-24T14:26:15.9809310Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-24T14:26:16.0647990Z XX.........                                                              [ 84%]
2025-01-24T14:26:16.0877910Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-24T14:26:16.3150930Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-24T14:26:16.5858630Z .....                                                                    [ 85%]
2025-01-24T14:26:25.3173570Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ......         [ 85%]
2025-01-24T14:26:25.3361030Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-24T14:26:25.3390590Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-24T14:26:26.4746330Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-24T14:26:26.4875190Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-24T14:26:28.8974940Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py . [ 86%]
2025-01-24T14:26:28.8975790Z                                                                          [ 86%]
2025-01-24T14:26:29.3968390Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-24T14:26:30.9741850Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-24T14:26:32.4666240Z ......                                                                   [ 88%]
2025-01-24T14:26:36.4066960Z tardis/visualization/tools/tests/test_liv_plot.py EEEEEEEEEEEEEEEEEEEEEE [ 90%]
2025-01-24T14:26:37.6635170Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                            [ 91%]
2025-01-24T14:26:40.2317160Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-24T14:26:46.7329130Z ....                                                                     [ 92%]
2025-01-24T14:26:50.3771160Z tardis/visualization/tools/tests/test_sdec_plot.py EEEEEEEEEEEEEEEEEEEEE [ 94%]
2025-01-24T14:26:52.2359600Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                           [ 95%]
2025-01-24T14:26:52.5687040Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-24T14:26:52.6259730Z ....                                                                     [ 96%]
2025-01-24T14:26:53.4341680Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-24T14:26:53.8752180Z ..................                                                       [ 98%]
2025-01-24T14:29:53.4105970Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-24T14:30:01.0948290Z ......                                                                   [100%]
2025-01-24T14:30:01.0949850Z 
2025-01-24T14:30:01.0950630Z ==================================== ERRORS ====================================
2025-01-24T14:30:01.0951890Z ___ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_list] ____
2025-01-24T14:30:01.0952780Z 
2025-01-24T14:30:01.0953450Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.0954290Z 
2025-01-24T14:30:01.0954760Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.0955640Z     def plotter(simulation_simple):
2025-01-24T14:30:01.0956470Z         """
2025-01-24T14:30:01.0957260Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.0958280Z     
2025-01-24T14:30:01.0958890Z         Parameters:
2025-01-24T14:30:01.0959610Z         -----------
2025-01-24T14:30:01.0960330Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.0961250Z     
2025-01-24T14:30:01.0961830Z         Returns:
2025-01-24T14:30:01.0962550Z         --------
2025-01-24T14:30:01.0963280Z         An LIVPlotter instance.
2025-01-24T14:30:01.0963990Z         """
2025-01-24T14:30:01.0964790Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.0965430Z 
2025-01-24T14:30:01.0965970Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.0966930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.0967970Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.0969180Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.0970470Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.0971920Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.0972900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.0973620Z 
2025-01-24T14:30:01.0974380Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.0986820Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.0987260Z packets_mode = 'real'
2025-01-24T14:30:01.0987420Z 
2025-01-24T14:30:01.0987480Z     @classmethod
2025-01-24T14:30:01.0987720Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.0987980Z         """
2025-01-24T14:30:01.0988340Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.0988690Z     
2025-01-24T14:30:01.0988880Z         Parameters
2025-01-24T14:30:01.0992130Z         ----------
2025-01-24T14:30:01.0992490Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.0992860Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.0993230Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.0993560Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.0993890Z     
2025-01-24T14:30:01.0996020Z         Returns
2025-01-24T14:30:01.0996210Z         -------
2025-01-24T14:30:01.0996460Z         SimulationPacketData
2025-01-24T14:30:01.0996670Z         """
2025-01-24T14:30:01.0996920Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.0997180Z             raise ValueError(
2025-01-24T14:30:01.0997490Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.0997790Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.0998090Z             )
2025-01-24T14:30:01.0998310Z         # Properties common among both packet modes
2025-01-24T14:30:01.0998710Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.0999020Z             "line_id"
2025-01-24T14:30:01.1007150Z         )
2025-01-24T14:30:01.1007590Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1007910Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1008240Z         time_of_simulation = (
2025-01-24T14:30:01.1008560Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1008980Z         )
2025-01-24T14:30:01.1009160Z     
2025-01-24T14:30:01.1009460Z         spectrum = (
2025-01-24T14:30:01.1009730Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1010040Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1010310Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1010600Z         )
2025-01-24T14:30:01.1010760Z     
2025-01-24T14:30:01.1010970Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1011240Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1011540Z             return cls(
2025-01-24T14:30:01.1011830Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1012270Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1012700Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1013110Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1013520Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1013770Z                 lines_df=lines_df,
2025-01-24T14:30:01.1014030Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1014330Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1014730Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1014990Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1015540Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1015900Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1016210Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1016510Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1017000Z                 simulation=sim,
2025-01-24T14:30:01.1017230Z             )
2025-01-24T14:30:01.1017380Z         else: # real packets
2025-01-24T14:30:01.1017660Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1017970Z             # which got emitted
2025-01-24T14:30:01.1018240Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1018460Z >           return cls(
2025-01-24T14:30:01.1018780Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1019190Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1019520Z                     mask
2025-01-24T14:30:01.1019750Z                 ],
2025-01-24T14:30:01.1020050Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1020430Z                     mask
2025-01-24T14:30:01.1020620Z                 ],
2025-01-24T14:30:01.1020950Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1021250Z                     mask
2025-01-24T14:30:01.1021490Z                 ],
2025-01-24T14:30:01.1021770Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1022150Z                 lines_df=lines_df,
2025-01-24T14:30:01.1022460Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1022940Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1023290Z                     mask
2025-01-24T14:30:01.1023590Z                 ],
2025-01-24T14:30:01.1024280Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1024740Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1025090Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1025560Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1025840Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1026180Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1026440Z                 simulation=sim,
2025-01-24T14:30:01.1026710Z             )
2025-01-24T14:30:01.1027140Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1027530Z 
2025-01-24T14:30:01.1027760Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1028200Z ---------------------------- Captured stdout setup -----------------------------
2025-01-24T14:30:01.1063750Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-24T14:30:01.1065770Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-24T14:30:01.1067240Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1068300Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-24T14:30:01.1069270Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1070250Z 	
2025-01-24T14:30:01.1070930Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-24T14:30:01.1071840Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1072420Z 	
2025-01-24T14:30:01.1072880Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-24T14:30:01.1073730Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-24T14:30:01.1074420Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:30:01.1075130Z  ([1mbase.py[0m:657)
2025-01-24T14:30:01.1075780Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1076430Z 	
2025-01-24T14:30:01.1077020Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-24T14:30:01.1077840Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1079660Z 	
2025-01-24T14:30:01.1080080Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-24T14:30:01.1080670Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-24T14:30:01.1081280Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-24T14:30:01.1081820Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-24T14:30:01.1082410Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-24T14:30:01.1083060Z  ([1mbase.py[0m:650)
2025-01-24T14:30:01.1083840Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1084480Z 	
2025-01-24T14:30:01.1084930Z 	Current t_inner = 9974.969 K
2025-01-24T14:30:01.1085550Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-24T14:30:01.1086450Z  ([1mbase.py[0m:652)
2025-01-24T14:30:01.1087130Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1087770Z 	
2025-01-24T14:30:01.1088370Z 	Starting iteration 2 of 3 ([1mbase.py[0m:444)
2025-01-24T14:30:01.1089180Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1089780Z 	
2025-01-24T14:30:01.1090360Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-24T14:30:01.1091000Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-24T14:30:01.1091620Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:30:01.1092310Z  ([1mbase.py[0m:657)
2025-01-24T14:30:01.1092910Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1093560Z 	
2025-01-24T14:30:01.1094070Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-24T14:30:01.1094800Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1095450Z 	
2025-01-24T14:30:01.1095860Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-24T14:30:01.1097430Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-24T14:30:01.1098020Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-24T14:30:01.1098670Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-24T14:30:01.1099260Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-24T14:30:01.1100040Z  ([1mbase.py[0m:650)
2025-01-24T14:30:01.1100750Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1101450Z 	
2025-01-24T14:30:01.1102020Z 	Current t_inner = 10712.281 K
2025-01-24T14:30:01.1102740Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-24T14:30:01.1103420Z  ([1mbase.py[0m:652)
2025-01-24T14:30:01.1107980Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1108240Z 	
2025-01-24T14:30:01.1108390Z 	Simulation finished in 2 iterations 
2025-01-24T14:30:01.1108660Z 	Simulation took 1.48 s
2025-01-24T14:30:01.1108890Z  ([1mbase.py[0m:542)
2025-01-24T14:30:01.1109140Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1109430Z 	
2025-01-24T14:30:01.1109790Z 	Starting iteration 3 of 3 ([1mbase.py[0m:444)
2025-01-24T14:30:01.1110120Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:30:01.1135410Z 	
2025-01-24T14:30:01.1135700Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-24T14:30:01.1135990Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-24T14:30:01.1136280Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:30:01.1136870Z  ([1mbase.py[0m:657)
2025-01-24T14:30:01.1137180Z ---------------------------- Captured stderr setup -----------------------------
2025-01-24T14:30:01.1137400Z 
2025-01-24T14:30:01.1137530Z Iterations:                                                                                46/? [07:37<00:00,  4.27s/it]
2025-01-24T14:30:01.1137730Z 
2025-01-24T14:30:01.1137970Z Packets:                                                                                   103999/? [00:05<00:00, 147818.36it/s]    [A
2025-01-24T14:30:01.1138240Z 
2025-01-24T14:30:01.1138450Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:30:01.1138780Z Iterations:                                                                                47/? [07:38<00:00,  3.21s/it]
2025-01-24T14:30:01.1139460Z 
2025-01-24T14:30:01.1206230Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 128712.93it/s][A
2025-01-24T14:30:01.1206930Z 
2025-01-24T14:30:01.1207630Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]               [A
2025-01-24T14:30:01.1208420Z Iterations:                                                                                48/? [07:38<00:00,  2.47s/it]
2025-01-24T14:30:01.1208910Z 
2025-01-24T14:30:01.1209550Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 99566.87it/s][A
2025-01-24T14:30:01.1210500Z ------------------------------ Captured log setup ------------------------------
2025-01-24T14:30:01.1212120Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-24T14:30:01.1213910Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-24T14:30:01.1214800Z INFO     tardis.simulation.base:base.py:444 
2025-01-24T14:30:01.1215390Z 	Starting iteration 1 of 3
2025-01-24T14:30:01.1215900Z INFO     tardis.simulation.base:base.py:657 
2025-01-24T14:30:01.1216510Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-24T14:30:01.1217080Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-24T14:30:01.1217660Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:30:01.1218030Z 
2025-01-24T14:30:01.1218260Z INFO     tardis.simulation.base:base.py:649 
2025-01-24T14:30:01.1218840Z 	Plasma stratification:
2025-01-24T14:30:01.1220210Z INFO     tardis.simulation.base:base.py:650 
2025-01-24T14:30:01.1220850Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-24T14:30:01.1221430Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-24T14:30:01.1221960Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-24T14:30:01.1222500Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-24T14:30:01.1223040Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-24T14:30:01.1223410Z 
2025-01-24T14:30:01.1223630Z INFO     tardis.simulation.base:base.py:652 
2025-01-24T14:30:01.1224190Z 	Current t_inner = 9974.969 K
2025-01-24T14:30:01.1224740Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-24T14:30:01.1225160Z 
2025-01-24T14:30:01.1225380Z INFO     tardis.simulation.base:base.py:444 
2025-01-24T14:30:01.1225950Z 	Starting iteration 2 of 3
2025-01-24T14:30:01.1226450Z INFO     tardis.simulation.base:base.py:657 
2025-01-24T14:30:01.1227060Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-24T14:30:01.1227630Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-24T14:30:01.1228220Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:30:01.1228600Z 
2025-01-24T14:30:01.1228820Z INFO     tardis.simulation.base:base.py:649 
2025-01-24T14:30:01.1229390Z 	Plasma stratification:
2025-01-24T14:30:01.1229950Z INFO     tardis.simulation.base:base.py:650 
2025-01-24T14:30:01.1230670Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-24T14:30:01.1231340Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-24T14:30:01.1231880Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-24T14:30:01.1232420Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-24T14:30:01.1232970Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-24T14:30:01.1233330Z 
2025-01-24T14:30:01.1233560Z INFO     tardis.simulation.base:base.py:652 
2025-01-24T14:30:01.1234120Z 	Current t_inner = 10712.281 K
2025-01-24T14:30:01.1234670Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-24T14:30:01.1235110Z 
2025-01-24T14:30:01.1235350Z INFO     tardis.simulation.base:base.py:542 
2025-01-24T14:30:01.1235940Z 	Simulation finished in 2 iterations 
2025-01-24T14:30:01.1236470Z 	Simulation took 1.48 s
2025-01-24T14:30:01.1236740Z 
2025-01-24T14:30:01.1236970Z INFO     tardis.simulation.base:base.py:444 
2025-01-24T14:30:01.1237530Z 	Starting iteration 3 of 3
2025-01-24T14:30:01.1238450Z INFO     tardis.simulation.base:base.py:657 
2025-01-24T14:30:01.1239040Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-24T14:30:01.1239600Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-24T14:30:01.1240150Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:30:01.1240940Z ____ ERROR at setup of TestLIVPlotter.test_parse_species_list[_keep_colour] ____
2025-01-24T14:30:01.1241560Z 
2025-01-24T14:30:01.1241990Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1242640Z 
2025-01-24T14:30:01.1242830Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1243350Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1244000Z         """
2025-01-24T14:30:01.1244530Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1245180Z     
2025-01-24T14:30:01.1245520Z         Parameters:
2025-01-24T14:30:01.1245930Z         -----------
2025-01-24T14:30:01.1246420Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1246990Z     
2025-01-24T14:30:01.1247330Z         Returns:
2025-01-24T14:30:01.1247710Z         --------
2025-01-24T14:30:01.1248130Z         An LIVPlotter instance.
2025-01-24T14:30:01.1248600Z         """
2025-01-24T14:30:01.1249090Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1249570Z 
2025-01-24T14:30:01.1249880Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1250590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1251510Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1252880Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1253880Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1254800Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1255480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1255910Z 
2025-01-24T14:30:01.1256360Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1257340Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1258020Z packets_mode = 'real'
2025-01-24T14:30:01.1258290Z 
2025-01-24T14:30:01.1258460Z     @classmethod
2025-01-24T14:30:01.1258920Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1259490Z         """
2025-01-24T14:30:01.1260140Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1260930Z     
2025-01-24T14:30:01.1261290Z         Parameters
2025-01-24T14:30:01.1261700Z         ----------
2025-01-24T14:30:01.1262140Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1262830Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1263510Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1264170Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1264780Z     
2025-01-24T14:30:01.1265130Z         Returns
2025-01-24T14:30:01.1265500Z         -------
2025-01-24T14:30:01.1265900Z         SimulationPacketData
2025-01-24T14:30:01.1266380Z         """
2025-01-24T14:30:01.1266820Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1267400Z             raise ValueError(
2025-01-24T14:30:01.1267960Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1268620Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1269180Z             )
2025-01-24T14:30:01.1269640Z         # Properties common among both packet modes
2025-01-24T14:30:01.1270410Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1271090Z             "line_id"
2025-01-24T14:30:01.1271490Z         )
2025-01-24T14:30:01.1271920Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1272860Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1273470Z         time_of_simulation = (
2025-01-24T14:30:01.1274110Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1274770Z         )
2025-01-24T14:30:01.1275140Z     
2025-01-24T14:30:01.1275490Z         spectrum = (
2025-01-24T14:30:01.1276000Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1276610Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1277210Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1277800Z         )
2025-01-24T14:30:01.1278140Z     
2025-01-24T14:30:01.1278520Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1279140Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1279740Z             return cls(
2025-01-24T14:30:01.1280350Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1281290Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1282240Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1283180Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1284050Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1284750Z                 lines_df=lines_df,
2025-01-24T14:30:01.1285340Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1286130Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1287530Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1288350Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1289190Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1290010Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1290640Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1291220Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1291760Z                 simulation=sim,
2025-01-24T14:30:01.1292460Z             )
2025-01-24T14:30:01.1292710Z         else: # real packets
2025-01-24T14:30:01.1292980Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1293240Z             # which got emitted
2025-01-24T14:30:01.1293450Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1293660Z >           return cls(
2025-01-24T14:30:01.1293910Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1294280Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1294550Z                     mask
2025-01-24T14:30:01.1294700Z                 ],
2025-01-24T14:30:01.1294960Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1295230Z                     mask
2025-01-24T14:30:01.1295380Z                 ],
2025-01-24T14:30:01.1295600Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1295880Z                     mask
2025-01-24T14:30:01.1296050Z                 ],
2025-01-24T14:30:01.1296270Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1296550Z                 lines_df=lines_df,
2025-01-24T14:30:01.1296810Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1297160Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1297430Z                     mask
2025-01-24T14:30:01.1297570Z                 ],
2025-01-24T14:30:01.1298070Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1298840Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1299170Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1299580Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1299820Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1300050Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1300260Z                 simulation=sim,
2025-01-24T14:30:01.1300420Z             )
2025-01-24T14:30:01.1300780Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1301130Z 
2025-01-24T14:30:01.1301260Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1301630Z __ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_mapped] ___
2025-01-24T14:30:01.1301860Z 
2025-01-24T14:30:01.1302030Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1302270Z 
2025-01-24T14:30:01.1302340Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1302550Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1302730Z         """
2025-01-24T14:30:01.1302920Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1303170Z     
2025-01-24T14:30:01.1303290Z         Parameters:
2025-01-24T14:30:01.1303450Z         -----------
2025-01-24T14:30:01.1303630Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1303840Z     
2025-01-24T14:30:01.1303960Z         Returns:
2025-01-24T14:30:01.1304090Z         --------
2025-01-24T14:30:01.1304450Z         An LIVPlotter instance.
2025-01-24T14:30:01.1304620Z         """
2025-01-24T14:30:01.1304810Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1304990Z 
2025-01-24T14:30:01.1305100Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1305370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1305670Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1305990Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1306360Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1306820Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1307190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1307370Z 
2025-01-24T14:30:01.1307620Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1308000Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1308350Z packets_mode = 'real'
2025-01-24T14:30:01.1308450Z 
2025-01-24T14:30:01.1308600Z     @classmethod
2025-01-24T14:30:01.1308800Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1309020Z         """
2025-01-24T14:30:01.1309270Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1309800Z     
2025-01-24T14:30:01.1310010Z         Parameters
2025-01-24T14:30:01.1310410Z         ----------
2025-01-24T14:30:01.1310750Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1311240Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1311720Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1312090Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1312350Z     
2025-01-24T14:30:01.1312620Z         Returns
2025-01-24T14:30:01.1312760Z         -------
2025-01-24T14:30:01.1312920Z         SimulationPacketData
2025-01-24T14:30:01.1313150Z         """
2025-01-24T14:30:01.1313440Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1313720Z             raise ValueError(
2025-01-24T14:30:01.1314060Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1346740Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1347010Z             )
2025-01-24T14:30:01.1347190Z         # Properties common among both packet modes
2025-01-24T14:30:01.1347500Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1347770Z             "line_id"
2025-01-24T14:30:01.1347920Z         )
2025-01-24T14:30:01.1348090Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1348360Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1348590Z         time_of_simulation = (
2025-01-24T14:30:01.1348860Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1349110Z         )
2025-01-24T14:30:01.1349220Z     
2025-01-24T14:30:01.1349340Z         spectrum = (
2025-01-24T14:30:01.1349530Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1349760Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1350000Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1350200Z         )
2025-01-24T14:30:01.1350320Z     
2025-01-24T14:30:01.1350440Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1350680Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1350910Z             return cls(
2025-01-24T14:30:01.1351160Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1351540Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1352590Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1353020Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1353420Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1353730Z                 lines_df=lines_df,
2025-01-24T14:30:01.1354040Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1354390Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1354740Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1355030Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1355400Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1355780Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1356050Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1356330Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1356610Z                 simulation=sim,
2025-01-24T14:30:01.1356820Z             )
2025-01-24T14:30:01.1357010Z         else: # real packets
2025-01-24T14:30:01.1357310Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1358620Z             # which got emitted
2025-01-24T14:30:01.1358830Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1359040Z >           return cls(
2025-01-24T14:30:01.1359290Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1359660Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1359940Z                     mask
2025-01-24T14:30:01.1360090Z                 ],
2025-01-24T14:30:01.1360340Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1360630Z                     mask
2025-01-24T14:30:01.1360780Z                 ],
2025-01-24T14:30:01.1361020Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1361290Z                     mask
2025-01-24T14:30:01.1361440Z                 ],
2025-01-24T14:30:01.1361670Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1362130Z                 lines_df=lines_df,
2025-01-24T14:30:01.1362400Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1362750Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1363020Z                     mask
2025-01-24T14:30:01.1363170Z                 ],
2025-01-24T14:30:01.1363370Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1363640Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1363970Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1364290Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1364550Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1364780Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1364990Z                 simulation=sim,
2025-01-24T14:30:01.1365160Z             )
2025-01-24T14:30:01.1365520Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1365860Z 
2025-01-24T14:30:01.1366010Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1366440Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] _
2025-01-24T14:30:01.1366720Z 
2025-01-24T14:30:01.1366900Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1367130Z 
2025-01-24T14:30:01.1367200Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1367590Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1367820Z         """
2025-01-24T14:30:01.1368030Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1368290Z     
2025-01-24T14:30:01.1368420Z         Parameters:
2025-01-24T14:30:01.1368570Z         -----------
2025-01-24T14:30:01.1368760Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1368970Z     
2025-01-24T14:30:01.1369080Z         Returns:
2025-01-24T14:30:01.1369210Z         --------
2025-01-24T14:30:01.1369360Z         An LIVPlotter instance.
2025-01-24T14:30:01.1369520Z         """
2025-01-24T14:30:01.1369700Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1369870Z 
2025-01-24T14:30:01.1369980Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1370260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1370550Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1370870Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1371240Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1371600Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1371870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1372040Z 
2025-01-24T14:30:01.1372220Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1372590Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1372850Z packets_mode = 'real'
2025-01-24T14:30:01.1372950Z 
2025-01-24T14:30:01.1373000Z     @classmethod
2025-01-24T14:30:01.1373170Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1373370Z         """
2025-01-24T14:30:01.1373600Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1373870Z     
2025-01-24T14:30:01.1373990Z         Parameters
2025-01-24T14:30:01.1374120Z         ----------
2025-01-24T14:30:01.1374280Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1374550Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1374800Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1375150Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1375380Z     
2025-01-24T14:30:01.1375500Z         Returns
2025-01-24T14:30:01.1375630Z         -------
2025-01-24T14:30:01.1375770Z         SimulationPacketData
2025-01-24T14:30:01.1375940Z         """
2025-01-24T14:30:01.1376100Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1376320Z             raise ValueError(
2025-01-24T14:30:01.1376530Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1376780Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1376980Z             )
2025-01-24T14:30:01.1377150Z         # Properties common among both packet modes
2025-01-24T14:30:01.1377440Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1377720Z             "line_id"
2025-01-24T14:30:01.1377870Z         )
2025-01-24T14:30:01.1378060Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1378330Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1378560Z         time_of_simulation = (
2025-01-24T14:30:01.1378800Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1379040Z         )
2025-01-24T14:30:01.1379160Z     
2025-01-24T14:30:01.1379280Z         spectrum = (
2025-01-24T14:30:01.1379480Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1379700Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1379930Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1380140Z         )
2025-01-24T14:30:01.1380510Z     
2025-01-24T14:30:01.1380660Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1380900Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1381120Z             return cls(
2025-01-24T14:30:01.1381360Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1381710Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1382070Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1382430Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1382760Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1383020Z                 lines_df=lines_df,
2025-01-24T14:30:01.1383250Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1383550Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1383870Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1384140Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1384460Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1384790Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1385040Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1385260Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1385470Z                 simulation=sim,
2025-01-24T14:30:01.1385640Z             )
2025-01-24T14:30:01.1385790Z         else: # real packets
2025-01-24T14:30:01.1386050Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1386320Z             # which got emitted
2025-01-24T14:30:01.1386540Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1386760Z >           return cls(
2025-01-24T14:30:01.1387010Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1387380Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1387660Z                     mask
2025-01-24T14:30:01.1388120Z                 ],
2025-01-24T14:30:01.1388360Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1388630Z                     mask
2025-01-24T14:30:01.1388780Z                 ],
2025-01-24T14:30:01.1389020Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1389280Z                     mask
2025-01-24T14:30:01.1389420Z                 ],
2025-01-24T14:30:01.1389650Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1389920Z                 lines_df=lines_df,
2025-01-24T14:30:01.1390190Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1390540Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1390800Z                     mask
2025-01-24T14:30:01.1390930Z                 ],
2025-01-24T14:30:01.1391120Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1391390Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1391700Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1392010Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1392240Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1392510Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1392710Z                 simulation=sim,
2025-01-24T14:30:01.1392860Z             )
2025-01-24T14:30:01.1393400Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1393740Z 
2025-01-24T14:30:01.1393880Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1394310Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] _
2025-01-24T14:30:01.1394590Z 
2025-01-24T14:30:01.1394760Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1395000Z 
2025-01-24T14:30:01.1395070Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1395260Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1395450Z         """
2025-01-24T14:30:01.1395650Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1395890Z     
2025-01-24T14:30:01.1396010Z         Parameters:
2025-01-24T14:30:01.1396150Z         -----------
2025-01-24T14:30:01.1396340Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1396540Z     
2025-01-24T14:30:01.1396660Z         Returns:
2025-01-24T14:30:01.1396800Z         --------
2025-01-24T14:30:01.1396940Z         An LIVPlotter instance.
2025-01-24T14:30:01.1397110Z         """
2025-01-24T14:30:01.1397290Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1397470Z 
2025-01-24T14:30:01.1397590Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1397870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1398170Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1399600Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1400610Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1401550Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1402260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1402710Z 
2025-01-24T14:30:01.1403190Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1404170Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1404860Z packets_mode = 'real'
2025-01-24T14:30:01.1411470Z 
2025-01-24T14:30:01.1411580Z     @classmethod
2025-01-24T14:30:01.1412270Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1412490Z         """
2025-01-24T14:30:01.1412750Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1413030Z     
2025-01-24T14:30:01.1413160Z         Parameters
2025-01-24T14:30:01.1413300Z         ----------
2025-01-24T14:30:01.1413470Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1413740Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1414000Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1414260Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1414490Z     
2025-01-24T14:30:01.1414610Z         Returns
2025-01-24T14:30:01.1414750Z         -------
2025-01-24T14:30:01.1414900Z         SimulationPacketData
2025-01-24T14:30:01.1415060Z         """
2025-01-24T14:30:01.1415230Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1415450Z             raise ValueError(
2025-01-24T14:30:01.1415670Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1415980Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1416240Z             )
2025-01-24T14:30:01.1416430Z         # Properties common among both packet modes
2025-01-24T14:30:01.1416730Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1416980Z             "line_id"
2025-01-24T14:30:01.1417120Z         )
2025-01-24T14:30:01.1417310Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1417570Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1453130Z         time_of_simulation = (
2025-01-24T14:30:01.1454210Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1454970Z         )
2025-01-24T14:30:01.1455330Z     
2025-01-24T14:30:01.1455900Z         spectrum = (
2025-01-24T14:30:01.1456660Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1457440Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1458130Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1458980Z         )
2025-01-24T14:30:01.1459400Z     
2025-01-24T14:30:01.1459880Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1460730Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1461390Z             return cls(
2025-01-24T14:30:01.1462140Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1462570Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1463000Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1463390Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1463770Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1464080Z                 lines_df=lines_df,
2025-01-24T14:30:01.1464340Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1464680Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1465040Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1465350Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1465700Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1466060Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1466330Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1466560Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1466760Z                 simulation=sim,
2025-01-24T14:30:01.1466920Z             )
2025-01-24T14:30:01.1467060Z         else: # real packets
2025-01-24T14:30:01.1467310Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1467890Z             # which got emitted
2025-01-24T14:30:01.1468120Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1468360Z >           return cls(
2025-01-24T14:30:01.1468650Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1469040Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1469340Z                     mask
2025-01-24T14:30:01.1469510Z                 ],
2025-01-24T14:30:01.1469770Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1470080Z                     mask
2025-01-24T14:30:01.1470230Z                 ],
2025-01-24T14:30:01.1470450Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1470740Z                     mask
2025-01-24T14:30:01.1470910Z                 ],
2025-01-24T14:30:01.1471150Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1471460Z                 lines_df=lines_df,
2025-01-24T14:30:01.1471770Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1472170Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1472480Z                     mask
2025-01-24T14:30:01.1472660Z                 ],
2025-01-24T14:30:01.1472890Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1473190Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1473820Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1474170Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1474430Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1474680Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1474920Z                 simulation=sim,
2025-01-24T14:30:01.1475100Z             )
2025-01-24T14:30:01.1475470Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1475820Z 
2025-01-24T14:30:01.1475970Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1476390Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] _
2025-01-24T14:30:01.1476680Z 
2025-01-24T14:30:01.1476850Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1477090Z 
2025-01-24T14:30:01.1477160Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1477380Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1477590Z         """
2025-01-24T14:30:01.1477810Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1478040Z     
2025-01-24T14:30:01.1478160Z         Parameters:
2025-01-24T14:30:01.1478300Z         -----------
2025-01-24T14:30:01.1478500Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1478720Z     
2025-01-24T14:30:01.1478830Z         Returns:
2025-01-24T14:30:01.1478970Z         --------
2025-01-24T14:30:01.1479100Z         An LIVPlotter instance.
2025-01-24T14:30:01.1479260Z         """
2025-01-24T14:30:01.1479440Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1479620Z 
2025-01-24T14:30:01.1479730Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1480000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1480290Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1480600Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1480960Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1481300Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1481650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1481810Z 
2025-01-24T14:30:01.1481980Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1482340Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1482590Z packets_mode = 'real'
2025-01-24T14:30:01.1482690Z 
2025-01-24T14:30:01.1482740Z     @classmethod
2025-01-24T14:30:01.1482910Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1483120Z         """
2025-01-24T14:30:01.1483360Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1483630Z     
2025-01-24T14:30:01.1483750Z         Parameters
2025-01-24T14:30:01.1483890Z         ----------
2025-01-24T14:30:01.1484050Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1484320Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1484580Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1484830Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1485060Z     
2025-01-24T14:30:01.1485180Z         Returns
2025-01-24T14:30:01.1485310Z         -------
2025-01-24T14:30:01.1485460Z         SimulationPacketData
2025-01-24T14:30:01.1485620Z         """
2025-01-24T14:30:01.1485800Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1486020Z             raise ValueError(
2025-01-24T14:30:01.1486230Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1486870Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1487110Z             )
2025-01-24T14:30:01.1487280Z         # Properties common among both packet modes
2025-01-24T14:30:01.1487570Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1487820Z             "line_id"
2025-01-24T14:30:01.1487970Z         )
2025-01-24T14:30:01.1488130Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1488380Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1488620Z         time_of_simulation = (
2025-01-24T14:30:01.1488870Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1489110Z         )
2025-01-24T14:30:01.1489230Z     
2025-01-24T14:30:01.1489340Z         spectrum = (
2025-01-24T14:30:01.1489540Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1489760Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1489990Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1492400Z         )
2025-01-24T14:30:01.1492530Z     
2025-01-24T14:30:01.1492670Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1492910Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1493130Z             return cls(
2025-01-24T14:30:01.1493400Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1493760Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1494120Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1494470Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1494810Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1495060Z                 lines_df=lines_df,
2025-01-24T14:30:01.1495280Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1495620Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1495920Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1496190Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1496510Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1497190Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1497560Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1497800Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1498020Z                 simulation=sim,
2025-01-24T14:30:01.1498200Z             )
2025-01-24T14:30:01.1498340Z         else: # real packets
2025-01-24T14:30:01.1498630Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1498900Z             # which got emitted
2025-01-24T14:30:01.1499130Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1499360Z >           return cls(
2025-01-24T14:30:01.1499630Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1500010Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1500300Z                     mask
2025-01-24T14:30:01.1500470Z                 ],
2025-01-24T14:30:01.1500730Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1501010Z                     mask
2025-01-24T14:30:01.1501150Z                 ],
2025-01-24T14:30:01.1501380Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1501640Z                     mask
2025-01-24T14:30:01.1501780Z                 ],
2025-01-24T14:30:01.1502010Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1502290Z                 lines_df=lines_df,
2025-01-24T14:30:01.1502660Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1503020Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1503280Z                     mask
2025-01-24T14:30:01.1503420Z                 ],
2025-01-24T14:30:01.1503620Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1503880Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1504200Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1504520Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1504770Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1504990Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1505200Z                 simulation=sim,
2025-01-24T14:30:01.1505360Z             )
2025-01-24T14:30:01.1505720Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1506050Z 
2025-01-24T14:30:01.1506190Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1506610Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] _
2025-01-24T14:30:01.1506890Z 
2025-01-24T14:30:01.1507060Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1507300Z 
2025-01-24T14:30:01.1507370Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1507580Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1507750Z         """
2025-01-24T14:30:01.1507960Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1508200Z     
2025-01-24T14:30:01.1508320Z         Parameters:
2025-01-24T14:30:01.1508460Z         -----------
2025-01-24T14:30:01.1508640Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1508860Z     
2025-01-24T14:30:01.1508970Z         Returns:
2025-01-24T14:30:01.1509100Z         --------
2025-01-24T14:30:01.1509250Z         An LIVPlotter instance.
2025-01-24T14:30:01.1509420Z         """
2025-01-24T14:30:01.1509600Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1509860Z 
2025-01-24T14:30:01.1509980Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1510240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1510540Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1510860Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1511220Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1511560Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1511830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1511990Z 
2025-01-24T14:30:01.1512170Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1512540Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1512790Z packets_mode = 'real'
2025-01-24T14:30:01.1512890Z 
2025-01-24T14:30:01.1512950Z     @classmethod
2025-01-24T14:30:01.1513120Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1513320Z         """
2025-01-24T14:30:01.1513560Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1513820Z     
2025-01-24T14:30:01.1513940Z         Parameters
2025-01-24T14:30:01.1514070Z         ----------
2025-01-24T14:30:01.1514240Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1514500Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1514750Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1515070Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1515300Z     
2025-01-24T14:30:01.1515420Z         Returns
2025-01-24T14:30:01.1515550Z         -------
2025-01-24T14:30:01.1515690Z         SimulationPacketData
2025-01-24T14:30:01.1515850Z         """
2025-01-24T14:30:01.1516000Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1516220Z             raise ValueError(
2025-01-24T14:30:01.1516440Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1516680Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1516880Z             )
2025-01-24T14:30:01.1517050Z         # Properties common among both packet modes
2025-01-24T14:30:01.1517330Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1517590Z             "line_id"
2025-01-24T14:30:01.1517730Z         )
2025-01-24T14:30:01.1517890Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1518150Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1518370Z         time_of_simulation = (
2025-01-24T14:30:01.1518620Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1518870Z         )
2025-01-24T14:30:01.1518990Z     
2025-01-24T14:30:01.1519110Z         spectrum = (
2025-01-24T14:30:01.1519310Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1519530Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1528710Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1528940Z         )
2025-01-24T14:30:01.1529060Z     
2025-01-24T14:30:01.1529190Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1529420Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1529650Z             return cls(
2025-01-24T14:30:01.1530030Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1530390Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1530750Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1531110Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1531450Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1531950Z                 lines_df=lines_df,
2025-01-24T14:30:01.1532210Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1532540Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1532860Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1533120Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1533440Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1533750Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1533990Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1534210Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1534410Z                 simulation=sim,
2025-01-24T14:30:01.1534570Z             )
2025-01-24T14:30:01.1534710Z         else: # real packets
2025-01-24T14:30:01.1534960Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1535220Z             # which got emitted
2025-01-24T14:30:01.1535420Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1535630Z >           return cls(
2025-01-24T14:30:01.1535870Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1536220Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1536490Z                     mask
2025-01-24T14:30:01.1536640Z                 ],
2025-01-24T14:30:01.1537000Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1537280Z                     mask
2025-01-24T14:30:01.1537430Z                 ],
2025-01-24T14:30:01.1537660Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1537920Z                     mask
2025-01-24T14:30:01.1538070Z                 ],
2025-01-24T14:30:01.1538300Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1538560Z                 lines_df=lines_df,
2025-01-24T14:30:01.1538820Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1539170Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1539430Z                     mask
2025-01-24T14:30:01.1539570Z                 ],
2025-01-24T14:30:01.1539770Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1540040Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1540350Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1540660Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1540900Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1541130Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1541330Z                 simulation=sim,
2025-01-24T14:30:01.1541490Z             )
2025-01-24T14:30:01.1541830Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1542180Z 
2025-01-24T14:30:01.1542320Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1542740Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] _
2025-01-24T14:30:01.1543030Z 
2025-01-24T14:30:01.1543200Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1543450Z 
2025-01-24T14:30:01.1543520Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1543720Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1543890Z         """
2025-01-24T14:30:01.1544090Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1544400Z     
2025-01-24T14:30:01.1544520Z         Parameters:
2025-01-24T14:30:01.1544660Z         -----------
2025-01-24T14:30:01.1544850Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1545050Z     
2025-01-24T14:30:01.1545170Z         Returns:
2025-01-24T14:30:01.1545300Z         --------
2025-01-24T14:30:01.1545440Z         An LIVPlotter instance.
2025-01-24T14:30:01.1545600Z         """
2025-01-24T14:30:01.1545780Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1545950Z 
2025-01-24T14:30:01.1546060Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1546340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1546630Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1546940Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1547300Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1547650Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1547920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1548090Z 
2025-01-24T14:30:01.1548260Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1548640Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1548900Z packets_mode = 'real'
2025-01-24T14:30:01.1549000Z 
2025-01-24T14:30:01.1549050Z     @classmethod
2025-01-24T14:30:01.1549220Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1549430Z         """
2025-01-24T14:30:01.1549790Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1550080Z     
2025-01-24T14:30:01.1550200Z         Parameters
2025-01-24T14:30:01.1550330Z         ----------
2025-01-24T14:30:01.1550500Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1550780Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1551040Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1551290Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1551520Z     
2025-01-24T14:30:01.1551630Z         Returns
2025-01-24T14:30:01.1551760Z         -------
2025-01-24T14:30:01.1551900Z         SimulationPacketData
2025-01-24T14:30:01.1552070Z         """
2025-01-24T14:30:01.1552220Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1552430Z             raise ValueError(
2025-01-24T14:30:01.1552650Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1552900Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1553100Z             )
2025-01-24T14:30:01.1553270Z         # Properties common among both packet modes
2025-01-24T14:30:01.1553560Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1553810Z             "line_id"
2025-01-24T14:30:01.1553950Z         )
2025-01-24T14:30:01.1554110Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1554360Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1554700Z         time_of_simulation = (
2025-01-24T14:30:01.1554980Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1555250Z         )
2025-01-24T14:30:01.1555380Z     
2025-01-24T14:30:01.1555500Z         spectrum = (
2025-01-24T14:30:01.1555720Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1555970Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1556240Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1556480Z         )
2025-01-24T14:30:01.1556590Z     
2025-01-24T14:30:01.1556730Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1556960Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1557590Z             return cls(
2025-01-24T14:30:01.1557830Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1558200Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1558560Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1558930Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1559280Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1559540Z                 lines_df=lines_df,
2025-01-24T14:30:01.1559770Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1560070Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1560380Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1560640Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1560970Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1561290Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1561530Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1561750Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1561950Z                 simulation=sim,
2025-01-24T14:30:01.1562120Z             )
2025-01-24T14:30:01.1562250Z         else: # real packets
2025-01-24T14:30:01.1562510Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1562920Z             # which got emitted
2025-01-24T14:30:01.1563120Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1563330Z >           return cls(
2025-01-24T14:30:01.1563580Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1563940Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1564210Z                     mask
2025-01-24T14:30:01.1564360Z                 ],
2025-01-24T14:30:01.1564600Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1564870Z                     mask
2025-01-24T14:30:01.1565020Z                 ],
2025-01-24T14:30:01.1565240Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1565500Z                     mask
2025-01-24T14:30:01.1565640Z                 ],
2025-01-24T14:30:01.1565860Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1566120Z                 lines_df=lines_df,
2025-01-24T14:30:01.1566380Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1566720Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1566980Z                     mask
2025-01-24T14:30:01.1567130Z                 ],
2025-01-24T14:30:01.1567320Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1567590Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1567900Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1568210Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1568450Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1568530Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1568580Z                 simulation=sim,
2025-01-24T14:30:01.1568630Z             )
2025-01-24T14:30:01.1568890Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1568900Z 
2025-01-24T14:30:01.1569030Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1569350Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] _
2025-01-24T14:30:01.1569350Z 
2025-01-24T14:30:01.1569520Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1569520Z 
2025-01-24T14:30:01.1569580Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1569650Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1569690Z         """
2025-01-24T14:30:01.1569910Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1569950Z     
2025-01-24T14:30:01.1570000Z         Parameters:
2025-01-24T14:30:01.1570050Z         -----------
2025-01-24T14:30:01.1570150Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1570190Z     
2025-01-24T14:30:01.1570240Z         Returns:
2025-01-24T14:30:01.1570290Z         --------
2025-01-24T14:30:01.1570350Z         An LIVPlotter instance.
2025-01-24T14:30:01.1570390Z         """
2025-01-24T14:30:01.1570500Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1570500Z 
2025-01-24T14:30:01.1570610Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1570700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1570830Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1570940Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1571120Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1571220Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1571410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1571410Z 
2025-01-24T14:30:01.1571590Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1571720Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1571780Z packets_mode = 'real'
2025-01-24T14:30:01.1571780Z 
2025-01-24T14:30:01.1571830Z     @classmethod
2025-01-24T14:30:01.1571910Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1571960Z         """
2025-01-24T14:30:01.1572120Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1572160Z     
2025-01-24T14:30:01.1572210Z         Parameters
2025-01-24T14:30:01.1572260Z         ----------
2025-01-24T14:30:01.1572340Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1572460Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1572530Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1572640Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1572690Z     
2025-01-24T14:30:01.1572740Z         Returns
2025-01-24T14:30:01.1572780Z         -------
2025-01-24T14:30:01.1572850Z         SimulationPacketData
2025-01-24T14:30:01.1572900Z         """
2025-01-24T14:30:01.1572980Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1573040Z             raise ValueError(
2025-01-24T14:30:01.1573130Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1573210Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1573260Z             )
2025-01-24T14:30:01.1573340Z         # Properties common among both packet modes
2025-01-24T14:30:01.1573470Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1573510Z             "line_id"
2025-01-24T14:30:01.1573560Z         )
2025-01-24T14:30:01.1573640Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1573740Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1573800Z         time_of_simulation = (
2025-01-24T14:30:01.1573920Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1573970Z         )
2025-01-24T14:30:01.1574060Z     
2025-01-24T14:30:01.1574120Z         spectrum = (
2025-01-24T14:30:01.1574200Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1574270Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1574360Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1574410Z         )
2025-01-24T14:30:01.1574450Z     
2025-01-24T14:30:01.1574520Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1574620Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1574670Z             return cls(
2025-01-24T14:30:01.1574790Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1574940Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1575080Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1575210Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1575340Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1575400Z                 lines_df=lines_df,
2025-01-24T14:30:01.1575500Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1575640Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1575750Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1575840Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1576000Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1576150Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1576240Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1576310Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1576370Z                 simulation=sim,
2025-01-24T14:30:01.1576420Z             )
2025-01-24T14:30:01.1576470Z         else: # real packets
2025-01-24T14:30:01.1576600Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1576660Z             # which got emitted
2025-01-24T14:30:01.1576750Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1576800Z >           return cls(
2025-01-24T14:30:01.1576930Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1577080Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1577130Z                     mask
2025-01-24T14:30:01.1577180Z                 ],
2025-01-24T14:30:01.1577330Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1577380Z                     mask
2025-01-24T14:30:01.1577420Z                 ],
2025-01-24T14:30:01.1577560Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1577610Z                     mask
2025-01-24T14:30:01.1577660Z                 ],
2025-01-24T14:30:01.1577790Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1577860Z                 lines_df=lines_df,
2025-01-24T14:30:01.1577990Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1578130Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1578180Z                     mask
2025-01-24T14:30:01.1578230Z                 ],
2025-01-24T14:30:01.1578330Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1578430Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1578570Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1578660Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1578800Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1578880Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1578930Z                 simulation=sim,
2025-01-24T14:30:01.1578980Z             )
2025-01-24T14:30:01.1579240Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1579240Z 
2025-01-24T14:30:01.1579380Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1579590Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] _
2025-01-24T14:30:01.1579590Z 
2025-01-24T14:30:01.1579750Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1579760Z 
2025-01-24T14:30:01.1579820Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1579890Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1579930Z         """
2025-01-24T14:30:01.1580050Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1580090Z     
2025-01-24T14:30:01.1580210Z         Parameters:
2025-01-24T14:30:01.1580280Z         -----------
2025-01-24T14:30:01.1580370Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1580420Z     
2025-01-24T14:30:01.1580470Z         Returns:
2025-01-24T14:30:01.1580520Z         --------
2025-01-24T14:30:01.1580580Z         An LIVPlotter instance.
2025-01-24T14:30:01.1580640Z         """
2025-01-24T14:30:01.1580750Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1580760Z 
2025-01-24T14:30:01.1581070Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1581170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1581290Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1581410Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1581580Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1581690Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1581780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1581780Z 
2025-01-24T14:30:01.1581950Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1582070Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1582130Z packets_mode = 'real'
2025-01-24T14:30:01.1582130Z 
2025-01-24T14:30:01.1582180Z     @classmethod
2025-01-24T14:30:01.1582270Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1582310Z         """
2025-01-24T14:30:01.1582490Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1582540Z     
2025-01-24T14:30:01.1582590Z         Parameters
2025-01-24T14:30:01.1582640Z         ----------
2025-01-24T14:30:01.1582720Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1582830Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1582900Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1583010Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1583060Z     
2025-01-24T14:30:01.1583110Z         Returns
2025-01-24T14:30:01.1583150Z         -------
2025-01-24T14:30:01.1583220Z         SimulationPacketData
2025-01-24T14:30:01.1583260Z         """
2025-01-24T14:30:01.1583340Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1583400Z             raise ValueError(
2025-01-24T14:30:01.1583490Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1583570Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1583620Z             )
2025-01-24T14:30:01.1583700Z         # Properties common among both packet modes
2025-01-24T14:30:01.1584310Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1584360Z             "line_id"
2025-01-24T14:30:01.1590360Z         )
2025-01-24T14:30:01.1590470Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1590560Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1590620Z         time_of_simulation = (
2025-01-24T14:30:01.1590740Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1590790Z         )
2025-01-24T14:30:01.1590840Z     
2025-01-24T14:30:01.1590890Z         spectrum = (
2025-01-24T14:30:01.1590980Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1591060Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1591150Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1591200Z         )
2025-01-24T14:30:01.1591240Z     
2025-01-24T14:30:01.1591300Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1591400Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1591460Z             return cls(
2025-01-24T14:30:01.1591590Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1591730Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1591870Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1592010Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1592130Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1592390Z                 lines_df=lines_df,
2025-01-24T14:30:01.1592500Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1592620Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1592730Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1592820Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1592980Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1593070Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1593160Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1593230Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1593290Z                 simulation=sim,
2025-01-24T14:30:01.1593340Z             )
2025-01-24T14:30:01.1593400Z         else: # real packets
2025-01-24T14:30:01.1593540Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1593590Z             # which got emitted
2025-01-24T14:30:01.1593680Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1593730Z >           return cls(
2025-01-24T14:30:01.1593870Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1594020Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1594070Z                     mask
2025-01-24T14:30:01.1594120Z                 ],
2025-01-24T14:30:01.1594270Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1594320Z                     mask
2025-01-24T14:30:01.1594360Z                 ],
2025-01-24T14:30:01.1594500Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1594550Z                     mask
2025-01-24T14:30:01.1594590Z                 ],
2025-01-24T14:30:01.1594730Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1594790Z                 lines_df=lines_df,
2025-01-24T14:30:01.1594920Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1595070Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1595170Z                     mask
2025-01-24T14:30:01.1595220Z                 ],
2025-01-24T14:30:01.1595320Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1595420Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1595560Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1595650Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1595730Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1595800Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1595860Z                 simulation=sim,
2025-01-24T14:30:01.1595910Z             )
2025-01-24T14:30:01.1596170Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1596170Z 
2025-01-24T14:30:01.1596310Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1596520Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] _
2025-01-24T14:30:01.1596520Z 
2025-01-24T14:30:01.1596690Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1596690Z 
2025-01-24T14:30:01.1596750Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1596820Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1596860Z         """
2025-01-24T14:30:01.1596980Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1597030Z     
2025-01-24T14:30:01.1597080Z         Parameters:
2025-01-24T14:30:01.1597170Z         -----------
2025-01-24T14:30:01.1597260Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1597300Z     
2025-01-24T14:30:01.1597350Z         Returns:
2025-01-24T14:30:01.1597400Z         --------
2025-01-24T14:30:01.1597450Z         An LIVPlotter instance.
2025-01-24T14:30:01.1597500Z         """
2025-01-24T14:30:01.1597610Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1597610Z 
2025-01-24T14:30:01.1597710Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1597810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1597930Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1598050Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1598210Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1598320Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1598400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1598410Z 
2025-01-24T14:30:01.1598570Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1598700Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1598750Z packets_mode = 'real'
2025-01-24T14:30:01.1598760Z 
2025-01-24T14:30:01.1598810Z     @classmethod
2025-01-24T14:30:01.1598890Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1598930Z         """
2025-01-24T14:30:01.1599090Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1599130Z     
2025-01-24T14:30:01.1599180Z         Parameters
2025-01-24T14:30:01.1599230Z         ----------
2025-01-24T14:30:01.1599300Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1599420Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1599480Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1599590Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1599640Z     
2025-01-24T14:30:01.1599680Z         Returns
2025-01-24T14:30:01.1599730Z         -------
2025-01-24T14:30:01.1599840Z         SimulationPacketData
2025-01-24T14:30:01.1599890Z         """
2025-01-24T14:30:01.1599960Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1600020Z             raise ValueError(
2025-01-24T14:30:01.1600110Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1600190Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1600240Z             )
2025-01-24T14:30:01.1600310Z         # Properties common among both packet modes
2025-01-24T14:30:01.1600440Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1600490Z             "line_id"
2025-01-24T14:30:01.1600540Z         )
2025-01-24T14:30:01.1600620Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1600720Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1600780Z         time_of_simulation = (
2025-01-24T14:30:01.1600900Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1600940Z         )
2025-01-24T14:30:01.1600990Z     
2025-01-24T14:30:01.1601040Z         spectrum = (
2025-01-24T14:30:01.1601130Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1601190Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1601280Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1601330Z         )
2025-01-24T14:30:01.1601370Z     
2025-01-24T14:30:01.1601430Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1601530Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1601580Z             return cls(
2025-01-24T14:30:01.1601750Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1601890Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1602030Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1602170Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1602290Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1602350Z                 lines_df=lines_df,
2025-01-24T14:30:01.1602450Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1602570Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1602670Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1602760Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1602910Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1603000Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1603080Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1603150Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1603210Z                 simulation=sim,
2025-01-24T14:30:01.1603250Z             )
2025-01-24T14:30:01.1603310Z         else: # real packets
2025-01-24T14:30:01.1603440Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1603500Z             # which got emitted
2025-01-24T14:30:01.1603580Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1603630Z >           return cls(
2025-01-24T14:30:01.1603770Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1603920Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1603970Z                     mask
2025-01-24T14:30:01.1604020Z                 ],
2025-01-24T14:30:01.1604180Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1604230Z                     mask
2025-01-24T14:30:01.1604280Z                 ],
2025-01-24T14:30:01.1604460Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1604520Z                     mask
2025-01-24T14:30:01.1604560Z                 ],
2025-01-24T14:30:01.1604700Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1604750Z                 lines_df=lines_df,
2025-01-24T14:30:01.1604890Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1605040Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1605090Z                     mask
2025-01-24T14:30:01.1605140Z                 ],
2025-01-24T14:30:01.1605250Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1605340Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1605490Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1605580Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1605660Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1605740Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1605800Z                 simulation=sim,
2025-01-24T14:30:01.1605840Z             )
2025-01-24T14:30:01.1606110Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1606120Z 
2025-01-24T14:30:01.1606250Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1606700Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] _
2025-01-24T14:30:01.1606710Z 
2025-01-24T14:30:01.1606880Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1606880Z 
2025-01-24T14:30:01.1606950Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1607020Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1607070Z         """
2025-01-24T14:30:01.1607190Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1607230Z     
2025-01-24T14:30:01.1607280Z         Parameters:
2025-01-24T14:30:01.1607330Z         -----------
2025-01-24T14:30:01.1607420Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1607470Z     
2025-01-24T14:30:01.1607520Z         Returns:
2025-01-24T14:30:01.1607570Z         --------
2025-01-24T14:30:01.1607630Z         An LIVPlotter instance.
2025-01-24T14:30:01.1607680Z         """
2025-01-24T14:30:01.1607790Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1607790Z 
2025-01-24T14:30:01.1607900Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1607990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1608110Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1608240Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1608410Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1608510Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1608600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1608610Z 
2025-01-24T14:30:01.1608780Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1608900Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1608950Z packets_mode = 'real'
2025-01-24T14:30:01.1608960Z 
2025-01-24T14:30:01.1609010Z     @classmethod
2025-01-24T14:30:01.1609090Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1609150Z         """
2025-01-24T14:30:01.1609310Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1609350Z     
2025-01-24T14:30:01.1609600Z         Parameters
2025-01-24T14:30:01.1609650Z         ----------
2025-01-24T14:30:01.1609720Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1609930Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1610000Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1610110Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1610150Z     
2025-01-24T14:30:01.1610200Z         Returns
2025-01-24T14:30:01.1610250Z         -------
2025-01-24T14:30:01.1610310Z         SimulationPacketData
2025-01-24T14:30:01.1610360Z         """
2025-01-24T14:30:01.1610440Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1610500Z             raise ValueError(
2025-01-24T14:30:01.1610600Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1610680Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1610720Z             )
2025-01-24T14:30:01.1610810Z         # Properties common among both packet modes
2025-01-24T14:30:01.1610940Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1610990Z             "line_id"
2025-01-24T14:30:01.1611030Z         )
2025-01-24T14:30:01.1611120Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1611220Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1611280Z         time_of_simulation = (
2025-01-24T14:30:01.1611400Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1611440Z         )
2025-01-24T14:30:01.1611490Z     
2025-01-24T14:30:01.1611540Z         spectrum = (
2025-01-24T14:30:01.1611710Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1611770Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1611870Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1611920Z         )
2025-01-24T14:30:01.1611970Z     
2025-01-24T14:30:01.1612030Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1612140Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1612190Z             return cls(
2025-01-24T14:30:01.1612320Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1612460Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1612600Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1612740Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1612860Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1612930Z                 lines_df=lines_df,
2025-01-24T14:30:01.1613030Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1613150Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1613250Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1613350Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1613500Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1613580Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1613660Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1613730Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1613790Z                 simulation=sim,
2025-01-24T14:30:01.1613830Z             )
2025-01-24T14:30:01.1613890Z         else: # real packets
2025-01-24T14:30:01.1614020Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1614080Z             # which got emitted
2025-01-24T14:30:01.1614170Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1614220Z >           return cls(
2025-01-24T14:30:01.1614390Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1614540Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1614590Z                     mask
2025-01-24T14:30:01.1614640Z                 ],
2025-01-24T14:30:01.1614790Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1614840Z                     mask
2025-01-24T14:30:01.1614890Z                 ],
2025-01-24T14:30:01.1615020Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1615070Z                     mask
2025-01-24T14:30:01.1615110Z                 ],
2025-01-24T14:30:01.1615250Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1615300Z                 lines_df=lines_df,
2025-01-24T14:30:01.1615440Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1615580Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1615630Z                     mask
2025-01-24T14:30:01.1615680Z                 ],
2025-01-24T14:30:01.1615780Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1615880Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1616030Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1616120Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1616190Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1616310Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1616370Z                 simulation=sim,
2025-01-24T14:30:01.1616420Z             )
2025-01-24T14:30:01.1616680Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1616690Z 
2025-01-24T14:30:01.1616820Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1617030Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] _
2025-01-24T14:30:01.1617040Z 
2025-01-24T14:30:01.1617200Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1617200Z 
2025-01-24T14:30:01.1617270Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1617330Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1617390Z         """
2025-01-24T14:30:01.1617500Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1617550Z     
2025-01-24T14:30:01.1617600Z         Parameters:
2025-01-24T14:30:01.1617650Z         -----------
2025-01-24T14:30:01.1617740Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1617790Z     
2025-01-24T14:30:01.1617840Z         Returns:
2025-01-24T14:30:01.1617890Z         --------
2025-01-24T14:30:01.1617950Z         An LIVPlotter instance.
2025-01-24T14:30:01.1617990Z         """
2025-01-24T14:30:01.1618100Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1618100Z 
2025-01-24T14:30:01.1618200Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1618300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1618420Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1618530Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1618700Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1618800Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1618900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1618910Z 
2025-01-24T14:30:01.1619070Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1619250Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1619300Z packets_mode = 'real'
2025-01-24T14:30:01.1619310Z 
2025-01-24T14:30:01.1619360Z     @classmethod
2025-01-24T14:30:01.1619440Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1619480Z         """
2025-01-24T14:30:01.1619630Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1619680Z     
2025-01-24T14:30:01.1619730Z         Parameters
2025-01-24T14:30:01.1619770Z         ----------
2025-01-24T14:30:01.1619840Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1619970Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1620040Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1620140Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1620190Z     
2025-01-24T14:30:01.1620240Z         Returns
2025-01-24T14:30:01.1620300Z         -------
2025-01-24T14:30:01.1620360Z         SimulationPacketData
2025-01-24T14:30:01.1620410Z         """
2025-01-24T14:30:01.1620500Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1620560Z             raise ValueError(
2025-01-24T14:30:01.1620660Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1620750Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1620790Z             )
2025-01-24T14:30:01.1620880Z         # Properties common among both packet modes
2025-01-24T14:30:01.1621010Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1621120Z             "line_id"
2025-01-24T14:30:01.1621170Z         )
2025-01-24T14:30:01.1621250Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1621350Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1621400Z         time_of_simulation = (
2025-01-24T14:30:01.1621530Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1621580Z         )
2025-01-24T14:30:01.1621630Z     
2025-01-24T14:30:01.1621680Z         spectrum = (
2025-01-24T14:30:01.1621770Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1621830Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1621930Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1621980Z         )
2025-01-24T14:30:01.1622020Z     
2025-01-24T14:30:01.1622080Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1622180Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1622240Z             return cls(
2025-01-24T14:30:01.1622370Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1622510Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1622650Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1622790Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1622920Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1622980Z                 lines_df=lines_df,
2025-01-24T14:30:01.1623070Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1623200Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1623300Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1623400Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1623540Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1623630Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1623710Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1623840Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1623900Z                 simulation=sim,
2025-01-24T14:30:01.1623950Z             )
2025-01-24T14:30:01.1624000Z         else: # real packets
2025-01-24T14:30:01.1624130Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1624190Z             # which got emitted
2025-01-24T14:30:01.1624270Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1624320Z >           return cls(
2025-01-24T14:30:01.1624460Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1624610Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1624660Z                     mask
2025-01-24T14:30:01.1624710Z                 ],
2025-01-24T14:30:01.1624860Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1624900Z                     mask
2025-01-24T14:30:01.1624960Z                 ],
2025-01-24T14:30:01.1625090Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1625150Z                     mask
2025-01-24T14:30:01.1625190Z                 ],
2025-01-24T14:30:01.1625330Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1625390Z                 lines_df=lines_df,
2025-01-24T14:30:01.1625520Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1625670Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1625970Z                     mask
2025-01-24T14:30:01.1626030Z                 ],
2025-01-24T14:30:01.1626140Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1626230Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1626380Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1626480Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1626560Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1626630Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1626690Z                 simulation=sim,
2025-01-24T14:30:01.1626730Z             )
2025-01-24T14:30:01.1627070Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1627090Z 
2025-01-24T14:30:01.1627230Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1627460Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] _
2025-01-24T14:30:01.1627470Z 
2025-01-24T14:30:01.1627660Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1627660Z 
2025-01-24T14:30:01.1627740Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1627810Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1627860Z         """
2025-01-24T14:30:01.1627970Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1628020Z     
2025-01-24T14:30:01.1628070Z         Parameters:
2025-01-24T14:30:01.1628120Z         -----------
2025-01-24T14:30:01.1628210Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1628260Z     
2025-01-24T14:30:01.1628310Z         Returns:
2025-01-24T14:30:01.1628360Z         --------
2025-01-24T14:30:01.1628410Z         An LIVPlotter instance.
2025-01-24T14:30:01.1628460Z         """
2025-01-24T14:30:01.1628570Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1628570Z 
2025-01-24T14:30:01.1628690Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1628790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1628910Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1629370Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1629550Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1629670Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1629780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1629790Z 
2025-01-24T14:30:01.1630000Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1630130Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1630180Z packets_mode = 'real'
2025-01-24T14:30:01.1630190Z 
2025-01-24T14:30:01.1630250Z     @classmethod
2025-01-24T14:30:01.1630340Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1630390Z         """
2025-01-24T14:30:01.1630540Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1630590Z     
2025-01-24T14:30:01.1630640Z         Parameters
2025-01-24T14:30:01.1630690Z         ----------
2025-01-24T14:30:01.1630770Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1630880Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1630950Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1631060Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1631120Z     
2025-01-24T14:30:01.1631180Z         Returns
2025-01-24T14:30:01.1631240Z         -------
2025-01-24T14:30:01.1631310Z         SimulationPacketData
2025-01-24T14:30:01.1631360Z         """
2025-01-24T14:30:01.1631590Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1631680Z             raise ValueError(
2025-01-24T14:30:01.1631780Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1631870Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1631940Z             )
2025-01-24T14:30:01.1632040Z         # Properties common among both packet modes
2025-01-24T14:30:01.1632180Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1632250Z             "line_id"
2025-01-24T14:30:01.1632310Z         )
2025-01-24T14:30:01.1632430Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1632540Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1632600Z         time_of_simulation = (
2025-01-24T14:30:01.1632730Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1632770Z         )
2025-01-24T14:30:01.1632830Z     
2025-01-24T14:30:01.1632890Z         spectrum = (
2025-01-24T14:30:01.1632990Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1633050Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1633150Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1633200Z         )
2025-01-24T14:30:01.1633250Z     
2025-01-24T14:30:01.1633320Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1633410Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1633470Z             return cls(
2025-01-24T14:30:01.1633600Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1633740Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1633890Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1634020Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1634150Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1634210Z                 lines_df=lines_df,
2025-01-24T14:30:01.1634320Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1634440Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1634640Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1634740Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1634890Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1634980Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1635070Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1635140Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1635200Z                 simulation=sim,
2025-01-24T14:30:01.1635240Z             )
2025-01-24T14:30:01.1635450Z         else: # real packets
2025-01-24T14:30:01.1635620Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1635740Z             # which got emitted
2025-01-24T14:30:01.1644230Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1644330Z >           return cls(
2025-01-24T14:30:01.1644490Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1644650Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1644700Z                     mask
2025-01-24T14:30:01.1644770Z                 ],
2025-01-24T14:30:01.1644950Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1645010Z                     mask
2025-01-24T14:30:01.1645060Z                 ],
2025-01-24T14:30:01.1645430Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1645500Z                     mask
2025-01-24T14:30:01.1645550Z                 ],
2025-01-24T14:30:01.1645690Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1645750Z                 lines_df=lines_df,
2025-01-24T14:30:01.1645890Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1646030Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1646090Z                     mask
2025-01-24T14:30:01.1646130Z                 ],
2025-01-24T14:30:01.1646240Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1646330Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1646490Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1646570Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1646670Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1646750Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1646830Z                 simulation=sim,
2025-01-24T14:30:01.1646890Z             )
2025-01-24T14:30:01.1647180Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1647190Z 
2025-01-24T14:30:01.1647340Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1647570Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] _
2025-01-24T14:30:01.1647570Z 
2025-01-24T14:30:01.1647740Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1647750Z 
2025-01-24T14:30:01.1647810Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1647880Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1647930Z         """
2025-01-24T14:30:01.1648080Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1648130Z     
2025-01-24T14:30:01.1648190Z         Parameters:
2025-01-24T14:30:01.1648250Z         -----------
2025-01-24T14:30:01.1648350Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1648400Z     
2025-01-24T14:30:01.1648540Z         Returns:
2025-01-24T14:30:01.1648590Z         --------
2025-01-24T14:30:01.1648650Z         An LIVPlotter instance.
2025-01-24T14:30:01.1648710Z         """
2025-01-24T14:30:01.1648810Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1648820Z 
2025-01-24T14:30:01.1648920Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1649020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1650470Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1650630Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1650830Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1650940Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1651130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1651140Z 
2025-01-24T14:30:01.1651320Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1651440Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1651500Z packets_mode = 'real'
2025-01-24T14:30:01.1651500Z 
2025-01-24T14:30:01.1651550Z     @classmethod
2025-01-24T14:30:01.1651640Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1651690Z         """
2025-01-24T14:30:01.1651860Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1651910Z     
2025-01-24T14:30:01.1651970Z         Parameters
2025-01-24T14:30:01.1652020Z         ----------
2025-01-24T14:30:01.1652200Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1652320Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1652390Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1652520Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1652570Z     
2025-01-24T14:30:01.1652630Z         Returns
2025-01-24T14:30:01.1652670Z         -------
2025-01-24T14:30:01.1652730Z         SimulationPacketData
2025-01-24T14:30:01.1652780Z         """
2025-01-24T14:30:01.1652870Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1652940Z             raise ValueError(
2025-01-24T14:30:01.1653030Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1653110Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1653170Z             )
2025-01-24T14:30:01.1653570Z         # Properties common among both packet modes
2025-01-24T14:30:01.1653710Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1653770Z             "line_id"
2025-01-24T14:30:01.1653820Z         )
2025-01-24T14:30:01.1654060Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1654160Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1654230Z         time_of_simulation = (
2025-01-24T14:30:01.1654350Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1654400Z         )
2025-01-24T14:30:01.1654440Z     
2025-01-24T14:30:01.1654500Z         spectrum = (
2025-01-24T14:30:01.1654690Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1654830Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1654940Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1655130Z         )
2025-01-24T14:30:01.1655180Z     
2025-01-24T14:30:01.1749640Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1750100Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1750260Z             return cls(
2025-01-24T14:30:01.1750970Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1751910Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1752960Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1753340Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1753680Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1753850Z                 lines_df=lines_df,
2025-01-24T14:30:01.1754120Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1754450Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1754720Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1755000Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1755440Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1755670Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1755890Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1756090Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1756250Z                 simulation=sim,
2025-01-24T14:30:01.1756410Z             )
2025-01-24T14:30:01.1756570Z         else: # real packets
2025-01-24T14:30:01.1756920Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1757110Z             # which got emitted
2025-01-24T14:30:01.1757350Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1757540Z >           return cls(
2025-01-24T14:30:01.1757990Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1759120Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1759350Z                     mask
2025-01-24T14:30:01.1759500Z                 ],
2025-01-24T14:30:01.1759910Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1760080Z                     mask
2025-01-24T14:30:01.1760230Z                 ],
2025-01-24T14:30:01.1760600Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1760750Z                     mask
2025-01-24T14:30:01.1760910Z                 ],
2025-01-24T14:30:01.1761270Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1761450Z                 lines_df=lines_df,
2025-01-24T14:30:01.1761790Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1762180Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1762330Z                     mask
2025-01-24T14:30:01.1762480Z                 ],
2025-01-24T14:30:01.1762760Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1763000Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1767420Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1767600Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1767700Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1767770Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1767840Z                 simulation=sim,
2025-01-24T14:30:01.1767880Z             )
2025-01-24T14:30:01.1768160Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1768160Z 
2025-01-24T14:30:01.1768320Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1768540Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] _
2025-01-24T14:30:01.1768540Z 
2025-01-24T14:30:01.1768710Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1769140Z 
2025-01-24T14:30:01.1769220Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1769300Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1769350Z         """
2025-01-24T14:30:01.1769480Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1769530Z     
2025-01-24T14:30:01.1769590Z         Parameters:
2025-01-24T14:30:01.1769640Z         -----------
2025-01-24T14:30:01.1769740Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1769780Z     
2025-01-24T14:30:01.1769830Z         Returns:
2025-01-24T14:30:01.1769880Z         --------
2025-01-24T14:30:01.1769940Z         An LIVPlotter instance.
2025-01-24T14:30:01.1769990Z         """
2025-01-24T14:30:01.1770100Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1770110Z 
2025-01-24T14:30:01.1770220Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1770310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1770450Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1770560Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1770740Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1770840Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1770930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1770940Z 
2025-01-24T14:30:01.1771110Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1771330Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1771400Z packets_mode = 'real'
2025-01-24T14:30:01.1771400Z 
2025-01-24T14:30:01.1771450Z     @classmethod
2025-01-24T14:30:01.1771540Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1771590Z         """
2025-01-24T14:30:01.1771740Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1771790Z     
2025-01-24T14:30:01.1771840Z         Parameters
2025-01-24T14:30:01.1771890Z         ----------
2025-01-24T14:30:01.1771960Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1772080Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1772150Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1772260Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1772300Z     
2025-01-24T14:30:01.1772350Z         Returns
2025-01-24T14:30:01.1772390Z         -------
2025-01-24T14:30:01.1772460Z         SimulationPacketData
2025-01-24T14:30:01.1772510Z         """
2025-01-24T14:30:01.1772600Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1772650Z             raise ValueError(
2025-01-24T14:30:01.1772750Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1772830Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1772880Z             )
2025-01-24T14:30:01.1772960Z         # Properties common among both packet modes
2025-01-24T14:30:01.1773090Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1773140Z             "line_id"
2025-01-24T14:30:01.1773190Z         )
2025-01-24T14:30:01.1773270Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1773370Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1773430Z         time_of_simulation = (
2025-01-24T14:30:01.1773550Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1773610Z         )
2025-01-24T14:30:01.1773650Z     
2025-01-24T14:30:01.1773700Z         spectrum = (
2025-01-24T14:30:01.1773790Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1773860Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1774010Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1774060Z         )
2025-01-24T14:30:01.1774100Z     
2025-01-24T14:30:01.1774160Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1774260Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1774320Z             return cls(
2025-01-24T14:30:01.1774440Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1774580Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1774730Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1774860Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1774990Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1775050Z                 lines_df=lines_df,
2025-01-24T14:30:01.1775150Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1775280Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1775390Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1775470Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1775640Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1775730Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1775810Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1775890Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1776000Z                 simulation=sim,
2025-01-24T14:30:01.1776050Z             )
2025-01-24T14:30:01.1776110Z         else: # real packets
2025-01-24T14:30:01.1776240Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1776300Z             # which got emitted
2025-01-24T14:30:01.1776390Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1776440Z >           return cls(
2025-01-24T14:30:01.1776590Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1776730Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1776790Z                     mask
2025-01-24T14:30:01.1776830Z                 ],
2025-01-24T14:30:01.1776990Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1777040Z                     mask
2025-01-24T14:30:01.1777080Z                 ],
2025-01-24T14:30:01.1777220Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1777270Z                     mask
2025-01-24T14:30:01.1777320Z                 ],
2025-01-24T14:30:01.1777450Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1777510Z                 lines_df=lines_df,
2025-01-24T14:30:01.1777640Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1777790Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1777840Z                     mask
2025-01-24T14:30:01.1777880Z                 ],
2025-01-24T14:30:01.1777980Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1778070Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1778220Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1778300Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1778390Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1778460Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1778520Z                 simulation=sim,
2025-01-24T14:30:01.1778560Z             )
2025-01-24T14:30:01.1778880Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1778880Z 
2025-01-24T14:30:01.1779010Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1779230Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] _
2025-01-24T14:30:01.1779230Z 
2025-01-24T14:30:01.1779390Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1779400Z 
2025-01-24T14:30:01.1779460Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1779530Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1779570Z         """
2025-01-24T14:30:01.1779690Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1779740Z     
2025-01-24T14:30:01.1779790Z         Parameters:
2025-01-24T14:30:01.1779840Z         -----------
2025-01-24T14:30:01.1779940Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1779980Z     
2025-01-24T14:30:01.1780040Z         Returns:
2025-01-24T14:30:01.1780090Z         --------
2025-01-24T14:30:01.1780150Z         An LIVPlotter instance.
2025-01-24T14:30:01.1780190Z         """
2025-01-24T14:30:01.1780300Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1780300Z 
2025-01-24T14:30:01.1780410Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1780500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1780630Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1780800Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1780980Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1781080Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1781170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1781180Z 
2025-01-24T14:30:01.1781340Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1781470Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1781520Z packets_mode = 'real'
2025-01-24T14:30:01.1781530Z 
2025-01-24T14:30:01.1781580Z     @classmethod
2025-01-24T14:30:01.1781660Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1781700Z         """
2025-01-24T14:30:01.1781860Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1781900Z     
2025-01-24T14:30:01.1781960Z         Parameters
2025-01-24T14:30:01.1782000Z         ----------
2025-01-24T14:30:01.1782080Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1782190Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1782270Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1782380Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1782420Z     
2025-01-24T14:30:01.1782470Z         Returns
2025-01-24T14:30:01.1782520Z         -------
2025-01-24T14:30:01.1782580Z         SimulationPacketData
2025-01-24T14:30:01.1782620Z         """
2025-01-24T14:30:01.1782700Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1782760Z             raise ValueError(
2025-01-24T14:30:01.1782850Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1782930Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1782980Z             )
2025-01-24T14:30:01.1783060Z         # Properties common among both packet modes
2025-01-24T14:30:01.1783190Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1783240Z             "line_id"
2025-01-24T14:30:01.1783290Z         )
2025-01-24T14:30:01.1783370Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1783520Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1783580Z         time_of_simulation = (
2025-01-24T14:30:01.1783700Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1783750Z         )
2025-01-24T14:30:01.1783800Z     
2025-01-24T14:30:01.1783850Z         spectrum = (
2025-01-24T14:30:01.1783940Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1784010Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1784100Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1784140Z         )
2025-01-24T14:30:01.1784190Z     
2025-01-24T14:30:01.1784250Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1784350Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1784400Z             return cls(
2025-01-24T14:30:01.1784530Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1784680Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1784820Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1784960Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1785080Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1785140Z                 lines_df=lines_df,
2025-01-24T14:30:01.1785240Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1785360Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1785590Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1785690Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1785850Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1785930Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1786020Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1786090Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1786150Z                 simulation=sim,
2025-01-24T14:30:01.1786200Z             )
2025-01-24T14:30:01.1786260Z         else: # real packets
2025-01-24T14:30:01.1786390Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1786440Z             # which got emitted
2025-01-24T14:30:01.1786540Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1786590Z >           return cls(
2025-01-24T14:30:01.1786730Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1786870Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1786930Z                     mask
2025-01-24T14:30:01.1786980Z                 ],
2025-01-24T14:30:01.1787130Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1787180Z                     mask
2025-01-24T14:30:01.1787230Z                 ],
2025-01-24T14:30:01.1787370Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1787410Z                     mask
2025-01-24T14:30:01.1787460Z                 ],
2025-01-24T14:30:01.1787590Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1787650Z                 lines_df=lines_df,
2025-01-24T14:30:01.1787790Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1787930Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1787990Z                     mask
2025-01-24T14:30:01.1788040Z                 ],
2025-01-24T14:30:01.1788140Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1788560Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1788720Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1788820Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1788900Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1788980Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1789040Z                 simulation=sim,
2025-01-24T14:30:01.1789090Z             )
2025-01-24T14:30:01.1789360Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1789370Z 
2025-01-24T14:30:01.1789510Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1789900Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] _
2025-01-24T14:30:01.1789910Z 
2025-01-24T14:30:01.1790090Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1790090Z 
2025-01-24T14:30:01.1790160Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1790230Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1790280Z         """
2025-01-24T14:30:01.1790410Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1790450Z     
2025-01-24T14:30:01.1790510Z         Parameters:
2025-01-24T14:30:01.1790560Z         -----------
2025-01-24T14:30:01.1790660Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1790710Z     
2025-01-24T14:30:01.1790760Z         Returns:
2025-01-24T14:30:01.1790810Z         --------
2025-01-24T14:30:01.1790990Z         An LIVPlotter instance.
2025-01-24T14:30:01.1791040Z         """
2025-01-24T14:30:01.1791150Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1791160Z 
2025-01-24T14:30:01.1791270Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1791360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1791480Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1791600Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1791770Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1791870Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1791970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1791970Z 
2025-01-24T14:30:01.1792140Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1792280Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1792330Z packets_mode = 'real'
2025-01-24T14:30:01.1792340Z 
2025-01-24T14:30:01.1792390Z     @classmethod
2025-01-24T14:30:01.1792490Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1792540Z         """
2025-01-24T14:30:01.1792700Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1792750Z     
2025-01-24T14:30:01.1792810Z         Parameters
2025-01-24T14:30:01.1792860Z         ----------
2025-01-24T14:30:01.1792940Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1793070Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1793150Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1793260Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1793310Z     
2025-01-24T14:30:01.1793360Z         Returns
2025-01-24T14:30:01.1793420Z         -------
2025-01-24T14:30:01.1793490Z         SimulationPacketData
2025-01-24T14:30:01.1793540Z         """
2025-01-24T14:30:01.1793630Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1793690Z             raise ValueError(
2025-01-24T14:30:01.1793860Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1793950Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1794000Z             )
2025-01-24T14:30:01.1794080Z         # Properties common among both packet modes
2025-01-24T14:30:01.1794210Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1794260Z             "line_id"
2025-01-24T14:30:01.1794310Z         )
2025-01-24T14:30:01.1794390Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1794490Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1794550Z         time_of_simulation = (
2025-01-24T14:30:01.1794680Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1794720Z         )
2025-01-24T14:30:01.1794770Z     
2025-01-24T14:30:01.1794820Z         spectrum = (
2025-01-24T14:30:01.1794910Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1794980Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1795070Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1795120Z         )
2025-01-24T14:30:01.1795160Z     
2025-01-24T14:30:01.1795220Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1795320Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1795370Z             return cls(
2025-01-24T14:30:01.1795490Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1795630Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1795840Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1795980Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1796110Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1796170Z                 lines_df=lines_df,
2025-01-24T14:30:01.1796290Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1796420Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1796530Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1796620Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1796770Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1796860Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1796940Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1797010Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1797070Z                 simulation=sim,
2025-01-24T14:30:01.1797120Z             )
2025-01-24T14:30:01.1797180Z         else: # real packets
2025-01-24T14:30:01.1797310Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1797370Z             # which got emitted
2025-01-24T14:30:01.1797460Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1797510Z >           return cls(
2025-01-24T14:30:01.1797650Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1797800Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1797850Z                     mask
2025-01-24T14:30:01.1797890Z                 ],
2025-01-24T14:30:01.1798050Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1798090Z                     mask
2025-01-24T14:30:01.1798150Z                 ],
2025-01-24T14:30:01.1798290Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1798340Z                     mask
2025-01-24T14:30:01.1798390Z                 ],
2025-01-24T14:30:01.1798520Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1798630Z                 lines_df=lines_df,
2025-01-24T14:30:01.1798770Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1798910Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1798960Z                     mask
2025-01-24T14:30:01.1799010Z                 ],
2025-01-24T14:30:01.1799120Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1799210Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1799360Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1799450Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1799530Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1799600Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1799660Z                 simulation=sim,
2025-01-24T14:30:01.1799710Z             )
2025-01-24T14:30:01.1799980Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1799980Z 
2025-01-24T14:30:01.1800110Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1800320Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] _
2025-01-24T14:30:01.1800330Z 
2025-01-24T14:30:01.1800490Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1800490Z 
2025-01-24T14:30:01.1800560Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1800670Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1800720Z         """
2025-01-24T14:30:01.1800840Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1800890Z     
2025-01-24T14:30:01.1800940Z         Parameters:
2025-01-24T14:30:01.1800990Z         -----------
2025-01-24T14:30:01.1801080Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1801130Z     
2025-01-24T14:30:01.1801170Z         Returns:
2025-01-24T14:30:01.1801220Z         --------
2025-01-24T14:30:01.1801280Z         An LIVPlotter instance.
2025-01-24T14:30:01.1801320Z         """
2025-01-24T14:30:01.1801430Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1801430Z 
2025-01-24T14:30:01.1801530Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1813500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1813740Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1813860Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1814040Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1814140Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1814240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1814250Z 
2025-01-24T14:30:01.1814420Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1814550Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1814600Z packets_mode = 'real'
2025-01-24T14:30:01.1814600Z 
2025-01-24T14:30:01.1814650Z     @classmethod
2025-01-24T14:30:01.1814730Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1814780Z         """
2025-01-24T14:30:01.1814930Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1814980Z     
2025-01-24T14:30:01.1815030Z         Parameters
2025-01-24T14:30:01.1815080Z         ----------
2025-01-24T14:30:01.1815150Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1815270Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1815660Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1815780Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1815820Z     
2025-01-24T14:30:01.1815870Z         Returns
2025-01-24T14:30:01.1815910Z         -------
2025-01-24T14:30:01.1815980Z         SimulationPacketData
2025-01-24T14:30:01.1816020Z         """
2025-01-24T14:30:01.1816100Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1816160Z             raise ValueError(
2025-01-24T14:30:01.1816250Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1816330Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1816380Z             )
2025-01-24T14:30:01.1816470Z         # Properties common among both packet modes
2025-01-24T14:30:01.1816600Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1816640Z             "line_id"
2025-01-24T14:30:01.1816690Z         )
2025-01-24T14:30:01.1816780Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1816870Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1816930Z         time_of_simulation = (
2025-01-24T14:30:01.1817050Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1817100Z         )
2025-01-24T14:30:01.1817140Z     
2025-01-24T14:30:01.1817190Z         spectrum = (
2025-01-24T14:30:01.1817280Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1817340Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1817440Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1817480Z         )
2025-01-24T14:30:01.1817870Z     
2025-01-24T14:30:01.1817950Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1818050Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1818100Z             return cls(
2025-01-24T14:30:01.1818230Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1818380Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1818520Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1818660Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1818780Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1818840Z                 lines_df=lines_df,
2025-01-24T14:30:01.1818940Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1819070Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1819180Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1819290Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1819440Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1819530Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1819620Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1819690Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1819740Z                 simulation=sim,
2025-01-24T14:30:01.1819790Z             )
2025-01-24T14:30:01.1819840Z         else: # real packets
2025-01-24T14:30:01.1819970Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1820030Z             # which got emitted
2025-01-24T14:30:01.1820110Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1820170Z >           return cls(
2025-01-24T14:30:01.1820300Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1820460Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1820510Z                     mask
2025-01-24T14:30:01.1820770Z                 ],
2025-01-24T14:30:01.1820920Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1820970Z                     mask
2025-01-24T14:30:01.1821020Z                 ],
2025-01-24T14:30:01.1821160Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1821210Z                     mask
2025-01-24T14:30:01.1821250Z                 ],
2025-01-24T14:30:01.1821390Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1821440Z                 lines_df=lines_df,
2025-01-24T14:30:01.1821590Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1821720Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1821780Z                     mask
2025-01-24T14:30:01.1821830Z                 ],
2025-01-24T14:30:01.1821940Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1822050Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1822200Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1822290Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1822370Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1822440Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1822500Z                 simulation=sim,
2025-01-24T14:30:01.1822550Z             )
2025-01-24T14:30:01.1822880Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1822890Z 
2025-01-24T14:30:01.1823030Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1823240Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-24T14:30:01.1823250Z 
2025-01-24T14:30:01.1823410Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1823410Z 
2025-01-24T14:30:01.1823480Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1823550Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1823590Z         """
2025-01-24T14:30:01.1823710Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1823750Z     
2025-01-24T14:30:01.1823800Z         Parameters:
2025-01-24T14:30:01.1823850Z         -----------
2025-01-24T14:30:01.1823940Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1823980Z     
2025-01-24T14:30:01.1824030Z         Returns:
2025-01-24T14:30:01.1824090Z         --------
2025-01-24T14:30:01.1824150Z         An LIVPlotter instance.
2025-01-24T14:30:01.1824190Z         """
2025-01-24T14:30:01.1824290Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1824300Z 
2025-01-24T14:30:01.1824410Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1824500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1824620Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1824740Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1824910Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1825010Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1825100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1825100Z 
2025-01-24T14:30:01.1825270Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1825390Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1825440Z packets_mode = 'real'
2025-01-24T14:30:01.1825450Z 
2025-01-24T14:30:01.1825500Z     @classmethod
2025-01-24T14:30:01.1825630Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1825680Z         """
2025-01-24T14:30:01.1825830Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1825870Z     
2025-01-24T14:30:01.1825920Z         Parameters
2025-01-24T14:30:01.1825970Z         ----------
2025-01-24T14:30:01.1826040Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1826160Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1826220Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1826340Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1826380Z     
2025-01-24T14:30:01.1826430Z         Returns
2025-01-24T14:30:01.1826480Z         -------
2025-01-24T14:30:01.1826540Z         SimulationPacketData
2025-01-24T14:30:01.1826590Z         """
2025-01-24T14:30:01.1826670Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1826720Z             raise ValueError(
2025-01-24T14:30:01.1826810Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1826900Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1826940Z             )
2025-01-24T14:30:01.1827020Z         # Properties common among both packet modes
2025-01-24T14:30:01.1827150Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1827200Z             "line_id"
2025-01-24T14:30:01.1827240Z         )
2025-01-24T14:30:01.1827320Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1827410Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1827530Z         time_of_simulation = (
2025-01-24T14:30:01.1827650Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1827710Z         )
2025-01-24T14:30:01.1827750Z     
2025-01-24T14:30:01.1827800Z         spectrum = (
2025-01-24T14:30:01.1827890Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1827960Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1828060Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1828100Z         )
2025-01-24T14:30:01.1828150Z     
2025-01-24T14:30:01.1828210Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1828310Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1828360Z             return cls(
2025-01-24T14:30:01.1828480Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1828620Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1828770Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1828900Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1829020Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1829080Z                 lines_df=lines_df,
2025-01-24T14:30:01.1829180Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1829310Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1829410Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1829510Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1829810Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1829900Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1829980Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1830050Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1830110Z                 simulation=sim,
2025-01-24T14:30:01.1830150Z             )
2025-01-24T14:30:01.1830210Z         else: # real packets
2025-01-24T14:30:01.1830340Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1830500Z             # which got emitted
2025-01-24T14:30:01.1830580Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1830630Z >           return cls(
2025-01-24T14:30:01.1830770Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1830910Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1830960Z                     mask
2025-01-24T14:30:01.1831010Z                 ],
2025-01-24T14:30:01.1831160Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1831210Z                     mask
2025-01-24T14:30:01.1831250Z                 ],
2025-01-24T14:30:01.1831390Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1831440Z                     mask
2025-01-24T14:30:01.1831490Z                 ],
2025-01-24T14:30:01.1831630Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1831680Z                 lines_df=lines_df,
2025-01-24T14:30:01.1831810Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1831950Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1832000Z                     mask
2025-01-24T14:30:01.1832050Z                 ],
2025-01-24T14:30:01.1832150Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1832240Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1832460Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1832550Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1832630Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1832700Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1832760Z                 simulation=sim,
2025-01-24T14:30:01.1832810Z             )
2025-01-24T14:30:01.1833070Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1833080Z 
2025-01-24T14:30:01.1833210Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1833420Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] _
2025-01-24T14:30:01.1833430Z 
2025-01-24T14:30:01.1833590Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1833600Z 
2025-01-24T14:30:01.1833660Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1833730Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1833780Z         """
2025-01-24T14:30:01.1833890Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1833940Z     
2025-01-24T14:30:01.1833990Z         Parameters:
2025-01-24T14:30:01.1834050Z         -----------
2025-01-24T14:30:01.1834140Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1834190Z     
2025-01-24T14:30:01.1834240Z         Returns:
2025-01-24T14:30:01.1834290Z         --------
2025-01-24T14:30:01.1834350Z         An LIVPlotter instance.
2025-01-24T14:30:01.1834390Z         """
2025-01-24T14:30:01.1834500Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1834500Z 
2025-01-24T14:30:01.1834610Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1834700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1834840Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1834950Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1835120Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1835280Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1835360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1835370Z 
2025-01-24T14:30:01.1835540Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1835660Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1835720Z packets_mode = 'real'
2025-01-24T14:30:01.1835720Z 
2025-01-24T14:30:01.1835770Z     @classmethod
2025-01-24T14:30:01.1835850Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1835900Z         """
2025-01-24T14:30:01.1836050Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1836100Z     
2025-01-24T14:30:01.1836140Z         Parameters
2025-01-24T14:30:01.1836200Z         ----------
2025-01-24T14:30:01.1836270Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1836380Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1836450Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1836560Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1836610Z     
2025-01-24T14:30:01.1836650Z         Returns
2025-01-24T14:30:01.1836700Z         -------
2025-01-24T14:30:01.1836760Z         SimulationPacketData
2025-01-24T14:30:01.1836800Z         """
2025-01-24T14:30:01.1836880Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1836940Z             raise ValueError(
2025-01-24T14:30:01.1837030Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1837610Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1837690Z             )
2025-01-24T14:30:01.1837780Z         # Properties common among both packet modes
2025-01-24T14:30:01.1837910Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1837970Z             "line_id"
2025-01-24T14:30:01.1838020Z         )
2025-01-24T14:30:01.1838100Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1838200Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1838260Z         time_of_simulation = (
2025-01-24T14:30:01.1838380Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1838430Z         )
2025-01-24T14:30:01.1838470Z     
2025-01-24T14:30:01.1838530Z         spectrum = (
2025-01-24T14:30:01.1838620Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1838680Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1838780Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1838820Z         )
2025-01-24T14:30:01.1838870Z     
2025-01-24T14:30:01.1838940Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1839040Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1839100Z             return cls(
2025-01-24T14:30:01.1839230Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1839370Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1839520Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1839650Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1839780Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1839840Z                 lines_df=lines_df,
2025-01-24T14:30:01.1839940Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1840080Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1840180Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1840270Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1840750Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1840840Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1840920Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1840990Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1841050Z                 simulation=sim,
2025-01-24T14:30:01.1841100Z             )
2025-01-24T14:30:01.1841160Z         else: # real packets
2025-01-24T14:30:01.1841290Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1841350Z             # which got emitted
2025-01-24T14:30:01.1841440Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1841490Z >           return cls(
2025-01-24T14:30:01.1841630Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1841790Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1841840Z                     mask
2025-01-24T14:30:01.1841890Z                 ],
2025-01-24T14:30:01.1842040Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1842090Z                     mask
2025-01-24T14:30:01.1842140Z                 ],
2025-01-24T14:30:01.1842270Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1842320Z                     mask
2025-01-24T14:30:01.1842370Z                 ],
2025-01-24T14:30:01.1842510Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1842630Z                 lines_df=lines_df,
2025-01-24T14:30:01.1842770Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1842920Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1842970Z                     mask
2025-01-24T14:30:01.1843020Z                 ],
2025-01-24T14:30:01.1843130Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1843220Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1843380Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1843470Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1843560Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1843630Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1843690Z                 simulation=sim,
2025-01-24T14:30:01.1843730Z             )
2025-01-24T14:30:01.1844000Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1844010Z 
2025-01-24T14:30:01.1844140Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1844360Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] _
2025-01-24T14:30:01.1844360Z 
2025-01-24T14:30:01.1844530Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1844530Z 
2025-01-24T14:30:01.1844600Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1844670Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1844720Z         """
2025-01-24T14:30:01.1844840Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1844880Z     
2025-01-24T14:30:01.1844930Z         Parameters:
2025-01-24T14:30:01.1844980Z         -----------
2025-01-24T14:30:01.1845080Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1845130Z     
2025-01-24T14:30:01.1845180Z         Returns:
2025-01-24T14:30:01.1845230Z         --------
2025-01-24T14:30:01.1845290Z         An LIVPlotter instance.
2025-01-24T14:30:01.1845340Z         """
2025-01-24T14:30:01.1845440Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1845490Z 
2025-01-24T14:30:01.1845600Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1845700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1845830Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1845950Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1846130Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1846230Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1846330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1846330Z 
2025-01-24T14:30:01.1846500Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1846630Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1846680Z packets_mode = 'real'
2025-01-24T14:30:01.1846690Z 
2025-01-24T14:30:01.1846750Z     @classmethod
2025-01-24T14:30:01.1846830Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1846880Z         """
2025-01-24T14:30:01.1847040Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1847080Z     
2025-01-24T14:30:01.1847140Z         Parameters
2025-01-24T14:30:01.1847190Z         ----------
2025-01-24T14:30:01.1847270Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1847390Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1847460Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1847620Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1847680Z     
2025-01-24T14:30:01.1847720Z         Returns
2025-01-24T14:30:01.1847780Z         -------
2025-01-24T14:30:01.1847840Z         SimulationPacketData
2025-01-24T14:30:01.1847890Z         """
2025-01-24T14:30:01.1847980Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1848040Z             raise ValueError(
2025-01-24T14:30:01.1848140Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1848220Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1848270Z             )
2025-01-24T14:30:01.1848360Z         # Properties common among both packet modes
2025-01-24T14:30:01.1848490Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1848540Z             "line_id"
2025-01-24T14:30:01.1848580Z         )
2025-01-24T14:30:01.1848670Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1848770Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1848840Z         time_of_simulation = (
2025-01-24T14:30:01.1848970Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1849020Z         )
2025-01-24T14:30:01.1849070Z     
2025-01-24T14:30:01.1849120Z         spectrum = (
2025-01-24T14:30:01.1849220Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1849280Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1849380Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1849430Z         )
2025-01-24T14:30:01.1849480Z     
2025-01-24T14:30:01.1849540Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1849640Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1849700Z             return cls(
2025-01-24T14:30:01.1849830Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1849980Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1850130Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1850270Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1850450Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1850520Z                 lines_df=lines_df,
2025-01-24T14:30:01.1850630Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1850760Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1850870Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1850960Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1851120Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1851210Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1851300Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1851370Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1851430Z                 simulation=sim,
2025-01-24T14:30:01.1851480Z             )
2025-01-24T14:30:01.1851540Z         else: # real packets
2025-01-24T14:30:01.1851680Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1851740Z             # which got emitted
2025-01-24T14:30:01.1851830Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1851880Z >           return cls(
2025-01-24T14:30:01.1852030Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1852180Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1852240Z                     mask
2025-01-24T14:30:01.1852290Z                 ],
2025-01-24T14:30:01.1852500Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1852550Z                     mask
2025-01-24T14:30:01.1852600Z                 ],
2025-01-24T14:30:01.1852730Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1852780Z                     mask
2025-01-24T14:30:01.1852830Z                 ],
2025-01-24T14:30:01.1852960Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1853020Z                 lines_df=lines_df,
2025-01-24T14:30:01.1853150Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1853290Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1853340Z                     mask
2025-01-24T14:30:01.1853390Z                 ],
2025-01-24T14:30:01.1853490Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1853580Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1853730Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1853820Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1853900Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1853970Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1854030Z                 simulation=sim,
2025-01-24T14:30:01.1854080Z             )
2025-01-24T14:30:01.1854350Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1854350Z 
2025-01-24T14:30:01.1854490Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1854700Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] _
2025-01-24T14:30:01.1854700Z 
2025-01-24T14:30:01.1854860Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1854870Z 
2025-01-24T14:30:01.1854940Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1855000Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1855050Z         """
2025-01-24T14:30:01.1855170Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1855270Z     
2025-01-24T14:30:01.1855320Z         Parameters:
2025-01-24T14:30:01.1855370Z         -----------
2025-01-24T14:30:01.1855460Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1855500Z     
2025-01-24T14:30:01.1855560Z         Returns:
2025-01-24T14:30:01.1855600Z         --------
2025-01-24T14:30:01.1855660Z         An LIVPlotter instance.
2025-01-24T14:30:01.1855710Z         """
2025-01-24T14:30:01.1855810Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1855820Z 
2025-01-24T14:30:01.1855920Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1856020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1856150Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1856270Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1856440Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1856540Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1856630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1856630Z 
2025-01-24T14:30:01.1856800Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1856930Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1856990Z packets_mode = 'real'
2025-01-24T14:30:01.1856990Z 
2025-01-24T14:30:01.1857040Z     @classmethod
2025-01-24T14:30:01.1857120Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1857500Z         """
2025-01-24T14:30:01.1857680Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1857720Z     
2025-01-24T14:30:01.1857780Z         Parameters
2025-01-24T14:30:01.1857820Z         ----------
2025-01-24T14:30:01.1857900Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1858020Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1858090Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1858200Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1858240Z     
2025-01-24T14:30:01.1858290Z         Returns
2025-01-24T14:30:01.1858340Z         -------
2025-01-24T14:30:01.1858400Z         SimulationPacketData
2025-01-24T14:30:01.1858440Z         """
2025-01-24T14:30:01.1858520Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1858580Z             raise ValueError(
2025-01-24T14:30:01.1858670Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1858760Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1858810Z             )
2025-01-24T14:30:01.1858890Z         # Properties common among both packet modes
2025-01-24T14:30:01.1859020Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1859080Z             "line_id"
2025-01-24T14:30:01.1859120Z         )
2025-01-24T14:30:01.1859200Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1859300Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1859360Z         time_of_simulation = (
2025-01-24T14:30:01.1859480Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1859530Z         )
2025-01-24T14:30:01.1859570Z     
2025-01-24T14:30:01.1859620Z         spectrum = (
2025-01-24T14:30:01.1859710Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1859770Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1859860Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1859910Z         )
2025-01-24T14:30:01.1864370Z     
2025-01-24T14:30:01.1864480Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1864580Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1864880Z             return cls(
2025-01-24T14:30:01.1865010Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1865150Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1865290Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1865430Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1865550Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1865610Z                 lines_df=lines_df,
2025-01-24T14:30:01.1865710Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1865840Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1865940Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1866030Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1866180Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1866270Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1866360Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1866430Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1866500Z                 simulation=sim,
2025-01-24T14:30:01.1866540Z             )
2025-01-24T14:30:01.1866600Z         else: # real packets
2025-01-24T14:30:01.1866730Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1866840Z             # which got emitted
2025-01-24T14:30:01.1866930Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1866980Z >           return cls(
2025-01-24T14:30:01.1867130Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1867280Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1867340Z                     mask
2025-01-24T14:30:01.1867380Z                 ],
2025-01-24T14:30:01.1867530Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1867580Z                     mask
2025-01-24T14:30:01.1867630Z                 ],
2025-01-24T14:30:01.1867760Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1867810Z                     mask
2025-01-24T14:30:01.1867860Z                 ],
2025-01-24T14:30:01.1868000Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1868060Z                 lines_df=lines_df,
2025-01-24T14:30:01.1868200Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1868340Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1868400Z                     mask
2025-01-24T14:30:01.1868450Z                 ],
2025-01-24T14:30:01.1868550Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1868640Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1868790Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1868880Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1868970Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1869030Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1869100Z                 simulation=sim,
2025-01-24T14:30:01.1869140Z             )
2025-01-24T14:30:01.1869410Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1869420Z 
2025-01-24T14:30:01.1869550Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1869960Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] _
2025-01-24T14:30:01.1869960Z 
2025-01-24T14:30:01.1870130Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1870130Z 
2025-01-24T14:30:01.1870200Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1870280Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1870320Z         """
2025-01-24T14:30:01.1870450Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1870490Z     
2025-01-24T14:30:01.1870550Z         Parameters:
2025-01-24T14:30:01.1870600Z         -----------
2025-01-24T14:30:01.1870690Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1870730Z     
2025-01-24T14:30:01.1870790Z         Returns:
2025-01-24T14:30:01.1870830Z         --------
2025-01-24T14:30:01.1870890Z         An LIVPlotter instance.
2025-01-24T14:30:01.1870940Z         """
2025-01-24T14:30:01.1871050Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1871050Z 
2025-01-24T14:30:01.1871160Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1871250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1871370Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1871490Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1871660Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1871760Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1871910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1871910Z 
2025-01-24T14:30:01.1872100Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1872230Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1872290Z packets_mode = 'real'
2025-01-24T14:30:01.1872290Z 
2025-01-24T14:30:01.1872340Z     @classmethod
2025-01-24T14:30:01.1872420Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1872470Z         """
2025-01-24T14:30:01.1872620Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1872670Z     
2025-01-24T14:30:01.1872720Z         Parameters
2025-01-24T14:30:01.1872770Z         ----------
2025-01-24T14:30:01.1872850Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1872960Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1873030Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1873140Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1873190Z     
2025-01-24T14:30:01.1873230Z         Returns
2025-01-24T14:30:01.1873280Z         -------
2025-01-24T14:30:01.1873340Z         SimulationPacketData
2025-01-24T14:30:01.1873390Z         """
2025-01-24T14:30:01.1873470Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1873520Z             raise ValueError(
2025-01-24T14:30:01.1873610Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1873690Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1873740Z             )
2025-01-24T14:30:01.1873820Z         # Properties common among both packet modes
2025-01-24T14:30:01.1873950Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1873990Z             "line_id"
2025-01-24T14:30:01.1874040Z         )
2025-01-24T14:30:01.1874120Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1874220Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1874280Z         time_of_simulation = (
2025-01-24T14:30:01.1874400Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1874490Z         )
2025-01-24T14:30:01.1874540Z     
2025-01-24T14:30:01.1874590Z         spectrum = (
2025-01-24T14:30:01.1874690Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1874750Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1874840Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1874890Z         )
2025-01-24T14:30:01.1874930Z     
2025-01-24T14:30:01.1874990Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1875090Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1875140Z             return cls(
2025-01-24T14:30:01.1875270Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1875410Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1875550Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1875690Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1875810Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1875870Z                 lines_df=lines_df,
2025-01-24T14:30:01.1875970Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1876100Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1876200Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1876290Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1876490Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1876580Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1876660Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1876730Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1876790Z                 simulation=sim,
2025-01-24T14:30:01.1876830Z             )
2025-01-24T14:30:01.1876890Z         else: # real packets
2025-01-24T14:30:01.1877020Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1877080Z             # which got emitted
2025-01-24T14:30:01.1877160Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1877210Z >           return cls(
2025-01-24T14:30:01.1877350Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1877500Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1877550Z                     mask
2025-01-24T14:30:01.1877600Z                 ],
2025-01-24T14:30:01.1877760Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1877810Z                     mask
2025-01-24T14:30:01.1877860Z                 ],
2025-01-24T14:30:01.1877990Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1878050Z                     mask
2025-01-24T14:30:01.1878090Z                 ],
2025-01-24T14:30:01.1878230Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1878280Z                 lines_df=lines_df,
2025-01-24T14:30:01.1878420Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1878560Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1878610Z                     mask
2025-01-24T14:30:01.1878660Z                 ],
2025-01-24T14:30:01.1878760Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1878860Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1879010Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1879100Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1879220Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1879290Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1879350Z                 simulation=sim,
2025-01-24T14:30:01.1879400Z             )
2025-01-24T14:30:01.1879660Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1879670Z 
2025-01-24T14:30:01.1879800Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1880010Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] _
2025-01-24T14:30:01.1880010Z 
2025-01-24T14:30:01.1880180Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1880180Z 
2025-01-24T14:30:01.1880250Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1880310Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1880360Z         """
2025-01-24T14:30:01.1880480Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1880530Z     
2025-01-24T14:30:01.1880590Z         Parameters:
2025-01-24T14:30:01.1880640Z         -----------
2025-01-24T14:30:01.1880740Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1880780Z     
2025-01-24T14:30:01.1880830Z         Returns:
2025-01-24T14:30:01.1880880Z         --------
2025-01-24T14:30:01.1880940Z         An LIVPlotter instance.
2025-01-24T14:30:01.1880990Z         """
2025-01-24T14:30:01.1881090Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1881100Z 
2025-01-24T14:30:01.1881460Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1881580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1881710Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1881830Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1882000Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1882110Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1882200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1882210Z 
2025-01-24T14:30:01.1882380Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1882510Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1882570Z packets_mode = 'real'
2025-01-24T14:30:01.1882580Z 
2025-01-24T14:30:01.1882630Z     @classmethod
2025-01-24T14:30:01.1882720Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1882770Z         """
2025-01-24T14:30:01.1882930Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1882980Z     
2025-01-24T14:30:01.1883030Z         Parameters
2025-01-24T14:30:01.1883090Z         ----------
2025-01-24T14:30:01.1883160Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1883290Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1883360Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1883470Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1883520Z     
2025-01-24T14:30:01.1883570Z         Returns
2025-01-24T14:30:01.1883620Z         -------
2025-01-24T14:30:01.1883680Z         SimulationPacketData
2025-01-24T14:30:01.1883730Z         """
2025-01-24T14:30:01.1883810Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1883870Z             raise ValueError(
2025-01-24T14:30:01.1883960Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1884050Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1884090Z             )
2025-01-24T14:30:01.1884180Z         # Properties common among both packet modes
2025-01-24T14:30:01.1885070Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1885130Z             "line_id"
2025-01-24T14:30:01.1885180Z         )
2025-01-24T14:30:01.1885260Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1885360Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1885420Z         time_of_simulation = (
2025-01-24T14:30:01.1885540Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1885590Z         )
2025-01-24T14:30:01.1885640Z     
2025-01-24T14:30:01.1885690Z         spectrum = (
2025-01-24T14:30:01.1885790Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1885850Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1885950Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1886000Z         )
2025-01-24T14:30:01.1886040Z     
2025-01-24T14:30:01.1886100Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1886210Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1886260Z             return cls(
2025-01-24T14:30:01.1886390Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1886530Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1886680Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1886820Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1886940Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1887190Z                 lines_df=lines_df,
2025-01-24T14:30:01.1887290Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1887420Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1887530Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1887630Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1887780Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1887870Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1887950Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1888020Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1888090Z                 simulation=sim,
2025-01-24T14:30:01.1888130Z             )
2025-01-24T14:30:01.1888190Z         else: # real packets
2025-01-24T14:30:01.1888330Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1888390Z             # which got emitted
2025-01-24T14:30:01.1888470Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1888520Z >           return cls(
2025-01-24T14:30:01.1888660Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1888810Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1888870Z                     mask
2025-01-24T14:30:01.1888910Z                 ],
2025-01-24T14:30:01.1889070Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1889120Z                     mask
2025-01-24T14:30:01.1889170Z                 ],
2025-01-24T14:30:01.1889300Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1889350Z                     mask
2025-01-24T14:30:01.1889400Z                 ],
2025-01-24T14:30:01.1889530Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1889590Z                 lines_df=lines_df,
2025-01-24T14:30:01.1889730Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1889870Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1889980Z                     mask
2025-01-24T14:30:01.1890030Z                 ],
2025-01-24T14:30:01.1890140Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1890230Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1890380Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1890470Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1890540Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1890620Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1890680Z                 simulation=sim,
2025-01-24T14:30:01.1890730Z             )
2025-01-24T14:30:01.1891000Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1891000Z 
2025-01-24T14:30:01.1891140Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1891350Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-24T14:30:01.1891360Z 
2025-01-24T14:30:01.1891530Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1891530Z 
2025-01-24T14:30:01.1891600Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1891670Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1891710Z         """
2025-01-24T14:30:01.1891840Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1891880Z     
2025-01-24T14:30:01.1891980Z         Parameters:
2025-01-24T14:30:01.1892040Z         -----------
2025-01-24T14:30:01.1892130Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1892180Z     
2025-01-24T14:30:01.1892230Z         Returns:
2025-01-24T14:30:01.1892280Z         --------
2025-01-24T14:30:01.1892340Z         An LIVPlotter instance.
2025-01-24T14:30:01.1892400Z         """
2025-01-24T14:30:01.1892510Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1892510Z 
2025-01-24T14:30:01.1892610Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1892710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1892830Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1892950Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1893120Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1893230Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1893320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1893320Z 
2025-01-24T14:30:01.1893500Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1893630Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1893680Z packets_mode = 'real'
2025-01-24T14:30:01.1893690Z 
2025-01-24T14:30:01.1893740Z     @classmethod
2025-01-24T14:30:01.1893820Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1893870Z         """
2025-01-24T14:30:01.1894020Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1894070Z     
2025-01-24T14:30:01.1894120Z         Parameters
2025-01-24T14:30:01.1894160Z         ----------
2025-01-24T14:30:01.1894240Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1894360Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1894430Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1894540Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1894590Z     
2025-01-24T14:30:01.1894630Z         Returns
2025-01-24T14:30:01.1894740Z         -------
2025-01-24T14:30:01.1894800Z         SimulationPacketData
2025-01-24T14:30:01.1894850Z         """
2025-01-24T14:30:01.1894930Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1894990Z             raise ValueError(
2025-01-24T14:30:01.1895080Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1895160Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1895210Z             )
2025-01-24T14:30:01.1895290Z         # Properties common among both packet modes
2025-01-24T14:30:01.1895420Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1895470Z             "line_id"
2025-01-24T14:30:01.1895520Z         )
2025-01-24T14:30:01.1895600Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1895700Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1895760Z         time_of_simulation = (
2025-01-24T14:30:01.1895890Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1895930Z         )
2025-01-24T14:30:01.1895980Z     
2025-01-24T14:30:01.1896030Z         spectrum = (
2025-01-24T14:30:01.1896120Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1896180Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1896280Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1896320Z         )
2025-01-24T14:30:01.1896370Z     
2025-01-24T14:30:01.1896430Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1896530Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1896580Z             return cls(
2025-01-24T14:30:01.1896760Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1896900Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1897050Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1897180Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1897310Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1897370Z                 lines_df=lines_df,
2025-01-24T14:30:01.1897470Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1897600Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1897700Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1897790Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1897940Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1898030Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1898110Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1898190Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1898250Z                 simulation=sim,
2025-01-24T14:30:01.1898300Z             )
2025-01-24T14:30:01.1898350Z         else: # real packets
2025-01-24T14:30:01.1898480Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1898540Z             # which got emitted
2025-01-24T14:30:01.1898630Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1898680Z >           return cls(
2025-01-24T14:30:01.1898810Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1898960Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1899010Z                     mask
2025-01-24T14:30:01.1899070Z                 ],
2025-01-24T14:30:01.1899220Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1899270Z                     mask
2025-01-24T14:30:01.1899360Z                 ],
2025-01-24T14:30:01.1899510Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1899560Z                     mask
2025-01-24T14:30:01.1899610Z                 ],
2025-01-24T14:30:01.1899750Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1899810Z                 lines_df=lines_df,
2025-01-24T14:30:01.1899940Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1900080Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1900130Z                     mask
2025-01-24T14:30:01.1900180Z                 ],
2025-01-24T14:30:01.1900280Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1900370Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1900530Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1900620Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1900710Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1900780Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1900840Z                 simulation=sim,
2025-01-24T14:30:01.1900880Z             )
2025-01-24T14:30:01.1901150Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1901150Z 
2025-01-24T14:30:01.1901280Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1901900Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] _
2025-01-24T14:30:01.1901930Z 
2025-01-24T14:30:01.1902160Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1902160Z 
2025-01-24T14:30:01.1902230Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1902300Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1902350Z         """
2025-01-24T14:30:01.1902470Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1902510Z     
2025-01-24T14:30:01.1902570Z         Parameters:
2025-01-24T14:30:01.1902620Z         -----------
2025-01-24T14:30:01.1902710Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1902750Z     
2025-01-24T14:30:01.1902800Z         Returns:
2025-01-24T14:30:01.1902850Z         --------
2025-01-24T14:30:01.1902910Z         An LIVPlotter instance.
2025-01-24T14:30:01.1902950Z         """
2025-01-24T14:30:01.1903050Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1903060Z 
2025-01-24T14:30:01.1903170Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1903260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1903390Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1903500Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1903680Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1903780Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1903870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1903880Z 
2025-01-24T14:30:01.1904050Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1904170Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1904230Z packets_mode = 'real'
2025-01-24T14:30:01.1904230Z 
2025-01-24T14:30:01.1904280Z     @classmethod
2025-01-24T14:30:01.1904370Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1904410Z         """
2025-01-24T14:30:01.1904570Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1904990Z     
2025-01-24T14:30:01.1905040Z         Parameters
2025-01-24T14:30:01.1905090Z         ----------
2025-01-24T14:30:01.1905170Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1905280Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1905350Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1905460Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1905510Z     
2025-01-24T14:30:01.1905560Z         Returns
2025-01-24T14:30:01.1905600Z         -------
2025-01-24T14:30:01.1905660Z         SimulationPacketData
2025-01-24T14:30:01.1905710Z         """
2025-01-24T14:30:01.1905790Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1905850Z             raise ValueError(
2025-01-24T14:30:01.1905940Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1906020Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1906070Z             )
2025-01-24T14:30:01.1906150Z         # Properties common among both packet modes
2025-01-24T14:30:01.1906280Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1906330Z             "line_id"
2025-01-24T14:30:01.1906380Z         )
2025-01-24T14:30:01.1906460Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1906550Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1906610Z         time_of_simulation = (
2025-01-24T14:30:01.1906730Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1906780Z         )
2025-01-24T14:30:01.1906820Z     
2025-01-24T14:30:01.1906960Z         spectrum = (
2025-01-24T14:30:01.1907050Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1907130Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1907220Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1907270Z         )
2025-01-24T14:30:01.1907320Z     
2025-01-24T14:30:01.1907390Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1907480Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1907530Z             return cls(
2025-01-24T14:30:01.1907660Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1907800Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1907940Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1908070Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1908200Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1908250Z                 lines_df=lines_df,
2025-01-24T14:30:01.1908360Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1908480Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1908590Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1908680Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1908830Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1908920Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1909000Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1909070Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1909130Z                 simulation=sim,
2025-01-24T14:30:01.1909180Z             )
2025-01-24T14:30:01.1909240Z         else: # real packets
2025-01-24T14:30:01.1909370Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.1909420Z             # which got emitted
2025-01-24T14:30:01.1909510Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.1909560Z >           return cls(
2025-01-24T14:30:01.1909750Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.1910000Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.1910060Z                     mask
2025-01-24T14:30:01.1910100Z                 ],
2025-01-24T14:30:01.1910250Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.1910300Z                     mask
2025-01-24T14:30:01.1910350Z                 ],
2025-01-24T14:30:01.1910480Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.1910540Z                     mask
2025-01-24T14:30:01.1910590Z                 ],
2025-01-24T14:30:01.1910720Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.1910780Z                 lines_df=lines_df,
2025-01-24T14:30:01.1910910Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.1911050Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.1911100Z                     mask
2025-01-24T14:30:01.1911150Z                 ],
2025-01-24T14:30:01.1911250Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1911350Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1911500Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1911580Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1917390Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1917510Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1917570Z                 simulation=sim,
2025-01-24T14:30:01.1917620Z             )
2025-01-24T14:30:01.1917890Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.1917900Z 
2025-01-24T14:30:01.1918040Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.1918250Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _
2025-01-24T14:30:01.1918260Z 
2025-01-24T14:30:01.1918440Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1918440Z 
2025-01-24T14:30:01.1918510Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.1918580Z     def plotter(simulation_simple):
2025-01-24T14:30:01.1918630Z         """
2025-01-24T14:30:01.1918750Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.1918800Z     
2025-01-24T14:30:01.1918860Z         Parameters:
2025-01-24T14:30:01.1918910Z         -----------
2025-01-24T14:30:01.1919020Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.1919070Z     
2025-01-24T14:30:01.1919130Z         Returns:
2025-01-24T14:30:01.1919180Z         --------
2025-01-24T14:30:01.1919250Z         An LIVPlotter instance.
2025-01-24T14:30:01.1919300Z         """
2025-01-24T14:30:01.1919410Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.1919420Z 
2025-01-24T14:30:01.1919530Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.1919630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1919760Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.1919880Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.1920060Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.1920160Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.1920260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.1920260Z 
2025-01-24T14:30:01.1920430Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.1920620Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.1920690Z packets_mode = 'real'
2025-01-24T14:30:01.1920690Z 
2025-01-24T14:30:01.1920740Z     @classmethod
2025-01-24T14:30:01.1920830Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.1920880Z         """
2025-01-24T14:30:01.1921040Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.1921090Z     
2025-01-24T14:30:01.1921140Z         Parameters
2025-01-24T14:30:01.1921190Z         ----------
2025-01-24T14:30:01.1921270Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.1921390Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.1921460Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.1921580Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.1921630Z     
2025-01-24T14:30:01.1921680Z         Returns
2025-01-24T14:30:01.1921730Z         -------
2025-01-24T14:30:01.1921800Z         SimulationPacketData
2025-01-24T14:30:01.1921850Z         """
2025-01-24T14:30:01.1921930Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.1921990Z             raise ValueError(
2025-01-24T14:30:01.1922090Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.1922170Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.1922230Z             )
2025-01-24T14:30:01.1922310Z         # Properties common among both packet modes
2025-01-24T14:30:01.1922490Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.1922550Z             "line_id"
2025-01-24T14:30:01.1922600Z         )
2025-01-24T14:30:01.1922690Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.1922790Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.1922850Z         time_of_simulation = (
2025-01-24T14:30:01.1922980Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.1923040Z         )
2025-01-24T14:30:01.1923080Z     
2025-01-24T14:30:01.1923140Z         spectrum = (
2025-01-24T14:30:01.1923230Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.1923300Z             if packets_mode == "virtual"
2025-01-24T14:30:01.1923400Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.1923450Z         )
2025-01-24T14:30:01.1923490Z     
2025-01-24T14:30:01.1923560Z         if packets_mode == "virtual":
2025-01-24T14:30:01.1923660Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.1923720Z             return cls(
2025-01-24T14:30:01.1923860Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.1924000Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.1924150Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.1924290Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.1924420Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.1924490Z                 lines_df=lines_df,
2025-01-24T14:30:01.1924600Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.1924730Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.1924840Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.1924930Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.1925090Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.1925180Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.1925270Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.1925400Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.1925460Z                 simulation=sim,
2025-01-24T14:30:01.1925510Z             )
2025-01-24T14:30:01.1925570Z         else: # real packets
2025-01-24T14:30:01.1925710Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2024040Z             # which got emitted
2025-01-24T14:30:01.2024360Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2024410Z >           return cls(
2025-01-24T14:30:01.2024560Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2025020Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2025090Z                     mask
2025-01-24T14:30:01.2025140Z                 ],
2025-01-24T14:30:01.2025290Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2025900Z                     mask
2025-01-24T14:30:01.2025980Z                 ],
2025-01-24T14:30:01.2026140Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2026190Z                     mask
2025-01-24T14:30:01.2026240Z                 ],
2025-01-24T14:30:01.2026380Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2026450Z                 lines_df=lines_df,
2025-01-24T14:30:01.2026580Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2026730Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2028180Z                     mask
2025-01-24T14:30:01.2028260Z                 ],
2025-01-24T14:30:01.2028370Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2028960Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2029140Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2029250Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2029340Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2029410Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2029470Z                 simulation=sim,
2025-01-24T14:30:01.2029520Z             )
2025-01-24T14:30:01.2029800Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2029810Z 
2025-01-24T14:30:01.2029940Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2030560Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _
2025-01-24T14:30:01.2030570Z 
2025-01-24T14:30:01.2030770Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2030780Z 
2025-01-24T14:30:01.2030850Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2030920Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2030970Z         """
2025-01-24T14:30:01.2031090Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2031140Z     
2025-01-24T14:30:01.2031190Z         Parameters:
2025-01-24T14:30:01.2031240Z         -----------
2025-01-24T14:30:01.2031340Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2031380Z     
2025-01-24T14:30:01.2031440Z         Returns:
2025-01-24T14:30:01.2031490Z         --------
2025-01-24T14:30:01.2031540Z         An LIVPlotter instance.
2025-01-24T14:30:01.2031590Z         """
2025-01-24T14:30:01.2031700Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2031700Z 
2025-01-24T14:30:01.2031820Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2031910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2032040Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2032570Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2032750Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2032850Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2032950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2032950Z 
2025-01-24T14:30:01.2033120Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2033250Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2033570Z packets_mode = 'real'
2025-01-24T14:30:01.2033580Z 
2025-01-24T14:30:01.2033640Z     @classmethod
2025-01-24T14:30:01.2033730Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2033770Z         """
2025-01-24T14:30:01.2033940Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2033980Z     
2025-01-24T14:30:01.2034040Z         Parameters
2025-01-24T14:30:01.2034090Z         ----------
2025-01-24T14:30:01.2034160Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2034280Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2034350Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2034460Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2034500Z     
2025-01-24T14:30:01.2034550Z         Returns
2025-01-24T14:30:01.2034600Z         -------
2025-01-24T14:30:01.2034670Z         SimulationPacketData
2025-01-24T14:30:01.2034710Z         """
2025-01-24T14:30:01.2034890Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2034950Z             raise ValueError(
2025-01-24T14:30:01.2035050Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2035130Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2035190Z             )
2025-01-24T14:30:01.2035270Z         # Properties common among both packet modes
2025-01-24T14:30:01.2035400Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2035450Z             "line_id"
2025-01-24T14:30:01.2035500Z         )
2025-01-24T14:30:01.2035580Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2035680Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2035740Z         time_of_simulation = (
2025-01-24T14:30:01.2035860Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2035910Z         )
2025-01-24T14:30:01.2035960Z     
2025-01-24T14:30:01.2036010Z         spectrum = (
2025-01-24T14:30:01.2036100Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2036170Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2036260Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2036310Z         )
2025-01-24T14:30:01.2036360Z     
2025-01-24T14:30:01.2036420Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2036520Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2036570Z             return cls(
2025-01-24T14:30:01.2036990Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2037200Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2037360Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2037510Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2037630Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2037700Z                 lines_df=lines_df,
2025-01-24T14:30:01.2037800Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2037930Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2038200Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2038300Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2038460Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2038550Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2038640Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2038710Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2038770Z                 simulation=sim,
2025-01-24T14:30:01.2038820Z             )
2025-01-24T14:30:01.2038880Z         else: # real packets
2025-01-24T14:30:01.2039010Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2039070Z             # which got emitted
2025-01-24T14:30:01.2039160Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2039210Z >           return cls(
2025-01-24T14:30:01.2039360Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2039500Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2039560Z                     mask
2025-01-24T14:30:01.2039600Z                 ],
2025-01-24T14:30:01.2039760Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2039810Z                     mask
2025-01-24T14:30:01.2039860Z                 ],
2025-01-24T14:30:01.2040070Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2040130Z                     mask
2025-01-24T14:30:01.2040180Z                 ],
2025-01-24T14:30:01.2040310Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2040370Z                 lines_df=lines_df,
2025-01-24T14:30:01.2040520Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2040660Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2040710Z                     mask
2025-01-24T14:30:01.2040760Z                 ],
2025-01-24T14:30:01.2040860Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2040960Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2041100Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2041200Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2041280Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2041350Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2041400Z                 simulation=sim,
2025-01-24T14:30:01.2041450Z             )
2025-01-24T14:30:01.2041720Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2041730Z 
2025-01-24T14:30:01.2041860Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2042050Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl2] _
2025-01-24T14:30:01.2042050Z 
2025-01-24T14:30:01.2042210Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2042210Z 
2025-01-24T14:30:01.2042280Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2042340Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2042390Z         """
2025-01-24T14:30:01.2042500Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2042550Z     
2025-01-24T14:30:01.2042600Z         Parameters:
2025-01-24T14:30:01.2042650Z         -----------
2025-01-24T14:30:01.2042740Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2042790Z     
2025-01-24T14:30:01.2042890Z         Returns:
2025-01-24T14:30:01.2042930Z         --------
2025-01-24T14:30:01.2042990Z         An LIVPlotter instance.
2025-01-24T14:30:01.2043040Z         """
2025-01-24T14:30:01.2043140Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2043140Z 
2025-01-24T14:30:01.2043250Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2043350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2043470Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2043580Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2043750Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2043860Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2043950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2043950Z 
2025-01-24T14:30:01.2044120Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2044250Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2044300Z packets_mode = 'real'
2025-01-24T14:30:01.2044310Z 
2025-01-24T14:30:01.2044360Z     @classmethod
2025-01-24T14:30:01.2044440Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2044490Z         """
2025-01-24T14:30:01.2044640Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2044680Z     
2025-01-24T14:30:01.2044730Z         Parameters
2025-01-24T14:30:01.2044780Z         ----------
2025-01-24T14:30:01.2044900Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2045020Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2045090Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2045200Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2045250Z     
2025-01-24T14:30:01.2045290Z         Returns
2025-01-24T14:30:01.2045340Z         -------
2025-01-24T14:30:01.2045400Z         SimulationPacketData
2025-01-24T14:30:01.2045440Z         """
2025-01-24T14:30:01.2045520Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2045590Z             raise ValueError(
2025-01-24T14:30:01.2045680Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2045760Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2045810Z             )
2025-01-24T14:30:01.2045890Z         # Properties common among both packet modes
2025-01-24T14:30:01.2046030Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2046080Z             "line_id"
2025-01-24T14:30:01.2046130Z         )
2025-01-24T14:30:01.2046210Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2046300Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2046360Z         time_of_simulation = (
2025-01-24T14:30:01.2046490Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2046530Z         )
2025-01-24T14:30:01.2046580Z     
2025-01-24T14:30:01.2046630Z         spectrum = (
2025-01-24T14:30:01.2046720Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2046790Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2046880Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2046930Z         )
2025-01-24T14:30:01.2046970Z     
2025-01-24T14:30:01.2047030Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2047130Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2047180Z             return cls(
2025-01-24T14:30:01.2047310Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2047450Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2047630Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2047770Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2047890Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2047950Z                 lines_df=lines_df,
2025-01-24T14:30:01.2048050Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2048170Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2048270Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2048370Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2048520Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2048610Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2048690Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2048760Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2048820Z                 simulation=sim,
2025-01-24T14:30:01.2048860Z             )
2025-01-24T14:30:01.2048920Z         else: # real packets
2025-01-24T14:30:01.2049050Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2049110Z             # which got emitted
2025-01-24T14:30:01.2049190Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2049240Z >           return cls(
2025-01-24T14:30:01.2049370Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2049680Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2049740Z                     mask
2025-01-24T14:30:01.2049790Z                 ],
2025-01-24T14:30:01.2049940Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2049990Z                     mask
2025-01-24T14:30:01.2050040Z                 ],
2025-01-24T14:30:01.2050180Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2050230Z                     mask
2025-01-24T14:30:01.2050270Z                 ],
2025-01-24T14:30:01.2050400Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2050460Z                 lines_df=lines_df,
2025-01-24T14:30:01.2050590Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2050730Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2050780Z                     mask
2025-01-24T14:30:01.2050830Z                 ],
2025-01-24T14:30:01.2050930Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2051030Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2051180Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2051270Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2051350Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2051420Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2051480Z                 simulation=sim,
2025-01-24T14:30:01.2051520Z             )
2025-01-24T14:30:01.2051780Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2051790Z 
2025-01-24T14:30:01.2051940Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2052110Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl3] _
2025-01-24T14:30:01.2052120Z 
2025-01-24T14:30:01.2052280Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2052450Z 
2025-01-24T14:30:01.2052530Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2052590Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2052640Z         """
2025-01-24T14:30:01.2052760Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2052800Z     
2025-01-24T14:30:01.2052850Z         Parameters:
2025-01-24T14:30:01.2052910Z         -----------
2025-01-24T14:30:01.2053000Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2053040Z     
2025-01-24T14:30:01.2053090Z         Returns:
2025-01-24T14:30:01.2053140Z         --------
2025-01-24T14:30:01.2053200Z         An LIVPlotter instance.
2025-01-24T14:30:01.2053250Z         """
2025-01-24T14:30:01.2053360Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2053360Z 
2025-01-24T14:30:01.2053470Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2053570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2053690Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2053820Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2053990Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2054100Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2054190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2054190Z 
2025-01-24T14:30:01.2054370Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2054530Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2054590Z packets_mode = 'real'
2025-01-24T14:30:01.2054590Z 
2025-01-24T14:30:01.2054640Z     @classmethod
2025-01-24T14:30:01.2054720Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2054770Z         """
2025-01-24T14:30:01.2054920Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2054970Z     
2025-01-24T14:30:01.2055020Z         Parameters
2025-01-24T14:30:01.2055070Z         ----------
2025-01-24T14:30:01.2055140Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2055260Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2055320Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2055440Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2055480Z     
2025-01-24T14:30:01.2055530Z         Returns
2025-01-24T14:30:01.2055580Z         -------
2025-01-24T14:30:01.2055640Z         SimulationPacketData
2025-01-24T14:30:01.2055690Z         """
2025-01-24T14:30:01.2055770Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2055840Z             raise ValueError(
2025-01-24T14:30:01.2055920Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2056010Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2056050Z             )
2025-01-24T14:30:01.2056130Z         # Properties common among both packet modes
2025-01-24T14:30:01.2056260Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2056310Z             "line_id"
2025-01-24T14:30:01.2056360Z         )
2025-01-24T14:30:01.2056440Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2056540Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2056600Z         time_of_simulation = (
2025-01-24T14:30:01.2056720Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2056770Z         )
2025-01-24T14:30:01.2056820Z     
2025-01-24T14:30:01.2056870Z         spectrum = (
2025-01-24T14:30:01.2056970Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2057040Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2057140Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2057230Z         )
2025-01-24T14:30:01.2057280Z     
2025-01-24T14:30:01.2057350Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2057450Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2057500Z             return cls(
2025-01-24T14:30:01.2057630Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2057770Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2057910Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2058050Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2058170Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2058230Z                 lines_df=lines_df,
2025-01-24T14:30:01.2058330Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2058460Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2058560Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2058650Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2058800Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2058890Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2058970Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2059040Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2059140Z                 simulation=sim,
2025-01-24T14:30:01.2059190Z             )
2025-01-24T14:30:01.2059250Z         else: # real packets
2025-01-24T14:30:01.2059390Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2059450Z             # which got emitted
2025-01-24T14:30:01.2059540Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2059600Z >           return cls(
2025-01-24T14:30:01.2059730Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2059880Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2059930Z                     mask
2025-01-24T14:30:01.2059980Z                 ],
2025-01-24T14:30:01.2060130Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2060180Z                     mask
2025-01-24T14:30:01.2060230Z                 ],
2025-01-24T14:30:01.2060370Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2060420Z                     mask
2025-01-24T14:30:01.2060470Z                 ],
2025-01-24T14:30:01.2060600Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2060660Z                 lines_df=lines_df,
2025-01-24T14:30:01.2060800Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2060940Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2060990Z                     mask
2025-01-24T14:30:01.2061030Z                 ],
2025-01-24T14:30:01.2061130Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2061220Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2061370Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2061460Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2061540Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2061610Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2061660Z                 simulation=sim,
2025-01-24T14:30:01.2061710Z             )
2025-01-24T14:30:01.2062010Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2062020Z 
2025-01-24T14:30:01.2062150Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2062330Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _
2025-01-24T14:30:01.2062330Z 
2025-01-24T14:30:01.2062490Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2062500Z 
2025-01-24T14:30:01.2062560Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2062630Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2062670Z         """
2025-01-24T14:30:01.2062790Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2062840Z     
2025-01-24T14:30:01.2062890Z         Parameters:
2025-01-24T14:30:01.2063070Z         -----------
2025-01-24T14:30:01.2063160Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2063210Z     
2025-01-24T14:30:01.2063250Z         Returns:
2025-01-24T14:30:01.2063300Z         --------
2025-01-24T14:30:01.2063360Z         An LIVPlotter instance.
2025-01-24T14:30:01.2063410Z         """
2025-01-24T14:30:01.2063510Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2063510Z 
2025-01-24T14:30:01.2063620Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2063710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2063830Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2064020Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2064190Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2064300Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2064380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2064390Z 
2025-01-24T14:30:01.2064560Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2064680Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2064740Z packets_mode = 'real'
2025-01-24T14:30:01.2064740Z 
2025-01-24T14:30:01.2064790Z     @classmethod
2025-01-24T14:30:01.2064870Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2064910Z         """
2025-01-24T14:30:01.2065060Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2065110Z     
2025-01-24T14:30:01.2065150Z         Parameters
2025-01-24T14:30:01.2065200Z         ----------
2025-01-24T14:30:01.2065280Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2065400Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2065460Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2065570Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2065620Z     
2025-01-24T14:30:01.2065670Z         Returns
2025-01-24T14:30:01.2071220Z         -------
2025-01-24T14:30:01.2071310Z         SimulationPacketData
2025-01-24T14:30:01.2071360Z         """
2025-01-24T14:30:01.2071450Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2071510Z             raise ValueError(
2025-01-24T14:30:01.2071610Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2071690Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2071740Z             )
2025-01-24T14:30:01.2071830Z         # Properties common among both packet modes
2025-01-24T14:30:01.2071970Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2072020Z             "line_id"
2025-01-24T14:30:01.2072060Z         )
2025-01-24T14:30:01.2072140Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2072240Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2072450Z         time_of_simulation = (
2025-01-24T14:30:01.2072580Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2072620Z         )
2025-01-24T14:30:01.2072670Z     
2025-01-24T14:30:01.2072720Z         spectrum = (
2025-01-24T14:30:01.2072810Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2072870Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2072970Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2073010Z         )
2025-01-24T14:30:01.2073060Z     
2025-01-24T14:30:01.2073130Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2073230Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2073280Z             return cls(
2025-01-24T14:30:01.2073410Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2073550Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2073690Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2073840Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2073970Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2074030Z                 lines_df=lines_df,
2025-01-24T14:30:01.2074130Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2074250Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2074580Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2074730Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2074890Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2074980Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2075070Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2075150Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2075210Z                 simulation=sim,
2025-01-24T14:30:01.2075260Z             )
2025-01-24T14:30:01.2075310Z         else: # real packets
2025-01-24T14:30:01.2075450Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2075510Z             # which got emitted
2025-01-24T14:30:01.2075590Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2075650Z >           return cls(
2025-01-24T14:30:01.2075790Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2075940Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2075990Z                     mask
2025-01-24T14:30:01.2076040Z                 ],
2025-01-24T14:30:01.2076190Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2076250Z                     mask
2025-01-24T14:30:01.2076300Z                 ],
2025-01-24T14:30:01.2076430Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2076480Z                     mask
2025-01-24T14:30:01.2076530Z                 ],
2025-01-24T14:30:01.2076670Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2076730Z                 lines_df=lines_df,
2025-01-24T14:30:01.2076860Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2077020Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2077070Z                     mask
2025-01-24T14:30:01.2077110Z                 ],
2025-01-24T14:30:01.2077220Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2077310Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2077810Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2077900Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2077980Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2078050Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2078120Z                 simulation=sim,
2025-01-24T14:30:01.2078170Z             )
2025-01-24T14:30:01.2078440Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2078440Z 
2025-01-24T14:30:01.2078580Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2078770Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _
2025-01-24T14:30:01.2078770Z 
2025-01-24T14:30:01.2078940Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2078950Z 
2025-01-24T14:30:01.2079010Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2079080Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2079120Z         """
2025-01-24T14:30:01.2079250Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2079290Z     
2025-01-24T14:30:01.2079340Z         Parameters:
2025-01-24T14:30:01.2079390Z         -----------
2025-01-24T14:30:01.2079480Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2079520Z     
2025-01-24T14:30:01.2079570Z         Returns:
2025-01-24T14:30:01.2079620Z         --------
2025-01-24T14:30:01.2079730Z         An LIVPlotter instance.
2025-01-24T14:30:01.2079780Z         """
2025-01-24T14:30:01.2079890Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2079890Z 
2025-01-24T14:30:01.2080000Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2080090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2080230Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2080340Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2080520Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2080610Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2080710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2080710Z 
2025-01-24T14:30:01.2080880Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2081000Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2081060Z packets_mode = 'real'
2025-01-24T14:30:01.2081060Z 
2025-01-24T14:30:01.2081110Z     @classmethod
2025-01-24T14:30:01.2081190Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2081240Z         """
2025-01-24T14:30:01.2081400Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2081440Z     
2025-01-24T14:30:01.2081500Z         Parameters
2025-01-24T14:30:01.2081540Z         ----------
2025-01-24T14:30:01.2081610Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2081730Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2081800Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2081910Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2081950Z     
2025-01-24T14:30:01.2082000Z         Returns
2025-01-24T14:30:01.2082040Z         -------
2025-01-24T14:30:01.2082110Z         SimulationPacketData
2025-01-24T14:30:01.2082150Z         """
2025-01-24T14:30:01.2082240Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2082290Z             raise ValueError(
2025-01-24T14:30:01.2082380Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2082520Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2082570Z             )
2025-01-24T14:30:01.2082650Z         # Properties common among both packet modes
2025-01-24T14:30:01.2082780Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2082840Z             "line_id"
2025-01-24T14:30:01.2082880Z         )
2025-01-24T14:30:01.2082970Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2083060Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2083130Z         time_of_simulation = (
2025-01-24T14:30:01.2083250Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2083300Z         )
2025-01-24T14:30:01.2083350Z     
2025-01-24T14:30:01.2083400Z         spectrum = (
2025-01-24T14:30:01.2083490Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2083550Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2083640Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2083690Z         )
2025-01-24T14:30:01.2083740Z     
2025-01-24T14:30:01.2083800Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2083900Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2083950Z             return cls(
2025-01-24T14:30:01.2084080Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2084230Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2084370Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2084540Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2084670Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2084730Z                 lines_df=lines_df,
2025-01-24T14:30:01.2084850Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2084980Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2085090Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2085180Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2085340Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2085420Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2085500Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2085570Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2085630Z                 simulation=sim,
2025-01-24T14:30:01.2085680Z             )
2025-01-24T14:30:01.2085730Z         else: # real packets
2025-01-24T14:30:01.2085860Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2085920Z             # which got emitted
2025-01-24T14:30:01.2086000Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2086050Z >           return cls(
2025-01-24T14:30:01.2086200Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2086350Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2086400Z                     mask
2025-01-24T14:30:01.2086450Z                 ],
2025-01-24T14:30:01.2086600Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2086650Z                     mask
2025-01-24T14:30:01.2086700Z                 ],
2025-01-24T14:30:01.2086840Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2086880Z                     mask
2025-01-24T14:30:01.2086930Z                 ],
2025-01-24T14:30:01.2087070Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2087170Z                 lines_df=lines_df,
2025-01-24T14:30:01.2087310Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2087450Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2087500Z                     mask
2025-01-24T14:30:01.2087550Z                 ],
2025-01-24T14:30:01.2087650Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2087750Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2087890Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2087980Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2088070Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2088140Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2088190Z                 simulation=sim,
2025-01-24T14:30:01.2088240Z             )
2025-01-24T14:30:01.2088500Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2088510Z 
2025-01-24T14:30:01.2088640Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2088820Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl6] _
2025-01-24T14:30:01.2088820Z 
2025-01-24T14:30:01.2088980Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2088990Z 
2025-01-24T14:30:01.2089050Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2089160Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2089210Z         """
2025-01-24T14:30:01.2089330Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2089380Z     
2025-01-24T14:30:01.2089430Z         Parameters:
2025-01-24T14:30:01.2089470Z         -----------
2025-01-24T14:30:01.2089570Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2089610Z     
2025-01-24T14:30:01.2089660Z         Returns:
2025-01-24T14:30:01.2089700Z         --------
2025-01-24T14:30:01.2089760Z         An LIVPlotter instance.
2025-01-24T14:30:01.2089800Z         """
2025-01-24T14:30:01.2089910Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2089910Z 
2025-01-24T14:30:01.2090010Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2090110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2090240Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2090350Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2090520Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2090620Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2090720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2090720Z 
2025-01-24T14:30:01.2090890Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2091020Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2091070Z packets_mode = 'real'
2025-01-24T14:30:01.2091070Z 
2025-01-24T14:30:01.2091130Z     @classmethod
2025-01-24T14:30:01.2091210Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2091260Z         """
2025-01-24T14:30:01.2091410Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2091460Z     
2025-01-24T14:30:01.2091510Z         Parameters
2025-01-24T14:30:01.2091570Z         ----------
2025-01-24T14:30:01.2091640Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2091760Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2091830Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2091990Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2092040Z     
2025-01-24T14:30:01.2092090Z         Returns
2025-01-24T14:30:01.2092130Z         -------
2025-01-24T14:30:01.2092190Z         SimulationPacketData
2025-01-24T14:30:01.2092250Z         """
2025-01-24T14:30:01.2092330Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2092390Z             raise ValueError(
2025-01-24T14:30:01.2092480Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2092560Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2092610Z             )
2025-01-24T14:30:01.2092690Z         # Properties common among both packet modes
2025-01-24T14:30:01.2092830Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2092880Z             "line_id"
2025-01-24T14:30:01.2092930Z         )
2025-01-24T14:30:01.2093010Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2093120Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2093170Z         time_of_simulation = (
2025-01-24T14:30:01.2093300Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2093350Z         )
2025-01-24T14:30:01.2093400Z     
2025-01-24T14:30:01.2093450Z         spectrum = (
2025-01-24T14:30:01.2093540Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2093600Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2093700Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2093740Z         )
2025-01-24T14:30:01.2093790Z     
2025-01-24T14:30:01.2094090Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2094210Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2094270Z             return cls(
2025-01-24T14:30:01.2094400Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2094550Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2094690Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2094830Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2094950Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2095010Z                 lines_df=lines_df,
2025-01-24T14:30:01.2095120Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2095240Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2095350Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2095440Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2095590Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2095670Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2095750Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2095820Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2095880Z                 simulation=sim,
2025-01-24T14:30:01.2095930Z             )
2025-01-24T14:30:01.2095990Z         else: # real packets
2025-01-24T14:30:01.2096110Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2096170Z             # which got emitted
2025-01-24T14:30:01.2096250Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2096300Z >           return cls(
2025-01-24T14:30:01.2096450Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2096590Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2096640Z                     mask
2025-01-24T14:30:01.2096690Z                 ],
2025-01-24T14:30:01.2096990Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2097040Z                     mask
2025-01-24T14:30:01.2097090Z                 ],
2025-01-24T14:30:01.2097220Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2097280Z                     mask
2025-01-24T14:30:01.2097320Z                 ],
2025-01-24T14:30:01.2097450Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2097520Z                 lines_df=lines_df,
2025-01-24T14:30:01.2097650Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2097790Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2097840Z                     mask
2025-01-24T14:30:01.2097890Z                 ],
2025-01-24T14:30:01.2097990Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2098100Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2098250Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2098340Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2098420Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2098490Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2098540Z                 simulation=sim,
2025-01-24T14:30:01.2098590Z             )
2025-01-24T14:30:01.2098920Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2098930Z 
2025-01-24T14:30:01.2099060Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2099240Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _
2025-01-24T14:30:01.2099250Z 
2025-01-24T14:30:01.2099410Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2099410Z 
2025-01-24T14:30:01.2099480Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2099540Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2099580Z         """
2025-01-24T14:30:01.2099700Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2099740Z     
2025-01-24T14:30:01.2099790Z         Parameters:
2025-01-24T14:30:01.2099840Z         -----------
2025-01-24T14:30:01.2099930Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2099980Z     
2025-01-24T14:30:01.2100030Z         Returns:
2025-01-24T14:30:01.2100070Z         --------
2025-01-24T14:30:01.2100130Z         An LIVPlotter instance.
2025-01-24T14:30:01.2100180Z         """
2025-01-24T14:30:01.2100280Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2100290Z 
2025-01-24T14:30:01.2100390Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2100490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2100610Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2100730Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2100890Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2100990Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2101080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2101090Z 
2025-01-24T14:30:01.2101260Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2101390Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2101440Z packets_mode = 'real'
2025-01-24T14:30:01.2101440Z 
2025-01-24T14:30:01.2101490Z     @classmethod
2025-01-24T14:30:01.2101580Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2101670Z         """
2025-01-24T14:30:01.2101820Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2101870Z     
2025-01-24T14:30:01.2101920Z         Parameters
2025-01-24T14:30:01.2101970Z         ----------
2025-01-24T14:30:01.2102040Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2102160Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2102220Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2102330Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2102380Z     
2025-01-24T14:30:01.2102430Z         Returns
2025-01-24T14:30:01.2102480Z         -------
2025-01-24T14:30:01.2102540Z         SimulationPacketData
2025-01-24T14:30:01.2102580Z         """
2025-01-24T14:30:01.2102660Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2102720Z             raise ValueError(
2025-01-24T14:30:01.2102820Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2102900Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2102940Z             )
2025-01-24T14:30:01.2103150Z         # Properties common among both packet modes
2025-01-24T14:30:01.2103280Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2103330Z             "line_id"
2025-01-24T14:30:01.2103380Z         )
2025-01-24T14:30:01.2103460Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2103550Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2103610Z         time_of_simulation = (
2025-01-24T14:30:01.2103810Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2103860Z         )
2025-01-24T14:30:01.2103900Z     
2025-01-24T14:30:01.2103950Z         spectrum = (
2025-01-24T14:30:01.2104040Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2104110Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2104200Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2104250Z         )
2025-01-24T14:30:01.2104290Z     
2025-01-24T14:30:01.2104350Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2104460Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2104510Z             return cls(
2025-01-24T14:30:01.2104640Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2104780Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2104930Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2105070Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2105190Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2105260Z                 lines_df=lines_df,
2025-01-24T14:30:01.2105360Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2105490Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2105590Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2105680Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2105830Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2105920Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2105990Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2106070Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2106120Z                 simulation=sim,
2025-01-24T14:30:01.2106170Z             )
2025-01-24T14:30:01.2106230Z         else: # real packets
2025-01-24T14:30:01.2106360Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2106470Z             # which got emitted
2025-01-24T14:30:01.2106550Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2106610Z >           return cls(
2025-01-24T14:30:01.2106750Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2106900Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2106950Z                     mask
2025-01-24T14:30:01.2107000Z                 ],
2025-01-24T14:30:01.2107150Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2107200Z                     mask
2025-01-24T14:30:01.2107250Z                 ],
2025-01-24T14:30:01.2107390Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2107440Z                     mask
2025-01-24T14:30:01.2107480Z                 ],
2025-01-24T14:30:01.2107620Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2107680Z                 lines_df=lines_df,
2025-01-24T14:30:01.2107820Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2107960Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2108010Z                     mask
2025-01-24T14:30:01.2108060Z                 ],
2025-01-24T14:30:01.2108170Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2108260Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2108460Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2108550Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2108640Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2108710Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2108770Z                 simulation=sim,
2025-01-24T14:30:01.2108820Z             )
2025-01-24T14:30:01.2109080Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2109080Z 
2025-01-24T14:30:01.2109220Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2109370Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl0] __
2025-01-24T14:30:01.2109380Z 
2025-01-24T14:30:01.2109540Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2109550Z 
2025-01-24T14:30:01.2109610Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2109670Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2109720Z         """
2025-01-24T14:30:01.2109840Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2109880Z     
2025-01-24T14:30:01.2109930Z         Parameters:
2025-01-24T14:30:01.2109980Z         -----------
2025-01-24T14:30:01.2110090Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2110130Z     
2025-01-24T14:30:01.2110190Z         Returns:
2025-01-24T14:30:01.2110230Z         --------
2025-01-24T14:30:01.2110290Z         An LIVPlotter instance.
2025-01-24T14:30:01.2110340Z         """
2025-01-24T14:30:01.2110440Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2110440Z 
2025-01-24T14:30:01.2110550Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2110640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2110770Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2110880Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2111060Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2111160Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2111300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2111310Z 
2025-01-24T14:30:01.2111470Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2111600Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2111650Z packets_mode = 'real'
2025-01-24T14:30:01.2111660Z 
2025-01-24T14:30:01.2111710Z     @classmethod
2025-01-24T14:30:01.2111790Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2111840Z         """
2025-01-24T14:30:01.2111990Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2112040Z     
2025-01-24T14:30:01.2112090Z         Parameters
2025-01-24T14:30:01.2112140Z         ----------
2025-01-24T14:30:01.2112210Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2112330Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2112400Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2112500Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2112550Z     
2025-01-24T14:30:01.2112600Z         Returns
2025-01-24T14:30:01.2112640Z         -------
2025-01-24T14:30:01.2112700Z         SimulationPacketData
2025-01-24T14:30:01.2112750Z         """
2025-01-24T14:30:01.2112830Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2112890Z             raise ValueError(
2025-01-24T14:30:01.2112980Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2113050Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2113540Z             )
2025-01-24T14:30:01.2113650Z         # Properties common among both packet modes
2025-01-24T14:30:01.2113780Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2113830Z             "line_id"
2025-01-24T14:30:01.2113880Z         )
2025-01-24T14:30:01.2113960Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2114060Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2114120Z         time_of_simulation = (
2025-01-24T14:30:01.2114250Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2114290Z         )
2025-01-24T14:30:01.2114340Z     
2025-01-24T14:30:01.2114390Z         spectrum = (
2025-01-24T14:30:01.2114480Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2114540Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2114640Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2114680Z         )
2025-01-24T14:30:01.2114730Z     
2025-01-24T14:30:01.2114790Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2114890Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2114940Z             return cls(
2025-01-24T14:30:01.2115070Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2115210Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2115340Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2115480Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2115600Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2115660Z                 lines_df=lines_df,
2025-01-24T14:30:01.2115760Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2115890Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2115990Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2116080Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2116230Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2116480Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2116560Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2116630Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2116690Z                 simulation=sim,
2025-01-24T14:30:01.2116730Z             )
2025-01-24T14:30:01.2116790Z         else: # real packets
2025-01-24T14:30:01.2116920Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2121420Z             # which got emitted
2025-01-24T14:30:01.2121560Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2121620Z >           return cls(
2025-01-24T14:30:01.2121760Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2121910Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2121960Z                     mask
2025-01-24T14:30:01.2122000Z                 ],
2025-01-24T14:30:01.2122160Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2122200Z                     mask
2025-01-24T14:30:01.2122250Z                 ],
2025-01-24T14:30:01.2122390Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2122440Z                     mask
2025-01-24T14:30:01.2122480Z                 ],
2025-01-24T14:30:01.2122620Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2122670Z                 lines_df=lines_df,
2025-01-24T14:30:01.2123040Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2123190Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2123240Z                     mask
2025-01-24T14:30:01.2123290Z                 ],
2025-01-24T14:30:01.2123390Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2123490Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2123640Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2130410Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2130750Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2130950Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2131170Z                 simulation=sim,
2025-01-24T14:30:01.2131320Z             )
2025-01-24T14:30:01.2132070Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2132080Z 
2025-01-24T14:30:01.2132450Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2132880Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl1] __
2025-01-24T14:30:01.2132900Z 
2025-01-24T14:30:01.2133350Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2133350Z 
2025-01-24T14:30:01.2133540Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2133730Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2133870Z         """
2025-01-24T14:30:01.2134190Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2134330Z     
2025-01-24T14:30:01.2134500Z         Parameters:
2025-01-24T14:30:01.2134660Z         -----------
2025-01-24T14:30:01.2134900Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2135050Z     
2025-01-24T14:30:01.2135200Z         Returns:
2025-01-24T14:30:01.2135360Z         --------
2025-01-24T14:30:01.2135530Z         An LIVPlotter instance.
2025-01-24T14:30:01.2135680Z         """
2025-01-24T14:30:01.2136060Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2136070Z 
2025-01-24T14:30:01.2136360Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2137370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2137520Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2137650Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2137830Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2137940Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2138030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2138040Z 
2025-01-24T14:30:01.2138230Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2138350Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2138410Z packets_mode = 'real'
2025-01-24T14:30:01.2138420Z 
2025-01-24T14:30:01.2138470Z     @classmethod
2025-01-24T14:30:01.2138560Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2138600Z         """
2025-01-24T14:30:01.2138760Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2138810Z     
2025-01-24T14:30:01.2138850Z         Parameters
2025-01-24T14:30:01.2138910Z         ----------
2025-01-24T14:30:01.2138980Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2139100Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2139160Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2139430Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2139670Z     
2025-01-24T14:30:01.2139860Z         Returns
2025-01-24T14:30:01.2139910Z         -------
2025-01-24T14:30:01.2139980Z         SimulationPacketData
2025-01-24T14:30:01.2140030Z         """
2025-01-24T14:30:01.2140110Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2140170Z             raise ValueError(
2025-01-24T14:30:01.2140270Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2140360Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2140400Z             )
2025-01-24T14:30:01.2140490Z         # Properties common among both packet modes
2025-01-24T14:30:01.2140610Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2140660Z             "line_id"
2025-01-24T14:30:01.2140710Z         )
2025-01-24T14:30:01.2140790Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2141030Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2142310Z         time_of_simulation = (
2025-01-24T14:30:01.2142680Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2142830Z         )
2025-01-24T14:30:01.2142970Z     
2025-01-24T14:30:01.2143290Z         spectrum = (
2025-01-24T14:30:01.2143540Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2143750Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2144010Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2144160Z         )
2025-01-24T14:30:01.2144300Z     
2025-01-24T14:30:01.2144620Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2147780Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2147930Z             return cls(
2025-01-24T14:30:01.2148280Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2148650Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2149040Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2149400Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2149720Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2150270Z                 lines_df=lines_df,
2025-01-24T14:30:01.2150540Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2150880Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2151150Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2151390Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2151920Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2152160Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2152570Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2152770Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2152840Z                 simulation=sim,
2025-01-24T14:30:01.2152890Z             )
2025-01-24T14:30:01.2152950Z         else: # real packets
2025-01-24T14:30:01.2153100Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2153170Z             # which got emitted
2025-01-24T14:30:01.2153260Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2153310Z >           return cls(
2025-01-24T14:30:01.2153450Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2153610Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2153660Z                     mask
2025-01-24T14:30:01.2153710Z                 ],
2025-01-24T14:30:01.2153860Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2154210Z                     mask
2025-01-24T14:30:01.2154260Z                 ],
2025-01-24T14:30:01.2154400Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2154460Z                     mask
2025-01-24T14:30:01.2154500Z                 ],
2025-01-24T14:30:01.2154640Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2154700Z                 lines_df=lines_df,
2025-01-24T14:30:01.2154840Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2154970Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2155030Z                     mask
2025-01-24T14:30:01.2155070Z                 ],
2025-01-24T14:30:01.2155180Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2155270Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2155420Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2155510Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2155600Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2155660Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2155720Z                 simulation=sim,
2025-01-24T14:30:01.2155770Z             )
2025-01-24T14:30:01.2156040Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2156050Z 
2025-01-24T14:30:01.2156180Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2156350Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl2] __
2025-01-24T14:30:01.2156350Z 
2025-01-24T14:30:01.2156520Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2156520Z 
2025-01-24T14:30:01.2156590Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2156650Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2156700Z         """
2025-01-24T14:30:01.2156820Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2156870Z     
2025-01-24T14:30:01.2156930Z         Parameters:
2025-01-24T14:30:01.2157080Z         -----------
2025-01-24T14:30:01.2157170Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2157220Z     
2025-01-24T14:30:01.2157260Z         Returns:
2025-01-24T14:30:01.2157310Z         --------
2025-01-24T14:30:01.2157370Z         An LIVPlotter instance.
2025-01-24T14:30:01.2157420Z         """
2025-01-24T14:30:01.2157520Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2157520Z 
2025-01-24T14:30:01.2157630Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2157720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2157850Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2157960Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2158140Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2158240Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2158330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2158330Z 
2025-01-24T14:30:01.2158510Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2158630Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2158680Z packets_mode = 'real'
2025-01-24T14:30:01.2158690Z 
2025-01-24T14:30:01.2158730Z     @classmethod
2025-01-24T14:30:01.2158820Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2158860Z         """
2025-01-24T14:30:01.2159240Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2159290Z     
2025-01-24T14:30:01.2159340Z         Parameters
2025-01-24T14:30:01.2159390Z         ----------
2025-01-24T14:30:01.2159470Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2159580Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2159650Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2159770Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2159810Z     
2025-01-24T14:30:01.2159860Z         Returns
2025-01-24T14:30:01.2159910Z         -------
2025-01-24T14:30:01.2159970Z         SimulationPacketData
2025-01-24T14:30:01.2160010Z         """
2025-01-24T14:30:01.2160090Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2160150Z             raise ValueError(
2025-01-24T14:30:01.2160240Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2160320Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2160370Z             )
2025-01-24T14:30:01.2160450Z         # Properties common among both packet modes
2025-01-24T14:30:01.2160580Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2160630Z             "line_id"
2025-01-24T14:30:01.2160680Z         )
2025-01-24T14:30:01.2160760Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2160850Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2160910Z         time_of_simulation = (
2025-01-24T14:30:01.2161030Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2161080Z         )
2025-01-24T14:30:01.2161120Z     
2025-01-24T14:30:01.2161170Z         spectrum = (
2025-01-24T14:30:01.2161260Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2161320Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2161410Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2161460Z         )
2025-01-24T14:30:01.2161510Z     
2025-01-24T14:30:01.2161580Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2161670Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2161730Z             return cls(
2025-01-24T14:30:01.2161860Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2162280Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2162430Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2162560Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2162680Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2162740Z                 lines_df=lines_df,
2025-01-24T14:30:01.2162850Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2162970Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2163080Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2163170Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2163320Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2163410Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2163490Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2163560Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2163620Z                 simulation=sim,
2025-01-24T14:30:01.2163660Z             )
2025-01-24T14:30:01.2163720Z         else: # real packets
2025-01-24T14:30:01.2163850Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2163900Z             # which got emitted
2025-01-24T14:30:01.2163990Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2164110Z >           return cls(
2025-01-24T14:30:01.2164260Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2164410Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2164460Z                     mask
2025-01-24T14:30:01.2164510Z                 ],
2025-01-24T14:30:01.2164660Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2164720Z                     mask
2025-01-24T14:30:01.2164760Z                 ],
2025-01-24T14:30:01.2164900Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2164940Z                     mask
2025-01-24T14:30:01.2165000Z                 ],
2025-01-24T14:30:01.2165130Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2165190Z                 lines_df=lines_df,
2025-01-24T14:30:01.2165320Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2165460Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2165500Z                     mask
2025-01-24T14:30:01.2165560Z                 ],
2025-01-24T14:30:01.2165660Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2165750Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2165900Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2165980Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2166070Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2166140Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2166190Z                 simulation=sim,
2025-01-24T14:30:01.2166240Z             )
2025-01-24T14:30:01.2166500Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2166510Z 
2025-01-24T14:30:01.2166640Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2166810Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl3] __
2025-01-24T14:30:01.2166860Z 
2025-01-24T14:30:01.2167030Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2167030Z 
2025-01-24T14:30:01.2167090Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2167160Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2167200Z         """
2025-01-24T14:30:01.2167320Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2167370Z     
2025-01-24T14:30:01.2167420Z         Parameters:
2025-01-24T14:30:01.2167470Z         -----------
2025-01-24T14:30:01.2167560Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2167600Z     
2025-01-24T14:30:01.2167660Z         Returns:
2025-01-24T14:30:01.2167700Z         --------
2025-01-24T14:30:01.2167770Z         An LIVPlotter instance.
2025-01-24T14:30:01.2167810Z         """
2025-01-24T14:30:01.2167910Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2167920Z 
2025-01-24T14:30:01.2168030Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2168120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2168250Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2168360Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2168530Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2168640Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2168730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2168730Z 
2025-01-24T14:30:01.2168940Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2169070Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2169130Z packets_mode = 'real'
2025-01-24T14:30:01.2169130Z 
2025-01-24T14:30:01.2169180Z     @classmethod
2025-01-24T14:30:01.2169270Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2169310Z         """
2025-01-24T14:30:01.2169470Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2169510Z     
2025-01-24T14:30:01.2169560Z         Parameters
2025-01-24T14:30:01.2169610Z         ----------
2025-01-24T14:30:01.2169690Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2169800Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2169870Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2169980Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2170030Z     
2025-01-24T14:30:01.2170070Z         Returns
2025-01-24T14:30:01.2170120Z         -------
2025-01-24T14:30:01.2170180Z         SimulationPacketData
2025-01-24T14:30:01.2170230Z         """
2025-01-24T14:30:01.2170310Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2170370Z             raise ValueError(
2025-01-24T14:30:01.2170470Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2170540Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2170590Z             )
2025-01-24T14:30:01.2170680Z         # Properties common among both packet modes
2025-01-24T14:30:01.2170800Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2170850Z             "line_id"
2025-01-24T14:30:01.2170900Z         )
2025-01-24T14:30:01.2170980Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2171080Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2171130Z         time_of_simulation = (
2025-01-24T14:30:01.2171260Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2171310Z         )
2025-01-24T14:30:01.2171350Z     
2025-01-24T14:30:01.2171400Z         spectrum = (
2025-01-24T14:30:01.2171490Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2171610Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2171700Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2171740Z         )
2025-01-24T14:30:01.2171790Z     
2025-01-24T14:30:01.2171850Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2171950Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2172000Z             return cls(
2025-01-24T14:30:01.2172120Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2172260Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2172410Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2172550Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2172670Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2172730Z                 lines_df=lines_df,
2025-01-24T14:30:01.2172830Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2172960Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2173060Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2173150Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2173300Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2173380Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2173520Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2173590Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2173660Z                 simulation=sim,
2025-01-24T14:30:01.2173710Z             )
2025-01-24T14:30:01.2173770Z         else: # real packets
2025-01-24T14:30:01.2173900Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2173960Z             # which got emitted
2025-01-24T14:30:01.2174040Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2174090Z >           return cls(
2025-01-24T14:30:01.2174230Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2174380Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2174430Z                     mask
2025-01-24T14:30:01.2174480Z                 ],
2025-01-24T14:30:01.2174630Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2174680Z                     mask
2025-01-24T14:30:01.2174730Z                 ],
2025-01-24T14:30:01.2174870Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2174920Z                     mask
2025-01-24T14:30:01.2174960Z                 ],
2025-01-24T14:30:01.2175100Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2175160Z                 lines_df=lines_df,
2025-01-24T14:30:01.2175290Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2175430Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2175480Z                     mask
2025-01-24T14:30:01.2175530Z                 ],
2025-01-24T14:30:01.2175630Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2175720Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2175870Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2175960Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2176040Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2176110Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2176210Z                 simulation=sim,
2025-01-24T14:30:01.2176260Z             )
2025-01-24T14:30:01.2176530Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2176530Z 
2025-01-24T14:30:01.2176660Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2176830Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl4] __
2025-01-24T14:30:01.2176830Z 
2025-01-24T14:30:01.2176990Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2176990Z 
2025-01-24T14:30:01.2177060Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2177130Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2177180Z         """
2025-01-24T14:30:01.2177300Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2177340Z     
2025-01-24T14:30:01.2177400Z         Parameters:
2025-01-24T14:30:01.2177450Z         -----------
2025-01-24T14:30:01.2177530Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2177580Z     
2025-01-24T14:30:01.2177620Z         Returns:
2025-01-24T14:30:01.2177670Z         --------
2025-01-24T14:30:01.2177730Z         An LIVPlotter instance.
2025-01-24T14:30:01.2177770Z         """
2025-01-24T14:30:01.2177880Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2177880Z 
2025-01-24T14:30:01.2177980Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2178080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2178460Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2178630Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2178800Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2178910Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2179000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2179010Z 
2025-01-24T14:30:01.2179180Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2179300Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2179360Z packets_mode = 'real'
2025-01-24T14:30:01.2179360Z 
2025-01-24T14:30:01.2179420Z     @classmethod
2025-01-24T14:30:01.2179500Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2179540Z         """
2025-01-24T14:30:01.2179700Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2179750Z     
2025-01-24T14:30:01.2179800Z         Parameters
2025-01-24T14:30:01.2179850Z         ----------
2025-01-24T14:30:01.2179920Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2180040Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2180110Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2180220Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2180270Z     
2025-01-24T14:30:01.2180320Z         Returns
2025-01-24T14:30:01.2180360Z         -------
2025-01-24T14:30:01.2180420Z         SimulationPacketData
2025-01-24T14:30:01.2180470Z         """
2025-01-24T14:30:01.2180550Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2180600Z             raise ValueError(
2025-01-24T14:30:01.2180690Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2180780Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2180830Z             )
2025-01-24T14:30:01.2180910Z         # Properties common among both packet modes
2025-01-24T14:30:01.2181040Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2181090Z             "line_id"
2025-01-24T14:30:01.2181440Z         )
2025-01-24T14:30:01.2181530Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2181630Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2181690Z         time_of_simulation = (
2025-01-24T14:30:01.2181820Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2181860Z         )
2025-01-24T14:30:01.2181920Z     
2025-01-24T14:30:01.2181970Z         spectrum = (
2025-01-24T14:30:01.2182070Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2182130Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2182230Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2182280Z         )
2025-01-24T14:30:01.2182330Z     
2025-01-24T14:30:01.2182400Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2182500Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2182550Z             return cls(
2025-01-24T14:30:01.2182690Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2182820Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2182970Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2183110Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2183370Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2183430Z                 lines_df=lines_df,
2025-01-24T14:30:01.2183540Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2183770Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2183880Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2183970Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2184130Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2184220Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2184300Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2184370Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2184430Z                 simulation=sim,
2025-01-24T14:30:01.2184470Z             )
2025-01-24T14:30:01.2184530Z         else: # real packets
2025-01-24T14:30:01.2184660Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2184720Z             # which got emitted
2025-01-24T14:30:01.2184810Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2184860Z >           return cls(
2025-01-24T14:30:01.2185000Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2185150Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2185200Z                     mask
2025-01-24T14:30:01.2185250Z                 ],
2025-01-24T14:30:01.2185410Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2185460Z                     mask
2025-01-24T14:30:01.2185500Z                 ],
2025-01-24T14:30:01.2185640Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2185700Z                     mask
2025-01-24T14:30:01.2185740Z                 ],
2025-01-24T14:30:01.2185880Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2185940Z                 lines_df=lines_df,
2025-01-24T14:30:01.2186080Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2186220Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2186280Z                     mask
2025-01-24T14:30:01.2186370Z                 ],
2025-01-24T14:30:01.2186480Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2186570Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2186730Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2186810Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2186890Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2186970Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2187020Z                 simulation=sim,
2025-01-24T14:30:01.2187070Z             )
2025-01-24T14:30:01.2187330Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2187340Z 
2025-01-24T14:30:01.2187480Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2187640Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl5] __
2025-01-24T14:30:01.2187650Z 
2025-01-24T14:30:01.2187810Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2187820Z 
2025-01-24T14:30:01.2187880Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2187950Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2188000Z         """
2025-01-24T14:30:01.2188120Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2188170Z     
2025-01-24T14:30:01.2188220Z         Parameters:
2025-01-24T14:30:01.2188270Z         -----------
2025-01-24T14:30:01.2188360Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2188460Z     
2025-01-24T14:30:01.2188510Z         Returns:
2025-01-24T14:30:01.2188570Z         --------
2025-01-24T14:30:01.2188630Z         An LIVPlotter instance.
2025-01-24T14:30:01.2188680Z         """
2025-01-24T14:30:01.2188780Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2188790Z 
2025-01-24T14:30:01.2188900Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2193780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2193930Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2194050Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2194220Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2194320Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2194420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2194430Z 
2025-01-24T14:30:01.2194610Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2194740Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2194790Z packets_mode = 'real'
2025-01-24T14:30:01.2194790Z 
2025-01-24T14:30:01.2194850Z     @classmethod
2025-01-24T14:30:01.2194930Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2194980Z         """
2025-01-24T14:30:01.2195140Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2195180Z     
2025-01-24T14:30:01.2195240Z         Parameters
2025-01-24T14:30:01.2195280Z         ----------
2025-01-24T14:30:01.2195360Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2195470Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2195550Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2195660Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2195710Z     
2025-01-24T14:30:01.2195750Z         Returns
2025-01-24T14:30:01.2195800Z         -------
2025-01-24T14:30:01.2195860Z         SimulationPacketData
2025-01-24T14:30:01.2195910Z         """
2025-01-24T14:30:01.2195990Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2196280Z             raise ValueError(
2025-01-24T14:30:01.2196380Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2196460Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2196510Z             )
2025-01-24T14:30:01.2196590Z         # Properties common among both packet modes
2025-01-24T14:30:01.2196720Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2196770Z             "line_id"
2025-01-24T14:30:01.2196810Z         )
2025-01-24T14:30:01.2196900Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2196990Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2197060Z         time_of_simulation = (
2025-01-24T14:30:01.2197180Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2197220Z         )
2025-01-24T14:30:01.2197270Z     
2025-01-24T14:30:01.2197330Z         spectrum = (
2025-01-24T14:30:01.2197420Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2197480Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2197580Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2197620Z         )
2025-01-24T14:30:01.2197670Z     
2025-01-24T14:30:01.2197730Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2197820Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2197870Z             return cls(
2025-01-24T14:30:01.2198000Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2198200Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2198340Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2198480Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2198600Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2198670Z                 lines_df=lines_df,
2025-01-24T14:30:01.2198770Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2198900Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2199000Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2199100Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2199250Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2199330Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2199420Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2199490Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2199550Z                 simulation=sim,
2025-01-24T14:30:01.2199590Z             )
2025-01-24T14:30:01.2199650Z         else: # real packets
2025-01-24T14:30:01.2199780Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2199840Z             # which got emitted
2025-01-24T14:30:01.2199920Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2199980Z >           return cls(
2025-01-24T14:30:01.2200120Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2200270Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2200310Z                     mask
2025-01-24T14:30:01.2200360Z                 ],
2025-01-24T14:30:01.2200520Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2200560Z                     mask
2025-01-24T14:30:01.2200620Z                 ],
2025-01-24T14:30:01.2200750Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2200800Z                     mask
2025-01-24T14:30:01.2200900Z                 ],
2025-01-24T14:30:01.2201040Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2201100Z                 lines_df=lines_df,
2025-01-24T14:30:01.2201240Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2201380Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2201430Z                     mask
2025-01-24T14:30:01.2201480Z                 ],
2025-01-24T14:30:01.2201590Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2201680Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2201830Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2201930Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2202010Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2202080Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2202140Z                 simulation=sim,
2025-01-24T14:30:01.2202190Z             )
2025-01-24T14:30:01.2202460Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2202460Z 
2025-01-24T14:30:01.2202600Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2202760Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl6] __
2025-01-24T14:30:01.2202770Z 
2025-01-24T14:30:01.2202920Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2203160Z 
2025-01-24T14:30:01.2203240Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2203310Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2203360Z         """
2025-01-24T14:30:01.2203480Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2203530Z     
2025-01-24T14:30:01.2203580Z         Parameters:
2025-01-24T14:30:01.2203630Z         -----------
2025-01-24T14:30:01.2203720Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2203770Z     
2025-01-24T14:30:01.2203820Z         Returns:
2025-01-24T14:30:01.2203870Z         --------
2025-01-24T14:30:01.2203920Z         An LIVPlotter instance.
2025-01-24T14:30:01.2203970Z         """
2025-01-24T14:30:01.2204080Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2204080Z 
2025-01-24T14:30:01.2204190Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2204290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2204410Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2204530Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2204700Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2204810Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2204900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2204900Z 
2025-01-24T14:30:01.2205070Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2205200Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2205260Z packets_mode = 'real'
2025-01-24T14:30:01.2205260Z 
2025-01-24T14:30:01.2205320Z     @classmethod
2025-01-24T14:30:01.2205400Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2205440Z         """
2025-01-24T14:30:01.2205600Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2205650Z     
2025-01-24T14:30:01.2205700Z         Parameters
2025-01-24T14:30:01.2205740Z         ----------
2025-01-24T14:30:01.2205820Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2206120Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2206180Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2206300Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2206340Z     
2025-01-24T14:30:01.2206390Z         Returns
2025-01-24T14:30:01.2206430Z         -------
2025-01-24T14:30:01.2206490Z         SimulationPacketData
2025-01-24T14:30:01.2206550Z         """
2025-01-24T14:30:01.2206630Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2206690Z             raise ValueError(
2025-01-24T14:30:01.2206780Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2206870Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2206920Z             )
2025-01-24T14:30:01.2207010Z         # Properties common among both packet modes
2025-01-24T14:30:01.2207140Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2207190Z             "line_id"
2025-01-24T14:30:01.2207240Z         )
2025-01-24T14:30:01.2207320Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2207420Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2207480Z         time_of_simulation = (
2025-01-24T14:30:01.2207600Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2207650Z         )
2025-01-24T14:30:01.2207700Z     
2025-01-24T14:30:01.2207750Z         spectrum = (
2025-01-24T14:30:01.2207840Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2207900Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2208050Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2208100Z         )
2025-01-24T14:30:01.2208150Z     
2025-01-24T14:30:01.2208210Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2208310Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2208360Z             return cls(
2025-01-24T14:30:01.2208500Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2208640Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2208790Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2208930Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2209050Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2209110Z                 lines_df=lines_df,
2025-01-24T14:30:01.2209210Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2209340Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2209440Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2209530Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2209680Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2209770Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2209850Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2209920Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2209980Z                 simulation=sim,
2025-01-24T14:30:01.2210030Z             )
2025-01-24T14:30:01.2210080Z         else: # real packets
2025-01-24T14:30:01.2210210Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2210270Z             # which got emitted
2025-01-24T14:30:01.2210360Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2210410Z >           return cls(
2025-01-24T14:30:01.2210550Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2210700Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2210790Z                     mask
2025-01-24T14:30:01.2210850Z                 ],
2025-01-24T14:30:01.2211000Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2211050Z                     mask
2025-01-24T14:30:01.2211090Z                 ],
2025-01-24T14:30:01.2211230Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2211290Z                     mask
2025-01-24T14:30:01.2211330Z                 ],
2025-01-24T14:30:01.2211470Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2211530Z                 lines_df=lines_df,
2025-01-24T14:30:01.2211670Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2211810Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2211870Z                     mask
2025-01-24T14:30:01.2211920Z                 ],
2025-01-24T14:30:01.2212030Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2212120Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2212280Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2212360Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2212450Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2212520Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2212580Z                 simulation=sim,
2025-01-24T14:30:01.2212630Z             )
2025-01-24T14:30:01.2212940Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2212940Z 
2025-01-24T14:30:01.2213090Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2213260Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl7] __
2025-01-24T14:30:01.2213260Z 
2025-01-24T14:30:01.2213430Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2213430Z 
2025-01-24T14:30:01.2213500Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2213570Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2213620Z         """
2025-01-24T14:30:01.2213740Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2213790Z     
2025-01-24T14:30:01.2213840Z         Parameters:
2025-01-24T14:30:01.2213890Z         -----------
2025-01-24T14:30:01.2213990Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2214030Z     
2025-01-24T14:30:01.2214080Z         Returns:
2025-01-24T14:30:01.2214130Z         --------
2025-01-24T14:30:01.2214190Z         An LIVPlotter instance.
2025-01-24T14:30:01.2214240Z         """
2025-01-24T14:30:01.2214370Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2214380Z 
2025-01-24T14:30:01.2214490Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2214580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2214720Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2214840Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2215010Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2215120Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2215210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2215210Z 
2025-01-24T14:30:01.2215390Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2215520Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2215580Z packets_mode = 'real'
2025-01-24T14:30:01.2215640Z 
2025-01-24T14:30:01.2215690Z     @classmethod
2025-01-24T14:30:01.2215780Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2215820Z         """
2025-01-24T14:30:01.2215980Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2216030Z     
2025-01-24T14:30:01.2216080Z         Parameters
2025-01-24T14:30:01.2216120Z         ----------
2025-01-24T14:30:01.2216200Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2216320Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2216390Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2216510Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2216560Z     
2025-01-24T14:30:01.2216610Z         Returns
2025-01-24T14:30:01.2216660Z         -------
2025-01-24T14:30:01.2216720Z         SimulationPacketData
2025-01-24T14:30:01.2216770Z         """
2025-01-24T14:30:01.2216860Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2216920Z             raise ValueError(
2025-01-24T14:30:01.2217010Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2217100Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2217140Z             )
2025-01-24T14:30:01.2217230Z         # Properties common among both packet modes
2025-01-24T14:30:01.2217360Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2217410Z             "line_id"
2025-01-24T14:30:01.2217450Z         )
2025-01-24T14:30:01.2217530Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2217680Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2217740Z         time_of_simulation = (
2025-01-24T14:30:01.2217870Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2217920Z         )
2025-01-24T14:30:01.2217960Z     
2025-01-24T14:30:01.2218020Z         spectrum = (
2025-01-24T14:30:01.2218110Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2218180Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2218270Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2218320Z         )
2025-01-24T14:30:01.2218370Z     
2025-01-24T14:30:01.2218440Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2218540Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2218590Z             return cls(
2025-01-24T14:30:01.2218720Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2218860Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2219020Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2219150Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2219290Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2219350Z                 lines_df=lines_df,
2025-01-24T14:30:01.2219450Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2219580Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2219690Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2219780Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2219930Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2220030Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2220110Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2220190Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2220240Z                 simulation=sim,
2025-01-24T14:30:01.2220290Z             )
2025-01-24T14:30:01.2220400Z         else: # real packets
2025-01-24T14:30:01.2220540Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2220590Z             # which got emitted
2025-01-24T14:30:01.2220680Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2220740Z >           return cls(
2025-01-24T14:30:01.2220880Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2221030Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2221080Z                     mask
2025-01-24T14:30:01.2221140Z                 ],
2025-01-24T14:30:01.2221290Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2221350Z                     mask
2025-01-24T14:30:01.2221390Z                 ],
2025-01-24T14:30:01.2221530Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2221590Z                     mask
2025-01-24T14:30:01.2221640Z                 ],
2025-01-24T14:30:01.2221780Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2221830Z                 lines_df=lines_df,
2025-01-24T14:30:01.2221970Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2222120Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2222180Z                     mask
2025-01-24T14:30:01.2222220Z                 ],
2025-01-24T14:30:01.2222330Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2222970Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2223170Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2223260Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2223490Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2223570Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2223640Z                 simulation=sim,
2025-01-24T14:30:01.2223680Z             )
2025-01-24T14:30:01.2223950Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2223950Z 
2025-01-24T14:30:01.2224090Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2224270Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _
2025-01-24T14:30:01.2224270Z 
2025-01-24T14:30:01.2224450Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2224450Z 
2025-01-24T14:30:01.2224520Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2224580Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2224630Z         """
2025-01-24T14:30:01.2224750Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2224800Z     
2025-01-24T14:30:01.2224850Z         Parameters:
2025-01-24T14:30:01.2224900Z         -----------
2025-01-24T14:30:01.2224990Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2225040Z     
2025-01-24T14:30:01.2225090Z         Returns:
2025-01-24T14:30:01.2225140Z         --------
2025-01-24T14:30:01.2225200Z         An LIVPlotter instance.
2025-01-24T14:30:01.2225250Z         """
2025-01-24T14:30:01.2225360Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2225360Z 
2025-01-24T14:30:01.2225470Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2225570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2225690Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2225810Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2225980Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2226440Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2226540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2226540Z 
2025-01-24T14:30:01.2226710Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2226840Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2226890Z packets_mode = 'real'
2025-01-24T14:30:01.2226890Z 
2025-01-24T14:30:01.2226940Z     @classmethod
2025-01-24T14:30:01.2227030Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2227070Z         """
2025-01-24T14:30:01.2227240Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2227280Z     
2025-01-24T14:30:01.2227330Z         Parameters
2025-01-24T14:30:01.2227380Z         ----------
2025-01-24T14:30:01.2227450Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2227570Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2227640Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2227740Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2227790Z     
2025-01-24T14:30:01.2227830Z         Returns
2025-01-24T14:30:01.2227880Z         -------
2025-01-24T14:30:01.2227940Z         SimulationPacketData
2025-01-24T14:30:01.2227990Z         """
2025-01-24T14:30:01.2228060Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2228120Z             raise ValueError(
2025-01-24T14:30:01.2228270Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2228350Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2228400Z             )
2025-01-24T14:30:01.2228480Z         # Properties common among both packet modes
2025-01-24T14:30:01.2228610Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2228660Z             "line_id"
2025-01-24T14:30:01.2228710Z         )
2025-01-24T14:30:01.2228790Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2228890Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2228950Z         time_of_simulation = (
2025-01-24T14:30:01.2229080Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2229120Z         )
2025-01-24T14:30:01.2229170Z     
2025-01-24T14:30:01.2229220Z         spectrum = (
2025-01-24T14:30:01.2229310Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2229380Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2229470Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2229530Z         )
2025-01-24T14:30:01.2229570Z     
2025-01-24T14:30:01.2229630Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2229730Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2229790Z             return cls(
2025-01-24T14:30:01.2229910Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2230050Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2230190Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2230340Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2230460Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2230520Z                 lines_df=lines_df,
2025-01-24T14:30:01.2230620Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2230750Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2230860Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2230940Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2231140Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2231230Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2231320Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2231390Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2231440Z                 simulation=sim,
2025-01-24T14:30:01.2231490Z             )
2025-01-24T14:30:01.2231550Z         else: # real packets
2025-01-24T14:30:01.2231680Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2231740Z             # which got emitted
2025-01-24T14:30:01.2231830Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2231880Z >           return cls(
2025-01-24T14:30:01.2232030Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2232170Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2232230Z                     mask
2025-01-24T14:30:01.2232280Z                 ],
2025-01-24T14:30:01.2232430Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2232480Z                     mask
2025-01-24T14:30:01.2232530Z                 ],
2025-01-24T14:30:01.2232670Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2232730Z                     mask
2025-01-24T14:30:01.2232770Z                 ],
2025-01-24T14:30:01.2232950Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2233020Z                 lines_df=lines_df,
2025-01-24T14:30:01.2233160Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2233300Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2233350Z                     mask
2025-01-24T14:30:01.2233400Z                 ],
2025-01-24T14:30:01.2233500Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2233600Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2233740Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2233840Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2233920Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2234030Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2234090Z                 simulation=sim,
2025-01-24T14:30:01.2234140Z             )
2025-01-24T14:30:01.2234410Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2234410Z 
2025-01-24T14:30:01.2234540Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2234730Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _
2025-01-24T14:30:01.2234730Z 
2025-01-24T14:30:01.2234890Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2234900Z 
2025-01-24T14:30:01.2234970Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2235030Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2235080Z         """
2025-01-24T14:30:01.2235190Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2235240Z     
2025-01-24T14:30:01.2235290Z         Parameters:
2025-01-24T14:30:01.2235340Z         -----------
2025-01-24T14:30:01.2235440Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2235480Z     
2025-01-24T14:30:01.2235530Z         Returns:
2025-01-24T14:30:01.2235580Z         --------
2025-01-24T14:30:01.2235640Z         An LIVPlotter instance.
2025-01-24T14:30:01.2235690Z         """
2025-01-24T14:30:01.2235880Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2235880Z 
2025-01-24T14:30:01.2235980Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2236080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2236200Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2236320Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2236480Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2236580Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2236690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2236690Z 
2025-01-24T14:30:01.2236860Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2236990Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2237040Z packets_mode = 'real'
2025-01-24T14:30:01.2237050Z 
2025-01-24T14:30:01.2237100Z     @classmethod
2025-01-24T14:30:01.2237180Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2237240Z         """
2025-01-24T14:30:01.2237390Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2237430Z     
2025-01-24T14:30:01.2237480Z         Parameters
2025-01-24T14:30:01.2237530Z         ----------
2025-01-24T14:30:01.2237600Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2237720Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2237840Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2237950Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2238000Z     
2025-01-24T14:30:01.2238050Z         Returns
2025-01-24T14:30:01.2238090Z         -------
2025-01-24T14:30:01.2238150Z         SimulationPacketData
2025-01-24T14:30:01.2238200Z         """
2025-01-24T14:30:01.2238280Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2238340Z             raise ValueError(
2025-01-24T14:30:01.2238430Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2238510Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2238550Z             )
2025-01-24T14:30:01.2238630Z         # Properties common among both packet modes
2025-01-24T14:30:01.2238760Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2238820Z             "line_id"
2025-01-24T14:30:01.2238860Z         )
2025-01-24T14:30:01.2238940Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2239040Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2239100Z         time_of_simulation = (
2025-01-24T14:30:01.2239220Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2239260Z         )
2025-01-24T14:30:01.2239310Z     
2025-01-24T14:30:01.2239360Z         spectrum = (
2025-01-24T14:30:01.2239450Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2239510Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2239600Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2239650Z         )
2025-01-24T14:30:01.2244330Z     
2025-01-24T14:30:01.2244460Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2244560Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2244610Z             return cls(
2025-01-24T14:30:01.2244740Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2244890Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2245040Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2245170Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2245530Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2245590Z                 lines_df=lines_df,
2025-01-24T14:30:01.2245700Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2245820Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2245930Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2246010Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2246160Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2246250Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2246330Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2246410Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2246470Z                 simulation=sim,
2025-01-24T14:30:01.2246520Z             )
2025-01-24T14:30:01.2246580Z         else: # real packets
2025-01-24T14:30:01.2246720Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2246780Z             # which got emitted
2025-01-24T14:30:01.2246870Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2246920Z >           return cls(
2025-01-24T14:30:01.2247070Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2247220Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2247270Z                     mask
2025-01-24T14:30:01.2250950Z                 ],
2025-01-24T14:30:01.2251650Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2251810Z                     mask
2025-01-24T14:30:01.2251970Z                 ],
2025-01-24T14:30:01.2252340Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2252510Z                     mask
2025-01-24T14:30:01.2252650Z                 ],
2025-01-24T14:30:01.2253110Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2253280Z                 lines_df=lines_df,
2025-01-24T14:30:01.2255180Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2255620Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2255780Z                     mask
2025-01-24T14:30:01.2255940Z                 ],
2025-01-24T14:30:01.2256240Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2256490Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2256900Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2257130Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2257370Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2257570Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2257750Z                 simulation=sim,
2025-01-24T14:30:01.2257900Z             )
2025-01-24T14:30:01.2258630Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2258640Z 
2025-01-24T14:30:01.2259000Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2259480Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply2] _
2025-01-24T14:30:01.2259490Z 
2025-01-24T14:30:01.2259930Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2259930Z 
2025-01-24T14:30:01.2260120Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2260320Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2260460Z         """
2025-01-24T14:30:01.2261440Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2261580Z     
2025-01-24T14:30:01.2261750Z         Parameters:
2025-01-24T14:30:01.2261900Z         -----------
2025-01-24T14:30:01.2262150Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2262290Z     
2025-01-24T14:30:01.2262440Z         Returns:
2025-01-24T14:30:01.2262590Z         --------
2025-01-24T14:30:01.2262770Z         An LIVPlotter instance.
2025-01-24T14:30:01.2262920Z         """
2025-01-24T14:30:01.2263200Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2263210Z 
2025-01-24T14:30:01.2263720Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2263980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2264320Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2264650Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2265130Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2265400Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2265640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2265650Z 
2025-01-24T14:30:01.2266100Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2266440Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2266610Z packets_mode = 'real'
2025-01-24T14:30:01.2266610Z 
2025-01-24T14:30:01.2266770Z     @classmethod
2025-01-24T14:30:01.2267160Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2267330Z         """
2025-01-24T14:30:01.2267760Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2267900Z     
2025-01-24T14:30:01.2268060Z         Parameters
2025-01-24T14:30:01.2268210Z         ----------
2025-01-24T14:30:01.2268430Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2268740Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2268940Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2269230Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2269370Z     
2025-01-24T14:30:01.2269520Z         Returns
2025-01-24T14:30:01.2269680Z         -------
2025-01-24T14:30:01.2269850Z         SimulationPacketData
2025-01-24T14:30:01.2270010Z         """
2025-01-24T14:30:01.2270230Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2270410Z             raise ValueError(
2025-01-24T14:30:01.2270660Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2270880Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2271030Z             )
2025-01-24T14:30:01.2271260Z         # Properties common among both packet modes
2025-01-24T14:30:01.2271620Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2271770Z             "line_id"
2025-01-24T14:30:01.2271990Z         )
2025-01-24T14:30:01.2272220Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2272480Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2272660Z         time_of_simulation = (
2025-01-24T14:30:01.2273000Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2273160Z         )
2025-01-24T14:30:01.2273320Z     
2025-01-24T14:30:01.2273480Z         spectrum = (
2025-01-24T14:30:01.2273740Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2273930Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2274190Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2274340Z         )
2025-01-24T14:30:01.2274480Z     
2025-01-24T14:30:01.2274680Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2275090Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2275260Z             return cls(
2025-01-24T14:30:01.2275760Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2275930Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2276070Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2276210Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2276340Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2276420Z                 lines_df=lines_df,
2025-01-24T14:30:01.2276530Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2276660Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2276770Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2276870Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2277030Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2277120Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2277200Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2277280Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2277330Z                 simulation=sim,
2025-01-24T14:30:01.2277380Z             )
2025-01-24T14:30:01.2277440Z         else: # real packets
2025-01-24T14:30:01.2277920Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2277980Z             # which got emitted
2025-01-24T14:30:01.2278070Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2278120Z >           return cls(
2025-01-24T14:30:01.2278270Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2278430Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2278490Z                     mask
2025-01-24T14:30:01.2278530Z                 ],
2025-01-24T14:30:01.2278690Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2278740Z                     mask
2025-01-24T14:30:01.2278790Z                 ],
2025-01-24T14:30:01.2278920Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2278980Z                     mask
2025-01-24T14:30:01.2279020Z                 ],
2025-01-24T14:30:01.2279160Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2279220Z                 lines_df=lines_df,
2025-01-24T14:30:01.2279360Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2279500Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2279550Z                     mask
2025-01-24T14:30:01.2279600Z                 ],
2025-01-24T14:30:01.2279700Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2279800Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2279950Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2280040Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2280120Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2280190Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2280250Z                 simulation=sim,
2025-01-24T14:30:01.2280300Z             )
2025-01-24T14:30:01.2280590Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2280600Z 
2025-01-24T14:30:01.2280740Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2281110Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply3] _
2025-01-24T14:30:01.2281110Z 
2025-01-24T14:30:01.2281280Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2281280Z 
2025-01-24T14:30:01.2281350Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2281410Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2281460Z         """
2025-01-24T14:30:01.2281580Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2281630Z     
2025-01-24T14:30:01.2281680Z         Parameters:
2025-01-24T14:30:01.2281740Z         -----------
2025-01-24T14:30:01.2281830Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2281880Z     
2025-01-24T14:30:01.2281940Z         Returns:
2025-01-24T14:30:01.2281980Z         --------
2025-01-24T14:30:01.2282050Z         An LIVPlotter instance.
2025-01-24T14:30:01.2282090Z         """
2025-01-24T14:30:01.2282200Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2282210Z 
2025-01-24T14:30:01.2282310Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2282410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2282530Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2282650Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2282810Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2282970Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2283070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2283070Z 
2025-01-24T14:30:01.2283240Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2283370Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2283430Z packets_mode = 'real'
2025-01-24T14:30:01.2283430Z 
2025-01-24T14:30:01.2283490Z     @classmethod
2025-01-24T14:30:01.2283570Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2283620Z         """
2025-01-24T14:30:01.2283780Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2283830Z     
2025-01-24T14:30:01.2283880Z         Parameters
2025-01-24T14:30:01.2283930Z         ----------
2025-01-24T14:30:01.2284010Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2284120Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2284200Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2284300Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2284360Z     
2025-01-24T14:30:01.2284400Z         Returns
2025-01-24T14:30:01.2284450Z         -------
2025-01-24T14:30:01.2284510Z         SimulationPacketData
2025-01-24T14:30:01.2284570Z         """
2025-01-24T14:30:01.2284660Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2284720Z             raise ValueError(
2025-01-24T14:30:01.2284810Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2284890Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2284930Z             )
2025-01-24T14:30:01.2285020Z         # Properties common among both packet modes
2025-01-24T14:30:01.2285150Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2285200Z             "line_id"
2025-01-24T14:30:01.2285250Z         )
2025-01-24T14:30:01.2285340Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2285440Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2285500Z         time_of_simulation = (
2025-01-24T14:30:01.2285630Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2285740Z         )
2025-01-24T14:30:01.2285790Z     
2025-01-24T14:30:01.2285840Z         spectrum = (
2025-01-24T14:30:01.2285930Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2285990Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2286090Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2286130Z         )
2025-01-24T14:30:01.2286180Z     
2025-01-24T14:30:01.2286240Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2286340Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2286390Z             return cls(
2025-01-24T14:30:01.2286520Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2286670Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2286810Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2286950Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2287070Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2287130Z                 lines_df=lines_df,
2025-01-24T14:30:01.2287230Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2287360Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2287460Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2287550Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2288100Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2288210Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2288290Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2288370Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2288430Z                 simulation=sim,
2025-01-24T14:30:01.2288480Z             )
2025-01-24T14:30:01.2288560Z         else: # real packets
2025-01-24T14:30:01.2288690Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2288750Z             # which got emitted
2025-01-24T14:30:01.2288830Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2288880Z >           return cls(
2025-01-24T14:30:01.2289010Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2289160Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2289210Z                     mask
2025-01-24T14:30:01.2289260Z                 ],
2025-01-24T14:30:01.2289420Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2289460Z                     mask
2025-01-24T14:30:01.2289520Z                 ],
2025-01-24T14:30:01.2289650Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2289710Z                     mask
2025-01-24T14:30:01.2289750Z                 ],
2025-01-24T14:30:01.2289880Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2289940Z                 lines_df=lines_df,
2025-01-24T14:30:01.2290070Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2290210Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2290270Z                     mask
2025-01-24T14:30:01.2290310Z                 ],
2025-01-24T14:30:01.2290420Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2290510Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2290660Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2290740Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2291250Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2291320Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2291380Z                 simulation=sim,
2025-01-24T14:30:01.2291420Z             )
2025-01-24T14:30:01.2291720Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2291730Z 
2025-01-24T14:30:01.2291880Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2292060Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _
2025-01-24T14:30:01.2292060Z 
2025-01-24T14:30:01.2292230Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2292230Z 
2025-01-24T14:30:01.2292300Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2292360Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2292410Z         """
2025-01-24T14:30:01.2292520Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2292570Z     
2025-01-24T14:30:01.2292620Z         Parameters:
2025-01-24T14:30:01.2292670Z         -----------
2025-01-24T14:30:01.2292760Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2292810Z     
2025-01-24T14:30:01.2292860Z         Returns:
2025-01-24T14:30:01.2292910Z         --------
2025-01-24T14:30:01.2292970Z         An LIVPlotter instance.
2025-01-24T14:30:01.2293010Z         """
2025-01-24T14:30:01.2293110Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2293120Z 
2025-01-24T14:30:01.2293280Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2293400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2293520Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2293640Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2293810Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2293920Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2294000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2294010Z 
2025-01-24T14:30:01.2294180Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2294300Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2294350Z packets_mode = 'real'
2025-01-24T14:30:01.2294360Z 
2025-01-24T14:30:01.2294410Z     @classmethod
2025-01-24T14:30:01.2294490Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2294540Z         """
2025-01-24T14:30:01.2294690Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2294740Z     
2025-01-24T14:30:01.2294790Z         Parameters
2025-01-24T14:30:01.2294840Z         ----------
2025-01-24T14:30:01.2294910Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2295020Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2295090Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2295200Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2295240Z     
2025-01-24T14:30:01.2295290Z         Returns
2025-01-24T14:30:01.2295340Z         -------
2025-01-24T14:30:01.2295400Z         SimulationPacketData
2025-01-24T14:30:01.2295450Z         """
2025-01-24T14:30:01.2295530Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2295590Z             raise ValueError(
2025-01-24T14:30:01.2295680Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2295760Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2295810Z             )
2025-01-24T14:30:01.2295890Z         # Properties common among both packet modes
2025-01-24T14:30:01.2296110Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2296170Z             "line_id"
2025-01-24T14:30:01.2296210Z         )
2025-01-24T14:30:01.2296290Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2296390Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2296450Z         time_of_simulation = (
2025-01-24T14:30:01.2296570Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2296610Z         )
2025-01-24T14:30:01.2296660Z     
2025-01-24T14:30:01.2296710Z         spectrum = (
2025-01-24T14:30:01.2296800Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2296860Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2296960Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2297000Z         )
2025-01-24T14:30:01.2297050Z     
2025-01-24T14:30:01.2297110Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2297210Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2297260Z             return cls(
2025-01-24T14:30:01.2297390Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2297530Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2297670Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2297810Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2297930Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2298060Z                 lines_df=lines_df,
2025-01-24T14:30:01.2298170Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2298290Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2298400Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2298490Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2298640Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2298720Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2298800Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2298880Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2298930Z                 simulation=sim,
2025-01-24T14:30:01.2298980Z             )
2025-01-24T14:30:01.2299030Z         else: # real packets
2025-01-24T14:30:01.2299170Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2299220Z             # which got emitted
2025-01-24T14:30:01.2299310Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2299360Z >           return cls(
2025-01-24T14:30:01.2299490Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2299640Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2299690Z                     mask
2025-01-24T14:30:01.2299740Z                 ],
2025-01-24T14:30:01.2299890Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2299940Z                     mask
2025-01-24T14:30:01.2299980Z                 ],
2025-01-24T14:30:01.2300130Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2300170Z                     mask
2025-01-24T14:30:01.2300220Z                 ],
2025-01-24T14:30:01.2300360Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2300410Z                 lines_df=lines_df,
2025-01-24T14:30:01.2300550Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2300760Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2300810Z                     mask
2025-01-24T14:30:01.2300860Z                 ],
2025-01-24T14:30:01.2300960Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2301050Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2301200Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2301280Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2301370Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2301440Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2301490Z                 simulation=sim,
2025-01-24T14:30:01.2301540Z             )
2025-01-24T14:30:01.2301800Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2301800Z 
2025-01-24T14:30:01.2301930Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2302110Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _
2025-01-24T14:30:01.2302120Z 
2025-01-24T14:30:01.2302280Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2302280Z 
2025-01-24T14:30:01.2302340Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2302400Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2302450Z         """
2025-01-24T14:30:01.2302570Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2302610Z     
2025-01-24T14:30:01.2302710Z         Parameters:
2025-01-24T14:30:01.2302760Z         -----------
2025-01-24T14:30:01.2302860Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2302900Z     
2025-01-24T14:30:01.2302950Z         Returns:
2025-01-24T14:30:01.2303000Z         --------
2025-01-24T14:30:01.2303060Z         An LIVPlotter instance.
2025-01-24T14:30:01.2303100Z         """
2025-01-24T14:30:01.2303210Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2303210Z 
2025-01-24T14:30:01.2303320Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2303410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2303740Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2303860Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2304030Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2304130Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2304220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2304220Z 
2025-01-24T14:30:01.2304390Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2304520Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2304580Z packets_mode = 'real'
2025-01-24T14:30:01.2304580Z 
2025-01-24T14:30:01.2304630Z     @classmethod
2025-01-24T14:30:01.2304720Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2304770Z         """
2025-01-24T14:30:01.2304930Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2304980Z     
2025-01-24T14:30:01.2305030Z         Parameters
2025-01-24T14:30:01.2305080Z         ----------
2025-01-24T14:30:01.2305160Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2305280Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2305360Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2305470Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2305510Z     
2025-01-24T14:30:01.2305560Z         Returns
2025-01-24T14:30:01.2305740Z         -------
2025-01-24T14:30:01.2305800Z         SimulationPacketData
2025-01-24T14:30:01.2305840Z         """
2025-01-24T14:30:01.2305920Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2305980Z             raise ValueError(
2025-01-24T14:30:01.2306070Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2306150Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2306200Z             )
2025-01-24T14:30:01.2306280Z         # Properties common among both packet modes
2025-01-24T14:30:01.2306400Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2306450Z             "line_id"
2025-01-24T14:30:01.2306500Z         )
2025-01-24T14:30:01.2306580Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2306680Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2306740Z         time_of_simulation = (
2025-01-24T14:30:01.2306860Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2306920Z         )
2025-01-24T14:30:01.2306960Z     
2025-01-24T14:30:01.2307010Z         spectrum = (
2025-01-24T14:30:01.2307100Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2307160Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2307260Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2307310Z         )
2025-01-24T14:30:01.2307360Z     
2025-01-24T14:30:01.2307430Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2307530Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2307580Z             return cls(
2025-01-24T14:30:01.2307960Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2308150Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2308290Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2308430Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2308560Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2308610Z                 lines_df=lines_df,
2025-01-24T14:30:01.2308710Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2308830Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2308940Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2309030Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2309180Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2309260Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2309350Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2309420Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2309470Z                 simulation=sim,
2025-01-24T14:30:01.2309520Z             )
2025-01-24T14:30:01.2309580Z         else: # real packets
2025-01-24T14:30:01.2309710Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2309760Z             # which got emitted
2025-01-24T14:30:01.2309850Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2309900Z >           return cls(
2025-01-24T14:30:01.2310040Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2310180Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2310230Z                     mask
2025-01-24T14:30:01.2310280Z                 ],
2025-01-24T14:30:01.2310430Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2310480Z                     mask
2025-01-24T14:30:01.2310530Z                 ],
2025-01-24T14:30:01.2310800Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2310840Z                     mask
2025-01-24T14:30:01.2310890Z                 ],
2025-01-24T14:30:01.2311020Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2311080Z                 lines_df=lines_df,
2025-01-24T14:30:01.2311210Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2311350Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2311400Z                     mask
2025-01-24T14:30:01.2311450Z                 ],
2025-01-24T14:30:01.2311550Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2311640Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2311790Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2311880Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2317430Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2317580Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2317630Z                 simulation=sim,
2025-01-24T14:30:01.2317680Z             )
2025-01-24T14:30:01.2317940Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2317940Z 
2025-01-24T14:30:01.2318070Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2318450Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply6] _
2025-01-24T14:30:01.2318450Z 
2025-01-24T14:30:01.2318620Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2318630Z 
2025-01-24T14:30:01.2318690Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2318760Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2318810Z         """
2025-01-24T14:30:01.2318930Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2318980Z     
2025-01-24T14:30:01.2319030Z         Parameters:
2025-01-24T14:30:01.2319080Z         -----------
2025-01-24T14:30:01.2319170Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2319210Z     
2025-01-24T14:30:01.2319250Z         Returns:
2025-01-24T14:30:01.2319300Z         --------
2025-01-24T14:30:01.2319360Z         An LIVPlotter instance.
2025-01-24T14:30:01.2319410Z         """
2025-01-24T14:30:01.2319510Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2319510Z 
2025-01-24T14:30:01.2319620Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2319720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2319840Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2319970Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2320130Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2320240Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2320320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2320330Z 
2025-01-24T14:30:01.2320500Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2320620Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2320680Z packets_mode = 'real'
2025-01-24T14:30:01.2320680Z 
2025-01-24T14:30:01.2320730Z     @classmethod
2025-01-24T14:30:01.2320810Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2320860Z         """
2025-01-24T14:30:01.2321010Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2321060Z     
2025-01-24T14:30:01.2321190Z         Parameters
2025-01-24T14:30:01.2321240Z         ----------
2025-01-24T14:30:01.2321320Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2321440Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2321500Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2321610Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2321650Z     
2025-01-24T14:30:01.2321700Z         Returns
2025-01-24T14:30:01.2321750Z         -------
2025-01-24T14:30:01.2321810Z         SimulationPacketData
2025-01-24T14:30:01.2321850Z         """
2025-01-24T14:30:01.2321930Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2321990Z             raise ValueError(
2025-01-24T14:30:01.2322080Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2322160Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2322210Z             )
2025-01-24T14:30:01.2322290Z         # Properties common among both packet modes
2025-01-24T14:30:01.2322420Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2322470Z             "line_id"
2025-01-24T14:30:01.2322520Z         )
2025-01-24T14:30:01.2322600Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2322690Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2322750Z         time_of_simulation = (
2025-01-24T14:30:01.2322870Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2322910Z         )
2025-01-24T14:30:01.2322960Z     
2025-01-24T14:30:01.2323010Z         spectrum = (
2025-01-24T14:30:01.2323140Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2323210Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2323300Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2323350Z         )
2025-01-24T14:30:01.2323400Z     
2025-01-24T14:30:01.2323460Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2323560Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2323610Z             return cls(
2025-01-24T14:30:01.2323730Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2324120Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2324290Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2324430Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2324590Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2324650Z                 lines_df=lines_df,
2025-01-24T14:30:01.2324790Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2324930Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2325180Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2325270Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2325430Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2325520Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2325600Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2325670Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2325730Z                 simulation=sim,
2025-01-24T14:30:01.2325780Z             )
2025-01-24T14:30:01.2325840Z         else: # real packets
2025-01-24T14:30:01.2325980Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2326030Z             # which got emitted
2025-01-24T14:30:01.2326130Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2326180Z >           return cls(
2025-01-24T14:30:01.2326590Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2326740Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2326790Z                     mask
2025-01-24T14:30:01.2326840Z                 ],
2025-01-24T14:30:01.2326990Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2327040Z                     mask
2025-01-24T14:30:01.2327080Z                 ],
2025-01-24T14:30:01.2327220Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2327270Z                     mask
2025-01-24T14:30:01.2327320Z                 ],
2025-01-24T14:30:01.2327450Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2327510Z                 lines_df=lines_df,
2025-01-24T14:30:01.2327650Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2327790Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2327840Z                     mask
2025-01-24T14:30:01.2327890Z                 ],
2025-01-24T14:30:01.2328000Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2328090Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2328240Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2328530Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2344190Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2344600Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2344670Z                 simulation=sim,
2025-01-24T14:30:01.2344720Z             )
2025-01-24T14:30:01.2344990Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2345010Z 
2025-01-24T14:30:01.2345150Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2345340Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _
2025-01-24T14:30:01.2345340Z 
2025-01-24T14:30:01.2345510Z simulation_simple = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2345510Z 
2025-01-24T14:30:01.2345570Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2345640Z     def plotter(simulation_simple):
2025-01-24T14:30:01.2345690Z         """
2025-01-24T14:30:01.2345810Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:30:01.2345850Z     
2025-01-24T14:30:01.2345910Z         Parameters:
2025-01-24T14:30:01.2345960Z         -----------
2025-01-24T14:30:01.2346060Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:30:01.2346100Z     
2025-01-24T14:30:01.2346160Z         Returns:
2025-01-24T14:30:01.2346210Z         --------
2025-01-24T14:30:01.2346280Z         An LIVPlotter instance.
2025-01-24T14:30:01.2346320Z         """
2025-01-24T14:30:01.2346430Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2346440Z 
2025-01-24T14:30:01.2346550Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:30:01.2346640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2346770Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:30:01.2346890Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2347070Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2347170Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2347270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2347270Z 
2025-01-24T14:30:01.2347440Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2347710Z sim = <tardis.simulation.base.Simulation object at 0x1293c1130>
2025-01-24T14:30:01.2347770Z packets_mode = 'real'
2025-01-24T14:30:01.2347780Z 
2025-01-24T14:30:01.2347820Z     @classmethod
2025-01-24T14:30:01.2347910Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2347960Z         """
2025-01-24T14:30:01.2348120Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2348160Z     
2025-01-24T14:30:01.2348220Z         Parameters
2025-01-24T14:30:01.2348270Z         ----------
2025-01-24T14:30:01.2348350Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2348470Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2348540Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2348650Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2348700Z     
2025-01-24T14:30:01.2348750Z         Returns
2025-01-24T14:30:01.2348800Z         -------
2025-01-24T14:30:01.2348860Z         SimulationPacketData
2025-01-24T14:30:01.2348910Z         """
2025-01-24T14:30:01.2348990Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2349050Z             raise ValueError(
2025-01-24T14:30:01.2349140Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2349220Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2349270Z             )
2025-01-24T14:30:01.2349350Z         # Properties common among both packet modes
2025-01-24T14:30:01.2349490Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2350020Z             "line_id"
2025-01-24T14:30:01.2350090Z         )
2025-01-24T14:30:01.2350180Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2350280Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2350340Z         time_of_simulation = (
2025-01-24T14:30:01.2350470Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2350520Z         )
2025-01-24T14:30:01.2350570Z     
2025-01-24T14:30:01.2350620Z         spectrum = (
2025-01-24T14:30:01.2350710Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2350780Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2350880Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2350930Z         )
2025-01-24T14:30:01.2350970Z     
2025-01-24T14:30:01.2351040Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2351130Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2351190Z             return cls(
2025-01-24T14:30:01.2351320Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2351470Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2351610Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2351750Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2351880Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2351940Z                 lines_df=lines_df,
2025-01-24T14:30:01.2352050Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2352170Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2352280Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2352370Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2352520Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2352610Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2352690Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2352950Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2353010Z                 simulation=sim,
2025-01-24T14:30:01.2353050Z             )
2025-01-24T14:30:01.2353110Z         else: # real packets
2025-01-24T14:30:01.2353240Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2353300Z             # which got emitted
2025-01-24T14:30:01.2353380Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2353430Z >           return cls(
2025-01-24T14:30:01.2353570Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2353720Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2353780Z                     mask
2025-01-24T14:30:01.2353820Z                 ],
2025-01-24T14:30:01.2353970Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2354020Z                     mask
2025-01-24T14:30:01.2354080Z                 ],
2025-01-24T14:30:01.2354210Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2354260Z                     mask
2025-01-24T14:30:01.2354310Z                 ],
2025-01-24T14:30:01.2354450Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2354500Z                 lines_df=lines_df,
2025-01-24T14:30:01.2354630Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2354770Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2354880Z                     mask
2025-01-24T14:30:01.2354940Z                 ],
2025-01-24T14:30:01.2355040Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2355130Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2355280Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2355370Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2355450Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2355520Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2355580Z                 simulation=sim,
2025-01-24T14:30:01.2355630Z             )
2025-01-24T14:30:01.2355890Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2355900Z 
2025-01-24T14:30:01.2356030Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2356200Z _ ERROR at setup of TestSDECPlotter.test_parse_species_list[_full_species_list] _
2025-01-24T14:30:01.2356210Z 
2025-01-24T14:30:01.2356410Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2356580Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2356760Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2356770Z 
2025-01-24T14:30:01.2356830Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2356920Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2356960Z         """
2025-01-24T14:30:01.2357030Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2357070Z     
2025-01-24T14:30:01.2357120Z         Parameters
2025-01-24T14:30:01.2357170Z         ----------
2025-01-24T14:30:01.2357280Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2357340Z             Simulation object.
2025-01-24T14:30:01.2357390Z     
2025-01-24T14:30:01.2357440Z         Returns
2025-01-24T14:30:01.2357490Z         -------
2025-01-24T14:30:01.2357590Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2357640Z         """
2025-01-24T14:30:01.2357750Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2357800Z 
2025-01-24T14:30:01.2357920Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2358020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2358140Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2358260Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2358430Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2358540Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2358620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2358630Z 
2025-01-24T14:30:01.2358800Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2358920Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2358970Z packets_mode = 'real'
2025-01-24T14:30:01.2358980Z 
2025-01-24T14:30:01.2359030Z     @classmethod
2025-01-24T14:30:01.2359110Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2359150Z         """
2025-01-24T14:30:01.2359300Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2359350Z     
2025-01-24T14:30:01.2359400Z         Parameters
2025-01-24T14:30:01.2359450Z         ----------
2025-01-24T14:30:01.2359520Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2359640Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2359710Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2359870Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2359910Z     
2025-01-24T14:30:01.2359970Z         Returns
2025-01-24T14:30:01.2360010Z         -------
2025-01-24T14:30:01.2360070Z         SimulationPacketData
2025-01-24T14:30:01.2360110Z         """
2025-01-24T14:30:01.2360200Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2360260Z             raise ValueError(
2025-01-24T14:30:01.2360350Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2360430Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2360470Z             )
2025-01-24T14:30:01.2360550Z         # Properties common among both packet modes
2025-01-24T14:30:01.2360680Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2360730Z             "line_id"
2025-01-24T14:30:01.2360770Z         )
2025-01-24T14:30:01.2360850Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2360950Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2361020Z         time_of_simulation = (
2025-01-24T14:30:01.2361140Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2361190Z         )
2025-01-24T14:30:01.2361230Z     
2025-01-24T14:30:01.2361290Z         spectrum = (
2025-01-24T14:30:01.2361380Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2361440Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2361540Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2361580Z         )
2025-01-24T14:30:01.2361620Z     
2025-01-24T14:30:01.2361690Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2361790Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2361840Z             return cls(
2025-01-24T14:30:01.2361970Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2362110Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2362580Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2362780Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2363290Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2363360Z                 lines_df=lines_df,
2025-01-24T14:30:01.2363470Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2363600Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2363700Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2363800Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2363950Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2364040Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2364120Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2364200Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2364250Z                 simulation=sim,
2025-01-24T14:30:01.2364300Z             )
2025-01-24T14:30:01.2364500Z         else: # real packets
2025-01-24T14:30:01.2364670Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2364730Z             # which got emitted
2025-01-24T14:30:01.2364820Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2364870Z >           return cls(
2025-01-24T14:30:01.2365010Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2365160Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2365210Z                     mask
2025-01-24T14:30:01.2365260Z                 ],
2025-01-24T14:30:01.2365570Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2365630Z                     mask
2025-01-24T14:30:01.2365680Z                 ],
2025-01-24T14:30:01.2365820Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2365870Z                     mask
2025-01-24T14:30:01.2365920Z                 ],
2025-01-24T14:30:01.2366050Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2366110Z                 lines_df=lines_df,
2025-01-24T14:30:01.2366250Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2366390Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2366440Z                     mask
2025-01-24T14:30:01.2366490Z                 ],
2025-01-24T14:30:01.2366600Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2366700Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2366870Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2366950Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2367040Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2367120Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2367170Z                 simulation=sim,
2025-01-24T14:30:01.2367220Z             )
2025-01-24T14:30:01.2367500Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2367510Z 
2025-01-24T14:30:01.2367650Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2367780Z ---------------------------- Captured stdout setup -----------------------------
2025-01-24T14:30:01.2367970Z log_level is defined both in Functional Argument & YAML Configuration {debug section}
2025-01-24T14:30:01.2368090Z log_level = CRITICAL will be used for Log Level Determination
2025-01-24T14:30:01.2368100Z 
2025-01-24T14:30:01.2368230Z ---------------------------- Captured stderr setup -----------------------------
2025-01-24T14:30:01.2368230Z 
2025-01-24T14:30:01.2368290Z 
2025-01-24T14:30:01.2368710Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:30:01.2368710Z 
2025-01-24T14:30:01.2368950Z Packets:                                                                                   0/4000 [00:00<?, ?it/s][A
2025-01-24T14:30:01.2369080Z Iterations:                                                                                49/? [07:51<00:00,  5.53s/it]
2025-01-24T14:30:01.2369090Z 
2025-01-24T14:30:01.2369370Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉3999/4000 [00:00<00:00, 137769.49it/s][A
2025-01-24T14:30:01.2369370Z 
2025-01-24T14:30:01.2369550Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]               [A
2025-01-24T14:30:01.2369680Z Iterations:                                                                                50/? [07:52<00:00,  4.08s/it]
2025-01-24T14:30:01.2369690Z 
2025-01-24T14:30:01.2369950Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 137954.64it/s][A
2025-01-24T14:30:01.2369950Z 
2025-01-24T14:30:01.2370140Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]               [A
2025-01-24T14:30:01.2370260Z Iterations:                                                                                51/? [07:53<00:00,  3.08s/it]
2025-01-24T14:30:01.2370260Z 
2025-01-24T14:30:01.2370750Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 98797.02it/s][A
2025-01-24T14:30:01.2370930Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_species_list] ___
2025-01-24T14:30:01.2370930Z 
2025-01-24T14:30:01.2371140Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2371310Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2371500Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2371500Z 
2025-01-24T14:30:01.2371570Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2371660Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2371710Z         """
2025-01-24T14:30:01.2371770Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2371820Z     
2025-01-24T14:30:01.2371880Z         Parameters
2025-01-24T14:30:01.2371930Z         ----------
2025-01-24T14:30:01.2372040Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2372110Z             Simulation object.
2025-01-24T14:30:01.2372150Z     
2025-01-24T14:30:01.2372210Z         Returns
2025-01-24T14:30:01.2372260Z         -------
2025-01-24T14:30:01.2372360Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2372410Z         """
2025-01-24T14:30:01.2372680Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2372680Z 
2025-01-24T14:30:01.2372800Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2372890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2373010Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2373130Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2373310Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2373410Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2373520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2373520Z 
2025-01-24T14:30:01.2373690Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2373820Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2373880Z packets_mode = 'real'
2025-01-24T14:30:01.2373880Z 
2025-01-24T14:30:01.2373940Z     @classmethod
2025-01-24T14:30:01.2374020Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2374070Z         """
2025-01-24T14:30:01.2374230Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2374270Z     
2025-01-24T14:30:01.2374320Z         Parameters
2025-01-24T14:30:01.2374370Z         ----------
2025-01-24T14:30:01.2374450Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2374570Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2374650Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2374760Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2374810Z     
2025-01-24T14:30:01.2374860Z         Returns
2025-01-24T14:30:01.2374900Z         -------
2025-01-24T14:30:01.2374970Z         SimulationPacketData
2025-01-24T14:30:01.2375020Z         """
2025-01-24T14:30:01.2375100Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2375160Z             raise ValueError(
2025-01-24T14:30:01.2375250Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2375330Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2375380Z             )
2025-01-24T14:30:01.2375460Z         # Properties common among both packet modes
2025-01-24T14:30:01.2375590Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2375650Z             "line_id"
2025-01-24T14:30:01.2375690Z         )
2025-01-24T14:30:01.2375830Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2375930Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2375990Z         time_of_simulation = (
2025-01-24T14:30:01.2376120Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2376180Z         )
2025-01-24T14:30:01.2376220Z     
2025-01-24T14:30:01.2376280Z         spectrum = (
2025-01-24T14:30:01.2376370Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2376430Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2376530Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2376580Z         )
2025-01-24T14:30:01.2376630Z     
2025-01-24T14:30:01.2376700Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2376790Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2376850Z             return cls(
2025-01-24T14:30:01.2376980Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2377130Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2377270Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2377410Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2377600Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2377660Z                 lines_df=lines_df,
2025-01-24T14:30:01.2377770Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2377900Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2378010Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2378100Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2378250Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2378350Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2378430Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2378510Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2378570Z                 simulation=sim,
2025-01-24T14:30:01.2378620Z             )
2025-01-24T14:30:01.2378680Z         else: # real packets
2025-01-24T14:30:01.2378830Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2378880Z             # which got emitted
2025-01-24T14:30:01.2378980Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2379030Z >           return cls(
2025-01-24T14:30:01.2379170Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2379330Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2379380Z                     mask
2025-01-24T14:30:01.2379430Z                 ],
2025-01-24T14:30:01.2379580Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2379630Z                     mask
2025-01-24T14:30:01.2379690Z                 ],
2025-01-24T14:30:01.2379830Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2379890Z                     mask
2025-01-24T14:30:01.2379940Z                 ],
2025-01-24T14:30:01.2380080Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2380150Z                 lines_df=lines_df,
2025-01-24T14:30:01.2380280Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2380420Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2380470Z                     mask
2025-01-24T14:30:01.2380520Z                 ],
2025-01-24T14:30:01.2380680Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2380780Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2380930Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2381020Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2381110Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2381180Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2381250Z                 simulation=sim,
2025-01-24T14:30:01.2381300Z             )
2025-01-24T14:30:01.2381570Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2381580Z 
2025-01-24T14:30:01.2381710Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2381870Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_keep_colour] ____
2025-01-24T14:30:01.2381870Z 
2025-01-24T14:30:01.2382080Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2382250Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2382440Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2382490Z 
2025-01-24T14:30:01.2382560Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2382660Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2382700Z         """
2025-01-24T14:30:01.2382770Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2382820Z     
2025-01-24T14:30:01.2382870Z         Parameters
2025-01-24T14:30:01.2382920Z         ----------
2025-01-24T14:30:01.2383030Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2383090Z             Simulation object.
2025-01-24T14:30:01.2383150Z     
2025-01-24T14:30:01.2383190Z         Returns
2025-01-24T14:30:01.2383250Z         -------
2025-01-24T14:30:01.2383360Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2383410Z         """
2025-01-24T14:30:01.2383520Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2383530Z 
2025-01-24T14:30:01.2389010Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2389200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2389340Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2389460Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2389640Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2389750Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2389840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2389850Z 
2025-01-24T14:30:01.2390030Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2390160Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2390220Z packets_mode = 'real'
2025-01-24T14:30:01.2390230Z 
2025-01-24T14:30:01.2390280Z     @classmethod
2025-01-24T14:30:01.2390370Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2390420Z         """
2025-01-24T14:30:01.2390590Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2390630Z     
2025-01-24T14:30:01.2390680Z         Parameters
2025-01-24T14:30:01.2390740Z         ----------
2025-01-24T14:30:01.2390810Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2390940Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2391010Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2391120Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2391160Z     
2025-01-24T14:30:01.2391610Z         Returns
2025-01-24T14:30:01.2391670Z         -------
2025-01-24T14:30:01.2391730Z         SimulationPacketData
2025-01-24T14:30:01.2391780Z         """
2025-01-24T14:30:01.2391860Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2391920Z             raise ValueError(
2025-01-24T14:30:01.2392010Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2392100Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2392150Z             )
2025-01-24T14:30:01.2392230Z         # Properties common among both packet modes
2025-01-24T14:30:01.2392360Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2392410Z             "line_id"
2025-01-24T14:30:01.2392460Z         )
2025-01-24T14:30:01.2392540Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2392640Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2392700Z         time_of_simulation = (
2025-01-24T14:30:01.2392820Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2392870Z         )
2025-01-24T14:30:01.2392920Z     
2025-01-24T14:30:01.2392970Z         spectrum = (
2025-01-24T14:30:01.2393060Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2393210Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2393300Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2393350Z         )
2025-01-24T14:30:01.2393390Z     
2025-01-24T14:30:01.2393450Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2393550Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2393600Z             return cls(
2025-01-24T14:30:01.2393730Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2393870Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2394010Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2394140Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2394260Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2394330Z                 lines_df=lines_df,
2025-01-24T14:30:01.2394430Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2394550Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2394650Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2394740Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2394900Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2394990Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2395070Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2395140Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2395200Z                 simulation=sim,
2025-01-24T14:30:01.2395250Z             )
2025-01-24T14:30:01.2395300Z         else: # real packets
2025-01-24T14:30:01.2395430Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2395490Z             # which got emitted
2025-01-24T14:30:01.2395580Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2395630Z >           return cls(
2025-01-24T14:30:01.2395770Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2395910Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2395970Z                     mask
2025-01-24T14:30:01.2396020Z                 ],
2025-01-24T14:30:01.2396170Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2396370Z                     mask
2025-01-24T14:30:01.2396430Z                 ],
2025-01-24T14:30:01.2396570Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2396620Z                     mask
2025-01-24T14:30:01.2396670Z                 ],
2025-01-24T14:30:01.2396810Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2396870Z                 lines_df=lines_df,
2025-01-24T14:30:01.2397000Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2397140Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2397200Z                     mask
2025-01-24T14:30:01.2397240Z                 ],
2025-01-24T14:30:01.2397350Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2397440Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2397590Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2397680Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2397760Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2397840Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2398180Z                 simulation=sim,
2025-01-24T14:30:01.2398230Z             )
2025-01-24T14:30:01.2398490Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2398500Z 
2025-01-24T14:30:01.2398640Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2398850Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-24T14:30:01.2398860Z 
2025-01-24T14:30:01.2399060Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2399230Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2399420Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2399420Z 
2025-01-24T14:30:01.2399490Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2399570Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2399620Z         """
2025-01-24T14:30:01.2399680Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2399730Z     
2025-01-24T14:30:01.2399780Z         Parameters
2025-01-24T14:30:01.2399820Z         ----------
2025-01-24T14:30:01.2399930Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2399990Z             Simulation object.
2025-01-24T14:30:01.2400040Z     
2025-01-24T14:30:01.2400080Z         Returns
2025-01-24T14:30:01.2400130Z         -------
2025-01-24T14:30:01.2400230Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2400280Z         """
2025-01-24T14:30:01.2400390Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2400390Z 
2025-01-24T14:30:01.2400510Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2400600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2400740Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2400850Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2401030Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2401140Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2401230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2401230Z 
2025-01-24T14:30:01.2401410Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2401540Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2401670Z packets_mode = 'real'
2025-01-24T14:30:01.2401670Z 
2025-01-24T14:30:01.2401720Z     @classmethod
2025-01-24T14:30:01.2401810Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2401860Z         """
2025-01-24T14:30:01.2402020Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2402060Z     
2025-01-24T14:30:01.2402110Z         Parameters
2025-01-24T14:30:01.2402160Z         ----------
2025-01-24T14:30:01.2402240Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2402350Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2402420Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2402540Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2402590Z     
2025-01-24T14:30:01.2402640Z         Returns
2025-01-24T14:30:01.2402680Z         -------
2025-01-24T14:30:01.2402750Z         SimulationPacketData
2025-01-24T14:30:01.2402790Z         """
2025-01-24T14:30:01.2402880Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2402940Z             raise ValueError(
2025-01-24T14:30:01.2403030Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2403110Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2403220Z             )
2025-01-24T14:30:01.2403300Z         # Properties common among both packet modes
2025-01-24T14:30:01.2403430Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2403480Z             "line_id"
2025-01-24T14:30:01.2403530Z         )
2025-01-24T14:30:01.2403620Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2403720Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2403780Z         time_of_simulation = (
2025-01-24T14:30:01.2403900Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2403950Z         )
2025-01-24T14:30:01.2404000Z     
2025-01-24T14:30:01.2404050Z         spectrum = (
2025-01-24T14:30:01.2404140Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2404210Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2404310Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2404360Z         )
2025-01-24T14:30:01.2404400Z     
2025-01-24T14:30:01.2404470Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2404570Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2404620Z             return cls(
2025-01-24T14:30:01.2404760Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2404900Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2405040Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2405180Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2405310Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2405360Z                 lines_df=lines_df,
2025-01-24T14:30:01.2405460Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2405600Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2405700Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2405790Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2405940Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2406030Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2406100Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2406180Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2406240Z                 simulation=sim,
2025-01-24T14:30:01.2406340Z             )
2025-01-24T14:30:01.2406400Z         else: # real packets
2025-01-24T14:30:01.2406540Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2406590Z             # which got emitted
2025-01-24T14:30:01.2406680Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2406730Z >           return cls(
2025-01-24T14:30:01.2406870Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2407020Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2407070Z                     mask
2025-01-24T14:30:01.2407120Z                 ],
2025-01-24T14:30:01.2407270Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2407320Z                     mask
2025-01-24T14:30:01.2407370Z                 ],
2025-01-24T14:30:01.2407520Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2407560Z                     mask
2025-01-24T14:30:01.2407620Z                 ],
2025-01-24T14:30:01.2407750Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2407810Z                 lines_df=lines_df,
2025-01-24T14:30:01.2408000Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2408150Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2408200Z                     mask
2025-01-24T14:30:01.2408240Z                 ],
2025-01-24T14:30:01.2408350Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2408440Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2408600Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2408680Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2408760Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2408840Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2408900Z                 simulation=sim,
2025-01-24T14:30:01.2408950Z             )
2025-01-24T14:30:01.2409220Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2409220Z 
2025-01-24T14:30:01.2409370Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2409590Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-24T14:30:01.2409590Z 
2025-01-24T14:30:01.2409800Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2409960Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2410160Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2410160Z 
2025-01-24T14:30:01.2410220Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2410320Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2410360Z         """
2025-01-24T14:30:01.2410430Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2410470Z     
2025-01-24T14:30:01.2410520Z         Parameters
2025-01-24T14:30:01.2410580Z         ----------
2025-01-24T14:30:01.2410690Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2410750Z             Simulation object.
2025-01-24T14:30:01.2410800Z     
2025-01-24T14:30:01.2410850Z         Returns
2025-01-24T14:30:01.2410890Z         -------
2025-01-24T14:30:01.2411000Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2411050Z         """
2025-01-24T14:30:01.2411160Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2411160Z 
2025-01-24T14:30:01.2411330Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2411440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2411570Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2411690Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2411860Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2411960Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2412060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2412060Z 
2025-01-24T14:30:01.2412230Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2412360Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2412410Z packets_mode = 'real'
2025-01-24T14:30:01.2412410Z 
2025-01-24T14:30:01.2412470Z     @classmethod
2025-01-24T14:30:01.2412560Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2412600Z         """
2025-01-24T14:30:01.2412760Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2412800Z     
2025-01-24T14:30:01.2412850Z         Parameters
2025-01-24T14:30:01.2412900Z         ----------
2025-01-24T14:30:01.2413020Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2413140Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2413210Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2413310Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2413360Z     
2025-01-24T14:30:01.2413410Z         Returns
2025-01-24T14:30:01.2413450Z         -------
2025-01-24T14:30:01.2413510Z         SimulationPacketData
2025-01-24T14:30:01.2413560Z         """
2025-01-24T14:30:01.2413640Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2413690Z             raise ValueError(
2025-01-24T14:30:01.2413780Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2413860Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2413910Z             )
2025-01-24T14:30:01.2413990Z         # Properties common among both packet modes
2025-01-24T14:30:01.2414120Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2414170Z             "line_id"
2025-01-24T14:30:01.2414210Z         )
2025-01-24T14:30:01.2414290Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2414390Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2414450Z         time_of_simulation = (
2025-01-24T14:30:01.2414570Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2414610Z         )
2025-01-24T14:30:01.2414660Z     
2025-01-24T14:30:01.2414710Z         spectrum = (
2025-01-24T14:30:01.2414810Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2414870Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2414970Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2415010Z         )
2025-01-24T14:30:01.2415060Z     
2025-01-24T14:30:01.2415120Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2415220Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2415280Z             return cls(
2025-01-24T14:30:01.2415410Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2415540Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2415680Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2415820Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2415940Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2416340Z                 lines_df=lines_df,
2025-01-24T14:30:01.2416470Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2416600Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2416690Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2416790Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2416940Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2417030Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2417110Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2417180Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2417240Z                 simulation=sim,
2025-01-24T14:30:01.2417280Z             )
2025-01-24T14:30:01.2417340Z         else: # real packets
2025-01-24T14:30:01.2417470Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2417530Z             # which got emitted
2025-01-24T14:30:01.2417610Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2417660Z >           return cls(
2025-01-24T14:30:01.2417800Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2418240Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2418290Z                     mask
2025-01-24T14:30:01.2418330Z                 ],
2025-01-24T14:30:01.2418490Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2418540Z                     mask
2025-01-24T14:30:01.2418590Z                 ],
2025-01-24T14:30:01.2418720Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2418770Z                     mask
2025-01-24T14:30:01.2418820Z                 ],
2025-01-24T14:30:01.2418950Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2419010Z                 lines_df=lines_df,
2025-01-24T14:30:01.2419140Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2419280Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2419340Z                     mask
2025-01-24T14:30:01.2419390Z                 ],
2025-01-24T14:30:01.2419490Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2419590Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2419730Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2419820Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2419900Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2419970Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2420030Z                 simulation=sim,
2025-01-24T14:30:01.2420080Z             )
2025-01-24T14:30:01.2420350Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2420350Z 
2025-01-24T14:30:01.2420490Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2420710Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-24T14:30:01.2420710Z 
2025-01-24T14:30:01.2420920Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2421080Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2421260Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2421260Z 
2025-01-24T14:30:01.2421330Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2421480Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2421540Z         """
2025-01-24T14:30:01.2421600Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2421650Z     
2025-01-24T14:30:01.2421700Z         Parameters
2025-01-24T14:30:01.2421750Z         ----------
2025-01-24T14:30:01.2421870Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2421930Z             Simulation object.
2025-01-24T14:30:01.2421970Z     
2025-01-24T14:30:01.2422020Z         Returns
2025-01-24T14:30:01.2422070Z         -------
2025-01-24T14:30:01.2422170Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2422210Z         """
2025-01-24T14:30:01.2422320Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2422320Z 
2025-01-24T14:30:01.2422430Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2422520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2422660Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2436300Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2437030Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2437330Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2438520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2438530Z 
2025-01-24T14:30:01.2438990Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2439330Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2439520Z packets_mode = 'real'
2025-01-24T14:30:01.2439530Z 
2025-01-24T14:30:01.2439680Z     @classmethod
2025-01-24T14:30:01.2439920Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2440060Z         """
2025-01-24T14:30:01.2440610Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2440750Z     
2025-01-24T14:30:01.2440920Z         Parameters
2025-01-24T14:30:01.2441070Z         ----------
2025-01-24T14:30:01.2441280Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2441590Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2441800Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2442080Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2442230Z     
2025-01-24T14:30:01.2442390Z         Returns
2025-01-24T14:30:01.2442550Z         -------
2025-01-24T14:30:01.2442730Z         SimulationPacketData
2025-01-24T14:30:01.2442890Z         """
2025-01-24T14:30:01.2443110Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2443280Z             raise ValueError(
2025-01-24T14:30:01.2443540Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2443780Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2443920Z             )
2025-01-24T14:30:01.2444140Z         # Properties common among both packet modes
2025-01-24T14:30:01.2444480Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2444630Z             "line_id"
2025-01-24T14:30:01.2444790Z         )
2025-01-24T14:30:01.2445020Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2445270Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2445440Z         time_of_simulation = (
2025-01-24T14:30:01.2445780Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2445920Z         )
2025-01-24T14:30:01.2446070Z     
2025-01-24T14:30:01.2446230Z         spectrum = (
2025-01-24T14:30:01.2446480Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2446680Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2447200Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2447360Z         )
2025-01-24T14:30:01.2447500Z     
2025-01-24T14:30:01.2447690Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2447940Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2448110Z             return cls(
2025-01-24T14:30:01.2448450Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2448830Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2449210Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2449580Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2449910Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2450080Z                 lines_df=lines_df,
2025-01-24T14:30:01.2450360Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2450700Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2450980Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2451210Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2451620Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2451980Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2452190Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2452390Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2452560Z                 simulation=sim,
2025-01-24T14:30:01.2452700Z             )
2025-01-24T14:30:01.2452870Z         else: # real packets
2025-01-24T14:30:01.2453230Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2453390Z             # which got emitted
2025-01-24T14:30:01.2453620Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2453780Z >           return cls(
2025-01-24T14:30:01.2454160Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2454560Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2454730Z                     mask
2025-01-24T14:30:01.2454880Z                 ],
2025-01-24T14:30:01.2455300Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2455450Z                     mask
2025-01-24T14:30:01.2455600Z                 ],
2025-01-24T14:30:01.2455980Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2456140Z                     mask
2025-01-24T14:30:01.2456290Z                 ],
2025-01-24T14:30:01.2456650Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2456840Z                 lines_df=lines_df,
2025-01-24T14:30:01.2457190Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2457580Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2457740Z                     mask
2025-01-24T14:30:01.2457890Z                 ],
2025-01-24T14:30:01.2458170Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2458420Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2458810Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2459050Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2459250Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2459460Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2459630Z                 simulation=sim,
2025-01-24T14:30:01.2459780Z             )
2025-01-24T14:30:01.2460630Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2460640Z 
2025-01-24T14:30:01.2461010Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2461600Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-24T14:30:01.2461610Z 
2025-01-24T14:30:01.2462180Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2462630Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2463130Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2463150Z 
2025-01-24T14:30:01.2463350Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2463600Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2463760Z         """
2025-01-24T14:30:01.2463950Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2464100Z     
2025-01-24T14:30:01.2464270Z         Parameters
2025-01-24T14:30:01.2464430Z         ----------
2025-01-24T14:30:01.2464740Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2464910Z             Simulation object.
2025-01-24T14:30:01.2465070Z     
2025-01-24T14:30:01.2465310Z         Returns
2025-01-24T14:30:01.2465470Z         -------
2025-01-24T14:30:01.2465740Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2465890Z         """
2025-01-24T14:30:01.2466180Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2466200Z 
2025-01-24T14:30:01.2466500Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2466750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2467090Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2467410Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2467860Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2468150Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2468390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2468400Z 
2025-01-24T14:30:01.2468860Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2469190Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2469360Z packets_mode = 'real'
2025-01-24T14:30:01.2469370Z 
2025-01-24T14:30:01.2469530Z     @classmethod
2025-01-24T14:30:01.2469760Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2469910Z         """
2025-01-24T14:30:01.2470330Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2470480Z     
2025-01-24T14:30:01.2470630Z         Parameters
2025-01-24T14:30:01.2470790Z         ----------
2025-01-24T14:30:01.2471000Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2471310Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2471500Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2471800Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2471950Z     
2025-01-24T14:30:01.2472110Z         Returns
2025-01-24T14:30:01.2472250Z         -------
2025-01-24T14:30:01.2472440Z         SimulationPacketData
2025-01-24T14:30:01.2472590Z         """
2025-01-24T14:30:01.2472800Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2472970Z             raise ValueError(
2025-01-24T14:30:01.2473210Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2473440Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2473580Z             )
2025-01-24T14:30:01.2473810Z         # Properties common among both packet modes
2025-01-24T14:30:01.2475350Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2483090Z             "line_id"
2025-01-24T14:30:01.2483230Z         )
2025-01-24T14:30:01.2483330Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2483440Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2483510Z         time_of_simulation = (
2025-01-24T14:30:01.2483640Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2483690Z         )
2025-01-24T14:30:01.2483740Z     
2025-01-24T14:30:01.2483790Z         spectrum = (
2025-01-24T14:30:01.2483880Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2483950Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2484050Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2484100Z         )
2025-01-24T14:30:01.2484140Z     
2025-01-24T14:30:01.2484200Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2484310Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2484360Z             return cls(
2025-01-24T14:30:01.2484490Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2484630Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2485050Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2485190Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2485310Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2485370Z                 lines_df=lines_df,
2025-01-24T14:30:01.2485480Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2485600Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2485710Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2485800Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2485950Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2486040Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2486120Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2486190Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2486250Z                 simulation=sim,
2025-01-24T14:30:01.2486300Z             )
2025-01-24T14:30:01.2486350Z         else: # real packets
2025-01-24T14:30:01.2486490Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2486550Z             # which got emitted
2025-01-24T14:30:01.2486630Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2486680Z >           return cls(
2025-01-24T14:30:01.2486820Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2486970Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2487020Z                     mask
2025-01-24T14:30:01.2487070Z                 ],
2025-01-24T14:30:01.2487210Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2487270Z                     mask
2025-01-24T14:30:01.2487320Z                 ],
2025-01-24T14:30:01.2487450Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2487500Z                     mask
2025-01-24T14:30:01.2487540Z                 ],
2025-01-24T14:30:01.2487680Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2487730Z                 lines_df=lines_df,
2025-01-24T14:30:01.2487870Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2488100Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2488150Z                     mask
2025-01-24T14:30:01.2488200Z                 ],
2025-01-24T14:30:01.2488310Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2488390Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2488550Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2488640Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2488710Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2488790Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2488840Z                 simulation=sim,
2025-01-24T14:30:01.2488890Z             )
2025-01-24T14:30:01.2489160Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2489170Z 
2025-01-24T14:30:01.2489310Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2489520Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-24T14:30:01.2489530Z 
2025-01-24T14:30:01.2489730Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2489950Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2490130Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2490130Z 
2025-01-24T14:30:01.2490200Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2490280Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2490330Z         """
2025-01-24T14:30:01.2490390Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2490440Z     
2025-01-24T14:30:01.2490480Z         Parameters
2025-01-24T14:30:01.2490540Z         ----------
2025-01-24T14:30:01.2490650Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2490710Z             Simulation object.
2025-01-24T14:30:01.2490760Z     
2025-01-24T14:30:01.2490800Z         Returns
2025-01-24T14:30:01.2490850Z         -------
2025-01-24T14:30:01.2490950Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2491010Z         """
2025-01-24T14:30:01.2491120Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2491120Z 
2025-01-24T14:30:01.2491240Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2491330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2491460Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2491580Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2491750Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2491850Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2491940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2491940Z 
2025-01-24T14:30:01.2492110Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2492240Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2492300Z packets_mode = 'real'
2025-01-24T14:30:01.2492300Z 
2025-01-24T14:30:01.2492350Z     @classmethod
2025-01-24T14:30:01.2492430Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2492480Z         """
2025-01-24T14:30:01.2492630Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2492670Z     
2025-01-24T14:30:01.2492730Z         Parameters
2025-01-24T14:30:01.2492770Z         ----------
2025-01-24T14:30:01.2492850Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2493010Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2493080Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2493200Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2493240Z     
2025-01-24T14:30:01.2493290Z         Returns
2025-01-24T14:30:01.2493340Z         -------
2025-01-24T14:30:01.2493410Z         SimulationPacketData
2025-01-24T14:30:01.2493460Z         """
2025-01-24T14:30:01.2493540Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2493590Z             raise ValueError(
2025-01-24T14:30:01.2493680Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2493760Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2493810Z             )
2025-01-24T14:30:01.2493890Z         # Properties common among both packet modes
2025-01-24T14:30:01.2494010Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2494070Z             "line_id"
2025-01-24T14:30:01.2494120Z         )
2025-01-24T14:30:01.2494200Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2494300Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2494360Z         time_of_simulation = (
2025-01-24T14:30:01.2494480Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2494570Z         )
2025-01-24T14:30:01.2494620Z     
2025-01-24T14:30:01.2494680Z         spectrum = (
2025-01-24T14:30:01.2494770Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2494840Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2494930Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2494970Z         )
2025-01-24T14:30:01.2495010Z     
2025-01-24T14:30:01.2495080Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2495180Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2495230Z             return cls(
2025-01-24T14:30:01.2495360Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2495500Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2495650Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2495790Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2495910Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2495980Z                 lines_df=lines_df,
2025-01-24T14:30:01.2496070Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2496200Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2496300Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2496390Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2496530Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2496620Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2496700Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2496770Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2496830Z                 simulation=sim,
2025-01-24T14:30:01.2496880Z             )
2025-01-24T14:30:01.2496940Z         else: # real packets
2025-01-24T14:30:01.2497070Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2497130Z             # which got emitted
2025-01-24T14:30:01.2497220Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2497270Z >           return cls(
2025-01-24T14:30:01.2497410Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2497550Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2497640Z                     mask
2025-01-24T14:30:01.2497690Z                 ],
2025-01-24T14:30:01.2497840Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2497890Z                     mask
2025-01-24T14:30:01.2497930Z                 ],
2025-01-24T14:30:01.2498070Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2498120Z                     mask
2025-01-24T14:30:01.2498170Z                 ],
2025-01-24T14:30:01.2498310Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2498370Z                 lines_df=lines_df,
2025-01-24T14:30:01.2498500Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2498640Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2498680Z                     mask
2025-01-24T14:30:01.2498730Z                 ],
2025-01-24T14:30:01.2498840Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2498920Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2499070Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2499200Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2499280Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2499350Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2499400Z                 simulation=sim,
2025-01-24T14:30:01.2499450Z             )
2025-01-24T14:30:01.2499710Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2499710Z 
2025-01-24T14:30:01.2499840Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2500060Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-24T14:30:01.2500070Z 
2025-01-24T14:30:01.2500270Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2500430Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2500620Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2500620Z 
2025-01-24T14:30:01.2500680Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2500770Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2500820Z         """
2025-01-24T14:30:01.2500880Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2500920Z     
2025-01-24T14:30:01.2500970Z         Parameters
2025-01-24T14:30:01.2501020Z         ----------
2025-01-24T14:30:01.2501130Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2501190Z             Simulation object.
2025-01-24T14:30:01.2501230Z     
2025-01-24T14:30:01.2501280Z         Returns
2025-01-24T14:30:01.2501330Z         -------
2025-01-24T14:30:01.2501430Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2501480Z         """
2025-01-24T14:30:01.2501580Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2501590Z 
2025-01-24T14:30:01.2501690Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2501790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2501910Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2502020Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2502190Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2502290Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2502660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2502660Z 
2025-01-24T14:30:01.2502840Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2502970Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2503020Z packets_mode = 'real'
2025-01-24T14:30:01.2503030Z 
2025-01-24T14:30:01.2503080Z     @classmethod
2025-01-24T14:30:01.2503160Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2503210Z         """
2025-01-24T14:30:01.2503360Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2503410Z     
2025-01-24T14:30:01.2503450Z         Parameters
2025-01-24T14:30:01.2503500Z         ----------
2025-01-24T14:30:01.2503570Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2503690Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2503760Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2503870Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2503920Z     
2025-01-24T14:30:01.2503960Z         Returns
2025-01-24T14:30:01.2504010Z         -------
2025-01-24T14:30:01.2504070Z         SimulationPacketData
2025-01-24T14:30:01.2504110Z         """
2025-01-24T14:30:01.2504190Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2504400Z             raise ValueError(
2025-01-24T14:30:01.2504490Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2504570Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2504610Z             )
2025-01-24T14:30:01.2504690Z         # Properties common among both packet modes
2025-01-24T14:30:01.2504820Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2504870Z             "line_id"
2025-01-24T14:30:01.2504920Z         )
2025-01-24T14:30:01.2505000Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2505100Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2505150Z         time_of_simulation = (
2025-01-24T14:30:01.2505280Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2505330Z         )
2025-01-24T14:30:01.2505370Z     
2025-01-24T14:30:01.2505420Z         spectrum = (
2025-01-24T14:30:01.2505520Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2505580Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2505680Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2505720Z         )
2025-01-24T14:30:01.2505770Z     
2025-01-24T14:30:01.2505830Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2505930Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2505980Z             return cls(
2025-01-24T14:30:01.2506100Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2506240Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2506380Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2506520Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2506630Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2506700Z                 lines_df=lines_df,
2025-01-24T14:30:01.2506800Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2506920Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2507020Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2507120Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2507270Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2507400Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2507480Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2507550Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2507610Z                 simulation=sim,
2025-01-24T14:30:01.2507650Z             )
2025-01-24T14:30:01.2507710Z         else: # real packets
2025-01-24T14:30:01.2507840Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2507900Z             # which got emitted
2025-01-24T14:30:01.2507980Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2508040Z >           return cls(
2025-01-24T14:30:01.2508170Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2508320Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2508360Z                     mask
2025-01-24T14:30:01.2508410Z                 ],
2025-01-24T14:30:01.2508560Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2508610Z                     mask
2025-01-24T14:30:01.2508660Z                 ],
2025-01-24T14:30:01.2508790Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2508890Z                     mask
2025-01-24T14:30:01.2508930Z                 ],
2025-01-24T14:30:01.2509070Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2509130Z                 lines_df=lines_df,
2025-01-24T14:30:01.2509260Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2509400Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2509450Z                     mask
2025-01-24T14:30:01.2509500Z                 ],
2025-01-24T14:30:01.2509600Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2509700Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2509850Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2509940Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2510020Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2510090Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2510150Z                 simulation=sim,
2025-01-24T14:30:01.2510190Z             )
2025-01-24T14:30:01.2510460Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2510460Z 
2025-01-24T14:30:01.2510600Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2510820Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-24T14:30:01.2510820Z 
2025-01-24T14:30:01.2511030Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2511200Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2511380Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2511380Z 
2025-01-24T14:30:01.2511450Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2511530Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2511580Z         """
2025-01-24T14:30:01.2511650Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2511690Z     
2025-01-24T14:30:01.2511740Z         Parameters
2025-01-24T14:30:01.2511780Z         ----------
2025-01-24T14:30:01.2511900Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2511950Z             Simulation object.
2025-01-24T14:30:01.2512000Z     
2025-01-24T14:30:01.2512050Z         Returns
2025-01-24T14:30:01.2512100Z         -------
2025-01-24T14:30:01.2512250Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2512310Z         """
2025-01-24T14:30:01.2512420Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2512420Z 
2025-01-24T14:30:01.2512540Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2512630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2512760Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2512870Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2513050Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2513150Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2513240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2513240Z 
2025-01-24T14:30:01.2513410Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2513540Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2513600Z packets_mode = 'real'
2025-01-24T14:30:01.2513600Z 
2025-01-24T14:30:01.2513650Z     @classmethod
2025-01-24T14:30:01.2513740Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2513830Z         """
2025-01-24T14:30:01.2513990Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2514040Z     
2025-01-24T14:30:01.2514090Z         Parameters
2025-01-24T14:30:01.2514140Z         ----------
2025-01-24T14:30:01.2514210Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2514330Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2514400Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2514510Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2514560Z     
2025-01-24T14:30:01.2514610Z         Returns
2025-01-24T14:30:01.2514660Z         -------
2025-01-24T14:30:01.2514720Z         SimulationPacketData
2025-01-24T14:30:01.2514770Z         """
2025-01-24T14:30:01.2514850Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2514900Z             raise ValueError(
2025-01-24T14:30:01.2514990Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2515080Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2515130Z             )
2025-01-24T14:30:01.2515210Z         # Properties common among both packet modes
2025-01-24T14:30:01.2515340Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2515390Z             "line_id"
2025-01-24T14:30:01.2515440Z         )
2025-01-24T14:30:01.2515520Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2515620Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2515680Z         time_of_simulation = (
2025-01-24T14:30:01.2515810Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2515850Z         )
2025-01-24T14:30:01.2516060Z     
2025-01-24T14:30:01.2516110Z         spectrum = (
2025-01-24T14:30:01.2516200Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2516260Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2516360Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2516410Z         )
2025-01-24T14:30:01.2516450Z     
2025-01-24T14:30:01.2516520Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2516620Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2516670Z             return cls(
2025-01-24T14:30:01.2516800Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2516940Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2517170Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2517320Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2517450Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2517510Z                 lines_df=lines_df,
2025-01-24T14:30:01.2517620Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2517750Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2517850Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2517940Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2518100Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2518180Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2518260Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2518330Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2518390Z                 simulation=sim,
2025-01-24T14:30:01.2518440Z             )
2025-01-24T14:30:01.2518490Z         else: # real packets
2025-01-24T14:30:01.2518630Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2518730Z             # which got emitted
2025-01-24T14:30:01.2518820Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2518870Z >           return cls(
2025-01-24T14:30:01.2519010Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2519160Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2519210Z                     mask
2025-01-24T14:30:01.2519260Z                 ],
2025-01-24T14:30:01.2519420Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2519470Z                     mask
2025-01-24T14:30:01.2519520Z                 ],
2025-01-24T14:30:01.2519660Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2519710Z                     mask
2025-01-24T14:30:01.2519760Z                 ],
2025-01-24T14:30:01.2519900Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2519970Z                 lines_df=lines_df,
2025-01-24T14:30:01.2520100Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2520260Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2520310Z                     mask
2025-01-24T14:30:01.2520370Z                 ],
2025-01-24T14:30:01.2520470Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2520560Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2520710Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2520800Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2520880Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2520950Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2521000Z                 simulation=sim,
2025-01-24T14:30:01.2521050Z             )
2025-01-24T14:30:01.2521320Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2521320Z 
2025-01-24T14:30:01.2521450Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2521660Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-24T14:30:01.2521670Z 
2025-01-24T14:30:01.2521870Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2522030Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2522490Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2522520Z 
2025-01-24T14:30:01.2522590Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2522680Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2522730Z         """
2025-01-24T14:30:01.2522800Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2522840Z     
2025-01-24T14:30:01.2522890Z         Parameters
2025-01-24T14:30:01.2522940Z         ----------
2025-01-24T14:30:01.2523050Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2523110Z             Simulation object.
2025-01-24T14:30:01.2523160Z     
2025-01-24T14:30:01.2523200Z         Returns
2025-01-24T14:30:01.2523250Z         -------
2025-01-24T14:30:01.2523350Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2523400Z         """
2025-01-24T14:30:01.2523500Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2523510Z 
2025-01-24T14:30:01.2523620Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2523710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2523840Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2524350Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2524520Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2524630Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2524720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2524720Z 
2025-01-24T14:30:01.2524900Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2525020Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2525080Z packets_mode = 'real'
2025-01-24T14:30:01.2525090Z 
2025-01-24T14:30:01.2525140Z     @classmethod
2025-01-24T14:30:01.2525220Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2525270Z         """
2025-01-24T14:30:01.2525430Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2525470Z     
2025-01-24T14:30:01.2525520Z         Parameters
2025-01-24T14:30:01.2525580Z         ----------
2025-01-24T14:30:01.2525660Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2525780Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2525840Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2525960Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2526010Z     
2025-01-24T14:30:01.2526060Z         Returns
2025-01-24T14:30:01.2526110Z         -------
2025-01-24T14:30:01.2526180Z         SimulationPacketData
2025-01-24T14:30:01.2526220Z         """
2025-01-24T14:30:01.2526310Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2526360Z             raise ValueError(
2025-01-24T14:30:01.2526450Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2526540Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2526590Z             )
2025-01-24T14:30:01.2526680Z         # Properties common among both packet modes
2025-01-24T14:30:01.2526810Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2526870Z             "line_id"
2025-01-24T14:30:01.2526920Z         )
2025-01-24T14:30:01.2527010Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2527100Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2527170Z         time_of_simulation = (
2025-01-24T14:30:01.2527290Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2527340Z         )
2025-01-24T14:30:01.2527380Z     
2025-01-24T14:30:01.2527500Z         spectrum = (
2025-01-24T14:30:01.2527590Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2527660Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2527760Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2527800Z         )
2025-01-24T14:30:01.2527850Z     
2025-01-24T14:30:01.2527910Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2528010Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2528060Z             return cls(
2025-01-24T14:30:01.2528180Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2528320Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2528460Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2528590Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2528730Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2528790Z                 lines_df=lines_df,
2025-01-24T14:30:01.2528890Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2529010Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2529500Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2529730Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2529890Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2529980Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2530060Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2530140Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2530200Z                 simulation=sim,
2025-01-24T14:30:01.2530250Z             )
2025-01-24T14:30:01.2535340Z         else: # real packets
2025-01-24T14:30:01.2535520Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2535580Z             # which got emitted
2025-01-24T14:30:01.2535670Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2535720Z >           return cls(
2025-01-24T14:30:01.2535880Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2536030Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2536090Z                     mask
2025-01-24T14:30:01.2536130Z                 ],
2025-01-24T14:30:01.2536290Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2536340Z                     mask
2025-01-24T14:30:01.2536380Z                 ],
2025-01-24T14:30:01.2536520Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2536580Z                     mask
2025-01-24T14:30:01.2536620Z                 ],
2025-01-24T14:30:01.2536760Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2536820Z                 lines_df=lines_df,
2025-01-24T14:30:01.2536960Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2537110Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2537160Z                     mask
2025-01-24T14:30:01.2537210Z                 ],
2025-01-24T14:30:01.2537310Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2537410Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2537560Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2537640Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2538100Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2538180Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2538240Z                 simulation=sim,
2025-01-24T14:30:01.2538290Z             )
2025-01-24T14:30:01.2538570Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2538580Z 
2025-01-24T14:30:01.2538730Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2538950Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-24T14:30:01.2538960Z 
2025-01-24T14:30:01.2539170Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2539330Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2539510Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2539520Z 
2025-01-24T14:30:01.2539590Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2539680Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2539730Z         """
2025-01-24T14:30:01.2539790Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2539840Z     
2025-01-24T14:30:01.2540010Z         Parameters
2025-01-24T14:30:01.2540070Z         ----------
2025-01-24T14:30:01.2540180Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2540240Z             Simulation object.
2025-01-24T14:30:01.2540280Z     
2025-01-24T14:30:01.2540330Z         Returns
2025-01-24T14:30:01.2540380Z         -------
2025-01-24T14:30:01.2540480Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2540530Z         """
2025-01-24T14:30:01.2540640Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2540640Z 
2025-01-24T14:30:01.2540750Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2540850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2540980Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2541090Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2541270Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2541380Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2541470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2541470Z 
2025-01-24T14:30:01.2541640Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2541760Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2541820Z packets_mode = 'real'
2025-01-24T14:30:01.2541820Z 
2025-01-24T14:30:01.2541870Z     @classmethod
2025-01-24T14:30:01.2541950Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2542000Z         """
2025-01-24T14:30:01.2542160Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2542200Z     
2025-01-24T14:30:01.2542260Z         Parameters
2025-01-24T14:30:01.2542310Z         ----------
2025-01-24T14:30:01.2542380Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2542500Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2542570Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2542680Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2542730Z     
2025-01-24T14:30:01.2542770Z         Returns
2025-01-24T14:30:01.2542820Z         -------
2025-01-24T14:30:01.2542880Z         SimulationPacketData
2025-01-24T14:30:01.2542920Z         """
2025-01-24T14:30:01.2543000Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2543060Z             raise ValueError(
2025-01-24T14:30:01.2543220Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2543300Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2543350Z             )
2025-01-24T14:30:01.2543430Z         # Properties common among both packet modes
2025-01-24T14:30:01.2543550Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2543610Z             "line_id"
2025-01-24T14:30:01.2543650Z         )
2025-01-24T14:30:01.2543740Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2543830Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2543890Z         time_of_simulation = (
2025-01-24T14:30:01.2544010Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2544060Z         )
2025-01-24T14:30:01.2544100Z     
2025-01-24T14:30:01.2544150Z         spectrum = (
2025-01-24T14:30:01.2544240Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2544300Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2544390Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2544440Z         )
2025-01-24T14:30:01.2544490Z     
2025-01-24T14:30:01.2544550Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2544650Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2544750Z             return cls(
2025-01-24T14:30:01.2544880Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2545020Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2545160Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2545300Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2545420Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2545480Z                 lines_df=lines_df,
2025-01-24T14:30:01.2545590Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2545710Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2545820Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2545910Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2546060Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2546150Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2546230Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2546300Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2546350Z                 simulation=sim,
2025-01-24T14:30:01.2546410Z             )
2025-01-24T14:30:01.2546460Z         else: # real packets
2025-01-24T14:30:01.2546600Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2546660Z             # which got emitted
2025-01-24T14:30:01.2546750Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2546810Z >           return cls(
2025-01-24T14:30:01.2546950Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2547100Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2547150Z                     mask
2025-01-24T14:30:01.2547200Z                 ],
2025-01-24T14:30:01.2547350Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2547400Z                     mask
2025-01-24T14:30:01.2547440Z                 ],
2025-01-24T14:30:01.2547580Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2547630Z                     mask
2025-01-24T14:30:01.2547680Z                 ],
2025-01-24T14:30:01.2548060Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2548140Z                 lines_df=lines_df,
2025-01-24T14:30:01.2548270Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2548410Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2548470Z                     mask
2025-01-24T14:30:01.2548510Z                 ],
2025-01-24T14:30:01.2548620Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2548700Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2548860Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2548940Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2549020Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2549090Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2549150Z                 simulation=sim,
2025-01-24T14:30:01.2549200Z             )
2025-01-24T14:30:01.2549470Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2549470Z 
2025-01-24T14:30:01.2549610Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2550080Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-24T14:30:01.2550080Z 
2025-01-24T14:30:01.2550290Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2550460Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2550640Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2550650Z 
2025-01-24T14:30:01.2550710Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2550800Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2550850Z         """
2025-01-24T14:30:01.2550910Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2550960Z     
2025-01-24T14:30:01.2551010Z         Parameters
2025-01-24T14:30:01.2551070Z         ----------
2025-01-24T14:30:01.2551180Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2551240Z             Simulation object.
2025-01-24T14:30:01.2551290Z     
2025-01-24T14:30:01.2551330Z         Returns
2025-01-24T14:30:01.2551380Z         -------
2025-01-24T14:30:01.2551480Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2551530Z         """
2025-01-24T14:30:01.2551640Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2551640Z 
2025-01-24T14:30:01.2551750Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2551850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2551970Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2552090Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2552260Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2552370Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2552460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2552470Z 
2025-01-24T14:30:01.2552640Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2552760Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2552820Z packets_mode = 'real'
2025-01-24T14:30:01.2552820Z 
2025-01-24T14:30:01.2552870Z     @classmethod
2025-01-24T14:30:01.2552960Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2553000Z         """
2025-01-24T14:30:01.2553160Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2553280Z     
2025-01-24T14:30:01.2553330Z         Parameters
2025-01-24T14:30:01.2553380Z         ----------
2025-01-24T14:30:01.2553460Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2553570Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2553640Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2553750Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2553800Z     
2025-01-24T14:30:01.2553840Z         Returns
2025-01-24T14:30:01.2553890Z         -------
2025-01-24T14:30:01.2553950Z         SimulationPacketData
2025-01-24T14:30:01.2553990Z         """
2025-01-24T14:30:01.2554070Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2554130Z             raise ValueError(
2025-01-24T14:30:01.2554220Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2554300Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2554350Z             )
2025-01-24T14:30:01.2554430Z         # Properties common among both packet modes
2025-01-24T14:30:01.2554550Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2554600Z             "line_id"
2025-01-24T14:30:01.2554650Z         )
2025-01-24T14:30:01.2554780Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2554880Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2554940Z         time_of_simulation = (
2025-01-24T14:30:01.2555070Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2555110Z         )
2025-01-24T14:30:01.2555160Z     
2025-01-24T14:30:01.2555210Z         spectrum = (
2025-01-24T14:30:01.2555300Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2555360Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2555450Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2555500Z         )
2025-01-24T14:30:01.2555540Z     
2025-01-24T14:30:01.2555610Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2555710Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2555760Z             return cls(
2025-01-24T14:30:01.2555880Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2556190Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2556340Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2556480Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2556600Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2556650Z                 lines_df=lines_df,
2025-01-24T14:30:01.2556750Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2556880Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2556980Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2557070Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2557220Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2557310Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2557400Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2557470Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2557520Z                 simulation=sim,
2025-01-24T14:30:01.2557570Z             )
2025-01-24T14:30:01.2557620Z         else: # real packets
2025-01-24T14:30:01.2557750Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2557810Z             # which got emitted
2025-01-24T14:30:01.2557890Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2558040Z >           return cls(
2025-01-24T14:30:01.2558190Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2558340Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2558380Z                     mask
2025-01-24T14:30:01.2558430Z                 ],
2025-01-24T14:30:01.2558580Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2558630Z                     mask
2025-01-24T14:30:01.2558680Z                 ],
2025-01-24T14:30:01.2558820Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2558870Z                     mask
2025-01-24T14:30:01.2558920Z                 ],
2025-01-24T14:30:01.2559050Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2559110Z                 lines_df=lines_df,
2025-01-24T14:30:01.2559250Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2559390Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2559430Z                     mask
2025-01-24T14:30:01.2559480Z                 ],
2025-01-24T14:30:01.2559580Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2559740Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2559890Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2559980Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2560050Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2560130Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2560190Z                 simulation=sim,
2025-01-24T14:30:01.2560240Z             )
2025-01-24T14:30:01.2560510Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2560510Z 
2025-01-24T14:30:01.2560650Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2560870Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-24T14:30:01.2560880Z 
2025-01-24T14:30:01.2561080Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2561250Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2561430Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2561440Z 
2025-01-24T14:30:01.2561510Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2561600Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2561640Z         """
2025-01-24T14:30:01.2562080Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2562200Z     
2025-01-24T14:30:01.2562280Z         Parameters
2025-01-24T14:30:01.2562340Z         ----------
2025-01-24T14:30:01.2562480Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2562550Z             Simulation object.
2025-01-24T14:30:01.2562600Z     
2025-01-24T14:30:01.2562650Z         Returns
2025-01-24T14:30:01.2562710Z         -------
2025-01-24T14:30:01.2562810Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2562860Z         """
2025-01-24T14:30:01.2562970Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2562980Z 
2025-01-24T14:30:01.2563100Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2563200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2563330Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2563450Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2564600Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2564730Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2564830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2564840Z 
2025-01-24T14:30:01.2565020Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2565150Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2565210Z packets_mode = 'real'
2025-01-24T14:30:01.2565210Z 
2025-01-24T14:30:01.2565260Z     @classmethod
2025-01-24T14:30:01.2565350Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2565390Z         """
2025-01-24T14:30:01.2565550Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2565600Z     
2025-01-24T14:30:01.2565660Z         Parameters
2025-01-24T14:30:01.2565710Z         ----------
2025-01-24T14:30:01.2565790Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2565910Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2565980Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2566090Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2566220Z     
2025-01-24T14:30:01.2566270Z         Returns
2025-01-24T14:30:01.2566320Z         -------
2025-01-24T14:30:01.2566380Z         SimulationPacketData
2025-01-24T14:30:01.2566420Z         """
2025-01-24T14:30:01.2566510Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2566570Z             raise ValueError(
2025-01-24T14:30:01.2566660Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2566740Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2566790Z             )
2025-01-24T14:30:01.2566870Z         # Properties common among both packet modes
2025-01-24T14:30:01.2567000Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2567050Z             "line_id"
2025-01-24T14:30:01.2567100Z         )
2025-01-24T14:30:01.2567190Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2567280Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2567350Z         time_of_simulation = (
2025-01-24T14:30:01.2567470Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2567520Z         )
2025-01-24T14:30:01.2567570Z     
2025-01-24T14:30:01.2567620Z         spectrum = (
2025-01-24T14:30:01.2567710Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2567770Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2567860Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2567910Z         )
2025-01-24T14:30:01.2567960Z     
2025-01-24T14:30:01.2568020Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2568130Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2568180Z             return cls(
2025-01-24T14:30:01.2568320Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2568460Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2568600Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2568740Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2568870Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2568930Z                 lines_df=lines_df,
2025-01-24T14:30:01.2569030Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2569160Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2569260Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2569800Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2569970Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2570060Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2570140Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2570220Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2570280Z                 simulation=sim,
2025-01-24T14:30:01.2570320Z             )
2025-01-24T14:30:01.2570380Z         else: # real packets
2025-01-24T14:30:01.2570520Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2570580Z             # which got emitted
2025-01-24T14:30:01.2570670Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2570720Z >           return cls(
2025-01-24T14:30:01.2570860Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2571010Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2571070Z                     mask
2025-01-24T14:30:01.2571110Z                 ],
2025-01-24T14:30:01.2571260Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2571550Z                     mask
2025-01-24T14:30:01.2571600Z                 ],
2025-01-24T14:30:01.2571730Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2571790Z                     mask
2025-01-24T14:30:01.2571830Z                 ],
2025-01-24T14:30:01.2571970Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2572030Z                 lines_df=lines_df,
2025-01-24T14:30:01.2572160Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2572310Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2572360Z                     mask
2025-01-24T14:30:01.2572420Z                 ],
2025-01-24T14:30:01.2572520Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2572620Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2572780Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2572870Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2572950Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2573020Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2573080Z                 simulation=sim,
2025-01-24T14:30:01.2573130Z             )
2025-01-24T14:30:01.2573400Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2573410Z 
2025-01-24T14:30:01.2573550Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2573780Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-24T14:30:01.2573780Z 
2025-01-24T14:30:01.2574000Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2574170Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2574350Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2574360Z 
2025-01-24T14:30:01.2574430Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2574520Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2574560Z         """
2025-01-24T14:30:01.2574620Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2574670Z     
2025-01-24T14:30:01.2574720Z         Parameters
2025-01-24T14:30:01.2574760Z         ----------
2025-01-24T14:30:01.2574920Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2574980Z             Simulation object.
2025-01-24T14:30:01.2575030Z     
2025-01-24T14:30:01.2575070Z         Returns
2025-01-24T14:30:01.2575120Z         -------
2025-01-24T14:30:01.2575220Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2575270Z         """
2025-01-24T14:30:01.2575380Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2575380Z 
2025-01-24T14:30:01.2575500Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2575590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2575710Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2575820Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2575990Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2576100Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2576190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2576190Z 
2025-01-24T14:30:01.2576360Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2576490Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2576600Z packets_mode = 'real'
2025-01-24T14:30:01.2576600Z 
2025-01-24T14:30:01.2576650Z     @classmethod
2025-01-24T14:30:01.2576730Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2576780Z         """
2025-01-24T14:30:01.2576930Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2576980Z     
2025-01-24T14:30:01.2577030Z         Parameters
2025-01-24T14:30:01.2577080Z         ----------
2025-01-24T14:30:01.2577150Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2577270Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2577340Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2577450Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2577490Z     
2025-01-24T14:30:01.2577540Z         Returns
2025-01-24T14:30:01.2577580Z         -------
2025-01-24T14:30:01.2577650Z         SimulationPacketData
2025-01-24T14:30:01.2577690Z         """
2025-01-24T14:30:01.2577780Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2577840Z             raise ValueError(
2025-01-24T14:30:01.2577920Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2578010Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2578050Z             )
2025-01-24T14:30:01.2578130Z         # Properties common among both packet modes
2025-01-24T14:30:01.2578260Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2578300Z             "line_id"
2025-01-24T14:30:01.2578350Z         )
2025-01-24T14:30:01.2578430Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2578520Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2578590Z         time_of_simulation = (
2025-01-24T14:30:01.2578710Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2578760Z         )
2025-01-24T14:30:01.2578800Z     
2025-01-24T14:30:01.2578860Z         spectrum = (
2025-01-24T14:30:01.2578940Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2579010Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2579100Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2579140Z         )
2025-01-24T14:30:01.2579190Z     
2025-01-24T14:30:01.2579250Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2579350Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2579400Z             return cls(
2025-01-24T14:30:01.2579570Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2579720Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2579860Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2580030Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2580160Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2580230Z                 lines_df=lines_df,
2025-01-24T14:30:01.2580330Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2580460Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2580560Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2580650Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2580800Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2580890Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2580970Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2581040Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2581090Z                 simulation=sim,
2025-01-24T14:30:01.2581220Z             )
2025-01-24T14:30:01.2581280Z         else: # real packets
2025-01-24T14:30:01.2581410Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2581470Z             # which got emitted
2025-01-24T14:30:01.2581550Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2581600Z >           return cls(
2025-01-24T14:30:01.2581740Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2581880Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2581930Z                     mask
2025-01-24T14:30:01.2581980Z                 ],
2025-01-24T14:30:01.2582130Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2582180Z                     mask
2025-01-24T14:30:01.2582230Z                 ],
2025-01-24T14:30:01.2582360Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2582410Z                     mask
2025-01-24T14:30:01.2582460Z                 ],
2025-01-24T14:30:01.2582600Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2582650Z                 lines_df=lines_df,
2025-01-24T14:30:01.2582790Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2582930Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2582980Z                     mask
2025-01-24T14:30:01.2583020Z                 ],
2025-01-24T14:30:01.2583130Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2583220Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2583370Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2583450Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2583540Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2583610Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2583670Z                 simulation=sim,
2025-01-24T14:30:01.2583720Z             )
2025-01-24T14:30:01.2583990Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2583990Z 
2025-01-24T14:30:01.2584120Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2584340Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-24T14:30:01.2584390Z 
2025-01-24T14:30:01.2584610Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2589520Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2589770Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2589780Z 
2025-01-24T14:30:01.2589850Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2589950Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2589990Z         """
2025-01-24T14:30:01.2590060Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2590110Z     
2025-01-24T14:30:01.2590160Z         Parameters
2025-01-24T14:30:01.2590210Z         ----------
2025-01-24T14:30:01.2590330Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2590380Z             Simulation object.
2025-01-24T14:30:01.2590430Z     
2025-01-24T14:30:01.2590480Z         Returns
2025-01-24T14:30:01.2590530Z         -------
2025-01-24T14:30:01.2590630Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2590680Z         """
2025-01-24T14:30:01.2590780Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2590790Z 
2025-01-24T14:30:01.2591160Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2591260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2591380Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2591510Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2591680Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2591790Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2591880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2591880Z 
2025-01-24T14:30:01.2592060Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2592190Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2592240Z packets_mode = 'real'
2025-01-24T14:30:01.2592250Z 
2025-01-24T14:30:01.2592290Z     @classmethod
2025-01-24T14:30:01.2592390Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2592440Z         """
2025-01-24T14:30:01.2592600Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2592650Z     
2025-01-24T14:30:01.2592700Z         Parameters
2025-01-24T14:30:01.2592750Z         ----------
2025-01-24T14:30:01.2592820Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2592940Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2593010Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2593130Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2593180Z     
2025-01-24T14:30:01.2593230Z         Returns
2025-01-24T14:30:01.2593290Z         -------
2025-01-24T14:30:01.2593350Z         SimulationPacketData
2025-01-24T14:30:01.2593400Z         """
2025-01-24T14:30:01.2593490Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2593550Z             raise ValueError(
2025-01-24T14:30:01.2593650Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2593730Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2593780Z             )
2025-01-24T14:30:01.2593870Z         # Properties common among both packet modes
2025-01-24T14:30:01.2594000Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2594050Z             "line_id"
2025-01-24T14:30:01.2594100Z         )
2025-01-24T14:30:01.2594180Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2594290Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2594500Z         time_of_simulation = (
2025-01-24T14:30:01.2594620Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2594670Z         )
2025-01-24T14:30:01.2594720Z     
2025-01-24T14:30:01.2594770Z         spectrum = (
2025-01-24T14:30:01.2594860Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2594930Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2595030Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2595070Z         )
2025-01-24T14:30:01.2595120Z     
2025-01-24T14:30:01.2595180Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2595280Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2595340Z             return cls(
2025-01-24T14:30:01.2595460Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2595600Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2595750Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2595890Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2596020Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2596450Z                 lines_df=lines_df,
2025-01-24T14:30:01.2596560Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2596700Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2596810Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2596890Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2597050Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2597140Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2597220Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2597290Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2597350Z                 simulation=sim,
2025-01-24T14:30:01.2597400Z             )
2025-01-24T14:30:01.2597460Z         else: # real packets
2025-01-24T14:30:01.2597590Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2597650Z             # which got emitted
2025-01-24T14:30:01.2597740Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2597800Z >           return cls(
2025-01-24T14:30:01.2597940Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2598090Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2598150Z                     mask
2025-01-24T14:30:01.2598190Z                 ],
2025-01-24T14:30:01.2598350Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2598400Z                     mask
2025-01-24T14:30:01.2598450Z                 ],
2025-01-24T14:30:01.2598590Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2598630Z                     mask
2025-01-24T14:30:01.2598690Z                 ],
2025-01-24T14:30:01.2598820Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2598880Z                 lines_df=lines_df,
2025-01-24T14:30:01.2599010Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2599150Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2599200Z                     mask
2025-01-24T14:30:01.2599250Z                 ],
2025-01-24T14:30:01.2599350Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2599450Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2599670Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2599750Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2599840Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2599910Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2599970Z                 simulation=sim,
2025-01-24T14:30:01.2600020Z             )
2025-01-24T14:30:01.2600280Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2600280Z 
2025-01-24T14:30:01.2600410Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2600630Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-24T14:30:01.2600640Z 
2025-01-24T14:30:01.2600840Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2601000Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2601190Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2601190Z 
2025-01-24T14:30:01.2601250Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2601400Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2601440Z         """
2025-01-24T14:30:01.2601510Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2601560Z     
2025-01-24T14:30:01.2601610Z         Parameters
2025-01-24T14:30:01.2601650Z         ----------
2025-01-24T14:30:01.2601770Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2601830Z             Simulation object.
2025-01-24T14:30:01.2601870Z     
2025-01-24T14:30:01.2601920Z         Returns
2025-01-24T14:30:01.2601960Z         -------
2025-01-24T14:30:01.2602060Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2602110Z         """
2025-01-24T14:30:01.2602220Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2602220Z 
2025-01-24T14:30:01.2602330Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2602420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2602540Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2602660Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2602830Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2602930Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2603020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2603020Z 
2025-01-24T14:30:01.2603190Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2603320Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2603370Z packets_mode = 'real'
2025-01-24T14:30:01.2603370Z 
2025-01-24T14:30:01.2603420Z     @classmethod
2025-01-24T14:30:01.2603500Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2603550Z         """
2025-01-24T14:30:01.2603700Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2603750Z     
2025-01-24T14:30:01.2603800Z         Parameters
2025-01-24T14:30:01.2603850Z         ----------
2025-01-24T14:30:01.2603920Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2604030Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2604100Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2604210Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2604250Z     
2025-01-24T14:30:01.2604300Z         Returns
2025-01-24T14:30:01.2604340Z         -------
2025-01-24T14:30:01.2604450Z         SimulationPacketData
2025-01-24T14:30:01.2604500Z         """
2025-01-24T14:30:01.2604580Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2604640Z             raise ValueError(
2025-01-24T14:30:01.2604730Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2604810Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2604860Z             )
2025-01-24T14:30:01.2604940Z         # Properties common among both packet modes
2025-01-24T14:30:01.2605060Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2605110Z             "line_id"
2025-01-24T14:30:01.2605160Z         )
2025-01-24T14:30:01.2605240Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2605330Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2605390Z         time_of_simulation = (
2025-01-24T14:30:01.2605520Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2605560Z         )
2025-01-24T14:30:01.2605610Z     
2025-01-24T14:30:01.2605660Z         spectrum = (
2025-01-24T14:30:01.2605750Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2605810Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2605910Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2605990Z         )
2025-01-24T14:30:01.2606040Z     
2025-01-24T14:30:01.2606100Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2606200Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2606250Z             return cls(
2025-01-24T14:30:01.2606380Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2606520Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2606660Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2607040Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2607170Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2607230Z                 lines_df=lines_df,
2025-01-24T14:30:01.2607320Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2607450Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2607560Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2607650Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2607800Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2607880Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2608670Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2608990Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2609180Z                 simulation=sim,
2025-01-24T14:30:01.2609330Z             )
2025-01-24T14:30:01.2609500Z         else: # real packets
2025-01-24T14:30:01.2609870Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2610050Z             # which got emitted
2025-01-24T14:30:01.2610290Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2618430Z >           return cls(
2025-01-24T14:30:01.2618830Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2619230Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2619390Z                     mask
2025-01-24T14:30:01.2619530Z                 ],
2025-01-24T14:30:01.2619940Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2620180Z                     mask
2025-01-24T14:30:01.2633770Z                 ],
2025-01-24T14:30:01.2634860Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2635030Z                     mask
2025-01-24T14:30:01.2635170Z                 ],
2025-01-24T14:30:01.2635540Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2635720Z                 lines_df=lines_df,
2025-01-24T14:30:01.2636070Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2636460Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2636610Z                     mask
2025-01-24T14:30:01.2636760Z                 ],
2025-01-24T14:30:01.2637040Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2637290Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2637690Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2637930Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2638140Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2638350Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2638510Z                 simulation=sim,
2025-01-24T14:30:01.2638670Z             )
2025-01-24T14:30:01.2639590Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2639600Z 
2025-01-24T14:30:01.2639970Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2640550Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-24T14:30:01.2640570Z 
2025-01-24T14:30:01.2641110Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2641550Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2642050Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2642060Z 
2025-01-24T14:30:01.2642250Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2642490Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2642640Z         """
2025-01-24T14:30:01.2642830Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2642980Z     
2025-01-24T14:30:01.2643130Z         Parameters
2025-01-24T14:30:01.2643290Z         ----------
2025-01-24T14:30:01.2643590Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2643770Z             Simulation object.
2025-01-24T14:30:01.2643920Z     
2025-01-24T14:30:01.2644070Z         Returns
2025-01-24T14:30:01.2644220Z         -------
2025-01-24T14:30:01.2644500Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2644660Z         """
2025-01-24T14:30:01.2644940Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2644950Z 
2025-01-24T14:30:01.2645340Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2645580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2645930Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2646240Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2646720Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2647000Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2647240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2647250Z 
2025-01-24T14:30:01.2647720Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2648050Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2648390Z packets_mode = 'real'
2025-01-24T14:30:01.2648390Z 
2025-01-24T14:30:01.2649130Z     @classmethod
2025-01-24T14:30:01.2649390Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2649590Z         """
2025-01-24T14:30:01.2650020Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2650170Z     
2025-01-24T14:30:01.2650340Z         Parameters
2025-01-24T14:30:01.2650510Z         ----------
2025-01-24T14:30:01.2650720Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2651050Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2651250Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2651560Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2651710Z     
2025-01-24T14:30:01.2651870Z         Returns
2025-01-24T14:30:01.2652020Z         -------
2025-01-24T14:30:01.2652210Z         SimulationPacketData
2025-01-24T14:30:01.2652350Z         """
2025-01-24T14:30:01.2652580Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2652750Z             raise ValueError(
2025-01-24T14:30:01.2653010Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2653220Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2653370Z             )
2025-01-24T14:30:01.2653600Z         # Properties common among both packet modes
2025-01-24T14:30:01.2654680Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2654840Z             "line_id"
2025-01-24T14:30:01.2654980Z         )
2025-01-24T14:30:01.2655220Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2655470Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2655660Z         time_of_simulation = (
2025-01-24T14:30:01.2655990Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2656150Z         )
2025-01-24T14:30:01.2656290Z     
2025-01-24T14:30:01.2656450Z         spectrum = (
2025-01-24T14:30:01.2656700Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2656890Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2657140Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2657290Z         )
2025-01-24T14:30:01.2657430Z     
2025-01-24T14:30:01.2657620Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2657880Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2658040Z             return cls(
2025-01-24T14:30:01.2658380Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2658740Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2659120Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2659470Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2659810Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2659970Z                 lines_df=lines_df,
2025-01-24T14:30:01.2660230Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2660560Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2660850Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2661080Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2661490Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2661730Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2661950Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2662170Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2662340Z                 simulation=sim,
2025-01-24T14:30:01.2662490Z             )
2025-01-24T14:30:01.2662660Z         else: # real packets
2025-01-24T14:30:01.2663180Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2663360Z             # which got emitted
2025-01-24T14:30:01.2663620Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2663780Z >           return cls(
2025-01-24T14:30:01.2664170Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2664560Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2664720Z                     mask
2025-01-24T14:30:01.2664880Z                 ],
2025-01-24T14:30:01.2665290Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2665450Z                     mask
2025-01-24T14:30:01.2665600Z                 ],
2025-01-24T14:30:01.2665980Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2666130Z                     mask
2025-01-24T14:30:01.2666290Z                 ],
2025-01-24T14:30:01.2666640Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2666810Z                 lines_df=lines_df,
2025-01-24T14:30:01.2667150Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2667650Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2667800Z                     mask
2025-01-24T14:30:01.2667950Z                 ],
2025-01-24T14:30:01.2668220Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2668460Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2668850Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2669090Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2669290Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2669500Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2669660Z                 simulation=sim,
2025-01-24T14:30:01.2669810Z             )
2025-01-24T14:30:01.2670510Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2670530Z 
2025-01-24T14:30:01.2670880Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2671460Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-24T14:30:01.2671470Z 
2025-01-24T14:30:01.2672000Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2672430Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2672910Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2672930Z 
2025-01-24T14:30:01.2673120Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2673360Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2673500Z         """
2025-01-24T14:30:01.2673690Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2673830Z     
2025-01-24T14:30:01.2673990Z         Parameters
2025-01-24T14:30:01.2674160Z         ----------
2025-01-24T14:30:01.2674450Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2674610Z             Simulation object.
2025-01-24T14:30:01.2674760Z     
2025-01-24T14:30:01.2674910Z         Returns
2025-01-24T14:30:01.2675060Z         -------
2025-01-24T14:30:01.2675340Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2675500Z         """
2025-01-24T14:30:01.2675770Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2675780Z 
2025-01-24T14:30:01.2676090Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2676450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2676800Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2677110Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2677570Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2677850Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2678080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2678090Z 
2025-01-24T14:30:01.2678540Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2678880Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2679050Z packets_mode = 'real'
2025-01-24T14:30:01.2679060Z 
2025-01-24T14:30:01.2679220Z     @classmethod
2025-01-24T14:30:01.2679450Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2679610Z         """
2025-01-24T14:30:01.2680040Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2680190Z     
2025-01-24T14:30:01.2680350Z         Parameters
2025-01-24T14:30:01.2680500Z         ----------
2025-01-24T14:30:01.2680710Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2681150Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2681340Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2681640Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2681780Z     
2025-01-24T14:30:01.2681930Z         Returns
2025-01-24T14:30:01.2682080Z         -------
2025-01-24T14:30:01.2682270Z         SimulationPacketData
2025-01-24T14:30:01.2682410Z         """
2025-01-24T14:30:01.2682640Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2682810Z             raise ValueError(
2025-01-24T14:30:01.2683050Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2683280Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2683420Z             )
2025-01-24T14:30:01.2683650Z         # Properties common among both packet modes
2025-01-24T14:30:01.2683990Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2684150Z             "line_id"
2025-01-24T14:30:01.2684300Z         )
2025-01-24T14:30:01.2684530Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2684790Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2684970Z         time_of_simulation = (
2025-01-24T14:30:01.2685290Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2685430Z         )
2025-01-24T14:30:01.2685570Z     
2025-01-24T14:30:01.2685740Z         spectrum = (
2025-01-24T14:30:01.2685980Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2686180Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2686440Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2686590Z         )
2025-01-24T14:30:01.2686730Z     
2025-01-24T14:30:01.2686910Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2687190Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2687350Z             return cls(
2025-01-24T14:30:01.2687690Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2688190Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2694940Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2695420Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2695760Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2695930Z                 lines_df=lines_df,
2025-01-24T14:30:01.2696570Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2696920Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2697190Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2697430Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2697840Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2698070Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2698270Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2698480Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2698640Z                 simulation=sim,
2025-01-24T14:30:01.2698790Z             )
2025-01-24T14:30:01.2698950Z         else: # real packets
2025-01-24T14:30:01.2699300Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2699470Z             # which got emitted
2025-01-24T14:30:01.2699700Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2699860Z >           return cls(
2025-01-24T14:30:01.2700230Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2700620Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2700900Z                     mask
2025-01-24T14:30:01.2701050Z                 ],
2025-01-24T14:30:01.2701450Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2701610Z                     mask
2025-01-24T14:30:01.2701750Z                 ],
2025-01-24T14:30:01.2702110Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2702260Z                     mask
2025-01-24T14:30:01.2702410Z                 ],
2025-01-24T14:30:01.2702760Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2702940Z                 lines_df=lines_df,
2025-01-24T14:30:01.2703300Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2703670Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2703830Z                     mask
2025-01-24T14:30:01.2703970Z                 ],
2025-01-24T14:30:01.2704250Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2704500Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2704900Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2705120Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2705340Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2705530Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2705700Z                 simulation=sim,
2025-01-24T14:30:01.2705850Z             )
2025-01-24T14:30:01.2706560Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2706570Z 
2025-01-24T14:30:01.2706930Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2707420Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] _
2025-01-24T14:30:01.2707430Z 
2025-01-24T14:30:01.2707970Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2708390Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2708880Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2708890Z 
2025-01-24T14:30:01.2709080Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2709310Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2709460Z         """
2025-01-24T14:30:01.2709920Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2710070Z     
2025-01-24T14:30:01.2710220Z         Parameters
2025-01-24T14:30:01.2710380Z         ----------
2025-01-24T14:30:01.2710830Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2711010Z             Simulation object.
2025-01-24T14:30:01.2711160Z     
2025-01-24T14:30:01.2711310Z         Returns
2025-01-24T14:30:01.2711460Z         -------
2025-01-24T14:30:01.2711930Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2712050Z         """
2025-01-24T14:30:01.2712190Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2712190Z 
2025-01-24T14:30:01.2712310Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2712410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2712550Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2712690Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2712870Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2712980Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2713070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2713600Z 
2025-01-24T14:30:01.2713790Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2713920Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2713980Z packets_mode = 'real'
2025-01-24T14:30:01.2713980Z 
2025-01-24T14:30:01.2714030Z     @classmethod
2025-01-24T14:30:01.2714120Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2714160Z         """
2025-01-24T14:30:01.2714320Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2714370Z     
2025-01-24T14:30:01.2714420Z         Parameters
2025-01-24T14:30:01.2719840Z         ----------
2025-01-24T14:30:01.2719990Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2720120Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2720190Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2720310Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2720360Z     
2025-01-24T14:30:01.2720410Z         Returns
2025-01-24T14:30:01.2720460Z         -------
2025-01-24T14:30:01.2720520Z         SimulationPacketData
2025-01-24T14:30:01.2720570Z         """
2025-01-24T14:30:01.2720650Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2720710Z             raise ValueError(
2025-01-24T14:30:01.2720800Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2720890Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2720930Z             )
2025-01-24T14:30:01.2721020Z         # Properties common among both packet modes
2025-01-24T14:30:01.2721150Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2721200Z             "line_id"
2025-01-24T14:30:01.2721240Z         )
2025-01-24T14:30:01.2721330Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2721430Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2721490Z         time_of_simulation = (
2025-01-24T14:30:01.2721610Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2721660Z         )
2025-01-24T14:30:01.2721700Z     
2025-01-24T14:30:01.2721750Z         spectrum = (
2025-01-24T14:30:01.2721840Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2721910Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2722000Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2722040Z         )
2025-01-24T14:30:01.2722090Z     
2025-01-24T14:30:01.2722450Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2722550Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2722610Z             return cls(
2025-01-24T14:30:01.2722730Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2722880Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2723020Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2723160Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2723290Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2723350Z                 lines_df=lines_df,
2025-01-24T14:30:01.2723460Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2723580Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2723690Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2723790Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2723940Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2724030Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2724230Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2724300Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2725750Z                 simulation=sim,
2025-01-24T14:30:01.2725830Z             )
2025-01-24T14:30:01.2725900Z         else: # real packets
2025-01-24T14:30:01.2726040Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2726100Z             # which got emitted
2025-01-24T14:30:01.2726200Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2726260Z >           return cls(
2025-01-24T14:30:01.2726420Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2726570Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2726630Z                     mask
2025-01-24T14:30:01.2726680Z                 ],
2025-01-24T14:30:01.2726840Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2726890Z                     mask
2025-01-24T14:30:01.2726930Z                 ],
2025-01-24T14:30:01.2727080Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2727140Z                     mask
2025-01-24T14:30:01.2727200Z                 ],
2025-01-24T14:30:01.2727340Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2727400Z                 lines_df=lines_df,
2025-01-24T14:30:01.2727530Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2727690Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2727760Z                     mask
2025-01-24T14:30:01.2727830Z                 ],
2025-01-24T14:30:01.2727940Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2728040Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2728190Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2728280Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2728370Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2728440Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2728500Z                 simulation=sim,
2025-01-24T14:30:01.2728550Z             )
2025-01-24T14:30:01.2728830Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2729060Z 
2025-01-24T14:30:01.2729220Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2729410Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] _
2025-01-24T14:30:01.2729410Z 
2025-01-24T14:30:01.2729810Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2729980Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2730170Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2730180Z 
2025-01-24T14:30:01.2730250Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2730550Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2730630Z         """
2025-01-24T14:30:01.2730690Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2730740Z     
2025-01-24T14:30:01.2730790Z         Parameters
2025-01-24T14:30:01.2730840Z         ----------
2025-01-24T14:30:01.2730960Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2731040Z             Simulation object.
2025-01-24T14:30:01.2731090Z     
2025-01-24T14:30:01.2731140Z         Returns
2025-01-24T14:30:01.2731200Z         -------
2025-01-24T14:30:01.2731310Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2731490Z         """
2025-01-24T14:30:01.2731600Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2731610Z 
2025-01-24T14:30:01.2731740Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2731840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2731970Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2732420Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2732630Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2732760Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2732860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2732860Z 
2025-01-24T14:30:01.2733030Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2733160Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2733210Z packets_mode = 'real'
2025-01-24T14:30:01.2733210Z 
2025-01-24T14:30:01.2733490Z     @classmethod
2025-01-24T14:30:01.2733590Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2733640Z         """
2025-01-24T14:30:01.2733790Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2733840Z     
2025-01-24T14:30:01.2733890Z         Parameters
2025-01-24T14:30:01.2733940Z         ----------
2025-01-24T14:30:01.2734010Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2734160Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2734230Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2734390Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2734440Z     
2025-01-24T14:30:01.2734490Z         Returns
2025-01-24T14:30:01.2734540Z         -------
2025-01-24T14:30:01.2734600Z         SimulationPacketData
2025-01-24T14:30:01.2734650Z         """
2025-01-24T14:30:01.2734730Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2734780Z             raise ValueError(
2025-01-24T14:30:01.2734870Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2734960Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2735000Z             )
2025-01-24T14:30:01.2735080Z         # Properties common among both packet modes
2025-01-24T14:30:01.2735210Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2735370Z             "line_id"
2025-01-24T14:30:01.2735420Z         )
2025-01-24T14:30:01.2735510Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2735610Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2735670Z         time_of_simulation = (
2025-01-24T14:30:01.2735800Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2735850Z         )
2025-01-24T14:30:01.2735900Z     
2025-01-24T14:30:01.2735950Z         spectrum = (
2025-01-24T14:30:01.2736040Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2736110Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2736210Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2736250Z         )
2025-01-24T14:30:01.2736300Z     
2025-01-24T14:30:01.2736360Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2736460Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2736520Z             return cls(
2025-01-24T14:30:01.2736650Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2736790Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2736940Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2737200Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2737330Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2737390Z                 lines_df=lines_df,
2025-01-24T14:30:01.2737490Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2737630Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2739640Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2739780Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2739940Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2740030Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2740120Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2740190Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2740260Z                 simulation=sim,
2025-01-24T14:30:01.2740300Z             )
2025-01-24T14:30:01.2740360Z         else: # real packets
2025-01-24T14:30:01.2740500Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2740560Z             # which got emitted
2025-01-24T14:30:01.2740650Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2740700Z >           return cls(
2025-01-24T14:30:01.2740840Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2741000Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2741050Z                     mask
2025-01-24T14:30:01.2741100Z                 ],
2025-01-24T14:30:01.2741270Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2741330Z                     mask
2025-01-24T14:30:01.2741400Z                 ],
2025-01-24T14:30:01.2741540Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2741590Z                     mask
2025-01-24T14:30:01.2741640Z                 ],
2025-01-24T14:30:01.2741770Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2741830Z                 lines_df=lines_df,
2025-01-24T14:30:01.2741970Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2742110Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2742180Z                     mask
2025-01-24T14:30:01.2742740Z                 ],
2025-01-24T14:30:01.2743300Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2743410Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2743560Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2743650Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2743730Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2743800Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2743860Z                 simulation=sim,
2025-01-24T14:30:01.2743910Z             )
2025-01-24T14:30:01.2744190Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2744190Z 
2025-01-24T14:30:01.2744330Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2744520Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] _
2025-01-24T14:30:01.2744530Z 
2025-01-24T14:30:01.2744760Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2744960Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2745550Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2745550Z 
2025-01-24T14:30:01.2745630Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2745730Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2745780Z         """
2025-01-24T14:30:01.2745840Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2745900Z     
2025-01-24T14:30:01.2745950Z         Parameters
2025-01-24T14:30:01.2746000Z         ----------
2025-01-24T14:30:01.2746120Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2746170Z             Simulation object.
2025-01-24T14:30:01.2746240Z     
2025-01-24T14:30:01.2746320Z         Returns
2025-01-24T14:30:01.2746380Z         -------
2025-01-24T14:30:01.2746480Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2746530Z         """
2025-01-24T14:30:01.2746640Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2746640Z 
2025-01-24T14:30:01.2746790Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2746900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2747030Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2747150Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2755450Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2755830Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2756330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2756340Z 
2025-01-24T14:30:01.2757390Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2757730Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2757910Z packets_mode = 'real'
2025-01-24T14:30:01.2757940Z 
2025-01-24T14:30:01.2758090Z     @classmethod
2025-01-24T14:30:01.2758330Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2758480Z         """
2025-01-24T14:30:01.2758910Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2759050Z     
2025-01-24T14:30:01.2759210Z         Parameters
2025-01-24T14:30:01.2759370Z         ----------
2025-01-24T14:30:01.2759590Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2759910Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2760120Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2761130Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2761290Z     
2025-01-24T14:30:01.2761450Z         Returns
2025-01-24T14:30:01.2761600Z         -------
2025-01-24T14:30:01.2761780Z         SimulationPacketData
2025-01-24T14:30:01.2761930Z         """
2025-01-24T14:30:01.2762170Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2762330Z             raise ValueError(
2025-01-24T14:30:01.2762580Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2762800Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2762950Z             )
2025-01-24T14:30:01.2763180Z         # Properties common among both packet modes
2025-01-24T14:30:01.2763530Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2763680Z             "line_id"
2025-01-24T14:30:01.2763830Z         )
2025-01-24T14:30:01.2764070Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2764320Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2764500Z         time_of_simulation = (
2025-01-24T14:30:01.2764830Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2764980Z         )
2025-01-24T14:30:01.2765120Z     
2025-01-24T14:30:01.2765520Z         spectrum = (
2025-01-24T14:30:01.2765760Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2765940Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2766190Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2766350Z         )
2025-01-24T14:30:01.2766490Z     
2025-01-24T14:30:01.2766680Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2766940Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2767110Z             return cls(
2025-01-24T14:30:01.2767450Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2767840Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2768230Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2768590Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2768940Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2769110Z                 lines_df=lines_df,
2025-01-24T14:30:01.2769380Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2769710Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2769980Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2770220Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2770620Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2770860Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2771070Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2771270Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2771430Z                 simulation=sim,
2025-01-24T14:30:01.2771580Z             )
2025-01-24T14:30:01.2771750Z         else: # real packets
2025-01-24T14:30:01.2772100Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2772260Z             # which got emitted
2025-01-24T14:30:01.2772490Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2772650Z >           return cls(
2025-01-24T14:30:01.2773020Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2773420Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2773590Z                     mask
2025-01-24T14:30:01.2773730Z                 ],
2025-01-24T14:30:01.2774280Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2774450Z                     mask
2025-01-24T14:30:01.2774600Z                 ],
2025-01-24T14:30:01.2774960Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2775120Z                     mask
2025-01-24T14:30:01.2775270Z                 ],
2025-01-24T14:30:01.2775790Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2775970Z                 lines_df=lines_df,
2025-01-24T14:30:01.2776320Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2776710Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2776860Z                     mask
2025-01-24T14:30:01.2777010Z                 ],
2025-01-24T14:30:01.2777280Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2777550Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2777950Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2778180Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2778400Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2778810Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2778990Z                 simulation=sim,
2025-01-24T14:30:01.2779130Z             )
2025-01-24T14:30:01.2779820Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2779850Z 
2025-01-24T14:30:01.2780020Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2780750Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] _
2025-01-24T14:30:01.2780750Z 
2025-01-24T14:30:01.2781120Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2782150Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2782390Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2782400Z 
2025-01-24T14:30:01.2782470Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2782560Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2782600Z         """
2025-01-24T14:30:01.2782670Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2782710Z     
2025-01-24T14:30:01.2782760Z         Parameters
2025-01-24T14:30:01.2782810Z         ----------
2025-01-24T14:30:01.2782920Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2782980Z             Simulation object.
2025-01-24T14:30:01.2783020Z     
2025-01-24T14:30:01.2783070Z         Returns
2025-01-24T14:30:01.2783120Z         -------
2025-01-24T14:30:01.2783220Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2783270Z         """
2025-01-24T14:30:01.2783380Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2783380Z 
2025-01-24T14:30:01.2783800Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2784360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2784890Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2785050Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2785240Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2785340Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2785430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2785440Z 
2025-01-24T14:30:01.2786180Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2786910Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2786980Z packets_mode = 'real'
2025-01-24T14:30:01.2786990Z 
2025-01-24T14:30:01.2787040Z     @classmethod
2025-01-24T14:30:01.2787120Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2787180Z         """
2025-01-24T14:30:01.2787530Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2787580Z     
2025-01-24T14:30:01.2787630Z         Parameters
2025-01-24T14:30:01.2787680Z         ----------
2025-01-24T14:30:01.2787750Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2787870Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2787940Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2788060Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2788100Z     
2025-01-24T14:30:01.2788150Z         Returns
2025-01-24T14:30:01.2788190Z         -------
2025-01-24T14:30:01.2788260Z         SimulationPacketData
2025-01-24T14:30:01.2788300Z         """
2025-01-24T14:30:01.2788380Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2788440Z             raise ValueError(
2025-01-24T14:30:01.2788530Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2788890Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2789120Z             )
2025-01-24T14:30:01.2789480Z         # Properties common among both packet modes
2025-01-24T14:30:01.2789660Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2789720Z             "line_id"
2025-01-24T14:30:01.2789770Z         )
2025-01-24T14:30:01.2789850Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2789950Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2790020Z         time_of_simulation = (
2025-01-24T14:30:01.2790150Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2790200Z         )
2025-01-24T14:30:01.2790250Z     
2025-01-24T14:30:01.2790300Z         spectrum = (
2025-01-24T14:30:01.2790390Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2790460Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2790560Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2790610Z         )
2025-01-24T14:30:01.2790650Z     
2025-01-24T14:30:01.2790720Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2790820Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2790870Z             return cls(
2025-01-24T14:30:01.2791010Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2791150Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2791300Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2791440Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2791560Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2791620Z                 lines_df=lines_df,
2025-01-24T14:30:01.2791730Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2791850Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2791950Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2792050Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2792190Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2792280Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2792360Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2792700Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2792760Z                 simulation=sim,
2025-01-24T14:30:01.2792800Z             )
2025-01-24T14:30:01.2792860Z         else: # real packets
2025-01-24T14:30:01.2793010Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2793070Z             # which got emitted
2025-01-24T14:30:01.2793160Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2793210Z >           return cls(
2025-01-24T14:30:01.2793350Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2793500Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2793720Z                     mask
2025-01-24T14:30:01.2793960Z                 ],
2025-01-24T14:30:01.2794120Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2794180Z                     mask
2025-01-24T14:30:01.2794230Z                 ],
2025-01-24T14:30:01.2794360Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2794410Z                     mask
2025-01-24T14:30:01.2794460Z                 ],
2025-01-24T14:30:01.2794590Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2794770Z                 lines_df=lines_df,
2025-01-24T14:30:01.2794910Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2795050Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2795100Z                     mask
2025-01-24T14:30:01.2795140Z                 ],
2025-01-24T14:30:01.2795250Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2795330Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2795490Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2795580Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2795670Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2795730Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2795790Z                 simulation=sim,
2025-01-24T14:30:01.2795840Z             )
2025-01-24T14:30:01.2796110Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2796120Z 
2025-01-24T14:30:01.2796250Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2796440Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] _
2025-01-24T14:30:01.2796440Z 
2025-01-24T14:30:01.2796660Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2796820Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2797010Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2797010Z 
2025-01-24T14:30:01.2797070Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2797170Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2797220Z         """
2025-01-24T14:30:01.2797290Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2797330Z     
2025-01-24T14:30:01.2797380Z         Parameters
2025-01-24T14:30:01.2797430Z         ----------
2025-01-24T14:30:01.2797550Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2798170Z             Simulation object.
2025-01-24T14:30:01.2798410Z     
2025-01-24T14:30:01.2798580Z         Returns
2025-01-24T14:30:01.2798740Z         -------
2025-01-24T14:30:01.2799170Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2799270Z         """
2025-01-24T14:30:01.2799400Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2799590Z 
2025-01-24T14:30:01.2799710Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2799900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2800060Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2800180Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2800360Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2800820Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2802570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2802580Z 
2025-01-24T14:30:01.2802800Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2802930Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2802990Z packets_mode = 'real'
2025-01-24T14:30:01.2802990Z 
2025-01-24T14:30:01.2803050Z     @classmethod
2025-01-24T14:30:01.2803140Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2803190Z         """
2025-01-24T14:30:01.2803350Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2803570Z     
2025-01-24T14:30:01.2803620Z         Parameters
2025-01-24T14:30:01.2803670Z         ----------
2025-01-24T14:30:01.2803750Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2803870Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2803940Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2804050Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2804090Z     
2025-01-24T14:30:01.2804140Z         Returns
2025-01-24T14:30:01.2804190Z         -------
2025-01-24T14:30:01.2804250Z         SimulationPacketData
2025-01-24T14:30:01.2804300Z         """
2025-01-24T14:30:01.2804380Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2804440Z             raise ValueError(
2025-01-24T14:30:01.2804540Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2804620Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2804670Z             )
2025-01-24T14:30:01.2804760Z         # Properties common among both packet modes
2025-01-24T14:30:01.2804890Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2804940Z             "line_id"
2025-01-24T14:30:01.2804990Z         )
2025-01-24T14:30:01.2805070Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2805160Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2805220Z         time_of_simulation = (
2025-01-24T14:30:01.2805340Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2805390Z         )
2025-01-24T14:30:01.2805440Z     
2025-01-24T14:30:01.2805490Z         spectrum = (
2025-01-24T14:30:01.2805580Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2805640Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2805780Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2805840Z         )
2025-01-24T14:30:01.2805890Z     
2025-01-24T14:30:01.2805960Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2806060Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2806110Z             return cls(
2025-01-24T14:30:01.2810790Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2810950Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2811090Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2811230Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2811480Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2811540Z                 lines_df=lines_df,
2025-01-24T14:30:01.2811640Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2811770Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2811870Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2811970Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2812120Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2812200Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2812280Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2812350Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2812410Z                 simulation=sim,
2025-01-24T14:30:01.2812460Z             )
2025-01-24T14:30:01.2812510Z         else: # real packets
2025-01-24T14:30:01.2812650Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2812700Z             # which got emitted
2025-01-24T14:30:01.2812790Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2812840Z >           return cls(
2025-01-24T14:30:01.2813040Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2813190Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2813240Z                     mask
2025-01-24T14:30:01.2813290Z                 ],
2025-01-24T14:30:01.2813440Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2813490Z                     mask
2025-01-24T14:30:01.2813540Z                 ],
2025-01-24T14:30:01.2813670Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2813730Z                     mask
2025-01-24T14:30:01.2813770Z                 ],
2025-01-24T14:30:01.2813910Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2813970Z                 lines_df=lines_df,
2025-01-24T14:30:01.2814090Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2814240Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2814290Z                     mask
2025-01-24T14:30:01.2814340Z                 ],
2025-01-24T14:30:01.2814440Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2814530Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2814680Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2814770Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2814850Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2814920Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2814980Z                 simulation=sim,
2025-01-24T14:30:01.2815030Z             )
2025-01-24T14:30:01.2815290Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2815300Z 
2025-01-24T14:30:01.2815430Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2815620Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] _
2025-01-24T14:30:01.2815620Z 
2025-01-24T14:30:01.2815940Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2816100Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2816290Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2816290Z 
2025-01-24T14:30:01.2816410Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2816510Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2816560Z         """
2025-01-24T14:30:01.2816620Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2816670Z     
2025-01-24T14:30:01.2816720Z         Parameters
2025-01-24T14:30:01.2816770Z         ----------
2025-01-24T14:30:01.2816880Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2816940Z             Simulation object.
2025-01-24T14:30:01.2816990Z     
2025-01-24T14:30:01.2817030Z         Returns
2025-01-24T14:30:01.2817080Z         -------
2025-01-24T14:30:01.2817190Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2817230Z         """
2025-01-24T14:30:01.2817340Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2817340Z 
2025-01-24T14:30:01.2817450Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2817550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2817670Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2817790Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2817950Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2818110Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2818200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2818200Z 
2025-01-24T14:30:01.2818370Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2818500Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2818550Z packets_mode = 'real'
2025-01-24T14:30:01.2818550Z 
2025-01-24T14:30:01.2818610Z     @classmethod
2025-01-24T14:30:01.2818690Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2818740Z         """
2025-01-24T14:30:01.2818900Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2818940Z     
2025-01-24T14:30:01.2818990Z         Parameters
2025-01-24T14:30:01.2819040Z         ----------
2025-01-24T14:30:01.2819110Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2819240Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2819310Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2819420Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2819470Z     
2025-01-24T14:30:01.2819510Z         Returns
2025-01-24T14:30:01.2819560Z         -------
2025-01-24T14:30:01.2819620Z         SimulationPacketData
2025-01-24T14:30:01.2819670Z         """
2025-01-24T14:30:01.2819750Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2819800Z             raise ValueError(
2025-01-24T14:30:01.2819890Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2819980Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2820020Z             )
2025-01-24T14:30:01.2820100Z         # Properties common among both packet modes
2025-01-24T14:30:01.2820230Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2820280Z             "line_id"
2025-01-24T14:30:01.2820320Z         )
2025-01-24T14:30:01.2820410Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2820510Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2820570Z         time_of_simulation = (
2025-01-24T14:30:01.2820690Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2820740Z         )
2025-01-24T14:30:01.2820780Z     
2025-01-24T14:30:01.2820830Z         spectrum = (
2025-01-24T14:30:01.2820920Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2820980Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2821320Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2821380Z         )
2025-01-24T14:30:01.2821420Z     
2025-01-24T14:30:01.2821490Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2821580Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2821640Z             return cls(
2025-01-24T14:30:01.2821770Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2821910Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2822040Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2822180Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2822300Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2822360Z                 lines_df=lines_df,
2025-01-24T14:30:01.2822460Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2822590Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2822690Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2822780Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2823320Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2823410Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2823490Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2823560Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2823610Z                 simulation=sim,
2025-01-24T14:30:01.2823660Z             )
2025-01-24T14:30:01.2823710Z         else: # real packets
2025-01-24T14:30:01.2823840Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2823910Z             # which got emitted
2025-01-24T14:30:01.2823990Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2824050Z >           return cls(
2025-01-24T14:30:01.2824400Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2824620Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2824690Z                     mask
2025-01-24T14:30:01.2824740Z                 ],
2025-01-24T14:30:01.2824890Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2824950Z                     mask
2025-01-24T14:30:01.2825000Z                 ],
2025-01-24T14:30:01.2825140Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2825190Z                     mask
2025-01-24T14:30:01.2825230Z                 ],
2025-01-24T14:30:01.2825370Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2825430Z                 lines_df=lines_df,
2025-01-24T14:30:01.2825570Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2825710Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2825770Z                     mask
2025-01-24T14:30:01.2825820Z                 ],
2025-01-24T14:30:01.2825930Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2826010Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2826170Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2826250Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2826330Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2826400Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2826460Z                 simulation=sim,
2025-01-24T14:30:01.2826760Z             )
2025-01-24T14:30:01.2827040Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2827040Z 
2025-01-24T14:30:01.2827180Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2827370Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] _
2025-01-24T14:30:01.2827370Z 
2025-01-24T14:30:01.2827580Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2827750Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2827930Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2827930Z 
2025-01-24T14:30:01.2828000Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2828090Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2828130Z         """
2025-01-24T14:30:01.2828200Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2828240Z     
2025-01-24T14:30:01.2828290Z         Parameters
2025-01-24T14:30:01.2828340Z         ----------
2025-01-24T14:30:01.2829100Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2829940Z             Simulation object.
2025-01-24T14:30:01.2830080Z     
2025-01-24T14:30:01.2830240Z         Returns
2025-01-24T14:30:01.2830390Z         -------
2025-01-24T14:30:01.2830680Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2830830Z         """
2025-01-24T14:30:01.2831120Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2831130Z 
2025-01-24T14:30:01.2831440Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2831960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2832150Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2832290Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2832460Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2832570Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2832660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2832670Z 
2025-01-24T14:30:01.2832850Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2832970Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2833030Z packets_mode = 'real'
2025-01-24T14:30:01.2833030Z 
2025-01-24T14:30:01.2833080Z     @classmethod
2025-01-24T14:30:01.2833160Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2833200Z         """
2025-01-24T14:30:01.2833360Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2833400Z     
2025-01-24T14:30:01.2833470Z         Parameters
2025-01-24T14:30:01.2833520Z         ----------
2025-01-24T14:30:01.2833600Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2833710Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2833790Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2833900Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2833940Z     
2025-01-24T14:30:01.2834000Z         Returns
2025-01-24T14:30:01.2834040Z         -------
2025-01-24T14:30:01.2834100Z         SimulationPacketData
2025-01-24T14:30:01.2834150Z         """
2025-01-24T14:30:01.2834230Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2834280Z             raise ValueError(
2025-01-24T14:30:01.2834380Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2834460Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2834510Z             )
2025-01-24T14:30:01.2834760Z         # Properties common among both packet modes
2025-01-24T14:30:01.2834910Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2834960Z             "line_id"
2025-01-24T14:30:01.2835010Z         )
2025-01-24T14:30:01.2835090Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2835190Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2835250Z         time_of_simulation = (
2025-01-24T14:30:01.2835370Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2835420Z         )
2025-01-24T14:30:01.2835460Z     
2025-01-24T14:30:01.2835510Z         spectrum = (
2025-01-24T14:30:01.2835600Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2835660Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2835750Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2835800Z         )
2025-01-24T14:30:01.2835840Z     
2025-01-24T14:30:01.2835910Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2836000Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2836050Z             return cls(
2025-01-24T14:30:01.2836180Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2836420Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2836570Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2836700Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2836820Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2836880Z                 lines_df=lines_df,
2025-01-24T14:30:01.2836980Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2837110Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2837210Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2837300Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2837460Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2837550Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2837620Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2837700Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2837760Z                 simulation=sim,
2025-01-24T14:30:01.2837810Z             )
2025-01-24T14:30:01.2837870Z         else: # real packets
2025-01-24T14:30:01.2838000Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2838060Z             # which got emitted
2025-01-24T14:30:01.2838140Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2838190Z >           return cls(
2025-01-24T14:30:01.2838340Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2838490Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2838540Z                     mask
2025-01-24T14:30:01.2838580Z                 ],
2025-01-24T14:30:01.2838740Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2838790Z                     mask
2025-01-24T14:30:01.2838840Z                 ],
2025-01-24T14:30:01.2838970Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2839020Z                     mask
2025-01-24T14:30:01.2839060Z                 ],
2025-01-24T14:30:01.2839670Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2839770Z                 lines_df=lines_df,
2025-01-24T14:30:01.2840070Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2840230Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2840280Z                     mask
2025-01-24T14:30:01.2840320Z                 ],
2025-01-24T14:30:01.2840420Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2840520Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2840670Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2840760Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2840840Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2840900Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2840960Z                 simulation=sim,
2025-01-24T14:30:01.2841010Z             )
2025-01-24T14:30:01.2841280Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2841280Z 
2025-01-24T14:30:01.2841410Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2841590Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] _
2025-01-24T14:30:01.2841600Z 
2025-01-24T14:30:01.2841850Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2842020Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2842200Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2842200Z 
2025-01-24T14:30:01.2842270Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2842350Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2842400Z         """
2025-01-24T14:30:01.2842460Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2842510Z     
2025-01-24T14:30:01.2842560Z         Parameters
2025-01-24T14:30:01.2842610Z         ----------
2025-01-24T14:30:01.2842720Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2842780Z             Simulation object.
2025-01-24T14:30:01.2842830Z     
2025-01-24T14:30:01.2842870Z         Returns
2025-01-24T14:30:01.2842920Z         -------
2025-01-24T14:30:01.2843020Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2843070Z         """
2025-01-24T14:30:01.2843180Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2843180Z 
2025-01-24T14:30:01.2843290Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2843380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2843510Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2843620Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2843790Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2843890Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2843980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2843980Z 
2025-01-24T14:30:01.2844160Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2844290Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2844340Z packets_mode = 'real'
2025-01-24T14:30:01.2844340Z 
2025-01-24T14:30:01.2844390Z     @classmethod
2025-01-24T14:30:01.2844470Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2844520Z         """
2025-01-24T14:30:01.2844670Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2844720Z     
2025-01-24T14:30:01.2844760Z         Parameters
2025-01-24T14:30:01.2844810Z         ----------
2025-01-24T14:30:01.2844880Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2845310Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2845380Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2845500Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2845550Z     
2025-01-24T14:30:01.2845590Z         Returns
2025-01-24T14:30:01.2845640Z         -------
2025-01-24T14:30:01.2845700Z         SimulationPacketData
2025-01-24T14:30:01.2845750Z         """
2025-01-24T14:30:01.2845830Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2845890Z             raise ValueError(
2025-01-24T14:30:01.2845980Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2846060Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2846100Z             )
2025-01-24T14:30:01.2846180Z         # Properties common among both packet modes
2025-01-24T14:30:01.2846310Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2846360Z             "line_id"
2025-01-24T14:30:01.2846400Z         )
2025-01-24T14:30:01.2846490Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2846580Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2846640Z         time_of_simulation = (
2025-01-24T14:30:01.2846910Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2846960Z         )
2025-01-24T14:30:01.2847000Z     
2025-01-24T14:30:01.2847060Z         spectrum = (
2025-01-24T14:30:01.2847140Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2847210Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2847300Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2847340Z         )
2025-01-24T14:30:01.2847390Z     
2025-01-24T14:30:01.2847450Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2847550Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2847600Z             return cls(
2025-01-24T14:30:01.2847730Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2847860Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2848000Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2848140Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2848260Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2848320Z                 lines_df=lines_df,
2025-01-24T14:30:01.2848420Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2848550Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2848660Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2848750Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2848890Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2848980Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2849060Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2849130Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2849190Z                 simulation=sim,
2025-01-24T14:30:01.2849240Z             )
2025-01-24T14:30:01.2849290Z         else: # real packets
2025-01-24T14:30:01.2849420Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2849470Z             # which got emitted
2025-01-24T14:30:01.2849560Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2849610Z >           return cls(
2025-01-24T14:30:01.2849750Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2849960Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2850010Z                     mask
2025-01-24T14:30:01.2850060Z                 ],
2025-01-24T14:30:01.2850210Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2850260Z                     mask
2025-01-24T14:30:01.2850310Z                 ],
2025-01-24T14:30:01.2850450Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2850490Z                     mask
2025-01-24T14:30:01.2850540Z                 ],
2025-01-24T14:30:01.2850670Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2850730Z                 lines_df=lines_df,
2025-01-24T14:30:01.2850860Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2851000Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2851050Z                     mask
2025-01-24T14:30:01.2851100Z                 ],
2025-01-24T14:30:01.2851200Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2851290Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2851440Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2851580Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2851660Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2851730Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2851790Z                 simulation=sim,
2025-01-24T14:30:01.2851830Z             )
2025-01-24T14:30:01.2852100Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2852100Z 
2025-01-24T14:30:01.2852230Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2852410Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] _
2025-01-24T14:30:01.2852410Z 
2025-01-24T14:30:01.2852620Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2852780Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2852970Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2852970Z 
2025-01-24T14:30:01.2853030Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2853130Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2853170Z         """
2025-01-24T14:30:01.2853240Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2853290Z     
2025-01-24T14:30:01.2853330Z         Parameters
2025-01-24T14:30:01.2853380Z         ----------
2025-01-24T14:30:01.2853490Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2853560Z             Simulation object.
2025-01-24T14:30:01.2853600Z     
2025-01-24T14:30:01.2853650Z         Returns
2025-01-24T14:30:01.2853700Z         -------
2025-01-24T14:30:01.2853800Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2854120Z         """
2025-01-24T14:30:01.2855620Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2855650Z 
2025-01-24T14:30:01.2856110Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2856350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2856690Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2857010Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2857480Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2857750Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2858480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2858490Z 
2025-01-24T14:30:01.2858950Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2859290Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2859460Z packets_mode = 'real'
2025-01-24T14:30:01.2859470Z 
2025-01-24T14:30:01.2859630Z     @classmethod
2025-01-24T14:30:01.2859850Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2860000Z         """
2025-01-24T14:30:01.2860420Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2860570Z     
2025-01-24T14:30:01.2860730Z         Parameters
2025-01-24T14:30:01.2860880Z         ----------
2025-01-24T14:30:01.2861080Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2861380Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2861580Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2861870Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2862020Z     
2025-01-24T14:30:01.2862170Z         Returns
2025-01-24T14:30:01.2862320Z         -------
2025-01-24T14:30:01.2862500Z         SimulationPacketData
2025-01-24T14:30:01.2862650Z         """
2025-01-24T14:30:01.2863070Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2863240Z             raise ValueError(
2025-01-24T14:30:01.2863490Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2863710Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2863860Z             )
2025-01-24T14:30:01.2864090Z         # Properties common among both packet modes
2025-01-24T14:30:01.2864430Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2864570Z             "line_id"
2025-01-24T14:30:01.2864730Z         )
2025-01-24T14:30:01.2864950Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2865220Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2865380Z         time_of_simulation = (
2025-01-24T14:30:01.2865710Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2865860Z         )
2025-01-24T14:30:01.2866010Z     
2025-01-24T14:30:01.2866160Z         spectrum = (
2025-01-24T14:30:01.2866410Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2866590Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2866850Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2867000Z         )
2025-01-24T14:30:01.2867150Z     
2025-01-24T14:30:01.2867340Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2867600Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2867770Z             return cls(
2025-01-24T14:30:01.2868100Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2868480Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2868980Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2869350Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2872270Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2872420Z                 lines_df=lines_df,
2025-01-24T14:30:01.2872550Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2872680Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2872790Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2872880Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2873040Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2873460Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2873550Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2873630Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2873690Z                 simulation=sim,
2025-01-24T14:30:01.2873730Z             )
2025-01-24T14:30:01.2873810Z         else: # real packets
2025-01-24T14:30:01.2873940Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2874000Z             # which got emitted
2025-01-24T14:30:01.2874090Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2874140Z >           return cls(
2025-01-24T14:30:01.2874280Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2874430Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2874490Z                     mask
2025-01-24T14:30:01.2874530Z                 ],
2025-01-24T14:30:01.2874720Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2874770Z                     mask
2025-01-24T14:30:01.2874820Z                 ],
2025-01-24T14:30:01.2874960Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2875160Z                     mask
2025-01-24T14:30:01.2875210Z                 ],
2025-01-24T14:30:01.2875350Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2875400Z                 lines_df=lines_df,
2025-01-24T14:30:01.2880650Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2880850Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2880910Z                     mask
2025-01-24T14:30:01.2880960Z                 ],
2025-01-24T14:30:01.2881060Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2881160Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2881320Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2881410Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2881500Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2881580Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2881640Z                 simulation=sim,
2025-01-24T14:30:01.2881680Z             )
2025-01-24T14:30:01.2881960Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2881960Z 
2025-01-24T14:30:01.2882100Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2882290Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] _
2025-01-24T14:30:01.2882300Z 
2025-01-24T14:30:01.2882530Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2882700Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2882890Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2882900Z 
2025-01-24T14:30:01.2882960Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2883050Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2883100Z         """
2025-01-24T14:30:01.2883160Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2883210Z     
2025-01-24T14:30:01.2883260Z         Parameters
2025-01-24T14:30:01.2883310Z         ----------
2025-01-24T14:30:01.2883430Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2883480Z             Simulation object.
2025-01-24T14:30:01.2883530Z     
2025-01-24T14:30:01.2883570Z         Returns
2025-01-24T14:30:01.2883620Z         -------
2025-01-24T14:30:01.2884460Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2884530Z         """
2025-01-24T14:30:01.2884640Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2884650Z 
2025-01-24T14:30:01.2884770Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2884860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2885000Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2885120Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2885290Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2885390Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2885480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2885480Z 
2025-01-24T14:30:01.2885660Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2885790Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2885850Z packets_mode = 'real'
2025-01-24T14:30:01.2885850Z 
2025-01-24T14:30:01.2885900Z     @classmethod
2025-01-24T14:30:01.2885990Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2886240Z         """
2025-01-24T14:30:01.2886400Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2886450Z     
2025-01-24T14:30:01.2886500Z         Parameters
2025-01-24T14:30:01.2886550Z         ----------
2025-01-24T14:30:01.2886620Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2886740Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2886800Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2886920Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2886970Z     
2025-01-24T14:30:01.2887010Z         Returns
2025-01-24T14:30:01.2887060Z         -------
2025-01-24T14:30:01.2887120Z         SimulationPacketData
2025-01-24T14:30:01.2887170Z         """
2025-01-24T14:30:01.2887250Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2887310Z             raise ValueError(
2025-01-24T14:30:01.2887400Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2887480Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2887520Z             )
2025-01-24T14:30:01.2887610Z         # Properties common among both packet modes
2025-01-24T14:30:01.2887730Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2887790Z             "line_id"
2025-01-24T14:30:01.2887830Z         )
2025-01-24T14:30:01.2887910Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2888010Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2888070Z         time_of_simulation = (
2025-01-24T14:30:01.2888190Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2888240Z         )
2025-01-24T14:30:01.2888290Z     
2025-01-24T14:30:01.2888340Z         spectrum = (
2025-01-24T14:30:01.2888430Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2888500Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2888590Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2888630Z         )
2025-01-24T14:30:01.2888680Z     
2025-01-24T14:30:01.2888750Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2888840Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2888890Z             return cls(
2025-01-24T14:30:01.2889020Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2889160Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2889380Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2889530Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2889650Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2889710Z                 lines_df=lines_df,
2025-01-24T14:30:01.2889820Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2889950Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2890050Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2890140Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2890290Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2890380Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2890450Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2890530Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2890590Z                 simulation=sim,
2025-01-24T14:30:01.2890640Z             )
2025-01-24T14:30:01.2890700Z         else: # real packets
2025-01-24T14:30:01.2890830Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2890960Z             # which got emitted
2025-01-24T14:30:01.2891050Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2891100Z >           return cls(
2025-01-24T14:30:01.2891240Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2891380Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2891430Z                     mask
2025-01-24T14:30:01.2891480Z                 ],
2025-01-24T14:30:01.2891630Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2891680Z                     mask
2025-01-24T14:30:01.2891730Z                 ],
2025-01-24T14:30:01.2891860Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2891920Z                     mask
2025-01-24T14:30:01.2891960Z                 ],
2025-01-24T14:30:01.2892090Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2892150Z                 lines_df=lines_df,
2025-01-24T14:30:01.2892290Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2892420Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2892480Z                     mask
2025-01-24T14:30:01.2892520Z                 ],
2025-01-24T14:30:01.2892620Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2892710Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2892870Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2892960Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2893030Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2893100Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2893160Z                 simulation=sim,
2025-01-24T14:30:01.2893210Z             )
2025-01-24T14:30:01.2893470Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2893470Z 
2025-01-24T14:30:01.2893610Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2893790Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] _
2025-01-24T14:30:01.2893790Z 
2025-01-24T14:30:01.2894000Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2894220Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2894400Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2894410Z 
2025-01-24T14:30:01.2894480Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2894570Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2894620Z         """
2025-01-24T14:30:01.2894680Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2894730Z     
2025-01-24T14:30:01.2894780Z         Parameters
2025-01-24T14:30:01.2894830Z         ----------
2025-01-24T14:30:01.2894940Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2895000Z             Simulation object.
2025-01-24T14:30:01.2895040Z     
2025-01-24T14:30:01.2895090Z         Returns
2025-01-24T14:30:01.2895130Z         -------
2025-01-24T14:30:01.2895240Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2895280Z         """
2025-01-24T14:30:01.2895390Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2895390Z 
2025-01-24T14:30:01.2895500Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2895590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2895720Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2895990Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2896170Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2896270Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2896360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2896360Z 
2025-01-24T14:30:01.2896530Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2896650Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2896720Z packets_mode = 'real'
2025-01-24T14:30:01.2896720Z 
2025-01-24T14:30:01.2896770Z     @classmethod
2025-01-24T14:30:01.2896860Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2896900Z         """
2025-01-24T14:30:01.2897060Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2897100Z     
2025-01-24T14:30:01.2897150Z         Parameters
2025-01-24T14:30:01.2897200Z         ----------
2025-01-24T14:30:01.2897270Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2897390Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2897460Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2897570Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2897620Z     
2025-01-24T14:30:01.2897660Z         Returns
2025-01-24T14:30:01.2897710Z         -------
2025-01-24T14:30:01.2897770Z         SimulationPacketData
2025-01-24T14:30:01.2897820Z         """
2025-01-24T14:30:01.2897900Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2897950Z             raise ValueError(
2025-01-24T14:30:01.2898050Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2898130Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2898180Z             )
2025-01-24T14:30:01.2898260Z         # Properties common among both packet modes
2025-01-24T14:30:01.2898380Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2898430Z             "line_id"
2025-01-24T14:30:01.2898480Z         )
2025-01-24T14:30:01.2898560Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2898650Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2898710Z         time_of_simulation = (
2025-01-24T14:30:01.2898840Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2898880Z         )
2025-01-24T14:30:01.2898930Z     
2025-01-24T14:30:01.2899060Z         spectrum = (
2025-01-24T14:30:01.2899150Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2899220Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2899310Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2899360Z         )
2025-01-24T14:30:01.2899400Z     
2025-01-24T14:30:01.2899460Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2899560Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2899610Z             return cls(
2025-01-24T14:30:01.2899730Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2899870Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2900010Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2900140Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2900260Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2900320Z                 lines_df=lines_df,
2025-01-24T14:30:01.2900430Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2900550Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2900710Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2900800Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2900960Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2901040Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2901120Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2901190Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2901250Z                 simulation=sim,
2025-01-24T14:30:01.2901300Z             )
2025-01-24T14:30:01.2901360Z         else: # real packets
2025-01-24T14:30:01.2901490Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2901550Z             # which got emitted
2025-01-24T14:30:01.2901630Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2901690Z >           return cls(
2025-01-24T14:30:01.2901830Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2901970Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2902030Z                     mask
2025-01-24T14:30:01.2902070Z                 ],
2025-01-24T14:30:01.2902220Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2902270Z                     mask
2025-01-24T14:30:01.2902310Z                 ],
2025-01-24T14:30:01.2902450Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2902500Z                     mask
2025-01-24T14:30:01.2902550Z                 ],
2025-01-24T14:30:01.2902680Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2902740Z                 lines_df=lines_df,
2025-01-24T14:30:01.2902870Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2903010Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2903060Z                     mask
2025-01-24T14:30:01.2903110Z                 ],
2025-01-24T14:30:01.2903210Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2903300Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2903450Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2903530Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2903960Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2904110Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2904170Z                 simulation=sim,
2025-01-24T14:30:01.2904210Z             )
2025-01-24T14:30:01.2904480Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2904490Z 
2025-01-24T14:30:01.2904620Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2904810Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] _
2025-01-24T14:30:01.2905250Z 
2025-01-24T14:30:01.2905460Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2905620Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2905810Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2905810Z 
2025-01-24T14:30:01.2905880Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2905960Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2906010Z         """
2025-01-24T14:30:01.2906080Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2906120Z     
2025-01-24T14:30:01.2906410Z         Parameters
2025-01-24T14:30:01.2906460Z         ----------
2025-01-24T14:30:01.2906580Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2906630Z             Simulation object.
2025-01-24T14:30:01.2906680Z     
2025-01-24T14:30:01.2906730Z         Returns
2025-01-24T14:30:01.2906770Z         -------
2025-01-24T14:30:01.2906880Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2906920Z         """
2025-01-24T14:30:01.2907030Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2907030Z 
2025-01-24T14:30:01.2907140Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2907240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2907360Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2907480Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2907650Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2907750Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2907840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2907850Z 
2025-01-24T14:30:01.2908020Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2908140Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2908200Z packets_mode = 'real'
2025-01-24T14:30:01.2908200Z 
2025-01-24T14:30:01.2908250Z     @classmethod
2025-01-24T14:30:01.2908330Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2908380Z         """
2025-01-24T14:30:01.2908530Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2908580Z     
2025-01-24T14:30:01.2908630Z         Parameters
2025-01-24T14:30:01.2908680Z         ----------
2025-01-24T14:30:01.2908750Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2908880Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2908940Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2909050Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2909090Z     
2025-01-24T14:30:01.2909140Z         Returns
2025-01-24T14:30:01.2909190Z         -------
2025-01-24T14:30:01.2909250Z         SimulationPacketData
2025-01-24T14:30:01.2909300Z         """
2025-01-24T14:30:01.2909370Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2909430Z             raise ValueError(
2025-01-24T14:30:01.2909580Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2909660Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2909710Z             )
2025-01-24T14:30:01.2909790Z         # Properties common among both packet modes
2025-01-24T14:30:01.2909910Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2909960Z             "line_id"
2025-01-24T14:30:01.2910010Z         )
2025-01-24T14:30:01.2910100Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2910190Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2910250Z         time_of_simulation = (
2025-01-24T14:30:01.2910370Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2910420Z         )
2025-01-24T14:30:01.2910460Z     
2025-01-24T14:30:01.2910510Z         spectrum = (
2025-01-24T14:30:01.2910600Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2910660Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2910760Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2910800Z         )
2025-01-24T14:30:01.2910850Z     
2025-01-24T14:30:01.2910910Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2911010Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2911120Z             return cls(
2025-01-24T14:30:01.2911250Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2911390Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2911530Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2911660Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2911780Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2911840Z                 lines_df=lines_df,
2025-01-24T14:30:01.2911940Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2912070Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2912170Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2912270Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2912410Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2912500Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2912580Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2912650Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2912710Z                 simulation=sim,
2025-01-24T14:30:01.2912750Z             )
2025-01-24T14:30:01.2912810Z         else: # real packets
2025-01-24T14:30:01.2912940Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2913000Z             # which got emitted
2025-01-24T14:30:01.2913080Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2913130Z >           return cls(
2025-01-24T14:30:01.2913270Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2913430Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2913470Z                     mask
2025-01-24T14:30:01.2913520Z                 ],
2025-01-24T14:30:01.2913670Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2913720Z                     mask
2025-01-24T14:30:01.2913760Z                 ],
2025-01-24T14:30:01.2913890Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2913940Z                     mask
2025-01-24T14:30:01.2913990Z                 ],
2025-01-24T14:30:01.2914180Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2914240Z                 lines_df=lines_df,
2025-01-24T14:30:01.2914380Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2914520Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2914580Z                     mask
2025-01-24T14:30:01.2914620Z                 ],
2025-01-24T14:30:01.2914720Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2914810Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2914960Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2915040Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2915120Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2915190Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2915250Z                 simulation=sim,
2025-01-24T14:30:01.2915300Z             )
2025-01-24T14:30:01.2915560Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2915570Z 
2025-01-24T14:30:01.2915700Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2915930Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] _
2025-01-24T14:30:01.2915930Z 
2025-01-24T14:30:01.2916140Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2916300Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2916490Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2916490Z 
2025-01-24T14:30:01.2916550Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2916640Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2916690Z         """
2025-01-24T14:30:01.2916750Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2916800Z     
2025-01-24T14:30:01.2916840Z         Parameters
2025-01-24T14:30:01.2916900Z         ----------
2025-01-24T14:30:01.2917010Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2917070Z             Simulation object.
2025-01-24T14:30:01.2917110Z     
2025-01-24T14:30:01.2917160Z         Returns
2025-01-24T14:30:01.2917200Z         -------
2025-01-24T14:30:01.2917300Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2917350Z         """
2025-01-24T14:30:01.2917450Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2917460Z 
2025-01-24T14:30:01.2917560Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2917650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2917780Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2917890Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2918060Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2918160Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2918260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2918260Z 
2025-01-24T14:30:01.2918430Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2918550Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2918600Z packets_mode = 'real'
2025-01-24T14:30:01.2918610Z 
2025-01-24T14:30:01.2918650Z     @classmethod
2025-01-24T14:30:01.2918730Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2918780Z         """
2025-01-24T14:30:01.2918930Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2919030Z     
2025-01-24T14:30:01.2919090Z         Parameters
2025-01-24T14:30:01.2919140Z         ----------
2025-01-24T14:30:01.2919210Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2919320Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2919400Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2919510Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2919550Z     
2025-01-24T14:30:01.2919600Z         Returns
2025-01-24T14:30:01.2919650Z         -------
2025-01-24T14:30:01.2919700Z         SimulationPacketData
2025-01-24T14:30:01.2919750Z         """
2025-01-24T14:30:01.2919830Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2919880Z             raise ValueError(
2025-01-24T14:30:01.2919970Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2920050Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2920100Z             )
2025-01-24T14:30:01.2920180Z         # Properties common among both packet modes
2025-01-24T14:30:01.2920320Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2920360Z             "line_id"
2025-01-24T14:30:01.2920410Z         )
2025-01-24T14:30:01.2920540Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2920640Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2920690Z         time_of_simulation = (
2025-01-24T14:30:01.2920820Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2920860Z         )
2025-01-24T14:30:01.2920910Z     
2025-01-24T14:30:01.2920960Z         spectrum = (
2025-01-24T14:30:01.2921040Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2921110Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2921210Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2921250Z         )
2025-01-24T14:30:01.2921300Z     
2025-01-24T14:30:01.2921370Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2921460Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2921510Z             return cls(
2025-01-24T14:30:01.2921640Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2921780Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2921920Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2922060Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2922180Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2922230Z                 lines_df=lines_df,
2025-01-24T14:30:01.2922330Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2922470Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2922570Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2922660Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2922810Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2922890Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2922980Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2923050Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2923110Z                 simulation=sim,
2025-01-24T14:30:01.2923150Z             )
2025-01-24T14:30:01.2923210Z         else: # real packets
2025-01-24T14:30:01.2923340Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2923390Z             # which got emitted
2025-01-24T14:30:01.2923480Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2923700Z >           return cls(
2025-01-24T14:30:01.2923860Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2924000Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2924050Z                     mask
2025-01-24T14:30:01.2924100Z                 ],
2025-01-24T14:30:01.2924260Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2924300Z                     mask
2025-01-24T14:30:01.2924350Z                 ],
2025-01-24T14:30:01.2924490Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2924540Z                     mask
2025-01-24T14:30:01.2924580Z                 ],
2025-01-24T14:30:01.2924720Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2924770Z                 lines_df=lines_df,
2025-01-24T14:30:01.2924910Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2925060Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2925100Z                     mask
2025-01-24T14:30:01.2925150Z                 ],
2025-01-24T14:30:01.2925250Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2925930Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2926080Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2926160Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2926250Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2926320Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2926370Z                 simulation=sim,
2025-01-24T14:30:01.2926420Z             )
2025-01-24T14:30:01.2926680Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2926680Z 
2025-01-24T14:30:01.2926810Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2927000Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] _
2025-01-24T14:30:01.2927000Z 
2025-01-24T14:30:01.2927200Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2927370Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2927550Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2927550Z 
2025-01-24T14:30:01.2927620Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2927700Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2927750Z         """
2025-01-24T14:30:01.2927810Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2927860Z     
2025-01-24T14:30:01.2927910Z         Parameters
2025-01-24T14:30:01.2927950Z         ----------
2025-01-24T14:30:01.2928070Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2928130Z             Simulation object.
2025-01-24T14:30:01.2928170Z     
2025-01-24T14:30:01.2934380Z         Returns
2025-01-24T14:30:01.2934520Z         -------
2025-01-24T14:30:01.2934650Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2934700Z         """
2025-01-24T14:30:01.2934820Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2934820Z 
2025-01-24T14:30:01.2934940Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2935040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2935170Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2935290Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2935820Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2936340Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2936470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2936470Z 
2025-01-24T14:30:01.2936670Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2936800Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2936860Z packets_mode = 'real'
2025-01-24T14:30:01.2936860Z 
2025-01-24T14:30:01.2936920Z     @classmethod
2025-01-24T14:30:01.2937010Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2937050Z         """
2025-01-24T14:30:01.2937210Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2937260Z     
2025-01-24T14:30:01.2937310Z         Parameters
2025-01-24T14:30:01.2937360Z         ----------
2025-01-24T14:30:01.2937440Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2937550Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2937620Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2937730Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2937940Z     
2025-01-24T14:30:01.2937990Z         Returns
2025-01-24T14:30:01.2938040Z         -------
2025-01-24T14:30:01.2938100Z         SimulationPacketData
2025-01-24T14:30:01.2938140Z         """
2025-01-24T14:30:01.2938230Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2938280Z             raise ValueError(
2025-01-24T14:30:01.2938380Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2938460Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2938510Z             )
2025-01-24T14:30:01.2938600Z         # Properties common among both packet modes
2025-01-24T14:30:01.2938730Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2938780Z             "line_id"
2025-01-24T14:30:01.2938820Z         )
2025-01-24T14:30:01.2938910Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2939000Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2939060Z         time_of_simulation = (
2025-01-24T14:30:01.2939300Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2939370Z         )
2025-01-24T14:30:01.2939420Z     
2025-01-24T14:30:01.2939470Z         spectrum = (
2025-01-24T14:30:01.2939570Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2939630Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2939730Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2939770Z         )
2025-01-24T14:30:01.2939820Z     
2025-01-24T14:30:01.2939880Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2939990Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2940040Z             return cls(
2025-01-24T14:30:01.2940170Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2940310Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2940460Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2940600Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2940720Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2940780Z                 lines_df=lines_df,
2025-01-24T14:30:01.2940880Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2941010Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2941100Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2941330Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2941490Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2941580Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2941660Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2941740Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2941800Z                 simulation=sim,
2025-01-24T14:30:01.2941840Z             )
2025-01-24T14:30:01.2941900Z         else: # real packets
2025-01-24T14:30:01.2942030Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2942090Z             # which got emitted
2025-01-24T14:30:01.2942170Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2942230Z >           return cls(
2025-01-24T14:30:01.2942370Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2942520Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2942570Z                     mask
2025-01-24T14:30:01.2942610Z                 ],
2025-01-24T14:30:01.2942760Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2942880Z                     mask
2025-01-24T14:30:01.2942930Z                 ],
2025-01-24T14:30:01.2943070Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2943120Z                     mask
2025-01-24T14:30:01.2943170Z                 ],
2025-01-24T14:30:01.2943300Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2943360Z                 lines_df=lines_df,
2025-01-24T14:30:01.2943490Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2943630Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2943690Z                     mask
2025-01-24T14:30:01.2943730Z                 ],
2025-01-24T14:30:01.2943840Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2943920Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2944080Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2944170Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2944240Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2944310Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2944370Z                 simulation=sim,
2025-01-24T14:30:01.2944410Z             )
2025-01-24T14:30:01.2944680Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2944680Z 
2025-01-24T14:30:01.2944820Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2945010Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] _
2025-01-24T14:30:01.2945010Z 
2025-01-24T14:30:01.2945220Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2945380Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2945570Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2945570Z 
2025-01-24T14:30:01.2945630Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2945720Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2945770Z         """
2025-01-24T14:30:01.2945830Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2945880Z     
2025-01-24T14:30:01.2945920Z         Parameters
2025-01-24T14:30:01.2945970Z         ----------
2025-01-24T14:30:01.2946090Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2946210Z             Simulation object.
2025-01-24T14:30:01.2946250Z     
2025-01-24T14:30:01.2946310Z         Returns
2025-01-24T14:30:01.2946350Z         -------
2025-01-24T14:30:01.2946450Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2946500Z         """
2025-01-24T14:30:01.2946610Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2946610Z 
2025-01-24T14:30:01.2946720Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2946810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2946940Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2947050Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2947220Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2947320Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2947410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2947420Z 
2025-01-24T14:30:01.2947590Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2947710Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2947980Z packets_mode = 'real'
2025-01-24T14:30:01.2948000Z 
2025-01-24T14:30:01.2948090Z     @classmethod
2025-01-24T14:30:01.2948190Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2948230Z         """
2025-01-24T14:30:01.2948410Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2948450Z     
2025-01-24T14:30:01.2948500Z         Parameters
2025-01-24T14:30:01.2948550Z         ----------
2025-01-24T14:30:01.2948630Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2948750Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2948830Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2948940Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2948980Z     
2025-01-24T14:30:01.2949030Z         Returns
2025-01-24T14:30:01.2949080Z         -------
2025-01-24T14:30:01.2949140Z         SimulationPacketData
2025-01-24T14:30:01.2949190Z         """
2025-01-24T14:30:01.2949280Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2949330Z             raise ValueError(
2025-01-24T14:30:01.2949430Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2949510Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2949560Z             )
2025-01-24T14:30:01.2949640Z         # Properties common among both packet modes
2025-01-24T14:30:01.2949770Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2949820Z             "line_id"
2025-01-24T14:30:01.2949870Z         )
2025-01-24T14:30:01.2949950Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2950050Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2950110Z         time_of_simulation = (
2025-01-24T14:30:01.2950230Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2950280Z         )
2025-01-24T14:30:01.2950330Z     
2025-01-24T14:30:01.2950380Z         spectrum = (
2025-01-24T14:30:01.2950470Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2950540Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2950630Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2950670Z         )
2025-01-24T14:30:01.2950720Z     
2025-01-24T14:30:01.2950780Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2950870Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2950930Z             return cls(
2025-01-24T14:30:01.2951530Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2951680Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2951830Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2951960Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2952090Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2952150Z                 lines_df=lines_df,
2025-01-24T14:30:01.2952250Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2952380Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2952490Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2952580Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2952730Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2952810Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2952890Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2952970Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2953020Z                 simulation=sim,
2025-01-24T14:30:01.2953300Z             )
2025-01-24T14:30:01.2953360Z         else: # real packets
2025-01-24T14:30:01.2953490Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2953540Z             # which got emitted
2025-01-24T14:30:01.2953630Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2953680Z >           return cls(
2025-01-24T14:30:01.2953820Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2953970Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2954020Z                     mask
2025-01-24T14:30:01.2954070Z                 ],
2025-01-24T14:30:01.2954220Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2954270Z                     mask
2025-01-24T14:30:01.2954320Z                 ],
2025-01-24T14:30:01.2954450Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2954510Z                     mask
2025-01-24T14:30:01.2954560Z                 ],
2025-01-24T14:30:01.2954690Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2954750Z                 lines_df=lines_df,
2025-01-24T14:30:01.2954880Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2955020Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2955070Z                     mask
2025-01-24T14:30:01.2955110Z                 ],
2025-01-24T14:30:01.2955220Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2955320Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2955470Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2955570Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2955650Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2955720Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2955780Z                 simulation=sim,
2025-01-24T14:30:01.2955820Z             )
2025-01-24T14:30:01.2956100Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2956100Z 
2025-01-24T14:30:01.2956240Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2956440Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] _
2025-01-24T14:30:01.2956440Z 
2025-01-24T14:30:01.2956700Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2956870Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2957060Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2957060Z 
2025-01-24T14:30:01.2957130Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2957220Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2957260Z         """
2025-01-24T14:30:01.2957320Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2957370Z     
2025-01-24T14:30:01.2957420Z         Parameters
2025-01-24T14:30:01.2957460Z         ----------
2025-01-24T14:30:01.2957580Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2957630Z             Simulation object.
2025-01-24T14:30:01.2957680Z     
2025-01-24T14:30:01.2957730Z         Returns
2025-01-24T14:30:01.2957780Z         -------
2025-01-24T14:30:01.2957880Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2957930Z         """
2025-01-24T14:30:01.2958040Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2958040Z 
2025-01-24T14:30:01.2958150Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2958300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2958420Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2958540Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2958710Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2958820Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2958910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2958910Z 
2025-01-24T14:30:01.2959080Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2959210Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2959260Z packets_mode = 'real'
2025-01-24T14:30:01.2959260Z 
2025-01-24T14:30:01.2959320Z     @classmethod
2025-01-24T14:30:01.2959400Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2959450Z         """
2025-01-24T14:30:01.2959600Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2959650Z     
2025-01-24T14:30:01.2959700Z         Parameters
2025-01-24T14:30:01.2959740Z         ----------
2025-01-24T14:30:01.2959820Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2959930Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2960000Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2960110Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2960150Z     
2025-01-24T14:30:01.2960200Z         Returns
2025-01-24T14:30:01.2960260Z         -------
2025-01-24T14:30:01.2960320Z         SimulationPacketData
2025-01-24T14:30:01.2960360Z         """
2025-01-24T14:30:01.2960440Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2960500Z             raise ValueError(
2025-01-24T14:30:01.2960600Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2960680Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2960730Z             )
2025-01-24T14:30:01.2960810Z         # Properties common among both packet modes
2025-01-24T14:30:01.2960940Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2960990Z             "line_id"
2025-01-24T14:30:01.2961040Z         )
2025-01-24T14:30:01.2961130Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2961220Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2961330Z         time_of_simulation = (
2025-01-24T14:30:01.2961460Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2961510Z         )
2025-01-24T14:30:01.2961560Z     
2025-01-24T14:30:01.2961600Z         spectrum = (
2025-01-24T14:30:01.2961700Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2961760Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2961850Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2961900Z         )
2025-01-24T14:30:01.2961940Z     
2025-01-24T14:30:01.2962000Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2962100Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2962150Z             return cls(
2025-01-24T14:30:01.2962280Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2962420Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2962560Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2962700Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2962820Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2962940Z                 lines_df=lines_df,
2025-01-24T14:30:01.2963040Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2963170Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2963270Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2963360Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2963510Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2963600Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2963680Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2963750Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2963800Z                 simulation=sim,
2025-01-24T14:30:01.2963850Z             )
2025-01-24T14:30:01.2963900Z         else: # real packets
2025-01-24T14:30:01.2964030Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2964090Z             # which got emitted
2025-01-24T14:30:01.2964170Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2964230Z >           return cls(
2025-01-24T14:30:01.2964360Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2964510Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2964570Z                     mask
2025-01-24T14:30:01.2964610Z                 ],
2025-01-24T14:30:01.2964760Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2964810Z                     mask
2025-01-24T14:30:01.2964860Z                 ],
2025-01-24T14:30:01.2965000Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2965050Z                     mask
2025-01-24T14:30:01.2965090Z                 ],
2025-01-24T14:30:01.2965230Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2965290Z                 lines_df=lines_df,
2025-01-24T14:30:01.2965420Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2965560Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2965610Z                     mask
2025-01-24T14:30:01.2965650Z                 ],
2025-01-24T14:30:01.2965750Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2965840Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2966050Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2966140Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2966230Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2966300Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2966350Z                 simulation=sim,
2025-01-24T14:30:01.2966400Z             )
2025-01-24T14:30:01.2966670Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2966670Z 
2025-01-24T14:30:01.2966800Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2966970Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl0] _
2025-01-24T14:30:01.2966970Z 
2025-01-24T14:30:01.2967180Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2967340Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2967530Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2967530Z 
2025-01-24T14:30:01.2967590Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2967680Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2967770Z         """
2025-01-24T14:30:01.2967840Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2967880Z     
2025-01-24T14:30:01.2967930Z         Parameters
2025-01-24T14:30:01.2967980Z         ----------
2025-01-24T14:30:01.2968090Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2968150Z             Simulation object.
2025-01-24T14:30:01.2968190Z     
2025-01-24T14:30:01.2968240Z         Returns
2025-01-24T14:30:01.2968280Z         -------
2025-01-24T14:30:01.2968390Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2968430Z         """
2025-01-24T14:30:01.2968540Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2968540Z 
2025-01-24T14:30:01.2968650Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2968740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2968870Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2968980Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2969160Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2969250Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2969340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2969350Z 
2025-01-24T14:30:01.2969510Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2969630Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2969690Z packets_mode = 'real'
2025-01-24T14:30:01.2969690Z 
2025-01-24T14:30:01.2969740Z     @classmethod
2025-01-24T14:30:01.2969820Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2969870Z         """
2025-01-24T14:30:01.2970020Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2970080Z     
2025-01-24T14:30:01.2970130Z         Parameters
2025-01-24T14:30:01.2970180Z         ----------
2025-01-24T14:30:01.2970250Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2970370Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2970430Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2970540Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2970580Z     
2025-01-24T14:30:01.2970630Z         Returns
2025-01-24T14:30:01.2970680Z         -------
2025-01-24T14:30:01.2970730Z         SimulationPacketData
2025-01-24T14:30:01.2971280Z         """
2025-01-24T14:30:01.2971390Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2971450Z             raise ValueError(
2025-01-24T14:30:01.2971540Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2971630Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2971670Z             )
2025-01-24T14:30:01.2971750Z         # Properties common among both packet modes
2025-01-24T14:30:01.2971880Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2971930Z             "line_id"
2025-01-24T14:30:01.2971980Z         )
2025-01-24T14:30:01.2972060Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2972160Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2972220Z         time_of_simulation = (
2025-01-24T14:30:01.2972350Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2972390Z         )
2025-01-24T14:30:01.2972440Z     
2025-01-24T14:30:01.2972490Z         spectrum = (
2025-01-24T14:30:01.2972580Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2972640Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2972740Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2973250Z         )
2025-01-24T14:30:01.2973300Z     
2025-01-24T14:30:01.2973360Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2973470Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2973520Z             return cls(
2025-01-24T14:30:01.2973650Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2973790Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2973930Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2974070Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2974190Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2974250Z                 lines_df=lines_df,
2025-01-24T14:30:01.2974350Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2974480Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2974580Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2974670Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2974820Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2974900Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2974980Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2975050Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2975100Z                 simulation=sim,
2025-01-24T14:30:01.2975150Z             )
2025-01-24T14:30:01.2975210Z         else: # real packets
2025-01-24T14:30:01.2975340Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2975400Z             # which got emitted
2025-01-24T14:30:01.2975480Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2975530Z >           return cls(
2025-01-24T14:30:01.2975670Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2975810Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2975870Z                     mask
2025-01-24T14:30:01.2975910Z                 ],
2025-01-24T14:30:01.2976060Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2976220Z                     mask
2025-01-24T14:30:01.2976270Z                 ],
2025-01-24T14:30:01.2976540Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2976610Z                     mask
2025-01-24T14:30:01.2976650Z                 ],
2025-01-24T14:30:01.2976790Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2976840Z                 lines_df=lines_df,
2025-01-24T14:30:01.2976980Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2977120Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2977170Z                     mask
2025-01-24T14:30:01.2977220Z                 ],
2025-01-24T14:30:01.2977320Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2977410Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2977570Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2977650Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2977740Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2977800Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2977860Z                 simulation=sim,
2025-01-24T14:30:01.2977900Z             )
2025-01-24T14:30:01.2978160Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2978210Z 
2025-01-24T14:30:01.2978360Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2978520Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl1] _
2025-01-24T14:30:01.2978530Z 
2025-01-24T14:30:01.2978730Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2978890Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2979080Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2979080Z 
2025-01-24T14:30:01.2979150Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2979240Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2979290Z         """
2025-01-24T14:30:01.2979350Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2979390Z     
2025-01-24T14:30:01.2979440Z         Parameters
2025-01-24T14:30:01.2979490Z         ----------
2025-01-24T14:30:01.2979600Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2979660Z             Simulation object.
2025-01-24T14:30:01.2979710Z     
2025-01-24T14:30:01.2979750Z         Returns
2025-01-24T14:30:01.2979810Z         -------
2025-01-24T14:30:01.2979910Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2979950Z         """
2025-01-24T14:30:01.2980060Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2980060Z 
2025-01-24T14:30:01.2980170Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2980260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2980390Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2980500Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2980670Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2980770Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2980860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2980860Z 
2025-01-24T14:30:01.2981040Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2981150Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2981210Z packets_mode = 'real'
2025-01-24T14:30:01.2981210Z 
2025-01-24T14:30:01.2981260Z     @classmethod
2025-01-24T14:30:01.2981390Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2981440Z         """
2025-01-24T14:30:01.2981600Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2981640Z     
2025-01-24T14:30:01.2981690Z         Parameters
2025-01-24T14:30:01.2981740Z         ----------
2025-01-24T14:30:01.2981820Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2981940Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2982000Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2982110Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2982160Z     
2025-01-24T14:30:01.2982210Z         Returns
2025-01-24T14:30:01.2982250Z         -------
2025-01-24T14:30:01.2982310Z         SimulationPacketData
2025-01-24T14:30:01.2982360Z         """
2025-01-24T14:30:01.2982440Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2982500Z             raise ValueError(
2025-01-24T14:30:01.2987370Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2987510Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2987560Z             )
2025-01-24T14:30:01.2987650Z         # Properties common among both packet modes
2025-01-24T14:30:01.2987780Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2988100Z             "line_id"
2025-01-24T14:30:01.2988150Z         )
2025-01-24T14:30:01.2988230Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2988330Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2988390Z         time_of_simulation = (
2025-01-24T14:30:01.2988520Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2988560Z         )
2025-01-24T14:30:01.2988610Z     
2025-01-24T14:30:01.2988660Z         spectrum = (
2025-01-24T14:30:01.2988750Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2988820Z             if packets_mode == "virtual"
2025-01-24T14:30:01.2988910Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.2988950Z         )
2025-01-24T14:30:01.2989000Z     
2025-01-24T14:30:01.2989070Z         if packets_mode == "virtual":
2025-01-24T14:30:01.2989160Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.2989220Z             return cls(
2025-01-24T14:30:01.2989350Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.2989500Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.2989640Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.2989780Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.2989900Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.2989960Z                 lines_df=lines_df,
2025-01-24T14:30:01.2990060Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.2990180Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.2990290Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2990380Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2990530Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2990620Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2990700Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2990770Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2990820Z                 simulation=sim,
2025-01-24T14:30:01.2990880Z             )
2025-01-24T14:30:01.2990930Z         else: # real packets
2025-01-24T14:30:01.2991070Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.2991240Z             # which got emitted
2025-01-24T14:30:01.2991330Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.2991380Z >           return cls(
2025-01-24T14:30:01.2991520Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.2991680Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.2991730Z                     mask
2025-01-24T14:30:01.2991780Z                 ],
2025-01-24T14:30:01.2991930Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.2991980Z                     mask
2025-01-24T14:30:01.2992030Z                 ],
2025-01-24T14:30:01.2992160Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.2992220Z                     mask
2025-01-24T14:30:01.2992270Z                 ],
2025-01-24T14:30:01.2992410Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.2992460Z                 lines_df=lines_df,
2025-01-24T14:30:01.2992610Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.2992740Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.2992850Z                     mask
2025-01-24T14:30:01.2992890Z                 ],
2025-01-24T14:30:01.2993000Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.2993090Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.2993240Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.2993320Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.2993410Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.2993480Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.2993540Z                 simulation=sim,
2025-01-24T14:30:01.2993580Z             )
2025-01-24T14:30:01.2993840Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.2993850Z 
2025-01-24T14:30:01.2993980Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.2994150Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl2] _
2025-01-24T14:30:01.2994150Z 
2025-01-24T14:30:01.2994360Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.2994520Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2994700Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.2994700Z 
2025-01-24T14:30:01.2994770Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.2994860Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.2994910Z         """
2025-01-24T14:30:01.2994970Z         Create a SDECPlotter object.
2025-01-24T14:30:01.2995020Z     
2025-01-24T14:30:01.2995060Z         Parameters
2025-01-24T14:30:01.2995110Z         ----------
2025-01-24T14:30:01.2995220Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.2995290Z             Simulation object.
2025-01-24T14:30:01.2995330Z     
2025-01-24T14:30:01.2995380Z         Returns
2025-01-24T14:30:01.2995420Z         -------
2025-01-24T14:30:01.2995530Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.2995570Z         """
2025-01-24T14:30:01.2995670Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.2995680Z 
2025-01-24T14:30:01.2995790Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.2995880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2996240Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.2996420Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.2996600Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.2996700Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.2996790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.2996790Z 
2025-01-24T14:30:01.2996960Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.2997090Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.2997140Z packets_mode = 'real'
2025-01-24T14:30:01.2997150Z 
2025-01-24T14:30:01.2997190Z     @classmethod
2025-01-24T14:30:01.2997280Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.2997320Z         """
2025-01-24T14:30:01.2997480Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.2997520Z     
2025-01-24T14:30:01.2997580Z         Parameters
2025-01-24T14:30:01.2997620Z         ----------
2025-01-24T14:30:01.2997700Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.2997820Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.2998230Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.2998340Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.2998390Z     
2025-01-24T14:30:01.2998430Z         Returns
2025-01-24T14:30:01.2998480Z         -------
2025-01-24T14:30:01.2998540Z         SimulationPacketData
2025-01-24T14:30:01.2998580Z         """
2025-01-24T14:30:01.2998660Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.2998720Z             raise ValueError(
2025-01-24T14:30:01.2998810Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.2998890Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.2998940Z             )
2025-01-24T14:30:01.2999020Z         # Properties common among both packet modes
2025-01-24T14:30:01.2999150Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.2999200Z             "line_id"
2025-01-24T14:30:01.2999250Z         )
2025-01-24T14:30:01.2999340Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.2999430Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.2999490Z         time_of_simulation = (
2025-01-24T14:30:01.2999610Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.2999660Z         )
2025-01-24T14:30:01.2999700Z     
2025-01-24T14:30:01.2999760Z         spectrum = (
2025-01-24T14:30:01.2999850Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.2999910Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3000000Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3000050Z         )
2025-01-24T14:30:01.3000100Z     
2025-01-24T14:30:01.3000160Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3000260Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3000310Z             return cls(
2025-01-24T14:30:01.3000440Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3000590Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3000730Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3000880Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3001000Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3001060Z                 lines_df=lines_df,
2025-01-24T14:30:01.3001160Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3001370Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3001480Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3001570Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3001990Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3002140Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3002220Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3002300Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3002360Z                 simulation=sim,
2025-01-24T14:30:01.3002410Z             )
2025-01-24T14:30:01.3002460Z         else: # real packets
2025-01-24T14:30:01.3002600Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3002660Z             # which got emitted
2025-01-24T14:30:01.3002750Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3002800Z >           return cls(
2025-01-24T14:30:01.3002950Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3003100Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3003150Z                     mask
2025-01-24T14:30:01.3003510Z                 ],
2025-01-24T14:30:01.3003660Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3003710Z                     mask
2025-01-24T14:30:01.3003760Z                 ],
2025-01-24T14:30:01.3003900Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3003950Z                     mask
2025-01-24T14:30:01.3004010Z                 ],
2025-01-24T14:30:01.3004140Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3004210Z                 lines_df=lines_df,
2025-01-24T14:30:01.3004460Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3004650Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3004700Z                     mask
2025-01-24T14:30:01.3004750Z                 ],
2025-01-24T14:30:01.3004860Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3004960Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3005110Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3005210Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3005290Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3005370Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3005430Z                 simulation=sim,
2025-01-24T14:30:01.3005470Z             )
2025-01-24T14:30:01.3005750Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3005750Z 
2025-01-24T14:30:01.3005890Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3006060Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl3] _
2025-01-24T14:30:01.3006060Z 
2025-01-24T14:30:01.3007040Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3007260Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3007450Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3007450Z 
2025-01-24T14:30:01.3007520Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3007610Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3007660Z         """
2025-01-24T14:30:01.3007730Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3007770Z     
2025-01-24T14:30:01.3008010Z         Parameters
2025-01-24T14:30:01.3008060Z         ----------
2025-01-24T14:30:01.3008180Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3008240Z             Simulation object.
2025-01-24T14:30:01.3008290Z     
2025-01-24T14:30:01.3008330Z         Returns
2025-01-24T14:30:01.3008390Z         -------
2025-01-24T14:30:01.3008490Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3008540Z         """
2025-01-24T14:30:01.3008650Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3008660Z 
2025-01-24T14:30:01.3008770Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3008880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3009010Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3009130Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3009310Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3009420Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3009510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3009510Z 
2025-01-24T14:30:01.3009700Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3009900Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3009950Z packets_mode = 'real'
2025-01-24T14:30:01.3009960Z 
2025-01-24T14:30:01.3010010Z     @classmethod
2025-01-24T14:30:01.3010100Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3010150Z         """
2025-01-24T14:30:01.3010310Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3010360Z     
2025-01-24T14:30:01.3010410Z         Parameters
2025-01-24T14:30:01.3010460Z         ----------
2025-01-24T14:30:01.3010530Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3010660Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3010730Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3010840Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3010890Z     
2025-01-24T14:30:01.3010940Z         Returns
2025-01-24T14:30:01.3010990Z         -------
2025-01-24T14:30:01.3011050Z         SimulationPacketData
2025-01-24T14:30:01.3011100Z         """
2025-01-24T14:30:01.3011190Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3011250Z             raise ValueError(
2025-01-24T14:30:01.3011350Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3011430Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3011480Z             )
2025-01-24T14:30:01.3011560Z         # Properties common among both packet modes
2025-01-24T14:30:01.3011690Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3011740Z             "line_id"
2025-01-24T14:30:01.3011790Z         )
2025-01-24T14:30:01.3011880Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3011980Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3012050Z         time_of_simulation = (
2025-01-24T14:30:01.3012180Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3012230Z         )
2025-01-24T14:30:01.3012280Z     
2025-01-24T14:30:01.3012330Z         spectrum = (
2025-01-24T14:30:01.3012420Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3012480Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3012580Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3012630Z         )
2025-01-24T14:30:01.3012680Z     
2025-01-24T14:30:01.3012740Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3012910Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3012960Z             return cls(
2025-01-24T14:30:01.3013100Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3013240Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3013390Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3013520Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3013650Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3013710Z                 lines_df=lines_df,
2025-01-24T14:30:01.3013810Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3013940Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3014040Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3014140Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3014290Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3014380Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3014460Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3014580Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3014640Z                 simulation=sim,
2025-01-24T14:30:01.3014690Z             )
2025-01-24T14:30:01.3014750Z         else: # real packets
2025-01-24T14:30:01.3014890Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3014950Z             # which got emitted
2025-01-24T14:30:01.3015030Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3015090Z >           return cls(
2025-01-24T14:30:01.3015230Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3015380Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3015430Z                     mask
2025-01-24T14:30:01.3015480Z                 ],
2025-01-24T14:30:01.3015630Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3015700Z                     mask
2025-01-24T14:30:01.3015740Z                 ],
2025-01-24T14:30:01.3015880Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3015930Z                     mask
2025-01-24T14:30:01.3015980Z                 ],
2025-01-24T14:30:01.3016120Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3016280Z                 lines_df=lines_df,
2025-01-24T14:30:01.3016420Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3016560Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3016620Z                     mask
2025-01-24T14:30:01.3016660Z                 ],
2025-01-24T14:30:01.3016760Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3016850Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3017010Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3017090Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3017180Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3017260Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3017310Z                 simulation=sim,
2025-01-24T14:30:01.3017350Z             )
2025-01-24T14:30:01.3017620Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3017630Z 
2025-01-24T14:30:01.3018010Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3018190Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl4] _
2025-01-24T14:30:01.3018190Z 
2025-01-24T14:30:01.3018410Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3018570Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3018760Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3018760Z 
2025-01-24T14:30:01.3018830Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3018920Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3018970Z         """
2025-01-24T14:30:01.3019030Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3019080Z     
2025-01-24T14:30:01.3019130Z         Parameters
2025-01-24T14:30:01.3019170Z         ----------
2025-01-24T14:30:01.3019290Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3019350Z             Simulation object.
2025-01-24T14:30:01.3019400Z     
2025-01-24T14:30:01.3019450Z         Returns
2025-01-24T14:30:01.3019500Z         -------
2025-01-24T14:30:01.3019600Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3019650Z         """
2025-01-24T14:30:01.3020170Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3020170Z 
2025-01-24T14:30:01.3020290Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3020380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3020500Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3020610Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3020790Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3020890Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3020980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3020990Z 
2025-01-24T14:30:01.3021150Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3021280Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3021330Z packets_mode = 'real'
2025-01-24T14:30:01.3021340Z 
2025-01-24T14:30:01.3021390Z     @classmethod
2025-01-24T14:30:01.3021470Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3021510Z         """
2025-01-24T14:30:01.3021670Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3021720Z     
2025-01-24T14:30:01.3021760Z         Parameters
2025-01-24T14:30:01.3021820Z         ----------
2025-01-24T14:30:01.3021890Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3022010Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3022090Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3022200Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3022250Z     
2025-01-24T14:30:01.3022290Z         Returns
2025-01-24T14:30:01.3022340Z         -------
2025-01-24T14:30:01.3022400Z         SimulationPacketData
2025-01-24T14:30:01.3022450Z         """
2025-01-24T14:30:01.3022520Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3022580Z             raise ValueError(
2025-01-24T14:30:01.3022670Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3022750Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3022800Z             )
2025-01-24T14:30:01.3022880Z         # Properties common among both packet modes
2025-01-24T14:30:01.3023000Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3023050Z             "line_id"
2025-01-24T14:30:01.3023100Z         )
2025-01-24T14:30:01.3023240Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3023350Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3024560Z         time_of_simulation = (
2025-01-24T14:30:01.3025160Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3025310Z         )
2025-01-24T14:30:01.3025500Z     
2025-01-24T14:30:01.3025650Z         spectrum = (
2025-01-24T14:30:01.3025910Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3026190Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3033040Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3033190Z         )
2025-01-24T14:30:01.3033330Z     
2025-01-24T14:30:01.3033510Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3033780Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3033950Z             return cls(
2025-01-24T14:30:01.3034290Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3034680Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3035310Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3036170Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3036860Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3036920Z                 lines_df=lines_df,
2025-01-24T14:30:01.3037030Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3037150Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3037250Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3037360Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3037510Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3037600Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3037690Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3037760Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3037820Z                 simulation=sim,
2025-01-24T14:30:01.3037870Z             )
2025-01-24T14:30:01.3037940Z         else: # real packets
2025-01-24T14:30:01.3038070Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3038130Z             # which got emitted
2025-01-24T14:30:01.3038210Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3038260Z >           return cls(
2025-01-24T14:30:01.3038400Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3038550Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3038600Z                     mask
2025-01-24T14:30:01.3038650Z                 ],
2025-01-24T14:30:01.3038800Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3038850Z                     mask
2025-01-24T14:30:01.3038900Z                 ],
2025-01-24T14:30:01.3039030Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3039090Z                     mask
2025-01-24T14:30:01.3039130Z                 ],
2025-01-24T14:30:01.3039270Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3039320Z                 lines_df=lines_df,
2025-01-24T14:30:01.3039460Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3039590Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3039650Z                     mask
2025-01-24T14:30:01.3039690Z                 ],
2025-01-24T14:30:01.3039930Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3040040Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3040940Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3041430Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3041560Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3041640Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3041700Z                 simulation=sim,
2025-01-24T14:30:01.3041740Z             )
2025-01-24T14:30:01.3042010Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3042010Z 
2025-01-24T14:30:01.3042160Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3042320Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl5] _
2025-01-24T14:30:01.3042330Z 
2025-01-24T14:30:01.3042540Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3042710Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3042890Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3043040Z 
2025-01-24T14:30:01.3043110Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3043200Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3043250Z         """
2025-01-24T14:30:01.3043310Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3043360Z     
2025-01-24T14:30:01.3043410Z         Parameters
2025-01-24T14:30:01.3043460Z         ----------
2025-01-24T14:30:01.3043600Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3043660Z             Simulation object.
2025-01-24T14:30:01.3043710Z     
2025-01-24T14:30:01.3043760Z         Returns
2025-01-24T14:30:01.3043810Z         -------
2025-01-24T14:30:01.3043910Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3043970Z         """
2025-01-24T14:30:01.3044070Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3044080Z 
2025-01-24T14:30:01.3044190Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3044280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3044420Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3044530Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3044710Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3044820Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3044910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3044910Z 
2025-01-24T14:30:01.3045090Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3045220Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3045270Z packets_mode = 'real'
2025-01-24T14:30:01.3045280Z 
2025-01-24T14:30:01.3045320Z     @classmethod
2025-01-24T14:30:01.3045410Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3045460Z         """
2025-01-24T14:30:01.3045610Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3045660Z     
2025-01-24T14:30:01.3045720Z         Parameters
2025-01-24T14:30:01.3045760Z         ----------
2025-01-24T14:30:01.3045840Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3045960Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3046030Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3046150Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3046190Z     
2025-01-24T14:30:01.3046320Z         Returns
2025-01-24T14:30:01.3046370Z         -------
2025-01-24T14:30:01.3046440Z         SimulationPacketData
2025-01-24T14:30:01.3046480Z         """
2025-01-24T14:30:01.3046560Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3046620Z             raise ValueError(
2025-01-24T14:30:01.3046710Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3046790Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3046840Z             )
2025-01-24T14:30:01.3046920Z         # Properties common among both packet modes
2025-01-24T14:30:01.3047060Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3047110Z             "line_id"
2025-01-24T14:30:01.3047150Z         )
2025-01-24T14:30:01.3047240Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3047330Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3047390Z         time_of_simulation = (
2025-01-24T14:30:01.3047510Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3047560Z         )
2025-01-24T14:30:01.3047600Z     
2025-01-24T14:30:01.3047660Z         spectrum = (
2025-01-24T14:30:01.3047740Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3047870Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3047960Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3048010Z         )
2025-01-24T14:30:01.3048060Z     
2025-01-24T14:30:01.3048120Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3048220Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3048270Z             return cls(
2025-01-24T14:30:01.3048400Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3048540Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3048700Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3048840Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3048970Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3049030Z                 lines_df=lines_df,
2025-01-24T14:30:01.3049140Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3049270Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3049380Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3049470Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3049810Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3074200Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3074680Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3074930Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3075110Z                 simulation=sim,
2025-01-24T14:30:01.3075260Z             )
2025-01-24T14:30:01.3075440Z         else: # real packets
2025-01-24T14:30:01.3075810Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3075990Z             # which got emitted
2025-01-24T14:30:01.3076220Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3076380Z >           return cls(
2025-01-24T14:30:01.3076760Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3077160Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3077310Z                     mask
2025-01-24T14:30:01.3077470Z                 ],
2025-01-24T14:30:01.3077860Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3078920Z                     mask
2025-01-24T14:30:01.3079080Z                 ],
2025-01-24T14:30:01.3079440Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3079600Z                     mask
2025-01-24T14:30:01.3079740Z                 ],
2025-01-24T14:30:01.3080100Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3080270Z                 lines_df=lines_df,
2025-01-24T14:30:01.3080620Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3080990Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3081150Z                     mask
2025-01-24T14:30:01.3081290Z                 ],
2025-01-24T14:30:01.3081570Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3081810Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3082220Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3082440Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3082660Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3082850Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3083460Z                 simulation=sim,
2025-01-24T14:30:01.3083600Z             )
2025-01-24T14:30:01.3084330Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3084340Z 
2025-01-24T14:30:01.3084700Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3085150Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl6] _
2025-01-24T14:30:01.3085160Z 
2025-01-24T14:30:01.3085710Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3086150Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3086650Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3086660Z 
2025-01-24T14:30:01.3086850Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3087090Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3087250Z         """
2025-01-24T14:30:01.3087430Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3087580Z     
2025-01-24T14:30:01.3087740Z         Parameters
2025-01-24T14:30:01.3087900Z         ----------
2025-01-24T14:30:01.3088190Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3088370Z             Simulation object.
2025-01-24T14:30:01.3088510Z     
2025-01-24T14:30:01.3088670Z         Returns
2025-01-24T14:30:01.3088820Z         -------
2025-01-24T14:30:01.3089100Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3089240Z         """
2025-01-24T14:30:01.3089530Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3089540Z 
2025-01-24T14:30:01.3089840Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3090080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3090430Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3090740Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3091190Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3091470Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3091700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3091710Z 
2025-01-24T14:30:01.3092170Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3092510Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3092830Z packets_mode = 'real'
2025-01-24T14:30:01.3092850Z 
2025-01-24T14:30:01.3093010Z     @classmethod
2025-01-24T14:30:01.3093250Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3093390Z         """
2025-01-24T14:30:01.3093820Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3093970Z     
2025-01-24T14:30:01.3094140Z         Parameters
2025-01-24T14:30:01.3094290Z         ----------
2025-01-24T14:30:01.3094510Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3094820Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3095020Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3095300Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3095460Z     
2025-01-24T14:30:01.3095610Z         Returns
2025-01-24T14:30:01.3095770Z         -------
2025-01-24T14:30:01.3095940Z         SimulationPacketData
2025-01-24T14:30:01.3096100Z         """
2025-01-24T14:30:01.3096320Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3096500Z             raise ValueError(
2025-01-24T14:30:01.3096750Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3096970Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3097250Z             )
2025-01-24T14:30:01.3097480Z         # Properties common among both packet modes
2025-01-24T14:30:01.3097840Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3097990Z             "line_id"
2025-01-24T14:30:01.3098140Z         )
2025-01-24T14:30:01.3098360Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3098620Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3098780Z         time_of_simulation = (
2025-01-24T14:30:01.3099110Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3099250Z         )
2025-01-24T14:30:01.3099390Z     
2025-01-24T14:30:01.3099550Z         spectrum = (
2025-01-24T14:30:01.3099800Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3099980Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3100220Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3100380Z         )
2025-01-24T14:30:01.3100520Z     
2025-01-24T14:30:01.3100710Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3100960Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3101130Z             return cls(
2025-01-24T14:30:01.3101470Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3101840Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3102220Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3102580Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3102910Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3103090Z                 lines_df=lines_df,
2025-01-24T14:30:01.3103380Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3103720Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3104010Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3104270Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3104700Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3104930Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3105150Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3105350Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3105520Z                 simulation=sim,
2025-01-24T14:30:01.3105680Z             )
2025-01-24T14:30:01.3105990Z         else: # real packets
2025-01-24T14:30:01.3106360Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3106540Z             # which got emitted
2025-01-24T14:30:01.3106790Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3106960Z >           return cls(
2025-01-24T14:30:01.3107350Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3107740Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3107900Z                     mask
2025-01-24T14:30:01.3108050Z                 ],
2025-01-24T14:30:01.3108590Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3108750Z                     mask
2025-01-24T14:30:01.3108900Z                 ],
2025-01-24T14:30:01.3109270Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3109440Z                     mask
2025-01-24T14:30:01.3109580Z                 ],
2025-01-24T14:30:01.3109950Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3110130Z                 lines_df=lines_df,
2025-01-24T14:30:01.3110470Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3111000Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3111150Z                     mask
2025-01-24T14:30:01.3111300Z                 ],
2025-01-24T14:30:01.3111560Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3111810Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3112210Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3112450Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3112670Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3112880Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3113050Z                 simulation=sim,
2025-01-24T14:30:01.3113200Z             )
2025-01-24T14:30:01.3113930Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3113940Z 
2025-01-24T14:30:01.3114300Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3114750Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl7] _
2025-01-24T14:30:01.3114760Z 
2025-01-24T14:30:01.3115320Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3115760Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3116260Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3116280Z 
2025-01-24T14:30:01.3116470Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3116710Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3116860Z         """
2025-01-24T14:30:01.3117050Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3117190Z     
2025-01-24T14:30:01.3117360Z         Parameters
2025-01-24T14:30:01.3117510Z         ----------
2025-01-24T14:30:01.3117820Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3117980Z             Simulation object.
2025-01-24T14:30:01.3118130Z     
2025-01-24T14:30:01.3118280Z         Returns
2025-01-24T14:30:01.3118440Z         -------
2025-01-24T14:30:01.3118700Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3118860Z         """
2025-01-24T14:30:01.3119140Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3119150Z 
2025-01-24T14:30:01.3119480Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3119850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3120200Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3120520Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3120980Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3121270Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3121500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3121510Z 
2025-01-24T14:30:01.3121960Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3122280Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3122460Z packets_mode = 'real'
2025-01-24T14:30:01.3122460Z 
2025-01-24T14:30:01.3122620Z     @classmethod
2025-01-24T14:30:01.3122840Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3123000Z         """
2025-01-24T14:30:01.3123400Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3123550Z     
2025-01-24T14:30:01.3123700Z         Parameters
2025-01-24T14:30:01.3123860Z         ----------
2025-01-24T14:30:01.3124050Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3124470Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3124660Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3124960Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3125100Z     
2025-01-24T14:30:01.3125250Z         Returns
2025-01-24T14:30:01.3125400Z         -------
2025-01-24T14:30:01.3125580Z         SimulationPacketData
2025-01-24T14:30:01.3125730Z         """
2025-01-24T14:30:01.3125950Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3126130Z             raise ValueError(
2025-01-24T14:30:01.3126380Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3126610Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3126750Z             )
2025-01-24T14:30:01.3126990Z         # Properties common among both packet modes
2025-01-24T14:30:01.3127320Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3127490Z             "line_id"
2025-01-24T14:30:01.3127630Z         )
2025-01-24T14:30:01.3127860Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3128130Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3128320Z         time_of_simulation = (
2025-01-24T14:30:01.3128650Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3128800Z         )
2025-01-24T14:30:01.3128940Z     
2025-01-24T14:30:01.3129110Z         spectrum = (
2025-01-24T14:30:01.3129350Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3129540Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3129790Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3129940Z         )
2025-01-24T14:30:01.3130080Z     
2025-01-24T14:30:01.3130270Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3130550Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3130720Z             return cls(
2025-01-24T14:30:01.3131060Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3131420Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3131800Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3132160Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3132490Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3132660Z                 lines_df=lines_df,
2025-01-24T14:30:01.3133640Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3134010Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3134270Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3134530Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3135260Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3135520Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3135730Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3137860Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3138010Z                 simulation=sim,
2025-01-24T14:30:01.3138070Z             )
2025-01-24T14:30:01.3138170Z         else: # real packets
2025-01-24T14:30:01.3142980Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3143230Z             # which got emitted
2025-01-24T14:30:01.3143460Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3143620Z >           return cls(
2025-01-24T14:30:01.3144000Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3145010Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3145170Z                     mask
2025-01-24T14:30:01.3145320Z                 ],
2025-01-24T14:30:01.3145720Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3145880Z                     mask
2025-01-24T14:30:01.3146020Z                 ],
2025-01-24T14:30:01.3146400Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3146540Z                     mask
2025-01-24T14:30:01.3146700Z                 ],
2025-01-24T14:30:01.3147070Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3147250Z                 lines_df=lines_df,
2025-01-24T14:30:01.3147620Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3148000Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3148160Z                     mask
2025-01-24T14:30:01.3148300Z                 ],
2025-01-24T14:30:01.3148720Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3148960Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3149360Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3149590Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3149810Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3150000Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3150180Z                 simulation=sim,
2025-01-24T14:30:01.3150330Z             )
2025-01-24T14:30:01.3151040Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3151050Z 
2025-01-24T14:30:01.3151420Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3151850Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl8] _
2025-01-24T14:30:01.3151860Z 
2025-01-24T14:30:01.3152420Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3152840Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3153330Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3153340Z 
2025-01-24T14:30:01.3153530Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3153760Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3154110Z         """
2025-01-24T14:30:01.3154290Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3154440Z     
2025-01-24T14:30:01.3154600Z         Parameters
2025-01-24T14:30:01.3154750Z         ----------
2025-01-24T14:30:01.3155050Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3155230Z             Simulation object.
2025-01-24T14:30:01.3155370Z     
2025-01-24T14:30:01.3155520Z         Returns
2025-01-24T14:30:01.3155660Z         -------
2025-01-24T14:30:01.3155940Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3156080Z         """
2025-01-24T14:30:01.3156370Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3156380Z 
2025-01-24T14:30:01.3156680Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3156920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3157260Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3157570Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3158030Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3158300Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3158680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3158690Z 
2025-01-24T14:30:01.3159130Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3159460Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3159620Z packets_mode = 'real'
2025-01-24T14:30:01.3159630Z 
2025-01-24T14:30:01.3159790Z     @classmethod
2025-01-24T14:30:01.3160020Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3160160Z         """
2025-01-24T14:30:01.3160570Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3160710Z     
2025-01-24T14:30:01.3160870Z         Parameters
2025-01-24T14:30:01.3161030Z         ----------
2025-01-24T14:30:01.3161230Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3161530Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3161730Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3162020Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3162160Z     
2025-01-24T14:30:01.3162650Z         Returns
2025-01-24T14:30:01.3162710Z         -------
2025-01-24T14:30:01.3162770Z         SimulationPacketData
2025-01-24T14:30:01.3162820Z         """
2025-01-24T14:30:01.3162920Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3162980Z             raise ValueError(
2025-01-24T14:30:01.3163080Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3163160Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3163220Z             )
2025-01-24T14:30:01.3163320Z         # Properties common among both packet modes
2025-01-24T14:30:01.3163460Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3163510Z             "line_id"
2025-01-24T14:30:01.3163550Z         )
2025-01-24T14:30:01.3163630Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3163740Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3163800Z         time_of_simulation = (
2025-01-24T14:30:01.3163930Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3163970Z         )
2025-01-24T14:30:01.3164020Z     
2025-01-24T14:30:01.3164070Z         spectrum = (
2025-01-24T14:30:01.3164160Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3164220Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3164310Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3164360Z         )
2025-01-24T14:30:01.3164810Z     
2025-01-24T14:30:01.3164880Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3164980Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3165030Z             return cls(
2025-01-24T14:30:01.3165170Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3165310Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3165450Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3165590Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3165710Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3165770Z                 lines_df=lines_df,
2025-01-24T14:30:01.3165870Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3166000Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3166100Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3166190Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3166340Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3166540Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3166620Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3166690Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3166760Z                 simulation=sim,
2025-01-24T14:30:01.3166800Z             )
2025-01-24T14:30:01.3166860Z         else: # real packets
2025-01-24T14:30:01.3166990Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3167050Z             # which got emitted
2025-01-24T14:30:01.3167130Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3167190Z >           return cls(
2025-01-24T14:30:01.3167330Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3167480Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3167540Z                     mask
2025-01-24T14:30:01.3167590Z                 ],
2025-01-24T14:30:01.3167740Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3167790Z                     mask
2025-01-24T14:30:01.3167840Z                 ],
2025-01-24T14:30:01.3167980Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3168040Z                     mask
2025-01-24T14:30:01.3168080Z                 ],
2025-01-24T14:30:01.3168230Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3168290Z                 lines_df=lines_df,
2025-01-24T14:30:01.3168420Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3168560Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3168610Z                     mask
2025-01-24T14:30:01.3168660Z                 ],
2025-01-24T14:30:01.3168760Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3168860Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3169010Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3169100Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3169180Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3169260Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3169310Z                 simulation=sim,
2025-01-24T14:30:01.3169360Z             )
2025-01-24T14:30:01.3169690Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3169700Z 
2025-01-24T14:30:01.3169850Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3170010Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl9] _
2025-01-24T14:30:01.3170010Z 
2025-01-24T14:30:01.3170230Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3170390Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3170580Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3170580Z 
2025-01-24T14:30:01.3170650Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3170740Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3170800Z         """
2025-01-24T14:30:01.3170860Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3170910Z     
2025-01-24T14:30:01.3170960Z         Parameters
2025-01-24T14:30:01.3171010Z         ----------
2025-01-24T14:30:01.3171120Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3171190Z             Simulation object.
2025-01-24T14:30:01.3171230Z     
2025-01-24T14:30:01.3171280Z         Returns
2025-01-24T14:30:01.3171330Z         -------
2025-01-24T14:30:01.3171480Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3171530Z         """
2025-01-24T14:30:01.3171630Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3171640Z 
2025-01-24T14:30:01.3171750Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3171840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3171970Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3172080Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3172250Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3172360Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3172450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3172450Z 
2025-01-24T14:30:01.3172620Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3172750Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3172810Z packets_mode = 'real'
2025-01-24T14:30:01.3172810Z 
2025-01-24T14:30:01.3172860Z     @classmethod
2025-01-24T14:30:01.3172940Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3172980Z         """
2025-01-24T14:30:01.3173140Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3173190Z     
2025-01-24T14:30:01.3173230Z         Parameters
2025-01-24T14:30:01.3173280Z         ----------
2025-01-24T14:30:01.3173360Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3173480Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3173540Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3173650Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3173700Z     
2025-01-24T14:30:01.3173750Z         Returns
2025-01-24T14:30:01.3173790Z         -------
2025-01-24T14:30:01.3173850Z         SimulationPacketData
2025-01-24T14:30:01.3173900Z         """
2025-01-24T14:30:01.3173980Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3174030Z             raise ValueError(
2025-01-24T14:30:01.3174120Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3174200Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3174250Z             )
2025-01-24T14:30:01.3174330Z         # Properties common among both packet modes
2025-01-24T14:30:01.3174550Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3174610Z             "line_id"
2025-01-24T14:30:01.3174660Z         )
2025-01-24T14:30:01.3174740Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3174840Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3174900Z         time_of_simulation = (
2025-01-24T14:30:01.3175030Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3175080Z         )
2025-01-24T14:30:01.3175120Z     
2025-01-24T14:30:01.3175170Z         spectrum = (
2025-01-24T14:30:01.3175260Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3175320Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3175420Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3175460Z         )
2025-01-24T14:30:01.3175510Z     
2025-01-24T14:30:01.3175570Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3175670Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3175720Z             return cls(
2025-01-24T14:30:01.3175850Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3175990Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3176130Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3176360Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3176500Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3176550Z                 lines_df=lines_df,
2025-01-24T14:30:01.3176650Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3176780Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3176880Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3176980Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3177130Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3177220Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3177300Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3177380Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3177440Z                 simulation=sim,
2025-01-24T14:30:01.3177490Z             )
2025-01-24T14:30:01.3177540Z         else: # real packets
2025-01-24T14:30:01.3177670Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3177730Z             # which got emitted
2025-01-24T14:30:01.3177820Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3177870Z >           return cls(
2025-01-24T14:30:01.3178010Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3178150Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3178200Z                     mask
2025-01-24T14:30:01.3178250Z                 ],
2025-01-24T14:30:01.3178400Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3178450Z                     mask
2025-01-24T14:30:01.3178490Z                 ],
2025-01-24T14:30:01.3178630Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3178680Z                     mask
2025-01-24T14:30:01.3178730Z                 ],
2025-01-24T14:30:01.3178860Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3178910Z                 lines_df=lines_df,
2025-01-24T14:30:01.3179040Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3179180Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3179290Z                     mask
2025-01-24T14:30:01.3179350Z                 ],
2025-01-24T14:30:01.3179450Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3179540Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3179690Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3179780Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3179860Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3179930Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3179990Z                 simulation=sim,
2025-01-24T14:30:01.3184820Z             )
2025-01-24T14:30:01.3185130Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3185130Z 
2025-01-24T14:30:01.3185270Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3185440Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl10] _
2025-01-24T14:30:01.3185440Z 
2025-01-24T14:30:01.3185650Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3185810Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3186210Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3186210Z 
2025-01-24T14:30:01.3186280Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3186370Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3186420Z         """
2025-01-24T14:30:01.3186480Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3186520Z     
2025-01-24T14:30:01.3186570Z         Parameters
2025-01-24T14:30:01.3186620Z         ----------
2025-01-24T14:30:01.3186730Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3186800Z             Simulation object.
2025-01-24T14:30:01.3186840Z     
2025-01-24T14:30:01.3186890Z         Returns
2025-01-24T14:30:01.3186940Z         -------
2025-01-24T14:30:01.3187040Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3187080Z         """
2025-01-24T14:30:01.3187190Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3187200Z 
2025-01-24T14:30:01.3187310Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3187400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3187520Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3187630Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3187800Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3187910Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3188000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3188010Z 
2025-01-24T14:30:01.3188180Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3188300Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3188360Z packets_mode = 'real'
2025-01-24T14:30:01.3188360Z 
2025-01-24T14:30:01.3188410Z     @classmethod
2025-01-24T14:30:01.3188490Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3188680Z         """
2025-01-24T14:30:01.3188830Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3188880Z     
2025-01-24T14:30:01.3188940Z         Parameters
2025-01-24T14:30:01.3188990Z         ----------
2025-01-24T14:30:01.3189060Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3189180Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3189240Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3189420Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3189480Z     
2025-01-24T14:30:01.3189520Z         Returns
2025-01-24T14:30:01.3189580Z         -------
2025-01-24T14:30:01.3189640Z         SimulationPacketData
2025-01-24T14:30:01.3189690Z         """
2025-01-24T14:30:01.3189770Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3189830Z             raise ValueError(
2025-01-24T14:30:01.3189920Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3190000Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3190050Z             )
2025-01-24T14:30:01.3190130Z         # Properties common among both packet modes
2025-01-24T14:30:01.3190260Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3190310Z             "line_id"
2025-01-24T14:30:01.3190350Z         )
2025-01-24T14:30:01.3190430Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3190530Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3190590Z         time_of_simulation = (
2025-01-24T14:30:01.3190720Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3190760Z         )
2025-01-24T14:30:01.3190860Z     
2025-01-24T14:30:01.3190910Z         spectrum = (
2025-01-24T14:30:01.3191000Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3191060Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3191160Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3191200Z         )
2025-01-24T14:30:01.3191240Z     
2025-01-24T14:30:01.3191310Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3191400Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3191450Z             return cls(
2025-01-24T14:30:01.3191580Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3191720Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3191860Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3192000Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3192130Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3192190Z                 lines_df=lines_df,
2025-01-24T14:30:01.3192290Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3192420Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3192530Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3192620Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3192770Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3192850Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3192940Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3193000Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3193060Z                 simulation=sim,
2025-01-24T14:30:01.3193110Z             )
2025-01-24T14:30:01.3193160Z         else: # real packets
2025-01-24T14:30:01.3193300Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3193350Z             # which got emitted
2025-01-24T14:30:01.3193440Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3193490Z >           return cls(
2025-01-24T14:30:01.3193620Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3193770Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3193820Z                     mask
2025-01-24T14:30:01.3193860Z                 ],
2025-01-24T14:30:01.3194070Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3194120Z                     mask
2025-01-24T14:30:01.3194170Z                 ],
2025-01-24T14:30:01.3194300Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3194360Z                     mask
2025-01-24T14:30:01.3194400Z                 ],
2025-01-24T14:30:01.3194530Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3194590Z                 lines_df=lines_df,
2025-01-24T14:30:01.3194720Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3194860Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3194910Z                     mask
2025-01-24T14:30:01.3194960Z                 ],
2025-01-24T14:30:01.3195060Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3195160Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3195300Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3195390Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3195520Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3195600Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3195650Z                 simulation=sim,
2025-01-24T14:30:01.3195700Z             )
2025-01-24T14:30:01.3195960Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3195960Z 
2025-01-24T14:30:01.3196090Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3196260Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl11] _
2025-01-24T14:30:01.3196260Z 
2025-01-24T14:30:01.3196470Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3196640Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3196820Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3196820Z 
2025-01-24T14:30:01.3196890Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3196980Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3197020Z         """
2025-01-24T14:30:01.3197090Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3197130Z     
2025-01-24T14:30:01.3197180Z         Parameters
2025-01-24T14:30:01.3197220Z         ----------
2025-01-24T14:30:01.3197340Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3197390Z             Simulation object.
2025-01-24T14:30:01.3197440Z     
2025-01-24T14:30:01.3197480Z         Returns
2025-01-24T14:30:01.3197530Z         -------
2025-01-24T14:30:01.3197630Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3197680Z         """
2025-01-24T14:30:01.3197790Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3197790Z 
2025-01-24T14:30:01.3197900Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3197990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3198120Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3198240Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3198400Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3198510Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3198600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3198600Z 
2025-01-24T14:30:01.3199110Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3199250Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3199310Z packets_mode = 'real'
2025-01-24T14:30:01.3199310Z 
2025-01-24T14:30:01.3199360Z     @classmethod
2025-01-24T14:30:01.3199440Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3199490Z         """
2025-01-24T14:30:01.3199650Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3199690Z     
2025-01-24T14:30:01.3199740Z         Parameters
2025-01-24T14:30:01.3199790Z         ----------
2025-01-24T14:30:01.3199860Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3199980Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3200050Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3200160Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3200200Z     
2025-01-24T14:30:01.3200250Z         Returns
2025-01-24T14:30:01.3200300Z         -------
2025-01-24T14:30:01.3200370Z         SimulationPacketData
2025-01-24T14:30:01.3200410Z         """
2025-01-24T14:30:01.3200490Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3200540Z             raise ValueError(
2025-01-24T14:30:01.3201100Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3201180Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3201230Z             )
2025-01-24T14:30:01.3201310Z         # Properties common among both packet modes
2025-01-24T14:30:01.3201430Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3201490Z             "line_id"
2025-01-24T14:30:01.3201530Z         )
2025-01-24T14:30:01.3201620Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3201710Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3201770Z         time_of_simulation = (
2025-01-24T14:30:01.3201890Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3201940Z         )
2025-01-24T14:30:01.3201990Z     
2025-01-24T14:30:01.3202040Z         spectrum = (
2025-01-24T14:30:01.3202120Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3202190Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3202290Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3202340Z         )
2025-01-24T14:30:01.3202380Z     
2025-01-24T14:30:01.3202440Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3202540Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3202590Z             return cls(
2025-01-24T14:30:01.3202710Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3202850Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3203000Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3203130Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3203250Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3203310Z                 lines_df=lines_df,
2025-01-24T14:30:01.3203410Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3203540Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3203640Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3203720Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3203870Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3203950Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3204030Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3204160Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3204220Z                 simulation=sim,
2025-01-24T14:30:01.3204270Z             )
2025-01-24T14:30:01.3204320Z         else: # real packets
2025-01-24T14:30:01.3204460Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3204520Z             # which got emitted
2025-01-24T14:30:01.3204610Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3204660Z >           return cls(
2025-01-24T14:30:01.3204790Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3204940Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3204990Z                     mask
2025-01-24T14:30:01.3205030Z                 ],
2025-01-24T14:30:01.3205180Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3205230Z                     mask
2025-01-24T14:30:01.3205280Z                 ],
2025-01-24T14:30:01.3205410Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3205460Z                     mask
2025-01-24T14:30:01.3205510Z                 ],
2025-01-24T14:30:01.3205640Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3205750Z                 lines_df=lines_df,
2025-01-24T14:30:01.3205880Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3206020Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3206070Z                     mask
2025-01-24T14:30:01.3206110Z                 ],
2025-01-24T14:30:01.3206210Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3206300Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3206460Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3206540Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3206620Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3206690Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3206750Z                 simulation=sim,
2025-01-24T14:30:01.3206790Z             )
2025-01-24T14:30:01.3207060Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3207060Z 
2025-01-24T14:30:01.3207200Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3207360Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl12] _
2025-01-24T14:30:01.3207360Z 
2025-01-24T14:30:01.3207570Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3207730Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3207910Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3207920Z 
2025-01-24T14:30:01.3207980Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3208070Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3208120Z         """
2025-01-24T14:30:01.3208190Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3208240Z     
2025-01-24T14:30:01.3208280Z         Parameters
2025-01-24T14:30:01.3208330Z         ----------
2025-01-24T14:30:01.3208440Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3208500Z             Simulation object.
2025-01-24T14:30:01.3208540Z     
2025-01-24T14:30:01.3208590Z         Returns
2025-01-24T14:30:01.3208630Z         -------
2025-01-24T14:30:01.3208730Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3208780Z         """
2025-01-24T14:30:01.3208930Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3208940Z 
2025-01-24T14:30:01.3209050Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3209150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3209270Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3209400Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3209570Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3209670Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3209760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3209770Z 
2025-01-24T14:30:01.3209930Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3210060Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3210110Z packets_mode = 'real'
2025-01-24T14:30:01.3210110Z 
2025-01-24T14:30:01.3210160Z     @classmethod
2025-01-24T14:30:01.3210240Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3210290Z         """
2025-01-24T14:30:01.3210440Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3210540Z     
2025-01-24T14:30:01.3210600Z         Parameters
2025-01-24T14:30:01.3210640Z         ----------
2025-01-24T14:30:01.3210720Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3210830Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3210900Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3211000Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3211050Z     
2025-01-24T14:30:01.3211100Z         Returns
2025-01-24T14:30:01.3211140Z         -------
2025-01-24T14:30:01.3211200Z         SimulationPacketData
2025-01-24T14:30:01.3211250Z         """
2025-01-24T14:30:01.3211330Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3211390Z             raise ValueError(
2025-01-24T14:30:01.3211470Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3211550Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3211600Z             )
2025-01-24T14:30:01.3211680Z         # Properties common among both packet modes
2025-01-24T14:30:01.3211810Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3211860Z             "line_id"
2025-01-24T14:30:01.3211900Z         )
2025-01-24T14:30:01.3211980Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3212080Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3212130Z         time_of_simulation = (
2025-01-24T14:30:01.3212260Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3212300Z         )
2025-01-24T14:30:01.3212350Z     
2025-01-24T14:30:01.3212400Z         spectrum = (
2025-01-24T14:30:01.3212490Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3212550Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3212650Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3212690Z         )
2025-01-24T14:30:01.3212740Z     
2025-01-24T14:30:01.3212800Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3212900Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3212950Z             return cls(
2025-01-24T14:30:01.3213070Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3213210Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3213350Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3213490Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3213660Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3213720Z                 lines_df=lines_df,
2025-01-24T14:30:01.3213820Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3213950Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3214060Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3214150Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3214300Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3214380Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3214470Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3214530Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3214590Z                 simulation=sim,
2025-01-24T14:30:01.3214630Z             )
2025-01-24T14:30:01.3214690Z         else: # real packets
2025-01-24T14:30:01.3214820Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3214890Z             # which got emitted
2025-01-24T14:30:01.3214970Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3215070Z >           return cls(
2025-01-24T14:30:01.3215210Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3215360Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3215420Z                     mask
2025-01-24T14:30:01.3215470Z                 ],
2025-01-24T14:30:01.3215620Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3215670Z                     mask
2025-01-24T14:30:01.3215720Z                 ],
2025-01-24T14:30:01.3215860Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3215910Z                     mask
2025-01-24T14:30:01.3215960Z                 ],
2025-01-24T14:30:01.3216090Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3216150Z                 lines_df=lines_df,
2025-01-24T14:30:01.3216290Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3216430Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3216480Z                     mask
2025-01-24T14:30:01.3216520Z                 ],
2025-01-24T14:30:01.3216620Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3216710Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3216860Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3216950Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3217030Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3217100Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3217150Z                 simulation=sim,
2025-01-24T14:30:01.3217200Z             )
2025-01-24T14:30:01.3217460Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3217460Z 
2025-01-24T14:30:01.3217600Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3217760Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl13] _
2025-01-24T14:30:01.3217760Z 
2025-01-24T14:30:01.3217970Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3218130Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3218310Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3218310Z 
2025-01-24T14:30:01.3218720Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3218830Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3218890Z         """
2025-01-24T14:30:01.3218950Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3219000Z     
2025-01-24T14:30:01.3219040Z         Parameters
2025-01-24T14:30:01.3219100Z         ----------
2025-01-24T14:30:01.3219210Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3219270Z             Simulation object.
2025-01-24T14:30:01.3219320Z     
2025-01-24T14:30:01.3219360Z         Returns
2025-01-24T14:30:01.3219410Z         -------
2025-01-24T14:30:01.3219510Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3219550Z         """
2025-01-24T14:30:01.3219670Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3219670Z 
2025-01-24T14:30:01.3219790Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3219880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3220010Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3220120Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3220290Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3220560Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3220650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3220660Z 
2025-01-24T14:30:01.3220820Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3220950Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3221000Z packets_mode = 'real'
2025-01-24T14:30:01.3221010Z 
2025-01-24T14:30:01.3221050Z     @classmethod
2025-01-24T14:30:01.3221130Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3221180Z         """
2025-01-24T14:30:01.3221340Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3221390Z     
2025-01-24T14:30:01.3221440Z         Parameters
2025-01-24T14:30:01.3221480Z         ----------
2025-01-24T14:30:01.3221560Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3221670Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3221740Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3221850Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3221890Z     
2025-01-24T14:30:01.3221940Z         Returns
2025-01-24T14:30:01.3221980Z         -------
2025-01-24T14:30:01.3222050Z         SimulationPacketData
2025-01-24T14:30:01.3222090Z         """
2025-01-24T14:30:01.3222170Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3222220Z             raise ValueError(
2025-01-24T14:30:01.3222320Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3222400Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3222450Z             )
2025-01-24T14:30:01.3222520Z         # Properties common among both packet modes
2025-01-24T14:30:01.3222650Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3222700Z             "line_id"
2025-01-24T14:30:01.3222750Z         )
2025-01-24T14:30:01.3222840Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3222930Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3222990Z         time_of_simulation = (
2025-01-24T14:30:01.3223110Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3223160Z         )
2025-01-24T14:30:01.3223200Z     
2025-01-24T14:30:01.3223250Z         spectrum = (
2025-01-24T14:30:01.3223340Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3223460Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3223550Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3223600Z         )
2025-01-24T14:30:01.3223650Z     
2025-01-24T14:30:01.3223710Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3223810Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3223860Z             return cls(
2025-01-24T14:30:01.3223990Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3224130Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3224270Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3224410Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3224530Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3224590Z                 lines_df=lines_df,
2025-01-24T14:30:01.3224700Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3224820Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3224930Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3225020Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3225230Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3225320Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3225410Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3225480Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3225550Z                 simulation=sim,
2025-01-24T14:30:01.3225590Z             )
2025-01-24T14:30:01.3225650Z         else: # real packets
2025-01-24T14:30:01.3225790Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3225850Z             # which got emitted
2025-01-24T14:30:01.3225940Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3225990Z >           return cls(
2025-01-24T14:30:01.3226140Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3226280Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3226350Z                     mask
2025-01-24T14:30:01.3226400Z                 ],
2025-01-24T14:30:01.3226560Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3226610Z                     mask
2025-01-24T14:30:01.3226650Z                 ],
2025-01-24T14:30:01.3226790Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3226840Z                     mask
2025-01-24T14:30:01.3226890Z                 ],
2025-01-24T14:30:01.3227030Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3227090Z                 lines_df=lines_df,
2025-01-24T14:30:01.3227220Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3227360Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3227410Z                     mask
2025-01-24T14:30:01.3227470Z                 ],
2025-01-24T14:30:01.3227570Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3227670Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3227810Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3227900Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3227990Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3228050Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3228110Z                 simulation=sim,
2025-01-24T14:30:01.3228210Z             )
2025-01-24T14:30:01.3228480Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3228480Z 
2025-01-24T14:30:01.3228720Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3228890Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl14] _
2025-01-24T14:30:01.3228900Z 
2025-01-24T14:30:01.3229100Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3229260Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3229450Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3229450Z 
2025-01-24T14:30:01.3229510Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3229600Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3229650Z         """
2025-01-24T14:30:01.3229710Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3229760Z     
2025-01-24T14:30:01.3229810Z         Parameters
2025-01-24T14:30:01.3229850Z         ----------
2025-01-24T14:30:01.3229960Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3230120Z             Simulation object.
2025-01-24T14:30:01.3230170Z     
2025-01-24T14:30:01.3230210Z         Returns
2025-01-24T14:30:01.3230270Z         -------
2025-01-24T14:30:01.3230370Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3230410Z         """
2025-01-24T14:30:01.3230520Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3230520Z 
2025-01-24T14:30:01.3230630Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3230730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3230850Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3230970Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3231140Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3231240Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3231330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3231330Z 
2025-01-24T14:30:01.3231510Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3231640Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3231690Z packets_mode = 'real'
2025-01-24T14:30:01.3231690Z 
2025-01-24T14:30:01.3231740Z     @classmethod
2025-01-24T14:30:01.3235850Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3235950Z         """
2025-01-24T14:30:01.3236110Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3236160Z     
2025-01-24T14:30:01.3236210Z         Parameters
2025-01-24T14:30:01.3236260Z         ----------
2025-01-24T14:30:01.3236340Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3236450Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3236530Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3236640Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3236690Z     
2025-01-24T14:30:01.3236730Z         Returns
2025-01-24T14:30:01.3236780Z         -------
2025-01-24T14:30:01.3236840Z         SimulationPacketData
2025-01-24T14:30:01.3236890Z         """
2025-01-24T14:30:01.3236970Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3237020Z             raise ValueError(
2025-01-24T14:30:01.3237120Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3237200Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3237240Z             )
2025-01-24T14:30:01.3237540Z         # Properties common among both packet modes
2025-01-24T14:30:01.3237680Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3237730Z             "line_id"
2025-01-24T14:30:01.3237780Z         )
2025-01-24T14:30:01.3237870Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3237970Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3238020Z         time_of_simulation = (
2025-01-24T14:30:01.3238150Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3238190Z         )
2025-01-24T14:30:01.3238240Z     
2025-01-24T14:30:01.3238290Z         spectrum = (
2025-01-24T14:30:01.3238370Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3238440Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3238530Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3238580Z         )
2025-01-24T14:30:01.3238630Z     
2025-01-24T14:30:01.3238690Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3238790Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3238850Z             return cls(
2025-01-24T14:30:01.3238970Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3239170Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3239320Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3239450Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3239570Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3239640Z                 lines_df=lines_df,
2025-01-24T14:30:01.3239730Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3239860Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3239970Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3240060Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3240210Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3240300Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3240380Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3240450Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3240500Z                 simulation=sim,
2025-01-24T14:30:01.3240550Z             )
2025-01-24T14:30:01.3240600Z         else: # real packets
2025-01-24T14:30:01.3240730Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3240790Z             # which got emitted
2025-01-24T14:30:01.3240870Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3240920Z >           return cls(
2025-01-24T14:30:01.3241060Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3241210Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3241260Z                     mask
2025-01-24T14:30:01.3241300Z                 ],
2025-01-24T14:30:01.3241450Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3241500Z                     mask
2025-01-24T14:30:01.3241550Z                 ],
2025-01-24T14:30:01.3241690Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3241740Z                     mask
2025-01-24T14:30:01.3241780Z                 ],
2025-01-24T14:30:01.3241910Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3241970Z                 lines_df=lines_df,
2025-01-24T14:30:01.3242630Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3242870Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3242910Z                     mask
2025-01-24T14:30:01.3242960Z                 ],
2025-01-24T14:30:01.3243060Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3243150Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3243300Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3243390Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3243470Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3243550Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3243610Z                 simulation=sim,
2025-01-24T14:30:01.3243650Z             )
2025-01-24T14:30:01.3243910Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3243920Z 
2025-01-24T14:30:01.3244050Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3244220Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl15] _
2025-01-24T14:30:01.3244220Z 
2025-01-24T14:30:01.3244630Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x11e0a37d0>
2025-01-24T14:30:01.3244800Z simulation_simple = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3244980Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:30:01.3244980Z 
2025-01-24T14:30:01.3245050Z     @pytest.fixture(scope="class")
2025-01-24T14:30:01.3245130Z     def plotter(self, simulation_simple, request):
2025-01-24T14:30:01.3245180Z         """
2025-01-24T14:30:01.3245240Z         Create a SDECPlotter object.
2025-01-24T14:30:01.3245290Z     
2025-01-24T14:30:01.3245340Z         Parameters
2025-01-24T14:30:01.3245390Z         ----------
2025-01-24T14:30:01.3245500Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:30:01.3245560Z             Simulation object.
2025-01-24T14:30:01.3245610Z     
2025-01-24T14:30:01.3245650Z         Returns
2025-01-24T14:30:01.3245700Z         -------
2025-01-24T14:30:01.3245810Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:30:01.3245860Z         """
2025-01-24T14:30:01.3245960Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:30:01.3245960Z 
2025-01-24T14:30:01.3246080Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:30:01.3246170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3246290Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:30:01.3246400Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:30:01.3246570Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:30:01.3246680Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:30:01.3246760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:30:01.3246770Z 
2025-01-24T14:30:01.3246940Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:30:01.3247070Z sim = <tardis.simulation.base.Simulation object at 0x31af36c90>
2025-01-24T14:30:01.3247130Z packets_mode = 'real'
2025-01-24T14:30:01.3247130Z 
2025-01-24T14:30:01.3247180Z     @classmethod
2025-01-24T14:30:01.3247260Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:30:01.3247310Z         """
2025-01-24T14:30:01.3247470Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:30:01.3247520Z     
2025-01-24T14:30:01.3247570Z         Parameters
2025-01-24T14:30:01.3247620Z         ----------
2025-01-24T14:30:01.3247690Z         sim : tardis.simulation.Simulation
2025-01-24T14:30:01.3247870Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:30:01.3247940Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:30:01.3248050Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:30:01.3248090Z     
2025-01-24T14:30:01.3248150Z         Returns
2025-01-24T14:30:01.3248190Z         -------
2025-01-24T14:30:01.3248250Z         SimulationPacketData
2025-01-24T14:30:01.3248300Z         """
2025-01-24T14:30:01.3248380Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:30:01.3248430Z             raise ValueError(
2025-01-24T14:30:01.3248520Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:30:01.3248600Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:30:01.3248650Z             )
2025-01-24T14:30:01.3248730Z         # Properties common among both packet modes
2025-01-24T14:30:01.3248860Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:30:01.3248910Z             "line_id"
2025-01-24T14:30:01.3248960Z         )
2025-01-24T14:30:01.3249050Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:30:01.3249140Z         transport_state = sim.transport.transport_state
2025-01-24T14:30:01.3249200Z         time_of_simulation = (
2025-01-24T14:30:01.3249390Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:30:01.3249440Z         )
2025-01-24T14:30:01.3249480Z     
2025-01-24T14:30:01.3249530Z         spectrum = (
2025-01-24T14:30:01.3249620Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:30:01.3249690Z             if packets_mode == "virtual"
2025-01-24T14:30:01.3249770Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:30:01.3249820Z         )
2025-01-24T14:30:01.3249860Z     
2025-01-24T14:30:01.3249920Z         if packets_mode == "virtual":
2025-01-24T14:30:01.3250020Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:30:01.3250080Z             return cls(
2025-01-24T14:30:01.3250210Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:30:01.3250350Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:30:01.3250490Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:30:01.3250630Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:30:01.3250760Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:30:01.3250820Z                 lines_df=lines_df,
2025-01-24T14:30:01.3250910Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:30:01.3251040Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:30:01.3251140Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3251230Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3251380Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3251470Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3251550Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3251620Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3251680Z                 simulation=sim,
2025-01-24T14:30:01.3251730Z             )
2025-01-24T14:30:01.3251780Z         else: # real packets
2025-01-24T14:30:01.3251910Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:30:01.3251970Z             # which got emitted
2025-01-24T14:30:01.3252060Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:30:01.3252110Z >           return cls(
2025-01-24T14:30:01.3252250Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:30:01.3252440Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:30:01.3252490Z                     mask
2025-01-24T14:30:01.3252540Z                 ],
2025-01-24T14:30:01.3252690Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:30:01.3252740Z                     mask
2025-01-24T14:30:01.3252790Z                 ],
2025-01-24T14:30:01.3252930Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:30:01.3252980Z                     mask
2025-01-24T14:30:01.3253030Z                 ],
2025-01-24T14:30:01.3253160Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:30:01.3253220Z                 lines_df=lines_df,
2025-01-24T14:30:01.3253360Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:30:01.3253500Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:30:01.3253550Z                     mask
2025-01-24T14:30:01.3253590Z                 ],
2025-01-24T14:30:01.3253700Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:30:01.3253780Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:30:01.3253930Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:30:01.3254060Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:30:01.3254150Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:30:01.3254210Z                 time_explosion=time_explosion,
2025-01-24T14:30:01.3254270Z                 simulation=sim,
2025-01-24T14:30:01.3254320Z             )
2025-01-24T14:30:01.3254570Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3254580Z 
2025-01-24T14:30:01.3254710Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:30:01.3254800Z =============================== warnings summary ===============================
2025-01-24T14:30:01.3254900Z tardis/io/configuration/config_validator.py:6
2025-01-24T14:30:01.3254980Z tardis/io/configuration/config_validator.py:6
2025-01-24T14:30:01.3255230Z   /Users/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-24T14:30:01.3255280Z   
2025-01-24T14:30:01.3256420Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-24T14:30:01.3256430Z 
2025-01-24T14:30:01.3256630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-24T14:30:01.3256910Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-24T14:30:01.3256960Z   
2025-01-24T14:30:01.3257080Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-24T14:30:01.3257200Z   given by the platformdirs library.  To remove this warning and
2025-01-24T14:30:01.3257330Z   see the appropriate new directories, set the environment variable
2025-01-24T14:30:01.3257450Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-24T14:30:01.3257570Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-24T14:30:01.3257570Z 
2025-01-24T14:30:01.3263110Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-24T14:30:01.3263330Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:30:01.3263500Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-24T14:30:01.3263550Z   
2025-01-24T14:30:01.3263590Z   
2025-01-24T14:30:01.3264080Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-24T14:30:01.3264300Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-24T14:30:01.3264300Z 
2025-01-24T14:30:01.3264460Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-24T14:30:01.3264630Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-24T14:30:01.3264820Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-24T14:30:01.3264950Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-24T14:30:01.3265200Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-24T14:30:01.3265250Z   
2025-01-24T14:30:01.3265340Z   The current CMFGEN model parser is deprecated
2025-01-24T14:30:01.3265340Z 
2025-01-24T14:30:01.3265420Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-24T14:30:01.3265560Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-24T14:30:01.3265810Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-24T14:30:01.3265850Z   
2025-01-24T14:30:01.3265940Z   The current CMFGEN model parser is deprecated
2025-01-24T14:30:01.3266040Z 
2025-01-24T14:30:01.3266210Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-24T14:30:01.3266500Z   /Users/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-24T14:30:01.3266550Z   
2025-01-24T14:30:01.3266970Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-24T14:30:01.3266970Z 
2025-01-24T14:30:01.3267050Z tardis/model/tests/test_base.py: 6 warnings
2025-01-24T14:30:01.3267140Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-24T14:30:01.3267280Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-24T14:30:01.3267490Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-24T14:30:01.3267530Z   
2025-01-24T14:30:01.3267610Z   v_inner_boundary < 0, assuming default value
2025-01-24T14:30:01.3267610Z 
2025-01-24T14:30:01.3267680Z tardis/model/tests/test_base.py: 6 warnings
2025-01-24T14:30:01.3267770Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-24T14:30:01.3267910Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-24T14:30:01.3268120Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-24T14:30:01.3268160Z   
2025-01-24T14:30:01.3268240Z   v_outer_boundary < 0, assuming default value
2025-01-24T14:30:01.3268240Z 
2025-01-24T14:30:01.3268600Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-24T14:30:01.3268980Z   /Users/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-24T14:30:01.3269030Z   
2025-01-24T14:30:01.3269250Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-24T14:30:01.3269600Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-24T14:30:01.3269650Z   
2025-01-24T14:30:01.3270070Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-24T14:30:01.3270070Z 
2025-01-24T14:30:01.3270190Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-24T14:30:01.3270410Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:30:01.3270460Z   
2025-01-24T14:30:01.3270830Z   Property "atomic_mass" not found
2025-01-24T14:30:01.3270850Z 
2025-01-24T14:30:01.3271210Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-24T14:30:01.3271510Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-24T14:30:01.3271750Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:30:01.3271800Z   
2025-01-24T14:30:01.3271870Z   Property "j_blues_norm_factor" not found
2025-01-24T14:30:01.3271880Z 
2025-01-24T14:30:01.3272200Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-24T14:30:01.3272490Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-24T14:30:01.3272710Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:30:01.3272760Z   
2025-01-24T14:30:01.3272830Z   Property "j_blue_estimator" not found
2025-01-24T14:30:01.3272830Z 
2025-01-24T14:30:01.3273130Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-24T14:30:01.3273670Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-24T14:30:01.3273890Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:30:01.3273940Z   
2025-01-24T14:30:01.3274000Z   Property "volume" not found
2025-01-24T14:30:01.3274000Z 
2025-01-24T14:30:01.3274300Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-24T14:30:01.3274570Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-24T14:30:01.3274790Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:30:01.3274840Z   
2025-01-24T14:30:01.3274900Z   Property "r_inner" not found
2025-01-24T14:30:01.3274910Z 
2025-01-24T14:30:01.3275070Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-24T14:30:01.3275230Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-24T14:30:01.3275400Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-24T14:30:01.3275590Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-24T14:30:01.3275640Z   
2025-01-24T14:30:01.3275780Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-24T14:30:01.3275790Z 
2025-01-24T14:30:01.3275950Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-24T14:30:01.3276110Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-24T14:30:01.3276160Z   
2025-01-24T14:30:01.3276420Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-24T14:30:01.3276430Z 
2025-01-24T14:30:01.3276590Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-24T14:30:01.3276750Z   /Users/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-24T14:30:01.3276800Z   
2025-01-24T14:30:01.3277070Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-24T14:30:01.3277080Z 
2025-01-24T14:30:01.3277240Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-01-24T14:30:01.3277330Z   <string>:3: NumbaPendingDeprecationWarning:
2025-01-24T14:30:01.3277380Z   
2025-01-24T14:30:01.3278360Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-01-24T14:30:01.3278420Z   Exception origin:
2025-01-24T14:30:01.3278630Z     File "/Users/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-01-24T14:30:01.3278700Z       raise TypeError(msg) from None
2025-01-24T14:30:01.3278770Z   [0m[0m
2025-01-24T14:30:01.3278770Z 
2025-01-24T14:30:01.3279060Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:30:01.3279330Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:30:01.3279610Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:30:01.3279890Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:30:01.3280150Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:30:01.3280420Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:30:01.3280760Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-24T14:30:01.3280800Z   
2025-01-24T14:30:01.3280950Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-24T14:30:01.3281090Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-24T14:30:01.3281280Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-24T14:30:01.3281280Z 
2025-01-24T14:30:01.3281560Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:30:01.3281840Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:30:01.3282110Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-24T14:30:01.3282160Z   
2025-01-24T14:30:01.3282300Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-24T14:30:01.3282440Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-24T14:30:01.3282620Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-24T14:30:01.3282620Z 
2025-01-24T14:30:01.3282900Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:30:01.3283170Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-24T14:30:01.3283220Z   
2025-01-24T14:30:01.3283360Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-24T14:30:01.3283490Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-24T14:30:01.3283680Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-24T14:30:01.3283690Z 
2025-01-24T14:30:01.3284020Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-24T14:30:01.3284270Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:814: DeprecationWarning:
2025-01-24T14:30:01.3284320Z   
2025-01-24T14:30:01.3284510Z   QgridWidget._df_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-24T14:30:01.3284510Z 
2025-01-24T14:30:01.3284760Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:30:01.3284940Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-24T14:30:01.3284980Z   
2025-01-24T14:30:01.3285030Z   
2025-01-24T14:30:01.3285190Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-24T14:30:01.3285410Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-24T14:30:01.3285420Z 
2025-01-24T14:30:01.3285620Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:30:01.3285780Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-24T14:30:01.3285820Z   
2025-01-24T14:30:01.3285860Z   
2025-01-24T14:30:01.3286020Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-24T14:30:01.3286160Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-24T14:30:01.3286160Z 
2025-01-24T14:30:01.3286360Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:30:01.3286550Z   /Users/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-24T14:30:01.3286600Z   
2025-01-24T14:30:01.3286750Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-24T14:30:01.3286800Z 
2025-01-24T14:30:01.3286950Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-24T14:30:01.3286950Z 
2025-01-24T14:30:01.3287090Z ---------- coverage: platform darwin, python 3.12.4-final-0 ----------
2025-01-24T14:30:01.3287180Z Coverage HTML written to dir coverage_html_report
2025-01-24T14:30:01.3287250Z Coverage XML written to file coverage.xml
2025-01-24T14:30:01.3287250Z 
2025-01-24T14:30:01.3287350Z =========================== short test summary info ============================
2025-01-24T14:30:01.3287900Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_list] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3288430Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_keep_colour] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3288960Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_mapped] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3293370Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3295200Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3296810Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3297440Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3298340Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3298940Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3299550Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3300130Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3300720Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3301290Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3301960Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3302540Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3303120Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3303700Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3304290Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3304870Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3305470Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3306080Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3306670Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3307670Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3308340Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3309070Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3309670Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3310270Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3311270Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3311830Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3312410Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3312980Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3313550Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3314100Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3314670Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3315230Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3315780Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3316320Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3316970Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3317540Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3318090Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3318650Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3319190Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3319810Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3320370Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3320940Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3321500Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3322070Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3322650Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3323210Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3323780Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3324350Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3324890Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_full_species_list] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3325490Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_species_list] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3326020Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_keep_colour] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3326620Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3327210Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3327810Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3328480Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3329080Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3329680Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3330290Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3330890Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3331490Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3332100Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3332700Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3333310Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3333990Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3334600Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3335200Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3335790Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3336350Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3336910Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3337550Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3338120Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3338700Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3339270Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3339850Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3340410Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3341260Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3342060Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3342630Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3344740Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3346310Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3346900Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3347470Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3348030Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3348580Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3350290Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3352060Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3354250Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3355820Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3357340Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3358870Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3360410Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3361950Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl8] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3363480Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl9] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3365760Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl10] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3367320Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl11] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3368870Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl12] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3370410Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl13] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3372100Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl14] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3374640Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl15] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:30:01.3375540Z = 1336 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 90 warnings, 102 errors in 727.64s (0:12:07) =
2025-01-24T14:30:03.1020720Z ##[error]Process completed with exit code 1.
2025-01-24T14:30:03.1406870Z Post job cleanup.
2025-01-24T14:30:03.1497500Z Post job cleanup.
2025-01-24T14:30:03.5024570Z Will use pre-installed micromamba at /Users/runner/micromamba-bin/micromamba
2025-01-24T14:30:03.5027820Z Removing micromamba run shell ...
2025-01-24T14:30:03.5029640Z ##[group]Deinitialize micromamba for bash
2025-01-24T14:30:03.5042550Z [command]/Users/runner/micromamba-bin/micromamba shell deinit -s bash -r /Users/runner/micromamba --log-level warning --rc-file /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:30:03.5888650Z Resetting RC file "/Users/runner/.bash_profile"
2025-01-24T14:30:03.5904850Z Deleting config for root prefix 
2025-01-24T14:30:03.5905180Z Clearing mamba executable environment variable
2025-01-24T14:30:03.5922970Z Removing the following in your "/Users/runner/.bash_profile" file
2025-01-24T14:30:03.5923640Z # >>> mamba initialize >>>
2025-01-24T14:30:03.5924000Z ...
2025-01-24T14:30:03.5925010Z # <<< mamba initialize <<<
2025-01-24T14:30:03.6259630Z Removing environment tardis from auto-activate bash ...
2025-01-24T14:30:03.6438700Z Post job cleanup.
2025-01-24T14:30:03.6505720Z Post job cleanup.
2025-01-24T14:30:03.8177610Z [command]/opt/homebrew/bin/git version
2025-01-24T14:30:03.8495230Z git version 2.48.1
2025-01-24T14:30:03.8520320Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/c6738c06-0f42-48e1-b5b6-c4b8fbebeaf7/.gitconfig'
2025-01-24T14:30:03.8531950Z Temporarily overriding HOME='/Users/runner/work/_temp/c6738c06-0f42-48e1-b5b6-c4b8fbebeaf7' before making global git config changes
2025-01-24T14:30:03.8533470Z Adding repository directory to the temporary git global config as a safe directory
2025-01-24T14:30:03.8540950Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis/tardis-regression-data
2025-01-24T14:30:03.8657770Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-24T14:30:03.8766770Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-24T14:30:04.0153890Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-24T14:30:04.0260150Z http.https://github.com/.extraheader
2025-01-24T14:30:04.0271490Z [command]/opt/homebrew/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-24T14:30:04.0448710Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-24T14:30:04.3157600Z Post job cleanup.
2025-01-24T14:30:04.4427060Z [command]/opt/homebrew/bin/git version
2025-01-24T14:30:04.4497340Z git version 2.48.1
2025-01-24T14:30:04.4526230Z Copying '/Users/runner/.gitconfig' to '/Users/runner/work/_temp/43bdd46b-8e3e-45f8-878b-2d08933e894b/.gitconfig'
2025-01-24T14:30:04.4541400Z Temporarily overriding HOME='/Users/runner/work/_temp/43bdd46b-8e3e-45f8-878b-2d08933e894b' before making global git config changes
2025-01-24T14:30:04.4543000Z Adding repository directory to the temporary git global config as a safe directory
2025-01-24T14:30:04.4545150Z [command]/opt/homebrew/bin/git config --global --add safe.directory /Users/runner/work/tardis/tardis
2025-01-24T14:30:04.4619360Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp core\.sshCommand
2025-01-24T14:30:04.4682660Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'core\.sshCommand' && git config --local --unset-all 'core.sshCommand' || :"
2025-01-24T14:30:04.5600340Z [command]/opt/homebrew/bin/git config --local --name-only --get-regexp http\.https\:\/\/github\.com\/\.extraheader
2025-01-24T14:30:04.5650980Z http.https://github.com/.extraheader
2025-01-24T14:30:04.5664600Z [command]/opt/homebrew/bin/git config --local --unset-all http.https://github.com/.extraheader
2025-01-24T14:30:04.5740370Z [command]/opt/homebrew/bin/git submodule foreach --recursive sh -c "git config --local --name-only --get-regexp 'http\.https\:\/\/github\.com\/\.extraheader' && git config --local --unset-all 'http.https://github.com/.extraheader' || :"
2025-01-24T14:30:04.6876370Z Cleaning up orphan processes
