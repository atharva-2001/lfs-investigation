2025-01-24T14:17:01.3823751Z ##[group]Run pytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-24T14:17:01.3825093Z [36;1mpytest tardis --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-24T14:17:01.3853397Z shell: /usr/bin/bash -l {0}
2025-01-24T14:17:01.3853646Z env:
2025-01-24T14:17:01.3853829Z   CACHE_NUMBER: 0
2025-01-24T14:17:01.3854463Z   PYTEST_FLAGS: --tardis-regression-data=/home/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-24T14:17:01.3855120Z   CODECOV_TOKEN: 
2025-01-24T14:17:01.3855346Z   MAMBA_ROOT_PREFIX: /home/runner/micromamba
2025-01-24T14:17:01.3855657Z   MAMBA_EXE: /home/runner/micromamba-bin/micromamba
2025-01-24T14:17:01.3856013Z   CONDARC: /home/runner/work/_temp/setup-micromamba/.condarc
2025-01-24T14:17:01.3856369Z ##[endgroup]
2025-01-24T14:17:11.1217269Z ============================= test session starts ==============================
2025-01-24T14:17:11.1218029Z platform linux -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-24T14:17:11.1218804Z rootdir: /home/runner/work/tardis/tardis
2025-01-24T14:17:11.1219276Z configfile: pyproject.toml
2025-01-24T14:17:11.1219878Z plugins: anyio-4.4.0, doctestplus-1.2.1, html-4.1.1, metadata-3.1.1, cov-5.0.0
2025-01-24T14:17:11.1220568Z collected 1796 items / 2 deselected / 1794 selected
2025-01-24T14:17:11.1220933Z 
2025-01-24T14:17:16.2023140Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-24T14:17:19.2863150Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-24T14:17:20.8903376Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-24T14:17:22.6586285Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-24T14:17:22.6676646Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-24T14:17:24.0210847Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-24T14:17:24.3652561Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-24T14:17:24.3668580Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-24T14:17:27.8263375Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-24T14:17:27.8390311Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-24T14:17:27.8656329Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-24T14:18:07.7470562Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-24T14:18:07.7623521Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-24T14:18:07.7743691Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-24T14:18:07.8089297Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-24T14:18:07.8334545Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-24T14:18:08.1836538Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-24T14:18:08.5210577Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-24T14:18:08.5418531Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-24T14:18:08.7422796Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-24T14:18:08.7493057Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-24T14:19:07.4234876Z tardis/model/tests/test_base.py ........................................ [ 10%]
2025-01-24T14:19:08.4193466Z ............                                                             [ 10%]
2025-01-24T14:19:11.4896429Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-24T14:19:11.5368963Z tardis/model/tests/test_density.py ..                                    [ 11%]
2025-01-24T14:19:12.8243862Z tardis/opacities/tests/test_opacity_solver.py .....                      [ 11%]
2025-01-24T14:19:14.1566960Z tardis/opacities/tests/test_opacity_state_numba.py .....                 [ 11%]
2025-01-24T14:19:15.7341059Z tardis/opacities/tests/test_tau_sobolev.py ..                            [ 12%]
2025-01-24T14:19:18.7081996Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-24T14:20:04.5179458Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-24T14:20:16.0639589Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-24T14:20:17.4659615Z tardis/plasma/tests/test_complete_plasmas.py .....................s..... [ 13%]
2025-01-24T14:20:20.3487491Z s....ssssss............s............ss.....s....ssssss............s..... [ 18%]
2025-01-24T14:20:22.3033042Z .......ss.....s....ssssss............s............ss.....s....ssssss.... [ 22%]
2025-01-24T14:20:25.1577695Z ........s............ss.....s........ss............s............ss.....s [ 26%]
2025-01-24T14:20:28.0055492Z ........ss............s............ss.....s....ssssss............s...... [ 30%]
2025-01-24T14:20:28.7460564Z ......ss.....s....ssssss............s............ss.....s.ss.ssssss..... [ 34%]
2025-01-24T14:20:31.6126372Z .......s............ss.....s....ssssss............s............ss.....s. [ 38%]
2025-01-24T14:20:34.7331439Z ...ssssss............s............ss.....s....ssssss............s....... [ 42%]
2025-01-24T14:20:37.7615139Z .....ss.....s....ssssss............s............s...........ssssss...... [ 46%]
2025-01-24T14:20:39.5629107Z ......s............s...........ssssss............s............s......... [ 50%]
2025-01-24T14:20:42.4333309Z ..ssssss............s............ss.....s....ssssss............s........ [ 54%]
2025-01-24T14:20:45.8869518Z ....ss.....s....ssssss..........................s.....s....ssss......... [ 58%]
2025-01-24T14:20:46.2072857Z ...................s.....s....ssss.......                                [ 60%]
2025-01-24T14:20:46.3166885Z tardis/plasma/tests/test_hdf_plasma.py ................................. [ 62%]
2025-01-24T14:20:46.3277942Z ......                                                                   [ 62%]
2025-01-24T14:20:46.4542984Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-24T14:23:01.6602733Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-24T14:23:01.6630554Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-24T14:23:24.6524441Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-24T14:23:37.6858719Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-24T14:23:38.4346819Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-24T14:23:46.9792592Z tardis/simulation/tests/test_simulation.py .............                 [ 65%]
2025-01-24T14:23:46.9983542Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-24T14:23:47.4908690Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-24T14:23:47.4981889Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-24T14:23:49.1025541Z tardis/spectrum/tests/test_numba_formal_integral.py .................... [ 69%]
2025-01-24T14:23:49.1219342Z ..........                                                               [ 69%]
2025-01-24T14:23:49.2965496Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-24T14:23:49.3301770Z .........                                                                [ 72%]
2025-01-24T14:24:08.4097688Z tardis/spectrum/tests/test_spectrum_solver.py ....                       [ 72%]
2025-01-24T14:25:09.9049536Z tardis/tests/test_tardis_full.py ....                                    [ 72%]
2025-01-24T14:26:33.9059396Z tardis/tests/test_tardis_full_formal_integral.py ................        [ 73%]
2025-01-24T14:26:33.9804887Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-24T14:26:36.5720911Z tardis/transport/montecarlo/tests/test_base.py x.....................    [ 77%]
2025-01-24T14:26:44.0460512Z tardis/transport/montecarlo/tests/test_interaction.py .......            [ 77%]
2025-01-24T14:26:44.2565071Z tardis/transport/montecarlo/tests/test_macro_atom.py ....                [ 77%]
2025-01-24T14:26:44.2737171Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-24T14:26:44.3149062Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-24T14:26:53.0887998Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py x..       [ 81%]
2025-01-24T14:26:53.0955626Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-24T14:26:58.8981220Z tardis/transport/montecarlo/tests/test_numba_interface.py .....x.        [ 82%]
2025-01-24T14:26:59.3828998Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-24T14:27:00.8689041Z tardis/transport/montecarlo/tests/test_packet.py .................xXXXXX [ 84%]
2025-01-24T14:27:00.9999974Z XX.........                                                              [ 84%]
2025-01-24T14:27:01.0278645Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-24T14:27:01.3293817Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-24T14:27:01.7306181Z .....                                                                    [ 85%]
2025-01-24T14:27:36.5126852Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py ......         [ 85%]
2025-01-24T14:27:36.5406982Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-24T14:27:36.5437978Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-24T14:27:38.9381279Z tardis/transport/montecarlo/tests/test_vpacket.py ..x.                   [ 86%]
2025-01-24T14:27:38.9554376Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-24T14:27:42.3681780Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py . [ 86%]
2025-01-24T14:27:42.3684176Z                                                                          [ 86%]
2025-01-24T14:27:43.1113040Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-24T14:27:44.4492536Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-24T14:27:46.6349768Z ......                                                                   [ 88%]
2025-01-24T14:27:51.9771117Z tardis/visualization/tools/tests/test_liv_plot.py EEEEEEEEEEEEEEEEEEEEEE [ 90%]
2025-01-24T14:27:54.2338504Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                            [ 91%]
2025-01-24T14:27:57.0577229Z tardis/visualization/tools/tests/test_rpacket_plot.py .................. [ 92%]
2025-01-24T14:28:04.0623556Z ....                                                                     [ 92%]
2025-01-24T14:28:09.5762157Z tardis/visualization/tools/tests/test_sdec_plot.py EEEEEEEEEEEEEEEEEEEEE [ 94%]
2025-01-24T14:28:12.2711132Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                           [ 95%]
2025-01-24T14:28:12.6972257Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-24T14:28:12.7674493Z ....                                                                     [ 96%]
2025-01-24T14:28:13.8079984Z tardis/visualization/widgets/tests/test_line_info.py ................... [ 97%]
2025-01-24T14:28:14.4281839Z ..................                                                       [ 98%]
2025-01-24T14:29:17.8333015Z tardis/visualization/widgets/tests/test_shell_info.py .................. [ 99%]
2025-01-24T14:29:24.3847563Z ......                                                                   [100%]
2025-01-24T14:29:24.3848156Z 
2025-01-24T14:29:24.3848723Z ==================================== ERRORS ====================================
2025-01-24T14:29:24.3849684Z ___ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_list] ____
2025-01-24T14:29:24.3850380Z 
2025-01-24T14:29:24.3850867Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3851570Z 
2025-01-24T14:29:24.3851773Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.3852342Z     def plotter(simulation_simple):
2025-01-24T14:29:24.3852874Z         """
2025-01-24T14:29:24.3853486Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.3854128Z     
2025-01-24T14:29:24.3854415Z         Parameters:
2025-01-24T14:29:24.3854754Z         -----------
2025-01-24T14:29:24.3855192Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.3855692Z     
2025-01-24T14:29:24.3855984Z         Returns:
2025-01-24T14:29:24.3856312Z         --------
2025-01-24T14:29:24.3856658Z         An LIVPlotter instance.
2025-01-24T14:29:24.3857101Z         """
2025-01-24T14:29:24.3857514Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.3857914Z 
2025-01-24T14:29:24.3858168Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.3859050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3859750Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.3860476Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.3861278Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.3862131Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.3862741Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3863119Z 
2025-01-24T14:29:24.3863518Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.3864375Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3864950Z packets_mode = 'real'
2025-01-24T14:29:24.3865175Z 
2025-01-24T14:29:24.3865297Z     @classmethod
2025-01-24T14:29:24.3865658Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.3866093Z         """
2025-01-24T14:29:24.3866578Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.3867172Z     
2025-01-24T14:29:24.3867437Z         Parameters
2025-01-24T14:29:24.3867747Z         ----------
2025-01-24T14:29:24.3868083Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.3868725Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.3869082Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.3869398Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.3869685Z     
2025-01-24T14:29:24.3869930Z         Returns
2025-01-24T14:29:24.3870136Z         -------
2025-01-24T14:29:24.3870571Z         SimulationPacketData
2025-01-24T14:29:24.3870800Z         """
2025-01-24T14:29:24.3871012Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.3871358Z             raise ValueError(
2025-01-24T14:29:24.3871808Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.3872342Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.3872786Z             )
2025-01-24T14:29:24.3873133Z         # Properties common among both packet modes
2025-01-24T14:29:24.3873731Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.3874266Z             "line_id"
2025-01-24T14:29:24.3874578Z         )
2025-01-24T14:29:24.3875141Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.3875581Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.3875878Z         time_of_simulation = (
2025-01-24T14:29:24.3876187Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.3876515Z         )
2025-01-24T14:29:24.3876687Z     
2025-01-24T14:29:24.3876856Z         spectrum = (
2025-01-24T14:29:24.3877224Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.3877722Z             if packets_mode == "virtual"
2025-01-24T14:29:24.3878200Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.3878760Z         )
2025-01-24T14:29:24.3878934Z     
2025-01-24T14:29:24.3879116Z         if packets_mode == "virtual":
2025-01-24T14:29:24.3879413Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.3879705Z             return cls(
2025-01-24T14:29:24.3879992Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.3880426Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.3880870Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.3881312Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.3881724Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.3882115Z                 lines_df=lines_df,
2025-01-24T14:29:24.3882611Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.3883239Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.3883882Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.3884437Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.3885100Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.3885767Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.3886153Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.3886444Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.3886713Z                 simulation=sim,
2025-01-24T14:29:24.3887074Z             )
2025-01-24T14:29:24.3887382Z         else: # real packets
2025-01-24T14:29:24.3887897Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.3888563Z             # which got emitted
2025-01-24T14:29:24.3888826Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.3889100Z >           return cls(
2025-01-24T14:29:24.3889405Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.3889859Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.3890208Z                     mask
2025-01-24T14:29:24.3890412Z                 ],
2025-01-24T14:29:24.3890715Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.3891069Z                     mask
2025-01-24T14:29:24.3891267Z                 ],
2025-01-24T14:29:24.3891838Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.3892432Z                     mask
2025-01-24T14:29:24.3892760Z                 ],
2025-01-24T14:29:24.3893204Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.3893696Z                 lines_df=lines_df,
2025-01-24T14:29:24.3894028Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.3894463Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.3894803Z                     mask
2025-01-24T14:29:24.3895002Z                 ],
2025-01-24T14:29:24.3895248Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.3895728Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.3896139Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.3897036Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.3897541Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.3897907Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.3898171Z                 simulation=sim,
2025-01-24T14:29:24.3898561Z             )
2025-01-24T14:29:24.3899011Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.3899441Z 
2025-01-24T14:29:24.3899617Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.3900039Z ---------------------------- Captured stdout setup -----------------------------
2025-01-24T14:29:24.3900745Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-24T14:29:24.3901738Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-24T14:29:24.3902843Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3903305Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-24T14:29:24.3903719Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3904002Z 	
2025-01-24T14:29:24.3904252Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-24T14:29:24.3904610Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3904887Z 	
2025-01-24T14:29:24.3905070Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-24T14:29:24.3905338Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-24T14:29:24.3905602Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3905880Z  ([1mbase.py[0m:657)
2025-01-24T14:29:24.3906171Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3906443Z 	
2025-01-24T14:29:24.3906751Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-24T14:29:24.3907372Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3907834Z 	
2025-01-24T14:29:24.3908153Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-24T14:29:24.3908652Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-24T14:29:24.3908906Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-24T14:29:24.3909159Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-24T14:29:24.3909410Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-24T14:29:24.3909694Z  ([1mbase.py[0m:650)
2025-01-24T14:29:24.3909984Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3910259Z 	
2025-01-24T14:29:24.3910432Z 	Current t_inner = 9974.969 K
2025-01-24T14:29:24.3910706Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-24T14:29:24.3911011Z  ([1mbase.py[0m:652)
2025-01-24T14:29:24.3911403Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3911870Z 	
2025-01-24T14:29:24.3912282Z 	Starting iteration 2 of 3 ([1mbase.py[0m:444)
2025-01-24T14:29:24.3912881Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3913332Z 	
2025-01-24T14:29:24.3913516Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-24T14:29:24.3913778Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-24T14:29:24.3914047Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3914333Z  ([1mbase.py[0m:657)
2025-01-24T14:29:24.3914617Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3914886Z 	
2025-01-24T14:29:24.3915121Z 	Plasma stratification: ([1mbase.py[0m:649)
2025-01-24T14:29:24.3915464Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3915734Z 	
2025-01-24T14:29:24.3915929Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-24T14:29:24.3916207Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-24T14:29:24.3916582Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-24T14:29:24.3916991Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-24T14:29:24.3917424Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-24T14:29:24.3917897Z  ([1mbase.py[0m:650)
2025-01-24T14:29:24.3918521Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3918804Z 	
2025-01-24T14:29:24.3918978Z 	Current t_inner = 10712.281 K
2025-01-24T14:29:24.3919242Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-24T14:29:24.3919552Z  ([1mbase.py[0m:652)
2025-01-24T14:29:24.3919834Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3920108Z 	
2025-01-24T14:29:24.3920294Z 	Simulation finished in 2 iterations 
2025-01-24T14:29:24.3920558Z 	Simulation took 2.28 s
2025-01-24T14:29:24.3920791Z  ([1mbase.py[0m:542)
2025-01-24T14:29:24.3921070Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3921503Z 	
2025-01-24T14:29:24.3921885Z 	Starting iteration 3 of 3 ([1mbase.py[0m:444)
2025-01-24T14:29:24.3922240Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-24T14:29:24.3922510Z 	
2025-01-24T14:29:24.3922690Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-24T14:29:24.3922954Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-24T14:29:24.3923220Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3923494Z  ([1mbase.py[0m:657)
2025-01-24T14:29:24.3923773Z ---------------------------- Captured stderr setup -----------------------------
2025-01-24T14:29:24.3924023Z 
2025-01-24T14:29:24.3924181Z Iterations:                                                                                46/? [08:45<00:00,  7.49s/it]
2025-01-24T14:29:24.3924426Z 
2025-01-24T14:29:24.3924673Z Packets:                                                                                   103999/? [00:07<00:00, 110085.40it/s]    [A
2025-01-24T14:29:24.3924918Z 
2025-01-24T14:29:24.3925151Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:29:24.3925537Z Iterations:                                                                                47/? [08:46<00:00,  5.59s/it]
2025-01-24T14:29:24.3925774Z 
2025-01-24T14:29:24.3926264Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 98903.60it/s][A
2025-01-24T14:29:24.3926555Z 
2025-01-24T14:29:24.3926797Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:29:24.3927187Z Iterations:                                                                                48/? [08:47<00:00,  4.26s/it]
2025-01-24T14:29:24.3927547Z 
2025-01-24T14:29:24.3928086Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 61943.52it/s][A
2025-01-24T14:29:24.3928738Z ------------------------------ Captured log setup ------------------------------
2025-01-24T14:29:24.3929548Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-24T14:29:24.3930365Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-24T14:29:24.3930975Z INFO     tardis.simulation.base:base.py:444 
2025-01-24T14:29:24.3931253Z 	Starting iteration 1 of 3
2025-01-24T14:29:24.3931504Z INFO     tardis.simulation.base:base.py:657 
2025-01-24T14:29:24.3931783Z 	Luminosity emitted   = 8.174e+42 erg / s
2025-01-24T14:29:24.3932049Z 	Luminosity absorbed  = 2.612e+42 erg / s
2025-01-24T14:29:24.3932362Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3932688Z 
2025-01-24T14:29:24.3932877Z INFO     tardis.simulation.base:base.py:649 
2025-01-24T14:29:24.3933189Z 	Plasma stratification:
2025-01-24T14:29:24.3933437Z INFO     tardis.simulation.base:base.py:650 
2025-01-24T14:29:24.3933880Z 	Shell No.    t_rad    next_t_rad    w   next_w
2025-01-24T14:29:24.3934165Z 	0         9.97e+03 K     1e+04 K   0.4   0.456
2025-01-24T14:29:24.3934421Z 	5         9.89e+03 K  1.02e+04 K 0.211     0.2
2025-01-24T14:29:24.3934673Z 	10        9.82e+03 K  1.01e+04 K 0.143   0.126
2025-01-24T14:29:24.3934935Z 	15        9.75e+03 K  9.96e+03 K 0.105  0.0921
2025-01-24T14:29:24.3935099Z 
2025-01-24T14:29:24.3935210Z INFO     tardis.simulation.base:base.py:652 
2025-01-24T14:29:24.3935481Z 	Current t_inner = 9974.969 K
2025-01-24T14:29:24.3935749Z 	Expected t_inner for next iteration = 10712.281 K
2025-01-24T14:29:24.3935950Z 
2025-01-24T14:29:24.3936061Z INFO     tardis.simulation.base:base.py:444 
2025-01-24T14:29:24.3936331Z 	Starting iteration 2 of 3
2025-01-24T14:29:24.3936575Z INFO     tardis.simulation.base:base.py:657 
2025-01-24T14:29:24.3936847Z 	Luminosity emitted   = 1.078e+43 erg / s
2025-01-24T14:29:24.3937111Z 	Luminosity absorbed  = 3.553e+42 erg / s
2025-01-24T14:29:24.3937382Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3937555Z 
2025-01-24T14:29:24.3937659Z INFO     tardis.simulation.base:base.py:649 
2025-01-24T14:29:24.3937929Z 	Plasma stratification:
2025-01-24T14:29:24.3938166Z INFO     tardis.simulation.base:base.py:650 
2025-01-24T14:29:24.3938801Z 	Shell No.    t_rad    next_t_rad    w    next_w
2025-01-24T14:29:24.3939132Z 	0            1e+04 K  1.04e+04 K  0.456   0.493
2025-01-24T14:29:24.3939390Z 	5         1.02e+04 K  1.05e+04 K    0.2   0.204
2025-01-24T14:29:24.3939646Z 	10        1.01e+04 K  1.04e+04 K  0.126   0.127
2025-01-24T14:29:24.3939903Z 	15        9.96e+03 K  1.03e+04 K 0.0921  0.0914
2025-01-24T14:29:24.3940066Z 
2025-01-24T14:29:24.3940178Z INFO     tardis.simulation.base:base.py:652 
2025-01-24T14:29:24.3940447Z 	Current t_inner = 10712.281 K
2025-01-24T14:29:24.3940713Z 	Expected t_inner for next iteration = 10710.562 K
2025-01-24T14:29:24.3940912Z 
2025-01-24T14:29:24.3941020Z INFO     tardis.simulation.base:base.py:542 
2025-01-24T14:29:24.3941304Z 	Simulation finished in 2 iterations 
2025-01-24T14:29:24.3941558Z 	Simulation took 2.28 s
2025-01-24T14:29:24.3941688Z 
2025-01-24T14:29:24.3941798Z INFO     tardis.simulation.base:base.py:444 
2025-01-24T14:29:24.3942066Z 	Starting iteration 3 of 3
2025-01-24T14:29:24.3942316Z INFO     tardis.simulation.base:base.py:657 
2025-01-24T14:29:24.3942591Z 	Luminosity emitted   = 1.104e+43 erg / s
2025-01-24T14:29:24.3942951Z 	Luminosity absorbed  = 3.299e+42 erg / s
2025-01-24T14:29:24.3943378Z 	Luminosity requested = 1.077e+43 erg / s
2025-01-24T14:29:24.3943756Z ____ ERROR at setup of TestLIVPlotter.test_parse_species_list[_keep_colour] ____
2025-01-24T14:29:24.3944056Z 
2025-01-24T14:29:24.3944269Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3944578Z 
2025-01-24T14:29:24.3944674Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.3944937Z     def plotter(simulation_simple):
2025-01-24T14:29:24.3945184Z         """
2025-01-24T14:29:24.3945441Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.3945753Z     
2025-01-24T14:29:24.3945928Z         Parameters:
2025-01-24T14:29:24.3946127Z         -----------
2025-01-24T14:29:24.3946364Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.3946787Z     
2025-01-24T14:29:24.3946953Z         Returns:
2025-01-24T14:29:24.3947139Z         --------
2025-01-24T14:29:24.3947333Z         An LIVPlotter instance.
2025-01-24T14:29:24.3947689Z         """
2025-01-24T14:29:24.3948049Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.3948433Z 
2025-01-24T14:29:24.3948590Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.3948931Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3949330Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.3949728Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.3950319Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.3950760Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.3951097Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3951311Z 
2025-01-24T14:29:24.3951528Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.3952091Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3952629Z packets_mode = 'real'
2025-01-24T14:29:24.3952766Z 
2025-01-24T14:29:24.3952841Z     @classmethod
2025-01-24T14:29:24.3953064Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.3953327Z         """
2025-01-24T14:29:24.3953642Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.3954009Z     
2025-01-24T14:29:24.3954178Z         Parameters
2025-01-24T14:29:24.3954374Z         ----------
2025-01-24T14:29:24.3954594Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.3954927Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.3955264Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.3955576Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.3955876Z     
2025-01-24T14:29:24.3956038Z         Returns
2025-01-24T14:29:24.3956220Z         -------
2025-01-24T14:29:24.3956449Z         SimulationPacketData
2025-01-24T14:29:24.3956825Z         """
2025-01-24T14:29:24.3957105Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.3957386Z             raise ValueError(
2025-01-24T14:29:24.3957652Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.3957969Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.3958349Z             )
2025-01-24T14:29:24.3958565Z         # Properties common among both packet modes
2025-01-24T14:29:24.3958923Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.3959253Z             "line_id"
2025-01-24T14:29:24.3959443Z         )
2025-01-24T14:29:24.3959651Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.3959971Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.3960267Z         time_of_simulation = (
2025-01-24T14:29:24.3960576Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.3960887Z         )
2025-01-24T14:29:24.3961051Z     
2025-01-24T14:29:24.3961218Z         spectrum = (
2025-01-24T14:29:24.3961458Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.3961890Z             if packets_mode == "virtual"
2025-01-24T14:29:24.3962315Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.3962596Z         )
2025-01-24T14:29:24.3962761Z     
2025-01-24T14:29:24.3962940Z         if packets_mode == "virtual":
2025-01-24T14:29:24.3963239Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.3963530Z             return cls(
2025-01-24T14:29:24.3963812Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.3964236Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.3964821Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.3965259Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.3965755Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.3966303Z                 lines_df=lines_df,
2025-01-24T14:29:24.3966721Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.3967097Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.3967474Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.3967936Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.3968472Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.3968869Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.3969175Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.3969458Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.3969723Z                 simulation=sim,
2025-01-24T14:29:24.3969946Z             )
2025-01-24T14:29:24.3970132Z         else: # real packets
2025-01-24T14:29:24.3970445Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.3970779Z             # which got emitted
2025-01-24T14:29:24.3971071Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.3971540Z >           return cls(
2025-01-24T14:29:24.3971887Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.3972343Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.3972693Z                     mask
2025-01-24T14:29:24.3972891Z                 ],
2025-01-24T14:29:24.3973193Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.3973553Z                     mask
2025-01-24T14:29:24.3973753Z                 ],
2025-01-24T14:29:24.3974033Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.3974371Z                     mask
2025-01-24T14:29:24.3974568Z                 ],
2025-01-24T14:29:24.3974848Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.3975436Z                 lines_df=lines_df,
2025-01-24T14:29:24.3975770Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.3976200Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.3976547Z                     mask
2025-01-24T14:29:24.3976750Z                 ],
2025-01-24T14:29:24.3976990Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.3977329Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.3977727Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.3978114Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.3978540Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.3978821Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.3979083Z                 simulation=sim,
2025-01-24T14:29:24.3979298Z             )
2025-01-24T14:29:24.3979735Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.3980185Z 
2025-01-24T14:29:24.3980494Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.3981074Z __ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_mapped] ___
2025-01-24T14:29:24.3981375Z 
2025-01-24T14:29:24.3981589Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3982035Z 
2025-01-24T14:29:24.3982130Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.3982388Z     def plotter(simulation_simple):
2025-01-24T14:29:24.3982625Z         """
2025-01-24T14:29:24.3982873Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.3983180Z     
2025-01-24T14:29:24.3983349Z         Parameters:
2025-01-24T14:29:24.3983544Z         -----------
2025-01-24T14:29:24.3983777Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.3984049Z     
2025-01-24T14:29:24.3984296Z         Returns:
2025-01-24T14:29:24.3984609Z         --------
2025-01-24T14:29:24.3984857Z         An LIVPlotter instance.
2025-01-24T14:29:24.3985229Z         """
2025-01-24T14:29:24.3985466Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.3985686Z 
2025-01-24T14:29:24.3985832Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.3986165Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3986533Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.3986923Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.3987375Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.3987811Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.3988136Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.3988459Z 
2025-01-24T14:29:24.3988681Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.3989228Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.3989771Z packets_mode = 'real'
2025-01-24T14:29:24.3989918Z 
2025-01-24T14:29:24.3989998Z     @classmethod
2025-01-24T14:29:24.3990222Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.3990488Z         """
2025-01-24T14:29:24.3990789Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.3991152Z     
2025-01-24T14:29:24.3991319Z         Parameters
2025-01-24T14:29:24.3991510Z         ----------
2025-01-24T14:29:24.3991724Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.3992059Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.3992392Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.3992708Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.3993005Z     
2025-01-24T14:29:24.3993167Z         Returns
2025-01-24T14:29:24.3993405Z         -------
2025-01-24T14:29:24.3993753Z         SimulationPacketData
2025-01-24T14:29:24.3994100Z         """
2025-01-24T14:29:24.3994363Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.3994643Z             raise ValueError(
2025-01-24T14:29:24.3994909Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.3995223Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.3995480Z             )
2025-01-24T14:29:24.3995692Z         # Properties common among both packet modes
2025-01-24T14:29:24.3996057Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.3996379Z             "line_id"
2025-01-24T14:29:24.3996572Z         )
2025-01-24T14:29:24.3996777Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.3997099Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.3997400Z         time_of_simulation = (
2025-01-24T14:29:24.3997708Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.3998176Z         )
2025-01-24T14:29:24.3998569Z     
2025-01-24T14:29:24.3998750Z         spectrum = (
2025-01-24T14:29:24.3999003Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.3999296Z             if packets_mode == "virtual"
2025-01-24T14:29:24.3999757Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4000036Z         )
2025-01-24T14:29:24.4000201Z     
2025-01-24T14:29:24.4000381Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4000674Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4000962Z             return cls(
2025-01-24T14:29:24.4001258Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4001679Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4002122Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4003033Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4003454Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4003790Z                 lines_df=lines_df,
2025-01-24T14:29:24.4004076Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4004459Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4004833Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4005164Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4005557Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4005950Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4006254Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4006537Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4006805Z                 simulation=sim,
2025-01-24T14:29:24.4007183Z             )
2025-01-24T14:29:24.4007463Z         else: # real packets
2025-01-24T14:29:24.4007777Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4008112Z             # which got emitted
2025-01-24T14:29:24.4008494Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4008770Z >           return cls(
2025-01-24T14:29:24.4009076Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4009526Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4009879Z                     mask
2025-01-24T14:29:24.4010091Z                 ],
2025-01-24T14:29:24.4010396Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4010750Z                     mask
2025-01-24T14:29:24.4010947Z                 ],
2025-01-24T14:29:24.4011237Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4011573Z                     mask
2025-01-24T14:29:24.4011771Z                 ],
2025-01-24T14:29:24.4012049Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4012614Z                 lines_df=lines_df,
2025-01-24T14:29:24.4013000Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4013436Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4013775Z                     mask
2025-01-24T14:29:24.4013978Z                 ],
2025-01-24T14:29:24.4014220Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4014568Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4014960Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4015364Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4015660Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4015947Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4016237Z                 simulation=sim,
2025-01-24T14:29:24.4016802Z             )
2025-01-24T14:29:24.4017251Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4017666Z 
2025-01-24T14:29:24.4017842Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4018463Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] _
2025-01-24T14:29:24.4018807Z 
2025-01-24T14:29:24.4019032Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4019339Z 
2025-01-24T14:29:24.4019432Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4019686Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4020049Z         """
2025-01-24T14:29:24.4020296Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4020814Z     
2025-01-24T14:29:24.4021043Z         Parameters:
2025-01-24T14:29:24.4021242Z         -----------
2025-01-24T14:29:24.4021484Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4021753Z     
2025-01-24T14:29:24.4021917Z         Returns:
2025-01-24T14:29:24.4022101Z         --------
2025-01-24T14:29:24.4022297Z         An LIVPlotter instance.
2025-01-24T14:29:24.4022518Z         """
2025-01-24T14:29:24.4022751Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4022977Z 
2025-01-24T14:29:24.4023115Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4023453Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4023822Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4024219Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4024672Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4025109Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4025452Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4025818Z 
2025-01-24T14:29:24.4026140Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4026625Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4026963Z packets_mode = 'real'
2025-01-24T14:29:24.4027094Z 
2025-01-24T14:29:24.4027168Z     @classmethod
2025-01-24T14:29:24.4027388Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4027650Z         """
2025-01-24T14:29:24.4027955Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4028455Z     
2025-01-24T14:29:24.4028628Z         Parameters
2025-01-24T14:29:24.4028818Z         ----------
2025-01-24T14:29:24.4029050Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4029429Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4029849Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4030421Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4030774Z     
2025-01-24T14:29:24.4030943Z         Returns
2025-01-24T14:29:24.4031161Z         -------
2025-01-24T14:29:24.4031377Z         SimulationPacketData
2025-01-24T14:29:24.4031607Z         """
2025-01-24T14:29:24.4031859Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4032339Z             raise ValueError(
2025-01-24T14:29:24.4032765Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4033200Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4033636Z             )
2025-01-24T14:29:24.4050711Z         # Properties common among both packet modes
2025-01-24T14:29:24.4051407Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4051971Z             "line_id"
2025-01-24T14:29:24.4052291Z         )
2025-01-24T14:29:24.4052625Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4053401Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4053903Z         time_of_simulation = (
2025-01-24T14:29:24.4054406Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4054865Z         )
2025-01-24T14:29:24.4055039Z     
2025-01-24T14:29:24.4055208Z         spectrum = (
2025-01-24T14:29:24.4055466Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4055780Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4056087Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4056387Z         )
2025-01-24T14:29:24.4056684Z     
2025-01-24T14:29:24.4057144Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4057455Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4057749Z             return cls(
2025-01-24T14:29:24.4058043Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4058629Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4059073Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4059508Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4059919Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4060245Z                 lines_df=lines_df,
2025-01-24T14:29:24.4060536Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4060916Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4061535Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4061935Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4062334Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4062733Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4063032Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4063314Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4063578Z                 simulation=sim,
2025-01-24T14:29:24.4063805Z             )
2025-01-24T14:29:24.4064004Z         else: # real packets
2025-01-24T14:29:24.4064333Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4064682Z             # which got emitted
2025-01-24T14:29:24.4064940Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4065209Z >           return cls(
2025-01-24T14:29:24.4065517Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4066182Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4066626Z                     mask
2025-01-24T14:29:24.4066836Z                 ],
2025-01-24T14:29:24.4067148Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4067506Z                     mask
2025-01-24T14:29:24.4067705Z                 ],
2025-01-24T14:29:24.4067989Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4068436Z                     mask
2025-01-24T14:29:24.4068632Z                 ],
2025-01-24T14:29:24.4068911Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4069262Z                 lines_df=lines_df,
2025-01-24T14:29:24.4069589Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4070022Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4070524Z                     mask
2025-01-24T14:29:24.4070840Z                 ],
2025-01-24T14:29:24.4071219Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4071952Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4072427Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4072828Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4073127Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4073412Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4073677Z                 simulation=sim,
2025-01-24T14:29:24.4073893Z             )
2025-01-24T14:29:24.4074352Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4074898Z 
2025-01-24T14:29:24.4075079Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4075822Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] _
2025-01-24T14:29:24.4076280Z 
2025-01-24T14:29:24.4076514Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4076829Z 
2025-01-24T14:29:24.4076924Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4077180Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4077418Z         """
2025-01-24T14:29:24.4077671Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4077979Z     
2025-01-24T14:29:24.4078150Z         Parameters:
2025-01-24T14:29:24.4078464Z         -----------
2025-01-24T14:29:24.4078701Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4078973Z     
2025-01-24T14:29:24.4079142Z         Returns:
2025-01-24T14:29:24.4079336Z         --------
2025-01-24T14:29:24.4079534Z         An LIVPlotter instance.
2025-01-24T14:29:24.4079756Z         """
2025-01-24T14:29:24.4080153Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4080485Z 
2025-01-24T14:29:24.4080637Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4080987Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4081357Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4081745Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4082192Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4082621Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4082940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4083139Z 
2025-01-24T14:29:24.4083353Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4083831Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4084172Z packets_mode = 'real'
2025-01-24T14:29:24.4084305Z 
2025-01-24T14:29:24.4084381Z     @classmethod
2025-01-24T14:29:24.4084605Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4085028Z         """
2025-01-24T14:29:24.4085426Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4085779Z     
2025-01-24T14:29:24.4085947Z         Parameters
2025-01-24T14:29:24.4086138Z         ----------
2025-01-24T14:29:24.4086354Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4086688Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4087010Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4087325Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4087617Z     
2025-01-24T14:29:24.4087786Z         Returns
2025-01-24T14:29:24.4087969Z         -------
2025-01-24T14:29:24.4088164Z         SimulationPacketData
2025-01-24T14:29:24.4088543Z         """
2025-01-24T14:29:24.4088748Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4089103Z             raise ValueError(
2025-01-24T14:29:24.4089669Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4089977Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4090234Z             )
2025-01-24T14:29:24.4090444Z         # Properties common among both packet modes
2025-01-24T14:29:24.4090810Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4091135Z             "line_id"
2025-01-24T14:29:24.4091328Z         )
2025-01-24T14:29:24.4091537Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4091855Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4092150Z         time_of_simulation = (
2025-01-24T14:29:24.4092584Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4092898Z         )
2025-01-24T14:29:24.4093067Z     
2025-01-24T14:29:24.4093238Z         spectrum = (
2025-01-24T14:29:24.4093478Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4093771Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4094158Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4094625Z         )
2025-01-24T14:29:24.4094805Z     
2025-01-24T14:29:24.4094997Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4095300Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4095593Z             return cls(
2025-01-24T14:29:24.4095876Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4096295Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4096735Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4097180Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4097595Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4097994Z                 lines_df=lines_df,
2025-01-24T14:29:24.4098593Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4098974Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4099350Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4099683Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4100075Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4100468Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4100770Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4101059Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4101336Z                 simulation=sim,
2025-01-24T14:29:24.4101555Z             )
2025-01-24T14:29:24.4101746Z         else: # real packets
2025-01-24T14:29:24.4102063Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4102403Z             # which got emitted
2025-01-24T14:29:24.4102657Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4102927Z >           return cls(
2025-01-24T14:29:24.4103370Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4103967Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4104316Z                     mask
2025-01-24T14:29:24.4104508Z                 ],
2025-01-24T14:29:24.4104807Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4105157Z                     mask
2025-01-24T14:29:24.4105357Z                 ],
2025-01-24T14:29:24.4105640Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4105982Z                     mask
2025-01-24T14:29:24.4106176Z                 ],
2025-01-24T14:29:24.4106593Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4106931Z                 lines_df=lines_df,
2025-01-24T14:29:24.4107450Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4108136Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4108861Z                     mask
2025-01-24T14:29:24.4109166Z                 ],
2025-01-24T14:29:24.4109563Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4110120Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4110763Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4111702Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4112230Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4112726Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4113196Z                 simulation=sim,
2025-01-24T14:29:24.4113579Z             )
2025-01-24T14:29:24.4115928Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4116678Z 
2025-01-24T14:29:24.4116993Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4117917Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] _
2025-01-24T14:29:24.4118742Z 
2025-01-24T14:29:24.4119131Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4119666Z 
2025-01-24T14:29:24.4119848Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4120291Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4120698Z         """
2025-01-24T14:29:24.4121129Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4121645Z     
2025-01-24T14:29:24.4121930Z         Parameters:
2025-01-24T14:29:24.4122259Z         -----------
2025-01-24T14:29:24.4122656Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4123119Z     
2025-01-24T14:29:24.4123395Z         Returns:
2025-01-24T14:29:24.4123716Z         --------
2025-01-24T14:29:24.4124044Z         An LIVPlotter instance.
2025-01-24T14:29:24.4124432Z         """
2025-01-24T14:29:24.4124824Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4125208Z 
2025-01-24T14:29:24.4125458Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4126036Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4126699Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4127383Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4128153Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4129097Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4129716Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4130077Z 
2025-01-24T14:29:24.4130443Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4131242Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4131814Z packets_mode = 'real'
2025-01-24T14:29:24.4131955Z 
2025-01-24T14:29:24.4132038Z     @classmethod
2025-01-24T14:29:24.4132276Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4132712Z         """
2025-01-24T14:29:24.4133102Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4133473Z     
2025-01-24T14:29:24.4133646Z         Parameters
2025-01-24T14:29:24.4133844Z         ----------
2025-01-24T14:29:24.4134069Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4134405Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4134917Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4135236Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4135533Z     
2025-01-24T14:29:24.4135693Z         Returns
2025-01-24T14:29:24.4135877Z         -------
2025-01-24T14:29:24.4136073Z         SimulationPacketData
2025-01-24T14:29:24.4136299Z         """
2025-01-24T14:29:24.4136505Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4136781Z             raise ValueError(
2025-01-24T14:29:24.4137047Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4137369Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4138010Z             )
2025-01-24T14:29:24.4138424Z         # Properties common among both packet modes
2025-01-24T14:29:24.4138825Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4139151Z             "line_id"
2025-01-24T14:29:24.4139351Z         )
2025-01-24T14:29:24.4139559Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4139875Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4140171Z         time_of_simulation = (
2025-01-24T14:29:24.4140475Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4140797Z         )
2025-01-24T14:29:24.4140964Z     
2025-01-24T14:29:24.4141132Z         spectrum = (
2025-01-24T14:29:24.4141376Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4141710Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4142219Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4142505Z         )
2025-01-24T14:29:24.4142668Z     
2025-01-24T14:29:24.4142849Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4143140Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4143425Z             return cls(
2025-01-24T14:29:24.4143714Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4144156Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4144601Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4145040Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4145447Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4145771Z                 lines_df=lines_df,
2025-01-24T14:29:24.4146064Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4146668Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4147056Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4147396Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4147792Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4148192Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4148720Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4149006Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4149272Z                 simulation=sim,
2025-01-24T14:29:24.4149493Z             )
2025-01-24T14:29:24.4149681Z         else: # real packets
2025-01-24T14:29:24.4149995Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4150333Z             # which got emitted
2025-01-24T14:29:24.4150589Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4150894Z >           return cls(
2025-01-24T14:29:24.4151419Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4151878Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4152371Z                     mask
2025-01-24T14:29:24.4152571Z                 ],
2025-01-24T14:29:24.4152871Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4153225Z                     mask
2025-01-24T14:29:24.4153423Z                 ],
2025-01-24T14:29:24.4153705Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4154042Z                     mask
2025-01-24T14:29:24.4154243Z                 ],
2025-01-24T14:29:24.4154524Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4154867Z                 lines_df=lines_df,
2025-01-24T14:29:24.4155331Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4156027Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4156381Z                     mask
2025-01-24T14:29:24.4156580Z                 ],
2025-01-24T14:29:24.4156835Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4157166Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4157553Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4157951Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4158360Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4158648Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4158909Z                 simulation=sim,
2025-01-24T14:29:24.4159130Z             )
2025-01-24T14:29:24.4159585Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4160016Z 
2025-01-24T14:29:24.4160257Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4160970Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] _
2025-01-24T14:29:24.4161338Z 
2025-01-24T14:29:24.4161560Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4161871Z 
2025-01-24T14:29:24.4161964Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4162224Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4162466Z         """
2025-01-24T14:29:24.4162717Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4163041Z     
2025-01-24T14:29:24.4163219Z         Parameters:
2025-01-24T14:29:24.4163420Z         -----------
2025-01-24T14:29:24.4163654Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4163929Z     
2025-01-24T14:29:24.4164097Z         Returns:
2025-01-24T14:29:24.4164285Z         --------
2025-01-24T14:29:24.4164481Z         An LIVPlotter instance.
2025-01-24T14:29:24.4164822Z         """
2025-01-24T14:29:24.4165177Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4165408Z 
2025-01-24T14:29:24.4165556Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4165896Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4166261Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4166652Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4167108Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4167549Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4167881Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4168094Z 
2025-01-24T14:29:24.4168452Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4168975Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4169316Z packets_mode = 'real'
2025-01-24T14:29:24.4169588Z 
2025-01-24T14:29:24.4169665Z     @classmethod
2025-01-24T14:29:24.4169890Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4170162Z         """
2025-01-24T14:29:24.4170460Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4170815Z     
2025-01-24T14:29:24.4170989Z         Parameters
2025-01-24T14:29:24.4171183Z         ----------
2025-01-24T14:29:24.4171400Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4171739Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4172070Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4172399Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4172824Z     
2025-01-24T14:29:24.4172988Z         Returns
2025-01-24T14:29:24.4173176Z         -------
2025-01-24T14:29:24.4173374Z         SimulationPacketData
2025-01-24T14:29:24.4173593Z         """
2025-01-24T14:29:24.4173801Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4174241Z             raise ValueError(
2025-01-24T14:29:24.4174609Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4174918Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4175176Z             )
2025-01-24T14:29:24.4175391Z         # Properties common among both packet modes
2025-01-24T14:29:24.4175750Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4176078Z             "line_id"
2025-01-24T14:29:24.4176273Z         )
2025-01-24T14:29:24.4176484Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4176805Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4177106Z         time_of_simulation = (
2025-01-24T14:29:24.4177412Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4177726Z         )
2025-01-24T14:29:24.4177896Z     
2025-01-24T14:29:24.4178067Z         spectrum = (
2025-01-24T14:29:24.4178450Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4178753Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4179043Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4179318Z         )
2025-01-24T14:29:24.4179481Z     
2025-01-24T14:29:24.4179658Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4179949Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4180235Z             return cls(
2025-01-24T14:29:24.4180521Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4180939Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4181394Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4181832Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4182246Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4182576Z                 lines_df=lines_df,
2025-01-24T14:29:24.4182866Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4183237Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4183603Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4183935Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4184326Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4184718Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4185022Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4185306Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4185575Z                 simulation=sim,
2025-01-24T14:29:24.4185796Z             )
2025-01-24T14:29:24.4185987Z         else: # real packets
2025-01-24T14:29:24.4186435Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4186773Z             # which got emitted
2025-01-24T14:29:24.4187052Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4187322Z >           return cls(
2025-01-24T14:29:24.4187624Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4188075Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4188534Z                     mask
2025-01-24T14:29:24.4188732Z                 ],
2025-01-24T14:29:24.4189031Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4189531Z                     mask
2025-01-24T14:29:24.4189723Z                 ],
2025-01-24T14:29:24.4190006Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4190342Z                     mask
2025-01-24T14:29:24.4190546Z                 ],
2025-01-24T14:29:24.4190824Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4191167Z                 lines_df=lines_df,
2025-01-24T14:29:24.4191487Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4191922Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4192258Z                     mask
2025-01-24T14:29:24.4192591Z                 ],
2025-01-24T14:29:24.4192922Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4193352Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4193814Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4194324Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4194679Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4194998Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4195367Z                 simulation=sim,
2025-01-24T14:29:24.4195591Z             )
2025-01-24T14:29:24.4196033Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4196452Z 
2025-01-24T14:29:24.4196634Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4197159Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] _
2025-01-24T14:29:24.4197521Z 
2025-01-24T14:29:24.4197742Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4198056Z 
2025-01-24T14:29:24.4198148Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4198514Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4198752Z         """
2025-01-24T14:29:24.4199003Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4199312Z     
2025-01-24T14:29:24.4199481Z         Parameters:
2025-01-24T14:29:24.4199671Z         -----------
2025-01-24T14:29:24.4199898Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4200158Z     
2025-01-24T14:29:24.4200326Z         Returns:
2025-01-24T14:29:24.4200513Z         --------
2025-01-24T14:29:24.4200712Z         An LIVPlotter instance.
2025-01-24T14:29:24.4200931Z         """
2025-01-24T14:29:24.4201166Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4201388Z 
2025-01-24T14:29:24.4201535Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4201872Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4202243Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4202636Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4203088Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4203834Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4204165Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4204374Z 
2025-01-24T14:29:24.4204594Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4205075Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4205411Z packets_mode = 'real'
2025-01-24T14:29:24.4205543Z 
2025-01-24T14:29:24.4205617Z     @classmethod
2025-01-24T14:29:24.4205836Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4206098Z         """
2025-01-24T14:29:24.4206522Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4206879Z     
2025-01-24T14:29:24.4207048Z         Parameters
2025-01-24T14:29:24.4207240Z         ----------
2025-01-24T14:29:24.4207456Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4207800Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4208126Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4208577Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4208871Z     
2025-01-24T14:29:24.4209038Z         Returns
2025-01-24T14:29:24.4209218Z         -------
2025-01-24T14:29:24.4209408Z         SimulationPacketData
2025-01-24T14:29:24.4209624Z         """
2025-01-24T14:29:24.4209830Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4210104Z             raise ValueError(
2025-01-24T14:29:24.4210367Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4210689Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4210950Z             )
2025-01-24T14:29:24.4211164Z         # Properties common among both packet modes
2025-01-24T14:29:24.4211515Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4211846Z             "line_id"
2025-01-24T14:29:24.4212042Z         )
2025-01-24T14:29:24.4212247Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4212559Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4212852Z         time_of_simulation = (
2025-01-24T14:29:24.4213154Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4213465Z         )
2025-01-24T14:29:24.4213633Z     
2025-01-24T14:29:24.4213809Z         spectrum = (
2025-01-24T14:29:24.4214058Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4214353Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4214656Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4214935Z         )
2025-01-24T14:29:24.4215107Z     
2025-01-24T14:29:24.4215293Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4215596Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4215888Z             return cls(
2025-01-24T14:29:24.4216171Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4216586Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4217029Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4217469Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4217884Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4218211Z                 lines_df=lines_df,
2025-01-24T14:29:24.4218622Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4219003Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4219375Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4219781Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4220643Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4221215Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4221519Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4221804Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4222069Z                 simulation=sim,
2025-01-24T14:29:24.4222289Z             )
2025-01-24T14:29:24.4222478Z         else: # real packets
2025-01-24T14:29:24.4222794Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4223134Z             # which got emitted
2025-01-24T14:29:24.4223546Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4223816Z >           return cls(
2025-01-24T14:29:24.4224119Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4224573Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4224931Z                     mask
2025-01-24T14:29:24.4225130Z                 ],
2025-01-24T14:29:24.4225435Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4225791Z                     mask
2025-01-24T14:29:24.4225986Z                 ],
2025-01-24T14:29:24.4226265Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4226603Z                     mask
2025-01-24T14:29:24.4226798Z                 ],
2025-01-24T14:29:24.4227079Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4227425Z                 lines_df=lines_df,
2025-01-24T14:29:24.4227754Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4228184Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4228664Z                     mask
2025-01-24T14:29:24.4228859Z                 ],
2025-01-24T14:29:24.4229098Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4229455Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4229850Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4230237Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4230534Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4230632Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4230716Z                 simulation=sim,
2025-01-24T14:29:24.4230796Z             )
2025-01-24T14:29:24.4231139Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4231146Z 
2025-01-24T14:29:24.4231320Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4231603Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] _
2025-01-24T14:29:24.4231609Z 
2025-01-24T14:29:24.4231827Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4231832Z 
2025-01-24T14:29:24.4231929Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4232029Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4232103Z         """
2025-01-24T14:29:24.4232264Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4232335Z     
2025-01-24T14:29:24.4232417Z         Parameters:
2025-01-24T14:29:24.4232494Z         -----------
2025-01-24T14:29:24.4232618Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4232689Z     
2025-01-24T14:29:24.4232767Z         Returns:
2025-01-24T14:29:24.4232842Z         --------
2025-01-24T14:29:24.4232934Z         An LIVPlotter instance.
2025-01-24T14:29:24.4233006Z         """
2025-01-24T14:29:24.4233267Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4233272Z 
2025-01-24T14:29:24.4233411Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4233534Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4233699Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4233847Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4234066Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4234203Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4234322Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4234431Z 
2025-01-24T14:29:24.4234650Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4234825Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4234913Z packets_mode = 'real'
2025-01-24T14:29:24.4234918Z 
2025-01-24T14:29:24.4234998Z     @classmethod
2025-01-24T14:29:24.4235116Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4235193Z         """
2025-01-24T14:29:24.4235396Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4235468Z     
2025-01-24T14:29:24.4235549Z         Parameters
2025-01-24T14:29:24.4235624Z         ----------
2025-01-24T14:29:24.4235730Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4235880Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4235979Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4236128Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4236204Z     
2025-01-24T14:29:24.4236279Z         Returns
2025-01-24T14:29:24.4236358Z         -------
2025-01-24T14:29:24.4236446Z         SimulationPacketData
2025-01-24T14:29:24.4236525Z         """
2025-01-24T14:29:24.4236631Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4236719Z             raise ValueError(
2025-01-24T14:29:24.4236841Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4236953Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4237031Z             )
2025-01-24T14:29:24.4237138Z         # Properties common among both packet modes
2025-01-24T14:29:24.4237304Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4237380Z             "line_id"
2025-01-24T14:29:24.4237456Z         )
2025-01-24T14:29:24.4237566Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4237699Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4237783Z         time_of_simulation = (
2025-01-24T14:29:24.4237947Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4238023Z         )
2025-01-24T14:29:24.4238101Z     
2025-01-24T14:29:24.4238179Z         spectrum = (
2025-01-24T14:29:24.4238402Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4238495Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4238620Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4238697Z         )
2025-01-24T14:29:24.4238769Z     
2025-01-24T14:29:24.4238864Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4238990Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4239071Z             return cls(
2025-01-24T14:29:24.4239232Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4239416Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4239595Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4239776Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4240052Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4240139Z                 lines_df=lines_df,
2025-01-24T14:29:24.4240268Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4240429Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4240563Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4240680Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4240872Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4241088Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4241199Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4241299Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4241385Z                 simulation=sim,
2025-01-24T14:29:24.4241462Z             )
2025-01-24T14:29:24.4241553Z         else: # real packets
2025-01-24T14:29:24.4241721Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4241808Z             # which got emitted
2025-01-24T14:29:24.4241917Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4242000Z >           return cls(
2025-01-24T14:29:24.4242182Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4242368Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4242449Z                     mask
2025-01-24T14:29:24.4242526Z                 ],
2025-01-24T14:29:24.4242723Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4242799Z                     mask
2025-01-24T14:29:24.4242877Z                 ],
2025-01-24T14:29:24.4243043Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4243127Z                     mask
2025-01-24T14:29:24.4243199Z                 ],
2025-01-24T14:29:24.4243369Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4243452Z                 lines_df=lines_df,
2025-01-24T14:29:24.4243622Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4243802Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4243874Z                     mask
2025-01-24T14:29:24.4243958Z                 ],
2025-01-24T14:29:24.4244089Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4244208Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4244393Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4244505Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4244609Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4244710Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4244792Z                 simulation=sim,
2025-01-24T14:29:24.4244868Z             )
2025-01-24T14:29:24.4245210Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4245221Z 
2025-01-24T14:29:24.4245393Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4245660Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] _
2025-01-24T14:29:24.4245665Z 
2025-01-24T14:29:24.4245887Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4245892Z 
2025-01-24T14:29:24.4245987Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4246079Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4246157Z         """
2025-01-24T14:29:24.4246397Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4246474Z     
2025-01-24T14:29:24.4246552Z         Parameters:
2025-01-24T14:29:24.4246633Z         -----------
2025-01-24T14:29:24.4246753Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4246824Z     
2025-01-24T14:29:24.4246903Z         Returns:
2025-01-24T14:29:24.4246978Z         --------
2025-01-24T14:29:24.4247067Z         An LIVPlotter instance.
2025-01-24T14:29:24.4247139Z         """
2025-01-24T14:29:24.4247277Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4247282Z 
2025-01-24T14:29:24.4247420Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4247621Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4247782Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4247936Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4248162Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4248482Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4248604Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4248609Z 
2025-01-24T14:29:24.4248824Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4248997Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4249081Z packets_mode = 'real'
2025-01-24T14:29:24.4249085Z 
2025-01-24T14:29:24.4249163Z     @classmethod
2025-01-24T14:29:24.4249273Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4249352Z         """
2025-01-24T14:29:24.4249545Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4249619Z     
2025-01-24T14:29:24.4249694Z         Parameters
2025-01-24T14:29:24.4249780Z         ----------
2025-01-24T14:29:24.4249882Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4250038Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4250139Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4250280Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4250356Z     
2025-01-24T14:29:24.4250428Z         Returns
2025-01-24T14:29:24.4250505Z         -------
2025-01-24T14:29:24.4250595Z         SimulationPacketData
2025-01-24T14:29:24.4250671Z         """
2025-01-24T14:29:24.4250778Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4250867Z             raise ValueError(
2025-01-24T14:29:24.4250990Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4251101Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4251173Z             )
2025-01-24T14:29:24.4251285Z         # Properties common among both packet modes
2025-01-24T14:29:24.4251454Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4251538Z             "line_id"
2025-01-24T14:29:24.4251615Z         )
2025-01-24T14:29:24.4251727Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4251857Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4251941Z         time_of_simulation = (
2025-01-24T14:29:24.4252104Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4252175Z         )
2025-01-24T14:29:24.4252249Z     
2025-01-24T14:29:24.4252326Z         spectrum = (
2025-01-24T14:29:24.4252447Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4252542Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4252666Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4252738Z         )
2025-01-24T14:29:24.4252814Z     
2025-01-24T14:29:24.4252903Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4253178Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4253255Z             return cls(
2025-01-24T14:29:24.4253422Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4253601Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4253777Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4253949Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4254099Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4254294Z                 lines_df=lines_df,
2025-01-24T14:29:24.4254424Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4254594Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4254722Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4254847Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4255033Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4255147Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4255256Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4255354Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4255439Z                 simulation=sim,
2025-01-24T14:29:24.4255511Z             )
2025-01-24T14:29:24.4255598Z         else: # real packets
2025-01-24T14:29:24.4255765Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4255856Z             # which got emitted
2025-01-24T14:29:24.4255964Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4256045Z >           return cls(
2025-01-24T14:29:24.4256218Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4256409Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4256485Z                     mask
2025-01-24T14:29:24.4270923Z                 ],
2025-01-24T14:29:24.4271190Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4271281Z                     mask
2025-01-24T14:29:24.4271362Z                 ],
2025-01-24T14:29:24.4271554Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4271638Z                     mask
2025-01-24T14:29:24.4271710Z                 ],
2025-01-24T14:29:24.4271900Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4271989Z                 lines_df=lines_df,
2025-01-24T14:29:24.4272170Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4272350Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4272435Z                     mask
2025-01-24T14:29:24.4272505Z                 ],
2025-01-24T14:29:24.4272642Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4272765Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4272964Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4273084Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4273191Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4273299Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4273386Z                 simulation=sim,
2025-01-24T14:29:24.4273464Z             )
2025-01-24T14:29:24.4273805Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4273813Z 
2025-01-24T14:29:24.4274178Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4274458Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] _
2025-01-24T14:29:24.4274469Z 
2025-01-24T14:29:24.4274692Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4274697Z 
2025-01-24T14:29:24.4274798Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4274892Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4274969Z         """
2025-01-24T14:29:24.4275127Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4275203Z     
2025-01-24T14:29:24.4275283Z         Parameters:
2025-01-24T14:29:24.4275480Z         -----------
2025-01-24T14:29:24.4275603Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4275681Z     
2025-01-24T14:29:24.4275756Z         Returns:
2025-01-24T14:29:24.4275836Z         --------
2025-01-24T14:29:24.4275930Z         An LIVPlotter instance.
2025-01-24T14:29:24.4276006Z         """
2025-01-24T14:29:24.4276145Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4276156Z 
2025-01-24T14:29:24.4276299Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4276423Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4276584Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4276734Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4276951Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4277090Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4277213Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4277218Z 
2025-01-24T14:29:24.4277440Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4277617Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4277705Z packets_mode = 'real'
2025-01-24T14:29:24.4277710Z 
2025-01-24T14:29:24.4277790Z     @classmethod
2025-01-24T14:29:24.4277907Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4277985Z         """
2025-01-24T14:29:24.4278186Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4278374Z     
2025-01-24T14:29:24.4278455Z         Parameters
2025-01-24T14:29:24.4278537Z         ----------
2025-01-24T14:29:24.4278638Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4278797Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4278896Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4279040Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4279113Z     
2025-01-24T14:29:24.4279191Z         Returns
2025-01-24T14:29:24.4279270Z         -------
2025-01-24T14:29:24.4279364Z         SimulationPacketData
2025-01-24T14:29:24.4279440Z         """
2025-01-24T14:29:24.4279547Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4279636Z             raise ValueError(
2025-01-24T14:29:24.4279757Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4279872Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4279943Z             )
2025-01-24T14:29:24.4280057Z         # Properties common among both packet modes
2025-01-24T14:29:24.4280220Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4280299Z             "line_id"
2025-01-24T14:29:24.4280375Z         )
2025-01-24T14:29:24.4280489Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4280612Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4280701Z         time_of_simulation = (
2025-01-24T14:29:24.4280854Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4281053Z         )
2025-01-24T14:29:24.4281130Z     
2025-01-24T14:29:24.4281208Z         spectrum = (
2025-01-24T14:29:24.4281327Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4281420Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4281545Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4281616Z         )
2025-01-24T14:29:24.4281688Z     
2025-01-24T14:29:24.4281778Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4281904Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4281988Z             return cls(
2025-01-24T14:29:24.4282258Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4282439Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4282617Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4282794Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4282944Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4283032Z                 lines_df=lines_df,
2025-01-24T14:29:24.4283164Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4283321Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4283451Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4283569Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4283761Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4283873Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4283984Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4284083Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4284174Z                 simulation=sim,
2025-01-24T14:29:24.4284245Z             )
2025-01-24T14:29:24.4284333Z         else: # real packets
2025-01-24T14:29:24.4284499Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4284586Z             # which got emitted
2025-01-24T14:29:24.4284700Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4284779Z >           return cls(
2025-01-24T14:29:24.4284960Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4285144Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4285230Z                     mask
2025-01-24T14:29:24.4285302Z                 ],
2025-01-24T14:29:24.4285496Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4285573Z                     mask
2025-01-24T14:29:24.4285654Z                 ],
2025-01-24T14:29:24.4285821Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4285900Z                     mask
2025-01-24T14:29:24.4285971Z                 ],
2025-01-24T14:29:24.4286141Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4286224Z                 lines_df=lines_df,
2025-01-24T14:29:24.4286392Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4286569Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4286643Z                     mask
2025-01-24T14:29:24.4286722Z                 ],
2025-01-24T14:29:24.4286856Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4286976Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4287159Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4287364Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4287465Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4287561Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4287642Z                 simulation=sim,
2025-01-24T14:29:24.4287718Z             )
2025-01-24T14:29:24.4288058Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4288069Z 
2025-01-24T14:29:24.4288359Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4288641Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] _
2025-01-24T14:29:24.4288762Z 
2025-01-24T14:29:24.4288983Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4288988Z 
2025-01-24T14:29:24.4289084Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4289182Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4289258Z         """
2025-01-24T14:29:24.4289413Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4289490Z     
2025-01-24T14:29:24.4289569Z         Parameters:
2025-01-24T14:29:24.4289649Z         -----------
2025-01-24T14:29:24.4289769Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4289839Z     
2025-01-24T14:29:24.4289916Z         Returns:
2025-01-24T14:29:24.4289991Z         --------
2025-01-24T14:29:24.4290082Z         An LIVPlotter instance.
2025-01-24T14:29:24.4290153Z         """
2025-01-24T14:29:24.4290294Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4290304Z 
2025-01-24T14:29:24.4290441Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4290561Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4290726Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4290884Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4291102Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4291241Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4291354Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4291359Z 
2025-01-24T14:29:24.4291575Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4291746Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4291832Z packets_mode = 'real'
2025-01-24T14:29:24.4291840Z 
2025-01-24T14:29:24.4291921Z     @classmethod
2025-01-24T14:29:24.4292036Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4292114Z         """
2025-01-24T14:29:24.4292313Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4292391Z     
2025-01-24T14:29:24.4292468Z         Parameters
2025-01-24T14:29:24.4292546Z         ----------
2025-01-24T14:29:24.4292647Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4292805Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4292902Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4293043Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4293119Z     
2025-01-24T14:29:24.4293191Z         Returns
2025-01-24T14:29:24.4293268Z         -------
2025-01-24T14:29:24.4293357Z         SimulationPacketData
2025-01-24T14:29:24.4293432Z         """
2025-01-24T14:29:24.4293539Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4293632Z             raise ValueError(
2025-01-24T14:29:24.4293751Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4293860Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4294101Z             )
2025-01-24T14:29:24.4294215Z         # Properties common among both packet modes
2025-01-24T14:29:24.4294379Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4294459Z             "line_id"
2025-01-24T14:29:24.4294533Z         )
2025-01-24T14:29:24.4294642Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4294773Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4294856Z         time_of_simulation = (
2025-01-24T14:29:24.4295013Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4295081Z         )
2025-01-24T14:29:24.4295150Z     
2025-01-24T14:29:24.4295227Z         spectrum = (
2025-01-24T14:29:24.4295429Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4295519Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4295642Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4295713Z         )
2025-01-24T14:29:24.4295793Z     
2025-01-24T14:29:24.4295882Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4296009Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4296090Z             return cls(
2025-01-24T14:29:24.4296247Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4296421Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4296598Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4296769Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4296921Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4297013Z                 lines_df=lines_df,
2025-01-24T14:29:24.4297140Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4297300Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4297433Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4297554Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4297753Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4297862Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4297969Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4298068Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4298155Z                 simulation=sim,
2025-01-24T14:29:24.4298385Z             )
2025-01-24T14:29:24.4298524Z         else: # real packets
2025-01-24T14:29:24.4298700Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4298787Z             # which got emitted
2025-01-24T14:29:24.4298894Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4298980Z >           return cls(
2025-01-24T14:29:24.4299153Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4299341Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4299418Z                     mask
2025-01-24T14:29:24.4299491Z                 ],
2025-01-24T14:29:24.4299680Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4299753Z                     mask
2025-01-24T14:29:24.4299833Z                 ],
2025-01-24T14:29:24.4299999Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4300079Z                     mask
2025-01-24T14:29:24.4300152Z                 ],
2025-01-24T14:29:24.4300325Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4300407Z                 lines_df=lines_df,
2025-01-24T14:29:24.4300591Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4300905Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4300987Z                     mask
2025-01-24T14:29:24.4301059Z                 ],
2025-01-24T14:29:24.4301193Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4301315Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4301501Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4301615Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4301715Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4301926Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4302008Z                 simulation=sim,
2025-01-24T14:29:24.4302083Z             )
2025-01-24T14:29:24.4302424Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4302434Z 
2025-01-24T14:29:24.4302614Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4302876Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] _
2025-01-24T14:29:24.4302887Z 
2025-01-24T14:29:24.4303100Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4303106Z 
2025-01-24T14:29:24.4303197Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4303287Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4303360Z         """
2025-01-24T14:29:24.4303508Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4303590Z     
2025-01-24T14:29:24.4303667Z         Parameters:
2025-01-24T14:29:24.4303754Z         -----------
2025-01-24T14:29:24.4303869Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4303945Z     
2025-01-24T14:29:24.4304017Z         Returns:
2025-01-24T14:29:24.4304102Z         --------
2025-01-24T14:29:24.4304190Z         An LIVPlotter instance.
2025-01-24T14:29:24.4304267Z         """
2025-01-24T14:29:24.4304404Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4304410Z 
2025-01-24T14:29:24.4304543Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4304663Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4304822Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4304972Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4305196Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4305333Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4305446Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4305450Z 
2025-01-24T14:29:24.4305669Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4305843Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4305926Z packets_mode = 'real'
2025-01-24T14:29:24.4305939Z 
2025-01-24T14:29:24.4306013Z     @classmethod
2025-01-24T14:29:24.4306128Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4306200Z         """
2025-01-24T14:29:24.4306398Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4306470Z     
2025-01-24T14:29:24.4306549Z         Parameters
2025-01-24T14:29:24.4306624Z         ----------
2025-01-24T14:29:24.4306727Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4306877Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4306974Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4307111Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4307279Z     
2025-01-24T14:29:24.4307351Z         Returns
2025-01-24T14:29:24.4307429Z         -------
2025-01-24T14:29:24.4307516Z         SimulationPacketData
2025-01-24T14:29:24.4307594Z         """
2025-01-24T14:29:24.4307701Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4307790Z             raise ValueError(
2025-01-24T14:29:24.4307912Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4308016Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4308095Z             )
2025-01-24T14:29:24.4308199Z         # Properties common among both packet modes
2025-01-24T14:29:24.4308468Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4308665Z             "line_id"
2025-01-24T14:29:24.4308740Z         )
2025-01-24T14:29:24.4308850Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4308979Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4309068Z         time_of_simulation = (
2025-01-24T14:29:24.4309228Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4309299Z         )
2025-01-24T14:29:24.4309373Z     
2025-01-24T14:29:24.4309449Z         spectrum = (
2025-01-24T14:29:24.4309567Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4309662Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4309780Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4309855Z         )
2025-01-24T14:29:24.4309923Z     
2025-01-24T14:29:24.4310015Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4310134Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4310218Z             return cls(
2025-01-24T14:29:24.4310375Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4310553Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4310738Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4310912Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4311064Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4311151Z                 lines_df=lines_df,
2025-01-24T14:29:24.4311283Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4311436Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4311571Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4311689Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4311888Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4311995Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4312101Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4312203Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4312290Z                 simulation=sim,
2025-01-24T14:29:24.4312363Z             )
2025-01-24T14:29:24.4312449Z         else: # real packets
2025-01-24T14:29:24.4312614Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4312699Z             # which got emitted
2025-01-24T14:29:24.4312813Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4312888Z >           return cls(
2025-01-24T14:29:24.4313066Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4313251Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4313336Z                     mask
2025-01-24T14:29:24.4313408Z                 ],
2025-01-24T14:29:24.4313602Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4313797Z                     mask
2025-01-24T14:29:24.4313872Z                 ],
2025-01-24T14:29:24.4314037Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4314116Z                     mask
2025-01-24T14:29:24.4314184Z                 ],
2025-01-24T14:29:24.4314354Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4314438Z                 lines_df=lines_df,
2025-01-24T14:29:24.4314600Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4314780Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4314955Z                     mask
2025-01-24T14:29:24.4315032Z                 ],
2025-01-24T14:29:24.4315158Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4315276Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4315467Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4315583Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4315687Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4315786Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4315867Z                 simulation=sim,
2025-01-24T14:29:24.4315941Z             )
2025-01-24T14:29:24.4316277Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4316283Z 
2025-01-24T14:29:24.4316457Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4316732Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] _
2025-01-24T14:29:24.4316737Z 
2025-01-24T14:29:24.4316950Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4316959Z 
2025-01-24T14:29:24.4317052Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4317142Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4317216Z         """
2025-01-24T14:29:24.4317366Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4317443Z     
2025-01-24T14:29:24.4317528Z         Parameters:
2025-01-24T14:29:24.4317603Z         -----------
2025-01-24T14:29:24.4317722Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4317793Z     
2025-01-24T14:29:24.4317870Z         Returns:
2025-01-24T14:29:24.4317944Z         --------
2025-01-24T14:29:24.4318033Z         An LIVPlotter instance.
2025-01-24T14:29:24.4318105Z         """
2025-01-24T14:29:24.4318342Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4318349Z 
2025-01-24T14:29:24.4318486Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4318601Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4318763Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4318916Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4319131Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4319268Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4319380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4319385Z 
2025-01-24T14:29:24.4319599Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4319772Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4319858Z packets_mode = 'real'
2025-01-24T14:29:24.4319863Z 
2025-01-24T14:29:24.4319942Z     @classmethod
2025-01-24T14:29:24.4320052Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4320129Z         """
2025-01-24T14:29:24.4320320Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4320515Z     
2025-01-24T14:29:24.4320593Z         Parameters
2025-01-24T14:29:24.4320669Z         ----------
2025-01-24T14:29:24.4320774Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4320923Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4321018Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4321156Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4321231Z     
2025-01-24T14:29:24.4321304Z         Returns
2025-01-24T14:29:24.4321385Z         -------
2025-01-24T14:29:24.4321472Z         SimulationPacketData
2025-01-24T14:29:24.4321656Z         """
2025-01-24T14:29:24.4321762Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4321850Z             raise ValueError(
2025-01-24T14:29:24.4321968Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4322076Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4322152Z             )
2025-01-24T14:29:24.4322263Z         # Properties common among both packet modes
2025-01-24T14:29:24.4322428Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4322504Z             "line_id"
2025-01-24T14:29:24.4322580Z         )
2025-01-24T14:29:24.4322689Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4322818Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4322902Z         time_of_simulation = (
2025-01-24T14:29:24.4323059Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4323134Z         )
2025-01-24T14:29:24.4323206Z     
2025-01-24T14:29:24.4323284Z         spectrum = (
2025-01-24T14:29:24.4323403Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4323492Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4323615Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4323692Z         )
2025-01-24T14:29:24.4323767Z     
2025-01-24T14:29:24.4323855Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4323982Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4324063Z             return cls(
2025-01-24T14:29:24.4324226Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4324402Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4324581Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4324751Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4324907Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4324996Z                 lines_df=lines_df,
2025-01-24T14:29:24.4325122Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4325284Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4325410Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4325532Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4325723Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4325834Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4325943Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4326049Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4326152Z                 simulation=sim,
2025-01-24T14:29:24.4326228Z             )
2025-01-24T14:29:24.4326316Z         else: # real packets
2025-01-24T14:29:24.4326480Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4326566Z             # which got emitted
2025-01-24T14:29:24.4326673Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4326844Z >           return cls(
2025-01-24T14:29:24.4327018Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4327208Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4327290Z                     mask
2025-01-24T14:29:24.4327362Z                 ],
2025-01-24T14:29:24.4327556Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4327633Z                     mask
2025-01-24T14:29:24.4327709Z                 ],
2025-01-24T14:29:24.4327874Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4328033Z                     mask
2025-01-24T14:29:24.4328106Z                 ],
2025-01-24T14:29:24.4328382Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4328465Z                 lines_df=lines_df,
2025-01-24T14:29:24.4328638Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4328810Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4328888Z                     mask
2025-01-24T14:29:24.4328963Z                 ],
2025-01-24T14:29:24.4329099Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4329225Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4329438Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4329550Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4329655Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4329751Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4329831Z                 simulation=sim,
2025-01-24T14:29:24.4329905Z             )
2025-01-24T14:29:24.4330242Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4330248Z 
2025-01-24T14:29:24.4330422Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4330698Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] _
2025-01-24T14:29:24.4330703Z 
2025-01-24T14:29:24.4330918Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4330923Z 
2025-01-24T14:29:24.4331020Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4331118Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4331205Z         """
2025-01-24T14:29:24.4331376Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4331452Z     
2025-01-24T14:29:24.4331529Z         Parameters:
2025-01-24T14:29:24.4331607Z         -----------
2025-01-24T14:29:24.4331721Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4331800Z     
2025-01-24T14:29:24.4331873Z         Returns:
2025-01-24T14:29:24.4331951Z         --------
2025-01-24T14:29:24.4332042Z         An LIVPlotter instance.
2025-01-24T14:29:24.4332112Z         """
2025-01-24T14:29:24.4332247Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4332252Z 
2025-01-24T14:29:24.4332387Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4332505Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4332663Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4332815Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4333036Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4333178Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4333286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4333417Z 
2025-01-24T14:29:24.4333635Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4333805Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4333887Z packets_mode = 'real'
2025-01-24T14:29:24.4333892Z 
2025-01-24T14:29:24.4333968Z     @classmethod
2025-01-24T14:29:24.4334077Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4334151Z         """
2025-01-24T14:29:24.4334341Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4334418Z     
2025-01-24T14:29:24.4334494Z         Parameters
2025-01-24T14:29:24.4334681Z         ----------
2025-01-24T14:29:24.4334781Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4334935Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4335027Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4335174Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4335249Z     
2025-01-24T14:29:24.4335320Z         Returns
2025-01-24T14:29:24.4335398Z         -------
2025-01-24T14:29:24.4335484Z         SimulationPacketData
2025-01-24T14:29:24.4335560Z         """
2025-01-24T14:29:24.4335666Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4335753Z             raise ValueError(
2025-01-24T14:29:24.4335871Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4335979Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4336051Z             )
2025-01-24T14:29:24.4336160Z         # Properties common among both packet modes
2025-01-24T14:29:24.4336324Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4336405Z             "line_id"
2025-01-24T14:29:24.4336477Z         )
2025-01-24T14:29:24.4336594Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4336721Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4336814Z         time_of_simulation = (
2025-01-24T14:29:24.4336975Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4337047Z         )
2025-01-24T14:29:24.4337122Z     
2025-01-24T14:29:24.4337200Z         spectrum = (
2025-01-24T14:29:24.4337319Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4337409Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4337532Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4337603Z         )
2025-01-24T14:29:24.4337679Z     
2025-01-24T14:29:24.4337768Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4337896Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4337972Z             return cls(
2025-01-24T14:29:24.4338132Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4338484Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4338678Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4338851Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4339003Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4339089Z                 lines_df=lines_df,
2025-01-24T14:29:24.4339216Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4339374Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4339502Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4339627Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4339813Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4339927Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4340156Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4340257Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4340341Z                 simulation=sim,
2025-01-24T14:29:24.4340413Z             )
2025-01-24T14:29:24.4340498Z         else: # real packets
2025-01-24T14:29:24.4340665Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4340750Z             # which got emitted
2025-01-24T14:29:24.4340859Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4340940Z >           return cls(
2025-01-24T14:29:24.4341114Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4341428Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4341503Z                     mask
2025-01-24T14:29:24.4341581Z                 ],
2025-01-24T14:29:24.4341777Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4341856Z                     mask
2025-01-24T14:29:24.4341931Z                 ],
2025-01-24T14:29:24.4342096Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4342173Z                     mask
2025-01-24T14:29:24.4342244Z                 ],
2025-01-24T14:29:24.4342414Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4342497Z                 lines_df=lines_df,
2025-01-24T14:29:24.4342660Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4342833Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4342917Z                     mask
2025-01-24T14:29:24.4342988Z                 ],
2025-01-24T14:29:24.4343119Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4343238Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4343429Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4343542Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4343640Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4343739Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4343821Z                 simulation=sim,
2025-01-24T14:29:24.4343896Z             )
2025-01-24T14:29:24.4344232Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4344238Z 
2025-01-24T14:29:24.4344416Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4344683Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] _
2025-01-24T14:29:24.4344689Z 
2025-01-24T14:29:24.4344906Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4344913Z 
2025-01-24T14:29:24.4345007Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4345099Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4345177Z         """
2025-01-24T14:29:24.4345327Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4345404Z     
2025-01-24T14:29:24.4345480Z         Parameters:
2025-01-24T14:29:24.4345560Z         -----------
2025-01-24T14:29:24.4345672Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4345747Z     
2025-01-24T14:29:24.4345819Z         Returns:
2025-01-24T14:29:24.4345902Z         --------
2025-01-24T14:29:24.4345991Z         An LIVPlotter instance.
2025-01-24T14:29:24.4346066Z         """
2025-01-24T14:29:24.4346195Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4346200Z 
2025-01-24T14:29:24.4346337Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4346542Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4346701Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4346851Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4347063Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4347205Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4347315Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4347319Z 
2025-01-24T14:29:24.4347538Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4347783Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4347871Z packets_mode = 'real'
2025-01-24T14:29:24.4347876Z 
2025-01-24T14:29:24.4347956Z     @classmethod
2025-01-24T14:29:24.4348065Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4348145Z         """
2025-01-24T14:29:24.4348454Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4348533Z     
2025-01-24T14:29:24.4348608Z         Parameters
2025-01-24T14:29:24.4348686Z         ----------
2025-01-24T14:29:24.4348786Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4348939Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4349031Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4349174Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4349245Z     
2025-01-24T14:29:24.4349321Z         Returns
2025-01-24T14:29:24.4349398Z         -------
2025-01-24T14:29:24.4349490Z         SimulationPacketData
2025-01-24T14:29:24.4349561Z         """
2025-01-24T14:29:24.4349671Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4349759Z             raise ValueError(
2025-01-24T14:29:24.4349876Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4349988Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4350060Z             )
2025-01-24T14:29:24.4350167Z         # Properties common among both packet modes
2025-01-24T14:29:24.4350324Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4350403Z             "line_id"
2025-01-24T14:29:24.4350472Z         )
2025-01-24T14:29:24.4350584Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4350708Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4350798Z         time_of_simulation = (
2025-01-24T14:29:24.4350952Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4351032Z         )
2025-01-24T14:29:24.4351102Z     
2025-01-24T14:29:24.4351184Z         spectrum = (
2025-01-24T14:29:24.4351301Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4351389Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4351514Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4351585Z         )
2025-01-24T14:29:24.4351659Z     
2025-01-24T14:29:24.4351748Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4351874Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4351950Z             return cls(
2025-01-24T14:29:24.4352108Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4352279Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4352458Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4352627Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4352782Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4352869Z                 lines_df=lines_df,
2025-01-24T14:29:24.4353120Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4353279Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4353408Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4353527Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4353712Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4353824Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4353924Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4354024Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4354208Z                 simulation=sim,
2025-01-24T14:29:24.4354283Z             )
2025-01-24T14:29:24.4354366Z         else: # real packets
2025-01-24T14:29:24.4354535Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4354629Z             # which got emitted
2025-01-24T14:29:24.4354735Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4354815Z >           return cls(
2025-01-24T14:29:24.4354989Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4355179Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4355254Z                     mask
2025-01-24T14:29:24.4355328Z                 ],
2025-01-24T14:29:24.4355516Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4355594Z                     mask
2025-01-24T14:29:24.4355670Z                 ],
2025-01-24T14:29:24.4355841Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4355914Z                     mask
2025-01-24T14:29:24.4355988Z                 ],
2025-01-24T14:29:24.4356158Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4356246Z                 lines_df=lines_df,
2025-01-24T14:29:24.4356414Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4356587Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4356667Z                     mask
2025-01-24T14:29:24.4356737Z                 ],
2025-01-24T14:29:24.4356867Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4356980Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4357175Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4357284Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4357385Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4357478Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4357563Z                 simulation=sim,
2025-01-24T14:29:24.4357640Z             )
2025-01-24T14:29:24.4357970Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4357976Z 
2025-01-24T14:29:24.4358153Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4358553Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] _
2025-01-24T14:29:24.4358560Z 
2025-01-24T14:29:24.4358777Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4358782Z 
2025-01-24T14:29:24.4358872Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4358971Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4359043Z         """
2025-01-24T14:29:24.4359198Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4359273Z     
2025-01-24T14:29:24.4359349Z         Parameters:
2025-01-24T14:29:24.4359427Z         -----------
2025-01-24T14:29:24.4359685Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4359760Z     
2025-01-24T14:29:24.4359833Z         Returns:
2025-01-24T14:29:24.4359912Z         --------
2025-01-24T14:29:24.4359996Z         An LIVPlotter instance.
2025-01-24T14:29:24.4360076Z         """
2025-01-24T14:29:24.4360208Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4360214Z 
2025-01-24T14:29:24.4360352Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4360464Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4360627Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4360884Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4361103Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4361242Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4361356Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4361361Z 
2025-01-24T14:29:24.4361578Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4361745Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4361832Z packets_mode = 'real'
2025-01-24T14:29:24.4361836Z 
2025-01-24T14:29:24.4361910Z     @classmethod
2025-01-24T14:29:24.4362024Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4362095Z         """
2025-01-24T14:29:24.4362292Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4362377Z     
2025-01-24T14:29:24.4362453Z         Parameters
2025-01-24T14:29:24.4362532Z         ----------
2025-01-24T14:29:24.4362631Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4362782Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4362877Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4363019Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4363089Z     
2025-01-24T14:29:24.4363165Z         Returns
2025-01-24T14:29:24.4363238Z         -------
2025-01-24T14:29:24.4363329Z         SimulationPacketData
2025-01-24T14:29:24.4363399Z         """
2025-01-24T14:29:24.4363508Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4363590Z             raise ValueError(
2025-01-24T14:29:24.4363711Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4363813Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4363893Z             )
2025-01-24T14:29:24.4364007Z         # Properties common among both packet modes
2025-01-24T14:29:24.4364166Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4364246Z             "line_id"
2025-01-24T14:29:24.4364316Z         )
2025-01-24T14:29:24.4364433Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4364557Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4364653Z         time_of_simulation = (
2025-01-24T14:29:24.4364807Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4364883Z         )
2025-01-24T14:29:24.4364952Z     
2025-01-24T14:29:24.4365033Z         spectrum = (
2025-01-24T14:29:24.4365148Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4365241Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4365358Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4365435Z         )
2025-01-24T14:29:24.4365509Z     
2025-01-24T14:29:24.4365603Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4365731Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4365808Z             return cls(
2025-01-24T14:29:24.4365969Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4366247Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4366428Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4366595Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4366750Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4366832Z                 lines_df=lines_df,
2025-01-24T14:29:24.4366963Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4367117Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4367329Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4367451Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4367637Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4367754Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4367855Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4367955Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4368037Z                 simulation=sim,
2025-01-24T14:29:24.4368112Z             )
2025-01-24T14:29:24.4368193Z         else: # real packets
2025-01-24T14:29:24.4368469Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4368549Z             # which got emitted
2025-01-24T14:29:24.4368660Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4368736Z >           return cls(
2025-01-24T14:29:24.4368918Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4369108Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4369184Z                     mask
2025-01-24T14:29:24.4369267Z                 ],
2025-01-24T14:29:24.4369456Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4369535Z                     mask
2025-01-24T14:29:24.4369605Z                 ],
2025-01-24T14:29:24.4369775Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4369848Z                     mask
2025-01-24T14:29:24.4369924Z                 ],
2025-01-24T14:29:24.4370092Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4370180Z                 lines_df=lines_df,
2025-01-24T14:29:24.4370341Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4370529Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4370607Z                     mask
2025-01-24T14:29:24.4370678Z                 ],
2025-01-24T14:29:24.4370810Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4370931Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4371122Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4371229Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4371332Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4371427Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4371514Z                 simulation=sim,
2025-01-24T14:29:24.4371586Z             )
2025-01-24T14:29:24.4371918Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4371928Z 
2025-01-24T14:29:24.4372102Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4372368Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] _
2025-01-24T14:29:24.4372517Z 
2025-01-24T14:29:24.4372734Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4372739Z 
2025-01-24T14:29:24.4372827Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4372920Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4372991Z         """
2025-01-24T14:29:24.4373147Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4373217Z     
2025-01-24T14:29:24.4373298Z         Parameters:
2025-01-24T14:29:24.4373371Z         -----------
2025-01-24T14:29:24.4373488Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4373558Z     
2025-01-24T14:29:24.4373636Z         Returns:
2025-01-24T14:29:24.4373829Z         --------
2025-01-24T14:29:24.4373912Z         An LIVPlotter instance.
2025-01-24T14:29:24.4373987Z         """
2025-01-24T14:29:24.4374118Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4374123Z 
2025-01-24T14:29:24.4374270Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4374383Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4374543Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4374688Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4374905Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4375037Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4375150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4375155Z 
2025-01-24T14:29:24.4375378Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4375545Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4375632Z packets_mode = 'real'
2025-01-24T14:29:24.4375637Z 
2025-01-24T14:29:24.4375712Z     @classmethod
2025-01-24T14:29:24.4375830Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4375901Z         """
2025-01-24T14:29:24.4376098Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4376170Z     
2025-01-24T14:29:24.4376248Z         Parameters
2025-01-24T14:29:24.4376321Z         ----------
2025-01-24T14:29:24.4376426Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4376571Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4376666Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4376808Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4376881Z     
2025-01-24T14:29:24.4376957Z         Returns
2025-01-24T14:29:24.4377031Z         -------
2025-01-24T14:29:24.4377121Z         SimulationPacketData
2025-01-24T14:29:24.4377191Z         """
2025-01-24T14:29:24.4377301Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4377388Z             raise ValueError(
2025-01-24T14:29:24.4377512Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4377614Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4377689Z             )
2025-01-24T14:29:24.4377794Z         # Properties common among both packet modes
2025-01-24T14:29:24.4377960Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4378034Z             "line_id"
2025-01-24T14:29:24.4378109Z         )
2025-01-24T14:29:24.4378216Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4378449Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4378545Z         time_of_simulation = (
2025-01-24T14:29:24.4378698Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4378775Z         )
2025-01-24T14:29:24.4378844Z     
2025-01-24T14:29:24.4378924Z         spectrum = (
2025-01-24T14:29:24.4379041Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4379258Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4379376Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4379453Z         )
2025-01-24T14:29:24.4379522Z     
2025-01-24T14:29:24.4379615Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4379736Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4379816Z             return cls(
2025-01-24T14:29:24.4379973Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4380147Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4380434Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4380603Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4380759Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4380847Z                 lines_df=lines_df,
2025-01-24T14:29:24.4380976Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4381129Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4381260Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4381374Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4381564Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4381672Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4381777Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4381882Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4381964Z                 simulation=sim,
2025-01-24T14:29:24.4382039Z             )
2025-01-24T14:29:24.4382119Z         else: # real packets
2025-01-24T14:29:24.4382291Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4382371Z             # which got emitted
2025-01-24T14:29:24.4382483Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4382557Z >           return cls(
2025-01-24T14:29:24.4382735Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4382917Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4382997Z                     mask
2025-01-24T14:29:24.4383068Z                 ],
2025-01-24T14:29:24.4383262Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4383344Z                     mask
2025-01-24T14:29:24.4383415Z                 ],
2025-01-24T14:29:24.4383587Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4383660Z                     mask
2025-01-24T14:29:24.4383740Z                 ],
2025-01-24T14:29:24.4383909Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4383999Z                 lines_df=lines_df,
2025-01-24T14:29:24.4384162Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4384341Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4384419Z                     mask
2025-01-24T14:29:24.4384496Z                 ],
2025-01-24T14:29:24.4384623Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4384746Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4384945Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4385055Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4385159Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4385256Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4385432Z                 simulation=sim,
2025-01-24T14:29:24.4385504Z             )
2025-01-24T14:29:24.4385844Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4385849Z 
2025-01-24T14:29:24.4386020Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4386283Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] _
2025-01-24T14:29:24.4386289Z 
2025-01-24T14:29:24.4386503Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4386591Z 
2025-01-24T14:29:24.4386682Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4386778Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4386850Z         """
2025-01-24T14:29:24.4387008Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4387080Z     
2025-01-24T14:29:24.4387166Z         Parameters:
2025-01-24T14:29:24.4387245Z         -----------
2025-01-24T14:29:24.4387363Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4387433Z     
2025-01-24T14:29:24.4387512Z         Returns:
2025-01-24T14:29:24.4387585Z         --------
2025-01-24T14:29:24.4387680Z         An LIVPlotter instance.
2025-01-24T14:29:24.4387750Z         """
2025-01-24T14:29:24.4387885Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4387890Z 
2025-01-24T14:29:24.4388031Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4388144Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4388414Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4388562Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4388776Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4388913Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4389025Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4389030Z 
2025-01-24T14:29:24.4389245Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4389420Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4389502Z packets_mode = 'real'
2025-01-24T14:29:24.4389512Z 
2025-01-24T14:29:24.4389586Z     @classmethod
2025-01-24T14:29:24.4389699Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4389770Z         """
2025-01-24T14:29:24.4389967Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4390043Z     
2025-01-24T14:29:24.4390123Z         Parameters
2025-01-24T14:29:24.4390198Z         ----------
2025-01-24T14:29:24.4390302Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4390453Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4390554Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4390692Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4390768Z     
2025-01-24T14:29:24.4390840Z         Returns
2025-01-24T14:29:24.4390919Z         -------
2025-01-24T14:29:24.4391004Z         SimulationPacketData
2025-01-24T14:29:24.4391078Z         """
2025-01-24T14:29:24.4391188Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4391271Z             raise ValueError(
2025-01-24T14:29:24.4391395Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4391498Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4391576Z             )
2025-01-24T14:29:24.4391682Z         # Properties common among both packet modes
2025-01-24T14:29:24.4391848Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4392066Z             "line_id"
2025-01-24T14:29:24.4392142Z         )
2025-01-24T14:29:24.4392252Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4392382Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4392464Z         time_of_simulation = (
2025-01-24T14:29:24.4392627Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4392700Z         )
2025-01-24T14:29:24.4392774Z     
2025-01-24T14:29:24.4392853Z         spectrum = (
2025-01-24T14:29:24.4392967Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4393062Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4393181Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4393364Z         )
2025-01-24T14:29:24.4393436Z     
2025-01-24T14:29:24.4393530Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4393654Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4393736Z             return cls(
2025-01-24T14:29:24.4393898Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4394073Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4394250Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4394419Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4394574Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4394663Z                 lines_df=lines_df,
2025-01-24T14:29:24.4394795Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4394952Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4395087Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4395201Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4395395Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4395504Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4395610Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4395708Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4395793Z                 simulation=sim,
2025-01-24T14:29:24.4395865Z             )
2025-01-24T14:29:24.4395951Z         else: # real packets
2025-01-24T14:29:24.4396120Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4396201Z             # which got emitted
2025-01-24T14:29:24.4396311Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4396390Z >           return cls(
2025-01-24T14:29:24.4396568Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4396752Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4396835Z                     mask
2025-01-24T14:29:24.4396906Z                 ],
2025-01-24T14:29:24.4397100Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4397174Z                     mask
2025-01-24T14:29:24.4397254Z                 ],
2025-01-24T14:29:24.4397419Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4397497Z                     mask
2025-01-24T14:29:24.4397568Z                 ],
2025-01-24T14:29:24.4397737Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4397825Z                 lines_df=lines_df,
2025-01-24T14:29:24.4397991Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4398169Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4398347Z                     mask
2025-01-24T14:29:24.4398549Z                 ],
2025-01-24T14:29:24.4398680Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4398799Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4398985Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4399099Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4399198Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4399298Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4399382Z                 simulation=sim,
2025-01-24T14:29:24.4399453Z             )
2025-01-24T14:29:24.4399901Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4399907Z 
2025-01-24T14:29:24.4400077Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4400345Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-24T14:29:24.4400355Z 
2025-01-24T14:29:24.4400569Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4400574Z 
2025-01-24T14:29:24.4400667Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4400757Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4400833Z         """
2025-01-24T14:29:24.4400990Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4401060Z     
2025-01-24T14:29:24.4401141Z         Parameters:
2025-01-24T14:29:24.4401216Z         -----------
2025-01-24T14:29:24.4401333Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4401408Z     
2025-01-24T14:29:24.4401485Z         Returns:
2025-01-24T14:29:24.4401558Z         --------
2025-01-24T14:29:24.4401647Z         An LIVPlotter instance.
2025-01-24T14:29:24.4401720Z         """
2025-01-24T14:29:24.4401854Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4401863Z 
2025-01-24T14:29:24.4401995Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4402111Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4402268Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4402417Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4402633Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4402763Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4402874Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4402882Z 
2025-01-24T14:29:24.4403097Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4403264Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4403344Z packets_mode = 'real'
2025-01-24T14:29:24.4403353Z 
2025-01-24T14:29:24.4403429Z     @classmethod
2025-01-24T14:29:24.4403539Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4403614Z         """
2025-01-24T14:29:24.4403805Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4403878Z     
2025-01-24T14:29:24.4403958Z         Parameters
2025-01-24T14:29:24.4404030Z         ----------
2025-01-24T14:29:24.4404131Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4404277Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4404377Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4404518Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4404596Z     
2025-01-24T14:29:24.4404668Z         Returns
2025-01-24T14:29:24.4404747Z         -------
2025-01-24T14:29:24.4404833Z         SimulationPacketData
2025-01-24T14:29:24.4404910Z         """
2025-01-24T14:29:24.4405106Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4405190Z             raise ValueError(
2025-01-24T14:29:24.4405309Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4405415Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4405488Z             )
2025-01-24T14:29:24.4405593Z         # Properties common among both packet modes
2025-01-24T14:29:24.4405760Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4405836Z             "line_id"
2025-01-24T14:29:24.4405911Z         )
2025-01-24T14:29:24.4406020Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4406227Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4406311Z         time_of_simulation = (
2025-01-24T14:29:24.4406469Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4406540Z         )
2025-01-24T14:29:24.4406613Z     
2025-01-24T14:29:24.4406695Z         spectrum = (
2025-01-24T14:29:24.4406815Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4406903Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4407025Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4407096Z         )
2025-01-24T14:29:24.4407169Z     
2025-01-24T14:29:24.4407266Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4407388Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4407470Z             return cls(
2025-01-24T14:29:24.4407624Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4407801Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4407980Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4408151Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4408405Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4408494Z                 lines_df=lines_df,
2025-01-24T14:29:24.4408623Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4408780Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4408915Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4409030Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4409221Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4409328Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4409440Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4409534Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4409622Z                 simulation=sim,
2025-01-24T14:29:24.4409691Z             )
2025-01-24T14:29:24.4409781Z         else: # real packets
2025-01-24T14:29:24.4409945Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4410031Z             # which got emitted
2025-01-24T14:29:24.4410136Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4410218Z >           return cls(
2025-01-24T14:29:24.4410394Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4410581Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4410661Z                     mask
2025-01-24T14:29:24.4410734Z                 ],
2025-01-24T14:29:24.4410927Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4411007Z                     mask
2025-01-24T14:29:24.4411083Z                 ],
2025-01-24T14:29:24.4411248Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4411458Z                     mask
2025-01-24T14:29:24.4411528Z                 ],
2025-01-24T14:29:24.4411698Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4411781Z                 lines_df=lines_df,
2025-01-24T14:29:24.4411946Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4412121Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4412199Z                     mask
2025-01-24T14:29:24.4412275Z                 ],
2025-01-24T14:29:24.4412405Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4412647Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4412833Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4412945Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4413044Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4413151Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4413232Z                 simulation=sim,
2025-01-24T14:29:24.4413309Z             )
2025-01-24T14:29:24.4413641Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4413651Z 
2025-01-24T14:29:24.4413820Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4414089Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] _
2025-01-24T14:29:24.4414095Z 
2025-01-24T14:29:24.4414306Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4414315Z 
2025-01-24T14:29:24.4414410Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4414502Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4414581Z         """
2025-01-24T14:29:24.4414729Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4414810Z     
2025-01-24T14:29:24.4414887Z         Parameters:
2025-01-24T14:29:24.4414966Z         -----------
2025-01-24T14:29:24.4415080Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4415156Z     
2025-01-24T14:29:24.4415236Z         Returns:
2025-01-24T14:29:24.4415310Z         --------
2025-01-24T14:29:24.4415399Z         An LIVPlotter instance.
2025-01-24T14:29:24.4415472Z         """
2025-01-24T14:29:24.4415608Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4415613Z 
2025-01-24T14:29:24.4415746Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4415868Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4416027Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4416181Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4416396Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4416532Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4416644Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4416653Z 
2025-01-24T14:29:24.4416869Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4417043Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4417125Z packets_mode = 'real'
2025-01-24T14:29:24.4417129Z 
2025-01-24T14:29:24.4417206Z     @classmethod
2025-01-24T14:29:24.4417316Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4417392Z         """
2025-01-24T14:29:24.4417582Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4417658Z     
2025-01-24T14:29:24.4417732Z         Parameters
2025-01-24T14:29:24.4417812Z         ----------
2025-01-24T14:29:24.4417999Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4418151Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4418352Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4418493Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4418567Z     
2025-01-24T14:29:24.4418638Z         Returns
2025-01-24T14:29:24.4418712Z         -------
2025-01-24T14:29:24.4418798Z         SimulationPacketData
2025-01-24T14:29:24.4418873Z         """
2025-01-24T14:29:24.4418978Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4419065Z             raise ValueError(
2025-01-24T14:29:24.4419183Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4419426Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4419497Z             )
2025-01-24T14:29:24.4419607Z         # Properties common among both packet modes
2025-01-24T14:29:24.4419765Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4419850Z             "line_id"
2025-01-24T14:29:24.4419922Z         )
2025-01-24T14:29:24.4420036Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4420163Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4420246Z         time_of_simulation = (
2025-01-24T14:29:24.4420405Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4420475Z         )
2025-01-24T14:29:24.4420549Z     
2025-01-24T14:29:24.4420626Z         spectrum = (
2025-01-24T14:29:24.4420745Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4420833Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4420958Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4421029Z         )
2025-01-24T14:29:24.4421103Z     
2025-01-24T14:29:24.4421191Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4421318Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4421398Z             return cls(
2025-01-24T14:29:24.4421557Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4421731Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4421905Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4422076Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4422226Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4422314Z                 lines_df=lines_df,
2025-01-24T14:29:24.4422447Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4422605Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4422733Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4422855Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4423043Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4423155Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4423263Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4423357Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4423441Z                 simulation=sim,
2025-01-24T14:29:24.4423512Z             )
2025-01-24T14:29:24.4423601Z         else: # real packets
2025-01-24T14:29:24.4423767Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4423856Z             # which got emitted
2025-01-24T14:29:24.4423961Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4424038Z >           return cls(
2025-01-24T14:29:24.4424211Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4424519Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4424594Z                     mask
2025-01-24T14:29:24.4424679Z                 ],
2025-01-24T14:29:24.4424864Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4424947Z                     mask
2025-01-24T14:29:24.4425026Z                 ],
2025-01-24T14:29:24.4425191Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4425270Z                     mask
2025-01-24T14:29:24.4425340Z                 ],
2025-01-24T14:29:24.4425512Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4425675Z                 lines_df=lines_df,
2025-01-24T14:29:24.4425841Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4426014Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4426096Z                     mask
2025-01-24T14:29:24.4426167Z                 ],
2025-01-24T14:29:24.4426297Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4426410Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4426601Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4426712Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4426811Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4426910Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4426989Z                 simulation=sim,
2025-01-24T14:29:24.4427075Z             )
2025-01-24T14:29:24.4427407Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4427413Z 
2025-01-24T14:29:24.4427590Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4427852Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] _
2025-01-24T14:29:24.4427864Z 
2025-01-24T14:29:24.4428075Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4428079Z 
2025-01-24T14:29:24.4428174Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4428370Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4428449Z         """
2025-01-24T14:29:24.4428599Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4428676Z     
2025-01-24T14:29:24.4428754Z         Parameters:
2025-01-24T14:29:24.4428833Z         -----------
2025-01-24T14:29:24.4428950Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4429026Z     
2025-01-24T14:29:24.4429098Z         Returns:
2025-01-24T14:29:24.4429177Z         --------
2025-01-24T14:29:24.4429261Z         An LIVPlotter instance.
2025-01-24T14:29:24.4429365Z         """
2025-01-24T14:29:24.4429496Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4429507Z 
2025-01-24T14:29:24.4429642Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4429759Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4429917Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4430073Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4430282Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4430419Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4430533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4430537Z 
2025-01-24T14:29:24.4430763Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4430930Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4431140Z packets_mode = 'real'
2025-01-24T14:29:24.4431144Z 
2025-01-24T14:29:24.4431225Z     @classmethod
2025-01-24T14:29:24.4431339Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4431414Z         """
2025-01-24T14:29:24.4431606Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4431682Z     
2025-01-24T14:29:24.4431758Z         Parameters
2025-01-24T14:29:24.4431836Z         ----------
2025-01-24T14:29:24.4431935Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4432089Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4432292Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4432514Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4432643Z     
2025-01-24T14:29:24.4432782Z         Returns
2025-01-24T14:29:24.4433067Z         -------
2025-01-24T14:29:24.4433244Z         SimulationPacketData
2025-01-24T14:29:24.4433346Z         """
2025-01-24T14:29:24.4433537Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4433652Z             raise ValueError(
2025-01-24T14:29:24.4433880Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4434034Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4434174Z             )
2025-01-24T14:29:24.4434327Z         # Properties common among both packet modes
2025-01-24T14:29:24.4434562Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4434738Z             "line_id"
2025-01-24T14:29:24.4434855Z         )
2025-01-24T14:29:24.4435050Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4435204Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4435354Z         time_of_simulation = (
2025-01-24T14:29:24.4435526Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4435725Z         )
2025-01-24T14:29:24.4435827Z     
2025-01-24T14:29:24.4435986Z         spectrum = (
2025-01-24T14:29:24.4436130Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4436272Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4445278Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4445395Z         )
2025-01-24T14:29:24.4445475Z     
2025-01-24T14:29:24.4445584Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4445740Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4445820Z             return cls(
2025-01-24T14:29:24.4445995Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4446192Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4446369Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4446541Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4446699Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4446789Z                 lines_df=lines_df,
2025-01-24T14:29:24.4446923Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4447087Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4447221Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4447347Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4447538Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4447661Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4447775Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4447876Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4448134Z                 simulation=sim,
2025-01-24T14:29:24.4448207Z             )
2025-01-24T14:29:24.4448437Z         else: # real packets
2025-01-24T14:29:24.4448618Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4448705Z             # which got emitted
2025-01-24T14:29:24.4448816Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4448898Z >           return cls(
2025-01-24T14:29:24.4449081Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4449274Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4449350Z                     mask
2025-01-24T14:29:24.4449548Z                 ],
2025-01-24T14:29:24.4449750Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4449824Z                     mask
2025-01-24T14:29:24.4449901Z                 ],
2025-01-24T14:29:24.4450074Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4450152Z                     mask
2025-01-24T14:29:24.4450225Z                 ],
2025-01-24T14:29:24.4450397Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4450480Z                 lines_df=lines_df,
2025-01-24T14:29:24.4450654Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4450836Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4450915Z                     mask
2025-01-24T14:29:24.4450987Z                 ],
2025-01-24T14:29:24.4451125Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4451256Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4451449Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4451568Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4451677Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4451781Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4451863Z                 simulation=sim,
2025-01-24T14:29:24.4451941Z             )
2025-01-24T14:29:24.4452285Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4452292Z 
2025-01-24T14:29:24.4452476Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4452745Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] _
2025-01-24T14:29:24.4452759Z 
2025-01-24T14:29:24.4452977Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4452983Z 
2025-01-24T14:29:24.4453079Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4453172Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4453253Z         """
2025-01-24T14:29:24.4453407Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4453484Z     
2025-01-24T14:29:24.4453562Z         Parameters:
2025-01-24T14:29:24.4453646Z         -----------
2025-01-24T14:29:24.4453768Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4453844Z     
2025-01-24T14:29:24.4453917Z         Returns:
2025-01-24T14:29:24.4453998Z         --------
2025-01-24T14:29:24.4454084Z         An LIVPlotter instance.
2025-01-24T14:29:24.4454161Z         """
2025-01-24T14:29:24.4454303Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4454308Z 
2025-01-24T14:29:24.4454454Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4454576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4454742Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4454897Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4455264Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4455409Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4455523Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4455527Z 
2025-01-24T14:29:24.4455752Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4455929Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4456013Z packets_mode = 'real'
2025-01-24T14:29:24.4456018Z 
2025-01-24T14:29:24.4456098Z     @classmethod
2025-01-24T14:29:24.4456288Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4456366Z         """
2025-01-24T14:29:24.4456570Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4456646Z     
2025-01-24T14:29:24.4456723Z         Parameters
2025-01-24T14:29:24.4456809Z         ----------
2025-01-24T14:29:24.4456912Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4457069Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4457167Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4457306Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4457381Z     
2025-01-24T14:29:24.4457453Z         Returns
2025-01-24T14:29:24.4457531Z         -------
2025-01-24T14:29:24.4457620Z         SimulationPacketData
2025-01-24T14:29:24.4457697Z         """
2025-01-24T14:29:24.4457804Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4457897Z             raise ValueError(
2025-01-24T14:29:24.4458024Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4458131Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4458205Z             )
2025-01-24T14:29:24.4458424Z         # Properties common among both packet modes
2025-01-24T14:29:24.4458600Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4458676Z             "line_id"
2025-01-24T14:29:24.4458751Z         )
2025-01-24T14:29:24.4458861Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4458992Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4459076Z         time_of_simulation = (
2025-01-24T14:29:24.4459238Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4459311Z         )
2025-01-24T14:29:24.4459386Z     
2025-01-24T14:29:24.4459464Z         spectrum = (
2025-01-24T14:29:24.4459585Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4459686Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4459803Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4459878Z         )
2025-01-24T14:29:24.4459948Z     
2025-01-24T14:29:24.4460046Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4460172Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4460252Z             return cls(
2025-01-24T14:29:24.4460412Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4460592Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4460770Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4460943Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4461093Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4461186Z                 lines_df=lines_df,
2025-01-24T14:29:24.4461322Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4461479Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4461740Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4461857Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4462051Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4462160Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4462267Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4462364Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4462453Z                 simulation=sim,
2025-01-24T14:29:24.4462525Z             )
2025-01-24T14:29:24.4462612Z         else: # real packets
2025-01-24T14:29:24.4462887Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4462974Z             # which got emitted
2025-01-24T14:29:24.4463092Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4463168Z >           return cls(
2025-01-24T14:29:24.4463356Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4463540Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4463624Z                     mask
2025-01-24T14:29:24.4463696Z                 ],
2025-01-24T14:29:24.4463887Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4463961Z                     mask
2025-01-24T14:29:24.4464038Z                 ],
2025-01-24T14:29:24.4464205Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4464285Z                     mask
2025-01-24T14:29:24.4464359Z                 ],
2025-01-24T14:29:24.4464530Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4464619Z                 lines_df=lines_df,
2025-01-24T14:29:24.4464782Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4464967Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4465040Z                     mask
2025-01-24T14:29:24.4465115Z                 ],
2025-01-24T14:29:24.4465245Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4465365Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4465552Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4465668Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4465769Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4465869Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4465955Z                 simulation=sim,
2025-01-24T14:29:24.4466030Z             )
2025-01-24T14:29:24.4466375Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4466385Z 
2025-01-24T14:29:24.4466558Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4466831Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] _
2025-01-24T14:29:24.4466836Z 
2025-01-24T14:29:24.4467051Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4467056Z 
2025-01-24T14:29:24.4467150Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4467241Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4467318Z         """
2025-01-24T14:29:24.4467471Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4467555Z     
2025-01-24T14:29:24.4467637Z         Parameters:
2025-01-24T14:29:24.4467711Z         -----------
2025-01-24T14:29:24.4467832Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4467902Z     
2025-01-24T14:29:24.4467980Z         Returns:
2025-01-24T14:29:24.4468052Z         --------
2025-01-24T14:29:24.4468338Z         An LIVPlotter instance.
2025-01-24T14:29:24.4468412Z         """
2025-01-24T14:29:24.4468555Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4468560Z 
2025-01-24T14:29:24.4468694Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4468811Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4468972Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4469124Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4469345Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4469601Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4469716Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4469720Z 
2025-01-24T14:29:24.4469939Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4470118Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4470199Z packets_mode = 'real'
2025-01-24T14:29:24.4470203Z 
2025-01-24T14:29:24.4470280Z     @classmethod
2025-01-24T14:29:24.4470391Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4470465Z         """
2025-01-24T14:29:24.4470660Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4470736Z     
2025-01-24T14:29:24.4470816Z         Parameters
2025-01-24T14:29:24.4470890Z         ----------
2025-01-24T14:29:24.4470995Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4471144Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4471247Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4471386Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4471461Z     
2025-01-24T14:29:24.4471537Z         Returns
2025-01-24T14:29:24.4471616Z         -------
2025-01-24T14:29:24.4471705Z         SimulationPacketData
2025-01-24T14:29:24.4471781Z         """
2025-01-24T14:29:24.4471887Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4471975Z             raise ValueError(
2025-01-24T14:29:24.4472094Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4472205Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4472277Z             )
2025-01-24T14:29:24.4472387Z         # Properties common among both packet modes
2025-01-24T14:29:24.4472555Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4472634Z             "line_id"
2025-01-24T14:29:24.4472710Z         )
2025-01-24T14:29:24.4472820Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4472948Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4473031Z         time_of_simulation = (
2025-01-24T14:29:24.4473195Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4473266Z         )
2025-01-24T14:29:24.4473339Z     
2025-01-24T14:29:24.4473414Z         spectrum = (
2025-01-24T14:29:24.4473532Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4473621Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4473743Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4473814Z         )
2025-01-24T14:29:24.4473887Z     
2025-01-24T14:29:24.4473976Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4474107Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4474188Z             return cls(
2025-01-24T14:29:24.4474352Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4474527Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4474702Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4475004Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4475155Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4475247Z                 lines_df=lines_df,
2025-01-24T14:29:24.4475375Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4475535Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4475663Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4475783Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4476072Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4476179Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4476285Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4476385Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4476471Z                 simulation=sim,
2025-01-24T14:29:24.4476542Z             )
2025-01-24T14:29:24.4476629Z         else: # real packets
2025-01-24T14:29:24.4476796Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4476880Z             # which got emitted
2025-01-24T14:29:24.4476986Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4477065Z >           return cls(
2025-01-24T14:29:24.4477239Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4477427Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4477512Z                     mask
2025-01-24T14:29:24.4477583Z                 ],
2025-01-24T14:29:24.4477778Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4477852Z                     mask
2025-01-24T14:29:24.4477933Z                 ],
2025-01-24T14:29:24.4478102Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4478181Z                     mask
2025-01-24T14:29:24.4478380Z                 ],
2025-01-24T14:29:24.4478556Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4478639Z                 lines_df=lines_df,
2025-01-24T14:29:24.4478803Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4478976Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4479054Z                     mask
2025-01-24T14:29:24.4479133Z                 ],
2025-01-24T14:29:24.4479267Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4479388Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4479576Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4479688Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4479789Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4479884Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4479967Z                 simulation=sim,
2025-01-24T14:29:24.4480036Z             )
2025-01-24T14:29:24.4480379Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4480385Z 
2025-01-24T14:29:24.4480557Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4480822Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] _
2025-01-24T14:29:24.4480832Z 
2025-01-24T14:29:24.4481050Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4481055Z 
2025-01-24T14:29:24.4481145Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4481363Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4481434Z         """
2025-01-24T14:29:24.4481624Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4481694Z     
2025-01-24T14:29:24.4481773Z         Parameters:
2025-01-24T14:29:24.4481847Z         -----------
2025-01-24T14:29:24.4481968Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4482037Z     
2025-01-24T14:29:24.4482112Z         Returns:
2025-01-24T14:29:24.4482186Z         --------
2025-01-24T14:29:24.4482273Z         An LIVPlotter instance.
2025-01-24T14:29:24.4482342Z         """
2025-01-24T14:29:24.4482478Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4482588Z 
2025-01-24T14:29:24.4482730Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4482843Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4483008Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4483162Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4483380Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4483515Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4483627Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4483632Z 
2025-01-24T14:29:24.4483847Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4484019Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4484105Z packets_mode = 'real'
2025-01-24T14:29:24.4484114Z 
2025-01-24T14:29:24.4484187Z     @classmethod
2025-01-24T14:29:24.4484302Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4484372Z         """
2025-01-24T14:29:24.4484573Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4484647Z     
2025-01-24T14:29:24.4484724Z         Parameters
2025-01-24T14:29:24.4484798Z         ----------
2025-01-24T14:29:24.4484901Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4485048Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4485144Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4485280Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4485358Z     
2025-01-24T14:29:24.4485431Z         Returns
2025-01-24T14:29:24.4485509Z         -------
2025-01-24T14:29:24.4485595Z         SimulationPacketData
2025-01-24T14:29:24.4485669Z         """
2025-01-24T14:29:24.4485783Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4485867Z             raise ValueError(
2025-01-24T14:29:24.4485986Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4486090Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4486168Z             )
2025-01-24T14:29:24.4486275Z         # Properties common among both packet modes
2025-01-24T14:29:24.4486439Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4486512Z             "line_id"
2025-01-24T14:29:24.4486585Z         )
2025-01-24T14:29:24.4486692Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4486819Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4486901Z         time_of_simulation = (
2025-01-24T14:29:24.4487059Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4487131Z         )
2025-01-24T14:29:24.4487203Z     
2025-01-24T14:29:24.4487287Z         spectrum = (
2025-01-24T14:29:24.4487401Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4487493Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4487609Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4487774Z         )
2025-01-24T14:29:24.4487843Z     
2025-01-24T14:29:24.4487935Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4488056Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4488135Z             return cls(
2025-01-24T14:29:24.4488431Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4488608Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4488783Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4488954Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4489225Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4489308Z                 lines_df=lines_df,
2025-01-24T14:29:24.4489438Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4489591Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4489725Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4489837Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4490028Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4490133Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4490237Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4490332Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4490417Z                 simulation=sim,
2025-01-24T14:29:24.4490488Z             )
2025-01-24T14:29:24.4490578Z         else: # real packets
2025-01-24T14:29:24.4490748Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4490828Z             # which got emitted
2025-01-24T14:29:24.4490938Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4491018Z >           return cls(
2025-01-24T14:29:24.4491196Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4491380Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4491459Z                     mask
2025-01-24T14:29:24.4491530Z                 ],
2025-01-24T14:29:24.4491726Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4491800Z                     mask
2025-01-24T14:29:24.4491875Z                 ],
2025-01-24T14:29:24.4492039Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4492122Z                     mask
2025-01-24T14:29:24.4492196Z                 ],
2025-01-24T14:29:24.4492359Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4492448Z                 lines_df=lines_df,
2025-01-24T14:29:24.4492614Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4492791Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4492865Z                     mask
2025-01-24T14:29:24.4492940Z                 ],
2025-01-24T14:29:24.4493068Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4493189Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4493375Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4493488Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4493587Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4493692Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4493776Z                 simulation=sim,
2025-01-24T14:29:24.4493844Z             )
2025-01-24T14:29:24.4494183Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4494309Z 
2025-01-24T14:29:24.4494484Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4494762Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-24T14:29:24.4494772Z 
2025-01-24T14:29:24.4494982Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4494987Z 
2025-01-24T14:29:24.4495080Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4495172Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4495245Z         """
2025-01-24T14:29:24.4495398Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4495566Z     
2025-01-24T14:29:24.4495645Z         Parameters:
2025-01-24T14:29:24.4495719Z         -----------
2025-01-24T14:29:24.4495834Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4495902Z     
2025-01-24T14:29:24.4495981Z         Returns:
2025-01-24T14:29:24.4496054Z         --------
2025-01-24T14:29:24.4496140Z         An LIVPlotter instance.
2025-01-24T14:29:24.4496210Z         """
2025-01-24T14:29:24.4496349Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4496353Z 
2025-01-24T14:29:24.4496485Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4496597Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4496753Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4496905Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4497123Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4497256Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4497368Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4497376Z 
2025-01-24T14:29:24.4497593Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4497767Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4497851Z packets_mode = 'real'
2025-01-24T14:29:24.4497855Z 
2025-01-24T14:29:24.4497932Z     @classmethod
2025-01-24T14:29:24.4498041Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4498112Z         """
2025-01-24T14:29:24.4498414Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4498489Z     
2025-01-24T14:29:24.4498567Z         Parameters
2025-01-24T14:29:24.4498640Z         ----------
2025-01-24T14:29:24.4498748Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4498894Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4498988Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4499125Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4499203Z     
2025-01-24T14:29:24.4499274Z         Returns
2025-01-24T14:29:24.4499350Z         -------
2025-01-24T14:29:24.4499436Z         SimulationPacketData
2025-01-24T14:29:24.4499510Z         """
2025-01-24T14:29:24.4499613Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4499700Z             raise ValueError(
2025-01-24T14:29:24.4499817Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4499923Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4499997Z             )
2025-01-24T14:29:24.4500102Z         # Properties common among both packet modes
2025-01-24T14:29:24.4500266Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4500345Z             "line_id"
2025-01-24T14:29:24.4500418Z         )
2025-01-24T14:29:24.4500525Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4500652Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4500863Z         time_of_simulation = (
2025-01-24T14:29:24.4501022Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4501093Z         )
2025-01-24T14:29:24.4501167Z     
2025-01-24T14:29:24.4501243Z         spectrum = (
2025-01-24T14:29:24.4501361Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4501449Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4501571Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4501644Z         )
2025-01-24T14:29:24.4501713Z     
2025-01-24T14:29:24.4501803Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4501925Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4502130Z             return cls(
2025-01-24T14:29:24.4502285Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4502457Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4502638Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4502807Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4502956Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4503043Z                 lines_df=lines_df,
2025-01-24T14:29:24.4503169Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4503326Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4503460Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4503578Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4503769Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4503876Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4503985Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4504082Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4504167Z                 simulation=sim,
2025-01-24T14:29:24.4504240Z             )
2025-01-24T14:29:24.4504323Z         else: # real packets
2025-01-24T14:29:24.4504486Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4504569Z             # which got emitted
2025-01-24T14:29:24.4504674Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4504753Z >           return cls(
2025-01-24T14:29:24.4504928Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4505114Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4505195Z                     mask
2025-01-24T14:29:24.4505267Z                 ],
2025-01-24T14:29:24.4505459Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4505537Z                     mask
2025-01-24T14:29:24.4505610Z                 ],
2025-01-24T14:29:24.4505776Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4505853Z                     mask
2025-01-24T14:29:24.4505921Z                 ],
2025-01-24T14:29:24.4506089Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4506169Z                 lines_df=lines_df,
2025-01-24T14:29:24.4506332Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4506510Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4506588Z                     mask
2025-01-24T14:29:24.4506662Z                 ],
2025-01-24T14:29:24.4506788Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4506904Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4507178Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4507287Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4507384Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4507482Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4507561Z                 simulation=sim,
2025-01-24T14:29:24.4507632Z             )
2025-01-24T14:29:24.4507966Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4507975Z 
2025-01-24T14:29:24.4508144Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4508595Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] _
2025-01-24T14:29:24.4508600Z 
2025-01-24T14:29:24.4508812Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4508821Z 
2025-01-24T14:29:24.4508912Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4509001Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4509074Z         """
2025-01-24T14:29:24.4509220Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4509292Z     
2025-01-24T14:29:24.4509367Z         Parameters:
2025-01-24T14:29:24.4509443Z         -----------
2025-01-24T14:29:24.4509556Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4509627Z     
2025-01-24T14:29:24.4509700Z         Returns:
2025-01-24T14:29:24.4509771Z         --------
2025-01-24T14:29:24.4509856Z         An LIVPlotter instance.
2025-01-24T14:29:24.4509929Z         """
2025-01-24T14:29:24.4510066Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4510070Z 
2025-01-24T14:29:24.4510202Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4510314Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4510474Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4510624Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4510835Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4510971Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4511076Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4511086Z 
2025-01-24T14:29:24.4511299Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4511472Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4511556Z packets_mode = 'real'
2025-01-24T14:29:24.4511560Z 
2025-01-24T14:29:24.4511638Z     @classmethod
2025-01-24T14:29:24.4511745Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4511822Z         """
2025-01-24T14:29:24.4512017Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4512092Z     
2025-01-24T14:29:24.4512167Z         Parameters
2025-01-24T14:29:24.4512245Z         ----------
2025-01-24T14:29:24.4512344Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4512494Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4512593Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4512730Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4512805Z     
2025-01-24T14:29:24.4512878Z         Returns
2025-01-24T14:29:24.4512954Z         -------
2025-01-24T14:29:24.4513044Z         SimulationPacketData
2025-01-24T14:29:24.4513118Z         """
2025-01-24T14:29:24.4513223Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4513308Z             raise ValueError(
2025-01-24T14:29:24.4513424Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4513650Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4513719Z             )
2025-01-24T14:29:24.4513830Z         # Properties common among both packet modes
2025-01-24T14:29:24.4513988Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4514068Z             "line_id"
2025-01-24T14:29:24.4514137Z         )
2025-01-24T14:29:24.4514247Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4514377Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4514460Z         time_of_simulation = (
2025-01-24T14:29:24.4514616Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4514795Z         )
2025-01-24T14:29:24.4514868Z     
2025-01-24T14:29:24.4514944Z         spectrum = (
2025-01-24T14:29:24.4515062Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4515150Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4515274Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4515343Z         )
2025-01-24T14:29:24.4515412Z     
2025-01-24T14:29:24.4515500Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4515622Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4515697Z             return cls(
2025-01-24T14:29:24.4515853Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4516027Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4516201Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4516371Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4516518Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4516602Z                 lines_df=lines_df,
2025-01-24T14:29:24.4516726Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4516885Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4517010Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4517128Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4517313Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4517423Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4517527Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4517621Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4517707Z                 simulation=sim,
2025-01-24T14:29:24.4517778Z             )
2025-01-24T14:29:24.4517861Z         else: # real packets
2025-01-24T14:29:24.4518025Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4518109Z             # which got emitted
2025-01-24T14:29:24.4518217Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4518397Z >           return cls(
2025-01-24T14:29:24.4518567Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4518753Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4518827Z                     mask
2025-01-24T14:29:24.4518902Z                 ],
2025-01-24T14:29:24.4519092Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4519164Z                     mask
2025-01-24T14:29:24.4519237Z                 ],
2025-01-24T14:29:24.4519405Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4519486Z                     mask
2025-01-24T14:29:24.4519557Z                 ],
2025-01-24T14:29:24.4519725Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4519923Z                 lines_df=lines_df,
2025-01-24T14:29:24.4520086Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4520258Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4520335Z                     mask
2025-01-24T14:29:24.4520406Z                 ],
2025-01-24T14:29:24.4520537Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4520656Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4520839Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4520951Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4521156Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4521255Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4521334Z                 simulation=sim,
2025-01-24T14:29:24.4521413Z             )
2025-01-24T14:29:24.4521742Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4521747Z 
2025-01-24T14:29:24.4521923Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4522147Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _
2025-01-24T14:29:24.4522157Z 
2025-01-24T14:29:24.4522366Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4522372Z 
2025-01-24T14:29:24.4522464Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4522554Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4522632Z         """
2025-01-24T14:29:24.4522782Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4522857Z     
2025-01-24T14:29:24.4522935Z         Parameters:
2025-01-24T14:29:24.4523012Z         -----------
2025-01-24T14:29:24.4523124Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4523202Z     
2025-01-24T14:29:24.4523274Z         Returns:
2025-01-24T14:29:24.4523353Z         --------
2025-01-24T14:29:24.4523437Z         An LIVPlotter instance.
2025-01-24T14:29:24.4523511Z         """
2025-01-24T14:29:24.4523641Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4523651Z 
2025-01-24T14:29:24.4523785Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4523899Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4524053Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4524201Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4524414Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4524549Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4524659Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4524666Z 
2025-01-24T14:29:24.4524885Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4525053Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4525139Z packets_mode = 'real'
2025-01-24T14:29:24.4525143Z 
2025-01-24T14:29:24.4525222Z     @classmethod
2025-01-24T14:29:24.4525332Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4525407Z         """
2025-01-24T14:29:24.4525598Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4525673Z     
2025-01-24T14:29:24.4525749Z         Parameters
2025-01-24T14:29:24.4525832Z         ----------
2025-01-24T14:29:24.4525931Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4526080Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4526175Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4526420Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4526491Z     
2025-01-24T14:29:24.4526569Z         Returns
2025-01-24T14:29:24.4526642Z         -------
2025-01-24T14:29:24.4526734Z         SimulationPacketData
2025-01-24T14:29:24.4526808Z         """
2025-01-24T14:29:24.4526914Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4527001Z             raise ValueError(
2025-01-24T14:29:24.4527116Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4527227Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4527302Z             )
2025-01-24T14:29:24.4527417Z         # Properties common among both packet modes
2025-01-24T14:29:24.4527658Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4527737Z             "line_id"
2025-01-24T14:29:24.4527808Z         )
2025-01-24T14:29:24.4527922Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4528052Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4528140Z         time_of_simulation = (
2025-01-24T14:29:24.4528401Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4528478Z         )
2025-01-24T14:29:24.4528552Z     
2025-01-24T14:29:24.4528632Z         spectrum = (
2025-01-24T14:29:24.4528753Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4528844Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4528966Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4529036Z         )
2025-01-24T14:29:24.4529108Z     
2025-01-24T14:29:24.4529198Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4529354Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4529433Z             return cls(
2025-01-24T14:29:24.4529596Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4529770Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4529951Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4530119Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4530275Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4530362Z                 lines_df=lines_df,
2025-01-24T14:29:24.4530493Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4530650Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4530782Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4530903Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4531090Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4531204Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4531303Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4531403Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4531482Z                 simulation=sim,
2025-01-24T14:29:24.4531558Z             )
2025-01-24T14:29:24.4531646Z         else: # real packets
2025-01-24T14:29:24.4531809Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4531895Z             # which got emitted
2025-01-24T14:29:24.4532003Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4532083Z >           return cls(
2025-01-24T14:29:24.4532253Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4532443Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4532518Z                     mask
2025-01-24T14:29:24.4532595Z                 ],
2025-01-24T14:29:24.4532904Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4532985Z                     mask
2025-01-24T14:29:24.4533056Z                 ],
2025-01-24T14:29:24.4533227Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4533305Z                     mask
2025-01-24T14:29:24.4533375Z                 ],
2025-01-24T14:29:24.4533543Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4533625Z                 lines_df=lines_df,
2025-01-24T14:29:24.4533788Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4534094Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4534172Z                     mask
2025-01-24T14:29:24.4534243Z                 ],
2025-01-24T14:29:24.4534374Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4534494Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4534685Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4534793Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4534897Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4534996Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4535077Z                 simulation=sim,
2025-01-24T14:29:24.4535153Z             )
2025-01-24T14:29:24.4535483Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4535492Z 
2025-01-24T14:29:24.4535666Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4535890Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _
2025-01-24T14:29:24.4535895Z 
2025-01-24T14:29:24.4536111Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4536118Z 
2025-01-24T14:29:24.4536210Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4536307Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4536382Z         """
2025-01-24T14:29:24.4536532Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4536609Z     
2025-01-24T14:29:24.4536686Z         Parameters:
2025-01-24T14:29:24.4536768Z         -----------
2025-01-24T14:29:24.4536881Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4536956Z     
2025-01-24T14:29:24.4537028Z         Returns:
2025-01-24T14:29:24.4537107Z         --------
2025-01-24T14:29:24.4537194Z         An LIVPlotter instance.
2025-01-24T14:29:24.4537268Z         """
2025-01-24T14:29:24.4537401Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4537406Z 
2025-01-24T14:29:24.4537545Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4537661Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4537826Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4537978Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4538190Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4538434Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4538547Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4538551Z 
2025-01-24T14:29:24.4538766Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4538943Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4539029Z packets_mode = 'real'
2025-01-24T14:29:24.4539034Z 
2025-01-24T14:29:24.4539107Z     @classmethod
2025-01-24T14:29:24.4539220Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4539414Z         """
2025-01-24T14:29:24.4539612Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4539686Z     
2025-01-24T14:29:24.4539761Z         Parameters
2025-01-24T14:29:24.4539839Z         ----------
2025-01-24T14:29:24.4539941Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4540093Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4540186Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4540329Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4540400Z     
2025-01-24T14:29:24.4540478Z         Returns
2025-01-24T14:29:24.4540661Z         -------
2025-01-24T14:29:24.4540753Z         SimulationPacketData
2025-01-24T14:29:24.4540824Z         """
2025-01-24T14:29:24.4540934Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4541017Z             raise ValueError(
2025-01-24T14:29:24.4541148Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4541251Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4541326Z             )
2025-01-24T14:29:24.4541438Z         # Properties common among both packet modes
2025-01-24T14:29:24.4541597Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4541678Z             "line_id"
2025-01-24T14:29:24.4541748Z         )
2025-01-24T14:29:24.4541863Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4541987Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4542075Z         time_of_simulation = (
2025-01-24T14:29:24.4542231Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4542310Z         )
2025-01-24T14:29:24.4542380Z     
2025-01-24T14:29:24.4542461Z         spectrum = (
2025-01-24T14:29:24.4542575Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4542673Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4542791Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4542867Z         )
2025-01-24T14:29:24.4542940Z     
2025-01-24T14:29:24.4543027Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4543154Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4543231Z             return cls(
2025-01-24T14:29:24.4543390Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4543562Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4543743Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4543912Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4544068Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4544151Z                 lines_df=lines_df,
2025-01-24T14:29:24.4544285Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4544440Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4544572Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4544692Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4544877Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4544990Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4545098Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4545197Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4545282Z                 simulation=sim,
2025-01-24T14:29:24.4545357Z             )
2025-01-24T14:29:24.4545437Z         else: # real packets
2025-01-24T14:29:24.4545604Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4545771Z             # which got emitted
2025-01-24T14:29:24.4545881Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4545955Z >           return cls(
2025-01-24T14:29:24.4546132Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4546319Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4546392Z                     mask
2025-01-24T14:29:24.4546467Z                 ],
2025-01-24T14:29:24.4546654Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4546732Z                     mask
2025-01-24T14:29:24.4546879Z                 ],
2025-01-24T14:29:24.4547050Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4547123Z                     mask
2025-01-24T14:29:24.4547198Z                 ],
2025-01-24T14:29:24.4547365Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4547455Z                 lines_df=lines_df,
2025-01-24T14:29:24.4547615Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4547795Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4547871Z                     mask
2025-01-24T14:29:24.4547941Z                 ],
2025-01-24T14:29:24.4548071Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4548184Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4548498Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4548611Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4548717Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4548812Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4548897Z                 simulation=sim,
2025-01-24T14:29:24.4548970Z             )
2025-01-24T14:29:24.4549308Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4549314Z 
2025-01-24T14:29:24.4549487Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4549713Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl2] _
2025-01-24T14:29:24.4549718Z 
2025-01-24T14:29:24.4549932Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4549937Z 
2025-01-24T14:29:24.4550025Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4550125Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4550196Z         """
2025-01-24T14:29:24.4550349Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4550419Z     
2025-01-24T14:29:24.4550500Z         Parameters:
2025-01-24T14:29:24.4550575Z         -----------
2025-01-24T14:29:24.4550697Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4550771Z     
2025-01-24T14:29:24.4550843Z         Returns:
2025-01-24T14:29:24.4550921Z         --------
2025-01-24T14:29:24.4551005Z         An LIVPlotter instance.
2025-01-24T14:29:24.4551079Z         """
2025-01-24T14:29:24.4551210Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4551216Z 
2025-01-24T14:29:24.4551355Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4551466Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4551631Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4551780Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4551998Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4552132Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4552382Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4552387Z 
2025-01-24T14:29:24.4552608Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4552778Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4552867Z packets_mode = 'real'
2025-01-24T14:29:24.4552872Z 
2025-01-24T14:29:24.4552946Z     @classmethod
2025-01-24T14:29:24.4553060Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4553131Z         """
2025-01-24T14:29:24.4553328Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4553503Z     
2025-01-24T14:29:24.4553589Z         Parameters
2025-01-24T14:29:24.4553662Z         ----------
2025-01-24T14:29:24.4553769Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4553917Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4554020Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4554164Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4554234Z     
2025-01-24T14:29:24.4554310Z         Returns
2025-01-24T14:29:24.4554385Z         -------
2025-01-24T14:29:24.4554477Z         SimulationPacketData
2025-01-24T14:29:24.4554548Z         """
2025-01-24T14:29:24.4554657Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4554739Z             raise ValueError(
2025-01-24T14:29:24.4554868Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4554972Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4555051Z             )
2025-01-24T14:29:24.4555157Z         # Properties common among both packet modes
2025-01-24T14:29:24.4555323Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4555398Z             "line_id"
2025-01-24T14:29:24.4555475Z         )
2025-01-24T14:29:24.4555590Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4555713Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4555800Z         time_of_simulation = (
2025-01-24T14:29:24.4555955Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4556032Z         )
2025-01-24T14:29:24.4556102Z     
2025-01-24T14:29:24.4556182Z         spectrum = (
2025-01-24T14:29:24.4556295Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4556392Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4556509Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4556586Z         )
2025-01-24T14:29:24.4556659Z     
2025-01-24T14:29:24.4556753Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4556874Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4556956Z             return cls(
2025-01-24T14:29:24.4557109Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4557289Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4557468Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4557635Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4557789Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4557873Z                 lines_df=lines_df,
2025-01-24T14:29:24.4558004Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4558157Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4558391Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4558509Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4558703Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4558947Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4559048Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4559147Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4559228Z                 simulation=sim,
2025-01-24T14:29:24.4559305Z             )
2025-01-24T14:29:24.4559385Z         else: # real packets
2025-01-24T14:29:24.4559554Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4559635Z             # which got emitted
2025-01-24T14:29:24.4559746Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4559822Z >           return cls(
2025-01-24T14:29:24.4560110Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4560297Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4560375Z                     mask
2025-01-24T14:29:24.4560451Z                 ],
2025-01-24T14:29:24.4560645Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4560724Z                     mask
2025-01-24T14:29:24.4560794Z                 ],
2025-01-24T14:29:24.4560963Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4561037Z                     mask
2025-01-24T14:29:24.4561112Z                 ],
2025-01-24T14:29:24.4561277Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4561364Z                 lines_df=lines_df,
2025-01-24T14:29:24.4561524Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4561706Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4561780Z                     mask
2025-01-24T14:29:24.4561857Z                 ],
2025-01-24T14:29:24.4561984Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4562104Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4562293Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4562401Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4562505Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4562599Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4562683Z                 simulation=sim,
2025-01-24T14:29:24.4562754Z             )
2025-01-24T14:29:24.4563092Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4563101Z 
2025-01-24T14:29:24.4563272Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4563503Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl3] _
2025-01-24T14:29:24.4563512Z 
2025-01-24T14:29:24.4563730Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4563735Z 
2025-01-24T14:29:24.4563824Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4563923Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4563995Z         """
2025-01-24T14:29:24.4564150Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4564220Z     
2025-01-24T14:29:24.4564301Z         Parameters:
2025-01-24T14:29:24.4564375Z         -----------
2025-01-24T14:29:24.4564493Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4564563Z     
2025-01-24T14:29:24.4564641Z         Returns:
2025-01-24T14:29:24.4564717Z         --------
2025-01-24T14:29:24.4564805Z         An LIVPlotter instance.
2025-01-24T14:29:24.4564875Z         """
2025-01-24T14:29:24.4565012Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4565017Z 
2025-01-24T14:29:24.4565155Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4565352Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4565516Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4565664Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4565884Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4566016Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4566131Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4566135Z 
2025-01-24T14:29:24.4566350Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4566599Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4566686Z packets_mode = 'real'
2025-01-24T14:29:24.4566691Z 
2025-01-24T14:29:24.4566765Z     @classmethod
2025-01-24T14:29:24.4566883Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4566954Z         """
2025-01-24T14:29:24.4567153Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4567228Z     
2025-01-24T14:29:24.4567308Z         Parameters
2025-01-24T14:29:24.4567384Z         ----------
2025-01-24T14:29:24.4567492Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4567639Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4567737Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4567875Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4567954Z     
2025-01-24T14:29:24.4568025Z         Returns
2025-01-24T14:29:24.4568102Z         -------
2025-01-24T14:29:24.4568188Z         SimulationPacketData
2025-01-24T14:29:24.4568363Z         """
2025-01-24T14:29:24.4568476Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4568562Z             raise ValueError(
2025-01-24T14:29:24.4568681Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4568784Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4568859Z             )
2025-01-24T14:29:24.4568963Z         # Properties common among both packet modes
2025-01-24T14:29:24.4569126Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4569200Z             "line_id"
2025-01-24T14:29:24.4569275Z         )
2025-01-24T14:29:24.4569382Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4569510Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4569593Z         time_of_simulation = (
2025-01-24T14:29:24.4569755Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4569826Z         )
2025-01-24T14:29:24.4569901Z     
2025-01-24T14:29:24.4569983Z         spectrum = (
2025-01-24T14:29:24.4570096Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4570194Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4570311Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4570386Z         )
2025-01-24T14:29:24.4570455Z     
2025-01-24T14:29:24.4570552Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4570673Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4570753Z             return cls(
2025-01-24T14:29:24.4570908Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4571121Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4571311Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4571494Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4571646Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4571853Z                 lines_df=lines_df,
2025-01-24T14:29:24.4571984Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4572136Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4572267Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4572381Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4572573Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4572683Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4572791Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4573010Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4573098Z                 simulation=sim,
2025-01-24T14:29:24.4573168Z             )
2025-01-24T14:29:24.4573259Z         else: # real packets
2025-01-24T14:29:24.4573427Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4573511Z             # which got emitted
2025-01-24T14:29:24.4573622Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4573698Z >           return cls(
2025-01-24T14:29:24.4573876Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4574059Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4574140Z                     mask
2025-01-24T14:29:24.4574211Z                 ],
2025-01-24T14:29:24.4574405Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4574483Z                     mask
2025-01-24T14:29:24.4574559Z                 ],
2025-01-24T14:29:24.4574725Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4574803Z                     mask
2025-01-24T14:29:24.4574879Z                 ],
2025-01-24T14:29:24.4575046Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4575134Z                 lines_df=lines_df,
2025-01-24T14:29:24.4575295Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4575472Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4575546Z                     mask
2025-01-24T14:29:24.4575623Z                 ],
2025-01-24T14:29:24.4575748Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4575868Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4576052Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4576169Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4576271Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4576371Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4576459Z                 simulation=sim,
2025-01-24T14:29:24.4576530Z             )
2025-01-24T14:29:24.4576868Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4576874Z 
2025-01-24T14:29:24.4577042Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4577270Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _
2025-01-24T14:29:24.4577275Z 
2025-01-24T14:29:24.4577486Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4577491Z 
2025-01-24T14:29:24.4577588Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4577680Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4577757Z         """
2025-01-24T14:29:24.4577913Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4577984Z     
2025-01-24T14:29:24.4578155Z         Parameters:
2025-01-24T14:29:24.4578333Z         -----------
2025-01-24T14:29:24.4578454Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4578523Z     
2025-01-24T14:29:24.4578602Z         Returns:
2025-01-24T14:29:24.4578675Z         --------
2025-01-24T14:29:24.4578764Z         An LIVPlotter instance.
2025-01-24T14:29:24.4578834Z         """
2025-01-24T14:29:24.4578970Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4578975Z 
2025-01-24T14:29:24.4579110Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4579226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4579500Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4579651Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4579868Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4580005Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4580122Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4580126Z 
2025-01-24T14:29:24.4580340Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4580511Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4580593Z packets_mode = 'real'
2025-01-24T14:29:24.4580598Z 
2025-01-24T14:29:24.4580678Z     @classmethod
2025-01-24T14:29:24.4580787Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4580863Z         """
2025-01-24T14:29:24.4581056Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4581133Z     
2025-01-24T14:29:24.4581214Z         Parameters
2025-01-24T14:29:24.4581290Z         ----------
2025-01-24T14:29:24.4581393Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4581537Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4581638Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4581778Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4581854Z     
2025-01-24T14:29:24.4581926Z         Returns
2025-01-24T14:29:24.4582004Z         -------
2025-01-24T14:29:24.4582090Z         SimulationPacketData
2025-01-24T14:29:24.4582165Z         """
2025-01-24T14:29:24.4582271Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4582360Z             raise ValueError(
2025-01-24T14:29:24.4582476Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4582582Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4582661Z             )
2025-01-24T14:29:24.4582766Z         # Properties common among both packet modes
2025-01-24T14:29:24.4582933Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4583008Z             "line_id"
2025-01-24T14:29:24.4583085Z         )
2025-01-24T14:29:24.4583194Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4583322Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4583407Z         time_of_simulation = (
2025-01-24T14:29:24.4583566Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4583636Z         )
2025-01-24T14:29:24.4583712Z     
2025-01-24T14:29:24.4583788Z         spectrum = (
2025-01-24T14:29:24.4583907Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4583996Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4584121Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4584200Z         )
2025-01-24T14:29:24.4584269Z     
2025-01-24T14:29:24.4584363Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4584485Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4584563Z             return cls(
2025-01-24T14:29:24.4584836Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4585010Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4585187Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4585364Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4585514Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4585602Z                 lines_df=lines_df,
2025-01-24T14:29:24.4585729Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4585965Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4586096Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4586211Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4586404Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4586510Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4586616Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4586711Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4586797Z                 simulation=sim,
2025-01-24T14:29:24.4586868Z             )
2025-01-24T14:29:24.4586954Z         else: # real packets
2025-01-24T14:29:24.4587118Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4587204Z             # which got emitted
2025-01-24T14:29:24.4587310Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4587393Z >           return cls(
2025-01-24T14:29:24.4587571Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4587754Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4587836Z                     mask
2025-01-24T14:29:24.4587908Z                 ],
2025-01-24T14:29:24.4588101Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4588175Z                     mask
2025-01-24T14:29:24.4588348Z                 ],
2025-01-24T14:29:24.4588519Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4588596Z                     mask
2025-01-24T14:29:24.4588666Z                 ],
2025-01-24T14:29:24.4588835Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4588916Z                 lines_df=lines_df,
2025-01-24T14:29:24.4589084Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4589261Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4589334Z                     mask
2025-01-24T14:29:24.4589412Z                 ],
2025-01-24T14:29:24.4589537Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4589658Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4589842Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4589954Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4590054Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4590152Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4590234Z                 simulation=sim,
2025-01-24T14:29:24.4590310Z             )
2025-01-24T14:29:24.4590642Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4590655Z 
2025-01-24T14:29:24.4590827Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4591055Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _
2025-01-24T14:29:24.4591176Z 
2025-01-24T14:29:24.4591391Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4591396Z 
2025-01-24T14:29:24.4591490Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4591580Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4591656Z         """
2025-01-24T14:29:24.4591804Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4591880Z     
2025-01-24T14:29:24.4591957Z         Parameters:
2025-01-24T14:29:24.4592036Z         -----------
2025-01-24T14:29:24.4592149Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4592329Z     
2025-01-24T14:29:24.4592408Z         Returns:
2025-01-24T14:29:24.4592482Z         --------
2025-01-24T14:29:24.4592571Z         An LIVPlotter instance.
2025-01-24T14:29:24.4592641Z         """
2025-01-24T14:29:24.4592777Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4592785Z 
2025-01-24T14:29:24.4592919Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4593036Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4593192Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4593342Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4593553Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4593689Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4593797Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4593811Z 
2025-01-24T14:29:24.4594025Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4594196Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4594278Z packets_mode = 'real'
2025-01-24T14:29:24.4594286Z 
2025-01-24T14:29:24.4594364Z     @classmethod
2025-01-24T14:29:24.4594473Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4594548Z         """
2025-01-24T14:29:24.4594744Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4594819Z     
2025-01-24T14:29:24.4594905Z         Parameters
2025-01-24T14:29:24.4594985Z         ----------
2025-01-24T14:29:24.4595084Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4595239Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4595337Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4595474Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4595553Z     
2025-01-24T14:29:24.4595626Z         Returns
2025-01-24T14:29:24.4595703Z         -------
2025-01-24T14:29:24.4595790Z         SimulationPacketData
2025-01-24T14:29:24.4595865Z         """
2025-01-24T14:29:24.4595972Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4596063Z             raise ValueError(
2025-01-24T14:29:24.4596178Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4596289Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4596359Z             )
2025-01-24T14:29:24.4596470Z         # Properties common among both packet modes
2025-01-24T14:29:24.4596630Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4596709Z             "line_id"
2025-01-24T14:29:24.4596779Z         )
2025-01-24T14:29:24.4596892Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4597021Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4597108Z         time_of_simulation = (
2025-01-24T14:29:24.4597268Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4597339Z         )
2025-01-24T14:29:24.4597415Z     
2025-01-24T14:29:24.4597491Z         spectrum = (
2025-01-24T14:29:24.4597697Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4597787Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4597908Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4597978Z         )
2025-01-24T14:29:24.4598052Z     
2025-01-24T14:29:24.4598142Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4598365Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4598444Z             return cls(
2025-01-24T14:29:24.4598607Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4598783Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4599091Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4599261Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4599413Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4599504Z                 lines_df=lines_df,
2025-01-24T14:29:24.4599631Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4599790Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4599917Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4600037Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4600220Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4600333Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4600442Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4600541Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4600630Z                 simulation=sim,
2025-01-24T14:29:24.4600703Z             )
2025-01-24T14:29:24.4600792Z         else: # real packets
2025-01-24T14:29:24.4600965Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4601053Z             # which got emitted
2025-01-24T14:29:24.4601161Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4601242Z >           return cls(
2025-01-24T14:29:24.4601418Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4601609Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4601684Z                     mask
2025-01-24T14:29:24.4601762Z                 ],
2025-01-24T14:29:24.4601956Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4602034Z                     mask
2025-01-24T14:29:24.4602110Z                 ],
2025-01-24T14:29:24.4602277Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4602358Z                     mask
2025-01-24T14:29:24.4602432Z                 ],
2025-01-24T14:29:24.4602604Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4602686Z                 lines_df=lines_df,
2025-01-24T14:29:24.4602856Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4603030Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4603110Z                     mask
2025-01-24T14:29:24.4603181Z                 ],
2025-01-24T14:29:24.4603314Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4603429Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4603622Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4603735Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4603837Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4604057Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4604138Z                 simulation=sim,
2025-01-24T14:29:24.4604212Z             )
2025-01-24T14:29:24.4604546Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4604552Z 
2025-01-24T14:29:24.4604725Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4604956Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl6] _
2025-01-24T14:29:24.4604969Z 
2025-01-24T14:29:24.4605182Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4605263Z 
2025-01-24T14:29:24.4605365Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4605455Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4605529Z         """
2025-01-24T14:29:24.4605676Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4605754Z     
2025-01-24T14:29:24.4605829Z         Parameters:
2025-01-24T14:29:24.4605909Z         -----------
2025-01-24T14:29:24.4606026Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4606102Z     
2025-01-24T14:29:24.4606175Z         Returns:
2025-01-24T14:29:24.4606253Z         --------
2025-01-24T14:29:24.4606337Z         An LIVPlotter instance.
2025-01-24T14:29:24.4606412Z         """
2025-01-24T14:29:24.4606544Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4606554Z 
2025-01-24T14:29:24.4606689Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4606805Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4606965Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4607117Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4607331Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4607473Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4607583Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4607588Z 
2025-01-24T14:29:24.4607805Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4607971Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4608059Z packets_mode = 'real'
2025-01-24T14:29:24.4608064Z 
2025-01-24T14:29:24.4608143Z     @classmethod
2025-01-24T14:29:24.4608353Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4608431Z         """
2025-01-24T14:29:24.4608630Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4616116Z     
2025-01-24T14:29:24.4616231Z         Parameters
2025-01-24T14:29:24.4616319Z         ----------
2025-01-24T14:29:24.4616426Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4616603Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4616707Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4616858Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4616935Z     
2025-01-24T14:29:24.4617010Z         Returns
2025-01-24T14:29:24.4617089Z         -------
2025-01-24T14:29:24.4617178Z         SimulationPacketData
2025-01-24T14:29:24.4617253Z         """
2025-01-24T14:29:24.4617364Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4617453Z             raise ValueError(
2025-01-24T14:29:24.4617577Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4617697Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4617769Z             )
2025-01-24T14:29:24.4617886Z         # Properties common among both packet modes
2025-01-24T14:29:24.4618055Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4618448Z             "line_id"
2025-01-24T14:29:24.4618531Z         )
2025-01-24T14:29:24.4618646Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4618783Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4618869Z         time_of_simulation = (
2025-01-24T14:29:24.4619031Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4619103Z         )
2025-01-24T14:29:24.4619182Z     
2025-01-24T14:29:24.4619259Z         spectrum = (
2025-01-24T14:29:24.4619380Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4619472Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4619718Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4619790Z         )
2025-01-24T14:29:24.4619865Z     
2025-01-24T14:29:24.4619955Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4620088Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4620169Z             return cls(
2025-01-24T14:29:24.4620335Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4620515Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4620695Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4620871Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4621022Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4621112Z                 lines_df=lines_df,
2025-01-24T14:29:24.4621244Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4621407Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4621540Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4621663Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4621857Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4621975Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4622084Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4622182Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4622274Z                 simulation=sim,
2025-01-24T14:29:24.4622345Z             )
2025-01-24T14:29:24.4622435Z         else: # real packets
2025-01-24T14:29:24.4622600Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4622687Z             # which got emitted
2025-01-24T14:29:24.4622802Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4622884Z >           return cls(
2025-01-24T14:29:24.4623062Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4623254Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4623333Z                     mask
2025-01-24T14:29:24.4623414Z                 ],
2025-01-24T14:29:24.4623610Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4623685Z                     mask
2025-01-24T14:29:24.4623761Z                 ],
2025-01-24T14:29:24.4623930Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4624008Z                     mask
2025-01-24T14:29:24.4624080Z                 ],
2025-01-24T14:29:24.4624265Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4624358Z                 lines_df=lines_df,
2025-01-24T14:29:24.4624533Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4624709Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4624912Z                     mask
2025-01-24T14:29:24.4624988Z                 ],
2025-01-24T14:29:24.4625133Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4625258Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4625450Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4625569Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4625676Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4625780Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4625864Z                 simulation=sim,
2025-01-24T14:29:24.4625945Z             )
2025-01-24T14:29:24.4626369Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4626375Z 
2025-01-24T14:29:24.4626558Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4626801Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _
2025-01-24T14:29:24.4626812Z 
2025-01-24T14:29:24.4627030Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4627035Z 
2025-01-24T14:29:24.4627134Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4627229Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4627304Z         """
2025-01-24T14:29:24.4627465Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4627536Z     
2025-01-24T14:29:24.4627623Z         Parameters:
2025-01-24T14:29:24.4627700Z         -----------
2025-01-24T14:29:24.4627823Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4627897Z     
2025-01-24T14:29:24.4627977Z         Returns:
2025-01-24T14:29:24.4628051Z         --------
2025-01-24T14:29:24.4628141Z         An LIVPlotter instance.
2025-01-24T14:29:24.4628211Z         """
2025-01-24T14:29:24.4628452Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4628462Z 
2025-01-24T14:29:24.4628601Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4628722Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4628886Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4629035Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4629255Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4629416Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4629532Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4629540Z 
2025-01-24T14:29:24.4629761Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4629937Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4630024Z packets_mode = 'real'
2025-01-24T14:29:24.4630029Z 
2025-01-24T14:29:24.4630108Z     @classmethod
2025-01-24T14:29:24.4630225Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4630297Z         """
2025-01-24T14:29:24.4630499Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4630570Z     
2025-01-24T14:29:24.4630650Z         Parameters
2025-01-24T14:29:24.4630724Z         ----------
2025-01-24T14:29:24.4630829Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4630981Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4631079Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4631221Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4631302Z     
2025-01-24T14:29:24.4631373Z         Returns
2025-01-24T14:29:24.4631456Z         -------
2025-01-24T14:29:24.4631543Z         SimulationPacketData
2025-01-24T14:29:24.4631791Z         """
2025-01-24T14:29:24.4631900Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4631991Z             raise ValueError(
2025-01-24T14:29:24.4632117Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4632223Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4632296Z             )
2025-01-24T14:29:24.4632406Z         # Properties common among both packet modes
2025-01-24T14:29:24.4632572Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4632648Z             "line_id"
2025-01-24T14:29:24.4632724Z         )
2025-01-24T14:29:24.4632832Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4633069Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4633152Z         time_of_simulation = (
2025-01-24T14:29:24.4633314Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4633384Z         )
2025-01-24T14:29:24.4633462Z     
2025-01-24T14:29:24.4633538Z         spectrum = (
2025-01-24T14:29:24.4633657Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4633754Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4633871Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4633947Z         )
2025-01-24T14:29:24.4634016Z     
2025-01-24T14:29:24.4634110Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4634232Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4634314Z             return cls(
2025-01-24T14:29:24.4634470Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4634650Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4634828Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4635000Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4635157Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4635248Z                 lines_df=lines_df,
2025-01-24T14:29:24.4635382Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4635534Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4635667Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4635784Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4635975Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4636090Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4636197Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4636294Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4636382Z                 simulation=sim,
2025-01-24T14:29:24.4636456Z             )
2025-01-24T14:29:24.4636543Z         else: # real packets
2025-01-24T14:29:24.4636707Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4636793Z             # which got emitted
2025-01-24T14:29:24.4636902Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4636980Z >           return cls(
2025-01-24T14:29:24.4637159Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4637344Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4637424Z                     mask
2025-01-24T14:29:24.4637496Z                 ],
2025-01-24T14:29:24.4637693Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4637767Z                     mask
2025-01-24T14:29:24.4637842Z                 ],
2025-01-24T14:29:24.4638009Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4638196Z                     mask
2025-01-24T14:29:24.4638447Z                 ],
2025-01-24T14:29:24.4638620Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4638710Z                 lines_df=lines_df,
2025-01-24T14:29:24.4638870Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4639047Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4639124Z                     mask
2025-01-24T14:29:24.4639199Z                 ],
2025-01-24T14:29:24.4639327Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4639559Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4639745Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4639857Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4639962Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4640065Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4640144Z                 simulation=sim,
2025-01-24T14:29:24.4640221Z             )
2025-01-24T14:29:24.4640562Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4640568Z 
2025-01-24T14:29:24.4640741Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4640949Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl0] __
2025-01-24T14:29:24.4640954Z 
2025-01-24T14:29:24.4641163Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4641172Z 
2025-01-24T14:29:24.4641266Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4641357Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4641434Z         """
2025-01-24T14:29:24.4641587Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4641666Z     
2025-01-24T14:29:24.4641748Z         Parameters:
2025-01-24T14:29:24.4641823Z         -----------
2025-01-24T14:29:24.4641944Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4642015Z     
2025-01-24T14:29:24.4642096Z         Returns:
2025-01-24T14:29:24.4642170Z         --------
2025-01-24T14:29:24.4642260Z         An LIVPlotter instance.
2025-01-24T14:29:24.4642332Z         """
2025-01-24T14:29:24.4642469Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4642474Z 
2025-01-24T14:29:24.4642612Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4642729Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4642888Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4643045Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4643261Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4643399Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4643511Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4643515Z 
2025-01-24T14:29:24.4643728Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4643902Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4643987Z packets_mode = 'real'
2025-01-24T14:29:24.4643992Z 
2025-01-24T14:29:24.4644070Z     @classmethod
2025-01-24T14:29:24.4644181Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4644260Z         """
2025-01-24T14:29:24.4644452Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4644532Z     
2025-01-24T14:29:24.4644608Z         Parameters
2025-01-24T14:29:24.4644688Z         ----------
2025-01-24T14:29:24.4644911Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4645061Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4645166Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4645306Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4645381Z     
2025-01-24T14:29:24.4645452Z         Returns
2025-01-24T14:29:24.4645529Z         -------
2025-01-24T14:29:24.4645617Z         SimulationPacketData
2025-01-24T14:29:24.4645695Z         """
2025-01-24T14:29:24.4645801Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4645888Z             raise ValueError(
2025-01-24T14:29:24.4646006Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4646195Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4646268Z             )
2025-01-24T14:29:24.4646380Z         # Properties common among both packet modes
2025-01-24T14:29:24.4646547Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4646627Z             "line_id"
2025-01-24T14:29:24.4646705Z         )
2025-01-24T14:29:24.4646816Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4646946Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4647030Z         time_of_simulation = (
2025-01-24T14:29:24.4647190Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4647262Z         )
2025-01-24T14:29:24.4647337Z     
2025-01-24T14:29:24.4647414Z         spectrum = (
2025-01-24T14:29:24.4647533Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4647625Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4647751Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4647823Z         )
2025-01-24T14:29:24.4647897Z     
2025-01-24T14:29:24.4647987Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4648114Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4648201Z             return cls(
2025-01-24T14:29:24.4648468Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4648647Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4648823Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4648993Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4649142Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4649230Z                 lines_df=lines_df,
2025-01-24T14:29:24.4649362Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4649524Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4649664Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4649783Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4649980Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4650092Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4650202Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4650304Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4650385Z                 simulation=sim,
2025-01-24T14:29:24.4650460Z             )
2025-01-24T14:29:24.4650543Z         else: # real packets
2025-01-24T14:29:24.4650711Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4650796Z             # which got emitted
2025-01-24T14:29:24.4650914Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4650991Z >           return cls(
2025-01-24T14:29:24.4651171Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4651475Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4651554Z                     mask
2025-01-24T14:29:24.4651625Z                 ],
2025-01-24T14:29:24.4651820Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4651898Z                     mask
2025-01-24T14:29:24.4651968Z                 ],
2025-01-24T14:29:24.4652137Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4652209Z                     mask
2025-01-24T14:29:24.4652283Z                 ],
2025-01-24T14:29:24.4652449Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4652658Z                 lines_df=lines_df,
2025-01-24T14:29:24.4652820Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4652999Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4653086Z                     mask
2025-01-24T14:29:24.4653162Z                 ],
2025-01-24T14:29:24.4653288Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4653406Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4653593Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4653699Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4653801Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4653896Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4653979Z                 simulation=sim,
2025-01-24T14:29:24.4654053Z             )
2025-01-24T14:29:24.4654387Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4654394Z 
2025-01-24T14:29:24.4654562Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4654770Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl1] __
2025-01-24T14:29:24.4654775Z 
2025-01-24T14:29:24.4654993Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4655003Z 
2025-01-24T14:29:24.4655091Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4655185Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4655257Z         """
2025-01-24T14:29:24.4655415Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4655484Z     
2025-01-24T14:29:24.4655568Z         Parameters:
2025-01-24T14:29:24.4655642Z         -----------
2025-01-24T14:29:24.4655784Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4655862Z     
2025-01-24T14:29:24.4655939Z         Returns:
2025-01-24T14:29:24.4656012Z         --------
2025-01-24T14:29:24.4656100Z         An LIVPlotter instance.
2025-01-24T14:29:24.4656172Z         """
2025-01-24T14:29:24.4656310Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4656314Z 
2025-01-24T14:29:24.4656452Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4656563Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4656724Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4656869Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4657084Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4657215Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4657333Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4657337Z 
2025-01-24T14:29:24.4657551Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4657720Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4657920Z packets_mode = 'real'
2025-01-24T14:29:24.4657929Z 
2025-01-24T14:29:24.4658003Z     @classmethod
2025-01-24T14:29:24.4658115Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4658183Z         """
2025-01-24T14:29:24.4658487Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4658557Z     
2025-01-24T14:29:24.4658634Z         Parameters
2025-01-24T14:29:24.4658706Z         ----------
2025-01-24T14:29:24.4658808Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4658953Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4659053Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4659306Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4659379Z     
2025-01-24T14:29:24.4659453Z         Returns
2025-01-24T14:29:24.4659539Z         -------
2025-01-24T14:29:24.4659625Z         SimulationPacketData
2025-01-24T14:29:24.4659704Z         """
2025-01-24T14:29:24.4659809Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4659895Z             raise ValueError(
2025-01-24T14:29:24.4660016Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4660117Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4660191Z             )
2025-01-24T14:29:24.4660296Z         # Properties common among both packet modes
2025-01-24T14:29:24.4660457Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4660537Z             "line_id"
2025-01-24T14:29:24.4660632Z         )
2025-01-24T14:29:24.4660743Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4660867Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4660950Z         time_of_simulation = (
2025-01-24T14:29:24.4661107Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4661179Z         )
2025-01-24T14:29:24.4661256Z     
2025-01-24T14:29:24.4661331Z         spectrum = (
2025-01-24T14:29:24.4661448Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4661538Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4661657Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4661733Z         )
2025-01-24T14:29:24.4661806Z     
2025-01-24T14:29:24.4661900Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4662019Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4662100Z             return cls(
2025-01-24T14:29:24.4662254Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4662432Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4662607Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4662774Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4662927Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4663014Z                 lines_df=lines_df,
2025-01-24T14:29:24.4663145Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4663296Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4663430Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4663542Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4663729Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4663839Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4663945Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4664040Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4664124Z                 simulation=sim,
2025-01-24T14:29:24.4664313Z             )
2025-01-24T14:29:24.4664400Z         else: # real packets
2025-01-24T14:29:24.4664565Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4664649Z             # which got emitted
2025-01-24T14:29:24.4664758Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4664834Z >           return cls(
2025-01-24T14:29:24.4665009Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4665193Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4665274Z                     mask
2025-01-24T14:29:24.4665423Z                 ],
2025-01-24T14:29:24.4665614Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4665691Z                     mask
2025-01-24T14:29:24.4665767Z                 ],
2025-01-24T14:29:24.4665933Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4666015Z                     mask
2025-01-24T14:29:24.4666085Z                 ],
2025-01-24T14:29:24.4666258Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4666345Z                 lines_df=lines_df,
2025-01-24T14:29:24.4666507Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4666684Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4666757Z                     mask
2025-01-24T14:29:24.4666835Z                 ],
2025-01-24T14:29:24.4666960Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4667082Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4667265Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4667377Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4667480Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4667603Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4667693Z                 simulation=sim,
2025-01-24T14:29:24.4667764Z             )
2025-01-24T14:29:24.4668097Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4668102Z 
2025-01-24T14:29:24.4668403Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4668612Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl2] __
2025-01-24T14:29:24.4668617Z 
2025-01-24T14:29:24.4668832Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4668837Z 
2025-01-24T14:29:24.4668931Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4669022Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4669098Z         """
2025-01-24T14:29:24.4669254Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4669332Z     
2025-01-24T14:29:24.4669412Z         Parameters:
2025-01-24T14:29:24.4669488Z         -----------
2025-01-24T14:29:24.4669606Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4669675Z     
2025-01-24T14:29:24.4669751Z         Returns:
2025-01-24T14:29:24.4669825Z         --------
2025-01-24T14:29:24.4669915Z         An LIVPlotter instance.
2025-01-24T14:29:24.4669983Z         """
2025-01-24T14:29:24.4670117Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4670123Z 
2025-01-24T14:29:24.4670258Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4670375Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4670533Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4670687Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4671024Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4671156Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4671269Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4671273Z 
2025-01-24T14:29:24.4671487Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4671658Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4671740Z packets_mode = 'real'
2025-01-24T14:29:24.4671745Z 
2025-01-24T14:29:24.4671824Z     @classmethod
2025-01-24T14:29:24.4672039Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4672116Z         """
2025-01-24T14:29:24.4672308Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4672383Z     
2025-01-24T14:29:24.4672461Z         Parameters
2025-01-24T14:29:24.4672538Z         ----------
2025-01-24T14:29:24.4672641Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4672787Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4672885Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4673021Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4673094Z     
2025-01-24T14:29:24.4673165Z         Returns
2025-01-24T14:29:24.4673244Z         -------
2025-01-24T14:29:24.4673329Z         SimulationPacketData
2025-01-24T14:29:24.4673403Z         """
2025-01-24T14:29:24.4673508Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4673596Z             raise ValueError(
2025-01-24T14:29:24.4673717Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4673823Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4673893Z             )
2025-01-24T14:29:24.4674002Z         # Properties common among both packet modes
2025-01-24T14:29:24.4674171Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4674245Z             "line_id"
2025-01-24T14:29:24.4674317Z         )
2025-01-24T14:29:24.4674426Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4674552Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4674635Z         time_of_simulation = (
2025-01-24T14:29:24.4674793Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4674867Z         )
2025-01-24T14:29:24.4674940Z     
2025-01-24T14:29:24.4675017Z         spectrum = (
2025-01-24T14:29:24.4675141Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4675237Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4675360Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4675431Z         )
2025-01-24T14:29:24.4675505Z     
2025-01-24T14:29:24.4675596Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4675727Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4675809Z             return cls(
2025-01-24T14:29:24.4675967Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4676145Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4676321Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4676493Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4676643Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4676734Z                 lines_df=lines_df,
2025-01-24T14:29:24.4676863Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4677020Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4677151Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4677361Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4677552Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4677661Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4677768Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4677864Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4677948Z                 simulation=sim,
2025-01-24T14:29:24.4678019Z             )
2025-01-24T14:29:24.4678104Z         else: # real packets
2025-01-24T14:29:24.4678365Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4678587Z             # which got emitted
2025-01-24T14:29:24.4678702Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4678782Z >           return cls(
2025-01-24T14:29:24.4678959Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4679157Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4679237Z                     mask
2025-01-24T14:29:24.4679307Z                 ],
2025-01-24T14:29:24.4679504Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4679577Z                     mask
2025-01-24T14:29:24.4679652Z                 ],
2025-01-24T14:29:24.4679821Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4679899Z                     mask
2025-01-24T14:29:24.4679969Z                 ],
2025-01-24T14:29:24.4680138Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4680222Z                 lines_df=lines_df,
2025-01-24T14:29:24.4680391Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4680564Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4680644Z                     mask
2025-01-24T14:29:24.4680719Z                 ],
2025-01-24T14:29:24.4680849Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4680972Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4681159Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4681273Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4681372Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4681474Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4681561Z                 simulation=sim,
2025-01-24T14:29:24.4681637Z             )
2025-01-24T14:29:24.4681976Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4681982Z 
2025-01-24T14:29:24.4682163Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4682372Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl3] __
2025-01-24T14:29:24.4682377Z 
2025-01-24T14:29:24.4682587Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4682591Z 
2025-01-24T14:29:24.4682688Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4682780Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4682857Z         """
2025-01-24T14:29:24.4683007Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4683082Z     
2025-01-24T14:29:24.4683161Z         Parameters:
2025-01-24T14:29:24.4683246Z         -----------
2025-01-24T14:29:24.4683361Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4683434Z     
2025-01-24T14:29:24.4683507Z         Returns:
2025-01-24T14:29:24.4683587Z         --------
2025-01-24T14:29:24.4683676Z         An LIVPlotter instance.
2025-01-24T14:29:24.4683865Z         """
2025-01-24T14:29:24.4684002Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4684008Z 
2025-01-24T14:29:24.4684145Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4684263Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4684422Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4684573Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4684786Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4684928Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4685114Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4685122Z 
2025-01-24T14:29:24.4685339Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4685517Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4685599Z packets_mode = 'real'
2025-01-24T14:29:24.4685603Z 
2025-01-24T14:29:24.4685680Z     @classmethod
2025-01-24T14:29:24.4685794Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4685870Z         """
2025-01-24T14:29:24.4686065Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4686140Z     
2025-01-24T14:29:24.4686215Z         Parameters
2025-01-24T14:29:24.4686294Z         ----------
2025-01-24T14:29:24.4686394Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4686547Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4686643Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4686786Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4686864Z     
2025-01-24T14:29:24.4686939Z         Returns
2025-01-24T14:29:24.4687018Z         -------
2025-01-24T14:29:24.4687111Z         SimulationPacketData
2025-01-24T14:29:24.4687186Z         """
2025-01-24T14:29:24.4687291Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4687378Z             raise ValueError(
2025-01-24T14:29:24.4687496Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4687603Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4687673Z             )
2025-01-24T14:29:24.4687783Z         # Properties common among both packet modes
2025-01-24T14:29:24.4687944Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4688024Z             "line_id"
2025-01-24T14:29:24.4688097Z         )
2025-01-24T14:29:24.4688209Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4688433Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4688523Z         time_of_simulation = (
2025-01-24T14:29:24.4688681Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4688754Z         )
2025-01-24T14:29:24.4688828Z     
2025-01-24T14:29:24.4688906Z         spectrum = (
2025-01-24T14:29:24.4689025Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4689116Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4689237Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4689307Z         )
2025-01-24T14:29:24.4689380Z     
2025-01-24T14:29:24.4689468Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4689602Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4689678Z             return cls(
2025-01-24T14:29:24.4689841Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4690018Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4690199Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4690491Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4690639Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4690727Z                 lines_df=lines_df,
2025-01-24T14:29:24.4690856Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4691015Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4691143Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4691262Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4691448Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4691683Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4691785Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4691889Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4691977Z                 simulation=sim,
2025-01-24T14:29:24.4692054Z             )
2025-01-24T14:29:24.4692141Z         else: # real packets
2025-01-24T14:29:24.4692306Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4692395Z             # which got emitted
2025-01-24T14:29:24.4692502Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4692585Z >           return cls(
2025-01-24T14:29:24.4692759Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4692947Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4693026Z                     mask
2025-01-24T14:29:24.4693106Z                 ],
2025-01-24T14:29:24.4693295Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4693377Z                     mask
2025-01-24T14:29:24.4693453Z                 ],
2025-01-24T14:29:24.4693624Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4693703Z                     mask
2025-01-24T14:29:24.4693774Z                 ],
2025-01-24T14:29:24.4693944Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4694026Z                 lines_df=lines_df,
2025-01-24T14:29:24.4694194Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4694366Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4694444Z                     mask
2025-01-24T14:29:24.4694516Z                 ],
2025-01-24T14:29:24.4694647Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4694761Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4694954Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4695069Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4695179Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4695281Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4695362Z                 simulation=sim,
2025-01-24T14:29:24.4695438Z             )
2025-01-24T14:29:24.4695775Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4695781Z 
2025-01-24T14:29:24.4695957Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4696158Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl4] __
2025-01-24T14:29:24.4696166Z 
2025-01-24T14:29:24.4696382Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4696387Z 
2025-01-24T14:29:24.4696486Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4696578Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4696741Z         """
2025-01-24T14:29:24.4696892Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4696966Z     
2025-01-24T14:29:24.4697041Z         Parameters:
2025-01-24T14:29:24.4697121Z         -----------
2025-01-24T14:29:24.4697237Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4697310Z     
2025-01-24T14:29:24.4697382Z         Returns:
2025-01-24T14:29:24.4697460Z         --------
2025-01-24T14:29:24.4697544Z         An LIVPlotter instance.
2025-01-24T14:29:24.4697619Z         """
2025-01-24T14:29:24.4697748Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4697753Z 
2025-01-24T14:29:24.4697974Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4698087Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4698347Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4698503Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4698718Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4698856Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4698964Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4698968Z 
2025-01-24T14:29:24.4699186Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4699353Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4699438Z packets_mode = 'real'
2025-01-24T14:29:24.4699443Z 
2025-01-24T14:29:24.4699526Z     @classmethod
2025-01-24T14:29:24.4699636Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4699710Z         """
2025-01-24T14:29:24.4699903Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4699977Z     
2025-01-24T14:29:24.4700055Z         Parameters
2025-01-24T14:29:24.4700134Z         ----------
2025-01-24T14:29:24.4700233Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4700385Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4700480Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4700622Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4700693Z     
2025-01-24T14:29:24.4700771Z         Returns
2025-01-24T14:29:24.4700846Z         -------
2025-01-24T14:29:24.4700937Z         SimulationPacketData
2025-01-24T14:29:24.4701008Z         """
2025-01-24T14:29:24.4701116Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4701207Z             raise ValueError(
2025-01-24T14:29:24.4701324Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4701432Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4701502Z             )
2025-01-24T14:29:24.4701614Z         # Properties common among both packet modes
2025-01-24T14:29:24.4701772Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4701851Z             "line_id"
2025-01-24T14:29:24.4701920Z         )
2025-01-24T14:29:24.4702034Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4702158Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4702247Z         time_of_simulation = (
2025-01-24T14:29:24.4702400Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4702476Z         )
2025-01-24T14:29:24.4702544Z     
2025-01-24T14:29:24.4702625Z         spectrum = (
2025-01-24T14:29:24.4702740Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4702835Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4702957Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4703028Z         )
2025-01-24T14:29:24.4703101Z     
2025-01-24T14:29:24.4703312Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4703440Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4703515Z             return cls(
2025-01-24T14:29:24.4703675Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4703846Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4704026Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4704191Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4704344Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4704558Z                 lines_df=lines_df,
2025-01-24T14:29:24.4704685Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4704843Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4704974Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4705094Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4705280Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4705392Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4705491Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4705591Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4705673Z                 simulation=sim,
2025-01-24T14:29:24.4705748Z             )
2025-01-24T14:29:24.4705830Z         else: # real packets
2025-01-24T14:29:24.4706005Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4706091Z             # which got emitted
2025-01-24T14:29:24.4706198Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4706281Z >           return cls(
2025-01-24T14:29:24.4706457Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4706645Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4706720Z                     mask
2025-01-24T14:29:24.4706798Z                 ],
2025-01-24T14:29:24.4706986Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4707065Z                     mask
2025-01-24T14:29:24.4707136Z                 ],
2025-01-24T14:29:24.4707307Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4707380Z                     mask
2025-01-24T14:29:24.4707458Z                 ],
2025-01-24T14:29:24.4707622Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4707709Z                 lines_df=lines_df,
2025-01-24T14:29:24.4707873Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4708056Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4708142Z                     mask
2025-01-24T14:29:24.4708217Z                 ],
2025-01-24T14:29:24.4708471Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4708590Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4708784Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4708894Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4709001Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4709101Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4709187Z                 simulation=sim,
2025-01-24T14:29:24.4709264Z             )
2025-01-24T14:29:24.4709598Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4709721Z 
2025-01-24T14:29:24.4709899Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4710106Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl5] __
2025-01-24T14:29:24.4710112Z 
2025-01-24T14:29:24.4710324Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4710329Z 
2025-01-24T14:29:24.4710418Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4710514Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4710586Z         """
2025-01-24T14:29:24.4710743Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4710819Z     
2025-01-24T14:29:24.4711003Z         Parameters:
2025-01-24T14:29:24.4711081Z         -----------
2025-01-24T14:29:24.4711201Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4711276Z     
2025-01-24T14:29:24.4711350Z         Returns:
2025-01-24T14:29:24.4711428Z         --------
2025-01-24T14:29:24.4711516Z         An LIVPlotter instance.
2025-01-24T14:29:24.4711591Z         """
2025-01-24T14:29:24.4711722Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4711728Z 
2025-01-24T14:29:24.4711869Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4711979Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4712143Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4712291Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4712509Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4712651Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4712765Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4712770Z 
2025-01-24T14:29:24.4712991Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4713163Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4713248Z packets_mode = 'real'
2025-01-24T14:29:24.4713253Z 
2025-01-24T14:29:24.4713326Z     @classmethod
2025-01-24T14:29:24.4713442Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4713512Z         """
2025-01-24T14:29:24.4713710Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4713780Z     
2025-01-24T14:29:24.4713860Z         Parameters
2025-01-24T14:29:24.4713937Z         ----------
2025-01-24T14:29:24.4714037Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4714192Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4714288Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4714429Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4714501Z     
2025-01-24T14:29:24.4714576Z         Returns
2025-01-24T14:29:24.4714652Z         -------
2025-01-24T14:29:24.4714747Z         SimulationPacketData
2025-01-24T14:29:24.4714818Z         """
2025-01-24T14:29:24.4714927Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4715009Z             raise ValueError(
2025-01-24T14:29:24.4715131Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4715244Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4715320Z             )
2025-01-24T14:29:24.4715426Z         # Properties common among both packet modes
2025-01-24T14:29:24.4715591Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4715677Z             "line_id"
2025-01-24T14:29:24.4715749Z         )
2025-01-24T14:29:24.4715862Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4715986Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4716074Z         time_of_simulation = (
2025-01-24T14:29:24.4716316Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4716392Z         )
2025-01-24T14:29:24.4716460Z     
2025-01-24T14:29:24.4716544Z         spectrum = (
2025-01-24T14:29:24.4716657Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4716751Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4716866Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4716945Z         )
2025-01-24T14:29:24.4717014Z     
2025-01-24T14:29:24.4717108Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4717233Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4717309Z             return cls(
2025-01-24T14:29:24.4717544Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4717716Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4717896Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4718065Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4718320Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4718404Z                 lines_df=lines_df,
2025-01-24T14:29:24.4718537Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4718690Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4718820Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4718941Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4719135Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4719249Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4719352Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4719456Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4719536Z                 simulation=sim,
2025-01-24T14:29:24.4719612Z             )
2025-01-24T14:29:24.4719694Z         else: # real packets
2025-01-24T14:29:24.4719864Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4719943Z             # which got emitted
2025-01-24T14:29:24.4720053Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4720129Z >           return cls(
2025-01-24T14:29:24.4720308Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4720496Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4720574Z                     mask
2025-01-24T14:29:24.4720648Z                 ],
2025-01-24T14:29:24.4720834Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4720912Z                     mask
2025-01-24T14:29:24.4720987Z                 ],
2025-01-24T14:29:24.4721158Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4721231Z                     mask
2025-01-24T14:29:24.4721307Z                 ],
2025-01-24T14:29:24.4721473Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4721563Z                 lines_df=lines_df,
2025-01-24T14:29:24.4721724Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4721901Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4721980Z                     mask
2025-01-24T14:29:24.4722055Z                 ],
2025-01-24T14:29:24.4722187Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4722302Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4722495Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4722722Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4722827Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4722922Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4723007Z                 simulation=sim,
2025-01-24T14:29:24.4723077Z             )
2025-01-24T14:29:24.4723412Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4723418Z 
2025-01-24T14:29:24.4723588Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4723798Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl6] __
2025-01-24T14:29:24.4723906Z 
2025-01-24T14:29:24.4724123Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4724128Z 
2025-01-24T14:29:24.4724216Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4724315Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4724386Z         """
2025-01-24T14:29:24.4724539Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4724609Z     
2025-01-24T14:29:24.4724693Z         Parameters:
2025-01-24T14:29:24.4724768Z         -----------
2025-01-24T14:29:24.4724888Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4724958Z     
2025-01-24T14:29:24.4725036Z         Returns:
2025-01-24T14:29:24.4725110Z         --------
2025-01-24T14:29:24.4725199Z         An LIVPlotter instance.
2025-01-24T14:29:24.4725275Z         """
2025-01-24T14:29:24.4725410Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4725418Z 
2025-01-24T14:29:24.4725559Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4725669Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4725831Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4725981Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4726195Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4726327Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4726438Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4726442Z 
2025-01-24T14:29:24.4726661Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4726829Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4726917Z packets_mode = 'real'
2025-01-24T14:29:24.4726925Z 
2025-01-24T14:29:24.4726999Z     @classmethod
2025-01-24T14:29:24.4727112Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4727182Z         """
2025-01-24T14:29:24.4727378Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4727452Z     
2025-01-24T14:29:24.4727532Z         Parameters
2025-01-24T14:29:24.4727606Z         ----------
2025-01-24T14:29:24.4727710Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4727856Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4727953Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4728092Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4728168Z     
2025-01-24T14:29:24.4728343Z         Returns
2025-01-24T14:29:24.4728418Z         -------
2025-01-24T14:29:24.4728511Z         SimulationPacketData
2025-01-24T14:29:24.4728581Z         """
2025-01-24T14:29:24.4728691Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4728776Z             raise ValueError(
2025-01-24T14:29:24.4728898Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4729002Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4729215Z             )
2025-01-24T14:29:24.4729346Z         # Properties common among both packet modes
2025-01-24T14:29:24.4729512Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4729587Z             "line_id"
2025-01-24T14:29:24.4729665Z         )
2025-01-24T14:29:24.4729772Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4729900Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4729989Z         time_of_simulation = (
2025-01-24T14:29:24.4730141Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4730216Z         )
2025-01-24T14:29:24.4730285Z     
2025-01-24T14:29:24.4730477Z         spectrum = (
2025-01-24T14:29:24.4730596Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4730688Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4730807Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4730882Z         )
2025-01-24T14:29:24.4730957Z     
2025-01-24T14:29:24.4731050Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4731171Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4731256Z             return cls(
2025-01-24T14:29:24.4731410Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4731585Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4731765Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4731929Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4732087Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4732170Z                 lines_df=lines_df,
2025-01-24T14:29:24.4732300Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4732452Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4732586Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4732701Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4732893Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4733002Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4733109Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4733208Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4733288Z                 simulation=sim,
2025-01-24T14:29:24.4733362Z             )
2025-01-24T14:29:24.4733445Z         else: # real packets
2025-01-24T14:29:24.4733611Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4733691Z             # which got emitted
2025-01-24T14:29:24.4733801Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4733881Z >           return cls(
2025-01-24T14:29:24.4734059Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4734240Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4734319Z                     mask
2025-01-24T14:29:24.4734391Z                 ],
2025-01-24T14:29:24.4734585Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4734659Z                     mask
2025-01-24T14:29:24.4734734Z                 ],
2025-01-24T14:29:24.4734904Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4734980Z                     mask
2025-01-24T14:29:24.4735054Z                 ],
2025-01-24T14:29:24.4735216Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4735302Z                 lines_df=lines_df,
2025-01-24T14:29:24.4735462Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4735733Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4735807Z                     mask
2025-01-24T14:29:24.4735881Z                 ],
2025-01-24T14:29:24.4736007Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4736124Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4736308Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4736422Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4736528Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4736703Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4736788Z                 simulation=sim,
2025-01-24T14:29:24.4736858Z             )
2025-01-24T14:29:24.4737194Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4737202Z 
2025-01-24T14:29:24.4737372Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4737580Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl7] __
2025-01-24T14:29:24.4737585Z 
2025-01-24T14:29:24.4737793Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4737802Z 
2025-01-24T14:29:24.4737893Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4737990Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4738062Z         """
2025-01-24T14:29:24.4738214Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4738384Z     
2025-01-24T14:29:24.4738465Z         Parameters:
2025-01-24T14:29:24.4738538Z         -----------
2025-01-24T14:29:24.4738659Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4738729Z     
2025-01-24T14:29:24.4738805Z         Returns:
2025-01-24T14:29:24.4738881Z         --------
2025-01-24T14:29:24.4738970Z         An LIVPlotter instance.
2025-01-24T14:29:24.4739039Z         """
2025-01-24T14:29:24.4739177Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4739181Z 
2025-01-24T14:29:24.4739317Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4739437Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4739607Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4739756Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4739976Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4740113Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4740226Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4740230Z 
2025-01-24T14:29:24.4740445Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4740624Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4740707Z packets_mode = 'real'
2025-01-24T14:29:24.4740711Z 
2025-01-24T14:29:24.4740788Z     @classmethod
2025-01-24T14:29:24.4740904Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4740976Z         """
2025-01-24T14:29:24.4741179Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4741248Z     
2025-01-24T14:29:24.4741328Z         Parameters
2025-01-24T14:29:24.4741400Z         ----------
2025-01-24T14:29:24.4741507Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4741659Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4741754Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4741892Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4742087Z     
2025-01-24T14:29:24.4742159Z         Returns
2025-01-24T14:29:24.4742237Z         -------
2025-01-24T14:29:24.4742325Z         SimulationPacketData
2025-01-24T14:29:24.4742400Z         """
2025-01-24T14:29:24.4742507Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4742597Z             raise ValueError(
2025-01-24T14:29:24.4742722Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4742828Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4742903Z             )
2025-01-24T14:29:24.4743011Z         # Properties common among both packet modes
2025-01-24T14:29:24.4743180Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4743362Z             "line_id"
2025-01-24T14:29:24.4743436Z         )
2025-01-24T14:29:24.4743545Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4743674Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4743762Z         time_of_simulation = (
2025-01-24T14:29:24.4743924Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4743995Z         )
2025-01-24T14:29:24.4744068Z     
2025-01-24T14:29:24.4744144Z         spectrum = (
2025-01-24T14:29:24.4744267Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4744362Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4744481Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4744557Z         )
2025-01-24T14:29:24.4744627Z     
2025-01-24T14:29:24.4744720Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4744842Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4744927Z             return cls(
2025-01-24T14:29:24.4745084Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4745264Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4745446Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4745618Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4745769Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4745856Z                 lines_df=lines_df,
2025-01-24T14:29:24.4745989Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4746143Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4746276Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4746391Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4746588Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4746695Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4746802Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4746902Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4746990Z                 simulation=sim,
2025-01-24T14:29:24.4747062Z             )
2025-01-24T14:29:24.4747149Z         else: # real packets
2025-01-24T14:29:24.4747315Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4747400Z             # which got emitted
2025-01-24T14:29:24.4747510Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4747586Z >           return cls(
2025-01-24T14:29:24.4747764Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4747948Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4748030Z                     mask
2025-01-24T14:29:24.4748101Z                 ],
2025-01-24T14:29:24.4748399Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4748594Z                     mask
2025-01-24T14:29:24.4748672Z                 ],
2025-01-24T14:29:24.4748840Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4748918Z                     mask
2025-01-24T14:29:24.4748988Z                 ],
2025-01-24T14:29:24.4749158Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4749246Z                 lines_df=lines_df,
2025-01-24T14:29:24.4749410Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4749588Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4749768Z                     mask
2025-01-24T14:29:24.4749842Z                 ],
2025-01-24T14:29:24.4749972Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4750092Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4750283Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4750397Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4750497Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4750597Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4750682Z                 simulation=sim,
2025-01-24T14:29:24.4750758Z             )
2025-01-24T14:29:24.4751101Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4751107Z 
2025-01-24T14:29:24.4751283Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4751517Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _
2025-01-24T14:29:24.4751522Z 
2025-01-24T14:29:24.4751734Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4751739Z 
2025-01-24T14:29:24.4751838Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4751930Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4752007Z         """
2025-01-24T14:29:24.4752157Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4752233Z     
2025-01-24T14:29:24.4752314Z         Parameters:
2025-01-24T14:29:24.4752390Z         -----------
2025-01-24T14:29:24.4752510Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4752581Z     
2025-01-24T14:29:24.4752663Z         Returns:
2025-01-24T14:29:24.4752737Z         --------
2025-01-24T14:29:24.4752825Z         An LIVPlotter instance.
2025-01-24T14:29:24.4752894Z         """
2025-01-24T14:29:24.4753037Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4753042Z 
2025-01-24T14:29:24.4753178Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4753297Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4753457Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4753610Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4753821Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4753961Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4754073Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4754078Z 
2025-01-24T14:29:24.4754292Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4754464Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4754549Z packets_mode = 'real'
2025-01-24T14:29:24.4754554Z 
2025-01-24T14:29:24.4754631Z     @classmethod
2025-01-24T14:29:24.4754741Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4754816Z         """
2025-01-24T14:29:24.4755008Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4755193Z     
2025-01-24T14:29:24.4755271Z         Parameters
2025-01-24T14:29:24.4755350Z         ----------
2025-01-24T14:29:24.4755454Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4755602Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4755697Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4755833Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4755909Z     
2025-01-24T14:29:24.4755979Z         Returns
2025-01-24T14:29:24.4756055Z         -------
2025-01-24T14:29:24.4756142Z         SimulationPacketData
2025-01-24T14:29:24.4756309Z         """
2025-01-24T14:29:24.4756414Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4756502Z             raise ValueError(
2025-01-24T14:29:24.4756619Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4756740Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4756814Z             )
2025-01-24T14:29:24.4756924Z         # Properties common among both packet modes
2025-01-24T14:29:24.4757091Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4757165Z             "line_id"
2025-01-24T14:29:24.4757241Z         )
2025-01-24T14:29:24.4757349Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4757478Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4757560Z         time_of_simulation = (
2025-01-24T14:29:24.4757720Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4757791Z         )
2025-01-24T14:29:24.4757867Z     
2025-01-24T14:29:24.4757945Z         spectrum = (
2025-01-24T14:29:24.4758064Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4758153Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4758376Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4758451Z         )
2025-01-24T14:29:24.4758524Z     
2025-01-24T14:29:24.4758613Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4758741Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4758819Z             return cls(
2025-01-24T14:29:24.4758975Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4759150Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4759326Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4759496Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4759649Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4759735Z                 lines_df=lines_df,
2025-01-24T14:29:24.4759860Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4760022Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4760150Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4760270Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4760461Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4760575Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4760680Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4760776Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4760859Z                 simulation=sim,
2025-01-24T14:29:24.4760931Z             )
2025-01-24T14:29:24.4761018Z         else: # real packets
2025-01-24T14:29:24.4761184Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4761271Z             # which got emitted
2025-01-24T14:29:24.4761376Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4761576Z >           return cls(
2025-01-24T14:29:24.4761750Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4761939Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4762020Z                     mask
2025-01-24T14:29:24.4762090Z                 ],
2025-01-24T14:29:24.4762284Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4762358Z                     mask
2025-01-24T14:29:24.4762433Z                 ],
2025-01-24T14:29:24.4762597Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4762785Z                     mask
2025-01-24T14:29:24.4762855Z                 ],
2025-01-24T14:29:24.4763026Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4763109Z                 lines_df=lines_df,
2025-01-24T14:29:24.4763284Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4763457Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4763536Z                     mask
2025-01-24T14:29:24.4763611Z                 ],
2025-01-24T14:29:24.4763738Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4763857Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4764042Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4764155Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4764258Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4764356Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4764437Z                 simulation=sim,
2025-01-24T14:29:24.4764512Z             )
2025-01-24T14:29:24.4764846Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4764855Z 
2025-01-24T14:29:24.4765035Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4765267Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _
2025-01-24T14:29:24.4765272Z 
2025-01-24T14:29:24.4765484Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4765489Z 
2025-01-24T14:29:24.4765583Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4765676Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4765752Z         """
2025-01-24T14:29:24.4765906Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4765982Z     
2025-01-24T14:29:24.4766058Z         Parameters:
2025-01-24T14:29:24.4766138Z         -----------
2025-01-24T14:29:24.4766253Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4766332Z     
2025-01-24T14:29:24.4766404Z         Returns:
2025-01-24T14:29:24.4766484Z         --------
2025-01-24T14:29:24.4766569Z         An LIVPlotter instance.
2025-01-24T14:29:24.4766645Z         """
2025-01-24T14:29:24.4766783Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4766788Z 
2025-01-24T14:29:24.4766924Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4767040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4767197Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4767350Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4767564Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4767704Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4767817Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4767907Z 
2025-01-24T14:29:24.4768133Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4768397Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4768484Z packets_mode = 'real'
2025-01-24T14:29:24.4768489Z 
2025-01-24T14:29:24.4768567Z     @classmethod
2025-01-24T14:29:24.4768676Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4768749Z         """
2025-01-24T14:29:24.4768941Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4769018Z     
2025-01-24T14:29:24.4769093Z         Parameters
2025-01-24T14:29:24.4769173Z         ----------
2025-01-24T14:29:24.4769389Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4769543Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4769634Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4769775Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4769855Z     
2025-01-24T14:29:24.4769926Z         Returns
2025-01-24T14:29:24.4770003Z         -------
2025-01-24T14:29:24.4770089Z         SimulationPacketData
2025-01-24T14:29:24.4770165Z         """
2025-01-24T14:29:24.4770269Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4770356Z             raise ValueError(
2025-01-24T14:29:24.4770474Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4770583Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4770653Z             )
2025-01-24T14:29:24.4770763Z         # Properties common among both packet modes
2025-01-24T14:29:24.4770926Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4771005Z             "line_id"
2025-01-24T14:29:24.4771075Z         )
2025-01-24T14:29:24.4771198Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4771322Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4771417Z         time_of_simulation = (
2025-01-24T14:29:24.4771577Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4771648Z         )
2025-01-24T14:29:24.4771723Z     
2025-01-24T14:29:24.4771800Z         spectrum = (
2025-01-24T14:29:24.4771920Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4772010Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4772132Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4772204Z         )
2025-01-24T14:29:24.4772278Z     
2025-01-24T14:29:24.4772366Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4772495Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4772572Z             return cls(
2025-01-24T14:29:24.4772736Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4772907Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4773095Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4773265Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4773415Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4773503Z                 lines_df=lines_df,
2025-01-24T14:29:24.4773630Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4773787Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4773916Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4774039Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4774225Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4774339Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4774565Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4774667Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4774753Z                 simulation=sim,
2025-01-24T14:29:24.4774825Z             )
2025-01-24T14:29:24.4774911Z         else: # real packets
2025-01-24T14:29:24.4775075Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4775161Z             # which got emitted
2025-01-24T14:29:24.4775267Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4775350Z >           return cls(
2025-01-24T14:29:24.4775521Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4775803Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4775877Z                     mask
2025-01-24T14:29:24.4775953Z                 ],
2025-01-24T14:29:24.4776140Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4776224Z                     mask
2025-01-24T14:29:24.4776300Z                 ],
2025-01-24T14:29:24.4776467Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4776545Z                     mask
2025-01-24T14:29:24.4776616Z                 ],
2025-01-24T14:29:24.4776784Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4776868Z                 lines_df=lines_df,
2025-01-24T14:29:24.4777034Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4777207Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4777290Z                     mask
2025-01-24T14:29:24.4777360Z                 ],
2025-01-24T14:29:24.4777492Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4777605Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4777800Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4777912Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4778011Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4778113Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4778194Z                 simulation=sim,
2025-01-24T14:29:24.4778370Z             )
2025-01-24T14:29:24.4778705Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4778711Z 
2025-01-24T14:29:24.4778886Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4786524Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply2] _
2025-01-24T14:29:24.4786541Z 
2025-01-24T14:29:24.4786804Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4786817Z 
2025-01-24T14:29:24.4786925Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4787023Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4787104Z         """
2025-01-24T14:29:24.4787268Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4787345Z     
2025-01-24T14:29:24.4787425Z         Parameters:
2025-01-24T14:29:24.4787507Z         -----------
2025-01-24T14:29:24.4787635Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4787710Z     
2025-01-24T14:29:24.4787789Z         Returns:
2025-01-24T14:29:24.4787864Z         --------
2025-01-24T14:29:24.4787957Z         An LIVPlotter instance.
2025-01-24T14:29:24.4788032Z         """
2025-01-24T14:29:24.4788178Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4788183Z 
2025-01-24T14:29:24.4788477Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4788606Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4788942Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4789101Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4789322Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4789464Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4789576Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4789586Z 
2025-01-24T14:29:24.4789803Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4789978Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4790171Z packets_mode = 'real'
2025-01-24T14:29:24.4790176Z 
2025-01-24T14:29:24.4790258Z     @classmethod
2025-01-24T14:29:24.4790373Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4790452Z         """
2025-01-24T14:29:24.4790656Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4790733Z     
2025-01-24T14:29:24.4790811Z         Parameters
2025-01-24T14:29:24.4790892Z         ----------
2025-01-24T14:29:24.4790993Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4791150Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4791246Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4791393Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4791469Z     
2025-01-24T14:29:24.4791541Z         Returns
2025-01-24T14:29:24.4791622Z         -------
2025-01-24T14:29:24.4791716Z         SimulationPacketData
2025-01-24T14:29:24.4791791Z         """
2025-01-24T14:29:24.4791899Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4791989Z             raise ValueError(
2025-01-24T14:29:24.4792109Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4792228Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4792299Z             )
2025-01-24T14:29:24.4792413Z         # Properties common among both packet modes
2025-01-24T14:29:24.4792577Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4792659Z             "line_id"
2025-01-24T14:29:24.4792730Z         )
2025-01-24T14:29:24.4792849Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4792985Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4793069Z         time_of_simulation = (
2025-01-24T14:29:24.4793233Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4793308Z         )
2025-01-24T14:29:24.4793383Z     
2025-01-24T14:29:24.4793461Z         spectrum = (
2025-01-24T14:29:24.4793580Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4793672Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4793800Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4793874Z         )
2025-01-24T14:29:24.4793950Z     
2025-01-24T14:29:24.4794040Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4794171Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4794249Z             return cls(
2025-01-24T14:29:24.4794415Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4794594Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4794777Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4794955Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4795106Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4795196Z                 lines_df=lines_df,
2025-01-24T14:29:24.4795326Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4795582Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4795714Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4795835Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4796024Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4796140Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4796248Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4796346Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4796510Z                 simulation=sim,
2025-01-24T14:29:24.4796581Z             )
2025-01-24T14:29:24.4796670Z         else: # real packets
2025-01-24T14:29:24.4796839Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4796923Z             # which got emitted
2025-01-24T14:29:24.4797035Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4797114Z >           return cls(
2025-01-24T14:29:24.4797297Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4797483Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4797565Z                     mask
2025-01-24T14:29:24.4797636Z                 ],
2025-01-24T14:29:24.4797830Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4797903Z                     mask
2025-01-24T14:29:24.4797979Z                 ],
2025-01-24T14:29:24.4798149Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4798413Z                     mask
2025-01-24T14:29:24.4798489Z                 ],
2025-01-24T14:29:24.4798654Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4798762Z                 lines_df=lines_df,
2025-01-24T14:29:24.4798930Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4799111Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4799186Z                     mask
2025-01-24T14:29:24.4799262Z                 ],
2025-01-24T14:29:24.4799390Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4799511Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4799697Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4799811Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4799920Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4800018Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4800102Z                 simulation=sim,
2025-01-24T14:29:24.4800176Z             )
2025-01-24T14:29:24.4800516Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4800523Z 
2025-01-24T14:29:24.4800697Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4800931Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply3] _
2025-01-24T14:29:24.4800938Z 
2025-01-24T14:29:24.4801156Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4801160Z 
2025-01-24T14:29:24.4801258Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4801355Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4801430Z         """
2025-01-24T14:29:24.4801590Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4801662Z     
2025-01-24T14:29:24.4801747Z         Parameters:
2025-01-24T14:29:24.4801824Z         -----------
2025-01-24T14:29:24.4801951Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4802143Z     
2025-01-24T14:29:24.4802220Z         Returns:
2025-01-24T14:29:24.4802294Z         --------
2025-01-24T14:29:24.4802384Z         An LIVPlotter instance.
2025-01-24T14:29:24.4802456Z         """
2025-01-24T14:29:24.4802594Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4802600Z 
2025-01-24T14:29:24.4802738Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4802857Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4803020Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4803166Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4803490Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4803624Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4803739Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4803747Z 
2025-01-24T14:29:24.4803964Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4804142Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4804226Z packets_mode = 'real'
2025-01-24T14:29:24.4804230Z 
2025-01-24T14:29:24.4804309Z     @classmethod
2025-01-24T14:29:24.4804420Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4804495Z         """
2025-01-24T14:29:24.4804698Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4804768Z     
2025-01-24T14:29:24.4804847Z         Parameters
2025-01-24T14:29:24.4804924Z         ----------
2025-01-24T14:29:24.4805029Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4805179Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4805277Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4805420Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4805497Z     
2025-01-24T14:29:24.4805567Z         Returns
2025-01-24T14:29:24.4805645Z         -------
2025-01-24T14:29:24.4805735Z         SimulationPacketData
2025-01-24T14:29:24.4805813Z         """
2025-01-24T14:29:24.4805920Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4806008Z             raise ValueError(
2025-01-24T14:29:24.4806130Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4806242Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4806320Z             )
2025-01-24T14:29:24.4806425Z         # Properties common among both packet modes
2025-01-24T14:29:24.4806591Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4806667Z             "line_id"
2025-01-24T14:29:24.4806744Z         )
2025-01-24T14:29:24.4806854Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4806986Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4807070Z         time_of_simulation = (
2025-01-24T14:29:24.4807231Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4807301Z         )
2025-01-24T14:29:24.4807376Z     
2025-01-24T14:29:24.4807452Z         spectrum = (
2025-01-24T14:29:24.4807573Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4807661Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4807785Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4807861Z         )
2025-01-24T14:29:24.4807932Z     
2025-01-24T14:29:24.4808027Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4808154Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4808335Z             return cls(
2025-01-24T14:29:24.4808495Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4808794Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4808973Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4809143Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4809295Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4809384Z                 lines_df=lines_df,
2025-01-24T14:29:24.4809515Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4809675Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4809938Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4810055Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4810247Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4810359Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4810466Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4810563Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4810649Z                 simulation=sim,
2025-01-24T14:29:24.4810719Z             )
2025-01-24T14:29:24.4810807Z         else: # real packets
2025-01-24T14:29:24.4810970Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4811056Z             # which got emitted
2025-01-24T14:29:24.4811162Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4811244Z >           return cls(
2025-01-24T14:29:24.4811424Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4811612Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4811692Z                     mask
2025-01-24T14:29:24.4811763Z                 ],
2025-01-24T14:29:24.4811962Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4812038Z                     mask
2025-01-24T14:29:24.4812113Z                 ],
2025-01-24T14:29:24.4812279Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4812358Z                     mask
2025-01-24T14:29:24.4812427Z                 ],
2025-01-24T14:29:24.4812599Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4812682Z                 lines_df=lines_df,
2025-01-24T14:29:24.4812852Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4813038Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4813112Z                     mask
2025-01-24T14:29:24.4813189Z                 ],
2025-01-24T14:29:24.4813317Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4813441Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4813629Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4813740Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4813841Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4813945Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4814026Z                 simulation=sim,
2025-01-24T14:29:24.4814103Z             )
2025-01-24T14:29:24.4814441Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4814454Z 
2025-01-24T14:29:24.4814628Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4814860Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _
2025-01-24T14:29:24.4814866Z 
2025-01-24T14:29:24.4815083Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4815194Z 
2025-01-24T14:29:24.4815299Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4815391Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4815467Z         """
2025-01-24T14:29:24.4815621Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4815697Z     
2025-01-24T14:29:24.4815777Z         Parameters:
2025-01-24T14:29:24.4815857Z         -----------
2025-01-24T14:29:24.4815981Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4816051Z     
2025-01-24T14:29:24.4816128Z         Returns:
2025-01-24T14:29:24.4816201Z         --------
2025-01-24T14:29:24.4816374Z         An LIVPlotter instance.
2025-01-24T14:29:24.4816444Z         """
2025-01-24T14:29:24.4816584Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4816589Z 
2025-01-24T14:29:24.4816724Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4816849Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4817007Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4817162Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4817377Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4817517Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4817631Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4817635Z 
2025-01-24T14:29:24.4817850Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4818026Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4818109Z packets_mode = 'real'
2025-01-24T14:29:24.4818114Z 
2025-01-24T14:29:24.4818194Z     @classmethod
2025-01-24T14:29:24.4818413Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4818494Z         """
2025-01-24T14:29:24.4818688Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4818763Z     
2025-01-24T14:29:24.4818838Z         Parameters
2025-01-24T14:29:24.4818917Z         ----------
2025-01-24T14:29:24.4819019Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4819174Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4819271Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4819410Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4819486Z     
2025-01-24T14:29:24.4819558Z         Returns
2025-01-24T14:29:24.4819638Z         -------
2025-01-24T14:29:24.4819725Z         SimulationPacketData
2025-01-24T14:29:24.4819801Z         """
2025-01-24T14:29:24.4819907Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4819999Z             raise ValueError(
2025-01-24T14:29:24.4820124Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4820228Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4820306Z             )
2025-01-24T14:29:24.4820411Z         # Properties common among both packet modes
2025-01-24T14:29:24.4820575Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4820650Z             "line_id"
2025-01-24T14:29:24.4820726Z         )
2025-01-24T14:29:24.4820834Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4820962Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4821047Z         time_of_simulation = (
2025-01-24T14:29:24.4821210Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4821286Z         )
2025-01-24T14:29:24.4821355Z     
2025-01-24T14:29:24.4821436Z         spectrum = (
2025-01-24T14:29:24.4821548Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4821762Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4821878Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4821951Z         )
2025-01-24T14:29:24.4822020Z     
2025-01-24T14:29:24.4822116Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4822236Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4822315Z             return cls(
2025-01-24T14:29:24.4822470Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4822644Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4822819Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4823098Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4823252Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4823334Z                 lines_df=lines_df,
2025-01-24T14:29:24.4823470Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4823623Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4823757Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4823870Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4824063Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4824170Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4824276Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4824370Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4824461Z                 simulation=sim,
2025-01-24T14:29:24.4824536Z             )
2025-01-24T14:29:24.4824617Z         else: # real packets
2025-01-24T14:29:24.4824783Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4824866Z             # which got emitted
2025-01-24T14:29:24.4824975Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4825052Z >           return cls(
2025-01-24T14:29:24.4825231Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4825414Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4825493Z                     mask
2025-01-24T14:29:24.4825563Z                 ],
2025-01-24T14:29:24.4825759Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4825833Z                     mask
2025-01-24T14:29:24.4825912Z                 ],
2025-01-24T14:29:24.4826081Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4826154Z                     mask
2025-01-24T14:29:24.4826229Z                 ],
2025-01-24T14:29:24.4826396Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4826487Z                 lines_df=lines_df,
2025-01-24T14:29:24.4826648Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4826828Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4826901Z                     mask
2025-01-24T14:29:24.4826977Z                 ],
2025-01-24T14:29:24.4827104Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4827222Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4827407Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4827523Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4827626Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4827720Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4827911Z                 simulation=sim,
2025-01-24T14:29:24.4827982Z             )
2025-01-24T14:29:24.4828422Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4828428Z 
2025-01-24T14:29:24.4828599Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4828831Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _
2025-01-24T14:29:24.4828836Z 
2025-01-24T14:29:24.4829052Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4829062Z 
2025-01-24T14:29:24.4829150Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4829386Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4829458Z         """
2025-01-24T14:29:24.4829614Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4829684Z     
2025-01-24T14:29:24.4829764Z         Parameters:
2025-01-24T14:29:24.4829842Z         -----------
2025-01-24T14:29:24.4829961Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4830030Z     
2025-01-24T14:29:24.4830105Z         Returns:
2025-01-24T14:29:24.4830177Z         --------
2025-01-24T14:29:24.4830265Z         An LIVPlotter instance.
2025-01-24T14:29:24.4830334Z         """
2025-01-24T14:29:24.4830469Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4830473Z 
2025-01-24T14:29:24.4830607Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4830723Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4830887Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4831036Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4831253Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4831383Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4831498Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4831502Z 
2025-01-24T14:29:24.4831716Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4831886Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4831969Z packets_mode = 'real'
2025-01-24T14:29:24.4831974Z 
2025-01-24T14:29:24.4832053Z     @classmethod
2025-01-24T14:29:24.4832167Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4832238Z         """
2025-01-24T14:29:24.4832434Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4832508Z     
2025-01-24T14:29:24.4832590Z         Parameters
2025-01-24T14:29:24.4832664Z         ----------
2025-01-24T14:29:24.4832768Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4832915Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4833014Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4833152Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4833227Z     
2025-01-24T14:29:24.4833299Z         Returns
2025-01-24T14:29:24.4833376Z         -------
2025-01-24T14:29:24.4833463Z         SimulationPacketData
2025-01-24T14:29:24.4833539Z         """
2025-01-24T14:29:24.4833643Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4833730Z             raise ValueError(
2025-01-24T14:29:24.4833850Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4833953Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4834035Z             )
2025-01-24T14:29:24.4834140Z         # Properties common among both packet modes
2025-01-24T14:29:24.4834302Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4834377Z             "line_id"
2025-01-24T14:29:24.4834453Z         )
2025-01-24T14:29:24.4834701Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4834828Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4834911Z         time_of_simulation = (
2025-01-24T14:29:24.4835068Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4835139Z         )
2025-01-24T14:29:24.4835213Z     
2025-01-24T14:29:24.4835288Z         spectrum = (
2025-01-24T14:29:24.4835405Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4835493Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4835616Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4835689Z         )
2025-01-24T14:29:24.4835842Z     
2025-01-24T14:29:24.4835934Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4836056Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4836136Z             return cls(
2025-01-24T14:29:24.4836289Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4836468Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4836646Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4836815Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4836963Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4837049Z                 lines_df=lines_df,
2025-01-24T14:29:24.4837181Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4837337Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4837475Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4837590Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4837782Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4837892Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4837998Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4838092Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4838177Z                 simulation=sim,
2025-01-24T14:29:24.4838351Z             )
2025-01-24T14:29:24.4838441Z         else: # real packets
2025-01-24T14:29:24.4838609Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4838695Z             # which got emitted
2025-01-24T14:29:24.4838811Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4838891Z >           return cls(
2025-01-24T14:29:24.4839072Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4839256Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4839335Z                     mask
2025-01-24T14:29:24.4839410Z                 ],
2025-01-24T14:29:24.4839604Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4839678Z                     mask
2025-01-24T14:29:24.4839752Z                 ],
2025-01-24T14:29:24.4839923Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4840000Z                     mask
2025-01-24T14:29:24.4840071Z                 ],
2025-01-24T14:29:24.4840243Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4840330Z                 lines_df=lines_df,
2025-01-24T14:29:24.4840491Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4840675Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4840750Z                     mask
2025-01-24T14:29:24.4840826Z                 ],
2025-01-24T14:29:24.4840955Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4841199Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4841388Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4841503Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4841602Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4841702Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4841785Z                 simulation=sim,
2025-01-24T14:29:24.4841860Z             )
2025-01-24T14:29:24.4842199Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4842307Z 
2025-01-24T14:29:24.4842482Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4842710Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply6] _
2025-01-24T14:29:24.4842718Z 
2025-01-24T14:29:24.4842932Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4842937Z 
2025-01-24T14:29:24.4843031Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4843122Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4843196Z         """
2025-01-24T14:29:24.4843345Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4843420Z     
2025-01-24T14:29:24.4843496Z         Parameters:
2025-01-24T14:29:24.4843572Z         -----------
2025-01-24T14:29:24.4843691Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4843762Z     
2025-01-24T14:29:24.4843839Z         Returns:
2025-01-24T14:29:24.4843915Z         --------
2025-01-24T14:29:24.4844002Z         An LIVPlotter instance.
2025-01-24T14:29:24.4844071Z         """
2025-01-24T14:29:24.4844207Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4844212Z 
2025-01-24T14:29:24.4844346Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4844465Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4844623Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4844775Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4844989Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4845133Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4845244Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4845248Z 
2025-01-24T14:29:24.4845460Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4845640Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4845723Z packets_mode = 'real'
2025-01-24T14:29:24.4845728Z 
2025-01-24T14:29:24.4845806Z     @classmethod
2025-01-24T14:29:24.4845918Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4845992Z         """
2025-01-24T14:29:24.4846185Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4846261Z     
2025-01-24T14:29:24.4846336Z         Parameters
2025-01-24T14:29:24.4846414Z         ----------
2025-01-24T14:29:24.4846517Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4846664Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4846762Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4846903Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4846981Z     
2025-01-24T14:29:24.4847053Z         Returns
2025-01-24T14:29:24.4847127Z         -------
2025-01-24T14:29:24.4847214Z         SimulationPacketData
2025-01-24T14:29:24.4847288Z         """
2025-01-24T14:29:24.4847393Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4847570Z             raise ValueError(
2025-01-24T14:29:24.4847688Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4847797Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4847866Z             )
2025-01-24T14:29:24.4847974Z         # Properties common among both packet modes
2025-01-24T14:29:24.4848132Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4848212Z             "line_id"
2025-01-24T14:29:24.4848411Z         )
2025-01-24T14:29:24.4848521Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4848648Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4848846Z         time_of_simulation = (
2025-01-24T14:29:24.4849003Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4849072Z         )
2025-01-24T14:29:24.4849146Z     
2025-01-24T14:29:24.4849222Z         spectrum = (
2025-01-24T14:29:24.4849341Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4849434Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4849555Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4849625Z         )
2025-01-24T14:29:24.4849702Z     
2025-01-24T14:29:24.4849791Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4849917Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4849996Z             return cls(
2025-01-24T14:29:24.4850154Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4850328Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4850509Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4850681Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4850831Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4850924Z                 lines_df=lines_df,
2025-01-24T14:29:24.4851050Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4851210Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4851343Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4851460Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4851652Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4851759Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4851864Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4851963Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4852049Z                 simulation=sim,
2025-01-24T14:29:24.4852120Z             )
2025-01-24T14:29:24.4852207Z         else: # real packets
2025-01-24T14:29:24.4852371Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4852460Z             # which got emitted
2025-01-24T14:29:24.4852567Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4852648Z >           return cls(
2025-01-24T14:29:24.4852820Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4853011Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4853090Z                     mask
2025-01-24T14:29:24.4853161Z                 ],
2025-01-24T14:29:24.4853356Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4853438Z                     mask
2025-01-24T14:29:24.4853513Z                 ],
2025-01-24T14:29:24.4853680Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4853758Z                     mask
2025-01-24T14:29:24.4853832Z                 ],
2025-01-24T14:29:24.4854130Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4854214Z                 lines_df=lines_df,
2025-01-24T14:29:24.4854383Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4854557Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4854637Z                     mask
2025-01-24T14:29:24.4854711Z                 ],
2025-01-24T14:29:24.4854846Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4854967Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4855239Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4855363Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4855463Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4855563Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4855647Z                 simulation=sim,
2025-01-24T14:29:24.4855723Z             )
2025-01-24T14:29:24.4856058Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4856065Z 
2025-01-24T14:29:24.4856245Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4856471Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _
2025-01-24T14:29:24.4856480Z 
2025-01-24T14:29:24.4856691Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4856696Z 
2025-01-24T14:29:24.4856790Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4856883Z     def plotter(simulation_simple):
2025-01-24T14:29:24.4856958Z         """
2025-01-24T14:29:24.4857108Z         Fixture to create an LIVPlotter instance from a simulation.
2025-01-24T14:29:24.4857184Z     
2025-01-24T14:29:24.4857265Z         Parameters:
2025-01-24T14:29:24.4857343Z         -----------
2025-01-24T14:29:24.4857457Z         simulation_simple: A TARDIS simulation object.
2025-01-24T14:29:24.4857531Z     
2025-01-24T14:29:24.4857604Z         Returns:
2025-01-24T14:29:24.4857681Z         --------
2025-01-24T14:29:24.4857764Z         An LIVPlotter instance.
2025-01-24T14:29:24.4857837Z         """
2025-01-24T14:29:24.4857972Z >       return LIVPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4857976Z 
2025-01-24T14:29:24.4858110Z tardis/visualization/tools/tests/test_liv_plot.py:77: 
2025-01-24T14:29:24.4858332Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4858499Z tardis/visualization/tools/liv_plot.py:53: in from_simulation
2025-01-24T14:29:24.4858652Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4858870Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4859012Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4859126Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4859131Z 
2025-01-24T14:29:24.4859351Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4859527Z sim = <tardis.simulation.base.Simulation object at 0x7fb228087e00>
2025-01-24T14:29:24.4859608Z packets_mode = 'real'
2025-01-24T14:29:24.4859613Z 
2025-01-24T14:29:24.4859690Z     @classmethod
2025-01-24T14:29:24.4859802Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4859876Z         """
2025-01-24T14:29:24.4860072Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4860152Z     
2025-01-24T14:29:24.4860228Z         Parameters
2025-01-24T14:29:24.4860305Z         ----------
2025-01-24T14:29:24.4860406Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4860560Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4860790Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4860941Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4861017Z     
2025-01-24T14:29:24.4861091Z         Returns
2025-01-24T14:29:24.4861168Z         -------
2025-01-24T14:29:24.4861255Z         SimulationPacketData
2025-01-24T14:29:24.4861330Z         """
2025-01-24T14:29:24.4861438Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4861526Z             raise ValueError(
2025-01-24T14:29:24.4861650Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4861761Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4861940Z             )
2025-01-24T14:29:24.4862053Z         # Properties common among both packet modes
2025-01-24T14:29:24.4862213Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4862293Z             "line_id"
2025-01-24T14:29:24.4862368Z         )
2025-01-24T14:29:24.4862483Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4862607Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4862697Z         time_of_simulation = (
2025-01-24T14:29:24.4862859Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4862930Z         )
2025-01-24T14:29:24.4863003Z     
2025-01-24T14:29:24.4863078Z         spectrum = (
2025-01-24T14:29:24.4863198Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4863288Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4863409Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4863484Z         )
2025-01-24T14:29:24.4863558Z     
2025-01-24T14:29:24.4863647Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4863776Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4863852Z             return cls(
2025-01-24T14:29:24.4864018Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4864192Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4864375Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4864548Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4864698Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4864786Z                 lines_df=lines_df,
2025-01-24T14:29:24.4864918Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4865079Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4865217Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4865339Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4865530Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4865642Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4865745Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4865846Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4865933Z                 simulation=sim,
2025-01-24T14:29:24.4866006Z             )
2025-01-24T14:29:24.4866091Z         else: # real packets
2025-01-24T14:29:24.4866256Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4866340Z             # which got emitted
2025-01-24T14:29:24.4866448Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4866533Z >           return cls(
2025-01-24T14:29:24.4866706Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4866896Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4867063Z                     mask
2025-01-24T14:29:24.4867140Z                 ],
2025-01-24T14:29:24.4867332Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4867412Z                     mask
2025-01-24T14:29:24.4867482Z                 ],
2025-01-24T14:29:24.4867658Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4867738Z                     mask
2025-01-24T14:29:24.4867808Z                 ],
2025-01-24T14:29:24.4867980Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4868065Z                 lines_df=lines_df,
2025-01-24T14:29:24.4868419Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4868598Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4868679Z                     mask
2025-01-24T14:29:24.4868755Z                 ],
2025-01-24T14:29:24.4868890Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4869008Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4869204Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4869322Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4869425Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4869527Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4869610Z                 simulation=sim,
2025-01-24T14:29:24.4869685Z             )
2025-01-24T14:29:24.4870023Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4870032Z 
2025-01-24T14:29:24.4870211Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4870418Z _ ERROR at setup of TestSDECPlotter.test_parse_species_list[_full_species_list] _
2025-01-24T14:29:24.4870426Z 
2025-01-24T14:29:24.4870702Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4870915Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4871154Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4871159Z 
2025-01-24T14:29:24.4871254Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4871370Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4871445Z         """
2025-01-24T14:29:24.4871536Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4871614Z     
2025-01-24T14:29:24.4871690Z         Parameters
2025-01-24T14:29:24.4871772Z         ----------
2025-01-24T14:29:24.4871917Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4872007Z             Simulation object.
2025-01-24T14:29:24.4872080Z     
2025-01-24T14:29:24.4872157Z         Returns
2025-01-24T14:29:24.4872231Z         -------
2025-01-24T14:29:24.4872370Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4872440Z         """
2025-01-24T14:29:24.4872577Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4872582Z 
2025-01-24T14:29:24.4872730Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4872844Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4873013Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4873165Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4873390Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4873525Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4873641Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4873766Z 
2025-01-24T14:29:24.4873984Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4874158Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4874243Z packets_mode = 'real'
2025-01-24T14:29:24.4874249Z 
2025-01-24T14:29:24.4874322Z     @classmethod
2025-01-24T14:29:24.4874437Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4874508Z         """
2025-01-24T14:29:24.4874712Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4874783Z     
2025-01-24T14:29:24.4874862Z         Parameters
2025-01-24T14:29:24.4874936Z         ----------
2025-01-24T14:29:24.4875151Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4875303Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4875401Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4875539Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4875618Z     
2025-01-24T14:29:24.4875694Z         Returns
2025-01-24T14:29:24.4875766Z         -------
2025-01-24T14:29:24.4875858Z         SimulationPacketData
2025-01-24T14:29:24.4875928Z         """
2025-01-24T14:29:24.4876042Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4876125Z             raise ValueError(
2025-01-24T14:29:24.4876249Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4876353Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4876429Z             )
2025-01-24T14:29:24.4876537Z         # Properties common among both packet modes
2025-01-24T14:29:24.4876707Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4876782Z             "line_id"
2025-01-24T14:29:24.4876858Z         )
2025-01-24T14:29:24.4876966Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4877096Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4877184Z         time_of_simulation = (
2025-01-24T14:29:24.4877342Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4877418Z         )
2025-01-24T14:29:24.4877488Z     
2025-01-24T14:29:24.4877568Z         spectrum = (
2025-01-24T14:29:24.4877685Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4877781Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4877899Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4877974Z         )
2025-01-24T14:29:24.4878044Z     
2025-01-24T14:29:24.4878139Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4878369Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4878453Z             return cls(
2025-01-24T14:29:24.4878610Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4878789Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4878973Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4879147Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4879304Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4879389Z                 lines_df=lines_df,
2025-01-24T14:29:24.4879524Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4879679Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4879814Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4879934Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4880126Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4880236Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4880469Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4880565Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4880651Z                 simulation=sim,
2025-01-24T14:29:24.4880727Z             )
2025-01-24T14:29:24.4880809Z         else: # real packets
2025-01-24T14:29:24.4880977Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4881058Z             # which got emitted
2025-01-24T14:29:24.4881170Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4881247Z >           return cls(
2025-01-24T14:29:24.4881426Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4881739Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4881821Z                     mask
2025-01-24T14:29:24.4881895Z                 ],
2025-01-24T14:29:24.4882094Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4882173Z                     mask
2025-01-24T14:29:24.4882248Z                 ],
2025-01-24T14:29:24.4882420Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4882494Z                     mask
2025-01-24T14:29:24.4882568Z                 ],
2025-01-24T14:29:24.4882735Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4882823Z                 lines_df=lines_df,
2025-01-24T14:29:24.4882988Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4883170Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4883247Z                     mask
2025-01-24T14:29:24.4883322Z                 ],
2025-01-24T14:29:24.4883449Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4883568Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4883757Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4883870Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4883976Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4884073Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4884160Z                 simulation=sim,
2025-01-24T14:29:24.4884232Z             )
2025-01-24T14:29:24.4884573Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4884578Z 
2025-01-24T14:29:24.4884751Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4884914Z ---------------------------- Captured stdout setup -----------------------------
2025-01-24T14:29:24.4885128Z log_level is defined both in Functional Argument & YAML Configuration {debug section}
2025-01-24T14:29:24.4885282Z log_level = CRITICAL will be used for Log Level Determination
2025-01-24T14:29:24.4885287Z 
2025-01-24T14:29:24.4885442Z ---------------------------- Captured stderr setup -----------------------------
2025-01-24T14:29:24.4885447Z 
2025-01-24T14:29:24.4885450Z 
2025-01-24T14:29:24.4885870Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:29:24.4885877Z 
2025-01-24T14:29:24.4886110Z Packets:                                                                                   0/4000 [00:00<?, ?it/s][A
2025-01-24T14:29:24.4886261Z Iterations:                                                                                49/? [09:03<00:00,  7.52s/it]
2025-01-24T14:29:24.4886269Z 
2025-01-24T14:29:24.4886642Z Packets:   ███████████████████████████████████████████████████████████████████████████████▉3999/4000 [00:00<00:00, 98528.05it/s][A
2025-01-24T14:29:24.4886649Z 
2025-01-24T14:29:24.4886988Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:29:24.4887133Z Iterations:                                                                                50/? [09:04<00:00,  5.60s/it]
2025-01-24T14:29:24.4887138Z 
2025-01-24T14:29:24.4887456Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 99245.28it/s][A
2025-01-24T14:29:24.4887463Z 
2025-01-24T14:29:24.4887687Z Packets:                                                                                   0/4000 [00:00<?, ?it/s]              [A
2025-01-24T14:29:24.4887836Z Iterations:                                                                                51/? [09:05<00:00,  4.26s/it]
2025-01-24T14:29:24.4887930Z 
2025-01-24T14:29:24.4888364Z Packets:   ████████████████████████████████████████████████████████████████████████████████4000/4000 [00:00<00:00, 66886.53it/s][A
2025-01-24T14:29:24.4888584Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_species_list] ___
2025-01-24T14:29:24.4888590Z 
2025-01-24T14:29:24.4888868Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4889078Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4889318Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4889325Z 
2025-01-24T14:29:24.4889417Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4889541Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4889618Z         """
2025-01-24T14:29:24.4889717Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4889793Z     
2025-01-24T14:29:24.4889870Z         Parameters
2025-01-24T14:29:24.4889949Z         ----------
2025-01-24T14:29:24.4890095Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4890182Z             Simulation object.
2025-01-24T14:29:24.4890256Z     
2025-01-24T14:29:24.4890333Z         Returns
2025-01-24T14:29:24.4890408Z         -------
2025-01-24T14:29:24.4890547Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4890617Z         """
2025-01-24T14:29:24.4890756Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4890761Z 
2025-01-24T14:29:24.4890902Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4891022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4891190Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4891340Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4891564Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4891696Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4891808Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4891951Z 
2025-01-24T14:29:24.4892168Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4892340Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4892422Z packets_mode = 'real'
2025-01-24T14:29:24.4892427Z 
2025-01-24T14:29:24.4892506Z     @classmethod
2025-01-24T14:29:24.4892618Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4892694Z         """
2025-01-24T14:29:24.4892896Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4892967Z     
2025-01-24T14:29:24.4893048Z         Parameters
2025-01-24T14:29:24.4893126Z         ----------
2025-01-24T14:29:24.4893228Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4893382Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4893482Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4893626Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4893700Z     
2025-01-24T14:29:24.4893772Z         Returns
2025-01-24T14:29:24.4893852Z         -------
2025-01-24T14:29:24.4893939Z         SimulationPacketData
2025-01-24T14:29:24.4894016Z         """
2025-01-24T14:29:24.4894123Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4894212Z             raise ValueError(
2025-01-24T14:29:24.4894329Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4894442Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4894518Z             )
2025-01-24T14:29:24.4894625Z         # Properties common among both packet modes
2025-01-24T14:29:24.4894909Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4894985Z             "line_id"
2025-01-24T14:29:24.4895058Z         )
2025-01-24T14:29:24.4895165Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4895299Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4895383Z         time_of_simulation = (
2025-01-24T14:29:24.4895543Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4895614Z         )
2025-01-24T14:29:24.4895689Z     
2025-01-24T14:29:24.4895766Z         spectrum = (
2025-01-24T14:29:24.4895887Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4895976Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4896101Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4896177Z         )
2025-01-24T14:29:24.4896246Z     
2025-01-24T14:29:24.4896345Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4896467Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4896548Z             return cls(
2025-01-24T14:29:24.4896705Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4896886Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4897061Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4897232Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4897381Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4897469Z                 lines_df=lines_df,
2025-01-24T14:29:24.4897600Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4897761Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4897900Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4898016Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4898207Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4898547Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4898659Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4898755Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4898841Z                 simulation=sim,
2025-01-24T14:29:24.4898912Z             )
2025-01-24T14:29:24.4899000Z         else: # real packets
2025-01-24T14:29:24.4899166Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4899252Z             # which got emitted
2025-01-24T14:29:24.4899359Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4899440Z >           return cls(
2025-01-24T14:29:24.4899620Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4899811Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4899891Z                     mask
2025-01-24T14:29:24.4899962Z                 ],
2025-01-24T14:29:24.4900163Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4900239Z                     mask
2025-01-24T14:29:24.4900315Z                 ],
2025-01-24T14:29:24.4900482Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4900560Z                     mask
2025-01-24T14:29:24.4900632Z                 ],
2025-01-24T14:29:24.4900804Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4900888Z                 lines_df=lines_df,
2025-01-24T14:29:24.4901056Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4901355Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4901427Z                     mask
2025-01-24T14:29:24.4901503Z                 ],
2025-01-24T14:29:24.4901631Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4901756Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4901940Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4902052Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4902151Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4902255Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4902335Z                 simulation=sim,
2025-01-24T14:29:24.4902414Z             )
2025-01-24T14:29:24.4902747Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4902761Z 
2025-01-24T14:29:24.4902932Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4903135Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_keep_colour] ____
2025-01-24T14:29:24.4903140Z 
2025-01-24T14:29:24.4903408Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4903628Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4903862Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4903867Z 
2025-01-24T14:29:24.4903962Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4904078Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4904157Z         """
2025-01-24T14:29:24.4904256Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4904327Z     
2025-01-24T14:29:24.4904408Z         Parameters
2025-01-24T14:29:24.4904482Z         ----------
2025-01-24T14:29:24.4904633Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4904716Z             Simulation object.
2025-01-24T14:29:24.4904791Z     
2025-01-24T14:29:24.4904864Z         Returns
2025-01-24T14:29:24.4904943Z         -------
2025-01-24T14:29:24.4905178Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4905253Z         """
2025-01-24T14:29:24.4905385Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4905390Z 
2025-01-24T14:29:24.4905538Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4905647Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4905815Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4905970Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4906184Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4906325Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4906435Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4906439Z 
2025-01-24T14:29:24.4906657Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4906829Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4906918Z packets_mode = 'real'
2025-01-24T14:29:24.4906922Z 
2025-01-24T14:29:24.4906996Z     @classmethod
2025-01-24T14:29:24.4907112Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4907187Z         """
2025-01-24T14:29:24.4907380Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4907455Z     
2025-01-24T14:29:24.4907529Z         Parameters
2025-01-24T14:29:24.4907607Z         ----------
2025-01-24T14:29:24.4907707Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4907860Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4908067Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4908210Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4908415Z     
2025-01-24T14:29:24.4908495Z         Returns
2025-01-24T14:29:24.4908571Z         -------
2025-01-24T14:29:24.4908664Z         SimulationPacketData
2025-01-24T14:29:24.4908735Z         """
2025-01-24T14:29:24.4908843Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4908927Z             raise ValueError(
2025-01-24T14:29:24.4909049Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4909157Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4909227Z             )
2025-01-24T14:29:24.4909338Z         # Properties common among both packet modes
2025-01-24T14:29:24.4909499Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4909582Z             "line_id"
2025-01-24T14:29:24.4909652Z         )
2025-01-24T14:29:24.4909767Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4909895Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4909987Z         time_of_simulation = (
2025-01-24T14:29:24.4910146Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4910225Z         )
2025-01-24T14:29:24.4910295Z     
2025-01-24T14:29:24.4910379Z         spectrum = (
2025-01-24T14:29:24.4910492Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4910587Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4910705Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4910782Z         )
2025-01-24T14:29:24.4910856Z     
2025-01-24T14:29:24.4910944Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4911073Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4911151Z             return cls(
2025-01-24T14:29:24.4911316Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4911488Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4911668Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4911962Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4912120Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4912202Z                 lines_df=lines_df,
2025-01-24T14:29:24.4912337Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4912497Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4912627Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4912749Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4912942Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4913053Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4913156Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4913261Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4913343Z                 simulation=sim,
2025-01-24T14:29:24.4913420Z             )
2025-01-24T14:29:24.4913503Z         else: # real packets
2025-01-24T14:29:24.4913673Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4913752Z             # which got emitted
2025-01-24T14:29:24.4913866Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4913948Z >           return cls(
2025-01-24T14:29:24.4914124Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4914313Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4914504Z                     mask
2025-01-24T14:29:24.4914579Z                 ],
2025-01-24T14:29:24.4914769Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4914853Z                     mask
2025-01-24T14:29:24.4914927Z                 ],
2025-01-24T14:29:24.4915098Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4915172Z                     mask
2025-01-24T14:29:24.4915248Z                 ],
2025-01-24T14:29:24.4915413Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4915501Z                 lines_df=lines_df,
2025-01-24T14:29:24.4915666Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4915845Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4915924Z                     mask
2025-01-24T14:29:24.4916000Z                 ],
2025-01-24T14:29:24.4916133Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4916248Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4916438Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4916551Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4916657Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4916753Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4916839Z                 simulation=sim,
2025-01-24T14:29:24.4916910Z             )
2025-01-24T14:29:24.4917249Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4917255Z 
2025-01-24T14:29:24.4917429Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4917701Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-24T14:29:24.4917710Z 
2025-01-24T14:29:24.4917979Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4918192Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4918643Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4918650Z 
2025-01-24T14:29:24.4918740Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4918860Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4918936Z         """
2025-01-24T14:29:24.4919024Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4919099Z     
2025-01-24T14:29:24.4919175Z         Parameters
2025-01-24T14:29:24.4919255Z         ----------
2025-01-24T14:29:24.4919394Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4919479Z             Simulation object.
2025-01-24T14:29:24.4919557Z     
2025-01-24T14:29:24.4919635Z         Returns
2025-01-24T14:29:24.4919707Z         -------
2025-01-24T14:29:24.4919841Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4919913Z         """
2025-01-24T14:29:24.4920051Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4920060Z 
2025-01-24T14:29:24.4920201Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4920318Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4920479Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4920632Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4920851Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4920986Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4921101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4921222Z 
2025-01-24T14:29:24.4921442Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4921613Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4921701Z packets_mode = 'real'
2025-01-24T14:29:24.4921705Z 
2025-01-24T14:29:24.4921786Z     @classmethod
2025-01-24T14:29:24.4921897Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4921973Z         """
2025-01-24T14:29:24.4922169Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4922241Z     
2025-01-24T14:29:24.4922321Z         Parameters
2025-01-24T14:29:24.4922396Z         ----------
2025-01-24T14:29:24.4922503Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4922650Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4922747Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4922889Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4922965Z     
2025-01-24T14:29:24.4923037Z         Returns
2025-01-24T14:29:24.4923115Z         -------
2025-01-24T14:29:24.4923202Z         SimulationPacketData
2025-01-24T14:29:24.4923278Z         """
2025-01-24T14:29:24.4923386Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4923474Z             raise ValueError(
2025-01-24T14:29:24.4923590Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4923698Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4923774Z             )
2025-01-24T14:29:24.4923880Z         # Properties common among both packet modes
2025-01-24T14:29:24.4924044Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4924120Z             "line_id"
2025-01-24T14:29:24.4924195Z         )
2025-01-24T14:29:24.4924303Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4924437Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4924522Z         time_of_simulation = (
2025-01-24T14:29:24.4924681Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4924754Z         )
2025-01-24T14:29:24.4924937Z     
2025-01-24T14:29:24.4925014Z         spectrum = (
2025-01-24T14:29:24.4925134Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4925224Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4925350Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4925425Z         )
2025-01-24T14:29:24.4925495Z     
2025-01-24T14:29:24.4925592Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4925714Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4925796Z             return cls(
2025-01-24T14:29:24.4925952Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4926129Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4926306Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4926479Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4926632Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4926720Z                 lines_df=lines_df,
2025-01-24T14:29:24.4926847Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4927008Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4927143Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4927258Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4927449Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4927557Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4927751Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4927849Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4927934Z                 simulation=sim,
2025-01-24T14:29:24.4928008Z             )
2025-01-24T14:29:24.4928096Z         else: # real packets
2025-01-24T14:29:24.4928358Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4928448Z             # which got emitted
2025-01-24T14:29:24.4928557Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4928639Z >           return cls(
2025-01-24T14:29:24.4928817Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4929003Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4929084Z                     mask
2025-01-24T14:29:24.4929155Z                 ],
2025-01-24T14:29:24.4929378Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4929453Z                     mask
2025-01-24T14:29:24.4929528Z                 ],
2025-01-24T14:29:24.4929695Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4929781Z                     mask
2025-01-24T14:29:24.4929855Z                 ],
2025-01-24T14:29:24.4930025Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4930108Z                 lines_df=lines_df,
2025-01-24T14:29:24.4930276Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4930457Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4930530Z                     mask
2025-01-24T14:29:24.4930605Z                 ],
2025-01-24T14:29:24.4930734Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4930856Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4931044Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4931159Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4931405Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4931506Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4931585Z                 simulation=sim,
2025-01-24T14:29:24.4931662Z             )
2025-01-24T14:29:24.4931992Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4932003Z 
2025-01-24T14:29:24.4932171Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4932443Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-24T14:29:24.4932449Z 
2025-01-24T14:29:24.4932713Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4932935Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4933167Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4933175Z 
2025-01-24T14:29:24.4933269Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4933381Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4933459Z         """
2025-01-24T14:29:24.4933556Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4933626Z     
2025-01-24T14:29:24.4933705Z         Parameters
2025-01-24T14:29:24.4933780Z         ----------
2025-01-24T14:29:24.4933925Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4934008Z             Simulation object.
2025-01-24T14:29:24.4934083Z     
2025-01-24T14:29:24.4934155Z         Returns
2025-01-24T14:29:24.4934232Z         -------
2025-01-24T14:29:24.4934479Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4934554Z         """
2025-01-24T14:29:24.4934686Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4934691Z 
2025-01-24T14:29:24.4934838Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4934954Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4935119Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4935270Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4935481Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4935620Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4935733Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4935737Z 
2025-01-24T14:29:24.4935958Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4936127Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4936215Z packets_mode = 'real'
2025-01-24T14:29:24.4936219Z 
2025-01-24T14:29:24.4936294Z     @classmethod
2025-01-24T14:29:24.4936410Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4936484Z         """
2025-01-24T14:29:24.4936684Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4936759Z     
2025-01-24T14:29:24.4936835Z         Parameters
2025-01-24T14:29:24.4936914Z         ----------
2025-01-24T14:29:24.4937013Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4937166Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4937260Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4937401Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4937472Z     
2025-01-24T14:29:24.4937552Z         Returns
2025-01-24T14:29:24.4937627Z         -------
2025-01-24T14:29:24.4937721Z         SimulationPacketData
2025-01-24T14:29:24.4937793Z         """
2025-01-24T14:29:24.4937903Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4937989Z             raise ValueError(
2025-01-24T14:29:24.4938215Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4938441Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4938513Z             )
2025-01-24T14:29:24.4938627Z         # Properties common among both packet modes
2025-01-24T14:29:24.4938787Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4938867Z             "line_id"
2025-01-24T14:29:24.4938938Z         )
2025-01-24T14:29:24.4939049Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4939173Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4939260Z         time_of_simulation = (
2025-01-24T14:29:24.4939417Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4939498Z         )
2025-01-24T14:29:24.4939567Z     
2025-01-24T14:29:24.4939649Z         spectrum = (
2025-01-24T14:29:24.4939762Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4939859Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4939976Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4940056Z         )
2025-01-24T14:29:24.4940131Z     
2025-01-24T14:29:24.4940221Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4940346Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4940422Z             return cls(
2025-01-24T14:29:24.4940585Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4940759Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4940940Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4941233Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4941388Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4941476Z                 lines_df=lines_df,
2025-01-24T14:29:24.4941607Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4941766Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4941894Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4942015Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4942203Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4942316Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4942419Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4942524Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4942605Z                 simulation=sim,
2025-01-24T14:29:24.4942683Z             )
2025-01-24T14:29:24.4942765Z         else: # real packets
2025-01-24T14:29:24.4942933Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4943016Z             # which got emitted
2025-01-24T14:29:24.4943130Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4943212Z >           return cls(
2025-01-24T14:29:24.4943386Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4943576Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4943651Z                     mask
2025-01-24T14:29:24.4943727Z                 ],
2025-01-24T14:29:24.4943917Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4943996Z                     mask
2025-01-24T14:29:24.4944071Z                 ],
2025-01-24T14:29:24.4944242Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4944317Z                     mask
2025-01-24T14:29:24.4944395Z                 ],
2025-01-24T14:29:24.4944702Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4944791Z                 lines_df=lines_df,
2025-01-24T14:29:24.4944955Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4945132Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4945215Z                     mask
2025-01-24T14:29:24.4945287Z                 ],
2025-01-24T14:29:24.4945418Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4945539Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4945732Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4945844Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4945953Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4946049Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4946137Z                 simulation=sim,
2025-01-24T14:29:24.4946210Z             )
2025-01-24T14:29:24.4946550Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4946555Z 
2025-01-24T14:29:24.4946733Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4947003Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-24T14:29:24.4947009Z 
2025-01-24T14:29:24.4947278Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4947493Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4947814Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4947819Z 
2025-01-24T14:29:24.4947909Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4948031Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4948108Z         """
2025-01-24T14:29:24.4948199Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4948387Z     
2025-01-24T14:29:24.4948469Z         Parameters
2025-01-24T14:29:24.4948549Z         ----------
2025-01-24T14:29:24.4948692Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4948780Z             Simulation object.
2025-01-24T14:29:24.4948849Z     
2025-01-24T14:29:24.4948928Z         Returns
2025-01-24T14:29:24.4949002Z         -------
2025-01-24T14:29:24.4949136Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4949207Z         """
2025-01-24T14:29:24.4949352Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4949357Z 
2025-01-24T14:29:24.4949495Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4949613Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4949775Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4949931Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4950151Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4950284Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4950400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4950405Z 
2025-01-24T14:29:24.4950620Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4950790Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4950875Z packets_mode = 'real'
2025-01-24T14:29:24.4950880Z 
2025-01-24T14:29:24.4950959Z     @classmethod
2025-01-24T14:29:24.4951072Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4951150Z         """
2025-01-24T14:29:24.4951348Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4951539Z     
2025-01-24T14:29:24.4951622Z         Parameters
2025-01-24T14:29:24.4951698Z         ----------
2025-01-24T14:29:24.4951803Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4951951Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4952054Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4952193Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4952272Z     
2025-01-24T14:29:24.4952345Z         Returns
2025-01-24T14:29:24.4952426Z         -------
2025-01-24T14:29:24.4952514Z         SimulationPacketData
2025-01-24T14:29:24.4952595Z         """
2025-01-24T14:29:24.4952701Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4952791Z             raise ValueError(
2025-01-24T14:29:24.4952908Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4953017Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4953098Z             )
2025-01-24T14:29:24.4953207Z         # Properties common among both packet modes
2025-01-24T14:29:24.4953374Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4953451Z             "line_id"
2025-01-24T14:29:24.4953527Z         )
2025-01-24T14:29:24.4963587Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4963782Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4963878Z         time_of_simulation = (
2025-01-24T14:29:24.4964061Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4964142Z         )
2025-01-24T14:29:24.4964422Z     
2025-01-24T14:29:24.4964511Z         spectrum = (
2025-01-24T14:29:24.4964639Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4964741Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4964865Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4964946Z         )
2025-01-24T14:29:24.4965017Z     
2025-01-24T14:29:24.4965114Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4965248Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4965334Z             return cls(
2025-01-24T14:29:24.4965512Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4965697Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4965877Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4966056Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4966220Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4966309Z                 lines_df=lines_df,
2025-01-24T14:29:24.4966449Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4966612Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4966750Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4966870Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4967071Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4967182Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4967293Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4967393Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4967482Z                 simulation=sim,
2025-01-24T14:29:24.4967564Z             )
2025-01-24T14:29:24.4967652Z         else: # real packets
2025-01-24T14:29:24.4967832Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4967914Z             # which got emitted
2025-01-24T14:29:24.4968032Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4968379Z >           return cls(
2025-01-24T14:29:24.4968571Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4968758Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4968840Z                     mask
2025-01-24T14:29:24.4968913Z                 ],
2025-01-24T14:29:24.4969110Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4969188Z                     mask
2025-01-24T14:29:24.4969267Z                 ],
2025-01-24T14:29:24.4969447Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4969529Z                     mask
2025-01-24T14:29:24.4969611Z                 ],
2025-01-24T14:29:24.4969779Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4969868Z                 lines_df=lines_df,
2025-01-24T14:29:24.4970038Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4970216Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4970292Z                     mask
2025-01-24T14:29:24.4970371Z                 ],
2025-01-24T14:29:24.4970505Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4970627Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4970820Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4970938Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4971173Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4971272Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4971360Z                 simulation=sim,
2025-01-24T14:29:24.4971432Z             )
2025-01-24T14:29:24.4971776Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4971786Z 
2025-01-24T14:29:24.4971964Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4972242Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-24T14:29:24.4972248Z 
2025-01-24T14:29:24.4972518Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4972738Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4972978Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4972986Z 
2025-01-24T14:29:24.4973077Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4973197Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4973270Z         """
2025-01-24T14:29:24.4973371Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4973447Z     
2025-01-24T14:29:24.4973532Z         Parameters
2025-01-24T14:29:24.4973611Z         ----------
2025-01-24T14:29:24.4973767Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4973859Z             Simulation object.
2025-01-24T14:29:24.4973935Z     
2025-01-24T14:29:24.4974009Z         Returns
2025-01-24T14:29:24.4974089Z         -------
2025-01-24T14:29:24.4974225Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4974304Z         """
2025-01-24T14:29:24.4974446Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4974451Z 
2025-01-24T14:29:24.4974597Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4974726Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4974891Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4975049Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4975390Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4975533Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4975654Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4975658Z 
2025-01-24T14:29:24.4975882Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4976062Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4976151Z packets_mode = 'real'
2025-01-24T14:29:24.4976161Z 
2025-01-24T14:29:24.4976238Z     @classmethod
2025-01-24T14:29:24.4976365Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4976438Z         """
2025-01-24T14:29:24.4976649Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4976722Z     
2025-01-24T14:29:24.4976805Z         Parameters
2025-01-24T14:29:24.4976884Z         ----------
2025-01-24T14:29:24.4976992Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4977144Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4977244Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4977385Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4977463Z     
2025-01-24T14:29:24.4977537Z         Returns
2025-01-24T14:29:24.4977616Z         -------
2025-01-24T14:29:24.4977706Z         SimulationPacketData
2025-01-24T14:29:24.4977783Z         """
2025-01-24T14:29:24.4977901Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4977990Z             raise ValueError(
2025-01-24T14:29:24.4978329Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4978444Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4978523Z             )
2025-01-24T14:29:24.4978635Z         # Properties common among both packet modes
2025-01-24T14:29:24.4978809Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4978885Z             "line_id"
2025-01-24T14:29:24.4978962Z         )
2025-01-24T14:29:24.4979074Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4979204Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4979290Z         time_of_simulation = (
2025-01-24T14:29:24.4979454Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4979527Z         )
2025-01-24T14:29:24.4979604Z     
2025-01-24T14:29:24.4979681Z         spectrum = (
2025-01-24T14:29:24.4979806Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4979907Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4980029Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4980107Z         )
2025-01-24T14:29:24.4980182Z     
2025-01-24T14:29:24.4980276Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4980408Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4980491Z             return cls(
2025-01-24T14:29:24.4980650Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4980832Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4981010Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4981188Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4981341Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4981435Z                 lines_df=lines_df,
2025-01-24T14:29:24.4981572Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4981729Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4981867Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4982114Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4982308Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4982418Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4982528Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4982628Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4982716Z                 simulation=sim,
2025-01-24T14:29:24.4982788Z             )
2025-01-24T14:29:24.4982877Z         else: # real packets
2025-01-24T14:29:24.4983050Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4983134Z             # which got emitted
2025-01-24T14:29:24.4983247Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4983324Z >           return cls(
2025-01-24T14:29:24.4983504Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4983693Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4983776Z                     mask
2025-01-24T14:29:24.4983850Z                 ],
2025-01-24T14:29:24.4984045Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4984120Z                     mask
2025-01-24T14:29:24.4984199Z                 ],
2025-01-24T14:29:24.4984367Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.4984446Z                     mask
2025-01-24T14:29:24.4984518Z                 ],
2025-01-24T14:29:24.4984807Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.4984895Z                 lines_df=lines_df,
2025-01-24T14:29:24.4985059Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.4985244Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.4985319Z                     mask
2025-01-24T14:29:24.4985399Z                 ],
2025-01-24T14:29:24.4985530Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4985651Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4985837Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4985953Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4986058Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4986177Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4986331Z                 simulation=sim,
2025-01-24T14:29:24.4986452Z             )
2025-01-24T14:29:24.4986925Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.4986938Z 
2025-01-24T14:29:24.4987121Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.4987400Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-24T14:29:24.4987406Z 
2025-01-24T14:29:24.4987675Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.4987899Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4988134Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.4988144Z 
2025-01-24T14:29:24.4988347Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.4988479Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.4988550Z         """
2025-01-24T14:29:24.4988647Z         Create a SDECPlotter object.
2025-01-24T14:29:24.4988719Z     
2025-01-24T14:29:24.4988799Z         Parameters
2025-01-24T14:29:24.4988877Z         ----------
2025-01-24T14:29:24.4989163Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.4989248Z             Simulation object.
2025-01-24T14:29:24.4989325Z     
2025-01-24T14:29:24.4989397Z         Returns
2025-01-24T14:29:24.4989478Z         -------
2025-01-24T14:29:24.4989609Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.4989687Z         """
2025-01-24T14:29:24.4989822Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.4989827Z 
2025-01-24T14:29:24.4989979Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.4990101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4990270Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.4990426Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.4990644Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.4990789Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.4990899Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.4990903Z 
2025-01-24T14:29:24.4991126Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.4991296Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.4991387Z packets_mode = 'real'
2025-01-24T14:29:24.4991392Z 
2025-01-24T14:29:24.4991475Z     @classmethod
2025-01-24T14:29:24.4991585Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.4991662Z         """
2025-01-24T14:29:24.4991858Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.4992076Z     
2025-01-24T14:29:24.4992157Z         Parameters
2025-01-24T14:29:24.4992240Z         ----------
2025-01-24T14:29:24.4992343Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.4992499Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.4992598Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.4992742Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.4992814Z     
2025-01-24T14:29:24.4992894Z         Returns
2025-01-24T14:29:24.4992970Z         -------
2025-01-24T14:29:24.4993065Z         SimulationPacketData
2025-01-24T14:29:24.4993137Z         """
2025-01-24T14:29:24.4993254Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.4993343Z             raise ValueError(
2025-01-24T14:29:24.4993465Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.4993575Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.4993652Z             )
2025-01-24T14:29:24.4993764Z         # Properties common among both packet modes
2025-01-24T14:29:24.4993928Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.4994014Z             "line_id"
2025-01-24T14:29:24.4994085Z         )
2025-01-24T14:29:24.4994244Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.4994447Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.4994571Z         time_of_simulation = (
2025-01-24T14:29:24.4994731Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.4994809Z         )
2025-01-24T14:29:24.4994879Z     
2025-01-24T14:29:24.4994964Z         spectrum = (
2025-01-24T14:29:24.4995084Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.4995175Z             if packets_mode == "virtual"
2025-01-24T14:29:24.4995300Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.4995378Z         )
2025-01-24T14:29:24.4995453Z     
2025-01-24T14:29:24.4995543Z         if packets_mode == "virtual":
2025-01-24T14:29:24.4995672Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.4995750Z             return cls(
2025-01-24T14:29:24.4996005Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.4996181Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.4996361Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.4996531Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.4996689Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.4996778Z                 lines_df=lines_df,
2025-01-24T14:29:24.4996909Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.4997074Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.4997289Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.4997480Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.4997768Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.4997887Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.4997994Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.4998100Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.4998188Z                 simulation=sim,
2025-01-24T14:29:24.4998375Z             )
2025-01-24T14:29:24.4998462Z         else: # real packets
2025-01-24T14:29:24.4998640Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.4998726Z             # which got emitted
2025-01-24T14:29:24.4998836Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.4999057Z >           return cls(
2025-01-24T14:29:24.4999241Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.4999427Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.4999511Z                     mask
2025-01-24T14:29:24.4999583Z                 ],
2025-01-24T14:29:24.4999780Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.4999854Z                     mask
2025-01-24T14:29:24.4999930Z                 ],
2025-01-24T14:29:24.5000098Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5000179Z                     mask
2025-01-24T14:29:24.5000251Z                 ],
2025-01-24T14:29:24.5000423Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5000510Z                 lines_df=lines_df,
2025-01-24T14:29:24.5000682Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5000863Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5000937Z                     mask
2025-01-24T14:29:24.5001017Z                 ],
2025-01-24T14:29:24.5001147Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5001267Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5001455Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5001570Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5001671Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5001772Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5001853Z                 simulation=sim,
2025-01-24T14:29:24.5001929Z             )
2025-01-24T14:29:24.5002266Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5002278Z 
2025-01-24T14:29:24.5002454Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5002731Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-24T14:29:24.5002859Z 
2025-01-24T14:29:24.5003131Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5003356Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5003590Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5003595Z 
2025-01-24T14:29:24.5003695Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5003810Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5003886Z         """
2025-01-24T14:29:24.5003981Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5004055Z     
2025-01-24T14:29:24.5004136Z         Parameters
2025-01-24T14:29:24.5004211Z         ----------
2025-01-24T14:29:24.5004361Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5004444Z             Simulation object.
2025-01-24T14:29:24.5004524Z     
2025-01-24T14:29:24.5004598Z         Returns
2025-01-24T14:29:24.5004677Z         -------
2025-01-24T14:29:24.5004809Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5004885Z         """
2025-01-24T14:29:24.5005019Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5005025Z 
2025-01-24T14:29:24.5005172Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5005286Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5005457Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5005612Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5005924Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5006064Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5006175Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5006183Z 
2025-01-24T14:29:24.5006403Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5006571Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5006662Z packets_mode = 'real'
2025-01-24T14:29:24.5006667Z 
2025-01-24T14:29:24.5006741Z     @classmethod
2025-01-24T14:29:24.5006858Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5006931Z         """
2025-01-24T14:29:24.5007131Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5007207Z     
2025-01-24T14:29:24.5007284Z         Parameters
2025-01-24T14:29:24.5007367Z         ----------
2025-01-24T14:29:24.5007468Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5007621Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5007715Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5007864Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5007936Z     
2025-01-24T14:29:24.5008014Z         Returns
2025-01-24T14:29:24.5008087Z         -------
2025-01-24T14:29:24.5008179Z         SimulationPacketData
2025-01-24T14:29:24.5008350Z         """
2025-01-24T14:29:24.5008467Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5008550Z             raise ValueError(
2025-01-24T14:29:24.5008674Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5008778Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5008857Z             )
2025-01-24T14:29:24.5008969Z         # Properties common among both packet modes
2025-01-24T14:29:24.5009132Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5009211Z             "line_id"
2025-01-24T14:29:24.5009281Z         )
2025-01-24T14:29:24.5009397Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5009640Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5009730Z         time_of_simulation = (
2025-01-24T14:29:24.5009884Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5009963Z         )
2025-01-24T14:29:24.5010033Z     
2025-01-24T14:29:24.5010116Z         spectrum = (
2025-01-24T14:29:24.5010229Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5010324Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5010441Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5010520Z         )
2025-01-24T14:29:24.5010595Z     
2025-01-24T14:29:24.5010686Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5010819Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5010896Z             return cls(
2025-01-24T14:29:24.5011059Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5011234Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5011421Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5011591Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5011748Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5011834Z                 lines_df=lines_df,
2025-01-24T14:29:24.5011967Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5012123Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5012261Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5012509Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5012697Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5012811Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5012918Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5013020Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5013103Z                 simulation=sim,
2025-01-24T14:29:24.5013179Z             )
2025-01-24T14:29:24.5013264Z         else: # real packets
2025-01-24T14:29:24.5013436Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5013517Z             # which got emitted
2025-01-24T14:29:24.5013630Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5013708Z >           return cls(
2025-01-24T14:29:24.5013887Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5014079Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5014156Z                     mask
2025-01-24T14:29:24.5014232Z                 ],
2025-01-24T14:29:24.5014424Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5014504Z                     mask
2025-01-24T14:29:24.5014576Z                 ],
2025-01-24T14:29:24.5014748Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5014822Z                     mask
2025-01-24T14:29:24.5014899Z                 ],
2025-01-24T14:29:24.5015066Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5015154Z                 lines_df=lines_df,
2025-01-24T14:29:24.5015320Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5015503Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5015582Z                     mask
2025-01-24T14:29:24.5015653Z                 ],
2025-01-24T14:29:24.5015784Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5015989Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5016182Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5016290Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5016396Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5016492Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5016577Z                 simulation=sim,
2025-01-24T14:29:24.5016649Z             )
2025-01-24T14:29:24.5016992Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5017001Z 
2025-01-24T14:29:24.5017177Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5017447Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-24T14:29:24.5017452Z 
2025-01-24T14:29:24.5017720Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5017937Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5018178Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5018183Z 
2025-01-24T14:29:24.5018373Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5018499Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5018571Z         """
2025-01-24T14:29:24.5018667Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5018743Z     
2025-01-24T14:29:24.5018819Z         Parameters
2025-01-24T14:29:24.5018897Z         ----------
2025-01-24T14:29:24.5019181Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5019268Z             Simulation object.
2025-01-24T14:29:24.5019339Z     
2025-01-24T14:29:24.5019416Z         Returns
2025-01-24T14:29:24.5019489Z         -------
2025-01-24T14:29:24.5019628Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5019698Z         """
2025-01-24T14:29:24.5019841Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5019846Z 
2025-01-24T14:29:24.5019991Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5020108Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5020268Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5020419Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5020638Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5020775Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5020890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5020895Z 
2025-01-24T14:29:24.5021109Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5021285Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5021369Z packets_mode = 'real'
2025-01-24T14:29:24.5021373Z 
2025-01-24T14:29:24.5021455Z     @classmethod
2025-01-24T14:29:24.5021567Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5021643Z         """
2025-01-24T14:29:24.5021836Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5021913Z     
2025-01-24T14:29:24.5021992Z         Parameters
2025-01-24T14:29:24.5022066Z         ----------
2025-01-24T14:29:24.5022171Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5022327Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5022428Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5022567Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5022643Z     
2025-01-24T14:29:24.5022835Z         Returns
2025-01-24T14:29:24.5022913Z         -------
2025-01-24T14:29:24.5023001Z         SimulationPacketData
2025-01-24T14:29:24.5023078Z         """
2025-01-24T14:29:24.5023184Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5023272Z             raise ValueError(
2025-01-24T14:29:24.5023389Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5023499Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5023576Z             )
2025-01-24T14:29:24.5023683Z         # Properties common among both packet modes
2025-01-24T14:29:24.5023844Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5023924Z             "line_id"
2025-01-24T14:29:24.5024000Z         )
2025-01-24T14:29:24.5024108Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5024236Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5024320Z         time_of_simulation = (
2025-01-24T14:29:24.5024483Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5024555Z         )
2025-01-24T14:29:24.5024631Z     
2025-01-24T14:29:24.5024709Z         spectrum = (
2025-01-24T14:29:24.5024828Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5024917Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5025040Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5025118Z         )
2025-01-24T14:29:24.5025188Z     
2025-01-24T14:29:24.5025283Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5025406Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5025581Z             return cls(
2025-01-24T14:29:24.5025747Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5025924Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5026101Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5026279Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5026430Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5026518Z                 lines_df=lines_df,
2025-01-24T14:29:24.5026644Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5026804Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5026939Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5027056Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5027250Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5027359Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5027467Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5027567Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5027652Z                 simulation=sim,
2025-01-24T14:29:24.5027724Z             )
2025-01-24T14:29:24.5027813Z         else: # real packets
2025-01-24T14:29:24.5027978Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5028064Z             # which got emitted
2025-01-24T14:29:24.5028172Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5028383Z >           return cls(
2025-01-24T14:29:24.5028566Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5028749Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5028834Z                     mask
2025-01-24T14:29:24.5028906Z                 ],
2025-01-24T14:29:24.5029101Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5029176Z                     mask
2025-01-24T14:29:24.5029405Z                 ],
2025-01-24T14:29:24.5029577Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5029660Z                     mask
2025-01-24T14:29:24.5029730Z                 ],
2025-01-24T14:29:24.5029903Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5029985Z                 lines_df=lines_df,
2025-01-24T14:29:24.5030153Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5030334Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5030408Z                     mask
2025-01-24T14:29:24.5030489Z                 ],
2025-01-24T14:29:24.5030617Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5030737Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5030922Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5031043Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5031147Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5031249Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5031329Z                 simulation=sim,
2025-01-24T14:29:24.5031407Z             )
2025-01-24T14:29:24.5031736Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5031747Z 
2025-01-24T14:29:24.5031921Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5032198Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-24T14:29:24.5032345Z 
2025-01-24T14:29:24.5032615Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5032836Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5033071Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5033076Z 
2025-01-24T14:29:24.5033171Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5033286Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5033363Z         """
2025-01-24T14:29:24.5033457Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5033528Z     
2025-01-24T14:29:24.5033610Z         Parameters
2025-01-24T14:29:24.5033685Z         ----------
2025-01-24T14:29:24.5033832Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5033915Z             Simulation object.
2025-01-24T14:29:24.5033993Z     
2025-01-24T14:29:24.5034065Z         Returns
2025-01-24T14:29:24.5034145Z         -------
2025-01-24T14:29:24.5034275Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5034353Z         """
2025-01-24T14:29:24.5034486Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5034494Z 
2025-01-24T14:29:24.5034644Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5034759Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5034925Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5035079Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5035290Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5035427Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5035538Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5035546Z 
2025-01-24T14:29:24.5035765Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5035932Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5036109Z packets_mode = 'real'
2025-01-24T14:29:24.5036113Z 
2025-01-24T14:29:24.5036188Z     @classmethod
2025-01-24T14:29:24.5036303Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5036375Z         """
2025-01-24T14:29:24.5036572Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5036648Z     
2025-01-24T14:29:24.5036724Z         Parameters
2025-01-24T14:29:24.5036805Z         ----------
2025-01-24T14:29:24.5036905Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5037057Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5037150Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5037296Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5037368Z     
2025-01-24T14:29:24.5037445Z         Returns
2025-01-24T14:29:24.5037520Z         -------
2025-01-24T14:29:24.5037611Z         SimulationPacketData
2025-01-24T14:29:24.5037686Z         """
2025-01-24T14:29:24.5037798Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5037881Z             raise ValueError(
2025-01-24T14:29:24.5038007Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5038112Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5038189Z             )
2025-01-24T14:29:24.5038411Z         # Properties common among both packet modes
2025-01-24T14:29:24.5038574Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5038653Z             "line_id"
2025-01-24T14:29:24.5038723Z         )
2025-01-24T14:29:24.5038837Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5039083Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5039172Z         time_of_simulation = (
2025-01-24T14:29:24.5039326Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5039402Z         )
2025-01-24T14:29:24.5039477Z     
2025-01-24T14:29:24.5039558Z         spectrum = (
2025-01-24T14:29:24.5039673Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5039767Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5039885Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5039962Z         )
2025-01-24T14:29:24.5040036Z     
2025-01-24T14:29:24.5040125Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5040253Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5040332Z             return cls(
2025-01-24T14:29:24.5040497Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5040675Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5040857Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5041023Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5041183Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5041272Z                 lines_df=lines_df,
2025-01-24T14:29:24.5041408Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5041567Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5041704Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5041826Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5042015Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5042133Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5042236Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5042338Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5042422Z                 simulation=sim,
2025-01-24T14:29:24.5042639Z             )
2025-01-24T14:29:24.5042722Z         else: # real packets
2025-01-24T14:29:24.5042894Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5042975Z             # which got emitted
2025-01-24T14:29:24.5043088Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5043165Z >           return cls(
2025-01-24T14:29:24.5043345Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5043536Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5043612Z                     mask
2025-01-24T14:29:24.5043689Z                 ],
2025-01-24T14:29:24.5043881Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5043960Z                     mask
2025-01-24T14:29:24.5044031Z                 ],
2025-01-24T14:29:24.5044203Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5044280Z                     mask
2025-01-24T14:29:24.5044358Z                 ],
2025-01-24T14:29:24.5044524Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5044611Z                 lines_df=lines_df,
2025-01-24T14:29:24.5044775Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5044955Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5045036Z                     mask
2025-01-24T14:29:24.5045107Z                 ],
2025-01-24T14:29:24.5045240Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5045517Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5045709Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5045817Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5045933Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5046035Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5046127Z                 simulation=sim,
2025-01-24T14:29:24.5046202Z             )
2025-01-24T14:29:24.5046539Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5046545Z 
2025-01-24T14:29:24.5046726Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5046999Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-24T14:29:24.5047005Z 
2025-01-24T14:29:24.5047279Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5047495Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5047736Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5047744Z 
2025-01-24T14:29:24.5047836Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5047959Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5048033Z         """
2025-01-24T14:29:24.5048130Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5048210Z     
2025-01-24T14:29:24.5048394Z         Parameters
2025-01-24T14:29:24.5048474Z         ----------
2025-01-24T14:29:24.5048620Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5048711Z             Simulation object.
2025-01-24T14:29:24.5048781Z     
2025-01-24T14:29:24.5048858Z         Returns
2025-01-24T14:29:24.5048932Z         -------
2025-01-24T14:29:24.5049075Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5049147Z         """
2025-01-24T14:29:24.5049290Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5049295Z 
2025-01-24T14:29:24.5049438Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5049683Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5049848Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5050001Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5050220Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5050357Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5050473Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5050478Z 
2025-01-24T14:29:24.5050691Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5050872Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5050956Z packets_mode = 'real'
2025-01-24T14:29:24.5050961Z 
2025-01-24T14:29:24.5051042Z     @classmethod
2025-01-24T14:29:24.5051157Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5051236Z         """
2025-01-24T14:29:24.5051433Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5051510Z     
2025-01-24T14:29:24.5051592Z         Parameters
2025-01-24T14:29:24.5051667Z         ----------
2025-01-24T14:29:24.5051772Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5051920Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5052019Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5052158Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5052234Z     
2025-01-24T14:29:24.5052426Z         Returns
2025-01-24T14:29:24.5052504Z         -------
2025-01-24T14:29:24.5052592Z         SimulationPacketData
2025-01-24T14:29:24.5052669Z         """
2025-01-24T14:29:24.5052778Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5052868Z             raise ValueError(
2025-01-24T14:29:24.5052991Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5053101Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5053179Z             )
2025-01-24T14:29:24.5053285Z         # Properties common among both packet modes
2025-01-24T14:29:24.5053453Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5053529Z             "line_id"
2025-01-24T14:29:24.5053605Z         )
2025-01-24T14:29:24.5053714Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5053844Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5053929Z         time_of_simulation = (
2025-01-24T14:29:24.5054094Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5054165Z         )
2025-01-24T14:29:24.5054241Z     
2025-01-24T14:29:24.5054320Z         spectrum = (
2025-01-24T14:29:24.5054443Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5054538Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5054663Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5054734Z         )
2025-01-24T14:29:24.5054813Z     
2025-01-24T14:29:24.5054913Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5055036Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5055120Z             return cls(
2025-01-24T14:29:24.5055280Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5055458Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5055638Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5055818Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5055969Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5056146Z                 lines_df=lines_df,
2025-01-24T14:29:24.5056275Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5056436Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5056572Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5056691Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5056884Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5056995Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5057104Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5057206Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5057294Z                 simulation=sim,
2025-01-24T14:29:24.5057367Z             )
2025-01-24T14:29:24.5057460Z         else: # real packets
2025-01-24T14:29:24.5057629Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5057719Z             # which got emitted
2025-01-24T14:29:24.5057832Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5057916Z >           return cls(
2025-01-24T14:29:24.5058098Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5058417Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5058504Z                     mask
2025-01-24T14:29:24.5058577Z                 ],
2025-01-24T14:29:24.5058772Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5058969Z                     mask
2025-01-24T14:29:24.5059046Z                 ],
2025-01-24T14:29:24.5059219Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5059299Z                     mask
2025-01-24T14:29:24.5059371Z                 ],
2025-01-24T14:29:24.5059546Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5059632Z                 lines_df=lines_df,
2025-01-24T14:29:24.5059801Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5059982Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5060057Z                     mask
2025-01-24T14:29:24.5060135Z                 ],
2025-01-24T14:29:24.5060267Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5060390Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5060579Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5060699Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5060804Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5060907Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5060993Z                 simulation=sim,
2025-01-24T14:29:24.5061070Z             )
2025-01-24T14:29:24.5061406Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5061417Z 
2025-01-24T14:29:24.5061588Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5061865Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-24T14:29:24.5061871Z 
2025-01-24T14:29:24.5062137Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5062361Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5062596Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5062601Z 
2025-01-24T14:29:24.5062701Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5062934Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5063015Z         """
2025-01-24T14:29:24.5063106Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5063184Z     
2025-01-24T14:29:24.5063264Z         Parameters
2025-01-24T14:29:24.5063340Z         ----------
2025-01-24T14:29:24.5063491Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5063575Z             Simulation object.
2025-01-24T14:29:24.5063649Z     
2025-01-24T14:29:24.5063722Z         Returns
2025-01-24T14:29:24.5063805Z         -------
2025-01-24T14:29:24.5063938Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5064014Z         """
2025-01-24T14:29:24.5064155Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5064160Z 
2025-01-24T14:29:24.5064308Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5064426Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5064600Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5064754Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5064968Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5065106Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5065217Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5065222Z 
2025-01-24T14:29:24.5065441Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5065611Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5065784Z packets_mode = 'real'
2025-01-24T14:29:24.5065788Z 
2025-01-24T14:29:24.5065865Z     @classmethod
2025-01-24T14:29:24.5065983Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5066054Z         """
2025-01-24T14:29:24.5066261Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5066364Z     
2025-01-24T14:29:24.5066441Z         Parameters
2025-01-24T14:29:24.5066521Z         ----------
2025-01-24T14:29:24.5066623Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5066776Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5066873Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5067021Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5067091Z     
2025-01-24T14:29:24.5067171Z         Returns
2025-01-24T14:29:24.5067246Z         -------
2025-01-24T14:29:24.5067339Z         SimulationPacketData
2025-01-24T14:29:24.5067415Z         """
2025-01-24T14:29:24.5067526Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5067609Z             raise ValueError(
2025-01-24T14:29:24.5067738Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5067843Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5067924Z             )
2025-01-24T14:29:24.5068035Z         # Properties common among both packet modes
2025-01-24T14:29:24.5068198Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5068398Z             "line_id"
2025-01-24T14:29:24.5068472Z         )
2025-01-24T14:29:24.5068586Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5068712Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5068801Z         time_of_simulation = (
2025-01-24T14:29:24.5068956Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5069033Z         )
2025-01-24T14:29:24.5069107Z     
2025-01-24T14:29:24.5069189Z         spectrum = (
2025-01-24T14:29:24.5069306Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5069401Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5069522Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5069737Z         )
2025-01-24T14:29:24.5069815Z     
2025-01-24T14:29:24.5069904Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5070033Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5070110Z             return cls(
2025-01-24T14:29:24.5070274Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5070447Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5070632Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5070799Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5070961Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5071046Z                 lines_df=lines_df,
2025-01-24T14:29:24.5071182Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5071343Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5071478Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5071602Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5071792Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5071906Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5072010Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5072111Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5072195Z                 simulation=sim,
2025-01-24T14:29:24.5072394Z             )
2025-01-24T14:29:24.5072478Z         else: # real packets
2025-01-24T14:29:24.5072651Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5072733Z             # which got emitted
2025-01-24T14:29:24.5072846Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5072926Z >           return cls(
2025-01-24T14:29:24.5073106Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5073296Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5073372Z                     mask
2025-01-24T14:29:24.5073451Z                 ],
2025-01-24T14:29:24.5073642Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5073722Z                     mask
2025-01-24T14:29:24.5073794Z                 ],
2025-01-24T14:29:24.5073968Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5074049Z                     mask
2025-01-24T14:29:24.5074126Z                 ],
2025-01-24T14:29:24.5074297Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5074386Z                 lines_df=lines_df,
2025-01-24T14:29:24.5074553Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5074740Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5074821Z                     mask
2025-01-24T14:29:24.5074893Z                 ],
2025-01-24T14:29:24.5075027Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5075142Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5075333Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5075444Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5075554Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5075651Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5075737Z                 simulation=sim,
2025-01-24T14:29:24.5075809Z             )
2025-01-24T14:29:24.5076152Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5076246Z 
2025-01-24T14:29:24.5076427Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5076704Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-24T14:29:24.5076709Z 
2025-01-24T14:29:24.5076979Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5077195Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5077430Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5077439Z 
2025-01-24T14:29:24.5077529Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5077649Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5077720Z         """
2025-01-24T14:29:24.5077814Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5077896Z     
2025-01-24T14:29:24.5077973Z         Parameters
2025-01-24T14:29:24.5078053Z         ----------
2025-01-24T14:29:24.5078197Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5078383Z             Simulation object.
2025-01-24T14:29:24.5078456Z     
2025-01-24T14:29:24.5078534Z         Returns
2025-01-24T14:29:24.5078608Z         -------
2025-01-24T14:29:24.5078744Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5078815Z         """
2025-01-24T14:29:24.5078956Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5078960Z 
2025-01-24T14:29:24.5079104Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5079350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5079514Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5079666Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5079892Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5080028Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5080144Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5080149Z 
2025-01-24T14:29:24.5080365Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5080537Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5080619Z packets_mode = 'real'
2025-01-24T14:29:24.5080624Z 
2025-01-24T14:29:24.5080704Z     @classmethod
2025-01-24T14:29:24.5080818Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5080895Z         """
2025-01-24T14:29:24.5081088Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5081165Z     
2025-01-24T14:29:24.5081245Z         Parameters
2025-01-24T14:29:24.5081324Z         ----------
2025-01-24T14:29:24.5081430Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5081577Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5081675Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5081816Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5081893Z     
2025-01-24T14:29:24.5081965Z         Returns
2025-01-24T14:29:24.5082043Z         -------
2025-01-24T14:29:24.5082129Z         SimulationPacketData
2025-01-24T14:29:24.5082206Z         """
2025-01-24T14:29:24.5082313Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5082403Z             raise ValueError(
2025-01-24T14:29:24.5082526Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5082635Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5082712Z             )
2025-01-24T14:29:24.5082820Z         # Properties common among both packet modes
2025-01-24T14:29:24.5083106Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5083184Z             "line_id"
2025-01-24T14:29:24.5083260Z         )
2025-01-24T14:29:24.5083368Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5083499Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5083584Z         time_of_simulation = (
2025-01-24T14:29:24.5083749Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5083821Z         )
2025-01-24T14:29:24.5083896Z     
2025-01-24T14:29:24.5083974Z         spectrum = (
2025-01-24T14:29:24.5084094Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5084188Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5084312Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5084385Z         )
2025-01-24T14:29:24.5084460Z     
2025-01-24T14:29:24.5084555Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5084683Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5084768Z             return cls(
2025-01-24T14:29:24.5084927Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5085105Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5085284Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5085456Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5085607Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5085780Z                 lines_df=lines_df,
2025-01-24T14:29:24.5085908Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5086070Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5086204Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5086324Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5086516Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5086627Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5086737Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5086835Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5086923Z                 simulation=sim,
2025-01-24T14:29:24.5086995Z             )
2025-01-24T14:29:24.5087083Z         else: # real packets
2025-01-24T14:29:24.5087249Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5087338Z             # which got emitted
2025-01-24T14:29:24.5087447Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5087533Z >           return cls(
2025-01-24T14:29:24.5087712Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5087898Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5087979Z                     mask
2025-01-24T14:29:24.5088051Z                 ],
2025-01-24T14:29:24.5088344Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5088424Z                     mask
2025-01-24T14:29:24.5088502Z                 ],
2025-01-24T14:29:24.5088672Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5088753Z                     mask
2025-01-24T14:29:24.5088825Z                 ],
2025-01-24T14:29:24.5089002Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5089084Z                 lines_df=lines_df,
2025-01-24T14:29:24.5089254Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5089556Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5089632Z                     mask
2025-01-24T14:29:24.5089709Z                 ],
2025-01-24T14:29:24.5089839Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5089959Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5090148Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5090261Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5090363Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5090466Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5090549Z                 simulation=sim,
2025-01-24T14:29:24.5090627Z             )
2025-01-24T14:29:24.5090961Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5090975Z 
2025-01-24T14:29:24.5091153Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5091434Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-24T14:29:24.5091440Z 
2025-01-24T14:29:24.5091706Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5091926Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5092159Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5092164Z 
2025-01-24T14:29:24.5092258Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5092509Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5092587Z         """
2025-01-24T14:29:24.5092678Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5092753Z     
2025-01-24T14:29:24.5092834Z         Parameters
2025-01-24T14:29:24.5092909Z         ----------
2025-01-24T14:29:24.5093062Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5093147Z             Simulation object.
2025-01-24T14:29:24.5093223Z     
2025-01-24T14:29:24.5093295Z         Returns
2025-01-24T14:29:24.5093374Z         -------
2025-01-24T14:29:24.5093506Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5093583Z         """
2025-01-24T14:29:24.5093716Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5093720Z 
2025-01-24T14:29:24.5093868Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5093986Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5094158Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5094303Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5094524Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5094667Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5094777Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5094782Z 
2025-01-24T14:29:24.5095070Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5095343Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5095436Z packets_mode = 'real'
2025-01-24T14:29:24.5095441Z 
2025-01-24T14:29:24.5095517Z     @classmethod
2025-01-24T14:29:24.5095635Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5095707Z         """
2025-01-24T14:29:24.5095913Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5095996Z     
2025-01-24T14:29:24.5096072Z         Parameters
2025-01-24T14:29:24.5096154Z         ----------
2025-01-24T14:29:24.5096255Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5096524Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5096618Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5096762Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5096833Z     
2025-01-24T14:29:24.5096910Z         Returns
2025-01-24T14:29:24.5096985Z         -------
2025-01-24T14:29:24.5097077Z         SimulationPacketData
2025-01-24T14:29:24.5097149Z         """
2025-01-24T14:29:24.5097263Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5097348Z             raise ValueError(
2025-01-24T14:29:24.5097474Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5097586Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5097663Z             )
2025-01-24T14:29:24.5097775Z         # Properties common among both packet modes
2025-01-24T14:29:24.5097936Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5098021Z             "line_id"
2025-01-24T14:29:24.5098093Z         )
2025-01-24T14:29:24.5098206Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5098456Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5098550Z         time_of_simulation = (
2025-01-24T14:29:24.5098710Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5098786Z         )
2025-01-24T14:29:24.5098857Z     
2025-01-24T14:29:24.5098939Z         spectrum = (
2025-01-24T14:29:24.5099059Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5099155Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5099275Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5099477Z         )
2025-01-24T14:29:24.5099555Z     
2025-01-24T14:29:24.5099644Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5099776Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5099858Z             return cls(
2025-01-24T14:29:24.5100023Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5100199Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5100385Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5100565Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5100724Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5100808Z                 lines_df=lines_df,
2025-01-24T14:29:24.5100943Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5101104Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5101240Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5101366Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5101557Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5101673Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5101779Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5101883Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5101969Z                 simulation=sim,
2025-01-24T14:29:24.5102048Z             )
2025-01-24T14:29:24.5102131Z         else: # real packets
2025-01-24T14:29:24.5102301Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5102382Z             # which got emitted
2025-01-24T14:29:24.5102502Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5102579Z >           return cls(
2025-01-24T14:29:24.5102760Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5102949Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5103144Z                     mask
2025-01-24T14:29:24.5103222Z                 ],
2025-01-24T14:29:24.5103414Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5103495Z                     mask
2025-01-24T14:29:24.5103568Z                 ],
2025-01-24T14:29:24.5103741Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5103817Z                     mask
2025-01-24T14:29:24.5103893Z                 ],
2025-01-24T14:29:24.5104060Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5104149Z                 lines_df=lines_df,
2025-01-24T14:29:24.5104318Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5104498Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5104580Z                     mask
2025-01-24T14:29:24.5104655Z                 ],
2025-01-24T14:29:24.5104792Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5104912Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5105106Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5105216Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5105325Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5105421Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5105519Z                 simulation=sim,
2025-01-24T14:29:24.5105616Z             )
2025-01-24T14:29:24.5106062Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5106068Z 
2025-01-24T14:29:24.5106246Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5106519Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-24T14:29:24.5106528Z 
2025-01-24T14:29:24.5106799Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5107016Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5107259Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5107264Z 
2025-01-24T14:29:24.5107355Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5107477Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5107549Z         """
2025-01-24T14:29:24.5107647Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5107723Z     
2025-01-24T14:29:24.5107800Z         Parameters
2025-01-24T14:29:24.5107879Z         ----------
2025-01-24T14:29:24.5108023Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5108112Z             Simulation object.
2025-01-24T14:29:24.5108186Z     
2025-01-24T14:29:24.5108420Z         Returns
2025-01-24T14:29:24.5108499Z         -------
2025-01-24T14:29:24.5108636Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5108709Z         """
2025-01-24T14:29:24.5108850Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5108855Z 
2025-01-24T14:29:24.5108999Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5109121Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5109282Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5109439Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5109663Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5109796Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5109911Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5110039Z 
2025-01-24T14:29:24.5110261Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5110435Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5110521Z packets_mode = 'real'
2025-01-24T14:29:24.5110526Z 
2025-01-24T14:29:24.5110608Z     @classmethod
2025-01-24T14:29:24.5110718Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5110796Z         """
2025-01-24T14:29:24.5110989Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5111066Z     
2025-01-24T14:29:24.5111147Z         Parameters
2025-01-24T14:29:24.5111226Z         ----------
2025-01-24T14:29:24.5111335Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5111485Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5111588Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5111731Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5111810Z     
2025-01-24T14:29:24.5111883Z         Returns
2025-01-24T14:29:24.5111961Z         -------
2025-01-24T14:29:24.5112051Z         SimulationPacketData
2025-01-24T14:29:24.5112128Z         """
2025-01-24T14:29:24.5112234Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5112326Z             raise ValueError(
2025-01-24T14:29:24.5112443Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5112553Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5112630Z             )
2025-01-24T14:29:24.5112736Z         # Properties common among both packet modes
2025-01-24T14:29:24.5113024Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5113099Z             "line_id"
2025-01-24T14:29:24.5113178Z         )
2025-01-24T14:29:24.5113286Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5113419Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5113505Z         time_of_simulation = (
2025-01-24T14:29:24.5113671Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5113748Z         )
2025-01-24T14:29:24.5113823Z     
2025-01-24T14:29:24.5113902Z         spectrum = (
2025-01-24T14:29:24.5114022Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5114112Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5114235Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5114308Z         )
2025-01-24T14:29:24.5114384Z     
2025-01-24T14:29:24.5114482Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5114606Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5114688Z             return cls(
2025-01-24T14:29:24.5114847Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5115030Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5115209Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5115382Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5115531Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5115622Z                 lines_df=lines_df,
2025-01-24T14:29:24.5115749Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5115910Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5116056Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5116173Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5116366Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5116565Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5116675Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5116772Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5116859Z                 simulation=sim,
2025-01-24T14:29:24.5116932Z             )
2025-01-24T14:29:24.5117019Z         else: # real packets
2025-01-24T14:29:24.5117202Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5117312Z             # which got emitted
2025-01-24T14:29:24.5117421Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5117509Z >           return cls(
2025-01-24T14:29:24.5117688Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5117877Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5117963Z                     mask
2025-01-24T14:29:24.5118036Z                 ],
2025-01-24T14:29:24.5118357Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5118435Z                     mask
2025-01-24T14:29:24.5118514Z                 ],
2025-01-24T14:29:24.5118683Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5118763Z                     mask
2025-01-24T14:29:24.5118834Z                 ],
2025-01-24T14:29:24.5119009Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5119092Z                 lines_df=lines_df,
2025-01-24T14:29:24.5119262Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5119586Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5119661Z                     mask
2025-01-24T14:29:24.5119737Z                 ],
2025-01-24T14:29:24.5119865Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5119990Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5120178Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5120291Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5120398Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5120496Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5120577Z                 simulation=sim,
2025-01-24T14:29:24.5120654Z             )
2025-01-24T14:29:24.5120988Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5121002Z 
2025-01-24T14:29:24.5121172Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5121453Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-24T14:29:24.5121459Z 
2025-01-24T14:29:24.5121726Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5121947Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5122178Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5122183Z 
2025-01-24T14:29:24.5122279Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5122395Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5122477Z         """
2025-01-24T14:29:24.5122568Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5122644Z     
2025-01-24T14:29:24.5122727Z         Parameters
2025-01-24T14:29:24.5122806Z         ----------
2025-01-24T14:29:24.5122953Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5123037Z             Simulation object.
2025-01-24T14:29:24.5123115Z     
2025-01-24T14:29:24.5123188Z         Returns
2025-01-24T14:29:24.5123266Z         -------
2025-01-24T14:29:24.5123516Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5123595Z         """
2025-01-24T14:29:24.5123730Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5123734Z 
2025-01-24T14:29:24.5123880Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5123994Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5124162Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5124311Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5124527Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5124671Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5124785Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5124789Z 
2025-01-24T14:29:24.5125010Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5125185Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5125272Z packets_mode = 'real'
2025-01-24T14:29:24.5125277Z 
2025-01-24T14:29:24.5125353Z     @classmethod
2025-01-24T14:29:24.5125469Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5125541Z         """
2025-01-24T14:29:24.5125741Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5125818Z     
2025-01-24T14:29:24.5125903Z         Parameters
2025-01-24T14:29:24.5125983Z         ----------
2025-01-24T14:29:24.5126083Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5126321Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5126415Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5126563Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5126634Z     
2025-01-24T14:29:24.5126723Z         Returns
2025-01-24T14:29:24.5126801Z         -------
2025-01-24T14:29:24.5126896Z         SimulationPacketData
2025-01-24T14:29:24.5126970Z         """
2025-01-24T14:29:24.5127085Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5127171Z             raise ValueError(
2025-01-24T14:29:24.5127294Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5127400Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5127478Z             )
2025-01-24T14:29:24.5127592Z         # Properties common among both packet modes
2025-01-24T14:29:24.5127754Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5127839Z             "line_id"
2025-01-24T14:29:24.5127912Z         )
2025-01-24T14:29:24.5128025Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5128151Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5128343Z         time_of_simulation = (
2025-01-24T14:29:24.5128510Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5128587Z         )
2025-01-24T14:29:24.5128658Z     
2025-01-24T14:29:24.5128742Z         spectrum = (
2025-01-24T14:29:24.5128863Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5128960Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5129078Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5129156Z         )
2025-01-24T14:29:24.5129233Z     
2025-01-24T14:29:24.5129323Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5129480Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5129564Z             return cls(
2025-01-24T14:29:24.5129727Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5129902Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5130086Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5130379Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5130538Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5130623Z                 lines_df=lines_df,
2025-01-24T14:29:24.5130756Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5130910Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5131046Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5131170Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5131363Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5131484Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5131590Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5131698Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5131782Z                 simulation=sim,
2025-01-24T14:29:24.5131861Z             )
2025-01-24T14:29:24.5131945Z         else: # real packets
2025-01-24T14:29:24.5132118Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5132200Z             # which got emitted
2025-01-24T14:29:24.5132315Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5132393Z >           return cls(
2025-01-24T14:29:24.5132578Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5132771Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5132966Z                     mask
2025-01-24T14:29:24.5133044Z                 ],
2025-01-24T14:29:24.5133233Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5133320Z                     mask
2025-01-24T14:29:24.5133392Z                 ],
2025-01-24T14:29:24.5133566Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5133641Z                     mask
2025-01-24T14:29:24.5133719Z                 ],
2025-01-24T14:29:24.5133886Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5133975Z                 lines_df=lines_df,
2025-01-24T14:29:24.5134140Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5134322Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5144970Z                     mask
2025-01-24T14:29:24.5145088Z                 ],
2025-01-24T14:29:24.5145255Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5145385Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5145596Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5145721Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5145835Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5145944Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5146030Z                 simulation=sim,
2025-01-24T14:29:24.5146109Z             )
2025-01-24T14:29:24.5146456Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5146463Z 
2025-01-24T14:29:24.5146650Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5146934Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-24T14:29:24.5146940Z 
2025-01-24T14:29:24.5147216Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5147437Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5147847Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5147855Z 
2025-01-24T14:29:24.5147954Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5148075Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5148153Z         """
2025-01-24T14:29:24.5148366Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5148446Z     
2025-01-24T14:29:24.5148526Z         Parameters
2025-01-24T14:29:24.5148609Z         ----------
2025-01-24T14:29:24.5148765Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5148861Z             Simulation object.
2025-01-24T14:29:24.5148932Z     
2025-01-24T14:29:24.5149010Z         Returns
2025-01-24T14:29:24.5149084Z         -------
2025-01-24T14:29:24.5149225Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5149297Z         """
2025-01-24T14:29:24.5149442Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5149447Z 
2025-01-24T14:29:24.5149600Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5149718Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5149887Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5150039Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5150261Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5150395Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5150512Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5150638Z 
2025-01-24T14:29:24.5150855Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5151035Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5151128Z packets_mode = 'real'
2025-01-24T14:29:24.5151134Z 
2025-01-24T14:29:24.5151210Z     @classmethod
2025-01-24T14:29:24.5151327Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5151399Z         """
2025-01-24T14:29:24.5151608Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5151679Z     
2025-01-24T14:29:24.5151760Z         Parameters
2025-01-24T14:29:24.5151836Z         ----------
2025-01-24T14:29:24.5151948Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5152102Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5152204Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5152352Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5152429Z     
2025-01-24T14:29:24.5152502Z         Returns
2025-01-24T14:29:24.5152584Z         -------
2025-01-24T14:29:24.5152682Z         SimulationPacketData
2025-01-24T14:29:24.5152757Z         """
2025-01-24T14:29:24.5152870Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5152954Z             raise ValueError(
2025-01-24T14:29:24.5153080Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5153188Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5153265Z             )
2025-01-24T14:29:24.5153373Z         # Properties common among both packet modes
2025-01-24T14:29:24.5153542Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5153619Z             "line_id"
2025-01-24T14:29:24.5153697Z         )
2025-01-24T14:29:24.5153807Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5153942Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5154029Z         time_of_simulation = (
2025-01-24T14:29:24.5154196Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5154272Z         )
2025-01-24T14:29:24.5154483Z     
2025-01-24T14:29:24.5154567Z         spectrum = (
2025-01-24T14:29:24.5154691Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5154790Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5154911Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5154991Z         )
2025-01-24T14:29:24.5155060Z     
2025-01-24T14:29:24.5155156Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5155282Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5155364Z             return cls(
2025-01-24T14:29:24.5155525Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5155707Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5155887Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5156062Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5156222Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5156310Z                 lines_df=lines_df,
2025-01-24T14:29:24.5156447Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5156606Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5156737Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5156860Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5157049Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5157254Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5157362Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5157465Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5157547Z                 simulation=sim,
2025-01-24T14:29:24.5157628Z             )
2025-01-24T14:29:24.5157710Z         else: # real packets
2025-01-24T14:29:24.5157882Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5157968Z             # which got emitted
2025-01-24T14:29:24.5158076Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5158157Z >           return cls(
2025-01-24T14:29:24.5158439Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5158630Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5158706Z                     mask
2025-01-24T14:29:24.5158784Z                 ],
2025-01-24T14:29:24.5158978Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5159059Z                     mask
2025-01-24T14:29:24.5159131Z                 ],
2025-01-24T14:29:24.5159303Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5159380Z                     mask
2025-01-24T14:29:24.5159458Z                 ],
2025-01-24T14:29:24.5159625Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5159716Z                 lines_df=lines_df,
2025-01-24T14:29:24.5159885Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5160056Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5160135Z                     mask
2025-01-24T14:29:24.5160207Z                 ],
2025-01-24T14:29:24.5160340Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5160462Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5160652Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5160762Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5160991Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5161087Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5161175Z                 simulation=sim,
2025-01-24T14:29:24.5161251Z             )
2025-01-24T14:29:24.5161591Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5161597Z 
2025-01-24T14:29:24.5161779Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5162059Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-24T14:29:24.5162064Z 
2025-01-24T14:29:24.5162342Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5162558Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5162800Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5162809Z 
2025-01-24T14:29:24.5162906Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5163024Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5163102Z         """
2025-01-24T14:29:24.5163192Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5163274Z     
2025-01-24T14:29:24.5163354Z         Parameters
2025-01-24T14:29:24.5163436Z         ----------
2025-01-24T14:29:24.5163584Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5163675Z             Simulation object.
2025-01-24T14:29:24.5163746Z     
2025-01-24T14:29:24.5163827Z         Returns
2025-01-24T14:29:24.5163902Z         -------
2025-01-24T14:29:24.5164161Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5164236Z         """
2025-01-24T14:29:24.5164375Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5164380Z 
2025-01-24T14:29:24.5164525Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5164652Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5164822Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5164972Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5165193Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5165328Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5165444Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5165449Z 
2025-01-24T14:29:24.5165665Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5165845Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5165929Z packets_mode = 'real'
2025-01-24T14:29:24.5165934Z 
2025-01-24T14:29:24.5166013Z     @classmethod
2025-01-24T14:29:24.5166140Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5166211Z         """
2025-01-24T14:29:24.5166413Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5166483Z     
2025-01-24T14:29:24.5166564Z         Parameters
2025-01-24T14:29:24.5166639Z         ----------
2025-01-24T14:29:24.5166743Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5166896Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5166997Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5167136Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5167212Z     
2025-01-24T14:29:24.5167288Z         Returns
2025-01-24T14:29:24.5167366Z         -------
2025-01-24T14:29:24.5167453Z         SimulationPacketData
2025-01-24T14:29:24.5167530Z         """
2025-01-24T14:29:24.5167637Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5167820Z             raise ValueError(
2025-01-24T14:29:24.5167942Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5168045Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5168122Z             )
2025-01-24T14:29:24.5168333Z         # Properties common among both packet modes
2025-01-24T14:29:24.5168500Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5168574Z             "line_id"
2025-01-24T14:29:24.5168649Z         )
2025-01-24T14:29:24.5168758Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5168886Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5168971Z         time_of_simulation = (
2025-01-24T14:29:24.5169137Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5169208Z         )
2025-01-24T14:29:24.5169282Z     
2025-01-24T14:29:24.5169359Z         spectrum = (
2025-01-24T14:29:24.5169481Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5169582Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5169701Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5169777Z         )
2025-01-24T14:29:24.5169847Z     
2025-01-24T14:29:24.5169942Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5170066Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5170146Z             return cls(
2025-01-24T14:29:24.5170304Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5170481Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5170780Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5170953Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5171102Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5171199Z                 lines_df=lines_df,
2025-01-24T14:29:24.5171333Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5171488Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5171627Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5171747Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5171940Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5172049Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5172158Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5172260Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5172348Z                 simulation=sim,
2025-01-24T14:29:24.5172420Z             )
2025-01-24T14:29:24.5172509Z         else: # real packets
2025-01-24T14:29:24.5172675Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5172767Z             # which got emitted
2025-01-24T14:29:24.5172879Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5172955Z >           return cls(
2025-01-24T14:29:24.5173138Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5173322Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5173404Z                     mask
2025-01-24T14:29:24.5173476Z                 ],
2025-01-24T14:29:24.5173672Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5173751Z                     mask
2025-01-24T14:29:24.5173827Z                 ],
2025-01-24T14:29:24.5173994Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5174075Z                     mask
2025-01-24T14:29:24.5174146Z                 ],
2025-01-24T14:29:24.5174458Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5174546Z                 lines_df=lines_df,
2025-01-24T14:29:24.5174709Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5174887Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5174961Z                     mask
2025-01-24T14:29:24.5175038Z                 ],
2025-01-24T14:29:24.5175166Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5175287Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5175474Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5175591Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5175692Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5175797Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5175880Z                 simulation=sim,
2025-01-24T14:29:24.5175964Z             )
2025-01-24T14:29:24.5176306Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5176312Z 
2025-01-24T14:29:24.5176483Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5176713Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] _
2025-01-24T14:29:24.5176719Z 
2025-01-24T14:29:24.5176986Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5177204Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5177525Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5177531Z 
2025-01-24T14:29:24.5177626Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5177748Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5177820Z         """
2025-01-24T14:29:24.5177916Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5177986Z     
2025-01-24T14:29:24.5178066Z         Parameters
2025-01-24T14:29:24.5178142Z         ----------
2025-01-24T14:29:24.5178393Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5178479Z             Simulation object.
2025-01-24T14:29:24.5178555Z     
2025-01-24T14:29:24.5178626Z         Returns
2025-01-24T14:29:24.5178704Z         -------
2025-01-24T14:29:24.5178834Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5178912Z         """
2025-01-24T14:29:24.5179048Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5179052Z 
2025-01-24T14:29:24.5179199Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5179314Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5179486Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5179639Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5179864Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5180012Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5180129Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5180133Z 
2025-01-24T14:29:24.5180351Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5180528Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5180615Z packets_mode = 'real'
2025-01-24T14:29:24.5180619Z 
2025-01-24T14:29:24.5180700Z     @classmethod
2025-01-24T14:29:24.5180814Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5180890Z         """
2025-01-24T14:29:24.5181085Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5181302Z     
2025-01-24T14:29:24.5181384Z         Parameters
2025-01-24T14:29:24.5181459Z         ----------
2025-01-24T14:29:24.5181564Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5181714Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5181812Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5181951Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5182029Z     
2025-01-24T14:29:24.5182101Z         Returns
2025-01-24T14:29:24.5182179Z         -------
2025-01-24T14:29:24.5182267Z         SimulationPacketData
2025-01-24T14:29:24.5182347Z         """
2025-01-24T14:29:24.5182454Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5182543Z             raise ValueError(
2025-01-24T14:29:24.5182663Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5182772Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5182846Z             )
2025-01-24T14:29:24.5182959Z         # Properties common among both packet modes
2025-01-24T14:29:24.5183124Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5183202Z             "line_id"
2025-01-24T14:29:24.5183278Z         )
2025-01-24T14:29:24.5183386Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5183516Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5183601Z         time_of_simulation = (
2025-01-24T14:29:24.5183761Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5183832Z         )
2025-01-24T14:29:24.5184023Z     
2025-01-24T14:29:24.5184101Z         spectrum = (
2025-01-24T14:29:24.5184218Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5184309Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5184431Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5184505Z         )
2025-01-24T14:29:24.5184580Z     
2025-01-24T14:29:24.5184669Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5184795Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5184884Z             return cls(
2025-01-24T14:29:24.5185042Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5185223Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5185400Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5185573Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5185731Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5185819Z                 lines_df=lines_df,
2025-01-24T14:29:24.5185947Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5186108Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5186238Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5186360Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5186553Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5186663Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5186772Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5186870Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5186960Z                 simulation=sim,
2025-01-24T14:29:24.5187035Z             )
2025-01-24T14:29:24.5187122Z         else: # real packets
2025-01-24T14:29:24.5187287Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5187374Z             # which got emitted
2025-01-24T14:29:24.5187482Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5187655Z >           return cls(
2025-01-24T14:29:24.5187830Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5188020Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5188101Z                     mask
2025-01-24T14:29:24.5188172Z                 ],
2025-01-24T14:29:24.5188501Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5188579Z                     mask
2025-01-24T14:29:24.5188655Z                 ],
2025-01-24T14:29:24.5188820Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5188904Z                     mask
2025-01-24T14:29:24.5188975Z                 ],
2025-01-24T14:29:24.5189148Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5189230Z                 lines_df=lines_df,
2025-01-24T14:29:24.5189400Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5189574Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5189653Z                     mask
2025-01-24T14:29:24.5189728Z                 ],
2025-01-24T14:29:24.5189853Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5189974Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5190161Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5190276Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5190500Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5190600Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5190680Z                 simulation=sim,
2025-01-24T14:29:24.5190756Z             )
2025-01-24T14:29:24.5191092Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5191098Z 
2025-01-24T14:29:24.5191278Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5191510Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] _
2025-01-24T14:29:24.5191515Z 
2025-01-24T14:29:24.5191782Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5191999Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5192236Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5192244Z 
2025-01-24T14:29:24.5192338Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5192452Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5192530Z         """
2025-01-24T14:29:24.5192620Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5192700Z     
2025-01-24T14:29:24.5192781Z         Parameters
2025-01-24T14:29:24.5192856Z         ----------
2025-01-24T14:29:24.5193001Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5193086Z             Simulation object.
2025-01-24T14:29:24.5193161Z     
2025-01-24T14:29:24.5193233Z         Returns
2025-01-24T14:29:24.5193311Z         -------
2025-01-24T14:29:24.5193439Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5193514Z         """
2025-01-24T14:29:24.5193646Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5193651Z 
2025-01-24T14:29:24.5193799Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5193915Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5194082Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5194229Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5194570Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5194708Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5194816Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5194820Z 
2025-01-24T14:29:24.5195038Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5195206Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5195293Z packets_mode = 'real'
2025-01-24T14:29:24.5195298Z 
2025-01-24T14:29:24.5195372Z     @classmethod
2025-01-24T14:29:24.5195494Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5195566Z         """
2025-01-24T14:29:24.5195762Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5195834Z     
2025-01-24T14:29:24.5195916Z         Parameters
2025-01-24T14:29:24.5195999Z         ----------
2025-01-24T14:29:24.5196100Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5196253Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5196346Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5196491Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5196562Z     
2025-01-24T14:29:24.5196639Z         Returns
2025-01-24T14:29:24.5196713Z         -------
2025-01-24T14:29:24.5196805Z         SimulationPacketData
2025-01-24T14:29:24.5196877Z         """
2025-01-24T14:29:24.5196988Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5197073Z             raise ValueError(
2025-01-24T14:29:24.5197283Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5197386Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5197461Z             )
2025-01-24T14:29:24.5197568Z         # Properties common among both packet modes
2025-01-24T14:29:24.5197737Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5197816Z             "line_id"
2025-01-24T14:29:24.5197886Z         )
2025-01-24T14:29:24.5197998Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5198124Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5198211Z         time_of_simulation = (
2025-01-24T14:29:24.5198466Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5198544Z         )
2025-01-24T14:29:24.5198614Z     
2025-01-24T14:29:24.5198695Z         spectrum = (
2025-01-24T14:29:24.5198808Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5198907Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5199025Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5199100Z         )
2025-01-24T14:29:24.5199171Z     
2025-01-24T14:29:24.5199264Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5199395Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5199472Z             return cls(
2025-01-24T14:29:24.5199634Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5199805Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5199987Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5200153Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5200309Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5200397Z                 lines_df=lines_df,
2025-01-24T14:29:24.5200530Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5200686Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5200820Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5201063Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5201249Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5201362Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5201470Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5201572Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5201653Z                 simulation=sim,
2025-01-24T14:29:24.5201728Z             )
2025-01-24T14:29:24.5201812Z         else: # real packets
2025-01-24T14:29:24.5201982Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5202067Z             # which got emitted
2025-01-24T14:29:24.5202181Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5202256Z >           return cls(
2025-01-24T14:29:24.5202435Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5202628Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5202704Z                     mask
2025-01-24T14:29:24.5202780Z                 ],
2025-01-24T14:29:24.5202968Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5203047Z                     mask
2025-01-24T14:29:24.5203119Z                 ],
2025-01-24T14:29:24.5203292Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5203366Z                     mask
2025-01-24T14:29:24.5203442Z                 ],
2025-01-24T14:29:24.5203742Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5203831Z                 lines_df=lines_df,
2025-01-24T14:29:24.5203996Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5204179Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5204261Z                     mask
2025-01-24T14:29:24.5204332Z                 ],
2025-01-24T14:29:24.5204464Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5204578Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5204772Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5204880Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5204985Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5205079Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5205170Z                 simulation=sim,
2025-01-24T14:29:24.5205240Z             )
2025-01-24T14:29:24.5205579Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5205587Z 
2025-01-24T14:29:24.5205762Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5205988Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] _
2025-01-24T14:29:24.5205993Z 
2025-01-24T14:29:24.5206264Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5206485Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5206725Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5206731Z 
2025-01-24T14:29:24.5206821Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5206944Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5207017Z         """
2025-01-24T14:29:24.5207112Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5207182Z     
2025-01-24T14:29:24.5207263Z         Parameters
2025-01-24T14:29:24.5207346Z         ----------
2025-01-24T14:29:24.5207577Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5207664Z             Simulation object.
2025-01-24T14:29:24.5207734Z     
2025-01-24T14:29:24.5207811Z         Returns
2025-01-24T14:29:24.5207885Z         -------
2025-01-24T14:29:24.5208018Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5208088Z         """
2025-01-24T14:29:24.5208327Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5208333Z 
2025-01-24T14:29:24.5208477Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5208595Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5208763Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5208917Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5209132Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5209279Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5209393Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5209398Z 
2025-01-24T14:29:24.5209610Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5209783Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5209866Z packets_mode = 'real'
2025-01-24T14:29:24.5209871Z 
2025-01-24T14:29:24.5209952Z     @classmethod
2025-01-24T14:29:24.5210063Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5210140Z         """
2025-01-24T14:29:24.5210337Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5210531Z     
2025-01-24T14:29:24.5210607Z         Parameters
2025-01-24T14:29:24.5210687Z         ----------
2025-01-24T14:29:24.5210793Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5210943Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5211045Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5211183Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5211260Z     
2025-01-24T14:29:24.5211333Z         Returns
2025-01-24T14:29:24.5211411Z         -------
2025-01-24T14:29:24.5211498Z         SimulationPacketData
2025-01-24T14:29:24.5211574Z         """
2025-01-24T14:29:24.5211681Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5211771Z             raise ValueError(
2025-01-24T14:29:24.5211887Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5211996Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5212071Z             )
2025-01-24T14:29:24.5212182Z         # Properties common among both packet modes
2025-01-24T14:29:24.5212347Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5212422Z             "line_id"
2025-01-24T14:29:24.5212501Z         )
2025-01-24T14:29:24.5212609Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5212736Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5212821Z         time_of_simulation = (
2025-01-24T14:29:24.5212978Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5213051Z         )
2025-01-24T14:29:24.5213127Z     
2025-01-24T14:29:24.5213205Z         spectrum = (
2025-01-24T14:29:24.5213325Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5213417Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5213539Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5213613Z         )
2025-01-24T14:29:24.5213688Z     
2025-01-24T14:29:24.5213776Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5213905Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5213986Z             return cls(
2025-01-24T14:29:24.5214266Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5214443Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5214617Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5214791Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5214942Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5215033Z                 lines_df=lines_df,
2025-01-24T14:29:24.5215159Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5215321Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5215452Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5215573Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5215771Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5215881Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5215988Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5216087Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5216183Z                 simulation=sim,
2025-01-24T14:29:24.5216254Z             )
2025-01-24T14:29:24.5216341Z         else: # real packets
2025-01-24T14:29:24.5216507Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5216594Z             # which got emitted
2025-01-24T14:29:24.5216703Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5216869Z >           return cls(
2025-01-24T14:29:24.5217042Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5217233Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5217317Z                     mask
2025-01-24T14:29:24.5217389Z                 ],
2025-01-24T14:29:24.5217582Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5217657Z                     mask
2025-01-24T14:29:24.5217735Z                 ],
2025-01-24T14:29:24.5217901Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5217979Z                     mask
2025-01-24T14:29:24.5218050Z                 ],
2025-01-24T14:29:24.5218345Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5218431Z                 lines_df=lines_df,
2025-01-24T14:29:24.5218602Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5218774Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5218853Z                     mask
2025-01-24T14:29:24.5218933Z                 ],
2025-01-24T14:29:24.5219060Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5219181Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5219366Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5219477Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5219576Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5219677Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5219758Z                 simulation=sim,
2025-01-24T14:29:24.5219835Z             )
2025-01-24T14:29:24.5220165Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5220173Z 
2025-01-24T14:29:24.5220350Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5220582Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] _
2025-01-24T14:29:24.5220712Z 
2025-01-24T14:29:24.5220979Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5221198Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5221430Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5221435Z 
2025-01-24T14:29:24.5221530Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5221644Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5221721Z         """
2025-01-24T14:29:24.5221810Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5221892Z     
2025-01-24T14:29:24.5221970Z         Parameters
2025-01-24T14:29:24.5222051Z         ----------
2025-01-24T14:29:24.5222198Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5222280Z             Simulation object.
2025-01-24T14:29:24.5222360Z     
2025-01-24T14:29:24.5222432Z         Returns
2025-01-24T14:29:24.5222510Z         -------
2025-01-24T14:29:24.5222639Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5222717Z         """
2025-01-24T14:29:24.5222850Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5222855Z 
2025-01-24T14:29:24.5223000Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5223112Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5223279Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5223428Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5223759Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5223896Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5224005Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5224013Z 
2025-01-24T14:29:24.5224230Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5224397Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5224484Z packets_mode = 'real'
2025-01-24T14:29:24.5224488Z 
2025-01-24T14:29:24.5224563Z     @classmethod
2025-01-24T14:29:24.5224677Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5224748Z         """
2025-01-24T14:29:24.5224946Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5225017Z     
2025-01-24T14:29:24.5225101Z         Parameters
2025-01-24T14:29:24.5225185Z         ----------
2025-01-24T14:29:24.5225285Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5225437Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5225532Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5225675Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5225748Z     
2025-01-24T14:29:24.5225825Z         Returns
2025-01-24T14:29:24.5225899Z         -------
2025-01-24T14:29:24.5225990Z         SimulationPacketData
2025-01-24T14:29:24.5226063Z         """
2025-01-24T14:29:24.5226174Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5226256Z             raise ValueError(
2025-01-24T14:29:24.5226379Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5226480Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5226556Z             )
2025-01-24T14:29:24.5226662Z         # Properties common among both packet modes
2025-01-24T14:29:24.5226831Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5226911Z             "line_id"
2025-01-24T14:29:24.5226982Z         )
2025-01-24T14:29:24.5227094Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5227307Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5227395Z         time_of_simulation = (
2025-01-24T14:29:24.5227550Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5227625Z         )
2025-01-24T14:29:24.5227694Z     
2025-01-24T14:29:24.5227775Z         spectrum = (
2025-01-24T14:29:24.5227889Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5227988Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5228105Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5228181Z         )
2025-01-24T14:29:24.5228368Z     
2025-01-24T14:29:24.5228465Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5228590Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5228672Z             return cls(
2025-01-24T14:29:24.5228834Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5229004Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5229188Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5229356Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5229544Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5229628Z                 lines_df=lines_df,
2025-01-24T14:29:24.5229760Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5229914Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5230047Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5230313Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5230499Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5230611Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5230717Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5230818Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5230901Z                 simulation=sim,
2025-01-24T14:29:24.5230976Z             )
2025-01-24T14:29:24.5231057Z         else: # real packets
2025-01-24T14:29:24.5231227Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5231310Z             # which got emitted
2025-01-24T14:29:24.5231422Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5231499Z >           return cls(
2025-01-24T14:29:24.5231679Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5231862Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5231943Z                     mask
2025-01-24T14:29:24.5232021Z                 ],
2025-01-24T14:29:24.5232210Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5232292Z                     mask
2025-01-24T14:29:24.5232363Z                 ],
2025-01-24T14:29:24.5232534Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5232608Z                     mask
2025-01-24T14:29:24.5232685Z                 ],
2025-01-24T14:29:24.5232849Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5232937Z                 lines_df=lines_df,
2025-01-24T14:29:24.5233097Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5233275Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5233359Z                     mask
2025-01-24T14:29:24.5233430Z                 ],
2025-01-24T14:29:24.5233563Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5233679Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5233989Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5234101Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5234208Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5234303Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5234387Z                 simulation=sim,
2025-01-24T14:29:24.5234458Z             )
2025-01-24T14:29:24.5234794Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5234800Z 
2025-01-24T14:29:24.5234975Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5235207Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] _
2025-01-24T14:29:24.5235211Z 
2025-01-24T14:29:24.5235485Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5235698Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5235936Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5235942Z 
2025-01-24T14:29:24.5236032Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5236149Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5236221Z         """
2025-01-24T14:29:24.5236315Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5236387Z     
2025-01-24T14:29:24.5236468Z         Parameters
2025-01-24T14:29:24.5236542Z         ----------
2025-01-24T14:29:24.5236789Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5236877Z             Simulation object.
2025-01-24T14:29:24.5236947Z     
2025-01-24T14:29:24.5237024Z         Returns
2025-01-24T14:29:24.5237098Z         -------
2025-01-24T14:29:24.5237231Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5237306Z         """
2025-01-24T14:29:24.5237446Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5237450Z 
2025-01-24T14:29:24.5237591Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5237708Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5237868Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5238021Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5238333Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5238473Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5238590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5238594Z 
2025-01-24T14:29:24.5238806Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5238981Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5239063Z packets_mode = 'real'
2025-01-24T14:29:24.5239069Z 
2025-01-24T14:29:24.5239148Z     @classmethod
2025-01-24T14:29:24.5239259Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5239335Z         """
2025-01-24T14:29:24.5239527Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5239603Z     
2025-01-24T14:29:24.5239678Z         Parameters
2025-01-24T14:29:24.5239758Z         ----------
2025-01-24T14:29:24.5239862Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5240011Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5240112Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5240253Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5240332Z     
2025-01-24T14:29:24.5240404Z         Returns
2025-01-24T14:29:24.5240603Z         -------
2025-01-24T14:29:24.5240690Z         SimulationPacketData
2025-01-24T14:29:24.5240767Z         """
2025-01-24T14:29:24.5240873Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5240963Z             raise ValueError(
2025-01-24T14:29:24.5241080Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5241191Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5241262Z             )
2025-01-24T14:29:24.5241373Z         # Properties common among both packet modes
2025-01-24T14:29:24.5241538Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5241614Z             "line_id"
2025-01-24T14:29:24.5241697Z         )
2025-01-24T14:29:24.5241806Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5241936Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5242021Z         time_of_simulation = (
2025-01-24T14:29:24.5242185Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5242259Z         )
2025-01-24T14:29:24.5242334Z     
2025-01-24T14:29:24.5242412Z         spectrum = (
2025-01-24T14:29:24.5242531Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5242620Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5242743Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5242813Z         )
2025-01-24T14:29:24.5242888Z     
2025-01-24T14:29:24.5242978Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5243105Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5243187Z             return cls(
2025-01-24T14:29:24.5243461Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5243637Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5243816Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5243990Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5244140Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5244228Z                 lines_df=lines_df,
2025-01-24T14:29:24.5244354Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5244513Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5244641Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5244763Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5244957Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5245065Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5245171Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5245269Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5245358Z                 simulation=sim,
2025-01-24T14:29:24.5245429Z             )
2025-01-24T14:29:24.5245515Z         else: # real packets
2025-01-24T14:29:24.5245681Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5245767Z             # which got emitted
2025-01-24T14:29:24.5245874Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5245961Z >           return cls(
2025-01-24T14:29:24.5246133Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5246321Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5246406Z                     mask
2025-01-24T14:29:24.5246477Z                 ],
2025-01-24T14:29:24.5246669Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5246744Z                     mask
2025-01-24T14:29:24.5246909Z                 ],
2025-01-24T14:29:24.5247076Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5247155Z                     mask
2025-01-24T14:29:24.5247226Z                 ],
2025-01-24T14:29:24.5247396Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5247477Z                 lines_df=lines_df,
2025-01-24T14:29:24.5247644Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5247816Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5247895Z                     mask
2025-01-24T14:29:24.5247971Z                 ],
2025-01-24T14:29:24.5248103Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5248319Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5248510Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5248630Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5248737Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5248843Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5248924Z                 simulation=sim,
2025-01-24T14:29:24.5248999Z             )
2025-01-24T14:29:24.5249333Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5249339Z 
2025-01-24T14:29:24.5249514Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5249747Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] _
2025-01-24T14:29:24.5249867Z 
2025-01-24T14:29:24.5250135Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5250356Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5250590Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5250595Z 
2025-01-24T14:29:24.5250691Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5250808Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5250886Z         """
2025-01-24T14:29:24.5250976Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5251050Z     
2025-01-24T14:29:24.5251126Z         Parameters
2025-01-24T14:29:24.5251205Z         ----------
2025-01-24T14:29:24.5251354Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5251438Z             Simulation object.
2025-01-24T14:29:24.5251516Z     
2025-01-24T14:29:24.5251588Z         Returns
2025-01-24T14:29:24.5251665Z         -------
2025-01-24T14:29:24.5251799Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5251876Z         """
2025-01-24T14:29:24.5252008Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5252016Z 
2025-01-24T14:29:24.5252162Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5252278Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5252446Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5252595Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5252813Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5252952Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5253061Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5253068Z 
2025-01-24T14:29:24.5253285Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5253454Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5253541Z packets_mode = 'real'
2025-01-24T14:29:24.5253682Z 
2025-01-24T14:29:24.5253759Z     @classmethod
2025-01-24T14:29:24.5253873Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5253945Z         """
2025-01-24T14:29:24.5254146Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5254216Z     
2025-01-24T14:29:24.5254295Z         Parameters
2025-01-24T14:29:24.5254368Z         ----------
2025-01-24T14:29:24.5254473Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5254630Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5254726Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5254870Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5254945Z     
2025-01-24T14:29:24.5255024Z         Returns
2025-01-24T14:29:24.5255098Z         -------
2025-01-24T14:29:24.5255192Z         SimulationPacketData
2025-01-24T14:29:24.5255263Z         """
2025-01-24T14:29:24.5255380Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5255463Z             raise ValueError(
2025-01-24T14:29:24.5255586Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5255688Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5255764Z             )
2025-01-24T14:29:24.5255871Z         # Properties common among both packet modes
2025-01-24T14:29:24.5256036Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5256115Z             "line_id"
2025-01-24T14:29:24.5256187Z         )
2025-01-24T14:29:24.5256299Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5256423Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5256598Z         time_of_simulation = (
2025-01-24T14:29:24.5256754Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5256831Z         )
2025-01-24T14:29:24.5256902Z     
2025-01-24T14:29:24.5256987Z         spectrum = (
2025-01-24T14:29:24.5257102Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5257197Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5257313Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5257388Z         )
2025-01-24T14:29:24.5257457Z     
2025-01-24T14:29:24.5257551Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5257675Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5257757Z             return cls(
2025-01-24T14:29:24.5257921Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5258093Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5258404Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5258576Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5258733Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5258818Z                 lines_df=lines_df,
2025-01-24T14:29:24.5258949Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5259103Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5259237Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5259354Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5259547Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5259660Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5259768Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5259869Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5259949Z                 simulation=sim,
2025-01-24T14:29:24.5260027Z             )
2025-01-24T14:29:24.5260247Z         else: # real packets
2025-01-24T14:29:24.5260419Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5260500Z             # which got emitted
2025-01-24T14:29:24.5260612Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5260690Z >           return cls(
2025-01-24T14:29:24.5260872Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5261056Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5261137Z                     mask
2025-01-24T14:29:24.5261212Z                 ],
2025-01-24T14:29:24.5261400Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5261482Z                     mask
2025-01-24T14:29:24.5261554Z                 ],
2025-01-24T14:29:24.5261725Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5261802Z                     mask
2025-01-24T14:29:24.5261878Z                 ],
2025-01-24T14:29:24.5262045Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5262132Z                 lines_df=lines_df,
2025-01-24T14:29:24.5262296Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5262474Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5262547Z                     mask
2025-01-24T14:29:24.5262625Z                 ],
2025-01-24T14:29:24.5262758Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5262876Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5263185Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5263293Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5263398Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5263495Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5263581Z                 simulation=sim,
2025-01-24T14:29:24.5263651Z             )
2025-01-24T14:29:24.5263991Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5263996Z 
2025-01-24T14:29:24.5264168Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5264401Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] _
2025-01-24T14:29:24.5264406Z 
2025-01-24T14:29:24.5264678Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5264897Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5265133Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5265141Z 
2025-01-24T14:29:24.5265232Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5265351Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5265422Z         """
2025-01-24T14:29:24.5265517Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5265588Z     
2025-01-24T14:29:24.5265670Z         Parameters
2025-01-24T14:29:24.5265745Z         ----------
2025-01-24T14:29:24.5265893Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5265980Z             Simulation object.
2025-01-24T14:29:24.5266050Z     
2025-01-24T14:29:24.5266128Z         Returns
2025-01-24T14:29:24.5266202Z         -------
2025-01-24T14:29:24.5266344Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5266418Z         """
2025-01-24T14:29:24.5266555Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5266560Z 
2025-01-24T14:29:24.5266702Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5266921Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5267081Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5267235Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5267447Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5267585Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5267698Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5267704Z 
2025-01-24T14:29:24.5267918Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5268096Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5268177Z packets_mode = 'real'
2025-01-24T14:29:24.5268182Z 
2025-01-24T14:29:24.5268386Z     @classmethod
2025-01-24T14:29:24.5268499Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5268580Z         """
2025-01-24T14:29:24.5268775Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5268851Z     
2025-01-24T14:29:24.5268925Z         Parameters
2025-01-24T14:29:24.5269006Z         ----------
2025-01-24T14:29:24.5269113Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5269265Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5269368Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5269508Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5269583Z     
2025-01-24T14:29:24.5269659Z         Returns
2025-01-24T14:29:24.5269857Z         -------
2025-01-24T14:29:24.5269944Z         SimulationPacketData
2025-01-24T14:29:24.5270020Z         """
2025-01-24T14:29:24.5270124Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5270211Z             raise ValueError(
2025-01-24T14:29:24.5270328Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5270439Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5270511Z             )
2025-01-24T14:29:24.5270621Z         # Properties common among both packet modes
2025-01-24T14:29:24.5270782Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5270862Z             "line_id"
2025-01-24T14:29:24.5270937Z         )
2025-01-24T14:29:24.5271059Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5271204Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5271314Z         time_of_simulation = (
2025-01-24T14:29:24.5271475Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5271550Z         )
2025-01-24T14:29:24.5271624Z     
2025-01-24T14:29:24.5271701Z         spectrum = (
2025-01-24T14:29:24.5271822Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5271913Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5272037Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5272109Z         )
2025-01-24T14:29:24.5272183Z     
2025-01-24T14:29:24.5272271Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5272399Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5272480Z             return cls(
2025-01-24T14:29:24.5272636Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5272812Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5272986Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5273161Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5273313Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5273400Z                 lines_df=lines_df,
2025-01-24T14:29:24.5273649Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5273809Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5273938Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5274062Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5274254Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5274363Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5274471Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5274567Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5274659Z                 simulation=sim,
2025-01-24T14:29:24.5274731Z             )
2025-01-24T14:29:24.5274818Z         else: # real packets
2025-01-24T14:29:24.5274983Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5275073Z             # which got emitted
2025-01-24T14:29:24.5275180Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5275264Z >           return cls(
2025-01-24T14:29:24.5275435Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5275621Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5275702Z                     mask
2025-01-24T14:29:24.5275775Z                 ],
2025-01-24T14:29:24.5275969Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5276044Z                     mask
2025-01-24T14:29:24.5276120Z                 ],
2025-01-24T14:29:24.5276378Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5276459Z                     mask
2025-01-24T14:29:24.5276528Z                 ],
2025-01-24T14:29:24.5276697Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5276783Z                 lines_df=lines_df,
2025-01-24T14:29:24.5276952Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5277125Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5277204Z                     mask
2025-01-24T14:29:24.5277275Z                 ],
2025-01-24T14:29:24.5277409Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5277529Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5277715Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5277834Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5277934Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5278032Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5278112Z                 simulation=sim,
2025-01-24T14:29:24.5278190Z             )
2025-01-24T14:29:24.5278624Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5278630Z 
2025-01-24T14:29:24.5278804Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5279029Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] _
2025-01-24T14:29:24.5279039Z 
2025-01-24T14:29:24.5279307Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5279526Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5279766Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5279771Z 
2025-01-24T14:29:24.5279867Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5279980Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5280199Z         """
2025-01-24T14:29:24.5280291Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5280366Z     
2025-01-24T14:29:24.5280441Z         Parameters
2025-01-24T14:29:24.5280518Z         ----------
2025-01-24T14:29:24.5280660Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5280748Z             Simulation object.
2025-01-24T14:29:24.5280821Z     
2025-01-24T14:29:24.5280892Z         Returns
2025-01-24T14:29:24.5280970Z         -------
2025-01-24T14:29:24.5281100Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5281174Z         """
2025-01-24T14:29:24.5281305Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5281314Z 
2025-01-24T14:29:24.5281463Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5281575Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5281739Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5281889Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5282105Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5282245Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5282353Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5282358Z 
2025-01-24T14:29:24.5282574Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5282742Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5282829Z packets_mode = 'real'
2025-01-24T14:29:24.5282947Z 
2025-01-24T14:29:24.5283025Z     @classmethod
2025-01-24T14:29:24.5283141Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5283212Z         """
2025-01-24T14:29:24.5283410Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5283485Z     
2025-01-24T14:29:24.5283565Z         Parameters
2025-01-24T14:29:24.5283639Z         ----------
2025-01-24T14:29:24.5283742Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5283894Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5283988Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5284133Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5284203Z     
2025-01-24T14:29:24.5284280Z         Returns
2025-01-24T14:29:24.5284353Z         -------
2025-01-24T14:29:24.5284446Z         SimulationPacketData
2025-01-24T14:29:24.5284517Z         """
2025-01-24T14:29:24.5284627Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5284714Z             raise ValueError(
2025-01-24T14:29:24.5284835Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5284937Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5285016Z             )
2025-01-24T14:29:24.5285122Z         # Properties common among both packet modes
2025-01-24T14:29:24.5285289Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5285369Z             "line_id"
2025-01-24T14:29:24.5285441Z         )
2025-01-24T14:29:24.5285553Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5285677Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5285766Z         time_of_simulation = (
2025-01-24T14:29:24.5285921Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5285997Z         )
2025-01-24T14:29:24.5286066Z     
2025-01-24T14:29:24.5286150Z         spectrum = (
2025-01-24T14:29:24.5286266Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5286360Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5286476Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5286551Z         )
2025-01-24T14:29:24.5286710Z     
2025-01-24T14:29:24.5286806Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5286926Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5287008Z             return cls(
2025-01-24T14:29:24.5287168Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5287340Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5287521Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5287687Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5287844Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5287932Z                 lines_df=lines_df,
2025-01-24T14:29:24.5288064Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5288218Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5288458Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5288574Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5288764Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5288881Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5288983Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5289085Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5289168Z                 simulation=sim,
2025-01-24T14:29:24.5289243Z             )
2025-01-24T14:29:24.5289325Z         else: # real packets
2025-01-24T14:29:24.5289614Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5289694Z             # which got emitted
2025-01-24T14:29:24.5289806Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5289886Z >           return cls(
2025-01-24T14:29:24.5290065Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5290250Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5290330Z                     mask
2025-01-24T14:29:24.5290405Z                 ],
2025-01-24T14:29:24.5290593Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5290673Z                     mask
2025-01-24T14:29:24.5290745Z                 ],
2025-01-24T14:29:24.5290919Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5290993Z                     mask
2025-01-24T14:29:24.5291074Z                 ],
2025-01-24T14:29:24.5291238Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5291326Z                 lines_df=lines_df,
2025-01-24T14:29:24.5291487Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5291669Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5291744Z                     mask
2025-01-24T14:29:24.5291820Z                 ],
2025-01-24T14:29:24.5291954Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5292069Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5292259Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5292365Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5292470Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5292569Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5292654Z                 simulation=sim,
2025-01-24T14:29:24.5292725Z             )
2025-01-24T14:29:24.5293062Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5293184Z 
2025-01-24T14:29:24.5293355Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5293588Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] _
2025-01-24T14:29:24.5293593Z 
2025-01-24T14:29:24.5293864Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5294078Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5294316Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5294321Z 
2025-01-24T14:29:24.5294415Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5294534Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5294606Z         """
2025-01-24T14:29:24.5294702Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5294772Z     
2025-01-24T14:29:24.5294857Z         Parameters
2025-01-24T14:29:24.5294930Z         ----------
2025-01-24T14:29:24.5295076Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5295165Z             Simulation object.
2025-01-24T14:29:24.5295234Z     
2025-01-24T14:29:24.5295311Z         Returns
2025-01-24T14:29:24.5295385Z         -------
2025-01-24T14:29:24.5295518Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5295590Z         """
2025-01-24T14:29:24.5295726Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5295731Z 
2025-01-24T14:29:24.5295871Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5295987Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5296243Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5296395Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5296604Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5296745Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5296858Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5296863Z 
2025-01-24T14:29:24.5297076Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5297246Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5297327Z packets_mode = 'real'
2025-01-24T14:29:24.5297333Z 
2025-01-24T14:29:24.5297412Z     @classmethod
2025-01-24T14:29:24.5297521Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5297601Z         """
2025-01-24T14:29:24.5297792Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5297868Z     
2025-01-24T14:29:24.5297943Z         Parameters
2025-01-24T14:29:24.5298021Z         ----------
2025-01-24T14:29:24.5298121Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5298396Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5298497Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5298636Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5298711Z     
2025-01-24T14:29:24.5298782Z         Returns
2025-01-24T14:29:24.5298859Z         -------
2025-01-24T14:29:24.5298945Z         SimulationPacketData
2025-01-24T14:29:24.5299025Z         """
2025-01-24T14:29:24.5299131Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5299217Z             raise ValueError(
2025-01-24T14:29:24.5299333Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5299444Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5299518Z             )
2025-01-24T14:29:24.5299629Z         # Properties common among both packet modes
2025-01-24T14:29:24.5299789Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5299998Z             "line_id"
2025-01-24T14:29:24.5300075Z         )
2025-01-24T14:29:24.5300184Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5300312Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5300395Z         time_of_simulation = (
2025-01-24T14:29:24.5300555Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5300626Z         )
2025-01-24T14:29:24.5300701Z     
2025-01-24T14:29:24.5300777Z         spectrum = (
2025-01-24T14:29:24.5300896Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5300984Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5301110Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5301181Z         )
2025-01-24T14:29:24.5301256Z     
2025-01-24T14:29:24.5301344Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5301472Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5301555Z             return cls(
2025-01-24T14:29:24.5301718Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5301894Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5302071Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5302243Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5302392Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5302479Z                 lines_df=lines_df,
2025-01-24T14:29:24.5302763Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5302924Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5303054Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5303180Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5303374Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5303481Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5303587Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5303683Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5303768Z                 simulation=sim,
2025-01-24T14:29:24.5303840Z             )
2025-01-24T14:29:24.5303926Z         else: # real packets
2025-01-24T14:29:24.5304090Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5304180Z             # which got emitted
2025-01-24T14:29:24.5304288Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5304370Z >           return cls(
2025-01-24T14:29:24.5304543Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5304744Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5304828Z                     mask
2025-01-24T14:29:24.5304900Z                 ],
2025-01-24T14:29:24.5305098Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5305174Z                     mask
2025-01-24T14:29:24.5305251Z                 ],
2025-01-24T14:29:24.5305419Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5305499Z                     mask
2025-01-24T14:29:24.5305571Z                 ],
2025-01-24T14:29:24.5305748Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5305834Z                 lines_df=lines_df,
2025-01-24T14:29:24.5306004Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5306179Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5306349Z                     mask
2025-01-24T14:29:24.5306421Z                 ],
2025-01-24T14:29:24.5306557Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5306677Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5306863Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5306976Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5307076Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5307177Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5307257Z                 simulation=sim,
2025-01-24T14:29:24.5307337Z             )
2025-01-24T14:29:24.5307665Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5307670Z 
2025-01-24T14:29:24.5307843Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5308071Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] _
2025-01-24T14:29:24.5308084Z 
2025-01-24T14:29:24.5308480Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5308700Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5308932Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5308936Z 
2025-01-24T14:29:24.5309030Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5309150Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5309354Z         """
2025-01-24T14:29:24.5309445Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5309521Z     
2025-01-24T14:29:24.5309596Z         Parameters
2025-01-24T14:29:24.5309674Z         ----------
2025-01-24T14:29:24.5309814Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5309905Z             Simulation object.
2025-01-24T14:29:24.5309979Z     
2025-01-24T14:29:24.5310051Z         Returns
2025-01-24T14:29:24.5310134Z         -------
2025-01-24T14:29:24.5310263Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5310340Z         """
2025-01-24T14:29:24.5310474Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5310480Z 
2025-01-24T14:29:24.5310628Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5310742Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5310909Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5311060Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5311280Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5311414Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5311533Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5311538Z 
2025-01-24T14:29:24.5311755Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5311923Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5312012Z packets_mode = 'real'
2025-01-24T14:29:24.5312018Z 
2025-01-24T14:29:24.5312095Z     @classmethod
2025-01-24T14:29:24.5312212Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5312283Z         """
2025-01-24T14:29:24.5312481Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5312556Z     
2025-01-24T14:29:24.5312638Z         Parameters
2025-01-24T14:29:24.5312712Z         ----------
2025-01-24T14:29:24.5312819Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5322812Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5323142Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5323317Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5323391Z     
2025-01-24T14:29:24.5323473Z         Returns
2025-01-24T14:29:24.5323550Z         -------
2025-01-24T14:29:24.5323645Z         SimulationPacketData
2025-01-24T14:29:24.5323716Z         """
2025-01-24T14:29:24.5323842Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5323928Z             raise ValueError(
2025-01-24T14:29:24.5324067Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5324184Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5324257Z             )
2025-01-24T14:29:24.5324379Z         # Properties common among both packet modes
2025-01-24T14:29:24.5324551Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5324632Z             "line_id"
2025-01-24T14:29:24.5324704Z         )
2025-01-24T14:29:24.5324827Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5324963Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5325056Z         time_of_simulation = (
2025-01-24T14:29:24.5325222Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5325299Z         )
2025-01-24T14:29:24.5325371Z     
2025-01-24T14:29:24.5325454Z         spectrum = (
2025-01-24T14:29:24.5325573Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5325672Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5325799Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5325870Z         )
2025-01-24T14:29:24.5326070Z     
2025-01-24T14:29:24.5326162Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5326300Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5326378Z             return cls(
2025-01-24T14:29:24.5326548Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5326735Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5326921Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5327089Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5327250Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5327335Z                 lines_df=lines_df,
2025-01-24T14:29:24.5327474Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5327633Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5327768Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5327891Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5328082Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5328202Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5328438Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5328546Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5328630Z                 simulation=sim,
2025-01-24T14:29:24.5328707Z             )
2025-01-24T14:29:24.5328792Z         else: # real packets
2025-01-24T14:29:24.5328981Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5329071Z             # which got emitted
2025-01-24T14:29:24.5329186Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5329272Z >           return cls(
2025-01-24T14:29:24.5329487Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5329683Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5329760Z                     mask
2025-01-24T14:29:24.5329956Z                 ],
2025-01-24T14:29:24.5330149Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5330228Z                     mask
2025-01-24T14:29:24.5330299Z                 ],
2025-01-24T14:29:24.5330475Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5330551Z                     mask
2025-01-24T14:29:24.5330627Z                 ],
2025-01-24T14:29:24.5330792Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5330881Z                 lines_df=lines_df,
2025-01-24T14:29:24.5331053Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5331232Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5331311Z                     mask
2025-01-24T14:29:24.5331383Z                 ],
2025-01-24T14:29:24.5331519Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5331641Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5331837Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5331952Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5332059Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5332156Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5332243Z                 simulation=sim,
2025-01-24T14:29:24.5332316Z             )
2025-01-24T14:29:24.5332668Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5332794Z 
2025-01-24T14:29:24.5332984Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5333229Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] _
2025-01-24T14:29:24.5333238Z 
2025-01-24T14:29:24.5333515Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5333732Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5333970Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5333976Z 
2025-01-24T14:29:24.5334068Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5334190Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5334270Z         """
2025-01-24T14:29:24.5334365Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5334439Z     
2025-01-24T14:29:24.5334520Z         Parameters
2025-01-24T14:29:24.5334600Z         ----------
2025-01-24T14:29:24.5334752Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5334837Z             Simulation object.
2025-01-24T14:29:24.5334911Z     
2025-01-24T14:29:24.5334984Z         Returns
2025-01-24T14:29:24.5335065Z         -------
2025-01-24T14:29:24.5335202Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5335280Z         """
2025-01-24T14:29:24.5335416Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5335420Z 
2025-01-24T14:29:24.5335573Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5335691Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5335862Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5336012Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5336233Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5336385Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5336498Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5336504Z 
2025-01-24T14:29:24.5336809Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5336980Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5337069Z packets_mode = 'real'
2025-01-24T14:29:24.5337074Z 
2025-01-24T14:29:24.5337148Z     @classmethod
2025-01-24T14:29:24.5337266Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5337338Z         """
2025-01-24T14:29:24.5337538Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5337615Z     
2025-01-24T14:29:24.5337691Z         Parameters
2025-01-24T14:29:24.5337772Z         ----------
2025-01-24T14:29:24.5337873Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5338033Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5338128Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5338381Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5338457Z     
2025-01-24T14:29:24.5338538Z         Returns
2025-01-24T14:29:24.5338612Z         -------
2025-01-24T14:29:24.5338706Z         SimulationPacketData
2025-01-24T14:29:24.5338777Z         """
2025-01-24T14:29:24.5338891Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5338975Z             raise ValueError(
2025-01-24T14:29:24.5339103Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5339208Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5339286Z             )
2025-01-24T14:29:24.5339398Z         # Properties common among both packet modes
2025-01-24T14:29:24.5339560Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5339785Z             "line_id"
2025-01-24T14:29:24.5339856Z         )
2025-01-24T14:29:24.5339971Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5340095Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5340189Z         time_of_simulation = (
2025-01-24T14:29:24.5340346Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5340422Z         )
2025-01-24T14:29:24.5340492Z     
2025-01-24T14:29:24.5340576Z         spectrum = (
2025-01-24T14:29:24.5340692Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5340790Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5340909Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5340986Z         )
2025-01-24T14:29:24.5341056Z     
2025-01-24T14:29:24.5341153Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5341281Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5341361Z             return cls(
2025-01-24T14:29:24.5341526Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5341700Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5341885Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5342053Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5342209Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5342294Z                 lines_df=lines_df,
2025-01-24T14:29:24.5342429Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5342585Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5342723Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5342846Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5343041Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5343156Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5343260Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5343482Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5343564Z                 simulation=sim,
2025-01-24T14:29:24.5343640Z             )
2025-01-24T14:29:24.5343723Z         else: # real packets
2025-01-24T14:29:24.5343896Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5343977Z             # which got emitted
2025-01-24T14:29:24.5344089Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5344164Z >           return cls(
2025-01-24T14:29:24.5344343Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5344532Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5344612Z                     mask
2025-01-24T14:29:24.5344687Z                 ],
2025-01-24T14:29:24.5344874Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5344959Z                     mask
2025-01-24T14:29:24.5345029Z                 ],
2025-01-24T14:29:24.5345202Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5345275Z                     mask
2025-01-24T14:29:24.5345351Z                 ],
2025-01-24T14:29:24.5345517Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5345609Z                 lines_df=lines_df,
2025-01-24T14:29:24.5345772Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5345950Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5346116Z                     mask
2025-01-24T14:29:24.5346186Z                 ],
2025-01-24T14:29:24.5346320Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5346443Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5346641Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5346750Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5346855Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5346950Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5347036Z                 simulation=sim,
2025-01-24T14:29:24.5347107Z             )
2025-01-24T14:29:24.5347443Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5347449Z 
2025-01-24T14:29:24.5347626Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5347865Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] _
2025-01-24T14:29:24.5348187Z 
2025-01-24T14:29:24.5348573Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5348791Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5349027Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5349033Z 
2025-01-24T14:29:24.5349122Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5349242Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5349318Z         """
2025-01-24T14:29:24.5349408Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5349481Z     
2025-01-24T14:29:24.5349556Z         Parameters
2025-01-24T14:29:24.5349636Z         ----------
2025-01-24T14:29:24.5349783Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5349874Z             Simulation object.
2025-01-24T14:29:24.5349943Z     
2025-01-24T14:29:24.5350020Z         Returns
2025-01-24T14:29:24.5350096Z         -------
2025-01-24T14:29:24.5350233Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5350304Z         """
2025-01-24T14:29:24.5350564Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5350569Z 
2025-01-24T14:29:24.5350712Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5350832Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5350993Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5351146Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5351367Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5351502Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5351618Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5351623Z 
2025-01-24T14:29:24.5351835Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5352010Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5352096Z packets_mode = 'real'
2025-01-24T14:29:24.5352101Z 
2025-01-24T14:29:24.5352180Z     @classmethod
2025-01-24T14:29:24.5352295Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5352372Z         """
2025-01-24T14:29:24.5352572Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5352641Z     
2025-01-24T14:29:24.5352720Z         Parameters
2025-01-24T14:29:24.5352795Z         ----------
2025-01-24T14:29:24.5352901Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5353047Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5353145Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5353404Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5353481Z     
2025-01-24T14:29:24.5353552Z         Returns
2025-01-24T14:29:24.5353630Z         -------
2025-01-24T14:29:24.5353717Z         SimulationPacketData
2025-01-24T14:29:24.5353798Z         """
2025-01-24T14:29:24.5353906Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5353996Z             raise ValueError(
2025-01-24T14:29:24.5354117Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5354224Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5354300Z             )
2025-01-24T14:29:24.5354406Z         # Properties common among both packet modes
2025-01-24T14:29:24.5354573Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5354648Z             "line_id"
2025-01-24T14:29:24.5354726Z         )
2025-01-24T14:29:24.5354835Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5354972Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5355057Z         time_of_simulation = (
2025-01-24T14:29:24.5355219Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5355293Z         )
2025-01-24T14:29:24.5355367Z     
2025-01-24T14:29:24.5355444Z         spectrum = (
2025-01-24T14:29:24.5355564Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5355655Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5355777Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5355854Z         )
2025-01-24T14:29:24.5355922Z     
2025-01-24T14:29:24.5356017Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5356139Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5356219Z             return cls(
2025-01-24T14:29:24.5356387Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5356565Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5356755Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5356931Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5357179Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5357270Z                 lines_df=lines_df,
2025-01-24T14:29:24.5357411Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5357568Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5357704Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5357823Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5358019Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5358142Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5358346Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5358456Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5358543Z                 simulation=sim,
2025-01-24T14:29:24.5358625Z             )
2025-01-24T14:29:24.5358709Z         else: # real packets
2025-01-24T14:29:24.5358892Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5358974Z             # which got emitted
2025-01-24T14:29:24.5359091Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5359168Z >           return cls(
2025-01-24T14:29:24.5359353Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5359540Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5359620Z                     mask
2025-01-24T14:29:24.5359814Z                 ],
2025-01-24T14:29:24.5360004Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5360084Z                     mask
2025-01-24T14:29:24.5360156Z                 ],
2025-01-24T14:29:24.5360332Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5360411Z                     mask
2025-01-24T14:29:24.5360487Z                 ],
2025-01-24T14:29:24.5360656Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5360745Z                 lines_df=lines_df,
2025-01-24T14:29:24.5360908Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5361088Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5361163Z                     mask
2025-01-24T14:29:24.5361243Z                 ],
2025-01-24T14:29:24.5361381Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5361502Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5361698Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5361811Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5361920Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5362017Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5362103Z                 simulation=sim,
2025-01-24T14:29:24.5362177Z             )
2025-01-24T14:29:24.5362518Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5362524Z 
2025-01-24T14:29:24.5362697Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5362939Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] _
2025-01-24T14:29:24.5362948Z 
2025-01-24T14:29:24.5363225Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5363444Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5363683Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5363828Z 
2025-01-24T14:29:24.5363920Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5364045Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5364117Z         """
2025-01-24T14:29:24.5364213Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5364284Z     
2025-01-24T14:29:24.5364368Z         Parameters
2025-01-24T14:29:24.5364445Z         ----------
2025-01-24T14:29:24.5364595Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5364686Z             Simulation object.
2025-01-24T14:29:24.5364757Z     
2025-01-24T14:29:24.5364834Z         Returns
2025-01-24T14:29:24.5364912Z         -------
2025-01-24T14:29:24.5365049Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5365121Z         """
2025-01-24T14:29:24.5365261Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5365267Z 
2025-01-24T14:29:24.5365412Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5365538Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5365703Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5365856Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5366069Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5366210Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5366328Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5366333Z 
2025-01-24T14:29:24.5366555Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5366818Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5366902Z packets_mode = 'real'
2025-01-24T14:29:24.5366907Z 
2025-01-24T14:29:24.5366988Z     @classmethod
2025-01-24T14:29:24.5367104Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5367181Z         """
2025-01-24T14:29:24.5367375Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5367452Z     
2025-01-24T14:29:24.5367528Z         Parameters
2025-01-24T14:29:24.5367609Z         ----------
2025-01-24T14:29:24.5367710Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5367864Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5367967Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5368108Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5368190Z     
2025-01-24T14:29:24.5368359Z         Returns
2025-01-24T14:29:24.5368443Z         -------
2025-01-24T14:29:24.5368530Z         SimulationPacketData
2025-01-24T14:29:24.5368608Z         """
2025-01-24T14:29:24.5368715Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5368808Z             raise ValueError(
2025-01-24T14:29:24.5368927Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5369035Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5369106Z             )
2025-01-24T14:29:24.5369217Z         # Properties common among both packet modes
2025-01-24T14:29:24.5369377Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5369457Z             "line_id"
2025-01-24T14:29:24.5369532Z         )
2025-01-24T14:29:24.5369642Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5369773Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5369864Z         time_of_simulation = (
2025-01-24T14:29:24.5370024Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5370095Z         )
2025-01-24T14:29:24.5370171Z     
2025-01-24T14:29:24.5370249Z         spectrum = (
2025-01-24T14:29:24.5370371Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5370582Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5370706Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5370778Z         )
2025-01-24T14:29:24.5370854Z     
2025-01-24T14:29:24.5370944Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5371075Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5371155Z             return cls(
2025-01-24T14:29:24.5371320Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5371497Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5371680Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5371855Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5372004Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5372099Z                 lines_df=lines_df,
2025-01-24T14:29:24.5372228Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5372389Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5372521Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5372642Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5372833Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5372948Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5373057Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5373270Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5373356Z                 simulation=sim,
2025-01-24T14:29:24.5373428Z             )
2025-01-24T14:29:24.5373517Z         else: # real packets
2025-01-24T14:29:24.5373686Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5373777Z             # which got emitted
2025-01-24T14:29:24.5373883Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5373968Z >           return cls(
2025-01-24T14:29:24.5374142Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5374331Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5374409Z                     mask
2025-01-24T14:29:24.5374485Z                 ],
2025-01-24T14:29:24.5374681Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5374760Z                     mask
2025-01-24T14:29:24.5374836Z                 ],
2025-01-24T14:29:24.5375003Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5375084Z                     mask
2025-01-24T14:29:24.5375155Z                 ],
2025-01-24T14:29:24.5375330Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5375413Z                 lines_df=lines_df,
2025-01-24T14:29:24.5375579Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5375754Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5375834Z                     mask
2025-01-24T14:29:24.5375907Z                 ],
2025-01-24T14:29:24.5376040Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5376163Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5376356Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5376469Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5376569Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5376671Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5376862Z                 simulation=sim,
2025-01-24T14:29:24.5376939Z             )
2025-01-24T14:29:24.5377277Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5377283Z 
2025-01-24T14:29:24.5377462Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5377697Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] _
2025-01-24T14:29:24.5377707Z 
2025-01-24T14:29:24.5377975Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5378196Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5378561Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5378569Z 
2025-01-24T14:29:24.5378665Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5378786Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5378863Z         """
2025-01-24T14:29:24.5378954Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5379031Z     
2025-01-24T14:29:24.5379106Z         Parameters
2025-01-24T14:29:24.5379185Z         ----------
2025-01-24T14:29:24.5379330Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5379420Z             Simulation object.
2025-01-24T14:29:24.5379497Z     
2025-01-24T14:29:24.5379570Z         Returns
2025-01-24T14:29:24.5379648Z         -------
2025-01-24T14:29:24.5379780Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5379857Z         """
2025-01-24T14:29:24.5380117Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5380122Z 
2025-01-24T14:29:24.5380271Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5380385Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5380555Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5380706Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5380924Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5381062Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5381178Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5381183Z 
2025-01-24T14:29:24.5381402Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5381574Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5381666Z packets_mode = 'real'
2025-01-24T14:29:24.5381670Z 
2025-01-24T14:29:24.5381748Z     @classmethod
2025-01-24T14:29:24.5381864Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5381937Z         """
2025-01-24T14:29:24.5382135Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5382210Z     
2025-01-24T14:29:24.5382292Z         Parameters
2025-01-24T14:29:24.5382366Z         ----------
2025-01-24T14:29:24.5382472Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5382627Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5382721Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5382865Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5382935Z     
2025-01-24T14:29:24.5383014Z         Returns
2025-01-24T14:29:24.5383088Z         -------
2025-01-24T14:29:24.5383181Z         SimulationPacketData
2025-01-24T14:29:24.5383257Z         """
2025-01-24T14:29:24.5383371Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5383456Z             raise ValueError(
2025-01-24T14:29:24.5383584Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5383808Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5383888Z             )
2025-01-24T14:29:24.5383995Z         # Properties common among both packet modes
2025-01-24T14:29:24.5384163Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5384239Z             "line_id"
2025-01-24T14:29:24.5384319Z         )
2025-01-24T14:29:24.5384434Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5384559Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5384648Z         time_of_simulation = (
2025-01-24T14:29:24.5384805Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5384887Z         )
2025-01-24T14:29:24.5384958Z     
2025-01-24T14:29:24.5385041Z         spectrum = (
2025-01-24T14:29:24.5385156Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5385252Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5385370Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5385452Z         )
2025-01-24T14:29:24.5385522Z     
2025-01-24T14:29:24.5385617Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5385741Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5385825Z             return cls(
2025-01-24T14:29:24.5385993Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5386166Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5386348Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5386518Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5386762Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5386847Z                 lines_df=lines_df,
2025-01-24T14:29:24.5386980Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5387140Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5387275Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5387393Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5387586Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5387699Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5387803Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5387904Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5387987Z                 simulation=sim,
2025-01-24T14:29:24.5388068Z             )
2025-01-24T14:29:24.5388151Z         else: # real packets
2025-01-24T14:29:24.5388453Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5388538Z             # which got emitted
2025-01-24T14:29:24.5388654Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5388732Z >           return cls(
2025-01-24T14:29:24.5388910Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5389094Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5389175Z                     mask
2025-01-24T14:29:24.5389252Z                 ],
2025-01-24T14:29:24.5389442Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5389522Z                     mask
2025-01-24T14:29:24.5389594Z                 ],
2025-01-24T14:29:24.5389765Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5389843Z                     mask
2025-01-24T14:29:24.5389920Z                 ],
2025-01-24T14:29:24.5390085Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5390173Z                 lines_df=lines_df,
2025-01-24T14:29:24.5390483Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5390664Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5390739Z                     mask
2025-01-24T14:29:24.5390815Z                 ],
2025-01-24T14:29:24.5390944Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5391065Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5391255Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5391364Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5391475Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5391576Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5391662Z                 simulation=sim,
2025-01-24T14:29:24.5391734Z             )
2025-01-24T14:29:24.5392071Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5392076Z 
2025-01-24T14:29:24.5392246Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5392483Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] _
2025-01-24T14:29:24.5392489Z 
2025-01-24T14:29:24.5392761Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5392974Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5393215Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5393332Z 
2025-01-24T14:29:24.5393423Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5393544Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5393616Z         """
2025-01-24T14:29:24.5393712Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5393786Z     
2025-01-24T14:29:24.5393867Z         Parameters
2025-01-24T14:29:24.5393942Z         ----------
2025-01-24T14:29:24.5394090Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5394179Z             Simulation object.
2025-01-24T14:29:24.5394250Z     
2025-01-24T14:29:24.5394329Z         Returns
2025-01-24T14:29:24.5394404Z         -------
2025-01-24T14:29:24.5394540Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5394612Z         """
2025-01-24T14:29:24.5394752Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5394758Z 
2025-01-24T14:29:24.5394900Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5395023Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5395188Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5395341Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5395562Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5395702Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5395820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5395825Z 
2025-01-24T14:29:24.5396040Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5396213Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5396296Z packets_mode = 'real'
2025-01-24T14:29:24.5396300Z 
2025-01-24T14:29:24.5396380Z     @classmethod
2025-01-24T14:29:24.5396497Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5396574Z         """
2025-01-24T14:29:24.5396766Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5396846Z     
2025-01-24T14:29:24.5396922Z         Parameters
2025-01-24T14:29:24.5397095Z         ----------
2025-01-24T14:29:24.5397195Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5397351Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5397448Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5397592Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5397668Z     
2025-01-24T14:29:24.5397741Z         Returns
2025-01-24T14:29:24.5397818Z         -------
2025-01-24T14:29:24.5397906Z         SimulationPacketData
2025-01-24T14:29:24.5397982Z         """
2025-01-24T14:29:24.5398087Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5398176Z             raise ValueError(
2025-01-24T14:29:24.5398399Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5398509Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5398581Z             )
2025-01-24T14:29:24.5398693Z         # Properties common among both packet modes
2025-01-24T14:29:24.5398860Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5398944Z             "line_id"
2025-01-24T14:29:24.5399021Z         )
2025-01-24T14:29:24.5399129Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5399256Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5399341Z         time_of_simulation = (
2025-01-24T14:29:24.5399501Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5399573Z         )
2025-01-24T14:29:24.5399647Z     
2025-01-24T14:29:24.5399724Z         spectrum = (
2025-01-24T14:29:24.5399844Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5400058Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5400182Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5400253Z         )
2025-01-24T14:29:24.5400327Z     
2025-01-24T14:29:24.5400416Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5400549Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5400626Z             return cls(
2025-01-24T14:29:24.5400790Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5400968Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5401144Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5401317Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5401468Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5401559Z                 lines_df=lines_df,
2025-01-24T14:29:24.5401688Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5401848Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5401980Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5402104Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5402292Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5402407Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5402516Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5402613Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5402701Z                 simulation=sim,
2025-01-24T14:29:24.5402773Z             )
2025-01-24T14:29:24.5402859Z         else: # real packets
2025-01-24T14:29:24.5403026Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5403115Z             # which got emitted
2025-01-24T14:29:24.5403222Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5403306Z >           return cls(
2025-01-24T14:29:24.5403478Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5403785Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5403862Z                     mask
2025-01-24T14:29:24.5403939Z                 ],
2025-01-24T14:29:24.5404134Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5404209Z                     mask
2025-01-24T14:29:24.5404286Z                 ],
2025-01-24T14:29:24.5404454Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5404534Z                     mask
2025-01-24T14:29:24.5404605Z                 ],
2025-01-24T14:29:24.5404778Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5404861Z                 lines_df=lines_df,
2025-01-24T14:29:24.5405031Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5405208Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5405289Z                     mask
2025-01-24T14:29:24.5405362Z                 ],
2025-01-24T14:29:24.5405498Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5405620Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5405807Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5405925Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5406026Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5406126Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5406293Z                 simulation=sim,
2025-01-24T14:29:24.5406369Z             )
2025-01-24T14:29:24.5406703Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5406712Z 
2025-01-24T14:29:24.5406888Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5407125Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] _
2025-01-24T14:29:24.5407135Z 
2025-01-24T14:29:24.5407410Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5407630Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5407864Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5407869Z 
2025-01-24T14:29:24.5407966Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5408085Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5408163Z         """
2025-01-24T14:29:24.5408347Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5408426Z     
2025-01-24T14:29:24.5408503Z         Parameters
2025-01-24T14:29:24.5408584Z         ----------
2025-01-24T14:29:24.5408731Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5408819Z             Simulation object.
2025-01-24T14:29:24.5408895Z     
2025-01-24T14:29:24.5408968Z         Returns
2025-01-24T14:29:24.5409047Z         -------
2025-01-24T14:29:24.5409178Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5409254Z         """
2025-01-24T14:29:24.5409389Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5409394Z 
2025-01-24T14:29:24.5409544Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5409658Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5409830Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5409979Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5410200Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5410462Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5410578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5410583Z 
2025-01-24T14:29:24.5410799Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5410966Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5411056Z packets_mode = 'real'
2025-01-24T14:29:24.5411061Z 
2025-01-24T14:29:24.5411134Z     @classmethod
2025-01-24T14:29:24.5411256Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5411328Z         """
2025-01-24T14:29:24.5411534Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5411611Z     
2025-01-24T14:29:24.5411695Z         Parameters
2025-01-24T14:29:24.5411771Z         ----------
2025-01-24T14:29:24.5411877Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5412029Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5412135Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5412283Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5412354Z     
2025-01-24T14:29:24.5412431Z         Returns
2025-01-24T14:29:24.5412505Z         -------
2025-01-24T14:29:24.5412598Z         SimulationPacketData
2025-01-24T14:29:24.5412670Z         """
2025-01-24T14:29:24.5412787Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5412870Z             raise ValueError(
2025-01-24T14:29:24.5412994Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5413098Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5413311Z             )
2025-01-24T14:29:24.5413422Z         # Properties common among both packet modes
2025-01-24T14:29:24.5413589Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5413669Z             "line_id"
2025-01-24T14:29:24.5413745Z         )
2025-01-24T14:29:24.5413861Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5413987Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5414076Z         time_of_simulation = (
2025-01-24T14:29:24.5414230Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5414309Z         )
2025-01-24T14:29:24.5414380Z     
2025-01-24T14:29:24.5414464Z         spectrum = (
2025-01-24T14:29:24.5414580Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5414677Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5414796Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5414877Z         )
2025-01-24T14:29:24.5414950Z     
2025-01-24T14:29:24.5415045Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5415168Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5415250Z             return cls(
2025-01-24T14:29:24.5415413Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5415589Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5415769Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5415935Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5416091Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5416176Z                 lines_df=lines_df,
2025-01-24T14:29:24.5416311Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5416470Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5416606Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5416724Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5417012Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5417126Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5417229Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5417333Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5417415Z                 simulation=sim,
2025-01-24T14:29:24.5417495Z             )
2025-01-24T14:29:24.5417579Z         else: # real packets
2025-01-24T14:29:24.5417750Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5417831Z             # which got emitted
2025-01-24T14:29:24.5417949Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5418029Z >           return cls(
2025-01-24T14:29:24.5418212Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5418519Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5418607Z                     mask
2025-01-24T14:29:24.5418685Z                 ],
2025-01-24T14:29:24.5418872Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5418953Z                     mask
2025-01-24T14:29:24.5419025Z                 ],
2025-01-24T14:29:24.5419198Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5419273Z                     mask
2025-01-24T14:29:24.5419350Z                 ],
2025-01-24T14:29:24.5419516Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5419604Z                 lines_df=lines_df,
2025-01-24T14:29:24.5419888Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5420070Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5420143Z                     mask
2025-01-24T14:29:24.5420223Z                 ],
2025-01-24T14:29:24.5420352Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5420474Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5420664Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5420773Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5420883Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5420982Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5421067Z                 simulation=sim,
2025-01-24T14:29:24.5421138Z             )
2025-01-24T14:29:24.5421483Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5421489Z 
2025-01-24T14:29:24.5421664Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5421876Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl0] _
2025-01-24T14:29:24.5421884Z 
2025-01-24T14:29:24.5422160Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5422373Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5422610Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5422616Z 
2025-01-24T14:29:24.5422708Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5422828Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5422902Z         """
2025-01-24T14:29:24.5423001Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5423077Z     
2025-01-24T14:29:24.5423164Z         Parameters
2025-01-24T14:29:24.5423241Z         ----------
2025-01-24T14:29:24.5423395Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5423479Z             Simulation object.
2025-01-24T14:29:24.5423677Z     
2025-01-24T14:29:24.5423755Z         Returns
2025-01-24T14:29:24.5423829Z         -------
2025-01-24T14:29:24.5423965Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5424039Z         """
2025-01-24T14:29:24.5424179Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5424184Z 
2025-01-24T14:29:24.5424326Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5424445Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5424610Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5424763Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5424980Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5425121Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5425231Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5425245Z 
2025-01-24T14:29:24.5425460Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5425633Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5425716Z packets_mode = 'real'
2025-01-24T14:29:24.5425721Z 
2025-01-24T14:29:24.5425800Z     @classmethod
2025-01-24T14:29:24.5425911Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5425988Z         """
2025-01-24T14:29:24.5426180Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5426258Z     
2025-01-24T14:29:24.5426334Z         Parameters
2025-01-24T14:29:24.5426532Z         ----------
2025-01-24T14:29:24.5426633Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5426786Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5426885Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5427024Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5427103Z     
2025-01-24T14:29:24.5427176Z         Returns
2025-01-24T14:29:24.5427256Z         -------
2025-01-24T14:29:24.5427352Z         SimulationPacketData
2025-01-24T14:29:24.5427449Z         """
2025-01-24T14:29:24.5427556Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5427645Z             raise ValueError(
2025-01-24T14:29:24.5427764Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5427872Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5427943Z             )
2025-01-24T14:29:24.5428054Z         # Properties common among both packet modes
2025-01-24T14:29:24.5428218Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5428431Z             "line_id"
2025-01-24T14:29:24.5428503Z         )
2025-01-24T14:29:24.5428616Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5428763Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5428856Z         time_of_simulation = (
2025-01-24T14:29:24.5429017Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5429088Z         )
2025-01-24T14:29:24.5429167Z     
2025-01-24T14:29:24.5429243Z         spectrum = (
2025-01-24T14:29:24.5429362Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5429474Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5429598Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5429671Z         )
2025-01-24T14:29:24.5429746Z     
2025-01-24T14:29:24.5429835Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5429968Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5430045Z             return cls(
2025-01-24T14:29:24.5430209Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5430389Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5430688Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5430861Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5431013Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5431103Z                 lines_df=lines_df,
2025-01-24T14:29:24.5431231Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5431392Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5431523Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5431648Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5431833Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5431948Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5432060Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5432157Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5432243Z                 simulation=sim,
2025-01-24T14:29:24.5432316Z             )
2025-01-24T14:29:24.5432402Z         else: # real packets
2025-01-24T14:29:24.5432568Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5432655Z             # which got emitted
2025-01-24T14:29:24.5432767Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5432852Z >           return cls(
2025-01-24T14:29:24.5433023Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5433328Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5433404Z                     mask
2025-01-24T14:29:24.5433481Z                 ],
2025-01-24T14:29:24.5433676Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5433755Z                     mask
2025-01-24T14:29:24.5433833Z                 ],
2025-01-24T14:29:24.5434001Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5434080Z                     mask
2025-01-24T14:29:24.5434151Z                 ],
2025-01-24T14:29:24.5434322Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5434406Z                 lines_df=lines_df,
2025-01-24T14:29:24.5434572Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5434749Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5434833Z                     mask
2025-01-24T14:29:24.5434904Z                 ],
2025-01-24T14:29:24.5435036Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5435161Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5435348Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5435463Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5435566Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5435667Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5435747Z                 simulation=sim,
2025-01-24T14:29:24.5435825Z             )
2025-01-24T14:29:24.5436158Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5436163Z 
2025-01-24T14:29:24.5436352Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5436554Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl1] _
2025-01-24T14:29:24.5436566Z 
2025-01-24T14:29:24.5436833Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5437144Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5437376Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5437381Z 
2025-01-24T14:29:24.5437477Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5437592Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5437670Z         """
2025-01-24T14:29:24.5437760Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5437836Z     
2025-01-24T14:29:24.5437912Z         Parameters
2025-01-24T14:29:24.5437992Z         ----------
2025-01-24T14:29:24.5438139Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5438331Z             Simulation object.
2025-01-24T14:29:24.5438405Z     
2025-01-24T14:29:24.5438482Z         Returns
2025-01-24T14:29:24.5438561Z         -------
2025-01-24T14:29:24.5438691Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5438771Z         """
2025-01-24T14:29:24.5438908Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5438913Z 
2025-01-24T14:29:24.5439061Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5439176Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5439343Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5439492Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5439716Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5439853Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5440106Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5440111Z 
2025-01-24T14:29:24.5440333Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5440505Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5440593Z packets_mode = 'real'
2025-01-24T14:29:24.5440598Z 
2025-01-24T14:29:24.5440672Z     @classmethod
2025-01-24T14:29:24.5440788Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5440860Z         """
2025-01-24T14:29:24.5441059Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5441131Z     
2025-01-24T14:29:24.5441213Z         Parameters
2025-01-24T14:29:24.5441289Z         ----------
2025-01-24T14:29:24.5441398Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5441548Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5441650Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5441795Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5441866Z     
2025-01-24T14:29:24.5441944Z         Returns
2025-01-24T14:29:24.5442021Z         -------
2025-01-24T14:29:24.5442115Z         SimulationPacketData
2025-01-24T14:29:24.5442186Z         """
2025-01-24T14:29:24.5442295Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5442379Z             raise ValueError(
2025-01-24T14:29:24.5442502Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5442606Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5442683Z             )
2025-01-24T14:29:24.5442789Z         # Properties common among both packet modes
2025-01-24T14:29:24.5442955Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5443031Z             "line_id"
2025-01-24T14:29:24.5443111Z         )
2025-01-24T14:29:24.5443219Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5443347Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5443436Z         time_of_simulation = (
2025-01-24T14:29:24.5443590Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5443805Z         )
2025-01-24T14:29:24.5443876Z     
2025-01-24T14:29:24.5443960Z         spectrum = (
2025-01-24T14:29:24.5444076Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5444173Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5444290Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5444366Z         )
2025-01-24T14:29:24.5444437Z     
2025-01-24T14:29:24.5444531Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5444654Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5444737Z             return cls(
2025-01-24T14:29:24.5444899Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5445078Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5445258Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5445428Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5445583Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5445667Z                 lines_df=lines_df,
2025-01-24T14:29:24.5445799Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5445954Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5446089Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5446206Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5446407Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5446608Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5446711Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5446813Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5446898Z                 simulation=sim,
2025-01-24T14:29:24.5446975Z             )
2025-01-24T14:29:24.5447057Z         else: # real packets
2025-01-24T14:29:24.5447226Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5447307Z             # which got emitted
2025-01-24T14:29:24.5447419Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5447496Z >           return cls(
2025-01-24T14:29:24.5447678Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5447863Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5447946Z                     mask
2025-01-24T14:29:24.5448020Z                 ],
2025-01-24T14:29:24.5448215Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5448400Z                     mask
2025-01-24T14:29:24.5448477Z                 ],
2025-01-24T14:29:24.5448653Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5448727Z                     mask
2025-01-24T14:29:24.5448806Z                 ],
2025-01-24T14:29:24.5448972Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5449060Z                 lines_df=lines_df,
2025-01-24T14:29:24.5449223Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5449404Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5449478Z                     mask
2025-01-24T14:29:24.5449557Z                 ],
2025-01-24T14:29:24.5449688Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5449806Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5449996Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5450227Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5450335Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5450430Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5450516Z                 simulation=sim,
2025-01-24T14:29:24.5450587Z             )
2025-01-24T14:29:24.5450924Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5450929Z 
2025-01-24T14:29:24.5451100Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5451311Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl2] _
2025-01-24T14:29:24.5451319Z 
2025-01-24T14:29:24.5451591Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5451804Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5452046Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5452051Z 
2025-01-24T14:29:24.5452143Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5452262Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5452334Z         """
2025-01-24T14:29:24.5452430Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5452501Z     
2025-01-24T14:29:24.5452582Z         Parameters
2025-01-24T14:29:24.5452657Z         ----------
2025-01-24T14:29:24.5452806Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5452889Z             Simulation object.
2025-01-24T14:29:24.5452966Z     
2025-01-24T14:29:24.5453155Z         Returns
2025-01-24T14:29:24.5453234Z         -------
2025-01-24T14:29:24.5453371Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5453443Z         """
2025-01-24T14:29:24.5453583Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5453593Z 
2025-01-24T14:29:24.5453737Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5453854Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5454016Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5454172Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5454383Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5454525Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5454636Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5454649Z 
2025-01-24T14:29:24.5454865Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5455040Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5455124Z packets_mode = 'real'
2025-01-24T14:29:24.5455131Z 
2025-01-24T14:29:24.5455212Z     @classmethod
2025-01-24T14:29:24.5455324Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5455400Z         """
2025-01-24T14:29:24.5455594Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5455671Z     
2025-01-24T14:29:24.5455746Z         Parameters
2025-01-24T14:29:24.5455826Z         ----------
2025-01-24T14:29:24.5455928Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5456082Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5456177Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5456321Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5456402Z     
2025-01-24T14:29:24.5456474Z         Returns
2025-01-24T14:29:24.5456556Z         -------
2025-01-24T14:29:24.5456643Z         SimulationPacketData
2025-01-24T14:29:24.5456727Z         """
2025-01-24T14:29:24.5456833Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5457014Z             raise ValueError(
2025-01-24T14:29:24.5457133Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5457241Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5457312Z             )
2025-01-24T14:29:24.5457422Z         # Properties common among both packet modes
2025-01-24T14:29:24.5457581Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5457661Z             "line_id"
2025-01-24T14:29:24.5457732Z         )
2025-01-24T14:29:24.5457845Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5457974Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5458063Z         time_of_simulation = (
2025-01-24T14:29:24.5458337Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5458416Z         )
2025-01-24T14:29:24.5458491Z     
2025-01-24T14:29:24.5458570Z         spectrum = (
2025-01-24T14:29:24.5458695Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5458788Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5458912Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5458985Z         )
2025-01-24T14:29:24.5459061Z     
2025-01-24T14:29:24.5459151Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5459278Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5459355Z             return cls(
2025-01-24T14:29:24.5459518Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5459689Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5459999Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5460171Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5460325Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5460418Z                 lines_df=lines_df,
2025-01-24T14:29:24.5460545Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5460705Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5460836Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5460956Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5461145Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5461260Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5461373Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5461470Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5461556Z                 simulation=sim,
2025-01-24T14:29:24.5461628Z             )
2025-01-24T14:29:24.5461716Z         else: # real packets
2025-01-24T14:29:24.5461884Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5461972Z             # which got emitted
2025-01-24T14:29:24.5462080Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5462162Z >           return cls(
2025-01-24T14:29:24.5462334Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5462527Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5462603Z                     mask
2025-01-24T14:29:24.5462682Z                 ],
2025-01-24T14:29:24.5462870Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5462952Z                     mask
2025-01-24T14:29:24.5463030Z                 ],
2025-01-24T14:29:24.5463198Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5463419Z                     mask
2025-01-24T14:29:24.5463490Z                 ],
2025-01-24T14:29:24.5463665Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5463748Z                 lines_df=lines_df,
2025-01-24T14:29:24.5463914Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5464090Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5464171Z                     mask
2025-01-24T14:29:24.5464242Z                 ],
2025-01-24T14:29:24.5464374Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5464489Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5464683Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5464795Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5464897Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5465001Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5465083Z                 simulation=sim,
2025-01-24T14:29:24.5465159Z             )
2025-01-24T14:29:24.5465489Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5465495Z 
2025-01-24T14:29:24.5465668Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5465869Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl3] _
2025-01-24T14:29:24.5465873Z 
2025-01-24T14:29:24.5466146Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5466452Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5466686Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5466691Z 
2025-01-24T14:29:24.5466789Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5466904Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5466980Z         """
2025-01-24T14:29:24.5467072Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5467148Z     
2025-01-24T14:29:24.5467224Z         Parameters
2025-01-24T14:29:24.5467305Z         ----------
2025-01-24T14:29:24.5467445Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5467534Z             Simulation object.
2025-01-24T14:29:24.5467605Z     
2025-01-24T14:29:24.5467687Z         Returns
2025-01-24T14:29:24.5467766Z         -------
2025-01-24T14:29:24.5467897Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5467976Z         """
2025-01-24T14:29:24.5468113Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5468119Z 
2025-01-24T14:29:24.5468388Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5468503Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5468674Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5468820Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5469039Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5469175Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5469290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5469294Z 
2025-01-24T14:29:24.5469518Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5469688Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5469777Z packets_mode = 'real'
2025-01-24T14:29:24.5469782Z 
2025-01-24T14:29:24.5469856Z     @classmethod
2025-01-24T14:29:24.5469971Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5470166Z         """
2025-01-24T14:29:24.5470366Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5470437Z     
2025-01-24T14:29:24.5470517Z         Parameters
2025-01-24T14:29:24.5470595Z         ----------
2025-01-24T14:29:24.5470702Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5470854Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5470955Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5471101Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5471174Z     
2025-01-24T14:29:24.5471253Z         Returns
2025-01-24T14:29:24.5471327Z         -------
2025-01-24T14:29:24.5471426Z         SimulationPacketData
2025-01-24T14:29:24.5471499Z         """
2025-01-24T14:29:24.5471612Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5471699Z             raise ValueError(
2025-01-24T14:29:24.5471822Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5471929Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5472007Z             )
2025-01-24T14:29:24.5472113Z         # Properties common among both packet modes
2025-01-24T14:29:24.5472281Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5472356Z             "line_id"
2025-01-24T14:29:24.5472433Z         )
2025-01-24T14:29:24.5472544Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5472675Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5472767Z         time_of_simulation = (
2025-01-24T14:29:24.5472925Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5473119Z         )
2025-01-24T14:29:24.5473189Z     
2025-01-24T14:29:24.5473272Z         spectrum = (
2025-01-24T14:29:24.5473387Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5473484Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5473605Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5473683Z         )
2025-01-24T14:29:24.5473752Z     
2025-01-24T14:29:24.5473847Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5473970Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5474053Z             return cls(
2025-01-24T14:29:24.5474215Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5474394Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5474576Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5474748Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5474905Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5474989Z                 lines_df=lines_df,
2025-01-24T14:29:24.5475127Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5475281Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5475417Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5475533Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5475724Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5475833Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5475942Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5476045Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5476131Z                 simulation=sim,
2025-01-24T14:29:24.5476209Z             )
2025-01-24T14:29:24.5476292Z         else: # real packets
2025-01-24T14:29:24.5476464Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5476547Z             # which got emitted
2025-01-24T14:29:24.5476764Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5476842Z >           return cls(
2025-01-24T14:29:24.5477023Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5477209Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5477289Z                     mask
2025-01-24T14:29:24.5477362Z                 ],
2025-01-24T14:29:24.5477561Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5477641Z                     mask
2025-01-24T14:29:24.5477714Z                 ],
2025-01-24T14:29:24.5477889Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5477962Z                     mask
2025-01-24T14:29:24.5478038Z                 ],
2025-01-24T14:29:24.5478206Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5478405Z                 lines_df=lines_df,
2025-01-24T14:29:24.5478570Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5478750Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5478824Z                     mask
2025-01-24T14:29:24.5478902Z                 ],
2025-01-24T14:29:24.5479031Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5479153Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5479346Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5479575Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5479683Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5479780Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5479867Z                 simulation=sim,
2025-01-24T14:29:24.5479943Z             )
2025-01-24T14:29:24.5480282Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5480288Z 
2025-01-24T14:29:24.5480456Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5480669Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl4] _
2025-01-24T14:29:24.5480674Z 
2025-01-24T14:29:24.5480941Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5481156Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5481395Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5481401Z 
2025-01-24T14:29:24.5481491Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5481611Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5481685Z         """
2025-01-24T14:29:24.5481782Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5481853Z     
2025-01-24T14:29:24.5481933Z         Parameters
2025-01-24T14:29:24.5482008Z         ----------
2025-01-24T14:29:24.5482156Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5482239Z             Simulation object.
2025-01-24T14:29:24.5482318Z     
2025-01-24T14:29:24.5482392Z         Returns
2025-01-24T14:29:24.5482473Z         -------
2025-01-24T14:29:24.5482607Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5482677Z         """
2025-01-24T14:29:24.5482817Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5482825Z 
2025-01-24T14:29:24.5482975Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5483096Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5483258Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5483529Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5483743Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5483883Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5483994Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5484004Z 
2025-01-24T14:29:24.5484220Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5484393Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5484479Z packets_mode = 'real'
2025-01-24T14:29:24.5484483Z 
2025-01-24T14:29:24.5484569Z     @classmethod
2025-01-24T14:29:24.5484680Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5484756Z         """
2025-01-24T14:29:24.5484949Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5485027Z     
2025-01-24T14:29:24.5485108Z         Parameters
2025-01-24T14:29:24.5485189Z         ----------
2025-01-24T14:29:24.5485289Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5485447Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5485545Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5485692Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5485768Z     
2025-01-24T14:29:24.5485842Z         Returns
2025-01-24T14:29:24.5485921Z         -------
2025-01-24T14:29:24.5486009Z         SimulationPacketData
2025-01-24T14:29:24.5486086Z         """
2025-01-24T14:29:24.5486192Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5486374Z             raise ValueError(
2025-01-24T14:29:24.5486494Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5486602Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5486673Z             )
2025-01-24T14:29:24.5486787Z         # Properties common among both packet modes
2025-01-24T14:29:24.5486947Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5487031Z             "line_id"
2025-01-24T14:29:24.5487104Z         )
2025-01-24T14:29:24.5487218Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5487353Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5487438Z         time_of_simulation = (
2025-01-24T14:29:24.5487603Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5487674Z         )
2025-01-24T14:29:24.5487751Z     
2025-01-24T14:29:24.5487830Z         spectrum = (
2025-01-24T14:29:24.5487954Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5488047Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5488169Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5488345Z         )
2025-01-24T14:29:24.5488428Z     
2025-01-24T14:29:24.5488519Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5488649Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5488729Z             return cls(
2025-01-24T14:29:24.5488894Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5489069Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5489251Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5489424Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5489580Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5489673Z                 lines_df=lines_df,
2025-01-24T14:29:24.5489803Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5489964Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5490234Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5490356Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5490543Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5490660Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5490770Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5501008Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5501143Z                 simulation=sim,
2025-01-24T14:29:24.5501221Z             )
2025-01-24T14:29:24.5501318Z         else: # real packets
2025-01-24T14:29:24.5501518Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5501608Z             # which got emitted
2025-01-24T14:29:24.5501730Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5501815Z >           return cls(
2025-01-24T14:29:24.5502013Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5502204Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5502287Z                     mask
2025-01-24T14:29:24.5502361Z                 ],
2025-01-24T14:29:24.5502557Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5502630Z                     mask
2025-01-24T14:29:24.5502709Z                 ],
2025-01-24T14:29:24.5502879Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5502959Z                     mask
2025-01-24T14:29:24.5503204Z                 ],
2025-01-24T14:29:24.5503381Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5503467Z                 lines_df=lines_df,
2025-01-24T14:29:24.5503642Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5503829Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5503904Z                     mask
2025-01-24T14:29:24.5503979Z                 ],
2025-01-24T14:29:24.5504115Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5504241Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5504434Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5504556Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5504663Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5504772Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5504854Z                 simulation=sim,
2025-01-24T14:29:24.5504933Z             )
2025-01-24T14:29:24.5505271Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5505286Z 
2025-01-24T14:29:24.5505465Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5505681Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl5] _
2025-01-24T14:29:24.5505686Z 
2025-01-24T14:29:24.5505955Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5506173Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5506407Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5506412Z 
2025-01-24T14:29:24.5506513Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5506641Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5506720Z         """
2025-01-24T14:29:24.5506812Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5506889Z     
2025-01-24T14:29:24.5506971Z         Parameters
2025-01-24T14:29:24.5507168Z         ----------
2025-01-24T14:29:24.5507326Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5507411Z             Simulation object.
2025-01-24T14:29:24.5507486Z     
2025-01-24T14:29:24.5507559Z         Returns
2025-01-24T14:29:24.5507641Z         -------
2025-01-24T14:29:24.5507776Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5507853Z         """
2025-01-24T14:29:24.5507988Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5507992Z 
2025-01-24T14:29:24.5508147Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5508385Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5508566Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5508719Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5508942Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5509087Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5509200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5509205Z 
2025-01-24T14:29:24.5509427Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5509599Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5509687Z packets_mode = 'real'
2025-01-24T14:29:24.5509692Z 
2025-01-24T14:29:24.5509767Z     @classmethod
2025-01-24T14:29:24.5509889Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5509959Z         """
2025-01-24T14:29:24.5510283Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5510360Z     
2025-01-24T14:29:24.5510438Z         Parameters
2025-01-24T14:29:24.5510521Z         ----------
2025-01-24T14:29:24.5510624Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5510788Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5510883Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5511030Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5511099Z     
2025-01-24T14:29:24.5511177Z         Returns
2025-01-24T14:29:24.5511252Z         -------
2025-01-24T14:29:24.5511345Z         SimulationPacketData
2025-01-24T14:29:24.5511419Z         """
2025-01-24T14:29:24.5511532Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5511616Z             raise ValueError(
2025-01-24T14:29:24.5511745Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5511856Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5511931Z             )
2025-01-24T14:29:24.5512047Z         # Properties common among both packet modes
2025-01-24T14:29:24.5512211Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5512294Z             "line_id"
2025-01-24T14:29:24.5512372Z         )
2025-01-24T14:29:24.5512483Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5512615Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5512700Z         time_of_simulation = (
2025-01-24T14:29:24.5512862Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5512932Z         )
2025-01-24T14:29:24.5513006Z     
2025-01-24T14:29:24.5513084Z         spectrum = (
2025-01-24T14:29:24.5513206Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5513297Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5513424Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5513498Z         )
2025-01-24T14:29:24.5513574Z     
2025-01-24T14:29:24.5513662Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5513795Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5513992Z             return cls(
2025-01-24T14:29:24.5514157Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5514337Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5514514Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5514686Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5514836Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5514929Z                 lines_df=lines_df,
2025-01-24T14:29:24.5515059Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5515222Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5515354Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5515477Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5515669Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5515785Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5515895Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5515994Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5516082Z                 simulation=sim,
2025-01-24T14:29:24.5516154Z             )
2025-01-24T14:29:24.5516242Z         else: # real packets
2025-01-24T14:29:24.5516414Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5516499Z             # which got emitted
2025-01-24T14:29:24.5516712Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5516796Z >           return cls(
2025-01-24T14:29:24.5516971Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5517158Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5517243Z                     mask
2025-01-24T14:29:24.5517315Z                 ],
2025-01-24T14:29:24.5517509Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5517585Z                     mask
2025-01-24T14:29:24.5517660Z                 ],
2025-01-24T14:29:24.5517830Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5517909Z                     mask
2025-01-24T14:29:24.5517979Z                 ],
2025-01-24T14:29:24.5518150Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5518343Z                 lines_df=lines_df,
2025-01-24T14:29:24.5518515Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5518687Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5518771Z                     mask
2025-01-24T14:29:24.5518842Z                 ],
2025-01-24T14:29:24.5518976Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5519097Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5519281Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5519394Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5519494Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5519596Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5519677Z                 simulation=sim,
2025-01-24T14:29:24.5519754Z             )
2025-01-24T14:29:24.5520093Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5520100Z 
2025-01-24T14:29:24.5520282Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5520606Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl6] _
2025-01-24T14:29:24.5520617Z 
2025-01-24T14:29:24.5520886Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5521104Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5521340Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5521346Z 
2025-01-24T14:29:24.5521440Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5521556Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5521632Z         """
2025-01-24T14:29:24.5521725Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5521799Z     
2025-01-24T14:29:24.5521874Z         Parameters
2025-01-24T14:29:24.5521954Z         ----------
2025-01-24T14:29:24.5522097Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5522187Z             Simulation object.
2025-01-24T14:29:24.5522265Z     
2025-01-24T14:29:24.5522338Z         Returns
2025-01-24T14:29:24.5522420Z         -------
2025-01-24T14:29:24.5522550Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5522626Z         """
2025-01-24T14:29:24.5522758Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5522763Z 
2025-01-24T14:29:24.5522910Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5523022Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5523190Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5523336Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5523695Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5523828Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5523944Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5523951Z 
2025-01-24T14:29:24.5524169Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5524337Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5524425Z packets_mode = 'real'
2025-01-24T14:29:24.5524429Z 
2025-01-24T14:29:24.5524504Z     @classmethod
2025-01-24T14:29:24.5524623Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5524694Z         """
2025-01-24T14:29:24.5524893Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5524964Z     
2025-01-24T14:29:24.5525045Z         Parameters
2025-01-24T14:29:24.5525122Z         ----------
2025-01-24T14:29:24.5525227Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5525381Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5525474Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5525621Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5525691Z     
2025-01-24T14:29:24.5525768Z         Returns
2025-01-24T14:29:24.5525841Z         -------
2025-01-24T14:29:24.5525932Z         SimulationPacketData
2025-01-24T14:29:24.5526003Z         """
2025-01-24T14:29:24.5526112Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5526196Z             raise ValueError(
2025-01-24T14:29:24.5526316Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5526418Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5526495Z             )
2025-01-24T14:29:24.5526601Z         # Properties common among both packet modes
2025-01-24T14:29:24.5526769Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5526845Z             "line_id"
2025-01-24T14:29:24.5526920Z         )
2025-01-24T14:29:24.5527033Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5527246Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5527335Z         time_of_simulation = (
2025-01-24T14:29:24.5527488Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5527563Z         )
2025-01-24T14:29:24.5527635Z     
2025-01-24T14:29:24.5527717Z         spectrum = (
2025-01-24T14:29:24.5527830Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5527925Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5528042Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5528118Z         )
2025-01-24T14:29:24.5528188Z     
2025-01-24T14:29:24.5528385Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5528508Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5528590Z             return cls(
2025-01-24T14:29:24.5528752Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5528926Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5529107Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5529274Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5529430Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5529543Z                 lines_df=lines_df,
2025-01-24T14:29:24.5529677Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5529831Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5530084Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5530200Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5530395Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5530513Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5530618Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5530719Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5530801Z                 simulation=sim,
2025-01-24T14:29:24.5530876Z             )
2025-01-24T14:29:24.5530957Z         else: # real packets
2025-01-24T14:29:24.5531125Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5531205Z             # which got emitted
2025-01-24T14:29:24.5531317Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5531393Z >           return cls(
2025-01-24T14:29:24.5531570Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5531757Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5531838Z                     mask
2025-01-24T14:29:24.5531914Z                 ],
2025-01-24T14:29:24.5532107Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5532187Z                     mask
2025-01-24T14:29:24.5532257Z                 ],
2025-01-24T14:29:24.5532430Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5532506Z                     mask
2025-01-24T14:29:24.5532581Z                 ],
2025-01-24T14:29:24.5532746Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5532834Z                 lines_df=lines_df,
2025-01-24T14:29:24.5532995Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5533177Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5533252Z                     mask
2025-01-24T14:29:24.5533330Z                 ],
2025-01-24T14:29:24.5533457Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5533702Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5533893Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5534003Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5534107Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5534203Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5534289Z                 simulation=sim,
2025-01-24T14:29:24.5534359Z             )
2025-01-24T14:29:24.5534695Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5534704Z 
2025-01-24T14:29:24.5534876Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5535089Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl7] _
2025-01-24T14:29:24.5535094Z 
2025-01-24T14:29:24.5535367Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5535581Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5535821Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5535827Z 
2025-01-24T14:29:24.5535920Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5536035Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5536112Z         """
2025-01-24T14:29:24.5536202Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5536276Z     
2025-01-24T14:29:24.5536354Z         Parameters
2025-01-24T14:29:24.5536431Z         ----------
2025-01-24T14:29:24.5536662Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5536750Z             Simulation object.
2025-01-24T14:29:24.5536819Z     
2025-01-24T14:29:24.5536895Z         Returns
2025-01-24T14:29:24.5536968Z         -------
2025-01-24T14:29:24.5537107Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5537182Z         """
2025-01-24T14:29:24.5537324Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5537329Z 
2025-01-24T14:29:24.5537475Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5537586Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5537751Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5537898Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5538119Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5538355Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5538472Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5538476Z 
2025-01-24T14:29:24.5538691Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5538866Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5538951Z packets_mode = 'real'
2025-01-24T14:29:24.5538956Z 
2025-01-24T14:29:24.5539030Z     @classmethod
2025-01-24T14:29:24.5539144Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5539215Z         """
2025-01-24T14:29:24.5539412Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5539482Z     
2025-01-24T14:29:24.5539562Z         Parameters
2025-01-24T14:29:24.5539637Z         ----------
2025-01-24T14:29:24.5539743Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5539896Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5539998Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5540137Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5540212Z     
2025-01-24T14:29:24.5540411Z         Returns
2025-01-24T14:29:24.5540486Z         -------
2025-01-24T14:29:24.5540578Z         SimulationPacketData
2025-01-24T14:29:24.5540648Z         """
2025-01-24T14:29:24.5540759Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5540846Z             raise ValueError(
2025-01-24T14:29:24.5540967Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5541070Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5541146Z             )
2025-01-24T14:29:24.5541252Z         # Properties common among both packet modes
2025-01-24T14:29:24.5541418Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5541496Z             "line_id"
2025-01-24T14:29:24.5541572Z         )
2025-01-24T14:29:24.5541681Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5541811Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5541895Z         time_of_simulation = (
2025-01-24T14:29:24.5542064Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5542141Z         )
2025-01-24T14:29:24.5542211Z     
2025-01-24T14:29:24.5542291Z         spectrum = (
2025-01-24T14:29:24.5542407Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5542500Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5542618Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5542694Z         )
2025-01-24T14:29:24.5542764Z     
2025-01-24T14:29:24.5542861Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5542984Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5543069Z             return cls(
2025-01-24T14:29:24.5543350Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5543526Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5543702Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5543882Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5544037Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5544119Z                 lines_df=lines_df,
2025-01-24T14:29:24.5544251Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5544405Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5544537Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5544651Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5544848Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5544957Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5545064Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5545163Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5545249Z                 simulation=sim,
2025-01-24T14:29:24.5545325Z             )
2025-01-24T14:29:24.5545406Z         else: # real packets
2025-01-24T14:29:24.5545575Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5545656Z             # which got emitted
2025-01-24T14:29:24.5545769Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5545844Z >           return cls(
2025-01-24T14:29:24.5546023Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5546207Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5546291Z                     mask
2025-01-24T14:29:24.5546362Z                 ],
2025-01-24T14:29:24.5546560Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5546635Z                     mask
2025-01-24T14:29:24.5546798Z                 ],
2025-01-24T14:29:24.5546970Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5547043Z                     mask
2025-01-24T14:29:24.5547118Z                 ],
2025-01-24T14:29:24.5547282Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5547372Z                 lines_df=lines_df,
2025-01-24T14:29:24.5547535Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5547714Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5547788Z                     mask
2025-01-24T14:29:24.5547868Z                 ],
2025-01-24T14:29:24.5547993Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5548115Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5548404Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5548524Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5548628Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5548723Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5548808Z                 simulation=sim,
2025-01-24T14:29:24.5548879Z             )
2025-01-24T14:29:24.5549213Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5549219Z 
2025-01-24T14:29:24.5549392Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5549603Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl8] _
2025-01-24T14:29:24.5549749Z 
2025-01-24T14:29:24.5550019Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5550236Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5550477Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5550482Z 
2025-01-24T14:29:24.5550572Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5550692Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5550762Z         """
2025-01-24T14:29:24.5550856Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5550926Z     
2025-01-24T14:29:24.5551009Z         Parameters
2025-01-24T14:29:24.5551083Z         ----------
2025-01-24T14:29:24.5551229Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5551310Z             Simulation object.
2025-01-24T14:29:24.5551389Z     
2025-01-24T14:29:24.5551461Z         Returns
2025-01-24T14:29:24.5551540Z         -------
2025-01-24T14:29:24.5551668Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5551744Z         """
2025-01-24T14:29:24.5551877Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5551890Z 
2025-01-24T14:29:24.5552032Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5552151Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5552312Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5552466Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5552679Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5552816Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5552925Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5552933Z 
2025-01-24T14:29:24.5553153Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5553327Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5553409Z packets_mode = 'real'
2025-01-24T14:29:24.5553530Z 
2025-01-24T14:29:24.5553612Z     @classmethod
2025-01-24T14:29:24.5553723Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5553799Z         """
2025-01-24T14:29:24.5553992Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5554067Z     
2025-01-24T14:29:24.5554142Z         Parameters
2025-01-24T14:29:24.5554220Z         ----------
2025-01-24T14:29:24.5554320Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5554472Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5554564Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5554711Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5554783Z     
2025-01-24T14:29:24.5554862Z         Returns
2025-01-24T14:29:24.5554940Z         -------
2025-01-24T14:29:24.5555027Z         SimulationPacketData
2025-01-24T14:29:24.5555101Z         """
2025-01-24T14:29:24.5555211Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5555303Z             raise ValueError(
2025-01-24T14:29:24.5555418Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5555526Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5555598Z             )
2025-01-24T14:29:24.5555709Z         # Properties common among both packet modes
2025-01-24T14:29:24.5555869Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5555949Z             "line_id"
2025-01-24T14:29:24.5556021Z         )
2025-01-24T14:29:24.5556134Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5556345Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5556434Z         time_of_simulation = (
2025-01-24T14:29:24.5556588Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5556664Z         )
2025-01-24T14:29:24.5556738Z     
2025-01-24T14:29:24.5556819Z         spectrum = (
2025-01-24T14:29:24.5556938Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5557027Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5557149Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5557219Z         )
2025-01-24T14:29:24.5557294Z     
2025-01-24T14:29:24.5557384Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5557510Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5557587Z             return cls(
2025-01-24T14:29:24.5557749Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5557918Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5558102Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5558380Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5558537Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5558624Z                 lines_df=lines_df,
2025-01-24T14:29:24.5558751Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5558910Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5559038Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5559156Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5559345Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5559459Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5559564Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5559669Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5559756Z                 simulation=sim,
2025-01-24T14:29:24.5559830Z             )
2025-01-24T14:29:24.5560039Z         else: # real packets
2025-01-24T14:29:24.5560206Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5560292Z             # which got emitted
2025-01-24T14:29:24.5560400Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5560485Z >           return cls(
2025-01-24T14:29:24.5560657Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5560845Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5560921Z                     mask
2025-01-24T14:29:24.5560999Z                 ],
2025-01-24T14:29:24.5561192Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5561271Z                     mask
2025-01-24T14:29:24.5561341Z                 ],
2025-01-24T14:29:24.5561513Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5561595Z                     mask
2025-01-24T14:29:24.5561666Z                 ],
2025-01-24T14:29:24.5561836Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5561918Z                 lines_df=lines_df,
2025-01-24T14:29:24.5562084Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5562263Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5562342Z                     mask
2025-01-24T14:29:24.5562413Z                 ],
2025-01-24T14:29:24.5562546Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5562777Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5562968Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5563076Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5563181Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5563284Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5563365Z                 simulation=sim,
2025-01-24T14:29:24.5563442Z             )
2025-01-24T14:29:24.5563772Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5563778Z 
2025-01-24T14:29:24.5563952Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5564155Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl9] _
2025-01-24T14:29:24.5564160Z 
2025-01-24T14:29:24.5564438Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5564653Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5564890Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5564899Z 
2025-01-24T14:29:24.5564993Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5565107Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5565184Z         """
2025-01-24T14:29:24.5565273Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5565347Z     
2025-01-24T14:29:24.5565422Z         Parameters
2025-01-24T14:29:24.5565500Z         ----------
2025-01-24T14:29:24.5565641Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5565728Z             Simulation object.
2025-01-24T14:29:24.5565798Z     
2025-01-24T14:29:24.5565877Z         Returns
2025-01-24T14:29:24.5565951Z         -------
2025-01-24T14:29:24.5566085Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5566158Z         """
2025-01-24T14:29:24.5566297Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5566302Z 
2025-01-24T14:29:24.5566450Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5566653Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5566820Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5566969Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5567187Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5567321Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5567433Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5567438Z 
2025-01-24T14:29:24.5567652Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5567827Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5567915Z packets_mode = 'real'
2025-01-24T14:29:24.5567920Z 
2025-01-24T14:29:24.5567994Z     @classmethod
2025-01-24T14:29:24.5568109Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5568185Z         """
2025-01-24T14:29:24.5568485Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5568556Z     
2025-01-24T14:29:24.5568636Z         Parameters
2025-01-24T14:29:24.5568710Z         ----------
2025-01-24T14:29:24.5568813Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5568960Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5569059Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5569197Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5569272Z     
2025-01-24T14:29:24.5569343Z         Returns
2025-01-24T14:29:24.5569539Z         -------
2025-01-24T14:29:24.5569631Z         SimulationPacketData
2025-01-24T14:29:24.5569702Z         """
2025-01-24T14:29:24.5569812Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5569895Z             raise ValueError(
2025-01-24T14:29:24.5570017Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5570124Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5570200Z             )
2025-01-24T14:29:24.5570307Z         # Properties common among both packet modes
2025-01-24T14:29:24.5570473Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5570547Z             "line_id"
2025-01-24T14:29:24.5570625Z         )
2025-01-24T14:29:24.5570734Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5570864Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5570948Z         time_of_simulation = (
2025-01-24T14:29:24.5571108Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5571188Z         )
2025-01-24T14:29:24.5571259Z     
2025-01-24T14:29:24.5571341Z         spectrum = (
2025-01-24T14:29:24.5571455Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5571556Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5571675Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5571751Z         )
2025-01-24T14:29:24.5571821Z     
2025-01-24T14:29:24.5571919Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5572042Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5572122Z             return cls(
2025-01-24T14:29:24.5572279Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5572455Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5572634Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5572811Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5572965Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5573049Z                 lines_df=lines_df,
2025-01-24T14:29:24.5573319Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5573473Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5573608Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5573722Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5573916Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5574023Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5574130Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5574225Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5574317Z                 simulation=sim,
2025-01-24T14:29:24.5574393Z             )
2025-01-24T14:29:24.5574476Z         else: # real packets
2025-01-24T14:29:24.5574647Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5574730Z             # which got emitted
2025-01-24T14:29:24.5574842Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5574920Z >           return cls(
2025-01-24T14:29:24.5575098Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5575282Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5575361Z                     mask
2025-01-24T14:29:24.5575433Z                 ],
2025-01-24T14:29:24.5575624Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5575699Z                     mask
2025-01-24T14:29:24.5575859Z                 ],
2025-01-24T14:29:24.5576025Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5576107Z                     mask
2025-01-24T14:29:24.5576185Z                 ],
2025-01-24T14:29:24.5576349Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5576439Z                 lines_df=lines_df,
2025-01-24T14:29:24.5576602Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5576782Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5576855Z                     mask
2025-01-24T14:29:24.5576939Z                 ],
2025-01-24T14:29:24.5577064Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5577184Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5577369Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5577486Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5577591Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5577689Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5577775Z                 simulation=sim,
2025-01-24T14:29:24.5577849Z             )
2025-01-24T14:29:24.5578187Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5578192Z 
2025-01-24T14:29:24.5578461Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5578679Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl10] _
2025-01-24T14:29:24.5578684Z 
2025-01-24T14:29:24.5578948Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5579165Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5579407Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5579413Z 
2025-01-24T14:29:24.5579502Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5579621Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5579815Z         """
2025-01-24T14:29:24.5579908Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5579978Z     
2025-01-24T14:29:24.5580057Z         Parameters
2025-01-24T14:29:24.5580130Z         ----------
2025-01-24T14:29:24.5580274Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5580356Z             Simulation object.
2025-01-24T14:29:24.5580431Z     
2025-01-24T14:29:24.5580503Z         Returns
2025-01-24T14:29:24.5580581Z         -------
2025-01-24T14:29:24.5580708Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5580811Z         """
2025-01-24T14:29:24.5580953Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5580967Z 
2025-01-24T14:29:24.5581110Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5581227Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5581387Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5581543Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5581757Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5581895Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5582017Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5582022Z 
2025-01-24T14:29:24.5582248Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5582413Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5582501Z packets_mode = 'real'
2025-01-24T14:29:24.5582635Z 
2025-01-24T14:29:24.5582716Z     @classmethod
2025-01-24T14:29:24.5582826Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5582902Z         """
2025-01-24T14:29:24.5583096Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5583175Z     
2025-01-24T14:29:24.5583250Z         Parameters
2025-01-24T14:29:24.5583329Z         ----------
2025-01-24T14:29:24.5583429Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5583582Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5583675Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5583821Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5583892Z     
2025-01-24T14:29:24.5583969Z         Returns
2025-01-24T14:29:24.5584042Z         -------
2025-01-24T14:29:24.5584133Z         SimulationPacketData
2025-01-24T14:29:24.5584213Z         """
2025-01-24T14:29:24.5584318Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5584410Z             raise ValueError(
2025-01-24T14:29:24.5584527Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5584635Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5584711Z             )
2025-01-24T14:29:24.5584820Z         # Properties common among both packet modes
2025-01-24T14:29:24.5584978Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5585056Z             "line_id"
2025-01-24T14:29:24.5585128Z         )
2025-01-24T14:29:24.5585241Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5585365Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5585455Z         time_of_simulation = (
2025-01-24T14:29:24.5585612Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5585691Z         )
2025-01-24T14:29:24.5585766Z     
2025-01-24T14:29:24.5585847Z         spectrum = (
2025-01-24T14:29:24.5585967Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5586057Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5586177Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5586248Z         )
2025-01-24T14:29:24.5586413Z     
2025-01-24T14:29:24.5586503Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5586629Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5586705Z             return cls(
2025-01-24T14:29:24.5586869Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5587040Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5587221Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5587387Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5587548Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5587637Z                 lines_df=lines_df,
2025-01-24T14:29:24.5587766Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5587923Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5588055Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5588176Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5588504Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5588619Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5588722Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5588823Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5588904Z                 simulation=sim,
2025-01-24T14:29:24.5588980Z             )
2025-01-24T14:29:24.5589188Z         else: # real packets
2025-01-24T14:29:24.5589353Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5589437Z             # which got emitted
2025-01-24T14:29:24.5589544Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5589626Z >           return cls(
2025-01-24T14:29:24.5589800Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5589988Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5590064Z                     mask
2025-01-24T14:29:24.5590139Z                 ],
2025-01-24T14:29:24.5590329Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5590409Z                     mask
2025-01-24T14:29:24.5590482Z                 ],
2025-01-24T14:29:24.5590652Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5590735Z                     mask
2025-01-24T14:29:24.5590806Z                 ],
2025-01-24T14:29:24.5590975Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5591058Z                 lines_df=lines_df,
2025-01-24T14:29:24.5591225Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5591402Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5591481Z                     mask
2025-01-24T14:29:24.5591552Z                 ],
2025-01-24T14:29:24.5591687Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5591801Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5591991Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5592099Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5592203Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5592307Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5592388Z                 simulation=sim,
2025-01-24T14:29:24.5592465Z             )
2025-01-24T14:29:24.5592796Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5592917Z 
2025-01-24T14:29:24.5593093Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5593300Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl11] _
2025-01-24T14:29:24.5593305Z 
2025-01-24T14:29:24.5593573Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5593784Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5594020Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5594025Z 
2025-01-24T14:29:24.5594123Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5594238Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5594315Z         """
2025-01-24T14:29:24.5594405Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5594481Z     
2025-01-24T14:29:24.5594560Z         Parameters
2025-01-24T14:29:24.5594641Z         ----------
2025-01-24T14:29:24.5594781Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5594868Z             Simulation object.
2025-01-24T14:29:24.5594937Z     
2025-01-24T14:29:24.5595015Z         Returns
2025-01-24T14:29:24.5595089Z         -------
2025-01-24T14:29:24.5595223Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5595295Z         """
2025-01-24T14:29:24.5595434Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5595439Z 
2025-01-24T14:29:24.5595586Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5595700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5595952Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5596103Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5596321Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5596458Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5596571Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5596576Z 
2025-01-24T14:29:24.5596790Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5596962Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5597049Z packets_mode = 'real'
2025-01-24T14:29:24.5597053Z 
2025-01-24T14:29:24.5597126Z     @classmethod
2025-01-24T14:29:24.5597241Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5597316Z         """
2025-01-24T14:29:24.5597514Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5597586Z     
2025-01-24T14:29:24.5597665Z         Parameters
2025-01-24T14:29:24.5597738Z         ----------
2025-01-24T14:29:24.5597841Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5597994Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5598090Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5598327Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5598405Z     
2025-01-24T14:29:24.5598477Z         Returns
2025-01-24T14:29:24.5598555Z         -------
2025-01-24T14:29:24.5598642Z         SimulationPacketData
2025-01-24T14:29:24.5598718Z         """
2025-01-24T14:29:24.5598829Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5598912Z             raise ValueError(
2025-01-24T14:29:24.5599035Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5599141Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5599217Z             )
2025-01-24T14:29:24.5599326Z         # Properties common among both packet modes
2025-01-24T14:29:24.5599490Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5599708Z             "line_id"
2025-01-24T14:29:24.5599784Z         )
2025-01-24T14:29:24.5599893Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5600023Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5600107Z         time_of_simulation = (
2025-01-24T14:29:24.5600269Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5600345Z         )
2025-01-24T14:29:24.5600415Z     
2025-01-24T14:29:24.5600495Z         spectrum = (
2025-01-24T14:29:24.5600608Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5600702Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5600822Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5600898Z         )
2025-01-24T14:29:24.5600969Z     
2025-01-24T14:29:24.5601062Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5601185Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5601269Z             return cls(
2025-01-24T14:29:24.5601427Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5601604Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5601778Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5601951Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5602105Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5602190Z                 lines_df=lines_df,
2025-01-24T14:29:24.5602439Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5602592Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5602726Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5602846Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5603036Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5603144Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5603252Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5603347Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5603435Z                 simulation=sim,
2025-01-24T14:29:24.5603507Z             )
2025-01-24T14:29:24.5603600Z         else: # real packets
2025-01-24T14:29:24.5603768Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5603853Z             # which got emitted
2025-01-24T14:29:24.5603965Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5604043Z >           return cls(
2025-01-24T14:29:24.5604220Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5604408Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5604488Z                     mask
2025-01-24T14:29:24.5604559Z                 ],
2025-01-24T14:29:24.5604752Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5604828Z                     mask
2025-01-24T14:29:24.5604907Z                 ],
2025-01-24T14:29:24.5605073Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5605152Z                     mask
2025-01-24T14:29:24.5605228Z                 ],
2025-01-24T14:29:24.5605392Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5605482Z                 lines_df=lines_df,
2025-01-24T14:29:24.5605644Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5605824Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5605986Z                     mask
2025-01-24T14:29:24.5606063Z                 ],
2025-01-24T14:29:24.5606189Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5606309Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5606502Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5606615Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5606715Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5606814Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5606898Z                 simulation=sim,
2025-01-24T14:29:24.5606976Z             )
2025-01-24T14:29:24.5607316Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5607322Z 
2025-01-24T14:29:24.5607490Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5607703Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl12] _
2025-01-24T14:29:24.5607708Z 
2025-01-24T14:29:24.5607972Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5608190Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5608531Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5608543Z 
2025-01-24T14:29:24.5608632Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5608752Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5608940Z         """
2025-01-24T14:29:24.5609034Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5609105Z     
2025-01-24T14:29:24.5609186Z         Parameters
2025-01-24T14:29:24.5609260Z         ----------
2025-01-24T14:29:24.5609406Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5609491Z             Simulation object.
2025-01-24T14:29:24.5609569Z     
2025-01-24T14:29:24.5609642Z         Returns
2025-01-24T14:29:24.5609720Z         -------
2025-01-24T14:29:24.5609848Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5609923Z         """
2025-01-24T14:29:24.5610056Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5610067Z 
2025-01-24T14:29:24.5610207Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5610324Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5610484Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5610639Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5610851Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5610990Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5611101Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5611106Z 
2025-01-24T14:29:24.5611326Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5611493Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5611579Z packets_mode = 'real'
2025-01-24T14:29:24.5611584Z 
2025-01-24T14:29:24.5611668Z     @classmethod
2025-01-24T14:29:24.5611778Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5611853Z         """
2025-01-24T14:29:24.5612045Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5612120Z     
2025-01-24T14:29:24.5612201Z         Parameters
2025-01-24T14:29:24.5612280Z         ----------
2025-01-24T14:29:24.5612379Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5612530Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5612622Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5612889Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5612960Z     
2025-01-24T14:29:24.5613038Z         Returns
2025-01-24T14:29:24.5613111Z         -------
2025-01-24T14:29:24.5613205Z         SimulationPacketData
2025-01-24T14:29:24.5613280Z         """
2025-01-24T14:29:24.5613386Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5613473Z             raise ValueError(
2025-01-24T14:29:24.5613588Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5613696Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5613767Z             )
2025-01-24T14:29:24.5613882Z         # Properties common among both packet modes
2025-01-24T14:29:24.5614043Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5614123Z             "line_id"
2025-01-24T14:29:24.5614193Z         )
2025-01-24T14:29:24.5614312Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5614435Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5614526Z         time_of_simulation = (
2025-01-24T14:29:24.5614680Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5614756Z         )
2025-01-24T14:29:24.5614834Z     
2025-01-24T14:29:24.5614911Z         spectrum = (
2025-01-24T14:29:24.5615031Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5615120Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5615242Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5615313Z         )
2025-01-24T14:29:24.5615475Z     
2025-01-24T14:29:24.5615565Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5615693Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5615768Z             return cls(
2025-01-24T14:29:24.5615930Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5616107Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5616289Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5616455Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5616613Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5616702Z                 lines_df=lines_df,
2025-01-24T14:29:24.5616829Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5616989Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5617120Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5617244Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5617429Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5617545Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5617648Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5617750Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5617837Z                 simulation=sim,
2025-01-24T14:29:24.5617915Z             )
2025-01-24T14:29:24.5618002Z         else: # real packets
2025-01-24T14:29:24.5618167Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5618376Z             # which got emitted
2025-01-24T14:29:24.5618489Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5618570Z >           return cls(
2025-01-24T14:29:24.5618746Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5618934Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5619009Z                     mask
2025-01-24T14:29:24.5619208Z                 ],
2025-01-24T14:29:24.5619399Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5619479Z                     mask
2025-01-24T14:29:24.5619553Z                 ],
2025-01-24T14:29:24.5619723Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5619798Z                     mask
2025-01-24T14:29:24.5619874Z                 ],
2025-01-24T14:29:24.5620042Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5620127Z                 lines_df=lines_df,
2025-01-24T14:29:24.5620293Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5620472Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5620551Z                     mask
2025-01-24T14:29:24.5620621Z                 ],
2025-01-24T14:29:24.5620753Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5620871Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5621061Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5621170Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5621275Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5621377Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5621458Z                 simulation=sim,
2025-01-24T14:29:24.5621533Z             )
2025-01-24T14:29:24.5621862Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5622003Z 
2025-01-24T14:29:24.5622180Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5622387Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl13] _
2025-01-24T14:29:24.5622392Z 
2025-01-24T14:29:24.5622665Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5622879Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5623119Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5623125Z 
2025-01-24T14:29:24.5623220Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5623334Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5623411Z         """
2025-01-24T14:29:24.5623500Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5623574Z     
2025-01-24T14:29:24.5623649Z         Parameters
2025-01-24T14:29:24.5623731Z         ----------
2025-01-24T14:29:24.5623872Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5623961Z             Simulation object.
2025-01-24T14:29:24.5624031Z     
2025-01-24T14:29:24.5624111Z         Returns
2025-01-24T14:29:24.5624187Z         -------
2025-01-24T14:29:24.5624321Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5624393Z         """
2025-01-24T14:29:24.5624532Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5624537Z 
2025-01-24T14:29:24.5624682Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5624795Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5624961Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5625108Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5625328Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5625464Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5625578Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5625582Z 
2025-01-24T14:29:24.5625794Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5626055Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5626137Z packets_mode = 'real'
2025-01-24T14:29:24.5626147Z 
2025-01-24T14:29:24.5626222Z     @classmethod
2025-01-24T14:29:24.5626336Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5626407Z         """
2025-01-24T14:29:24.5626607Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5626678Z     
2025-01-24T14:29:24.5626762Z         Parameters
2025-01-24T14:29:24.5626835Z         ----------
2025-01-24T14:29:24.5626939Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5627092Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5627192Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5627331Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5627410Z     
2025-01-24T14:29:24.5627482Z         Returns
2025-01-24T14:29:24.5627560Z         -------
2025-01-24T14:29:24.5627646Z         SimulationPacketData
2025-01-24T14:29:24.5627722Z         """
2025-01-24T14:29:24.5627832Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5627915Z             raise ValueError(
2025-01-24T14:29:24.5628037Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5628143Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5628339Z             )
2025-01-24T14:29:24.5628449Z         # Properties common among both packet modes
2025-01-24T14:29:24.5628615Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5628809Z             "line_id"
2025-01-24T14:29:24.5628889Z         )
2025-01-24T14:29:24.5628997Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5629128Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5629216Z         time_of_simulation = (
2025-01-24T14:29:24.5629375Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5629477Z         )
2025-01-24T14:29:24.5629557Z     
2025-01-24T14:29:24.5629639Z         spectrum = (
2025-01-24T14:29:24.5629751Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5629844Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5629961Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5630037Z         )
2025-01-24T14:29:24.5630106Z     
2025-01-24T14:29:24.5630200Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5630322Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5630409Z             return cls(
2025-01-24T14:29:24.5630567Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5630745Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5630925Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5631097Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5631251Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5631336Z                 lines_df=lines_df,
2025-01-24T14:29:24.5631474Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5631627Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5631760Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5631874Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5632069Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5632177Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5632289Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5632503Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5632590Z                 simulation=sim,
2025-01-24T14:29:24.5632661Z             )
2025-01-24T14:29:24.5632748Z         else: # real packets
2025-01-24T14:29:24.5632918Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5633000Z             # which got emitted
2025-01-24T14:29:24.5633112Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5633189Z >           return cls(
2025-01-24T14:29:24.5633368Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5633550Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5633632Z                     mask
2025-01-24T14:29:24.5633704Z                 ],
2025-01-24T14:29:24.5633899Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5633977Z                     mask
2025-01-24T14:29:24.5634056Z                 ],
2025-01-24T14:29:24.5634221Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5634302Z                     mask
2025-01-24T14:29:24.5634380Z                 ],
2025-01-24T14:29:24.5634545Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5634632Z                 lines_df=lines_df,
2025-01-24T14:29:24.5634793Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5634971Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5635129Z                     mask
2025-01-24T14:29:24.5635207Z                 ],
2025-01-24T14:29:24.5635335Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5635455Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5635644Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5635756Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5635856Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5635956Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5636042Z                 simulation=sim,
2025-01-24T14:29:24.5636113Z             )
2025-01-24T14:29:24.5636445Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5636451Z 
2025-01-24T14:29:24.5636620Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5636832Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl14] _
2025-01-24T14:29:24.5636838Z 
2025-01-24T14:29:24.5637108Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5637324Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5637558Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5637568Z 
2025-01-24T14:29:24.5637657Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5637777Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5637849Z         """
2025-01-24T14:29:24.5637942Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5638012Z     
2025-01-24T14:29:24.5638093Z         Parameters
2025-01-24T14:29:24.5638168Z         ----------
2025-01-24T14:29:24.5638417Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5638503Z             Simulation object.
2025-01-24T14:29:24.5638582Z     
2025-01-24T14:29:24.5638654Z         Returns
2025-01-24T14:29:24.5638731Z         -------
2025-01-24T14:29:24.5638860Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5638936Z         """
2025-01-24T14:29:24.5639187Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5639197Z 
2025-01-24T14:29:24.5639336Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5639453Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5639613Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5639766Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5639979Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5640115Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5640224Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5640231Z 
2025-01-24T14:29:24.5640446Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5640612Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5640701Z packets_mode = 'real'
2025-01-24T14:29:24.5640706Z 
2025-01-24T14:29:24.5640785Z     @classmethod
2025-01-24T14:29:24.5640897Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5640973Z         """
2025-01-24T14:29:24.5641166Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5641241Z     
2025-01-24T14:29:24.5641316Z         Parameters
2025-01-24T14:29:24.5641395Z         ----------
2025-01-24T14:29:24.5641494Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5641646Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5641738Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5642000Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5642071Z     
2025-01-24T14:29:24.5642147Z         Returns
2025-01-24T14:29:24.5642220Z         -------
2025-01-24T14:29:24.5642312Z         SimulationPacketData
2025-01-24T14:29:24.5642386Z         """
2025-01-24T14:29:24.5642497Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5642584Z             raise ValueError(
2025-01-24T14:29:24.5642700Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5642808Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5642880Z             )
2025-01-24T14:29:24.5642992Z         # Properties common among both packet modes
2025-01-24T14:29:24.5643151Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5643229Z             "line_id"
2025-01-24T14:29:24.5643300Z         )
2025-01-24T14:29:24.5643412Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5643539Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5643630Z         time_of_simulation = (
2025-01-24T14:29:24.5643786Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5643864Z         )
2025-01-24T14:29:24.5643936Z     
2025-01-24T14:29:24.5644018Z         spectrum = (
2025-01-24T14:29:24.5644137Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5644226Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5644348Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5644419Z         )
2025-01-24T14:29:24.5644494Z     
2025-01-24T14:29:24.5644584Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5644712Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5644788Z             return cls(
2025-01-24T14:29:24.5644950Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5645124Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5645307Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5645474Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5645741Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5645829Z                 lines_df=lines_df,
2025-01-24T14:29:24.5645955Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5646116Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5646246Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5646366Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5646552Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5646670Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5646772Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5646873Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5646962Z                 simulation=sim,
2025-01-24T14:29:24.5647041Z             )
2025-01-24T14:29:24.5647124Z         else: # real packets
2025-01-24T14:29:24.5647293Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5647380Z             # which got emitted
2025-01-24T14:29:24.5647487Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5647569Z >           return cls(
2025-01-24T14:29:24.5647741Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5647927Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5648002Z                     mask
2025-01-24T14:29:24.5648077Z                 ],
2025-01-24T14:29:24.5648490Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5648573Z                     mask
2025-01-24T14:29:24.5648646Z                 ],
2025-01-24T14:29:24.5648817Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5648895Z                     mask
2025-01-24T14:29:24.5648972Z                 ],
2025-01-24T14:29:24.5649140Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5649222Z                 lines_df=lines_df,
2025-01-24T14:29:24.5649389Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5649562Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5649641Z                     mask
2025-01-24T14:29:24.5649712Z                 ],
2025-01-24T14:29:24.5649843Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5649961Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5650151Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5650259Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5650367Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5650462Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5650548Z                 simulation=sim,
2025-01-24T14:29:24.5650626Z             )
2025-01-24T14:29:24.5650961Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5650966Z 
2025-01-24T14:29:24.5651144Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5651351Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl15] _
2025-01-24T14:29:24.5651356Z 
2025-01-24T14:29:24.5651627Z self = <tardis.visualization.tools.tests.test_sdec_plot.TestSDECPlotter object at 0x7fb238cc7b60>
2025-01-24T14:29:24.5651839Z simulation_simple = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5652074Z request = <SubRequest 'plotter' for <Function test_parse_species_list[_full_species_list]>>
2025-01-24T14:29:24.5652196Z 
2025-01-24T14:29:24.5652292Z     @pytest.fixture(scope="class")
2025-01-24T14:29:24.5652408Z     def plotter(self, simulation_simple, request):
2025-01-24T14:29:24.5652484Z         """
2025-01-24T14:29:24.5652572Z         Create a SDECPlotter object.
2025-01-24T14:29:24.5652647Z     
2025-01-24T14:29:24.5652721Z         Parameters
2025-01-24T14:29:24.5652800Z         ----------
2025-01-24T14:29:24.5652939Z         simulation_simple : tardis.simulation.base.Simulation
2025-01-24T14:29:24.5653026Z             Simulation object.
2025-01-24T14:29:24.5653096Z     
2025-01-24T14:29:24.5653175Z         Returns
2025-01-24T14:29:24.5653247Z         -------
2025-01-24T14:29:24.5653385Z         tardis.visualization.tools.sdec_plot.SDECPlotter
2025-01-24T14:29:24.5653456Z         """
2025-01-24T14:29:24.5653593Z >       return SDECPlotter.from_simulation(simulation_simple)
2025-01-24T14:29:24.5653598Z 
2025-01-24T14:29:24.5653744Z tardis/visualization/tools/tests/test_sdec_plot.py:140: 
2025-01-24T14:29:24.5653859Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5654023Z tardis/visualization/tools/sdec_plot.py:64: in from_simulation
2025-01-24T14:29:24.5654171Z     return cls(pu.create_packet_data_dict_from_simulation(sim))
2025-01-24T14:29:24.5654388Z tardis/visualization/plot_util.py:103: in create_packet_data_dict_from_simulation
2025-01-24T14:29:24.5654521Z     "real": VisualizationData.from_simulation(sim, "real")
2025-01-24T14:29:24.5654634Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-24T14:29:24.5654638Z 
2025-01-24T14:29:24.5654849Z cls = <class 'tardis.visualization.tools.visualization_data.VisualizationData'>
2025-01-24T14:29:24.5655143Z sim = <tardis.simulation.base.Simulation object at 0x7fb227fdd3a0>
2025-01-24T14:29:24.5655227Z packets_mode = 'real'
2025-01-24T14:29:24.5655237Z 
2025-01-24T14:29:24.5655310Z     @classmethod
2025-01-24T14:29:24.5655426Z     def from_simulation(cls, sim, packets_mode):
2025-01-24T14:29:24.5655501Z         """
2025-01-24T14:29:24.5655698Z         Create an instance of SimulationPacketData from a TARDIS simulation object.
2025-01-24T14:29:24.5655769Z     
2025-01-24T14:29:24.5655850Z         Parameters
2025-01-24T14:29:24.5655923Z         ----------
2025-01-24T14:29:24.5656028Z         sim : tardis.simulation.Simulation
2025-01-24T14:29:24.5656176Z             TARDIS Simulation object produced by running a simulation
2025-01-24T14:29:24.5656274Z         packets_mode : {'virtual', 'real'}
2025-01-24T14:29:24.5656414Z             Mode of packets to be considered, either real or virtual
2025-01-24T14:29:24.5656490Z     
2025-01-24T14:29:24.5656565Z         Returns
2025-01-24T14:29:24.5656642Z         -------
2025-01-24T14:29:24.5656730Z         SimulationPacketData
2025-01-24T14:29:24.5656806Z         """
2025-01-24T14:29:24.5656915Z         if packets_mode not in ["virtual", "real"]:
2025-01-24T14:29:24.5657004Z             raise ValueError(
2025-01-24T14:29:24.5657128Z                 "Invalid value passed to packets_mode. Only "
2025-01-24T14:29:24.5657231Z                 "allowed values are 'virtual' or 'real'"
2025-01-24T14:29:24.5657307Z             )
2025-01-24T14:29:24.5657412Z         # Properties common among both packet modes
2025-01-24T14:29:24.5657576Z         lines_df = sim.plasma.atomic_data.lines.reset_index().set_index(
2025-01-24T14:29:24.5657652Z             "line_id"
2025-01-24T14:29:24.5657728Z         )
2025-01-24T14:29:24.5657838Z         time_explosion = sim.plasma.time_explosion
2025-01-24T14:29:24.5657967Z         transport_state = sim.transport.transport_state
2025-01-24T14:29:24.5658049Z         time_of_simulation = (
2025-01-24T14:29:24.5658212Z             transport_state.packet_collection.time_of_simulation * u.s
2025-01-24T14:29:24.5658403Z         )
2025-01-24T14:29:24.5658479Z     
2025-01-24T14:29:24.5658555Z         spectrum = (
2025-01-24T14:29:24.5658674Z             sim.spectrum_solver.spectrum_virtual_packets
2025-01-24T14:29:24.5658892Z             if packets_mode == "virtual"
2025-01-24T14:29:24.5659012Z             else sim.spectrum_solver.spectrum_real_packets
2025-01-24T14:29:24.5659089Z         )
2025-01-24T14:29:24.5659159Z     
2025-01-24T14:29:24.5659257Z         if packets_mode == "virtual":
2025-01-24T14:29:24.5659381Z             vpacket_tracker = transport_state.vpacket_tracker
2025-01-24T14:29:24.5659466Z             return cls(
2025-01-24T14:29:24.5659625Z                 last_interaction_type=vpacket_tracker.last_interaction_type,
2025-01-24T14:29:24.5659803Z                 last_line_interaction_in_id=vpacket_tracker.last_interaction_in_id,
2025-01-24T14:29:24.5659982Z                 last_line_interaction_out_id=vpacket_tracker.last_interaction_out_id,
2025-01-24T14:29:24.5660159Z                 last_line_interaction_in_nu=vpacket_tracker.last_interaction_in_nu,
2025-01-24T14:29:24.5660310Z                 last_interaction_in_r=vpacket_tracker.last_interaction_in_r,
2025-01-24T14:29:24.5660403Z                 lines_df=lines_df,
2025-01-24T14:29:24.5660537Z                 packet_nus=u.Quantity(vpacket_tracker.nus, "Hz"),
2025-01-24T14:29:24.5660691Z                 packet_energies=u.Quantity(vpacket_tracker.energies, "erg"),
2025-01-24T14:29:24.5660824Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5660939Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5661136Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5661250Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5661364Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5661578Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5661666Z                 simulation=sim,
2025-01-24T14:29:24.5661737Z             )
2025-01-24T14:29:24.5661824Z         else: # real packets
2025-01-24T14:29:24.5661999Z             # Packets-specific properties need to be only for those packets
2025-01-24T14:29:24.5662083Z             # which got emitted
2025-01-24T14:29:24.5662197Z             mask = transport_state.emitted_packet_mask
2025-01-24T14:29:24.5662273Z >           return cls(
2025-01-24T14:29:24.5662453Z                 last_interaction_type=transport_state.last_interaction_type[mask],
2025-01-24T14:29:24.5662638Z                 last_line_interaction_in_id=transport_state.last_line_interaction_in_id[
2025-01-24T14:29:24.5662718Z                     mask
2025-01-24T14:29:24.5662791Z                 ],
2025-01-24T14:29:24.5662986Z                 last_line_interaction_out_id=transport_state.last_line_interaction_out_id[
2025-01-24T14:29:24.5663061Z                     mask
2025-01-24T14:29:24.5663139Z                 ],
2025-01-24T14:29:24.5663312Z                 last_line_interaction_in_nu=transport_state.last_interaction_in_nu[
2025-01-24T14:29:24.5663392Z                     mask
2025-01-24T14:29:24.5663463Z                 ],
2025-01-24T14:29:24.5663638Z                 last_interaction_in_r=transport_state.last_interaction_in_r[mask],
2025-01-24T14:29:24.5663728Z                 lines_df=lines_df,
2025-01-24T14:29:24.5663890Z                 packet_nus=transport_state.packet_collection.output_nus[mask],
2025-01-24T14:29:24.5664071Z                 packet_energies=transport_state.packet_collection.output_energies[
2025-01-24T14:29:24.5664145Z                     mask
2025-01-24T14:29:24.5664222Z                 ],
2025-01-24T14:29:24.5664351Z                 spectrum_delta_frequency=spectrum.delta_frequency,
2025-01-24T14:29:24.5664472Z                 spectrum_frequency_bins=spectrum._frequency,
2025-01-24T14:29:24.5664660Z                 spectrum_luminosity_density_lambda=spectrum.luminosity_density_lambda,
2025-01-24T14:29:24.5664782Z                 spectrum_wavelength=spectrum.wavelength,
2025-01-24T14:29:24.5664884Z                 time_of_simulation=time_of_simulation,
2025-01-24T14:29:24.5664985Z                 time_explosion=time_explosion,
2025-01-24T14:29:24.5665159Z                 simulation=sim,
2025-01-24T14:29:24.5665231Z             )
2025-01-24T14:29:24.5665566Z E           TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5665571Z 
2025-01-24T14:29:24.5665743Z tardis/visualization/tools/visualization_data.py:208: TypeError
2025-01-24T14:29:24.5665868Z =============================== warnings summary ===============================
2025-01-24T14:29:24.5665982Z tardis/io/configuration/config_validator.py:6
2025-01-24T14:29:24.5666099Z tardis/io/configuration/config_validator.py:6
2025-01-24T14:29:24.5666412Z   /home/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-24T14:29:24.5666503Z   
2025-01-24T14:29:24.5667624Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-24T14:29:24.5667640Z 
2025-01-24T14:29:24.5667880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-24T14:29:24.5668364Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-24T14:29:24.5668438Z   
2025-01-24T14:29:24.5668596Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-24T14:29:24.5668751Z   given by the platformdirs library.  To remove this warning and
2025-01-24T14:29:24.5669047Z   see the appropriate new directories, set the environment variable
2025-01-24T14:29:24.5669193Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-24T14:29:24.5669468Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-24T14:29:24.5669477Z 
2025-01-24T14:29:24.5673919Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-24T14:29:24.5674258Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:29:24.5697045Z   /home/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-24T14:29:24.5697155Z   
2025-01-24T14:29:24.5697231Z   
2025-01-24T14:29:24.5697462Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-24T14:29:24.5697741Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-24T14:29:24.5697747Z 
2025-01-24T14:29:24.5697975Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-24T14:29:24.5698214Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-24T14:29:24.5698596Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-24T14:29:24.5698777Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-24T14:29:24.5699123Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-24T14:29:24.5699194Z   
2025-01-24T14:29:24.5699314Z   The current CMFGEN model parser is deprecated
2025-01-24T14:29:24.5699320Z 
2025-01-24T14:29:24.5699434Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-24T14:29:24.5699609Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-24T14:29:24.5699923Z   /home/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-24T14:29:24.5699993Z   
2025-01-24T14:29:24.5700104Z   The current CMFGEN model parser is deprecated
2025-01-24T14:29:24.5700114Z 
2025-01-24T14:29:24.5700321Z tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances
2025-01-24T14:29:24.5700693Z   /home/runner/work/tardis/tardis/tardis/transport/montecarlo/montecarlo_main_loop.py:123: NumbaTypeSafetyWarning:
2025-01-24T14:29:24.5700944Z   
2025-01-24T14:29:24.5701371Z   [1m[1m[1munsafe cast from uint64 to int64. Precision may be lost.[0m[0m[0m
2025-01-24T14:29:24.5701378Z 
2025-01-24T14:29:24.5701480Z tardis/model/tests/test_base.py: 6 warnings
2025-01-24T14:29:24.5701603Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-24T14:29:24.5701788Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-24T14:29:24.5702055Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-24T14:29:24.5702130Z   
2025-01-24T14:29:24.5702235Z   v_inner_boundary < 0, assuming default value
2025-01-24T14:29:24.5702240Z 
2025-01-24T14:29:24.5702342Z tardis/model/tests/test_base.py: 6 warnings
2025-01-24T14:29:24.5702462Z tardis/model/tests/test_csvy_model.py: 2 warnings
2025-01-24T14:29:24.5702636Z tardis/plasma/tests/test_tardis_model_density_config.py: 3 warnings
2025-01-24T14:29:24.5702896Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-24T14:29:24.5702973Z   
2025-01-24T14:29:24.5703080Z   v_outer_boundary < 0, assuming default value
2025-01-24T14:29:24.5703090Z 
2025-01-24T14:29:24.5703562Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-24T14:29:24.5703875Z   /home/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-24T14:29:24.5703945Z   
2025-01-24T14:29:24.5704232Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-24T14:29:24.5704685Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-24T14:29:24.5704885Z   
2025-01-24T14:29:24.5705408Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-24T14:29:24.5705427Z 
2025-01-24T14:29:24.5705577Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-24T14:29:24.5705872Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:29:24.5705942Z   
2025-01-24T14:29:24.5706038Z   Property "atomic_mass" not found
2025-01-24T14:29:24.5706044Z 
2025-01-24T14:29:24.5706481Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-24T14:29:24.5706886Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-24T14:29:24.5707186Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:29:24.5707265Z   
2025-01-24T14:29:24.5707368Z   Property "j_blues_norm_factor" not found
2025-01-24T14:29:24.5707381Z 
2025-01-24T14:29:24.5707809Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-24T14:29:24.5708192Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-24T14:29:24.5708730Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:29:24.5708808Z   
2025-01-24T14:29:24.5708903Z   Property "j_blue_estimator" not found
2025-01-24T14:29:24.5708908Z 
2025-01-24T14:29:24.5709302Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-24T14:29:24.5709648Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-24T14:29:24.5709932Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:29:24.5710134Z   
2025-01-24T14:29:24.5710224Z   Property "volume" not found
2025-01-24T14:29:24.5710230Z 
2025-01-24T14:29:24.5710632Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-24T14:29:24.5710971Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-24T14:29:24.5711249Z   /home/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-24T14:29:24.5711318Z   
2025-01-24T14:29:24.5711409Z   Property "r_inner" not found
2025-01-24T14:29:24.5711413Z 
2025-01-24T14:29:24.5711633Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-24T14:29:24.5711855Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-24T14:29:24.5712060Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-24T14:29:24.5712302Z   /home/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-24T14:29:24.5712379Z   
2025-01-24T14:29:24.5712573Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-24T14:29:24.5712578Z 
2025-01-24T14:29:24.5712788Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-24T14:29:24.5712987Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:70: UserWarning:
2025-01-24T14:29:24.5713062Z   
2025-01-24T14:29:24.5713391Z   SpectrumSolver.spectrum_virtual_packets is zero. Please run the montecarlo simulation with no_of_virtual_packets > 0
2025-01-24T14:29:24.5713396Z 
2025-01-24T14:29:24.5713729Z tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve
2025-01-24T14:29:24.5713934Z   /home/runner/work/tardis/tardis/tardis/spectrum/base.py:111: UserWarning:
2025-01-24T14:29:24.5714003Z   
2025-01-24T14:29:24.5714357Z   SpectrumSolver.integrator: The FormalIntegrator is not yet available.Please run the montecarlo simulation at least once.
2025-01-24T14:29:24.5714366Z 
2025-01-24T14:29:24.5714577Z tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_volley
2025-01-24T14:29:24.5714698Z   <string>:3: NumbaPendingDeprecationWarning:
2025-01-24T14:29:24.5714767Z   
2025-01-24T14:29:24.5715844Z   [1m[1mCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
2025-01-24T14:29:24.5715926Z   Exception origin:
2025-01-24T14:29:24.5716188Z     File "/home/runner/micromamba/envs/tardis/lib/python3.12/inspect.py", line 3180, in _bind
2025-01-24T14:29:24.5716281Z       raise TypeError(msg) from None
2025-01-24T14:29:24.5716374Z   [0m[0m
2025-01-24T14:29:24.5716379Z 
2025-01-24T14:29:24.5716740Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5717105Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5717455Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5717795Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5718141Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5718602Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5718975Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-24T14:29:24.5719050Z   
2025-01-24T14:29:24.5719373Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-24T14:29:24.5719557Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-24T14:29:24.5719795Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-24T14:29:24.5719801Z 
2025-01-24T14:29:24.5720158Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5720500Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5720856Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-24T14:29:24.5720934Z   
2025-01-24T14:29:24.5721111Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-24T14:29:24.5721286Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-24T14:29:24.5721521Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-24T14:29:24.5721526Z 
2025-01-24T14:29:24.5721876Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-24T14:29:24.5722226Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-24T14:29:24.5722300Z   
2025-01-24T14:29:24.5722476Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-24T14:29:24.5722646Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-24T14:29:24.5722879Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-24T14:29:24.5722994Z 
2025-01-24T14:29:24.5723424Z tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu]
2025-01-24T14:29:24.5723754Z   /home/runner/micromamba/envs/tardis/lib/python3.12/site-packages/qgridnext/grid.py:825: DeprecationWarning:
2025-01-24T14:29:24.5723823Z   
2025-01-24T14:29:24.5724105Z   QgridWidget._grid_options_changed is deprecated in traitlets 4.1: use @observe and @unobserve instead.
2025-01-24T14:29:24.5724110Z 
2025-01-24T14:29:24.5724365Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:29:24.5724576Z   /home/runner/work/tardis/tardis/tardis/io/util.py:289: PerformanceWarning:
2025-01-24T14:29:24.5724654Z   
2025-01-24T14:29:24.5724721Z   
2025-01-24T14:29:24.5724928Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-24T14:29:24.5725194Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-24T14:29:24.5725199Z 
2025-01-24T14:29:24.5725456Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:29:24.5725659Z   /home/runner/work/tardis/tardis/tardis/io/util.py:292: PerformanceWarning:
2025-01-24T14:29:24.5725735Z   
2025-01-24T14:29:24.5725803Z   
2025-01-24T14:29:24.5726009Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-24T14:29:24.5726189Z   map directly to c-types [inferred_type->mixed,key->values] [items->None]
2025-01-24T14:29:24.5726194Z 
2025-01-24T14:29:24.5726454Z tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data
2025-01-24T14:29:24.5726700Z   /home/runner/work/tardis/tardis/tardis/spectrum/formal_integral.py:398: UserWarning:
2025-01-24T14:29:24.5726770Z   
2025-01-24T14:29:24.5726965Z   The number of interpolate_shells was not specified. The value was set to 80.
2025-01-24T14:29:24.5726974Z 
2025-01-24T14:29:24.5727170Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-24T14:29:24.5727175Z 
2025-01-24T14:29:24.5727346Z ---------- coverage: platform linux, python 3.12.4-final-0 -----------
2025-01-24T14:29:24.5727585Z Coverage HTML written to dir coverage_html_report
2025-01-24T14:29:24.5727692Z Coverage XML written to file coverage.xml
2025-01-24T14:29:24.5727696Z 
2025-01-24T14:29:24.5727823Z =========================== short test summary info ============================
2025-01-24T14:29:24.5728644Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_list] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5729340Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_keep_colour] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5730078Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_mapped] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5730840Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5731600Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5732351Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5733222Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5733976Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5734733Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5735478Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5736229Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5736981Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5737733Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5738717Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5739610Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5740370Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5741134Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5741895Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5742648Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5743402Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5744275Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5745013Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5745774Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5746524Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5747275Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5748031Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5748925Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5749656Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5750516Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5751229Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5751948Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5752666Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5753384Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5754102Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5754817Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5755612Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5756314Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5757000Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5757687Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5758471Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5759173Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5759872Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5760568Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5761287Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5762165Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5762875Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5763602Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5764313Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5765021Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5765727Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5766563Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5767258Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_full_species_list] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5767944Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_species_list] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5768739Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_keep_colour] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5769505Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5770282Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5771043Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5771812Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5772578Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5773466Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5774230Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5774996Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5775753Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5776518Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5777295Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5778167Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5779073Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5779852Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5780615Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5781539Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5782788Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5783520Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5784244Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5785125Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5785856Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5786571Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5787294Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5788014Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5788881Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5789746Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5790480Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5791213Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5791937Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5792666Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5793386Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5794117Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5794813Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl0] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5795506Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl1] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5796329Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl2] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5797035Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl3] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5797725Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5798521Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl5] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5799215Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl6] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5799918Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl7] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5800726Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl8] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5801415Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl9] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5802125Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl10] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5802824Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl11] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5803527Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl12] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5804230Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl13] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5804920Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl14] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5805615Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl15] - TypeError: VisualizationData.__init__() missing 3 required positional arguments: 'v_inner', 'v_outer', and 'velocity'
2025-01-24T14:29:24.5805894Z = 1336 passed, 329 skipped, 2 deselected, 19 xfailed, 8 xpassed, 90 warnings, 102 errors in 734.92s (0:12:14) =
2025-01-24T14:29:26.3889185Z ##[error]Process completed with exit code 1.
