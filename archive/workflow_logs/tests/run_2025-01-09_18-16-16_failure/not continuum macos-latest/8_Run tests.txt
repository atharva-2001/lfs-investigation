2025-01-09T18:17:46.0957220Z ##[group]Run pytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"
2025-01-09T18:17:46.0958290Z [36;1mpytest tardis --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append -m "not continuum"[0m
2025-01-09T18:17:46.1012650Z shell: /bin/bash -l {0}
2025-01-09T18:17:46.1012870Z env:
2025-01-09T18:17:46.1013030Z   CACHE_NUMBER: 0
2025-01-09T18:17:46.1013520Z   PYTEST_FLAGS: --tardis-regression-data=/Users/runner/work/tardis/tardis/tardis-regression-data --cov=tardis --cov-report=xml --cov-report=html --cov-append
2025-01-09T18:17:46.1014020Z   CODECOV_TOKEN: 
2025-01-09T18:17:46.1014200Z   MAMBA_ROOT_PREFIX: /Users/runner/micromamba
2025-01-09T18:17:46.1014450Z   MAMBA_EXE: /Users/runner/micromamba-bin/micromamba
2025-01-09T18:17:46.1014750Z   CONDARC: /Users/runner/work/_temp/setup-micromamba/.condarc
2025-01-09T18:17:46.1015080Z ##[endgroup]
2025-01-09T18:17:57.0731480Z ============================= test session starts ==============================
2025-01-09T18:17:57.0732140Z platform darwin -- Python 3.12.4, pytest-8.2.2, pluggy-1.5.0
2025-01-09T18:17:57.0732540Z rootdir: /Users/runner/work/tardis/tardis
2025-01-09T18:17:57.0732760Z configfile: pyproject.toml
2025-01-09T18:17:57.0733090Z plugins: cov-5.0.0, html-4.1.1, metadata-3.1.1, doctestplus-1.2.1, anyio-4.4.0
2025-01-09T18:17:57.0733420Z collected 1796 items / 2 deselected / 1794 selected
2025-01-09T18:17:57.0733600Z 
2025-01-09T18:17:59.8406060Z tardis/energy_input/tests/test_energy_source.py ..xxx                    [  0%]
2025-01-09T18:18:01.2309510Z tardis/energy_input/tests/test_gamma_ray_channel.py ...........          [  0%]
2025-01-09T18:18:02.2316700Z tardis/energy_input/tests/test_gamma_ray_grid.py xx.                     [  1%]
2025-01-09T18:18:03.1651630Z tardis/energy_input/tests/test_gamma_ray_interactions.py xx....          [  1%]
2025-01-09T18:18:03.1707860Z tardis/energy_input/tests/test_gamma_ray_packet_source.py sssssssss      [  1%]
2025-01-09T18:18:04.0589300Z tardis/energy_input/tests/test_util.py .....xxxx.....                    [  2%]
2025-01-09T18:18:04.3031610Z tardis/grid/tests/test_grid.py .                                         [  2%]
2025-01-09T18:18:04.3040310Z tardis/gui/tests/test_gui.py s                                           [  2%]
2025-01-09T18:18:06.8429540Z tardis/io/configuration/tests/test_config_reader.py ...........          [  3%]
2025-01-09T18:18:06.8529960Z tardis/io/configuration/tests/test_configuration_namespace.py .........  [  3%]
2025-01-09T18:18:06.8711060Z tardis/io/logger/tests/test_logging.py ssssssssssssssssssssssssssss      [  5%]
2025-01-09T18:18:33.1048150Z tardis/io/model/readers/tests/test_arepo_parser.py ..                    [  5%]
2025-01-09T18:18:33.1224470Z tardis/io/model/readers/tests/test_ascii_readers.py ...                  [  5%]
2025-01-09T18:18:33.1388460Z tardis/io/model/readers/tests/test_cmfgen_reader.py ..                   [  5%]
2025-01-09T18:18:33.1642670Z tardis/io/model/readers/tests/test_csvy_reader.py ....                   [  6%]
2025-01-09T18:18:33.1828880Z tardis/io/model/readers/tests/test_stella_reader.py ..                   [  6%]
2025-01-09T18:18:33.3922790Z tardis/io/tests/test_HDFWriter.py ...............                        [  7%]
2025-01-09T18:18:33.8459380Z tardis/io/tests/test_atomic.py .....                                     [  7%]
2025-01-09T18:18:33.8651330Z tardis/io/tests/test_decay.py ..                                         [  7%]
2025-01-09T18:18:34.0105830Z tardis/io/tests/test_model_reader.py ......                              [  7%]
2025-01-09T18:18:34.0145150Z tardis/model/geometry/tests/test_radial1d.py ..                          [  7%]
2025-01-09T18:18:41.5947120Z tardis/model/tests/test_base.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 10%]
2025-01-09T18:18:43.3265540Z EEEEEEEEEEEE                                                             [ 10%]
2025-01-09T18:18:45.6224220Z tardis/model/tests/test_csvy_model.py .........                          [ 11%]
2025-01-09T18:18:45.9082320Z tardis/model/tests/test_density.py EE                                    [ 11%]
2025-01-09T18:18:47.0021350Z tardis/opacities/tests/test_opacity_solver.py EEEEE                      [ 11%]
2025-01-09T18:18:48.2325430Z tardis/opacities/tests/test_opacity_state_numba.py EEEEE                 [ 11%]
2025-01-09T18:18:49.1094410Z tardis/opacities/tests/test_tau_sobolev.py EE                            [ 12%]
2025-01-09T18:18:51.0434460Z tardis/plasma/equilibrium/tests/test_collisional_transitions.py ...      [ 12%]
2025-01-09T18:19:27.7861620Z tardis/plasma/equilibrium/tests/test_level_populations.py ....           [ 12%]
2025-01-09T18:19:36.2074030Z tardis/plasma/equilibrium/tests/test_rate_matrix.py .                    [ 12%]
2025-01-09T18:19:37.2629890Z tardis/plasma/tests/test_complete_plasmas.py .....................s..... [ 13%]
2025-01-09T18:19:39.1750790Z s....ssssss............s............ss.....s....ssssss............s..... [ 18%]
2025-01-09T18:19:40.4167690Z .......ss.....s....ssssss............s............ss.....s....ssssss.... [ 22%]
2025-01-09T18:19:42.5286470Z ........s............ss.....s........ss............s............ss.....s [ 26%]
2025-01-09T18:19:44.7136820Z ........ss............s............ss.....s....ssssss............s...... [ 30%]
2025-01-09T18:19:45.2118040Z ......ss.....s....ssssss............s............ss.....s.ss.ssssss..... [ 34%]
2025-01-09T18:19:47.1930180Z .......s............ss.....s....ssssss............s............ss.....s. [ 38%]
2025-01-09T18:19:49.0729710Z ...ssssss............s............ss.....s....ssssss............s....... [ 42%]
2025-01-09T18:19:51.0317300Z .....ss.....s....ssssss............s............s...........ssssss...... [ 46%]
2025-01-09T18:19:52.3563510Z ......s............s...........ssssss............s............s......... [ 50%]
2025-01-09T18:19:54.3654930Z ..ssssss............s............ss.....s....ssssss............s........ [ 54%]
2025-01-09T18:19:56.6226170Z ....ss.....s....ssssss..........................s.....s....ssss......... [ 58%]
2025-01-09T18:19:56.8669370Z ...................s.....s....ssss.......                                [ 60%]
2025-01-09T18:20:03.5140340Z tardis/plasma/tests/test_hdf_plasma.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 62%]
2025-01-09T18:20:04.9872960Z EEEEEE                                                                   [ 62%]
2025-01-09T18:20:05.2520130Z tardis/plasma/tests/test_nlte_excitation.py ...                          [ 62%]
2025-01-09T18:21:42.9017530Z tardis/plasma/tests/test_nlte_solver.py .....X                           [ 63%]
2025-01-09T18:21:42.9050560Z tardis/plasma/tests/test_plasma_continuum.py .                           [ 63%]
2025-01-09T18:21:59.2143650Z tardis/plasma/tests/test_plasma_vboundary.py .............               [ 63%]
2025-01-09T18:22:09.3305050Z tardis/plasma/tests/test_tardis_model_density_config.py ...              [ 64%]
2025-01-09T18:22:09.9814130Z tardis/simulation/tests/test_convergence.py .....                        [ 64%]
2025-01-09T18:22:15.0390910Z tardis/simulation/tests/test_simulation.py EEEEEEEEEE...                 [ 65%]
2025-01-09T18:22:15.0507910Z tardis/spectrum/tests/test_cuda_formal_integral.py sssssssssssssssssssss [ 66%]
2025-01-09T18:22:15.3249300Z ssss...ssssssssssssssssssssss                                            [ 67%]
2025-01-09T18:22:15.3291160Z tardis/spectrum/tests/test_luminosity.py ....                            [ 68%]
2025-01-09T18:22:16.0924350Z tardis/spectrum/tests/test_numba_formal_integral.py .............FFFFFFF [ 69%]
2025-01-09T18:22:16.2077190Z FFFFFFF...                                                               [ 69%]
2025-01-09T18:22:16.3215360Z tardis/spectrum/tests/test_spectrum.py ................................. [ 71%]
2025-01-09T18:22:16.3423480Z .........                                                                [ 72%]
2025-01-09T18:22:18.4773360Z tardis/spectrum/tests/test_spectrum_solver.py EEEE                       [ 72%]
2025-01-09T18:22:23.5556580Z tardis/tests/test_tardis_full.py FEEE                                    [ 72%]
2025-01-09T18:22:34.0454880Z tardis/tests/test_tardis_full_formal_integral.py EEEEEEEEEEEEEEEE        [ 73%]
2025-01-09T18:22:34.1232780Z tardis/tests/test_util.py .............................................  [ 75%]
2025-01-09T18:22:37.3258540Z tardis/transport/montecarlo/tests/test_base.py xEEEEEEEEEEEEEEEEEEEEE    [ 77%]
2025-01-09T18:22:39.2822030Z tardis/transport/montecarlo/tests/test_interaction.py EEEEEEE            [ 77%]
2025-01-09T18:22:39.4633060Z tardis/transport/montecarlo/tests/test_macro_atom.py EEEE                [ 77%]
2025-01-09T18:22:39.4764640Z tardis/transport/montecarlo/tests/test_montecarlo.py sssssssssssssssssss [ 78%]
2025-01-09T18:22:39.5130140Z sssssssssssssssssssssssssssssssssssssssssssss                            [ 81%]
2025-01-09T18:22:44.5323760Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py xFF       [ 81%]
2025-01-09T18:22:44.5415870Z tardis/transport/montecarlo/tests/test_nonhomologous.py ...              [ 81%]
2025-01-09T18:22:44.9076070Z tardis/transport/montecarlo/tests/test_numba_interface.py EEEEExE        [ 82%]
2025-01-09T18:22:45.2818130Z tardis/transport/montecarlo/tests/test_opacities.py ...............      [ 82%]
2025-01-09T18:22:47.9490290Z tardis/transport/montecarlo/tests/test_packet.py .................xxxxxX [ 84%]
2025-01-09T18:22:48.7821210Z XXEEEEEEEEE                                                              [ 84%]
2025-01-09T18:22:48.8145580Z tardis/transport/montecarlo/tests/test_packet_source.py ........         [ 85%]
2025-01-09T18:22:49.0750490Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py . [ 85%]
2025-01-09T18:23:17.4958560Z .FFFF                                                                    [ 85%]
2025-01-09T18:23:23.2904550Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py .FFFEE         [ 85%]
2025-01-09T18:23:23.4165290Z tardis/transport/montecarlo/tests/test_single_packet_loop.py xxx         [ 86%]
2025-01-09T18:23:25.1127670Z tardis/transport/montecarlo/tests/test_tracker_utils.py ..               [ 86%]
2025-01-09T18:23:25.6296340Z tardis/transport/montecarlo/tests/test_vpacket.py EExE                   [ 86%]
2025-01-09T18:23:25.6476770Z tardis/transport/montecarlo/tests/test_weighted_packet_source.py ....    [ 86%]
2025-01-09T18:23:27.5356220Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py F [ 86%]
2025-01-09T18:23:27.5451870Z                                                                          [ 86%]
2025-01-09T18:23:28.2029260Z tardis/transport/tests/test_doppler_factor.py ..................         [ 87%]
2025-01-09T18:23:29.8854010Z tardis/visualization/tools/tests/test_convergence_plot.py .............. [ 88%]
2025-01-09T18:23:31.6108550Z ......                                                                   [ 88%]
2025-01-09T18:23:34.6929010Z tardis/visualization/tools/tests/test_liv_plot.py EEEEEEEEEEEEEEEEEEEEEE [ 90%]
2025-01-09T18:23:36.4301460Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                            [ 91%]
2025-01-09T18:23:37.7668610Z tardis/visualization/tools/tests/test_rpacket_plot.py EEEEEEEEEEEEEEEEEE [ 92%]
2025-01-09T18:23:38.1551530Z EEEE                                                                     [ 92%]
2025-01-09T18:23:40.5935630Z tardis/visualization/tools/tests/test_sdec_plot.py EEEEEEEEEEEEEEEEEEEEE [ 94%]
2025-01-09T18:23:42.6928700Z EEEEEEEEEEEEEEEEEEEEEEEEEEEEEE                                           [ 95%]
2025-01-09T18:23:43.0582210Z tardis/visualization/widgets/tests/test_custom_abundance.py ........ss.. [ 96%]
2025-01-09T18:23:43.1031790Z ....                                                                     [ 96%]
2025-01-09T18:23:48.2577620Z tardis/visualization/widgets/tests/test_line_info.py EEEEEEEEEEEEEEEEEEE [ 97%]
2025-01-09T18:23:54.2279720Z EEEEEEEEEEEEEEEEEE                                                       [ 98%]
2025-01-09T18:24:00.8652410Z tardis/visualization/widgets/tests/test_shell_info.py EEEEEEEEEEEEEEEEEE [ 99%]
2025-01-09T18:24:10.5287880Z EEEEEE                                                                   [100%]
2025-01-09T18:24:10.5344770Z 
2025-01-09T18:24:10.5345330Z ==================================== ERRORS ====================================
2025-01-09T18:24:10.5346300Z _________ ERROR at setup of TestModelFromPaper1Config.test_abundances __________
2025-01-09T18:24:10.5346820Z 
2025-01-09T18:24:10.5348290Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5349860Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5350480Z 
2025-01-09T18:24:10.5350780Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5351270Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5351930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5352420Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5353060Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5353470Z >       sim.run_final()
2025-01-09T18:24:10.5353760Z 
2025-01-09T18:24:10.5354020Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5354580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5356170Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5372430Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5381980Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5393330Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5394380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5395880Z 
2025-01-09T18:24:10.5396340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5397060Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5397880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5399350Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5400490Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5401020Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5401370Z 
2025-01-09T18:24:10.5401680Z     def initialize_transport_state(
2025-01-09T18:24:10.5407390Z         self,
2025-01-09T18:24:10.5408990Z         simulation_state,
2025-01-09T18:24:10.5409810Z         opacity_state,
2025-01-09T18:24:10.5410740Z         macro_atom_state,
2025-01-09T18:24:10.5411590Z         plasma,
2025-01-09T18:24:10.5412460Z         no_of_packets,
2025-01-09T18:24:10.5413350Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5414110Z         iteration=0,
2025-01-09T18:24:10.5415080Z     ):
2025-01-09T18:24:10.5421950Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5422700Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5422950Z         else:
2025-01-09T18:24:10.5423280Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5423510Z     
2025-01-09T18:24:10.5423830Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5424130Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5424620Z         )
2025-01-09T18:24:10.5424800Z     
2025-01-09T18:24:10.5425070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5425400Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5426450Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5427730Z 
2025-01-09T18:24:10.5427830Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5428220Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.5430880Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.5431700Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.5432280Z ---------------------------- Captured stderr setup -----------------------------
2025-01-09T18:24:10.5432750Z OMP: Info #276: omp_set_nested routine deprecated, please use omp_set_max_active_levels instead.
2025-01-09T18:24:10.5433220Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.5433850Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.5434550Z _________ ERROR at setup of TestModelFromPaper1Config.test_velocities __________
2025-01-09T18:24:10.5434770Z 
2025-01-09T18:24:10.5435580Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5436820Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5437280Z 
2025-01-09T18:24:10.5437620Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5438060Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5438580Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5438910Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5439390Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5439690Z >       sim.run_final()
2025-01-09T18:24:10.5439840Z 
2025-01-09T18:24:10.5439940Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5440180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5440680Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5441020Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5441310Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5441690Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5442020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5442220Z 
2025-01-09T18:24:10.5442480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5442960Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5443480Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5444230Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5444790Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5445370Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5445600Z 
2025-01-09T18:24:10.5445710Z     def initialize_transport_state(
2025-01-09T18:24:10.5445970Z         self,
2025-01-09T18:24:10.5446200Z         simulation_state,
2025-01-09T18:24:10.5446540Z         opacity_state,
2025-01-09T18:24:10.5446920Z         macro_atom_state,
2025-01-09T18:24:10.5447130Z         plasma,
2025-01-09T18:24:10.5447430Z         no_of_packets,
2025-01-09T18:24:10.5447710Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5448100Z         iteration=0,
2025-01-09T18:24:10.5448800Z     ):
2025-01-09T18:24:10.5449140Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5449460Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5449830Z         else:
2025-01-09T18:24:10.5450070Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5450420Z     
2025-01-09T18:24:10.5450690Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5451110Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5451480Z         )
2025-01-09T18:24:10.5451720Z     
2025-01-09T18:24:10.5452030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5452430Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5453100Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5453610Z 
2025-01-09T18:24:10.5453780Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5454140Z __________ ERROR at setup of TestModelFromPaper1Config.test_densities __________
2025-01-09T18:24:10.5454410Z 
2025-01-09T18:24:10.5454950Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5456050Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5456440Z 
2025-01-09T18:24:10.5456620Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5456920Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5457270Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5457600Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5457970Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5458210Z >       sim.run_final()
2025-01-09T18:24:10.5458350Z 
2025-01-09T18:24:10.5458460Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5458710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5459050Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5459580Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5460020Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5460340Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5460730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5460940Z 
2025-01-09T18:24:10.5461190Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5461670Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5462180Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5462770Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5463450Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5463910Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5464200Z 
2025-01-09T18:24:10.5464330Z     def initialize_transport_state(
2025-01-09T18:24:10.5464550Z         self,
2025-01-09T18:24:10.5464770Z         simulation_state,
2025-01-09T18:24:10.5464990Z         opacity_state,
2025-01-09T18:24:10.5465250Z         macro_atom_state,
2025-01-09T18:24:10.5465470Z         plasma,
2025-01-09T18:24:10.5465710Z         no_of_packets,
2025-01-09T18:24:10.5465910Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5466170Z         iteration=0,
2025-01-09T18:24:10.5466350Z     ):
2025-01-09T18:24:10.5466660Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5467140Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5467420Z         else:
2025-01-09T18:24:10.5467600Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5467880Z     
2025-01-09T18:24:10.5468110Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5468450Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5468700Z         )
2025-01-09T18:24:10.5468900Z     
2025-01-09T18:24:10.5469150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5469500Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5470070Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5470680Z 
2025-01-09T18:24:10.5470900Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5472110Z _______ ERROR at setup of TestModelFromPaper1Config.test_time_explosion ________
2025-01-09T18:24:10.5472380Z 
2025-01-09T18:24:10.5472930Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5473810Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5474200Z 
2025-01-09T18:24:10.5474310Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5474620Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5475000Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5475320Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5475690Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5475930Z >       sim.run_final()
2025-01-09T18:24:10.5476070Z 
2025-01-09T18:24:10.5476190Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5476470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5476740Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5477080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5477530Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5477880Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5478210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5478510Z 
2025-01-09T18:24:10.5478840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5479380Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5479910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5480470Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5480950Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5481580Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5530930Z 
2025-01-09T18:24:10.5531110Z     def initialize_transport_state(
2025-01-09T18:24:10.5531330Z         self,
2025-01-09T18:24:10.5531520Z         simulation_state,
2025-01-09T18:24:10.5531760Z         opacity_state,
2025-01-09T18:24:10.5531990Z         macro_atom_state,
2025-01-09T18:24:10.5532230Z         plasma,
2025-01-09T18:24:10.5532460Z         no_of_packets,
2025-01-09T18:24:10.5533290Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5533550Z         iteration=0,
2025-01-09T18:24:10.5533740Z     ):
2025-01-09T18:24:10.5533950Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5534260Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5535000Z         else:
2025-01-09T18:24:10.5535190Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5535370Z     
2025-01-09T18:24:10.5535640Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5535920Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5536120Z         )
2025-01-09T18:24:10.5536260Z     
2025-01-09T18:24:10.5536460Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5536770Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5537380Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5537890Z 
2025-01-09T18:24:10.5538030Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5538420Z _________ ERROR at setup of TestModelFromASCIIDensity.test_velocities __________
2025-01-09T18:24:10.5538660Z 
2025-01-09T18:24:10.5539230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5540160Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5540510Z 
2025-01-09T18:24:10.5540580Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5540850Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5541150Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5541440Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5541720Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5541900Z >       sim.run_final()
2025-01-09T18:24:10.5542000Z 
2025-01-09T18:24:10.5542050Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5542260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5542490Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5542740Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5542990Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5543250Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5543710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5543870Z 
2025-01-09T18:24:10.5544080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5544510Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5544910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5545370Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5545790Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5546090Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5546270Z 
2025-01-09T18:24:10.5546340Z     def initialize_transport_state(
2025-01-09T18:24:10.5546510Z         self,
2025-01-09T18:24:10.5546650Z         simulation_state,
2025-01-09T18:24:10.5546810Z         opacity_state,
2025-01-09T18:24:10.5546960Z         macro_atom_state,
2025-01-09T18:24:10.5547170Z         plasma,
2025-01-09T18:24:10.5547310Z         no_of_packets,
2025-01-09T18:24:10.5547460Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5547630Z         iteration=0,
2025-01-09T18:24:10.5547760Z     ):
2025-01-09T18:24:10.5547940Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5548200Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5548390Z         else:
2025-01-09T18:24:10.5548520Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5548910Z     
2025-01-09T18:24:10.5549090Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5549330Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5549530Z         )
2025-01-09T18:24:10.5549660Z     
2025-01-09T18:24:10.5549840Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5550090Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5550620Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5551060Z 
2025-01-09T18:24:10.5551400Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5551750Z _________ ERROR at setup of TestModelFromASCIIDensity.test_abundances __________
2025-01-09T18:24:10.5552090Z 
2025-01-09T18:24:10.5552620Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5553580Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5553920Z 
2025-01-09T18:24:10.5554000Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5554260Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5554530Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5554810Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5555160Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5555370Z >       sim.run_final()
2025-01-09T18:24:10.5555470Z 
2025-01-09T18:24:10.5555530Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5555730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5555970Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5556230Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5556490Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5556740Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5557020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5557350Z 
2025-01-09T18:24:10.5557560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5558080Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5558480Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5558940Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5559350Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5559660Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5559840Z 
2025-01-09T18:24:10.5559910Z     def initialize_transport_state(
2025-01-09T18:24:10.5560480Z         self,
2025-01-09T18:24:10.5560620Z         simulation_state,
2025-01-09T18:24:10.5560780Z         opacity_state,
2025-01-09T18:24:10.5560920Z         macro_atom_state,
2025-01-09T18:24:10.5561080Z         plasma,
2025-01-09T18:24:10.5561210Z         no_of_packets,
2025-01-09T18:24:10.5561360Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5561530Z         iteration=0,
2025-01-09T18:24:10.5561670Z     ):
2025-01-09T18:24:10.5561830Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5562160Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5562340Z         else:
2025-01-09T18:24:10.5562480Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5562630Z     
2025-01-09T18:24:10.5562810Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5563410Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5563590Z         )
2025-01-09T18:24:10.5563700Z     
2025-01-09T18:24:10.5563870Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5564180Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5564710Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5565160Z 
2025-01-09T18:24:10.5565260Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5565670Z _________ ERROR at setup of TestModelFromArtisDensity.test_velocities __________
2025-01-09T18:24:10.5565890Z 
2025-01-09T18:24:10.5566410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5567290Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5567630Z 
2025-01-09T18:24:10.5567700Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5567950Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5568220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5568500Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5568780Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5568960Z >       sim.run_final()
2025-01-09T18:24:10.5569060Z 
2025-01-09T18:24:10.5569120Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5569310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5569540Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5569810Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5571330Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5571610Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5571890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5572060Z 
2025-01-09T18:24:10.5572660Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5573110Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5573580Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5574060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5574470Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5574780Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5575020Z 
2025-01-09T18:24:10.5575090Z     def initialize_transport_state(
2025-01-09T18:24:10.5575270Z         self,
2025-01-09T18:24:10.5575400Z         simulation_state,
2025-01-09T18:24:10.5575560Z         opacity_state,
2025-01-09T18:24:10.5575720Z         macro_atom_state,
2025-01-09T18:24:10.5575870Z         plasma,
2025-01-09T18:24:10.5576010Z         no_of_packets,
2025-01-09T18:24:10.5576160Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5576330Z         iteration=0,
2025-01-09T18:24:10.5576460Z     ):
2025-01-09T18:24:10.5576620Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5576860Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5577050Z         else:
2025-01-09T18:24:10.5577180Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5577340Z     
2025-01-09T18:24:10.5577510Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5577760Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5577950Z         )
2025-01-09T18:24:10.5581570Z     
2025-01-09T18:24:10.5581740Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5581990Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5582530Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5582980Z 
2025-01-09T18:24:10.5583080Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5583390Z _________ ERROR at setup of TestModelFromArtisDensity.test_abundances __________
2025-01-09T18:24:10.5583610Z 
2025-01-09T18:24:10.5584110Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5584960Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5585310Z 
2025-01-09T18:24:10.5585370Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5585640Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5585900Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5586190Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5586480Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5586660Z >       sim.run_final()
2025-01-09T18:24:10.5586760Z 
2025-01-09T18:24:10.5586820Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5587010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5587250Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5587500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5587750Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5588020Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5588290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5588450Z 
2025-01-09T18:24:10.5588660Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5589230Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5589630Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5590090Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5590490Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5590810Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5591000Z 
2025-01-09T18:24:10.5591070Z     def initialize_transport_state(
2025-01-09T18:24:10.5591240Z         self,
2025-01-09T18:24:10.5591380Z         simulation_state,
2025-01-09T18:24:10.5591530Z         opacity_state,
2025-01-09T18:24:10.5591680Z         macro_atom_state,
2025-01-09T18:24:10.5591830Z         plasma,
2025-01-09T18:24:10.5591960Z         no_of_packets,
2025-01-09T18:24:10.5592110Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5592270Z         iteration=0,
2025-01-09T18:24:10.5592410Z     ):
2025-01-09T18:24:10.5592580Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5592830Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5593020Z         else:
2025-01-09T18:24:10.5593150Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5593310Z     
2025-01-09T18:24:10.5593470Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5593720Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5593910Z         )
2025-01-09T18:24:10.5594020Z     
2025-01-09T18:24:10.5594320Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5594900Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5595510Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5596370Z 
2025-01-09T18:24:10.5596520Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5596990Z ____ ERROR at setup of TestModelFromArtisDensityAbundances.test_velocities _____
2025-01-09T18:24:10.5597240Z 
2025-01-09T18:24:10.5604050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5606800Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5608010Z 
2025-01-09T18:24:10.5608210Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5609150Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5610130Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5653020Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5654320Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5654840Z >       sim.run_final()
2025-01-09T18:24:10.5655120Z 
2025-01-09T18:24:10.5655300Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5655840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5656490Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5657170Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5657980Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5658680Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5659450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5659880Z 
2025-01-09T18:24:10.5660440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5661600Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5663250Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5664470Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5665560Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5666360Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5666850Z 
2025-01-09T18:24:10.5667030Z     def initialize_transport_state(
2025-01-09T18:24:10.5667520Z         self,
2025-01-09T18:24:10.5667900Z         simulation_state,
2025-01-09T18:24:10.5668340Z         opacity_state,
2025-01-09T18:24:10.5668770Z         macro_atom_state,
2025-01-09T18:24:10.5669190Z         plasma,
2025-01-09T18:24:10.5669570Z         no_of_packets,
2025-01-09T18:24:10.5670000Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5670460Z         iteration=0,
2025-01-09T18:24:10.5670850Z     ):
2025-01-09T18:24:10.5671300Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5671950Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5677960Z         else:
2025-01-09T18:24:10.5678400Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5678980Z     
2025-01-09T18:24:10.5679470Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5680170Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5680700Z         )
2025-01-09T18:24:10.5681040Z     
2025-01-09T18:24:10.5681510Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5682180Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5684320Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5685560Z 
2025-01-09T18:24:10.5685820Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5686710Z ____ ERROR at setup of TestModelFromArtisDensityAbundances.test_abundances _____
2025-01-09T18:24:10.5687350Z 
2025-01-09T18:24:10.5688750Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5691390Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5692340Z 
2025-01-09T18:24:10.5692530Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5693220Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5694220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5695040Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5695850Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5696370Z >       sim.run_final()
2025-01-09T18:24:10.5696680Z 
2025-01-09T18:24:10.5696870Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5697430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5698140Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5698850Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5699890Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5700630Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5701660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5702150Z 
2025-01-09T18:24:10.5702710Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5704190Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5704830Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5707540Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5708100Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5708420Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5708610Z 
2025-01-09T18:24:10.5708690Z     def initialize_transport_state(
2025-01-09T18:24:10.5708880Z         self,
2025-01-09T18:24:10.5709020Z         simulation_state,
2025-01-09T18:24:10.5709190Z         opacity_state,
2025-01-09T18:24:10.5709340Z         macro_atom_state,
2025-01-09T18:24:10.5709500Z         plasma,
2025-01-09T18:24:10.5709650Z         no_of_packets,
2025-01-09T18:24:10.5709810Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5710010Z         iteration=0,
2025-01-09T18:24:10.5710160Z     ):
2025-01-09T18:24:10.5710330Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5710600Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5710800Z         else:
2025-01-09T18:24:10.5710940Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5711430Z     
2025-01-09T18:24:10.5711830Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5712360Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5712570Z         )
2025-01-09T18:24:10.5712690Z     
2025-01-09T18:24:10.5712930Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5713320Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5735710Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5737930Z 
2025-01-09T18:24:10.5738050Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5738400Z _ ERROR at setup of TestModelFromArtisDensityAbundancesVSlice.test_velocities __
2025-01-09T18:24:10.5738680Z 
2025-01-09T18:24:10.5739260Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5748050Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5748420Z 
2025-01-09T18:24:10.5748500Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5748770Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5749060Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5749360Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5749650Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5749840Z >       sim.run_final()
2025-01-09T18:24:10.5749940Z 
2025-01-09T18:24:10.5750010Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5752140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5752570Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5752880Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5753210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5753490Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5753910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5754110Z 
2025-01-09T18:24:10.5754340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5754850Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5755320Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5755800Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5759990Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5760360Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5760670Z 
2025-01-09T18:24:10.5760740Z     def initialize_transport_state(
2025-01-09T18:24:10.5760970Z         self,
2025-01-09T18:24:10.5761180Z         simulation_state,
2025-01-09T18:24:10.5762460Z         opacity_state,
2025-01-09T18:24:10.5762720Z         macro_atom_state,
2025-01-09T18:24:10.5762880Z         plasma,
2025-01-09T18:24:10.5763020Z         no_of_packets,
2025-01-09T18:24:10.5763240Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5763490Z         iteration=0,
2025-01-09T18:24:10.5763700Z     ):
2025-01-09T18:24:10.5763890Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5764150Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5764350Z         else:
2025-01-09T18:24:10.5764490Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5765010Z     
2025-01-09T18:24:10.5765210Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5765480Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5765680Z         )
2025-01-09T18:24:10.5765800Z     
2025-01-09T18:24:10.5765970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5766260Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5766920Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5770890Z 
2025-01-09T18:24:10.5770990Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5771450Z _ ERROR at setup of TestModelFromArtisDensityAbundancesVSlice.test_abundances __
2025-01-09T18:24:10.5771710Z 
2025-01-09T18:24:10.5772230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5773620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5774080Z 
2025-01-09T18:24:10.5774160Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5774420Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5774700Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5774990Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5775380Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5775580Z >       sim.run_final()
2025-01-09T18:24:10.5775680Z 
2025-01-09T18:24:10.5775750Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5776680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5777030Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5777310Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5778520Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5779570Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5780420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5780600Z 
2025-01-09T18:24:10.5780820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5781290Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5782460Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5783090Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5783520Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5783970Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5784160Z 
2025-01-09T18:24:10.5784260Z     def initialize_transport_state(
2025-01-09T18:24:10.5784460Z         self,
2025-01-09T18:24:10.5785270Z         simulation_state,
2025-01-09T18:24:10.5785460Z         opacity_state,
2025-01-09T18:24:10.5785630Z         macro_atom_state,
2025-01-09T18:24:10.5785780Z         plasma,
2025-01-09T18:24:10.5785930Z         no_of_packets,
2025-01-09T18:24:10.5786090Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5787540Z         iteration=0,
2025-01-09T18:24:10.5787690Z     ):
2025-01-09T18:24:10.5787870Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5788120Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5788320Z         else:
2025-01-09T18:24:10.5788470Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5789550Z     
2025-01-09T18:24:10.5789770Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5790060Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5790260Z         )
2025-01-09T18:24:10.5790490Z     
2025-01-09T18:24:10.5790670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5790940Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5791590Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5792070Z 
2025-01-09T18:24:10.5792170Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5792890Z __________ ERROR at setup of TestModelFromUniformDensity.test_density __________
2025-01-09T18:24:10.5793130Z 
2025-01-09T18:24:10.5793670Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5794600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5794980Z 
2025-01-09T18:24:10.5795070Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5795350Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5795630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5795940Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5796230Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5796520Z >       sim.run_final()
2025-01-09T18:24:10.5796630Z 
2025-01-09T18:24:10.5796690Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5796910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5797230Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5797550Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5797820Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5798110Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5799010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5800630Z 
2025-01-09T18:24:10.5800900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5801390Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5801810Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5802300Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5804040Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5805170Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5806100Z 
2025-01-09T18:24:10.5806180Z     def initialize_transport_state(
2025-01-09T18:24:10.5806370Z         self,
2025-01-09T18:24:10.5806510Z         simulation_state,
2025-01-09T18:24:10.5806670Z         opacity_state,
2025-01-09T18:24:10.5806830Z         macro_atom_state,
2025-01-09T18:24:10.5806990Z         plasma,
2025-01-09T18:24:10.5807130Z         no_of_packets,
2025-01-09T18:24:10.5808170Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5808460Z         iteration=0,
2025-01-09T18:24:10.5808810Z     ):
2025-01-09T18:24:10.5810030Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5810950Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5811370Z         else:
2025-01-09T18:24:10.5812550Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5813790Z     
2025-01-09T18:24:10.5814160Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5814840Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5815220Z         )
2025-01-09T18:24:10.5815470Z     
2025-01-09T18:24:10.5816150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5817440Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5818110Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5819670Z 
2025-01-09T18:24:10.5820230Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5821780Z ____ ERROR at setup of TestModelFromInitialTinner.test_initial_temperature _____
2025-01-09T18:24:10.5822440Z 
2025-01-09T18:24:10.5823500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5827650Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5828900Z 
2025-01-09T18:24:10.5828990Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5831020Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5832220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5832900Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5833880Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5835220Z >       sim.run_final()
2025-01-09T18:24:10.5835400Z 
2025-01-09T18:24:10.5835550Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5908600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5908910Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5909500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5909780Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5910090Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5910380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5910570Z 
2025-01-09T18:24:10.5911110Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5911630Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5912090Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5912670Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5913250Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5913670Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5913920Z 
2025-01-09T18:24:10.5913990Z     def initialize_transport_state(
2025-01-09T18:24:10.5914180Z         self,
2025-01-09T18:24:10.5915040Z         simulation_state,
2025-01-09T18:24:10.5915220Z         opacity_state,
2025-01-09T18:24:10.5915960Z         macro_atom_state,
2025-01-09T18:24:10.5916120Z         plasma,
2025-01-09T18:24:10.5916250Z         no_of_packets,
2025-01-09T18:24:10.5916430Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5916620Z         iteration=0,
2025-01-09T18:24:10.5916820Z     ):
2025-01-09T18:24:10.5917000Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5917280Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5917540Z         else:
2025-01-09T18:24:10.5917740Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5917920Z     
2025-01-09T18:24:10.5918110Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5918440Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5918650Z         )
2025-01-09T18:24:10.5918770Z     
2025-01-09T18:24:10.5918960Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5919280Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5920980Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5922150Z 
2025-01-09T18:24:10.5922260Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5922640Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_velocities _
2025-01-09T18:24:10.5922920Z 
2025-01-09T18:24:10.5923950Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5925970Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5926370Z 
2025-01-09T18:24:10.5926440Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5926730Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5927060Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5931160Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5931490Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5931690Z >       sim.run_final()
2025-01-09T18:24:10.5931800Z 
2025-01-09T18:24:10.5931860Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5932080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5932330Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5932600Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5932870Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5933140Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5933440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5933600Z 
2025-01-09T18:24:10.5934500Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5934960Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5935400Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5935880Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5936310Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5936630Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5936820Z 
2025-01-09T18:24:10.5936880Z     def initialize_transport_state(
2025-01-09T18:24:10.5937070Z         self,
2025-01-09T18:24:10.5937200Z         simulation_state,
2025-01-09T18:24:10.5937360Z         opacity_state,
2025-01-09T18:24:10.5939430Z         macro_atom_state,
2025-01-09T18:24:10.5939590Z         plasma,
2025-01-09T18:24:10.5939740Z         no_of_packets,
2025-01-09T18:24:10.5939890Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5940070Z         iteration=0,
2025-01-09T18:24:10.5940200Z     ):
2025-01-09T18:24:10.5940370Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5940630Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5940830Z         else:
2025-01-09T18:24:10.5941460Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5942100Z     
2025-01-09T18:24:10.5942610Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5943340Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5943900Z         )
2025-01-09T18:24:10.5944250Z     
2025-01-09T18:24:10.5944890Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5946940Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5947530Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5948000Z 
2025-01-09T18:24:10.5948110Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5951420Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_abundances _
2025-01-09T18:24:10.5951700Z 
2025-01-09T18:24:10.5952230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5953390Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5953740Z 
2025-01-09T18:24:10.5953810Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5954080Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5954370Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5954670Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5954950Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5955150Z >       sim.run_final()
2025-01-09T18:24:10.5955250Z 
2025-01-09T18:24:10.5955310Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5955520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5955790Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5956060Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5956320Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5956590Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5956880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5957050Z 
2025-01-09T18:24:10.5957270Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5958060Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5958860Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5962050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5962670Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5963000Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5963200Z 
2025-01-09T18:24:10.5963270Z     def initialize_transport_state(
2025-01-09T18:24:10.5963450Z         self,
2025-01-09T18:24:10.5963660Z         simulation_state,
2025-01-09T18:24:10.5963830Z         opacity_state,
2025-01-09T18:24:10.5963980Z         macro_atom_state,
2025-01-09T18:24:10.5964190Z         plasma,
2025-01-09T18:24:10.5964500Z         no_of_packets,
2025-01-09T18:24:10.5964660Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5964850Z         iteration=0,
2025-01-09T18:24:10.5964990Z     ):
2025-01-09T18:24:10.5965170Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5965550Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5965770Z         else:
2025-01-09T18:24:10.5966010Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5966180Z     
2025-01-09T18:24:10.5966370Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5966640Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5966900Z         )
2025-01-09T18:24:10.5967010Z     
2025-01-09T18:24:10.5967180Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5967440Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5968080Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5968570Z 
2025-01-09T18:24:10.5968680Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5969060Z _ ERROR at setup of TestModelFromArtisDensityAbundancesAllAscii.test_densities _
2025-01-09T18:24:10.5969390Z 
2025-01-09T18:24:10.5970500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5971770Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5972300Z 
2025-01-09T18:24:10.5972370Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5972760Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5973860Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5974230Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5974540Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5974810Z >       sim.run_final()
2025-01-09T18:24:10.5974930Z 
2025-01-09T18:24:10.5974990Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5975210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5975460Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5975860Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5976160Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5976440Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5976850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5977060Z 
2025-01-09T18:24:10.5977310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5977910Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5978370Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5978840Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5979330Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5979640Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5979820Z 
2025-01-09T18:24:10.5979890Z     def initialize_transport_state(
2025-01-09T18:24:10.5980070Z         self,
2025-01-09T18:24:10.5980210Z         simulation_state,
2025-01-09T18:24:10.5980370Z         opacity_state,
2025-01-09T18:24:10.5980580Z         macro_atom_state,
2025-01-09T18:24:10.5980740Z         plasma,
2025-01-09T18:24:10.5980870Z         no_of_packets,
2025-01-09T18:24:10.5981030Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.5981370Z         iteration=0,
2025-01-09T18:24:10.5981510Z     ):
2025-01-09T18:24:10.5981880Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.5982120Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.5982320Z         else:
2025-01-09T18:24:10.5982450Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.5982660Z     
2025-01-09T18:24:10.5982870Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.5983120Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.5983360Z         )
2025-01-09T18:24:10.5983630Z     
2025-01-09T18:24:10.5983800Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.5984230Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.5986190Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.5986680Z 
2025-01-09T18:24:10.5986780Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.5987130Z ________________ ERROR at setup of test_ascii_reader_power_law _________________
2025-01-09T18:24:10.5987810Z 
2025-01-09T18:24:10.5988350Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.5990350Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.5992370Z 
2025-01-09T18:24:10.5992490Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.5992770Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.5993070Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.5993410Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.5994200Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.5994400Z >       sim.run_final()
2025-01-09T18:24:10.5994510Z 
2025-01-09T18:24:10.5994570Z tardis/conftest.py:233: 
2025-01-09T18:24:10.5994790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5995190Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.5995510Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.5995780Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.5996040Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.5996350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.5996510Z 
2025-01-09T18:24:10.5996730Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.5997200Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.5997640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.5998100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.5998540Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.5998860Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.5999050Z 
2025-01-09T18:24:10.5999120Z     def initialize_transport_state(
2025-01-09T18:24:10.5999340Z         self,
2025-01-09T18:24:10.5999500Z         simulation_state,
2025-01-09T18:24:10.5999660Z         opacity_state,
2025-01-09T18:24:10.5999820Z         macro_atom_state,
2025-01-09T18:24:10.5999970Z         plasma,
2025-01-09T18:24:10.6000100Z         no_of_packets,
2025-01-09T18:24:10.6000250Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6000430Z         iteration=0,
2025-01-09T18:24:10.6000560Z     ):
2025-01-09T18:24:10.6000730Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6001130Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6001320Z         else:
2025-01-09T18:24:10.6002930Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6005110Z     
2025-01-09T18:24:10.6008270Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6008600Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6008800Z         )
2025-01-09T18:24:10.6009430Z     
2025-01-09T18:24:10.6009980Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6010870Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6012450Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6014140Z 
2025-01-09T18:24:10.6014490Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6015380Z _____________ ERROR at setup of test_ascii_reader_exponential_law ______________
2025-01-09T18:24:10.6015970Z 
2025-01-09T18:24:10.6017490Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6018740Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6019200Z 
2025-01-09T18:24:10.6019320Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6020150Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6020500Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6020830Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6021160Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6021390Z >       sim.run_final()
2025-01-09T18:24:10.6050670Z 
2025-01-09T18:24:10.6050830Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6051060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6051350Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6051620Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6051890Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6052180Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6052490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6052680Z 
2025-01-09T18:24:10.6053550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6055220Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6056430Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6058020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6058790Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6059130Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6059320Z 
2025-01-09T18:24:10.6059400Z     def initialize_transport_state(
2025-01-09T18:24:10.6059590Z         self,
2025-01-09T18:24:10.6059730Z         simulation_state,
2025-01-09T18:24:10.6059900Z         opacity_state,
2025-01-09T18:24:10.6060060Z         macro_atom_state,
2025-01-09T18:24:10.6060230Z         plasma,
2025-01-09T18:24:10.6060370Z         no_of_packets,
2025-01-09T18:24:10.6060540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6060710Z         iteration=0,
2025-01-09T18:24:10.6060860Z     ):
2025-01-09T18:24:10.6061040Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6061300Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6062310Z         else:
2025-01-09T18:24:10.6062470Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6062640Z     
2025-01-09T18:24:10.6062840Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6063110Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6063310Z         )
2025-01-09T18:24:10.6063430Z     
2025-01-09T18:24:10.6063600Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6063890Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6064680Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6065210Z 
2025-01-09T18:24:10.6065320Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6065670Z ______ ERROR at setup of test_radial_1D_geometry_volume[0-1.00977478e+45] ______
2025-01-09T18:24:10.6065890Z 
2025-01-09T18:24:10.6066430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6068430Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6069340Z 
2025-01-09T18:24:10.6069650Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6070460Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6072060Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6073400Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6075540Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6075750Z >       sim.run_final()
2025-01-09T18:24:10.6075860Z 
2025-01-09T18:24:10.6075930Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6076160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6076530Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6076870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6077130Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6077420Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6077730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6077890Z 
2025-01-09T18:24:10.6079140Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6080900Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6081340Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6081830Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6082350Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6082680Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6082990Z 
2025-01-09T18:24:10.6083060Z     def initialize_transport_state(
2025-01-09T18:24:10.6083780Z         self,
2025-01-09T18:24:10.6084240Z         simulation_state,
2025-01-09T18:24:10.6084720Z         opacity_state,
2025-01-09T18:24:10.6085280Z         macro_atom_state,
2025-01-09T18:24:10.6085730Z         plasma,
2025-01-09T18:24:10.6086140Z         no_of_packets,
2025-01-09T18:24:10.6086590Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6087110Z         iteration=0,
2025-01-09T18:24:10.6087510Z     ):
2025-01-09T18:24:10.6087990Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6088670Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6089220Z         else:
2025-01-09T18:24:10.6089880Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6090370Z     
2025-01-09T18:24:10.6090560Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6090840Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6091050Z         )
2025-01-09T18:24:10.6091160Z     
2025-01-09T18:24:10.6091340Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6091600Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6092160Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6093540Z 
2025-01-09T18:24:10.6093650Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6094030Z _____ ERROR at setup of test_radial_1D_geometry_volume[10-1.98154804e+45] ______
2025-01-09T18:24:10.6094280Z 
2025-01-09T18:24:10.6094830Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6096200Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6096610Z 
2025-01-09T18:24:10.6096690Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6096960Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6097240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6097540Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6098060Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6098260Z >       sim.run_final()
2025-01-09T18:24:10.6098360Z 
2025-01-09T18:24:10.6098430Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6098640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6098890Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6099170Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6100210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6101130Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6101940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6102630Z 
2025-01-09T18:24:10.6103270Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6103750Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6104360Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6104850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6105270Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6105590Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6105770Z 
2025-01-09T18:24:10.6105840Z     def initialize_transport_state(
2025-01-09T18:24:10.6106020Z         self,
2025-01-09T18:24:10.6106160Z         simulation_state,
2025-01-09T18:24:10.6106330Z         opacity_state,
2025-01-09T18:24:10.6106490Z         macro_atom_state,
2025-01-09T18:24:10.6106640Z         plasma,
2025-01-09T18:24:10.6106780Z         no_of_packets,
2025-01-09T18:24:10.6106940Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6107110Z         iteration=0,
2025-01-09T18:24:10.6107250Z     ):
2025-01-09T18:24:10.6107430Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6107670Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6107870Z         else:
2025-01-09T18:24:10.6108000Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6108160Z     
2025-01-09T18:24:10.6108340Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6108760Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6109360Z         )
2025-01-09T18:24:10.6109850Z     
2025-01-09T18:24:10.6110760Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6111890Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6114530Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6115050Z 
2025-01-09T18:24:10.6115150Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6115490Z _____ ERROR at setup of test_radial_1D_geometry_volume[19-3.13361319e+45] ______
2025-01-09T18:24:10.6115710Z 
2025-01-09T18:24:10.6116270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6117520Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6118350Z 
2025-01-09T18:24:10.6118440Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6118740Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6119030Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6119880Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6121130Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6123930Z >       sim.run_final()
2025-01-09T18:24:10.6124080Z 
2025-01-09T18:24:10.6124170Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6124410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6124790Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6125150Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6125520Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6125800Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6126090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6126270Z 
2025-01-09T18:24:10.6126490Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6128000Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6128600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6129250Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6129830Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6130210Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6130460Z 
2025-01-09T18:24:10.6130540Z     def initialize_transport_state(
2025-01-09T18:24:10.6131180Z         self,
2025-01-09T18:24:10.6131650Z         simulation_state,
2025-01-09T18:24:10.6132580Z         opacity_state,
2025-01-09T18:24:10.6133250Z         macro_atom_state,
2025-01-09T18:24:10.6133740Z         plasma,
2025-01-09T18:24:10.6134150Z         no_of_packets,
2025-01-09T18:24:10.6135540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6138320Z         iteration=0,
2025-01-09T18:24:10.6138480Z     ):
2025-01-09T18:24:10.6138650Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6138920Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6139120Z         else:
2025-01-09T18:24:10.6139290Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6139470Z     
2025-01-09T18:24:10.6139670Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6139940Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6148000Z         )
2025-01-09T18:24:10.6148130Z     
2025-01-09T18:24:10.6148330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6148610Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6149200Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6150920Z 
2025-01-09T18:24:10.6151230Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6152150Z _ ERROR at setup of test_composition_elemental_number_density[index0-539428198] _
2025-01-09T18:24:10.6152840Z 
2025-01-09T18:24:10.6154410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6155450Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6155830Z 
2025-01-09T18:24:10.6155900Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6156190Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6156490Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6156800Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6157090Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6157290Z >       sim.run_final()
2025-01-09T18:24:10.6157400Z 
2025-01-09T18:24:10.6160060Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6160270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6160520Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6160780Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6161050Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6161350Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6161650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6161820Z 
2025-01-09T18:24:10.6162040Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6162510Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6162940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6163450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6163890Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6164220Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6168390Z 
2025-01-09T18:24:10.6168470Z     def initialize_transport_state(
2025-01-09T18:24:10.6168680Z         self,
2025-01-09T18:24:10.6168820Z         simulation_state,
2025-01-09T18:24:10.6168980Z         opacity_state,
2025-01-09T18:24:10.6169040Z         macro_atom_state,
2025-01-09T18:24:10.6169090Z         plasma,
2025-01-09T18:24:10.6169140Z         no_of_packets,
2025-01-09T18:24:10.6169210Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6169260Z         iteration=0,
2025-01-09T18:24:10.6169320Z     ):
2025-01-09T18:24:10.6169420Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6169510Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6169550Z         else:
2025-01-09T18:24:10.6169620Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6169670Z     
2025-01-09T18:24:10.6169790Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6169870Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6169920Z         )
2025-01-09T18:24:10.6169970Z     
2025-01-09T18:24:10.6170080Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6177670Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6178110Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6178110Z 
2025-01-09T18:24:10.6178210Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6178390Z _ ERROR at setup of test_composition_elemental_number_density[index1-409675383] _
2025-01-09T18:24:10.6178390Z 
2025-01-09T18:24:10.6178930Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6179240Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6179240Z 
2025-01-09T18:24:10.6179320Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6179450Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6179540Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6179690Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6179760Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6179820Z >       sim.run_final()
2025-01-09T18:24:10.6179820Z 
2025-01-09T18:24:10.6179880Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6179990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6180180Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6180300Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6180380Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6180590Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6180690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6180690Z 
2025-01-09T18:24:10.6180910Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6181090Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6181280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6181510Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6181640Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6181770Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6181770Z 
2025-01-09T18:24:10.6181840Z     def initialize_transport_state(
2025-01-09T18:24:10.6181890Z         self,
2025-01-09T18:24:10.6181950Z         simulation_state,
2025-01-09T18:24:10.6182010Z         opacity_state,
2025-01-09T18:24:10.6182070Z         macro_atom_state,
2025-01-09T18:24:10.6182120Z         plasma,
2025-01-09T18:24:10.6182170Z         no_of_packets,
2025-01-09T18:24:10.6182240Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6182300Z         iteration=0,
2025-01-09T18:24:10.6182340Z     ):
2025-01-09T18:24:10.6182450Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6182530Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6209310Z         else:
2025-01-09T18:24:10.6209750Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6209840Z     
2025-01-09T18:24:10.6210010Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6210160Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6210240Z         )
2025-01-09T18:24:10.6210320Z     
2025-01-09T18:24:10.6210440Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6210540Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6211770Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6211780Z 
2025-01-09T18:24:10.6211940Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6212170Z _ ERROR at setup of test_composition_elemental_number_density[index2-314387928] _
2025-01-09T18:24:10.6212180Z 
2025-01-09T18:24:10.6212810Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6213120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6213130Z 
2025-01-09T18:24:10.6213200Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6213340Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6213420Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6213570Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6213640Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6213700Z >       sim.run_final()
2025-01-09T18:24:10.6213700Z 
2025-01-09T18:24:10.6213830Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6213950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6214060Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6214390Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6214470Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6214600Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6214700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6214710Z 
2025-01-09T18:24:10.6214920Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6215090Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6215270Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6215530Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6215680Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6215800Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6215810Z 
2025-01-09T18:24:10.6215870Z     def initialize_transport_state(
2025-01-09T18:24:10.6215920Z         self,
2025-01-09T18:24:10.6215990Z         simulation_state,
2025-01-09T18:24:10.6216040Z         opacity_state,
2025-01-09T18:24:10.6216090Z         macro_atom_state,
2025-01-09T18:24:10.6216150Z         plasma,
2025-01-09T18:24:10.6216200Z         no_of_packets,
2025-01-09T18:24:10.6216260Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6216320Z         iteration=0,
2025-01-09T18:24:10.6216370Z     ):
2025-01-09T18:24:10.6216480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6216570Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6216630Z         else:
2025-01-09T18:24:10.6216690Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6216730Z     
2025-01-09T18:24:10.6216870Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6216950Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6217000Z         )
2025-01-09T18:24:10.6217050Z     
2025-01-09T18:24:10.6217150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6217230Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6217630Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6217960Z 
2025-01-09T18:24:10.6218150Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6218310Z _ ERROR at setup of test_composition_elemental_number_density[index3-56066111] _
2025-01-09T18:24:10.6218320Z 
2025-01-09T18:24:10.6218880Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6219230Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6219230Z 
2025-01-09T18:24:10.6219300Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6220140Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6220230Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6220380Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6220450Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6220510Z >       sim.run_final()
2025-01-09T18:24:10.6220510Z 
2025-01-09T18:24:10.6220570Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6220680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6220760Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6220890Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6221090Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6221220Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6221320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6221320Z 
2025-01-09T18:24:10.6221640Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6221870Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6222050Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6222280Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6222400Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6222520Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6222530Z 
2025-01-09T18:24:10.6222590Z     def initialize_transport_state(
2025-01-09T18:24:10.6222650Z         self,
2025-01-09T18:24:10.6222700Z         simulation_state,
2025-01-09T18:24:10.6222760Z         opacity_state,
2025-01-09T18:24:10.6222810Z         macro_atom_state,
2025-01-09T18:24:10.6222860Z         plasma,
2025-01-09T18:24:10.6222920Z         no_of_packets,
2025-01-09T18:24:10.6222980Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6223040Z         iteration=0,
2025-01-09T18:24:10.6223090Z     ):
2025-01-09T18:24:10.6223210Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6223290Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6223340Z         else:
2025-01-09T18:24:10.6223390Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6223440Z     
2025-01-09T18:24:10.6223550Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6223630Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6223680Z         )
2025-01-09T18:24:10.6223720Z     
2025-01-09T18:24:10.6223830Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6223920Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6224450Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6224530Z 
2025-01-09T18:24:10.6224630Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6224790Z _ ERROR at setup of test_composition_elemental_number_density[index4-42580098] _
2025-01-09T18:24:10.6224790Z 
2025-01-09T18:24:10.6225400Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6226040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6226040Z 
2025-01-09T18:24:10.6226120Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6226350Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6226440Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6226650Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6226720Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6226780Z >       sim.run_final()
2025-01-09T18:24:10.6226780Z 
2025-01-09T18:24:10.6226850Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6226950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6227030Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6227250Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6227330Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6227520Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6227920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6227920Z 
2025-01-09T18:24:10.6228150Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6228320Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6228520Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6228750Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6228890Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6229040Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6229040Z 
2025-01-09T18:24:10.6229120Z     def initialize_transport_state(
2025-01-09T18:24:10.6229160Z         self,
2025-01-09T18:24:10.6229220Z         simulation_state,
2025-01-09T18:24:10.6229270Z         opacity_state,
2025-01-09T18:24:10.6229320Z         macro_atom_state,
2025-01-09T18:24:10.6229380Z         plasma,
2025-01-09T18:24:10.6229430Z         no_of_packets,
2025-01-09T18:24:10.6229500Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6229560Z         iteration=0,
2025-01-09T18:24:10.6229610Z     ):
2025-01-09T18:24:10.6229740Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6229950Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6230000Z         else:
2025-01-09T18:24:10.6230060Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6230110Z     
2025-01-09T18:24:10.6230290Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6230370Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6230430Z         )
2025-01-09T18:24:10.6230470Z     
2025-01-09T18:24:10.6230580Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6230670Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6231080Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6231080Z 
2025-01-09T18:24:10.6231190Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6233000Z _ ERROR at setup of test_composition_elemental_number_density[index5-32676283] _
2025-01-09T18:24:10.6233090Z 
2025-01-09T18:24:10.6235200Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6236540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6236570Z 
2025-01-09T18:24:10.6236790Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6237150Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6237360Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6237770Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6237970Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6238150Z >       sim.run_final()
2025-01-09T18:24:10.6238160Z 
2025-01-09T18:24:10.6238340Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6238630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6238870Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6239360Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6239670Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6240020Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6240280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6240760Z 
2025-01-09T18:24:10.6241370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6241830Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6242320Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6243650Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6243860Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6243990Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6243990Z 
2025-01-09T18:24:10.6244070Z     def initialize_transport_state(
2025-01-09T18:24:10.6244120Z         self,
2025-01-09T18:24:10.6244180Z         simulation_state,
2025-01-09T18:24:10.6244230Z         opacity_state,
2025-01-09T18:24:10.6244290Z         macro_atom_state,
2025-01-09T18:24:10.6244350Z         plasma,
2025-01-09T18:24:10.6244410Z         no_of_packets,
2025-01-09T18:24:10.6244470Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6244520Z         iteration=0,
2025-01-09T18:24:10.6244570Z     ):
2025-01-09T18:24:10.6244680Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6244770Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6244820Z         else:
2025-01-09T18:24:10.6245090Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6245170Z     
2025-01-09T18:24:10.6245290Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6245370Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6245420Z         )
2025-01-09T18:24:10.6245460Z     
2025-01-09T18:24:10.6245580Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6245650Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6246610Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6246620Z 
2025-01-09T18:24:10.6247150Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6247350Z _ ERROR at setup of test_composition_elemental_number_density[index6-841032262] _
2025-01-09T18:24:10.6247930Z 
2025-01-09T18:24:10.6248470Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6248770Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6248780Z 
2025-01-09T18:24:10.6248850Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6248980Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6249060Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6249210Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6249280Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6249330Z >       sim.run_final()
2025-01-09T18:24:10.6249340Z 
2025-01-09T18:24:10.6249400Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6249500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6249580Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6249700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6249780Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6249900Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6249990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6250000Z 
2025-01-09T18:24:10.6250220Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6250490Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6250670Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6251080Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6251230Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6251340Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6251350Z 
2025-01-09T18:24:10.6251410Z     def initialize_transport_state(
2025-01-09T18:24:10.6251460Z         self,
2025-01-09T18:24:10.6251510Z         simulation_state,
2025-01-09T18:24:10.6251570Z         opacity_state,
2025-01-09T18:24:10.6251620Z         macro_atom_state,
2025-01-09T18:24:10.6251670Z         plasma,
2025-01-09T18:24:10.6251720Z         no_of_packets,
2025-01-09T18:24:10.6251790Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6252860Z         iteration=0,
2025-01-09T18:24:10.6252940Z     ):
2025-01-09T18:24:10.6253060Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6253150Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6253200Z         else:
2025-01-09T18:24:10.6253260Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6253310Z     
2025-01-09T18:24:10.6253420Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6253500Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6253550Z         )
2025-01-09T18:24:10.6253600Z     
2025-01-09T18:24:10.6253710Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6253800Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6255160Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6255720Z 
2025-01-09T18:24:10.6255860Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6256030Z _ ERROR at setup of test_composition_elemental_number_density[index7-638732300] _
2025-01-09T18:24:10.6256030Z 
2025-01-09T18:24:10.6256560Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6257000Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6257010Z 
2025-01-09T18:24:10.6257080Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6257220Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6257290Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6257450Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6257520Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6257580Z >       sim.run_final()
2025-01-09T18:24:10.6257580Z 
2025-01-09T18:24:10.6257650Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6257740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6257820Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6257940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6258030Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6258160Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6258250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6258250Z 
2025-01-09T18:24:10.6258480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6258750Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6258930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6259160Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6259290Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6259400Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6259400Z 
2025-01-09T18:24:10.6259470Z     def initialize_transport_state(
2025-01-09T18:24:10.6259520Z         self,
2025-01-09T18:24:10.6259580Z         simulation_state,
2025-01-09T18:24:10.6259630Z         opacity_state,
2025-01-09T18:24:10.6259710Z         macro_atom_state,
2025-01-09T18:24:10.6259760Z         plasma,
2025-01-09T18:24:10.6259820Z         no_of_packets,
2025-01-09T18:24:10.6259880Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6259930Z         iteration=0,
2025-01-09T18:24:10.6259990Z     ):
2025-01-09T18:24:10.6260090Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6260170Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6260220Z         else:
2025-01-09T18:24:10.6260280Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6260320Z     
2025-01-09T18:24:10.6260680Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6261170Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6261340Z         )
2025-01-09T18:24:10.6261480Z     
2025-01-09T18:24:10.6262000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6262260Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6263370Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6263390Z 
2025-01-09T18:24:10.6263690Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6264150Z _ ERROR at setup of test_composition_elemental_number_density[index8-490167906] _
2025-01-09T18:24:10.6264160Z 
2025-01-09T18:24:10.6265620Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6267440Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6267470Z 
2025-01-09T18:24:10.6267570Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6267710Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6267790Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6267940Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6268020Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6268070Z >       sim.run_final()
2025-01-09T18:24:10.6268080Z 
2025-01-09T18:24:10.6268140Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6268240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6268310Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6268440Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6268510Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6268640Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6268790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6268800Z 
2025-01-09T18:24:10.6269020Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6269190Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6270000Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6270280Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6270400Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6270520Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6270530Z 
2025-01-09T18:24:10.6270590Z     def initialize_transport_state(
2025-01-09T18:24:10.6270640Z         self,
2025-01-09T18:24:10.6270690Z         simulation_state,
2025-01-09T18:24:10.6270740Z         opacity_state,
2025-01-09T18:24:10.6270850Z         macro_atom_state,
2025-01-09T18:24:10.6270900Z         plasma,
2025-01-09T18:24:10.6270950Z         no_of_packets,
2025-01-09T18:24:10.6271010Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6271060Z         iteration=0,
2025-01-09T18:24:10.6271100Z     ):
2025-01-09T18:24:10.6271210Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6271280Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6271380Z         else:
2025-01-09T18:24:10.6271440Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6271490Z     
2025-01-09T18:24:10.6271600Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6271670Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6271720Z         )
2025-01-09T18:24:10.6271760Z     
2025-01-09T18:24:10.6271860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6271990Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6272380Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6272390Z 
2025-01-09T18:24:10.6272480Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6272690Z _ ERROR at setup of test_composition_elemental_number_density[index9-269136275] _
2025-01-09T18:24:10.6272700Z 
2025-01-09T18:24:10.6273270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6273850Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6273860Z 
2025-01-09T18:24:10.6273920Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6274050Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6274130Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6274320Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6274390Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6274440Z >       sim.run_final()
2025-01-09T18:24:10.6274450Z 
2025-01-09T18:24:10.6274500Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6274590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6274670Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6274780Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6274860Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6275030Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6275120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6275120Z 
2025-01-09T18:24:10.6275330Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6275540Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6275710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6276000Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6276180Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6276290Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6276290Z 
2025-01-09T18:24:10.6276360Z     def initialize_transport_state(
2025-01-09T18:24:10.6276400Z         self,
2025-01-09T18:24:10.6276530Z         simulation_state,
2025-01-09T18:24:10.6276590Z         opacity_state,
2025-01-09T18:24:10.6276760Z         macro_atom_state,
2025-01-09T18:24:10.6276810Z         plasma,
2025-01-09T18:24:10.6276860Z         no_of_packets,
2025-01-09T18:24:10.6276920Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6276970Z         iteration=0,
2025-01-09T18:24:10.6277010Z     ):
2025-01-09T18:24:10.6277110Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6277270Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6277330Z         else:
2025-01-09T18:24:10.6277380Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6277430Z     
2025-01-09T18:24:10.6277530Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6277610Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6277650Z         )
2025-01-09T18:24:10.6277700Z     
2025-01-09T18:24:10.6277850Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6277930Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6278360Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6278370Z 
2025-01-09T18:24:10.6278460Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6278620Z _ ERROR at setup of test_composition_elemental_number_density[index10-204398856] _
2025-01-09T18:24:10.6278620Z 
2025-01-09T18:24:10.6279200Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6279530Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6279620Z 
2025-01-09T18:24:10.6279700Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6279820Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6279890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6280040Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6280150Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6280200Z >       sim.run_final()
2025-01-09T18:24:10.6280210Z 
2025-01-09T18:24:10.6280260Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6280360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6280430Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6280540Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6280610Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6280780Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6280880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6280880Z 
2025-01-09T18:24:10.6281080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6281250Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6281470Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6281690Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6281880Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6281990Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6281990Z 
2025-01-09T18:24:10.6282050Z     def initialize_transport_state(
2025-01-09T18:24:10.6282100Z         self,
2025-01-09T18:24:10.6282150Z         simulation_state,
2025-01-09T18:24:10.6282210Z         opacity_state,
2025-01-09T18:24:10.6282260Z         macro_atom_state,
2025-01-09T18:24:10.6282310Z         plasma,
2025-01-09T18:24:10.6282370Z         no_of_packets,
2025-01-09T18:24:10.6282430Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6282480Z         iteration=0,
2025-01-09T18:24:10.6282570Z     ):
2025-01-09T18:24:10.6282680Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6282750Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6282790Z         else:
2025-01-09T18:24:10.6282850Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6282890Z     
2025-01-09T18:24:10.6283000Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6283080Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6283130Z         )
2025-01-09T18:24:10.6283170Z     
2025-01-09T18:24:10.6283270Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6283350Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6283730Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6283730Z 
2025-01-09T18:24:10.6283820Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6283980Z _ ERROR at setup of test_composition_elemental_number_density[index11-156857199] _
2025-01-09T18:24:10.6283980Z 
2025-01-09T18:24:10.6284500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6284790Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6284790Z 
2025-01-09T18:24:10.6284910Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6285040Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6285120Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6285260Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6285320Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6285380Z >       sim.run_final()
2025-01-09T18:24:10.6285380Z 
2025-01-09T18:24:10.6285440Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6285530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6285600Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6285720Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6285780Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6285910Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6285990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6286000Z 
2025-01-09T18:24:10.6286210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6286360Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6286540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6286760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6286880Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6287050Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6287050Z 
2025-01-09T18:24:10.6287120Z     def initialize_transport_state(
2025-01-09T18:24:10.6287160Z         self,
2025-01-09T18:24:10.6287210Z         simulation_state,
2025-01-09T18:24:10.6287270Z         opacity_state,
2025-01-09T18:24:10.6287320Z         macro_atom_state,
2025-01-09T18:24:10.6287370Z         plasma,
2025-01-09T18:24:10.6287420Z         no_of_packets,
2025-01-09T18:24:10.6287480Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6287530Z         iteration=0,
2025-01-09T18:24:10.6287570Z     ):
2025-01-09T18:24:10.6287670Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6287740Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6287790Z         else:
2025-01-09T18:24:10.6288070Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6288180Z     
2025-01-09T18:24:10.6288360Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6288510Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6288550Z         )
2025-01-09T18:24:10.6288670Z     
2025-01-09T18:24:10.6288830Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6288950Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6289340Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6289350Z 
2025-01-09T18:24:10.6289520Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6289780Z _ ERROR at setup of test_composition_elemental_number_density[index12-45482957] _
2025-01-09T18:24:10.6289790Z 
2025-01-09T18:24:10.6290350Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6290690Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6290700Z 
2025-01-09T18:24:10.6290770Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6297700Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6297960Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6298100Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6298160Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6298270Z >       sim.run_final()
2025-01-09T18:24:10.6298270Z 
2025-01-09T18:24:10.6298330Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6298420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6298490Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6298610Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6298680Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6298850Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6298940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6298950Z 
2025-01-09T18:24:10.6299160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6299320Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6299540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6299760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6299880Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6300040Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6300280Z 
2025-01-09T18:24:10.6300370Z     def initialize_transport_state(
2025-01-09T18:24:10.6300410Z         self,
2025-01-09T18:24:10.6300470Z         simulation_state,
2025-01-09T18:24:10.6300570Z         opacity_state,
2025-01-09T18:24:10.6300630Z         macro_atom_state,
2025-01-09T18:24:10.6300680Z         plasma,
2025-01-09T18:24:10.6300730Z         no_of_packets,
2025-01-09T18:24:10.6300790Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6300850Z         iteration=0,
2025-01-09T18:24:10.6300890Z     ):
2025-01-09T18:24:10.6300990Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6301060Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6301160Z         else:
2025-01-09T18:24:10.6301220Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6301270Z     
2025-01-09T18:24:10.6301370Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6301440Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6301490Z         )
2025-01-09T18:24:10.6301540Z     
2025-01-09T18:24:10.6301640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6301760Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6302140Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6302150Z 
2025-01-09T18:24:10.6302240Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6302450Z _ ERROR at setup of test_composition_elemental_number_density[index13-34542591] _
2025-01-09T18:24:10.6302450Z 
2025-01-09T18:24:10.6302990Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6303270Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6303280Z 
2025-01-09T18:24:10.6303350Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6303520Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6303600Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6303990Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6304060Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6304110Z >       sim.run_final()
2025-01-09T18:24:10.6304120Z 
2025-01-09T18:24:10.6304170Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6304270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6304340Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6304450Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6304570Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6304700Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6304780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6304790Z 
2025-01-09T18:24:10.6305010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6305230Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6305410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6305620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6305790Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6305900Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6305910Z 
2025-01-09T18:24:10.6305970Z     def initialize_transport_state(
2025-01-09T18:24:10.6306020Z         self,
2025-01-09T18:24:10.6306160Z         simulation_state,
2025-01-09T18:24:10.6306210Z         opacity_state,
2025-01-09T18:24:10.6306260Z         macro_atom_state,
2025-01-09T18:24:10.6306360Z         plasma,
2025-01-09T18:24:10.6306410Z         no_of_packets,
2025-01-09T18:24:10.6306470Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6306520Z         iteration=0,
2025-01-09T18:24:10.6306570Z     ):
2025-01-09T18:24:10.6306670Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6306740Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6306790Z         else:
2025-01-09T18:24:10.6306840Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6306940Z     
2025-01-09T18:24:10.6307050Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6307120Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6307160Z         )
2025-01-09T18:24:10.6307210Z     
2025-01-09T18:24:10.6307310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6307390Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6307820Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6307820Z 
2025-01-09T18:24:10.6307920Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6308070Z _ ERROR at setup of test_composition_elemental_number_density[index14-26508241] _
2025-01-09T18:24:10.6308070Z 
2025-01-09T18:24:10.6308610Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6308890Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6308900Z 
2025-01-09T18:24:10.6308960Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6309090Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6309160Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6309310Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6309420Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6309480Z >       sim.run_final()
2025-01-09T18:24:10.6309480Z 
2025-01-09T18:24:10.6309540Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6309620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6309700Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6309810Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6309880Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6310000Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6310110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6310120Z 
2025-01-09T18:24:10.6310340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6310510Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6310700Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6310940Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6311430Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6311540Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6311540Z 
2025-01-09T18:24:10.6311610Z     def initialize_transport_state(
2025-01-09T18:24:10.6311650Z         self,
2025-01-09T18:24:10.6311710Z         simulation_state,
2025-01-09T18:24:10.6311760Z         opacity_state,
2025-01-09T18:24:10.6311920Z         macro_atom_state,
2025-01-09T18:24:10.6311980Z         plasma,
2025-01-09T18:24:10.6312040Z         no_of_packets,
2025-01-09T18:24:10.6312160Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6312210Z         iteration=0,
2025-01-09T18:24:10.6312310Z     ):
2025-01-09T18:24:10.6312410Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6312490Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6312540Z         else:
2025-01-09T18:24:10.6312590Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6312630Z     
2025-01-09T18:24:10.6312760Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6312840Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6312880Z         )
2025-01-09T18:24:10.6312920Z     
2025-01-09T18:24:10.6313030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6313100Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6313480Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6313480Z 
2025-01-09T18:24:10.6313570Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6313730Z _ ERROR at setup of test_composition_elemental_number_density[index15-34001569] _
2025-01-09T18:24:10.6313730Z 
2025-01-09T18:24:10.6314290Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6314570Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6314570Z 
2025-01-09T18:24:10.6314630Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6314760Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6314840Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6314980Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6315040Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6315090Z >       sim.run_final()
2025-01-09T18:24:10.6315170Z 
2025-01-09T18:24:10.6315230Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6315320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6315390Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6315510Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6315580Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6315700Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6315790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6315790Z 
2025-01-09T18:24:10.6316010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6316180Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6316350Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6316580Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6316710Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6316830Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6316840Z 
2025-01-09T18:24:10.6316900Z     def initialize_transport_state(
2025-01-09T18:24:10.6316950Z         self,
2025-01-09T18:24:10.6317000Z         simulation_state,
2025-01-09T18:24:10.6317060Z         opacity_state,
2025-01-09T18:24:10.6317110Z         macro_atom_state,
2025-01-09T18:24:10.6317150Z         plasma,
2025-01-09T18:24:10.6317280Z         no_of_packets,
2025-01-09T18:24:10.6317340Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6317390Z         iteration=0,
2025-01-09T18:24:10.6317430Z     ):
2025-01-09T18:24:10.6317590Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6317670Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6317720Z         else:
2025-01-09T18:24:10.6317770Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6317820Z     
2025-01-09T18:24:10.6317930Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6318000Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6318040Z         )
2025-01-09T18:24:10.6318090Z     
2025-01-09T18:24:10.6318190Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6318260Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6318640Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6318650Z 
2025-01-09T18:24:10.6318740Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6318890Z _ ERROR at setup of test_composition_elemental_number_density[index16-25822910] _
2025-01-09T18:24:10.6318900Z 
2025-01-09T18:24:10.6319400Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6319680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6319690Z 
2025-01-09T18:24:10.6319750Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6319870Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6319950Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6320090Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6320150Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6320200Z >       sim.run_final()
2025-01-09T18:24:10.6320200Z 
2025-01-09T18:24:10.6320260Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6320400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6320480Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6320590Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6320660Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6320780Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6320870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6320880Z 
2025-01-09T18:24:10.6321080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6321240Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6321410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6321620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6321750Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6321860Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6321860Z 
2025-01-09T18:24:10.6321930Z     def initialize_transport_state(
2025-01-09T18:24:10.6321970Z         self,
2025-01-09T18:24:10.6322030Z         simulation_state,
2025-01-09T18:24:10.6322080Z         opacity_state,
2025-01-09T18:24:10.6322130Z         macro_atom_state,
2025-01-09T18:24:10.6322180Z         plasma,
2025-01-09T18:24:10.6322230Z         no_of_packets,
2025-01-09T18:24:10.6322290Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6322560Z         iteration=0,
2025-01-09T18:24:10.6322610Z     ):
2025-01-09T18:24:10.6322710Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6322780Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6322820Z         else:
2025-01-09T18:24:10.6322880Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6322930Z     
2025-01-09T18:24:10.6323040Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6323110Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6323160Z         )
2025-01-09T18:24:10.6323200Z     
2025-01-09T18:24:10.6323300Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6323370Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6323750Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6323750Z 
2025-01-09T18:24:10.6323850Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6324000Z _ ERROR at setup of test_composition_elemental_number_density[index17-19816693] _
2025-01-09T18:24:10.6324000Z 
2025-01-09T18:24:10.6324500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6324780Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6324780Z 
2025-01-09T18:24:10.6324840Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6324970Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6325050Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6325190Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6325250Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6325310Z >       sim.run_final()
2025-01-09T18:24:10.6325310Z 
2025-01-09T18:24:10.6325360Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6325450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6325940Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6326060Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6326130Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6326250Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6326340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6326340Z 
2025-01-09T18:24:10.6326540Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6326700Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6326880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6327100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6327230Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6327360Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6327370Z 
2025-01-09T18:24:10.6327430Z     def initialize_transport_state(
2025-01-09T18:24:10.6327480Z         self,
2025-01-09T18:24:10.6327540Z         simulation_state,
2025-01-09T18:24:10.6327590Z         opacity_state,
2025-01-09T18:24:10.6327640Z         macro_atom_state,
2025-01-09T18:24:10.6327690Z         plasma,
2025-01-09T18:24:10.6327740Z         no_of_packets,
2025-01-09T18:24:10.6327790Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6327840Z         iteration=0,
2025-01-09T18:24:10.6327880Z     ):
2025-01-09T18:24:10.6328060Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6328140Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6328190Z         else:
2025-01-09T18:24:10.6328240Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6328290Z     
2025-01-09T18:24:10.6328390Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6328470Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6328510Z         )
2025-01-09T18:24:10.6328560Z     
2025-01-09T18:24:10.6328660Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6328730Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6329130Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6329140Z 
2025-01-09T18:24:10.6329230Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6329370Z ______ ERROR at setup of test_simulation_state_mass[index0-1.4471412e+31] ______
2025-01-09T18:24:10.6329380Z 
2025-01-09T18:24:10.6329870Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6330150Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6330150Z 
2025-01-09T18:24:10.6330220Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6330340Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6330420Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6330560Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6330630Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6330680Z >       sim.run_final()
2025-01-09T18:24:10.6330680Z 
2025-01-09T18:24:10.6330740Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6330830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6330900Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6331010Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6331150Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6331280Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6331370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6331370Z 
2025-01-09T18:24:10.6331570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6331730Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6331900Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6332120Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6332240Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6332350Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6332360Z 
2025-01-09T18:24:10.6332420Z     def initialize_transport_state(
2025-01-09T18:24:10.6332470Z         self,
2025-01-09T18:24:10.6332520Z         simulation_state,
2025-01-09T18:24:10.6332570Z         opacity_state,
2025-01-09T18:24:10.6332620Z         macro_atom_state,
2025-01-09T18:24:10.6332670Z         plasma,
2025-01-09T18:24:10.6332720Z         no_of_packets,
2025-01-09T18:24:10.6332770Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6332820Z         iteration=0,
2025-01-09T18:24:10.6332870Z     ):
2025-01-09T18:24:10.6332960Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6333030Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6333130Z         else:
2025-01-09T18:24:10.6333200Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6333240Z     
2025-01-09T18:24:10.6333350Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6333420Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6333480Z         )
2025-01-09T18:24:10.6333540Z     
2025-01-09T18:24:10.6333640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6333720Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6334090Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6334100Z 
2025-01-09T18:24:10.6334190Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6334330Z ______ ERROR at setup of test_simulation_state_mass[index1-2.6820129e+30] ______
2025-01-09T18:24:10.6334340Z 
2025-01-09T18:24:10.6334830Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6335110Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6335120Z 
2025-01-09T18:24:10.6335180Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6335310Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6335380Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6335530Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6335590Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6335650Z >       sim.run_final()
2025-01-09T18:24:10.6335650Z 
2025-01-09T18:24:10.6335700Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6335800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6335870Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6335980Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6336060Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6336260Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6336340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6336350Z 
2025-01-09T18:24:10.6336550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6336710Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6336880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6337100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6337220Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6337330Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6337330Z 
2025-01-09T18:24:10.6337400Z     def initialize_transport_state(
2025-01-09T18:24:10.6337440Z         self,
2025-01-09T18:24:10.6337500Z         simulation_state,
2025-01-09T18:24:10.6337550Z         opacity_state,
2025-01-09T18:24:10.6337610Z         macro_atom_state,
2025-01-09T18:24:10.6337650Z         plasma,
2025-01-09T18:24:10.6337710Z         no_of_packets,
2025-01-09T18:24:10.6337760Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6337810Z         iteration=0,
2025-01-09T18:24:10.6337860Z     ):
2025-01-09T18:24:10.6337950Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6338030Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6338070Z         else:
2025-01-09T18:24:10.6338130Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6338230Z     
2025-01-09T18:24:10.6338340Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6338410Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6338460Z         )
2025-01-09T18:24:10.6338500Z     
2025-01-09T18:24:10.6338600Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6338680Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6339060Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6339060Z 
2025-01-09T18:24:10.6339150Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6339290Z ______ ERROR at setup of test_simulation_state_mass[index2-1.3464444e+29] ______
2025-01-09T18:24:10.6339290Z 
2025-01-09T18:24:10.6339800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6340090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6340090Z 
2025-01-09T18:24:10.6340160Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6340280Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6340360Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6340500Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6340560Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6340620Z >       sim.run_final()
2025-01-09T18:24:10.6340620Z 
2025-01-09T18:24:10.6340680Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6340770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6340840Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6340960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6341020Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6341150Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6341310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6341310Z 
2025-01-09T18:24:10.6341520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6341670Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6341840Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6342060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6342180Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6342290Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6342290Z 
2025-01-09T18:24:10.6342350Z     def initialize_transport_state(
2025-01-09T18:24:10.6342410Z         self,
2025-01-09T18:24:10.6342460Z         simulation_state,
2025-01-09T18:24:10.6342510Z         opacity_state,
2025-01-09T18:24:10.6342570Z         macro_atom_state,
2025-01-09T18:24:10.6342620Z         plasma,
2025-01-09T18:24:10.6342670Z         no_of_packets,
2025-01-09T18:24:10.6342730Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6342770Z         iteration=0,
2025-01-09T18:24:10.6342820Z     ):
2025-01-09T18:24:10.6342930Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6343000Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6343050Z         else:
2025-01-09T18:24:10.6343110Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6343150Z     
2025-01-09T18:24:10.6343260Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6343610Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6343650Z         )
2025-01-09T18:24:10.6343700Z     
2025-01-09T18:24:10.6343800Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6343880Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6344260Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6344260Z 
2025-01-09T18:24:10.6344360Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6344500Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index0-1.67378172e-24] ___
2025-01-09T18:24:10.6344510Z 
2025-01-09T18:24:10.6345000Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6345280Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6345290Z 
2025-01-09T18:24:10.6345350Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6345480Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6345560Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6345690Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6345760Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6345810Z >       sim.run_final()
2025-01-09T18:24:10.6345810Z 
2025-01-09T18:24:10.6345860Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6345950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6346030Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6346140Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6346210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6346330Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6346420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6346630Z 
2025-01-09T18:24:10.6346850Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6347000Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6347170Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6347380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6347510Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6347620Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6347620Z 
2025-01-09T18:24:10.6347690Z     def initialize_transport_state(
2025-01-09T18:24:10.6347730Z         self,
2025-01-09T18:24:10.6347790Z         simulation_state,
2025-01-09T18:24:10.6347840Z         opacity_state,
2025-01-09T18:24:10.6347890Z         macro_atom_state,
2025-01-09T18:24:10.6347940Z         plasma,
2025-01-09T18:24:10.6347990Z         no_of_packets,
2025-01-09T18:24:10.6348050Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6348100Z         iteration=0,
2025-01-09T18:24:10.6348150Z     ):
2025-01-09T18:24:10.6348240Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6348320Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6348370Z         else:
2025-01-09T18:24:10.6348430Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6348480Z     
2025-01-09T18:24:10.6348590Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6348660Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6348760Z         )
2025-01-09T18:24:10.6348810Z     
2025-01-09T18:24:10.6348910Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6348990Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6349370Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6349380Z 
2025-01-09T18:24:10.6349470Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6349630Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index1-9.51707707e-23] ___
2025-01-09T18:24:10.6349640Z 
2025-01-09T18:24:10.6350130Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6350530Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6350540Z 
2025-01-09T18:24:10.6350610Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6350790Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6350980Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6351200Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6351260Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6351390Z >       sim.run_final()
2025-01-09T18:24:10.6351400Z 
2025-01-09T18:24:10.6351590Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6351740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6351880Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6352060Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6352210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6352340Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6352490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6352500Z 
2025-01-09T18:24:10.6352760Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6353100Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6353280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6353570Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6353740Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6353920Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6353930Z 
2025-01-09T18:24:10.6361160Z     def initialize_transport_state(
2025-01-09T18:24:10.6361270Z         self,
2025-01-09T18:24:10.6361330Z         simulation_state,
2025-01-09T18:24:10.6361390Z         opacity_state,
2025-01-09T18:24:10.6361440Z         macro_atom_state,
2025-01-09T18:24:10.6361490Z         plasma,
2025-01-09T18:24:10.6361540Z         no_of_packets,
2025-01-09T18:24:10.6361590Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6361650Z         iteration=0,
2025-01-09T18:24:10.6361690Z     ):
2025-01-09T18:24:10.6361800Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6361870Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6361920Z         else:
2025-01-09T18:24:10.6361980Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6362020Z     
2025-01-09T18:24:10.6362130Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6362200Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6362250Z         )
2025-01-09T18:24:10.6362290Z     
2025-01-09T18:24:10.6362410Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6362740Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6363130Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6363140Z 
2025-01-09T18:24:10.6363230Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6363370Z __ ERROR at setup of test_radial_1d_model_atomic_mass[index2-9.54725917e-23] ___
2025-01-09T18:24:10.6363380Z 
2025-01-09T18:24:10.6363880Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6364160Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6364170Z 
2025-01-09T18:24:10.6364230Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6364360Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6364430Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6364570Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6364640Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6364690Z >       sim.run_final()
2025-01-09T18:24:10.6364690Z 
2025-01-09T18:24:10.6364750Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6364840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6364910Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6365020Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6365100Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6365220Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6365340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6365350Z 
2025-01-09T18:24:10.6365560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6365710Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6365970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6366180Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6366310Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6366420Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6366420Z 
2025-01-09T18:24:10.6366490Z     def initialize_transport_state(
2025-01-09T18:24:10.6366540Z         self,
2025-01-09T18:24:10.6366590Z         simulation_state,
2025-01-09T18:24:10.6366650Z         opacity_state,
2025-01-09T18:24:10.6366700Z         macro_atom_state,
2025-01-09T18:24:10.6366750Z         plasma,
2025-01-09T18:24:10.6366790Z         no_of_packets,
2025-01-09T18:24:10.6366860Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6366900Z         iteration=0,
2025-01-09T18:24:10.6366950Z     ):
2025-01-09T18:24:10.6367050Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6367120Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6367160Z         else:
2025-01-09T18:24:10.6367220Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6367270Z     
2025-01-09T18:24:10.6367370Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6367440Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6367490Z         )
2025-01-09T18:24:10.6367540Z     
2025-01-09T18:24:10.6367640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6367720Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6368160Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6368160Z 
2025-01-09T18:24:10.6368250Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6368430Z __ ERROR at setup of TestModelStateFromNonUniformAbundances.test_atomic_mass ___
2025-01-09T18:24:10.6368430Z 
2025-01-09T18:24:10.6368930Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6369210Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6369220Z 
2025-01-09T18:24:10.6369280Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6369410Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6369480Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6369620Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6369690Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6369740Z >       sim.run_final()
2025-01-09T18:24:10.6369750Z 
2025-01-09T18:24:10.6369800Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6369890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6369960Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6370080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6370150Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6370270Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6370360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6370370Z 
2025-01-09T18:24:10.6370570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6370730Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6370910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6371170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6371290Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6371400Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6371410Z 
2025-01-09T18:24:10.6371470Z     def initialize_transport_state(
2025-01-09T18:24:10.6371520Z         self,
2025-01-09T18:24:10.6371580Z         simulation_state,
2025-01-09T18:24:10.6371630Z         opacity_state,
2025-01-09T18:24:10.6371690Z         macro_atom_state,
2025-01-09T18:24:10.6371740Z         plasma,
2025-01-09T18:24:10.6371790Z         no_of_packets,
2025-01-09T18:24:10.6371850Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6371910Z         iteration=0,
2025-01-09T18:24:10.6371950Z     ):
2025-01-09T18:24:10.6372050Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6372120Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6372170Z         else:
2025-01-09T18:24:10.6372230Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6372270Z     
2025-01-09T18:24:10.6372380Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6372450Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6372500Z         )
2025-01-09T18:24:10.6372540Z     
2025-01-09T18:24:10.6372650Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6372720Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6373110Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6373490Z 
2025-01-09T18:24:10.6373600Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6373810Z _ ERROR at setup of TestModelStateFromNonUniformAbundances.test_elemental_number_density _
2025-01-09T18:24:10.6373810Z 
2025-01-09T18:24:10.6374310Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6374600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6374600Z 
2025-01-09T18:24:10.6374670Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6374800Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6374880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6375020Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6375080Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6375130Z >       sim.run_final()
2025-01-09T18:24:10.6375130Z 
2025-01-09T18:24:10.6375190Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6375290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6375360Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6375470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6375540Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6375680Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6375780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6375780Z 
2025-01-09T18:24:10.6375990Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6376160Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6376330Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6376540Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6376910Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6377030Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6377030Z 
2025-01-09T18:24:10.6377090Z     def initialize_transport_state(
2025-01-09T18:24:10.6377140Z         self,
2025-01-09T18:24:10.6377200Z         simulation_state,
2025-01-09T18:24:10.6377320Z         opacity_state,
2025-01-09T18:24:10.6377370Z         macro_atom_state,
2025-01-09T18:24:10.6377420Z         plasma,
2025-01-09T18:24:10.6377480Z         no_of_packets,
2025-01-09T18:24:10.6377540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6377590Z         iteration=0,
2025-01-09T18:24:10.6377640Z     ):
2025-01-09T18:24:10.6377740Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6377820Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6377880Z         else:
2025-01-09T18:24:10.6377950Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6377990Z     
2025-01-09T18:24:10.6378100Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6378170Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6378220Z         )
2025-01-09T18:24:10.6378270Z     
2025-01-09T18:24:10.6378370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6378440Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6378840Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6378950Z 
2025-01-09T18:24:10.6379040Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6379180Z _________ ERROR at setup of test_hdf_simulation_state_scalars[t_inner] _________
2025-01-09T18:24:10.6379180Z 
2025-01-09T18:24:10.6379680Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6379970Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6379970Z 
2025-01-09T18:24:10.6380040Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6380160Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6380240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6380380Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6380450Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6380500Z >       sim.run_final()
2025-01-09T18:24:10.6380500Z 
2025-01-09T18:24:10.6380560Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6380670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6380750Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6380860Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6380930Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6381060Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6381160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6381170Z 
2025-01-09T18:24:10.6381370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6381530Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6381710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6381940Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6382070Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6382260Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6382270Z 
2025-01-09T18:24:10.6382330Z     def initialize_transport_state(
2025-01-09T18:24:10.6382380Z         self,
2025-01-09T18:24:10.6382430Z         simulation_state,
2025-01-09T18:24:10.6382480Z         opacity_state,
2025-01-09T18:24:10.6382540Z         macro_atom_state,
2025-01-09T18:24:10.6382590Z         plasma,
2025-01-09T18:24:10.6382640Z         no_of_packets,
2025-01-09T18:24:10.6382700Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6382740Z         iteration=0,
2025-01-09T18:24:10.6382790Z     ):
2025-01-09T18:24:10.6382890Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6382960Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6383010Z         else:
2025-01-09T18:24:10.6383060Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6383110Z     
2025-01-09T18:24:10.6383220Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6383290Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6383330Z         )
2025-01-09T18:24:10.6383390Z     
2025-01-09T18:24:10.6383500Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6383570Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6383990Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6384000Z 
2025-01-09T18:24:10.6384090Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6384370Z _____ ERROR at setup of test_hdf_simulation_state_nparray[dilution_factor] _____
2025-01-09T18:24:10.6384370Z 
2025-01-09T18:24:10.6384880Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6385190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6385200Z 
2025-01-09T18:24:10.6385270Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6385400Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6385490Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6385650Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6385720Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6385770Z >       sim.run_final()
2025-01-09T18:24:10.6385770Z 
2025-01-09T18:24:10.6385830Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6385920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6386020Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6386160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6386240Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6386370Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6386490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6386500Z 
2025-01-09T18:24:10.6386700Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6386860Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6387030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6387270Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6387410Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6387520Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6387600Z 
2025-01-09T18:24:10.6387670Z     def initialize_transport_state(
2025-01-09T18:24:10.6387720Z         self,
2025-01-09T18:24:10.6387780Z         simulation_state,
2025-01-09T18:24:10.6387830Z         opacity_state,
2025-01-09T18:24:10.6387890Z         macro_atom_state,
2025-01-09T18:24:10.6387950Z         plasma,
2025-01-09T18:24:10.6388010Z         no_of_packets,
2025-01-09T18:24:10.6388070Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6388120Z         iteration=0,
2025-01-09T18:24:10.6388160Z     ):
2025-01-09T18:24:10.6388260Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6388340Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6388390Z         else:
2025-01-09T18:24:10.6388440Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6388490Z     
2025-01-09T18:24:10.6388590Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6388660Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6388710Z         )
2025-01-09T18:24:10.6388760Z     
2025-01-09T18:24:10.6388870Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6388940Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6389330Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6389340Z 
2025-01-09T18:24:10.6389430Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6389590Z _________ ERROR at setup of test_hdf_simulation_state_nparray[v_inner] _________
2025-01-09T18:24:10.6389670Z 
2025-01-09T18:24:10.6390190Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6390490Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6390500Z 
2025-01-09T18:24:10.6390570Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6390690Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6390790Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6390930Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6391000Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6391050Z >       sim.run_final()
2025-01-09T18:24:10.6391060Z 
2025-01-09T18:24:10.6391110Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6391200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6391280Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6391390Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6391460Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6391580Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6391700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6391710Z 
2025-01-09T18:24:10.6391930Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6392110Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6392290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6392550Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6392680Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6392790Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6392800Z 
2025-01-09T18:24:10.6392870Z     def initialize_transport_state(
2025-01-09T18:24:10.6393000Z         self,
2025-01-09T18:24:10.6393060Z         simulation_state,
2025-01-09T18:24:10.6393110Z         opacity_state,
2025-01-09T18:24:10.6393170Z         macro_atom_state,
2025-01-09T18:24:10.6393210Z         plasma,
2025-01-09T18:24:10.6393280Z         no_of_packets,
2025-01-09T18:24:10.6393340Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6393410Z         iteration=0,
2025-01-09T18:24:10.6393470Z     ):
2025-01-09T18:24:10.6393590Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6393660Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6393720Z         else:
2025-01-09T18:24:10.6393780Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6393830Z     
2025-01-09T18:24:10.6393940Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6394030Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6394070Z         )
2025-01-09T18:24:10.6394120Z     
2025-01-09T18:24:10.6394230Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6394320Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6394700Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6394700Z 
2025-01-09T18:24:10.6394790Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6394930Z _________ ERROR at setup of test_hdf_simulation_state_nparray[v_outer] _________
2025-01-09T18:24:10.6394930Z 
2025-01-09T18:24:10.6395420Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6395990Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6396000Z 
2025-01-09T18:24:10.6396070Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6396190Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6396270Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6396400Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6396470Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6396520Z >       sim.run_final()
2025-01-09T18:24:10.6396520Z 
2025-01-09T18:24:10.6396580Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6396670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6396750Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6396870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6396950Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6397090Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6397180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6397180Z 
2025-01-09T18:24:10.6397390Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6397550Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6399450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6399720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6399910Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6400020Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6400030Z 
2025-01-09T18:24:10.6400090Z     def initialize_transport_state(
2025-01-09T18:24:10.6400140Z         self,
2025-01-09T18:24:10.6400190Z         simulation_state,
2025-01-09T18:24:10.6400630Z         opacity_state,
2025-01-09T18:24:10.6400690Z         macro_atom_state,
2025-01-09T18:24:10.6400740Z         plasma,
2025-01-09T18:24:10.6400790Z         no_of_packets,
2025-01-09T18:24:10.6400850Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6400900Z         iteration=0,
2025-01-09T18:24:10.6400940Z     ):
2025-01-09T18:24:10.6401050Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6401120Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6401170Z         else:
2025-01-09T18:24:10.6401230Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6401270Z     
2025-01-09T18:24:10.6401400Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6401480Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6401520Z         )
2025-01-09T18:24:10.6401560Z     
2025-01-09T18:24:10.6401670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6401750Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6402150Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6402160Z 
2025-01-09T18:24:10.6402260Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6402390Z _____________________ ERROR at setup of test_hdf_density_0 _____________________
2025-01-09T18:24:10.6402390Z 
2025-01-09T18:24:10.6403050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6403430Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6403440Z 
2025-01-09T18:24:10.6403520Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6403650Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6403720Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6403870Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6403930Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6403980Z >       sim.run_final()
2025-01-09T18:24:10.6403990Z 
2025-01-09T18:24:10.6404040Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6404130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6404210Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6404320Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6404400Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6404520Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6404610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6404620Z 
2025-01-09T18:24:10.6404820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6404990Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6405160Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6405530Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6405650Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6405760Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6405760Z 
2025-01-09T18:24:10.6405830Z     def initialize_transport_state(
2025-01-09T18:24:10.6405880Z         self,
2025-01-09T18:24:10.6405930Z         simulation_state,
2025-01-09T18:24:10.6405980Z         opacity_state,
2025-01-09T18:24:10.6406040Z         macro_atom_state,
2025-01-09T18:24:10.6406160Z         plasma,
2025-01-09T18:24:10.6406210Z         no_of_packets,
2025-01-09T18:24:10.6406400Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6406460Z         iteration=0,
2025-01-09T18:24:10.6406500Z     ):
2025-01-09T18:24:10.6406600Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6406670Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6406720Z         else:
2025-01-09T18:24:10.6406780Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6406820Z     
2025-01-09T18:24:10.6406930Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6407000Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6407050Z         )
2025-01-09T18:24:10.6407090Z     
2025-01-09T18:24:10.6407330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6407410Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6407800Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6407810Z 
2025-01-09T18:24:10.6407900Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6408080Z ______________________ ERROR at setup of test_hdf_time_0 _______________________
2025-01-09T18:24:10.6408080Z 
2025-01-09T18:24:10.6408580Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6408930Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6408940Z 
2025-01-09T18:24:10.6409000Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6409130Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6409210Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6409340Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6409410Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6409460Z >       sim.run_final()
2025-01-09T18:24:10.6409460Z 
2025-01-09T18:24:10.6409520Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6409600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6409680Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6409790Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6409860Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6409990Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6410070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6410070Z 
2025-01-09T18:24:10.6410280Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6410440Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6410620Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6410830Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6410960Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6411070Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6411070Z 
2025-01-09T18:24:10.6411130Z     def initialize_transport_state(
2025-01-09T18:24:10.6411180Z         self,
2025-01-09T18:24:10.6411240Z         simulation_state,
2025-01-09T18:24:10.6411290Z         opacity_state,
2025-01-09T18:24:10.6411340Z         macro_atom_state,
2025-01-09T18:24:10.6411390Z         plasma,
2025-01-09T18:24:10.6411440Z         no_of_packets,
2025-01-09T18:24:10.6411550Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6411600Z         iteration=0,
2025-01-09T18:24:10.6411640Z     ):
2025-01-09T18:24:10.6411740Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6411810Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6411850Z         else:
2025-01-09T18:24:10.6412050Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6412100Z     
2025-01-09T18:24:10.6412210Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6412280Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6412330Z         )
2025-01-09T18:24:10.6412370Z     
2025-01-09T18:24:10.6412470Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6412550Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6412940Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6412940Z 
2025-01-09T18:24:10.6413040Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6413170Z _____________ ERROR at setup of test_opacity_solver[scatter-False] _____________
2025-01-09T18:24:10.6413170Z 
2025-01-09T18:24:10.6413670Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6413960Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6414010Z 
2025-01-09T18:24:10.6414080Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6414210Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6414290Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6414430Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6414480Z >       sim.iterate(10)
2025-01-09T18:24:10.6414490Z 
2025-01-09T18:24:10.6414560Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6414660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6414730Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6414860Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6414980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6414990Z 
2025-01-09T18:24:10.6415210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14d3db3b0>
2025-01-09T18:24:10.6415370Z simulation_state = <tardis.model.base.SimulationState object at 0x14ce25190>
2025-01-09T18:24:10.6415540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x13d1e0740>
2025-01-09T18:24:10.6415760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x13d0a4d10>
2025-01-09T18:24:10.6415890Z plasma = <tardis.plasma.base.BasePlasma object at 0x14d690620>
2025-01-09T18:24:10.6416000Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6416000Z 
2025-01-09T18:24:10.6416060Z     def initialize_transport_state(
2025-01-09T18:24:10.6416110Z         self,
2025-01-09T18:24:10.6416160Z         simulation_state,
2025-01-09T18:24:10.6416220Z         opacity_state,
2025-01-09T18:24:10.6416270Z         macro_atom_state,
2025-01-09T18:24:10.6416320Z         plasma,
2025-01-09T18:24:10.6416540Z         no_of_packets,
2025-01-09T18:24:10.6416610Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6416720Z         iteration=0,
2025-01-09T18:24:10.6416970Z     ):
2025-01-09T18:24:10.6417160Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6417240Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6417370Z         else:
2025-01-09T18:24:10.6417630Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6417770Z     
2025-01-09T18:24:10.6417940Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6418090Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6418140Z         )
2025-01-09T18:24:10.6418240Z     
2025-01-09T18:24:10.6418410Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6418540Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6418920Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6418990Z 
2025-01-09T18:24:10.6419080Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6419270Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.6419830Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.6420270Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.6420400Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.6420870Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.6427800Z ____________ ERROR at setup of test_opacity_solver[macroatom-False] ____________
2025-01-09T18:24:10.6427820Z 
2025-01-09T18:24:10.6428820Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6429170Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6429180Z 
2025-01-09T18:24:10.6429240Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6429370Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6429450Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6429590Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6429640Z >       sim.iterate(10)
2025-01-09T18:24:10.6429650Z 
2025-01-09T18:24:10.6429710Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6429800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6429880Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6430000Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6430090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6430100Z 
2025-01-09T18:24:10.6430300Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14d3db3b0>
2025-01-09T18:24:10.6430480Z simulation_state = <tardis.model.base.SimulationState object at 0x14ce25190>
2025-01-09T18:24:10.6430650Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x13d1e0740>
2025-01-09T18:24:10.6430870Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x13d0a4d10>
2025-01-09T18:24:10.6430980Z plasma = <tardis.plasma.base.BasePlasma object at 0x14d690620>
2025-01-09T18:24:10.6431090Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6431100Z 
2025-01-09T18:24:10.6431160Z     def initialize_transport_state(
2025-01-09T18:24:10.6431210Z         self,
2025-01-09T18:24:10.6431260Z         simulation_state,
2025-01-09T18:24:10.6431320Z         opacity_state,
2025-01-09T18:24:10.6431370Z         macro_atom_state,
2025-01-09T18:24:10.6431410Z         plasma,
2025-01-09T18:24:10.6431460Z         no_of_packets,
2025-01-09T18:24:10.6432000Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6432060Z         iteration=0,
2025-01-09T18:24:10.6432110Z     ):
2025-01-09T18:24:10.6432210Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6432340Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6432390Z         else:
2025-01-09T18:24:10.6432450Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6432490Z     
2025-01-09T18:24:10.6432600Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6432680Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6432720Z         )
2025-01-09T18:24:10.6432770Z     
2025-01-09T18:24:10.6432870Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6432950Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6433330Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6433340Z 
2025-01-09T18:24:10.6433430Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6433570Z ____________ ERROR at setup of test_opacity_solver[macroatom-True] _____________
2025-01-09T18:24:10.6433570Z 
2025-01-09T18:24:10.6434080Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6434370Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6434470Z 
2025-01-09T18:24:10.6434540Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6434670Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6434740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6434880Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6434940Z >       sim.iterate(10)
2025-01-09T18:24:10.6434940Z 
2025-01-09T18:24:10.6435010Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6435100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6435170Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6435290Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6435380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6435380Z 
2025-01-09T18:24:10.6436050Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14d3db3b0>
2025-01-09T18:24:10.6436750Z simulation_state = <tardis.model.base.SimulationState object at 0x14ce25190>
2025-01-09T18:24:10.6437230Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x13d1e0740>
2025-01-09T18:24:10.6437840Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x13d0a4d10>
2025-01-09T18:24:10.6438170Z plasma = <tardis.plasma.base.BasePlasma object at 0x14d690620>
2025-01-09T18:24:10.6438470Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6438470Z 
2025-01-09T18:24:10.6438660Z     def initialize_transport_state(
2025-01-09T18:24:10.6438810Z         self,
2025-01-09T18:24:10.6438980Z         simulation_state,
2025-01-09T18:24:10.6439150Z         opacity_state,
2025-01-09T18:24:10.6439320Z         macro_atom_state,
2025-01-09T18:24:10.6439510Z         plasma,
2025-01-09T18:24:10.6439700Z         no_of_packets,
2025-01-09T18:24:10.6439870Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6440440Z         iteration=0,
2025-01-09T18:24:10.6440580Z     ):
2025-01-09T18:24:10.6440880Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6441080Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6441680Z         else:
2025-01-09T18:24:10.6441850Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6442000Z     
2025-01-09T18:24:10.6442290Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6442490Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6442640Z         )
2025-01-09T18:24:10.6442780Z     
2025-01-09T18:24:10.6443050Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6443270Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6444320Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6444350Z 
2025-01-09T18:24:10.6444600Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6444970Z ___________ ERROR at setup of test_opacity_solver[downbranch-False] ____________
2025-01-09T18:24:10.6444980Z 
2025-01-09T18:24:10.6446370Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6447120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6447130Z 
2025-01-09T18:24:10.6447320Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6447660Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6448070Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6448440Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6448660Z >       sim.iterate(10)
2025-01-09T18:24:10.6448670Z 
2025-01-09T18:24:10.6448880Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6449120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6449330Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6449660Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6449900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6449910Z 
2025-01-09T18:24:10.6450460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14d3db3b0>
2025-01-09T18:24:10.6450900Z simulation_state = <tardis.model.base.SimulationState object at 0x14ce25190>
2025-01-09T18:24:10.6451370Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x13d1e0740>
2025-01-09T18:24:10.6451940Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x13d0a4d10>
2025-01-09T18:24:10.6452380Z plasma = <tardis.plasma.base.BasePlasma object at 0x14d690620>
2025-01-09T18:24:10.6452670Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6452680Z 
2025-01-09T18:24:10.6452870Z     def initialize_transport_state(
2025-01-09T18:24:10.6453020Z         self,
2025-01-09T18:24:10.6453210Z         simulation_state,
2025-01-09T18:24:10.6453380Z         opacity_state,
2025-01-09T18:24:10.6453540Z         macro_atom_state,
2025-01-09T18:24:10.6453690Z         plasma,
2025-01-09T18:24:10.6453850Z         no_of_packets,
2025-01-09T18:24:10.6454050Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6454220Z         iteration=0,
2025-01-09T18:24:10.6454360Z     ):
2025-01-09T18:24:10.6454630Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6454830Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6454990Z         else:
2025-01-09T18:24:10.6455170Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6455330Z     
2025-01-09T18:24:10.6455620Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6455820Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6456200Z         )
2025-01-09T18:24:10.6456350Z     
2025-01-09T18:24:10.6456630Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6456850Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6457910Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6457940Z 
2025-01-09T18:24:10.6458190Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6458570Z ____________ ERROR at setup of test_opacity_solver[downbranch-True] ____________
2025-01-09T18:24:10.6458580Z 
2025-01-09T18:24:10.6459980Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6460780Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6460810Z 
2025-01-09T18:24:10.6461010Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6461360Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6461570Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6461940Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6462110Z >       sim.iterate(10)
2025-01-09T18:24:10.6462120Z 
2025-01-09T18:24:10.6462350Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6462800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6463000Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6463340Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6463580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6463590Z 
2025-01-09T18:24:10.6464150Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14d3db3b0>
2025-01-09T18:24:10.6464570Z simulation_state = <tardis.model.base.SimulationState object at 0x14ce25190>
2025-01-09T18:24:10.6465060Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x13d1e0740>
2025-01-09T18:24:10.6465650Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x13d0a4d10>
2025-01-09T18:24:10.6466000Z plasma = <tardis.plasma.base.BasePlasma object at 0x14d690620>
2025-01-09T18:24:10.6466290Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6466300Z 
2025-01-09T18:24:10.6466480Z     def initialize_transport_state(
2025-01-09T18:24:10.6466660Z         self,
2025-01-09T18:24:10.6466830Z         simulation_state,
2025-01-09T18:24:10.6466990Z         opacity_state,
2025-01-09T18:24:10.6467150Z         macro_atom_state,
2025-01-09T18:24:10.6467310Z         plasma,
2025-01-09T18:24:10.6467460Z         no_of_packets,
2025-01-09T18:24:10.6467640Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6467810Z         iteration=0,
2025-01-09T18:24:10.6467950Z     ):
2025-01-09T18:24:10.6468220Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6468430Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6468580Z         else:
2025-01-09T18:24:10.6468750Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6468900Z     
2025-01-09T18:24:10.6469190Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6469400Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6469550Z         )
2025-01-09T18:24:10.6469700Z     
2025-01-09T18:24:10.6469970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6470200Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6475910Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6476480Z 
2025-01-09T18:24:10.6477800Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6478030Z _________ ERROR at setup of test_opacity_state_to_numba[scatter-False] _________
2025-01-09T18:24:10.6478030Z 
2025-01-09T18:24:10.6478560Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6478890Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6478890Z 
2025-01-09T18:24:10.6478970Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6479100Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6479190Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6479330Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6479390Z >       sim.iterate(10)
2025-01-09T18:24:10.6479390Z 
2025-01-09T18:24:10.6479460Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6479560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6479640Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6479760Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6479850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6480180Z 
2025-01-09T18:24:10.6480400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x319881820>
2025-01-09T18:24:10.6480570Z simulation_state = <tardis.model.base.SimulationState object at 0x13d6f0ad0>
2025-01-09T18:24:10.6480760Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x156aeee70>
2025-01-09T18:24:10.6480990Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x156e0cef0>
2025-01-09T18:24:10.6481110Z plasma = <tardis.plasma.base.BasePlasma object at 0x156d57ec0>
2025-01-09T18:24:10.6481230Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6481230Z 
2025-01-09T18:24:10.6481300Z     def initialize_transport_state(
2025-01-09T18:24:10.6481350Z         self,
2025-01-09T18:24:10.6481400Z         simulation_state,
2025-01-09T18:24:10.6481460Z         opacity_state,
2025-01-09T18:24:10.6481510Z         macro_atom_state,
2025-01-09T18:24:10.6481560Z         plasma,
2025-01-09T18:24:10.6481630Z         no_of_packets,
2025-01-09T18:24:10.6481690Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6481740Z         iteration=0,
2025-01-09T18:24:10.6481790Z     ):
2025-01-09T18:24:10.6481890Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6481970Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6482020Z         else:
2025-01-09T18:24:10.6482080Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6482120Z     
2025-01-09T18:24:10.6482230Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6482310Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6482350Z         )
2025-01-09T18:24:10.6482400Z     
2025-01-09T18:24:10.6482520Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6482620Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6483040Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6483050Z 
2025-01-09T18:24:10.6483150Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6483280Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.6483860Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.6484230Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.6484360Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.6484750Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.6484900Z ________ ERROR at setup of test_opacity_state_to_numba[macroatom-False] ________
2025-01-09T18:24:10.6484910Z 
2025-01-09T18:24:10.6485520Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6485810Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6485810Z 
2025-01-09T18:24:10.6485880Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6486010Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6486090Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6486230Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6486290Z >       sim.iterate(10)
2025-01-09T18:24:10.6486290Z 
2025-01-09T18:24:10.6486360Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6486560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6486630Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6486760Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6486840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6486850Z 
2025-01-09T18:24:10.6487060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x319881820>
2025-01-09T18:24:10.6487220Z simulation_state = <tardis.model.base.SimulationState object at 0x13d6f0ad0>
2025-01-09T18:24:10.6487410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x156aeee70>
2025-01-09T18:24:10.6487620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x156e0cef0>
2025-01-09T18:24:10.6487740Z plasma = <tardis.plasma.base.BasePlasma object at 0x156d57ec0>
2025-01-09T18:24:10.6487850Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6487860Z 
2025-01-09T18:24:10.6487920Z     def initialize_transport_state(
2025-01-09T18:24:10.6487970Z         self,
2025-01-09T18:24:10.6488020Z         simulation_state,
2025-01-09T18:24:10.6488080Z         opacity_state,
2025-01-09T18:24:10.6488130Z         macro_atom_state,
2025-01-09T18:24:10.6488180Z         plasma,
2025-01-09T18:24:10.6488230Z         no_of_packets,
2025-01-09T18:24:10.6488290Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6488340Z         iteration=0,
2025-01-09T18:24:10.6488380Z     ):
2025-01-09T18:24:10.6488480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6488550Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6488600Z         else:
2025-01-09T18:24:10.6488670Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6488720Z     
2025-01-09T18:24:10.6488820Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6488910Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6488950Z         )
2025-01-09T18:24:10.6489000Z     
2025-01-09T18:24:10.6489100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6489180Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6489560Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6489670Z 
2025-01-09T18:24:10.6489770Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6489910Z ________ ERROR at setup of test_opacity_state_to_numba[macroatom-True] _________
2025-01-09T18:24:10.6489920Z 
2025-01-09T18:24:10.6490410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6490710Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6490720Z 
2025-01-09T18:24:10.6490790Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6490920Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6490990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6491140Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6491190Z >       sim.iterate(10)
2025-01-09T18:24:10.6491190Z 
2025-01-09T18:24:10.6491260Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6491350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6491420Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6491550Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6491720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6491720Z 
2025-01-09T18:24:10.6491940Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x319881820>
2025-01-09T18:24:10.6492110Z simulation_state = <tardis.model.base.SimulationState object at 0x13d6f0ad0>
2025-01-09T18:24:10.6492290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x156aeee70>
2025-01-09T18:24:10.6492500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x156e0cef0>
2025-01-09T18:24:10.6492620Z plasma = <tardis.plasma.base.BasePlasma object at 0x156d57ec0>
2025-01-09T18:24:10.6492730Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6492730Z 
2025-01-09T18:24:10.6492790Z     def initialize_transport_state(
2025-01-09T18:24:10.6492840Z         self,
2025-01-09T18:24:10.6492900Z         simulation_state,
2025-01-09T18:24:10.6492950Z         opacity_state,
2025-01-09T18:24:10.6493000Z         macro_atom_state,
2025-01-09T18:24:10.6493050Z         plasma,
2025-01-09T18:24:10.6493100Z         no_of_packets,
2025-01-09T18:24:10.6493160Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6493210Z         iteration=0,
2025-01-09T18:24:10.6493250Z     ):
2025-01-09T18:24:10.6493350Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6493430Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6493470Z         else:
2025-01-09T18:24:10.6493530Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6493570Z     
2025-01-09T18:24:10.6493680Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6493750Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6493800Z         )
2025-01-09T18:24:10.6493840Z     
2025-01-09T18:24:10.6493940Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6494020Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6494400Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6494400Z 
2025-01-09T18:24:10.6494490Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6494640Z _______ ERROR at setup of test_opacity_state_to_numba[downbranch-False] ________
2025-01-09T18:24:10.6494710Z 
2025-01-09T18:24:10.6495210Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6495490Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6495500Z 
2025-01-09T18:24:10.6495560Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6495690Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6495760Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6495900Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6495950Z >       sim.iterate(10)
2025-01-09T18:24:10.6495960Z 
2025-01-09T18:24:10.6496030Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6496130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6496210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6496340Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6496430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6496440Z 
2025-01-09T18:24:10.6496650Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x319881820>
2025-01-09T18:24:10.6496830Z simulation_state = <tardis.model.base.SimulationState object at 0x13d6f0ad0>
2025-01-09T18:24:10.6497090Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x156aeee70>
2025-01-09T18:24:10.6497310Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x156e0cef0>
2025-01-09T18:24:10.6497430Z plasma = <tardis.plasma.base.BasePlasma object at 0x156d57ec0>
2025-01-09T18:24:10.6497530Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6497540Z 
2025-01-09T18:24:10.6497600Z     def initialize_transport_state(
2025-01-09T18:24:10.6497650Z         self,
2025-01-09T18:24:10.6497700Z         simulation_state,
2025-01-09T18:24:10.6497750Z         opacity_state,
2025-01-09T18:24:10.6497800Z         macro_atom_state,
2025-01-09T18:24:10.6497850Z         plasma,
2025-01-09T18:24:10.6497900Z         no_of_packets,
2025-01-09T18:24:10.6497950Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6498000Z         iteration=0,
2025-01-09T18:24:10.6498050Z     ):
2025-01-09T18:24:10.6498140Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6498220Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6498260Z         else:
2025-01-09T18:24:10.6498320Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6498360Z     
2025-01-09T18:24:10.6498470Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6498540Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6498590Z         )
2025-01-09T18:24:10.6498630Z     
2025-01-09T18:24:10.6498730Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6498810Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6499180Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6499180Z 
2025-01-09T18:24:10.6499280Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6499420Z ________ ERROR at setup of test_opacity_state_to_numba[downbranch-True] ________
2025-01-09T18:24:10.6499420Z 
2025-01-09T18:24:10.6503910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6505250Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6505270Z 
2025-01-09T18:24:10.6505470Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6505830Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6506190Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6506590Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6506770Z >       sim.iterate(10)
2025-01-09T18:24:10.6506790Z 
2025-01-09T18:24:10.6507000Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6507260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6507510Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6507890Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6508170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6508180Z 
2025-01-09T18:24:10.6508740Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x319881820>
2025-01-09T18:24:10.6509210Z simulation_state = <tardis.model.base.SimulationState object at 0x13d6f0ad0>
2025-01-09T18:24:10.6509740Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x156aeee70>
2025-01-09T18:24:10.6510340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x156e0cef0>
2025-01-09T18:24:10.6510710Z plasma = <tardis.plasma.base.BasePlasma object at 0x156d57ec0>
2025-01-09T18:24:10.6512080Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6512100Z 
2025-01-09T18:24:10.6512290Z     def initialize_transport_state(
2025-01-09T18:24:10.6512470Z         self,
2025-01-09T18:24:10.6512640Z         simulation_state,
2025-01-09T18:24:10.6512840Z         opacity_state,
2025-01-09T18:24:10.6513010Z         macro_atom_state,
2025-01-09T18:24:10.6513190Z         plasma,
2025-01-09T18:24:10.6513360Z         no_of_packets,
2025-01-09T18:24:10.6513540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6513700Z         iteration=0,
2025-01-09T18:24:10.6513850Z     ):
2025-01-09T18:24:10.6514130Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6514400Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6514560Z         else:
2025-01-09T18:24:10.6514730Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6514860Z     
2025-01-09T18:24:10.6515160Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6515390Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6515550Z         )
2025-01-09T18:24:10.6515720Z     
2025-01-09T18:24:10.6516000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6516250Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6517330Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6517340Z 
2025-01-09T18:24:10.6517590Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6517950Z ____________ ERROR at setup of test_calculate_sobolev_line_opacity _____________
2025-01-09T18:24:10.6517960Z 
2025-01-09T18:24:10.6519370Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6520170Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6520190Z 
2025-01-09T18:24:10.6520490Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6521750Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6521840Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6522010Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6522080Z >       sim.iterate(10)
2025-01-09T18:24:10.6522090Z 
2025-01-09T18:24:10.6522160Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6522260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6522340Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6522460Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6522560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6522560Z 
2025-01-09T18:24:10.6522770Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x318b4e030>
2025-01-09T18:24:10.6522930Z simulation_state = <tardis.model.base.SimulationState object at 0x156890050>
2025-01-09T18:24:10.6523110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x318b4c8f0>
2025-01-09T18:24:10.6523330Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x318aa0f20>
2025-01-09T18:24:10.6523460Z plasma = <tardis.plasma.base.BasePlasma object at 0x14ce548f0>
2025-01-09T18:24:10.6523560Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6523570Z 
2025-01-09T18:24:10.6523630Z     def initialize_transport_state(
2025-01-09T18:24:10.6523690Z         self,
2025-01-09T18:24:10.6523740Z         simulation_state,
2025-01-09T18:24:10.6523910Z         opacity_state,
2025-01-09T18:24:10.6523970Z         macro_atom_state,
2025-01-09T18:24:10.6524010Z         plasma,
2025-01-09T18:24:10.6524060Z         no_of_packets,
2025-01-09T18:24:10.6524130Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6524180Z         iteration=0,
2025-01-09T18:24:10.6524220Z     ):
2025-01-09T18:24:10.6524320Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6524400Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6524440Z         else:
2025-01-09T18:24:10.6524500Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6524550Z     
2025-01-09T18:24:10.6524660Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6524730Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6524780Z         )
2025-01-09T18:24:10.6524820Z     
2025-01-09T18:24:10.6524930Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6525010Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6525400Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6525400Z 
2025-01-09T18:24:10.6525490Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6525620Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.6525990Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.6526370Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.6526490Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.6526900Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.6527040Z ________________ ERROR at setup of test_calculate_beta_sobolevs ________________
2025-01-09T18:24:10.6527040Z 
2025-01-09T18:24:10.6527550Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6527920Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6527920Z 
2025-01-09T18:24:10.6527990Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6528120Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6528200Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6528340Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6528390Z >       sim.iterate(10)
2025-01-09T18:24:10.6528400Z 
2025-01-09T18:24:10.6528470Z tardis/opacities/tests/conftest.py:10: 
2025-01-09T18:24:10.6528560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6528640Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6528760Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6528850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6528860Z 
2025-01-09T18:24:10.6529060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x318b4e030>
2025-01-09T18:24:10.6529220Z simulation_state = <tardis.model.base.SimulationState object at 0x156890050>
2025-01-09T18:24:10.6529390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x318b4c8f0>
2025-01-09T18:24:10.6529610Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x318aa0f20>
2025-01-09T18:24:10.6529800Z plasma = <tardis.plasma.base.BasePlasma object at 0x14ce548f0>
2025-01-09T18:24:10.6530030Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6530040Z 
2025-01-09T18:24:10.6530210Z     def initialize_transport_state(
2025-01-09T18:24:10.6530260Z         self,
2025-01-09T18:24:10.6530370Z         simulation_state,
2025-01-09T18:24:10.6530490Z         opacity_state,
2025-01-09T18:24:10.6530550Z         macro_atom_state,
2025-01-09T18:24:10.6530790Z         plasma,
2025-01-09T18:24:10.6530840Z         no_of_packets,
2025-01-09T18:24:10.6530950Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6531050Z         iteration=0,
2025-01-09T18:24:10.6531150Z     ):
2025-01-09T18:24:10.6531250Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6542170Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6542270Z         else:
2025-01-09T18:24:10.6542330Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6542380Z     
2025-01-09T18:24:10.6542510Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6542580Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6567180Z         )
2025-01-09T18:24:10.6567380Z     
2025-01-09T18:24:10.6567510Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6567590Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6568020Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6568030Z 
2025-01-09T18:24:10.6568130Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6568270Z ______________ ERROR at setup of test_hdf_plasma[number_density] _______________
2025-01-09T18:24:10.6568280Z 
2025-01-09T18:24:10.6568790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6569090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6569090Z 
2025-01-09T18:24:10.6569160Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6569540Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6569630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6569770Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6569840Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6569890Z >       sim.run_final()
2025-01-09T18:24:10.6569900Z 
2025-01-09T18:24:10.6569950Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6570050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6570120Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6570240Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6570310Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6570440Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6570530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6570530Z 
2025-01-09T18:24:10.6570770Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6570940Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6571110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6571330Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6571460Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6571570Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6571700Z 
2025-01-09T18:24:10.6571770Z     def initialize_transport_state(
2025-01-09T18:24:10.6571820Z         self,
2025-01-09T18:24:10.6571870Z         simulation_state,
2025-01-09T18:24:10.6571920Z         opacity_state,
2025-01-09T18:24:10.6571980Z         macro_atom_state,
2025-01-09T18:24:10.6572030Z         plasma,
2025-01-09T18:24:10.6572080Z         no_of_packets,
2025-01-09T18:24:10.6572140Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6572330Z         iteration=0,
2025-01-09T18:24:10.6572370Z     ):
2025-01-09T18:24:10.6572480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6572560Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6572620Z         else:
2025-01-09T18:24:10.6572680Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6572720Z     
2025-01-09T18:24:10.6572830Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6572910Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6572970Z         )
2025-01-09T18:24:10.6573030Z     
2025-01-09T18:24:10.6573130Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6573210Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6573600Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6573610Z 
2025-01-09T18:24:10.6573700Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6573840Z _________________ ERROR at setup of test_hdf_plasma[beta_rad] __________________
2025-01-09T18:24:10.6573840Z 
2025-01-09T18:24:10.6575500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6575930Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6575940Z 
2025-01-09T18:24:10.6576000Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6576130Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6576300Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6576440Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6576510Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6576560Z >       sim.run_final()
2025-01-09T18:24:10.6576560Z 
2025-01-09T18:24:10.6576620Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6576790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6576880Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6576990Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6577080Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6577210Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6577300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6577300Z 
2025-01-09T18:24:10.6577510Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6577670Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6577840Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6578060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6578180Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6578290Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6578290Z 
2025-01-09T18:24:10.6578360Z     def initialize_transport_state(
2025-01-09T18:24:10.6578640Z         self,
2025-01-09T18:24:10.6578690Z         simulation_state,
2025-01-09T18:24:10.6578760Z         opacity_state,
2025-01-09T18:24:10.6578820Z         macro_atom_state,
2025-01-09T18:24:10.6578870Z         plasma,
2025-01-09T18:24:10.6578910Z         no_of_packets,
2025-01-09T18:24:10.6578980Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6579030Z         iteration=0,
2025-01-09T18:24:10.6579070Z     ):
2025-01-09T18:24:10.6579170Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6579250Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6579290Z         else:
2025-01-09T18:24:10.6579350Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6579390Z     
2025-01-09T18:24:10.6579500Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6579570Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6579620Z         )
2025-01-09T18:24:10.6579660Z     
2025-01-09T18:24:10.6579770Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6579850Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6580230Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6580240Z 
2025-01-09T18:24:10.6580330Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6580470Z ______ ERROR at setup of test_hdf_plasma[general_level_boltzmann_factor] _______
2025-01-09T18:24:10.6580470Z 
2025-01-09T18:24:10.6580960Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6581240Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6581250Z 
2025-01-09T18:24:10.6581320Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6581440Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6581510Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6581650Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6581930Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6581990Z >       sim.run_final()
2025-01-09T18:24:10.6581990Z 
2025-01-09T18:24:10.6582050Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6582140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6582210Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6582330Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6582400Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6582520Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6582610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6582620Z 
2025-01-09T18:24:10.6582820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6582980Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6583150Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6583370Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6583490Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6583600Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6583600Z 
2025-01-09T18:24:10.6583680Z     def initialize_transport_state(
2025-01-09T18:24:10.6583730Z         self,
2025-01-09T18:24:10.6583780Z         simulation_state,
2025-01-09T18:24:10.6583950Z         opacity_state,
2025-01-09T18:24:10.6584000Z         macro_atom_state,
2025-01-09T18:24:10.6584050Z         plasma,
2025-01-09T18:24:10.6584100Z         no_of_packets,
2025-01-09T18:24:10.6584160Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6584210Z         iteration=0,
2025-01-09T18:24:10.6584260Z     ):
2025-01-09T18:24:10.6584360Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6584430Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6584480Z         else:
2025-01-09T18:24:10.6584530Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6584580Z     
2025-01-09T18:24:10.6584690Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6584770Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6584820Z         )
2025-01-09T18:24:10.6584860Z     
2025-01-09T18:24:10.6584970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6585060Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6585470Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6585480Z 
2025-01-09T18:24:10.6585570Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6585710Z __________ ERROR at setup of test_hdf_plasma[level_boltzmann_factor] ___________
2025-01-09T18:24:10.6585720Z 
2025-01-09T18:24:10.6586220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6586510Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6586520Z 
2025-01-09T18:24:10.6586590Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6586730Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6586800Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6586940Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6587010Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6587130Z >       sim.run_final()
2025-01-09T18:24:10.6587140Z 
2025-01-09T18:24:10.6587190Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6587280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6587370Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6587490Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6587560Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6587680Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6587770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6587780Z 
2025-01-09T18:24:10.6587980Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6588140Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6588310Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6588530Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6588650Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6588760Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6588760Z 
2025-01-09T18:24:10.6588830Z     def initialize_transport_state(
2025-01-09T18:24:10.6588870Z         self,
2025-01-09T18:24:10.6588930Z         simulation_state,
2025-01-09T18:24:10.6588980Z         opacity_state,
2025-01-09T18:24:10.6589030Z         macro_atom_state,
2025-01-09T18:24:10.6589170Z         plasma,
2025-01-09T18:24:10.6589230Z         no_of_packets,
2025-01-09T18:24:10.6589290Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6589340Z         iteration=0,
2025-01-09T18:24:10.6589380Z     ):
2025-01-09T18:24:10.6589480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6589560Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6589600Z         else:
2025-01-09T18:24:10.6589660Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6589700Z     
2025-01-09T18:24:10.6589810Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6589880Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6589930Z         )
2025-01-09T18:24:10.6589980Z     
2025-01-09T18:24:10.6590080Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6590160Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6590530Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6590540Z 
2025-01-09T18:24:10.6590630Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6590770Z ________ ERROR at setup of test_hdf_plasma[stimulated_emission_factor] _________
2025-01-09T18:24:10.6590770Z 
2025-01-09T18:24:10.6591270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6591550Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6591550Z 
2025-01-09T18:24:10.6591620Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6591740Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6591820Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6591960Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6592020Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6592070Z >       sim.run_final()
2025-01-09T18:24:10.6592140Z 
2025-01-09T18:24:10.6592200Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6592290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6592360Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6592480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6592550Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6592670Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6592760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6592760Z 
2025-01-09T18:24:10.6592970Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6593130Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6593290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6593510Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6593640Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6593750Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6593750Z 
2025-01-09T18:24:10.6593810Z     def initialize_transport_state(
2025-01-09T18:24:10.6593860Z         self,
2025-01-09T18:24:10.6593910Z         simulation_state,
2025-01-09T18:24:10.6593960Z         opacity_state,
2025-01-09T18:24:10.6594020Z         macro_atom_state,
2025-01-09T18:24:10.6594060Z         plasma,
2025-01-09T18:24:10.6594120Z         no_of_packets,
2025-01-09T18:24:10.6594230Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6594280Z         iteration=0,
2025-01-09T18:24:10.6594320Z     ):
2025-01-09T18:24:10.6594430Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6594510Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6594560Z         else:
2025-01-09T18:24:10.6594610Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6594660Z     
2025-01-09T18:24:10.6594770Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6594840Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6594890Z         )
2025-01-09T18:24:10.6594930Z     
2025-01-09T18:24:10.6595030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6595100Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6595480Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6595490Z 
2025-01-09T18:24:10.6595580Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6595720Z ________________ ERROR at setup of test_hdf_plasma[t_electrons] ________________
2025-01-09T18:24:10.6595720Z 
2025-01-09T18:24:10.6596220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6596510Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6596510Z 
2025-01-09T18:24:10.6596590Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6596710Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6596780Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6596920Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6596990Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6597040Z >       sim.run_final()
2025-01-09T18:24:10.6597040Z 
2025-01-09T18:24:10.6597100Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6597190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6597350Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6597470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6597540Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6597660Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6597750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6597750Z 
2025-01-09T18:24:10.6597960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6598120Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6598290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6598510Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6598630Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6598740Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6598750Z 
2025-01-09T18:24:10.6598810Z     def initialize_transport_state(
2025-01-09T18:24:10.6598860Z         self,
2025-01-09T18:24:10.6599300Z         simulation_state,
2025-01-09T18:24:10.6599370Z         opacity_state,
2025-01-09T18:24:10.6599420Z         macro_atom_state,
2025-01-09T18:24:10.6599470Z         plasma,
2025-01-09T18:24:10.6599520Z         no_of_packets,
2025-01-09T18:24:10.6599590Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6599640Z         iteration=0,
2025-01-09T18:24:10.6599960Z     ):
2025-01-09T18:24:10.6600050Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6600130Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6600170Z         else:
2025-01-09T18:24:10.6600230Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6600280Z     
2025-01-09T18:24:10.6600390Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6600460Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6600500Z         )
2025-01-09T18:24:10.6600560Z     
2025-01-09T18:24:10.6600660Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6600750Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6601150Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6601150Z 
2025-01-09T18:24:10.6601250Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6601390Z _______________ ERROR at setup of test_hdf_plasma[wavelength_cm] _______________
2025-01-09T18:24:10.6601400Z 
2025-01-09T18:24:10.6601910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6602200Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6602200Z 
2025-01-09T18:24:10.6602270Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6602390Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6602470Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6602610Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6602680Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6602730Z >       sim.run_final()
2025-01-09T18:24:10.6602730Z 
2025-01-09T18:24:10.6602790Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6602880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6602950Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6603510Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6603580Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6603700Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6603790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6603800Z 
2025-01-09T18:24:10.6604000Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6604160Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6604330Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6604550Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6604670Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6604780Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6604780Z 
2025-01-09T18:24:10.6604850Z     def initialize_transport_state(
2025-01-09T18:24:10.6604910Z         self,
2025-01-09T18:24:10.6604970Z         simulation_state,
2025-01-09T18:24:10.6605020Z         opacity_state,
2025-01-09T18:24:10.6605070Z         macro_atom_state,
2025-01-09T18:24:10.6605120Z         plasma,
2025-01-09T18:24:10.6605170Z         no_of_packets,
2025-01-09T18:24:10.6605230Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6605280Z         iteration=0,
2025-01-09T18:24:10.6605320Z     ):
2025-01-09T18:24:10.6605420Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6605570Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6605630Z         else:
2025-01-09T18:24:10.6605690Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6605810Z     
2025-01-09T18:24:10.6605920Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6605990Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6606050Z         )
2025-01-09T18:24:10.6606090Z     
2025-01-09T18:24:10.6606190Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6606260Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6606650Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6606650Z 
2025-01-09T18:24:10.6606740Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6606880Z __________ ERROR at setup of test_hdf_plasma[lines_lower_level_index] __________
2025-01-09T18:24:10.6606880Z 
2025-01-09T18:24:10.6607380Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6607660Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6607670Z 
2025-01-09T18:24:10.6607730Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6607860Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6607930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6608070Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6608130Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6608190Z >       sim.run_final()
2025-01-09T18:24:10.6608190Z 
2025-01-09T18:24:10.6608250Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6608340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6622140Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6622730Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6623340Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6623680Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6624270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6624280Z 
2025-01-09T18:24:10.6624840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6625260Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6625720Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6626300Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6626630Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6626930Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6626930Z 
2025-01-09T18:24:10.6627120Z     def initialize_transport_state(
2025-01-09T18:24:10.6627280Z         self,
2025-01-09T18:24:10.6627440Z         simulation_state,
2025-01-09T18:24:10.6627600Z         opacity_state,
2025-01-09T18:24:10.6627760Z         macro_atom_state,
2025-01-09T18:24:10.6627910Z         plasma,
2025-01-09T18:24:10.6628060Z         no_of_packets,
2025-01-09T18:24:10.6628240Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6628390Z         iteration=0,
2025-01-09T18:24:10.6628540Z     ):
2025-01-09T18:24:10.6628810Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6629010Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6629380Z         else:
2025-01-09T18:24:10.6629540Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6629690Z     
2025-01-09T18:24:10.6629970Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6630170Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6630320Z         )
2025-01-09T18:24:10.6630460Z     
2025-01-09T18:24:10.6630740Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6630950Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6632020Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6632050Z 
2025-01-09T18:24:10.6632300Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6632660Z ______________ ERROR at setup of test_hdf_plasma[ionization_data] ______________
2025-01-09T18:24:10.6632670Z 
2025-01-09T18:24:10.6634060Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6634820Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6634830Z 
2025-01-09T18:24:10.6635020Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6635350Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6635550Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6635930Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6636110Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6636270Z >       sim.run_final()
2025-01-09T18:24:10.6636270Z 
2025-01-09T18:24:10.6636450Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6636700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6636910Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6637210Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6637410Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6637740Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6638190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6638200Z 
2025-01-09T18:24:10.6638750Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6639160Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6639660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6640230Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6640570Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6640870Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6640870Z 
2025-01-09T18:24:10.6641060Z     def initialize_transport_state(
2025-01-09T18:24:10.6641210Z         self,
2025-01-09T18:24:10.6641380Z         simulation_state,
2025-01-09T18:24:10.6641540Z         opacity_state,
2025-01-09T18:24:10.6641710Z         macro_atom_state,
2025-01-09T18:24:10.6641870Z         plasma,
2025-01-09T18:24:10.6642020Z         no_of_packets,
2025-01-09T18:24:10.6642200Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6642350Z         iteration=0,
2025-01-09T18:24:10.6642500Z     ):
2025-01-09T18:24:10.6642760Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6642970Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6643110Z         else:
2025-01-09T18:24:10.6643300Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6643620Z     
2025-01-09T18:24:10.6643910Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6644110Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6644260Z         )
2025-01-09T18:24:10.6644400Z     
2025-01-09T18:24:10.6644670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6644880Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6645930Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6645940Z 
2025-01-09T18:24:10.6646200Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6646540Z __________________ ERROR at setup of test_hdf_plasma[density] __________________
2025-01-09T18:24:10.6646550Z 
2025-01-09T18:24:10.6647930Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6648680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6648700Z 
2025-01-09T18:24:10.6648890Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6649230Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6649430Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6649810Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6649990Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6650160Z >       sim.run_final()
2025-01-09T18:24:10.6650160Z 
2025-01-09T18:24:10.6650330Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6650580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6650790Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6651090Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6651290Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6651610Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6651850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6651970Z 
2025-01-09T18:24:10.6652520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6652940Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6653390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6653960Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6654280Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6654590Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6654600Z 
2025-01-09T18:24:10.6654780Z     def initialize_transport_state(
2025-01-09T18:24:10.6654930Z         self,
2025-01-09T18:24:10.6655100Z         simulation_state,
2025-01-09T18:24:10.6655250Z         opacity_state,
2025-01-09T18:24:10.6655420Z         macro_atom_state,
2025-01-09T18:24:10.6655840Z         plasma,
2025-01-09T18:24:10.6655970Z         no_of_packets,
2025-01-09T18:24:10.6656030Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6656080Z         iteration=0,
2025-01-09T18:24:10.6656120Z     ):
2025-01-09T18:24:10.6656240Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6656310Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6656360Z         else:
2025-01-09T18:24:10.6656420Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6656470Z     
2025-01-09T18:24:10.6656580Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6657130Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6657170Z         )
2025-01-09T18:24:10.6657220Z     
2025-01-09T18:24:10.6657330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6657410Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6657940Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6657950Z 
2025-01-09T18:24:10.6658100Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6658310Z ________________ ERROR at setup of test_hdf_plasma[atomic_mass] ________________
2025-01-09T18:24:10.6658310Z 
2025-01-09T18:24:10.6658880Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6659170Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6659170Z 
2025-01-09T18:24:10.6659300Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6659500Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6659630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6659830Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6659900Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6660010Z >       sim.run_final()
2025-01-09T18:24:10.6660010Z 
2025-01-09T18:24:10.6660120Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6660230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6666020Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6666160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6666240Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6666360Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6666450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6666460Z 
2025-01-09T18:24:10.6666920Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6667080Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6667260Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6667470Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6667600Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6667710Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6667720Z 
2025-01-09T18:24:10.6667780Z     def initialize_transport_state(
2025-01-09T18:24:10.6667830Z         self,
2025-01-09T18:24:10.6667890Z         simulation_state,
2025-01-09T18:24:10.6667940Z         opacity_state,
2025-01-09T18:24:10.6667990Z         macro_atom_state,
2025-01-09T18:24:10.6668040Z         plasma,
2025-01-09T18:24:10.6668090Z         no_of_packets,
2025-01-09T18:24:10.6668150Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6668200Z         iteration=0,
2025-01-09T18:24:10.6668250Z     ):
2025-01-09T18:24:10.6668350Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6668420Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6668460Z         else:
2025-01-09T18:24:10.6668520Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6668560Z     
2025-01-09T18:24:10.6668670Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6668750Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6668800Z         )
2025-01-09T18:24:10.6668910Z     
2025-01-09T18:24:10.6669020Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6669090Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6669480Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6669480Z 
2025-01-09T18:24:10.6669580Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6669710Z ___________ ERROR at setup of test_hdf_plasma[level_number_density] ____________
2025-01-09T18:24:10.6669720Z 
2025-01-09T18:24:10.6670220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6670500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6670510Z 
2025-01-09T18:24:10.6670570Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6670700Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6670770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6670910Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6670970Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6671030Z >       sim.run_final()
2025-01-09T18:24:10.6671030Z 
2025-01-09T18:24:10.6671090Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6671190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6671270Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6671380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6671450Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6671570Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6671670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6671670Z 
2025-01-09T18:24:10.6671870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6672080Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6672250Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6672470Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6672590Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6672700Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6672700Z 
2025-01-09T18:24:10.6672770Z     def initialize_transport_state(
2025-01-09T18:24:10.6672820Z         self,
2025-01-09T18:24:10.6672880Z         simulation_state,
2025-01-09T18:24:10.6672930Z         opacity_state,
2025-01-09T18:24:10.6672990Z         macro_atom_state,
2025-01-09T18:24:10.6673040Z         plasma,
2025-01-09T18:24:10.6673090Z         no_of_packets,
2025-01-09T18:24:10.6673150Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6673200Z         iteration=0,
2025-01-09T18:24:10.6673250Z     ):
2025-01-09T18:24:10.6673350Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6673420Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6673470Z         else:
2025-01-09T18:24:10.6673540Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6673590Z     
2025-01-09T18:24:10.6673700Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6673770Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6673820Z         )
2025-01-09T18:24:10.6673860Z     
2025-01-09T18:24:10.6673970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6674130Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6674540Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6674540Z 
2025-01-09T18:24:10.6674640Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6674780Z __________ ERROR at setup of test_hdf_plasma[lines_upper_level_index] __________
2025-01-09T18:24:10.6674780Z 
2025-01-09T18:24:10.6675360Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6675650Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6675660Z 
2025-01-09T18:24:10.6675740Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6675860Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6675930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6676070Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6676140Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6676200Z >       sim.run_final()
2025-01-09T18:24:10.6676200Z 
2025-01-09T18:24:10.6676260Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6676380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6676460Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6676570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6676650Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6676790Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6676880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6676890Z 
2025-01-09T18:24:10.6677090Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6677250Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6677530Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6677750Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6677870Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6677980Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6677980Z 
2025-01-09T18:24:10.6678050Z     def initialize_transport_state(
2025-01-09T18:24:10.6678100Z         self,
2025-01-09T18:24:10.6678150Z         simulation_state,
2025-01-09T18:24:10.6678200Z         opacity_state,
2025-01-09T18:24:10.6678260Z         macro_atom_state,
2025-01-09T18:24:10.6678310Z         plasma,
2025-01-09T18:24:10.6678360Z         no_of_packets,
2025-01-09T18:24:10.6678420Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6678460Z         iteration=0,
2025-01-09T18:24:10.6678510Z     ):
2025-01-09T18:24:10.6678600Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6678680Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6678730Z         else:
2025-01-09T18:24:10.6678790Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6678830Z     
2025-01-09T18:24:10.6678940Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6679010Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6679050Z         )
2025-01-09T18:24:10.6679100Z     
2025-01-09T18:24:10.6679200Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6679270Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6679730Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6679740Z 
2025-01-09T18:24:10.6679830Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6679950Z ____________________ ERROR at setup of test_hdf_plasma[nu] _____________________
2025-01-09T18:24:10.6679960Z 
2025-01-09T18:24:10.6680460Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6680750Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6680750Z 
2025-01-09T18:24:10.6680820Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6680940Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6681040Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6681190Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6681250Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6681310Z >       sim.run_final()
2025-01-09T18:24:10.6681310Z 
2025-01-09T18:24:10.6681370Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6681460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6681530Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6681650Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6681720Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6681840Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6681930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6681940Z 
2025-01-09T18:24:10.6682140Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6682320Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6682490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6682780Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6682900Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6683010Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6683010Z 
2025-01-09T18:24:10.6683070Z     def initialize_transport_state(
2025-01-09T18:24:10.6683130Z         self,
2025-01-09T18:24:10.6683200Z         simulation_state,
2025-01-09T18:24:10.6683250Z         opacity_state,
2025-01-09T18:24:10.6683300Z         macro_atom_state,
2025-01-09T18:24:10.6683350Z         plasma,
2025-01-09T18:24:10.6683420Z         no_of_packets,
2025-01-09T18:24:10.6683500Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6683560Z         iteration=0,
2025-01-09T18:24:10.6683620Z     ):
2025-01-09T18:24:10.6683730Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6683820Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6683880Z         else:
2025-01-09T18:24:10.6683930Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6683980Z     
2025-01-09T18:24:10.6684090Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6684160Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6684210Z         )
2025-01-09T18:24:10.6684250Z     
2025-01-09T18:24:10.6684370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6684440Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6684840Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6685250Z 
2025-01-09T18:24:10.6685350Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6685480Z _______________ ERROR at setup of test_hdf_plasma[beta_sobolev] ________________
2025-01-09T18:24:10.6685490Z 
2025-01-09T18:24:10.6686020Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6686310Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6686310Z 
2025-01-09T18:24:10.6686380Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6686500Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6686580Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6686720Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6686790Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6686840Z >       sim.run_final()
2025-01-09T18:24:10.6686840Z 
2025-01-09T18:24:10.6686900Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6686990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6687060Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6687170Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6687250Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6687370Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6687450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6687460Z 
2025-01-09T18:24:10.6687660Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6687820Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6687990Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6688210Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6688550Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6688660Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6688660Z 
2025-01-09T18:24:10.6688730Z     def initialize_transport_state(
2025-01-09T18:24:10.6688780Z         self,
2025-01-09T18:24:10.6688830Z         simulation_state,
2025-01-09T18:24:10.6688880Z         opacity_state,
2025-01-09T18:24:10.6688940Z         macro_atom_state,
2025-01-09T18:24:10.6688980Z         plasma,
2025-01-09T18:24:10.6689030Z         no_of_packets,
2025-01-09T18:24:10.6689090Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6689140Z         iteration=0,
2025-01-09T18:24:10.6689190Z     ):
2025-01-09T18:24:10.6689290Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6689360Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6689400Z         else:
2025-01-09T18:24:10.6689470Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6689510Z     
2025-01-09T18:24:10.6689620Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6689690Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6689740Z         )
2025-01-09T18:24:10.6689780Z     
2025-01-09T18:24:10.6689900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6689980Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6690370Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6690450Z 
2025-01-09T18:24:10.6690550Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6690690Z _________ ERROR at setup of test_hdf_plasma[transition_probabilities] __________
2025-01-09T18:24:10.6690690Z 
2025-01-09T18:24:10.6691210Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6691500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6691520Z 
2025-01-09T18:24:10.6691600Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6691740Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6691820Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6691960Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6692030Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6692090Z >       sim.run_final()
2025-01-09T18:24:10.6692090Z 
2025-01-09T18:24:10.6692140Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6692240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6692320Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6692430Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6692490Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6692630Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6692720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6692730Z 
2025-01-09T18:24:10.6692930Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6693090Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6693270Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6693490Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6693610Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6693790Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6693800Z 
2025-01-09T18:24:10.6693870Z     def initialize_transport_state(
2025-01-09T18:24:10.6693910Z         self,
2025-01-09T18:24:10.6693970Z         simulation_state,
2025-01-09T18:24:10.6694020Z         opacity_state,
2025-01-09T18:24:10.6694080Z         macro_atom_state,
2025-01-09T18:24:10.6694120Z         plasma,
2025-01-09T18:24:10.6694170Z         no_of_packets,
2025-01-09T18:24:10.6694230Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6694280Z         iteration=0,
2025-01-09T18:24:10.6694320Z     ):
2025-01-09T18:24:10.6694420Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6694500Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6694560Z         else:
2025-01-09T18:24:10.6694620Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6694660Z     
2025-01-09T18:24:10.6694770Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6694840Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6694890Z         )
2025-01-09T18:24:10.6694930Z     
2025-01-09T18:24:10.6695040Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6695110Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6695510Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6695520Z 
2025-01-09T18:24:10.6695600Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6695820Z ____________________ ERROR at setup of test_hdf_plasma[phi] ____________________
2025-01-09T18:24:10.6695820Z 
2025-01-09T18:24:10.6696310Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6696600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6696600Z 
2025-01-09T18:24:10.6696670Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6696790Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6696870Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6697010Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6697070Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6697130Z >       sim.run_final()
2025-01-09T18:24:10.6697130Z 
2025-01-09T18:24:10.6697190Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6697280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6697360Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6697470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6697540Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6697670Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6697750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6697760Z 
2025-01-09T18:24:10.6697960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6698110Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6698290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6698510Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6698630Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6698740Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6698790Z 
2025-01-09T18:24:10.6698860Z     def initialize_transport_state(
2025-01-09T18:24:10.6698910Z         self,
2025-01-09T18:24:10.6698960Z         simulation_state,
2025-01-09T18:24:10.6699020Z         opacity_state,
2025-01-09T18:24:10.6699070Z         macro_atom_state,
2025-01-09T18:24:10.6699120Z         plasma,
2025-01-09T18:24:10.6699170Z         no_of_packets,
2025-01-09T18:24:10.6699240Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6699280Z         iteration=0,
2025-01-09T18:24:10.6699330Z     ):
2025-01-09T18:24:10.6699430Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6699500Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6699550Z         else:
2025-01-09T18:24:10.6699610Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6699650Z     
2025-01-09T18:24:10.6699760Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6699840Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6699880Z         )
2025-01-09T18:24:10.6699930Z     
2025-01-09T18:24:10.6700030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6700100Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6700480Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6700480Z 
2025-01-09T18:24:10.6700570Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6700710Z ____________ ERROR at setup of test_hdf_plasma[electron_densities] _____________
2025-01-09T18:24:10.6700760Z 
2025-01-09T18:24:10.6701250Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6701530Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6701540Z 
2025-01-09T18:24:10.6701600Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6701730Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6701800Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6701950Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6702010Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6702060Z >       sim.run_final()
2025-01-09T18:24:10.6702060Z 
2025-01-09T18:24:10.6702120Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6702210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6702290Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6703120Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6703240Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6703370Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6703460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6703470Z 
2025-01-09T18:24:10.6703670Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6703830Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6704000Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6704370Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6704500Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6704610Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6704610Z 
2025-01-09T18:24:10.6704680Z     def initialize_transport_state(
2025-01-09T18:24:10.6704720Z         self,
2025-01-09T18:24:10.6704930Z         simulation_state,
2025-01-09T18:24:10.6704990Z         opacity_state,
2025-01-09T18:24:10.6705040Z         macro_atom_state,
2025-01-09T18:24:10.6705080Z         plasma,
2025-01-09T18:24:10.6705140Z         no_of_packets,
2025-01-09T18:24:10.6705190Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6705240Z         iteration=0,
2025-01-09T18:24:10.6705290Z     ):
2025-01-09T18:24:10.6705380Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6705450Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6705500Z         else:
2025-01-09T18:24:10.6705560Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6705610Z     
2025-01-09T18:24:10.6705710Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6705780Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6705830Z         )
2025-01-09T18:24:10.6705870Z     
2025-01-09T18:24:10.6705980Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6706070Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6706460Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6706460Z 
2025-01-09T18:24:10.6706550Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6706680Z ___________________ ERROR at setup of test_hdf_plasma[t_rad] ___________________
2025-01-09T18:24:10.6706690Z 
2025-01-09T18:24:10.6707180Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6707810Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6707820Z 
2025-01-09T18:24:10.6707890Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6708160Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6708240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6708380Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6708450Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6708500Z >       sim.run_final()
2025-01-09T18:24:10.6708500Z 
2025-01-09T18:24:10.6708560Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6708650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6708720Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6709920Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6710000Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6710120Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6710220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6710220Z 
2025-01-09T18:24:10.6710430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6710580Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6710760Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6710970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6711100Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6711210Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6711220Z 
2025-01-09T18:24:10.6711280Z     def initialize_transport_state(
2025-01-09T18:24:10.6711330Z         self,
2025-01-09T18:24:10.6711380Z         simulation_state,
2025-01-09T18:24:10.6711430Z         opacity_state,
2025-01-09T18:24:10.6711890Z         macro_atom_state,
2025-01-09T18:24:10.6711940Z         plasma,
2025-01-09T18:24:10.6711990Z         no_of_packets,
2025-01-09T18:24:10.6712060Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6712100Z         iteration=0,
2025-01-09T18:24:10.6712150Z     ):
2025-01-09T18:24:10.6712250Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6712320Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6712370Z         else:
2025-01-09T18:24:10.6712420Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6712470Z     
2025-01-09T18:24:10.6712580Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6712660Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6712700Z         )
2025-01-09T18:24:10.6712750Z     
2025-01-09T18:24:10.6712850Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6712930Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6713310Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6713310Z 
2025-01-09T18:24:10.6713400Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6713540Z ______________ ERROR at setup of test_hdf_plasma[selected_atoms] _______________
2025-01-09T18:24:10.6713540Z 
2025-01-09T18:24:10.6714040Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6714390Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6714400Z 
2025-01-09T18:24:10.6714460Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6714590Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6714670Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6714810Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6714880Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6714930Z >       sim.run_final()
2025-01-09T18:24:10.6714930Z 
2025-01-09T18:24:10.6714990Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6715100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6715180Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6715290Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6715360Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6715480Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6715570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6715570Z 
2025-01-09T18:24:10.6715780Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6715940Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6716110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6716320Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6716450Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6716550Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6716560Z 
2025-01-09T18:24:10.6716620Z     def initialize_transport_state(
2025-01-09T18:24:10.6716670Z         self,
2025-01-09T18:24:10.6716730Z         simulation_state,
2025-01-09T18:24:10.6716780Z         opacity_state,
2025-01-09T18:24:10.6716830Z         macro_atom_state,
2025-01-09T18:24:10.6716870Z         plasma,
2025-01-09T18:24:10.6717000Z         no_of_packets,
2025-01-09T18:24:10.6717060Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6717110Z         iteration=0,
2025-01-09T18:24:10.6717160Z     ):
2025-01-09T18:24:10.6717250Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6717320Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6717370Z         else:
2025-01-09T18:24:10.6717430Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6717470Z     
2025-01-09T18:24:10.6717580Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6717650Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6717700Z         )
2025-01-09T18:24:10.6717750Z     
2025-01-09T18:24:10.6717850Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6717920Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6718310Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6718310Z 
2025-01-09T18:24:10.6718400Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6718540Z ____________ ERROR at setup of test_hdf_plasma[ion_number_density] _____________
2025-01-09T18:24:10.6718540Z 
2025-01-09T18:24:10.6719030Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6719310Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6719370Z 
2025-01-09T18:24:10.6719440Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6719560Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6719640Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6719780Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6719850Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6719900Z >       sim.run_final()
2025-01-09T18:24:10.6719900Z 
2025-01-09T18:24:10.6719960Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6720050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6720120Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6720230Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6720300Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6720430Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6720510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6720520Z 
2025-01-09T18:24:10.6720720Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6720880Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6721060Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6721270Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6721390Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6721500Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6721510Z 
2025-01-09T18:24:10.6721570Z     def initialize_transport_state(
2025-01-09T18:24:10.6721620Z         self,
2025-01-09T18:24:10.6721670Z         simulation_state,
2025-01-09T18:24:10.6721720Z         opacity_state,
2025-01-09T18:24:10.6721770Z         macro_atom_state,
2025-01-09T18:24:10.6721830Z         plasma,
2025-01-09T18:24:10.6722000Z         no_of_packets,
2025-01-09T18:24:10.6722170Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6722390Z         iteration=0,
2025-01-09T18:24:10.6722490Z     ):
2025-01-09T18:24:10.6722650Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6722730Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6722850Z         else:
2025-01-09T18:24:10.6722960Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6723080Z     
2025-01-09T18:24:10.6723180Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6723320Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6723430Z         )
2025-01-09T18:24:10.6723540Z     
2025-01-09T18:24:10.6723640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6723780Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6740040Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6740280Z 
2025-01-09T18:24:10.6740750Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6741130Z ____________ ERROR at setup of test_hdf_plasma[partition_function] _____________
2025-01-09T18:24:10.6741140Z 
2025-01-09T18:24:10.6742580Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6743410Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6743980Z 
2025-01-09T18:24:10.6744200Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6744540Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6744750Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6745170Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6745420Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6745600Z >       sim.run_final()
2025-01-09T18:24:10.6745610Z 
2025-01-09T18:24:10.6745820Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6746100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6746360Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6746680Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6746890Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6747260Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6747550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6747560Z 
2025-01-09T18:24:10.6748130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6748570Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6749150Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6750200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6750660Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6751040Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6751060Z 
2025-01-09T18:24:10.6751280Z     def initialize_transport_state(
2025-01-09T18:24:10.6751460Z         self,
2025-01-09T18:24:10.6751640Z         simulation_state,
2025-01-09T18:24:10.6751840Z         opacity_state,
2025-01-09T18:24:10.6752010Z         macro_atom_state,
2025-01-09T18:24:10.6752170Z         plasma,
2025-01-09T18:24:10.6752360Z         no_of_packets,
2025-01-09T18:24:10.6752580Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6752790Z         iteration=0,
2025-01-09T18:24:10.6752960Z     ):
2025-01-09T18:24:10.6753250Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6753940Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6754100Z         else:
2025-01-09T18:24:10.6754270Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6754420Z     
2025-01-09T18:24:10.6754740Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6754990Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6755170Z         )
2025-01-09T18:24:10.6755340Z     
2025-01-09T18:24:10.6755630Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6755870Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6757160Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6757180Z 
2025-01-09T18:24:10.6757450Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6757870Z _________________ ERROR at setup of test_hdf_plasma[abundance] _________________
2025-01-09T18:24:10.6757890Z 
2025-01-09T18:24:10.6759830Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6760730Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6760780Z 
2025-01-09T18:24:10.6760880Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6761400Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6761480Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6761620Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6761690Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6761760Z >       sim.run_final()
2025-01-09T18:24:10.6761760Z 
2025-01-09T18:24:10.6761830Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6761940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6762020Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6762140Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6762210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6762340Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6762430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6762430Z 
2025-01-09T18:24:10.6762650Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6762810Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6763000Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6763230Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6763360Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6763490Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6763490Z 
2025-01-09T18:24:10.6763570Z     def initialize_transport_state(
2025-01-09T18:24:10.6763640Z         self,
2025-01-09T18:24:10.6851820Z         simulation_state,
2025-01-09T18:24:10.6852010Z         opacity_state,
2025-01-09T18:24:10.6852080Z         macro_atom_state,
2025-01-09T18:24:10.6852160Z         plasma,
2025-01-09T18:24:10.6852210Z         no_of_packets,
2025-01-09T18:24:10.6852270Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6852330Z         iteration=0,
2025-01-09T18:24:10.6852370Z     ):
2025-01-09T18:24:10.6852480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6852560Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6853250Z         else:
2025-01-09T18:24:10.6853320Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6853390Z     
2025-01-09T18:24:10.6853540Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6853620Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6853670Z         )
2025-01-09T18:24:10.6853720Z     
2025-01-09T18:24:10.6853840Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6853940Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6854360Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6854370Z 
2025-01-09T18:24:10.6854470Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6854620Z ________________ ERROR at setup of test_hdf_plasma[g_electron] _________________
2025-01-09T18:24:10.6854630Z 
2025-01-09T18:24:10.6855160Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6855450Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6855460Z 
2025-01-09T18:24:10.6855520Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6855690Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6855930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6856090Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6856160Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6856210Z >       sim.run_final()
2025-01-09T18:24:10.6856220Z 
2025-01-09T18:24:10.6856270Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6856380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6856450Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6856570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6856640Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6856760Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6856850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6856850Z 
2025-01-09T18:24:10.6857080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6857250Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6857440Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6857680Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6857810Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6857930Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6857940Z 
2025-01-09T18:24:10.6858000Z     def initialize_transport_state(
2025-01-09T18:24:10.6858050Z         self,
2025-01-09T18:24:10.6858100Z         simulation_state,
2025-01-09T18:24:10.6858150Z         opacity_state,
2025-01-09T18:24:10.6858210Z         macro_atom_state,
2025-01-09T18:24:10.6858250Z         plasma,
2025-01-09T18:24:10.6858300Z         no_of_packets,
2025-01-09T18:24:10.6858380Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6858470Z         iteration=0,
2025-01-09T18:24:10.6858540Z     ):
2025-01-09T18:24:10.6858650Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6858720Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6858770Z         else:
2025-01-09T18:24:10.6858820Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6858950Z     
2025-01-09T18:24:10.6859060Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6859140Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6859180Z         )
2025-01-09T18:24:10.6859220Z     
2025-01-09T18:24:10.6859340Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6859430Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6859850Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6859860Z 
2025-01-09T18:24:10.6859970Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6860100Z _____________________ ERROR at setup of test_hdf_plasma[g] _____________________
2025-01-09T18:24:10.6860100Z 
2025-01-09T18:24:10.6860630Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6860920Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6860930Z 
2025-01-09T18:24:10.6860990Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6861120Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6861200Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6861340Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6861510Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6861590Z >       sim.run_final()
2025-01-09T18:24:10.6861600Z 
2025-01-09T18:24:10.6861650Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6861750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6861820Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6861940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6862010Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6862130Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6862220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6862220Z 
2025-01-09T18:24:10.6862450Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6862620Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6862840Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6863060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6863180Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6863300Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6863300Z 
2025-01-09T18:24:10.6863360Z     def initialize_transport_state(
2025-01-09T18:24:10.6863410Z         self,
2025-01-09T18:24:10.6863460Z         simulation_state,
2025-01-09T18:24:10.6863520Z         opacity_state,
2025-01-09T18:24:10.6863570Z         macro_atom_state,
2025-01-09T18:24:10.6863610Z         plasma,
2025-01-09T18:24:10.6863660Z         no_of_packets,
2025-01-09T18:24:10.6863720Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6863780Z         iteration=0,
2025-01-09T18:24:10.6863830Z     ):
2025-01-09T18:24:10.6863940Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6864010Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6864060Z         else:
2025-01-09T18:24:10.6864110Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6864160Z     
2025-01-09T18:24:10.6864270Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6864430Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6864470Z         )
2025-01-09T18:24:10.6864520Z     
2025-01-09T18:24:10.6864620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6864690Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6865070Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6865080Z 
2025-01-09T18:24:10.6865170Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6865310Z ___________________ ERROR at setup of test_hdf_plasma[lines] ___________________
2025-01-09T18:24:10.6865310Z 
2025-01-09T18:24:10.6865810Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6866110Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6866120Z 
2025-01-09T18:24:10.6866190Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6866310Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6866380Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6866520Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6866590Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6866750Z >       sim.run_final()
2025-01-09T18:24:10.6866750Z 
2025-01-09T18:24:10.6866820Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6866910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6866980Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6867090Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6867170Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6867290Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6867380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6867390Z 
2025-01-09T18:24:10.6867590Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6867750Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6867930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6868170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6868310Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6868420Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6868430Z 
2025-01-09T18:24:10.6868500Z     def initialize_transport_state(
2025-01-09T18:24:10.6868550Z         self,
2025-01-09T18:24:10.6868600Z         simulation_state,
2025-01-09T18:24:10.6868650Z         opacity_state,
2025-01-09T18:24:10.6868710Z         macro_atom_state,
2025-01-09T18:24:10.6868750Z         plasma,
2025-01-09T18:24:10.6868800Z         no_of_packets,
2025-01-09T18:24:10.6868870Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6868910Z         iteration=0,
2025-01-09T18:24:10.6868960Z     ):
2025-01-09T18:24:10.6869060Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6869150Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6869200Z         else:
2025-01-09T18:24:10.6869260Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6869310Z     
2025-01-09T18:24:10.6869430Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6869510Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6869630Z         )
2025-01-09T18:24:10.6869670Z     
2025-01-09T18:24:10.6869780Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6869860Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6870270Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6870280Z 
2025-01-09T18:24:10.6870370Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6870490Z ___________________ ERROR at setup of test_hdf_plasma[f_lu] ____________________
2025-01-09T18:24:10.6870500Z 
2025-01-09T18:24:10.6870990Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6871270Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6871280Z 
2025-01-09T18:24:10.6871340Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6871470Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6871540Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6871680Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6871740Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6871800Z >       sim.run_final()
2025-01-09T18:24:10.6871800Z 
2025-01-09T18:24:10.6872130Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6872220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6872300Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6872410Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6872480Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6872610Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6872700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6872700Z 
2025-01-09T18:24:10.6872910Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6873070Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6873240Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6873460Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6873580Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6873690Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6873700Z 
2025-01-09T18:24:10.6873760Z     def initialize_transport_state(
2025-01-09T18:24:10.6873810Z         self,
2025-01-09T18:24:10.6873860Z         simulation_state,
2025-01-09T18:24:10.6873920Z         opacity_state,
2025-01-09T18:24:10.6873970Z         macro_atom_state,
2025-01-09T18:24:10.6874020Z         plasma,
2025-01-09T18:24:10.6874070Z         no_of_packets,
2025-01-09T18:24:10.6874130Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6874170Z         iteration=0,
2025-01-09T18:24:10.6874220Z     ):
2025-01-09T18:24:10.6874310Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6874380Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6874430Z         else:
2025-01-09T18:24:10.6874490Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6874530Z     
2025-01-09T18:24:10.6874640Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6874710Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6874750Z         )
2025-01-09T18:24:10.6874800Z     
2025-01-09T18:24:10.6874900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6875350Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6875740Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6875750Z 
2025-01-09T18:24:10.6875840Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6875970Z _______________ ERROR at setup of test_hdf_plasma[tau_sobolevs] ________________
2025-01-09T18:24:10.6875970Z 
2025-01-09T18:24:10.6876470Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6876760Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6876760Z 
2025-01-09T18:24:10.6876830Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6876950Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6877030Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6877170Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6877230Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6877280Z >       sim.run_final()
2025-01-09T18:24:10.6877280Z 
2025-01-09T18:24:10.6877340Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6877430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6877570Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6877700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6877770Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6877900Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6877990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6878000Z 
2025-01-09T18:24:10.6878200Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6878360Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6878540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6878750Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6878880Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6878990Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6878990Z 
2025-01-09T18:24:10.6879050Z     def initialize_transport_state(
2025-01-09T18:24:10.6879100Z         self,
2025-01-09T18:24:10.6879160Z         simulation_state,
2025-01-09T18:24:10.6879210Z         opacity_state,
2025-01-09T18:24:10.6879260Z         macro_atom_state,
2025-01-09T18:24:10.6879310Z         plasma,
2025-01-09T18:24:10.6879360Z         no_of_packets,
2025-01-09T18:24:10.6879420Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6879460Z         iteration=0,
2025-01-09T18:24:10.6879510Z     ):
2025-01-09T18:24:10.6879610Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6879680Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6879730Z         else:
2025-01-09T18:24:10.6879780Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6879830Z     
2025-01-09T18:24:10.6879930Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6880000Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6880050Z         )
2025-01-09T18:24:10.6880090Z     
2025-01-09T18:24:10.6880190Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6880270Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6880720Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6880720Z 
2025-01-09T18:24:10.6880810Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6880940Z __________________ ERROR at setup of test_hdf_plasma[j_blues] __________________
2025-01-09T18:24:10.6880940Z 
2025-01-09T18:24:10.6881440Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6881720Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6881720Z 
2025-01-09T18:24:10.6881780Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6881910Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6881980Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6882120Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6882180Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6882240Z >       sim.run_final()
2025-01-09T18:24:10.6882240Z 
2025-01-09T18:24:10.6882300Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6882390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6882460Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6882640Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6882710Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6882830Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6882920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6882930Z 
2025-01-09T18:24:10.6883130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6883310Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6883490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6883710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6883830Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6883940Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6883950Z 
2025-01-09T18:24:10.6884010Z     def initialize_transport_state(
2025-01-09T18:24:10.6884060Z         self,
2025-01-09T18:24:10.6884110Z         simulation_state,
2025-01-09T18:24:10.6884160Z         opacity_state,
2025-01-09T18:24:10.6884210Z         macro_atom_state,
2025-01-09T18:24:10.6884260Z         plasma,
2025-01-09T18:24:10.6884310Z         no_of_packets,
2025-01-09T18:24:10.6884370Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6884420Z         iteration=0,
2025-01-09T18:24:10.6884460Z     ):
2025-01-09T18:24:10.6884560Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6884630Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6884680Z         else:
2025-01-09T18:24:10.6884740Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6884780Z     
2025-01-09T18:24:10.6884890Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6884960Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6885010Z         )
2025-01-09T18:24:10.6885050Z     
2025-01-09T18:24:10.6885150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6885230Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6885610Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6885680Z 
2025-01-09T18:24:10.6885780Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6885910Z _______________ ERROR at setup of test_hdf_plasma[metastability] _______________
2025-01-09T18:24:10.6885920Z 
2025-01-09T18:24:10.6886410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6886690Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6886690Z 
2025-01-09T18:24:10.6886760Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6886890Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6886970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6887110Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6887170Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6887220Z >       sim.run_final()
2025-01-09T18:24:10.6887220Z 
2025-01-09T18:24:10.6887280Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6887360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6887440Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6887550Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6887680Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6887800Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6887890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6887890Z 
2025-01-09T18:24:10.6888100Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6888260Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6888450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6888670Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6888790Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6888900Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6888910Z 
2025-01-09T18:24:10.6888970Z     def initialize_transport_state(
2025-01-09T18:24:10.6889020Z         self,
2025-01-09T18:24:10.6889070Z         simulation_state,
2025-01-09T18:24:10.6889120Z         opacity_state,
2025-01-09T18:24:10.6889170Z         macro_atom_state,
2025-01-09T18:24:10.6889220Z         plasma,
2025-01-09T18:24:10.6889270Z         no_of_packets,
2025-01-09T18:24:10.6889330Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6889380Z         iteration=0,
2025-01-09T18:24:10.6889420Z     ):
2025-01-09T18:24:10.6889520Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6889590Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6889640Z         else:
2025-01-09T18:24:10.6889690Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6889740Z     
2025-01-09T18:24:10.6889840Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6889910Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6889950Z         )
2025-01-09T18:24:10.6890000Z     
2025-01-09T18:24:10.6890100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6890180Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6890550Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6890620Z 
2025-01-09T18:24:10.6890720Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6890840Z _____________________ ERROR at setup of test_hdf_plasma[w] _____________________
2025-01-09T18:24:10.6890850Z 
2025-01-09T18:24:10.6891340Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6891620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6891620Z 
2025-01-09T18:24:10.6891770Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6891900Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6891970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6892120Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6892180Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6892230Z >       sim.run_final()
2025-01-09T18:24:10.6892240Z 
2025-01-09T18:24:10.6892300Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6892390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6892460Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6892570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6892640Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6892760Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6893230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6893230Z 
2025-01-09T18:24:10.6893440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6893600Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6893770Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6893990Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6894110Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6894220Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6894230Z 
2025-01-09T18:24:10.6894290Z     def initialize_transport_state(
2025-01-09T18:24:10.6894340Z         self,
2025-01-09T18:24:10.6894390Z         simulation_state,
2025-01-09T18:24:10.6894440Z         opacity_state,
2025-01-09T18:24:10.6894500Z         macro_atom_state,
2025-01-09T18:24:10.6894540Z         plasma,
2025-01-09T18:24:10.6894590Z         no_of_packets,
2025-01-09T18:24:10.6894650Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6894700Z         iteration=0,
2025-01-09T18:24:10.6902840Z     ):
2025-01-09T18:24:10.6903020Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6903090Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6903140Z         else:
2025-01-09T18:24:10.6903220Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6903260Z     
2025-01-09T18:24:10.6903370Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6903440Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6903490Z         )
2025-01-09T18:24:10.6903530Z     
2025-01-09T18:24:10.6903640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6903720Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6904100Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6904110Z 
2025-01-09T18:24:10.6904200Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6904710Z _____________ ERROR at setup of test_hdf_plasma[excitation_energy] _____________
2025-01-09T18:24:10.6904710Z 
2025-01-09T18:24:10.6905210Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6905490Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6905490Z 
2025-01-09T18:24:10.6905570Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6905690Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6905770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6905910Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6905970Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6906030Z >       sim.run_final()
2025-01-09T18:24:10.6906030Z 
2025-01-09T18:24:10.6906090Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6906180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6906250Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6906370Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6906440Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6906560Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6906650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6906740Z 
2025-01-09T18:24:10.6906950Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6907120Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6907290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6907510Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6907640Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6907760Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6907770Z 
2025-01-09T18:24:10.6907830Z     def initialize_transport_state(
2025-01-09T18:24:10.6907880Z         self,
2025-01-09T18:24:10.6907930Z         simulation_state,
2025-01-09T18:24:10.6907990Z         opacity_state,
2025-01-09T18:24:10.6908040Z         macro_atom_state,
2025-01-09T18:24:10.6908090Z         plasma,
2025-01-09T18:24:10.6908140Z         no_of_packets,
2025-01-09T18:24:10.6908200Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6908250Z         iteration=0,
2025-01-09T18:24:10.6908290Z     ):
2025-01-09T18:24:10.6908390Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6908470Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6908520Z         else:
2025-01-09T18:24:10.6908570Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6908620Z     
2025-01-09T18:24:10.6908730Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6908810Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6908850Z         )
2025-01-09T18:24:10.6908890Z     
2025-01-09T18:24:10.6908990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6909070Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6909450Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6909450Z 
2025-01-09T18:24:10.6909540Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6909660Z ______________________ ERROR at setup of test_hdf_levels _______________________
2025-01-09T18:24:10.6909740Z 
2025-01-09T18:24:10.6910240Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6910690Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6910690Z 
2025-01-09T18:24:10.6910760Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6910880Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6910960Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6911100Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6911160Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6911220Z >       sim.run_final()
2025-01-09T18:24:10.6911220Z 
2025-01-09T18:24:10.6911280Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6911500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6911580Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6911690Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6911760Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6911880Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6911970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6911970Z 
2025-01-09T18:24:10.6912180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6912560Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6912730Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6912950Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6913070Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6913180Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6913180Z 
2025-01-09T18:24:10.6913250Z     def initialize_transport_state(
2025-01-09T18:24:10.6913290Z         self,
2025-01-09T18:24:10.6913350Z         simulation_state,
2025-01-09T18:24:10.6913400Z         opacity_state,
2025-01-09T18:24:10.6913450Z         macro_atom_state,
2025-01-09T18:24:10.6913490Z         plasma,
2025-01-09T18:24:10.6913550Z         no_of_packets,
2025-01-09T18:24:10.6913610Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6913660Z         iteration=0,
2025-01-09T18:24:10.6913750Z     ):
2025-01-09T18:24:10.6913850Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6913920Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6913970Z         else:
2025-01-09T18:24:10.6914030Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6914070Z     
2025-01-09T18:24:10.6914210Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6914280Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6914330Z         )
2025-01-09T18:24:10.6914370Z     
2025-01-09T18:24:10.6914490Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6914570Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6915100Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6915100Z 
2025-01-09T18:24:10.6915190Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6915330Z ______________ ERROR at setup of test_hdf_scalars[time_explosion] ______________
2025-01-09T18:24:10.6915330Z 
2025-01-09T18:24:10.6915850Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6916210Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6916220Z 
2025-01-09T18:24:10.6916290Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6916410Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6916480Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6916620Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6916690Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6916740Z >       sim.run_final()
2025-01-09T18:24:10.6916750Z 
2025-01-09T18:24:10.6916810Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6916900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6916980Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6917090Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6917150Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6917280Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6917370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6917380Z 
2025-01-09T18:24:10.6917730Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6917950Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6918120Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6918480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6918600Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6918710Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6918720Z 
2025-01-09T18:24:10.6918780Z     def initialize_transport_state(
2025-01-09T18:24:10.6918830Z         self,
2025-01-09T18:24:10.6918880Z         simulation_state,
2025-01-09T18:24:10.6918930Z         opacity_state,
2025-01-09T18:24:10.6918980Z         macro_atom_state,
2025-01-09T18:24:10.6919030Z         plasma,
2025-01-09T18:24:10.6919080Z         no_of_packets,
2025-01-09T18:24:10.6919140Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6919320Z         iteration=0,
2025-01-09T18:24:10.6919370Z     ):
2025-01-09T18:24:10.6919470Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6919540Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6919590Z         else:
2025-01-09T18:24:10.6919650Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6919690Z     
2025-01-09T18:24:10.6919800Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6919870Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6919920Z         )
2025-01-09T18:24:10.6919960Z     
2025-01-09T18:24:10.6920060Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6920140Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6920510Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6920520Z 
2025-01-09T18:24:10.6920610Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6920750Z __________ ERROR at setup of test_hdf_scalars[link_t_rad_t_electron] ___________
2025-01-09T18:24:10.6920750Z 
2025-01-09T18:24:10.6921240Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6921740Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6921750Z 
2025-01-09T18:24:10.6921820Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6921950Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6922020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6922160Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6922230Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6922300Z >       sim.run_final()
2025-01-09T18:24:10.6922300Z 
2025-01-09T18:24:10.6922360Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6922450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6922530Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6922640Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6922710Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6922830Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6922920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6922920Z 
2025-01-09T18:24:10.6923120Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6923280Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6923720Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6923930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6924060Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6924160Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6924170Z 
2025-01-09T18:24:10.6924240Z     def initialize_transport_state(
2025-01-09T18:24:10.6924280Z         self,
2025-01-09T18:24:10.6924340Z         simulation_state,
2025-01-09T18:24:10.6924390Z         opacity_state,
2025-01-09T18:24:10.6924440Z         macro_atom_state,
2025-01-09T18:24:10.6924490Z         plasma,
2025-01-09T18:24:10.6924540Z         no_of_packets,
2025-01-09T18:24:10.6924600Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6924650Z         iteration=0,
2025-01-09T18:24:10.6924690Z     ):
2025-01-09T18:24:10.6924790Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6924860Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6924910Z         else:
2025-01-09T18:24:10.6924970Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6925010Z     
2025-01-09T18:24:10.6925120Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6925190Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6925240Z         )
2025-01-09T18:24:10.6925290Z     
2025-01-09T18:24:10.6925390Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6925460Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6925840Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6925840Z 
2025-01-09T18:24:10.6925940Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6926070Z _________________ ERROR at setup of test_hdf_helium_treatment __________________
2025-01-09T18:24:10.6926070Z 
2025-01-09T18:24:10.6926570Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6927090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6927100Z 
2025-01-09T18:24:10.6927190Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6927330Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6927410Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6927550Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6927630Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6927690Z >       sim.run_final()
2025-01-09T18:24:10.6927700Z 
2025-01-09T18:24:10.6927750Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6927850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6927920Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6928040Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6928110Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6928250Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6928350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6928360Z 
2025-01-09T18:24:10.6928590Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6928800Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6929000Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6929340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6929460Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6929570Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6929580Z 
2025-01-09T18:24:10.6929640Z     def initialize_transport_state(
2025-01-09T18:24:10.6929690Z         self,
2025-01-09T18:24:10.6929750Z         simulation_state,
2025-01-09T18:24:10.6929800Z         opacity_state,
2025-01-09T18:24:10.6929850Z         macro_atom_state,
2025-01-09T18:24:10.6929900Z         plasma,
2025-01-09T18:24:10.6929960Z         no_of_packets,
2025-01-09T18:24:10.6930020Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6930070Z         iteration=0,
2025-01-09T18:24:10.6930120Z     ):
2025-01-09T18:24:10.6930210Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6930280Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6930330Z         else:
2025-01-09T18:24:10.6930390Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6930440Z     
2025-01-09T18:24:10.6930710Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6930790Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6930830Z         )
2025-01-09T18:24:10.6930890Z     
2025-01-09T18:24:10.6931010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6931140Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6931550Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6931560Z 
2025-01-09T18:24:10.6931650Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6931770Z ___________________ ERROR at setup of test_atomic_data_uuid ____________________
2025-01-09T18:24:10.6931780Z 
2025-01-09T18:24:10.6932270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6932570Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6932660Z 
2025-01-09T18:24:10.6932730Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6932870Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6932950Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6933080Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6933150Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6933200Z >       sim.run_final()
2025-01-09T18:24:10.6933200Z 
2025-01-09T18:24:10.6933260Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6933350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6933610Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6933750Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6933850Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6934000Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6934120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6934130Z 
2025-01-09T18:24:10.6934360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6934550Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6934940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6935200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6935450Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6935610Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6935620Z 
2025-01-09T18:24:10.6935710Z     def initialize_transport_state(
2025-01-09T18:24:10.6935790Z         self,
2025-01-09T18:24:10.6935850Z         simulation_state,
2025-01-09T18:24:10.6936060Z         opacity_state,
2025-01-09T18:24:10.6936120Z         macro_atom_state,
2025-01-09T18:24:10.6936170Z         plasma,
2025-01-09T18:24:10.6936210Z         no_of_packets,
2025-01-09T18:24:10.6936280Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6936330Z         iteration=0,
2025-01-09T18:24:10.6936380Z     ):
2025-01-09T18:24:10.6936470Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6936540Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6936590Z         else:
2025-01-09T18:24:10.6936640Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6936690Z     
2025-01-09T18:24:10.6936800Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6936870Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6936910Z         )
2025-01-09T18:24:10.6936960Z     
2025-01-09T18:24:10.6937060Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6937130Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6937520Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6937520Z 
2025-01-09T18:24:10.6937610Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6937740Z ___________________ ERROR at setup of test_collection[t_rad] ___________________
2025-01-09T18:24:10.6937740Z 
2025-01-09T18:24:10.6938240Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6938520Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6938530Z 
2025-01-09T18:24:10.6938710Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6938970Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6939060Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6939210Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6939270Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6939330Z >       sim.run_final()
2025-01-09T18:24:10.6939330Z 
2025-01-09T18:24:10.6939380Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6939480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6939560Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6939670Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6939740Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6939890Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6939980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6939990Z 
2025-01-09T18:24:10.6940210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6940370Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6940540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6940760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6941000Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6941210Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6941210Z 
2025-01-09T18:24:10.6941280Z     def initialize_transport_state(
2025-01-09T18:24:10.6941320Z         self,
2025-01-09T18:24:10.6941490Z         simulation_state,
2025-01-09T18:24:10.6941540Z         opacity_state,
2025-01-09T18:24:10.6941590Z         macro_atom_state,
2025-01-09T18:24:10.6941640Z         plasma,
2025-01-09T18:24:10.6941690Z         no_of_packets,
2025-01-09T18:24:10.6941860Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6941920Z         iteration=0,
2025-01-09T18:24:10.6941960Z     ):
2025-01-09T18:24:10.6942060Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6942150Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6942200Z         else:
2025-01-09T18:24:10.6942260Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6942310Z     
2025-01-09T18:24:10.6942410Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6942490Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6942530Z         )
2025-01-09T18:24:10.6942580Z     
2025-01-09T18:24:10.6942680Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6942880Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6943260Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6943270Z 
2025-01-09T18:24:10.6943360Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6943490Z _____________________ ERROR at setup of test_collection[w] _____________________
2025-01-09T18:24:10.6943490Z 
2025-01-09T18:24:10.6943980Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6944270Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.6944270Z 
2025-01-09T18:24:10.6944340Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.6944460Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.6944610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.6944750Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.6944810Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.6944860Z >       sim.run_final()
2025-01-09T18:24:10.6944870Z 
2025-01-09T18:24:10.6944920Z tardis/conftest.py:233: 
2025-01-09T18:24:10.6945010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6945080Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.6945190Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6945260Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6945390Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6945470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6945480Z 
2025-01-09T18:24:10.6945690Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.6945840Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.6946020Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.6946350Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.6946470Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.6946590Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.6946590Z 
2025-01-09T18:24:10.6946880Z     def initialize_transport_state(
2025-01-09T18:24:10.6946930Z         self,
2025-01-09T18:24:10.6946980Z         simulation_state,
2025-01-09T18:24:10.6947040Z         opacity_state,
2025-01-09T18:24:10.6947090Z         macro_atom_state,
2025-01-09T18:24:10.6947140Z         plasma,
2025-01-09T18:24:10.6947180Z         no_of_packets,
2025-01-09T18:24:10.6947250Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6947290Z         iteration=0,
2025-01-09T18:24:10.6947340Z     ):
2025-01-09T18:24:10.6947440Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6947510Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6947560Z         else:
2025-01-09T18:24:10.6947620Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6947660Z     
2025-01-09T18:24:10.6947770Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6947840Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6947880Z         )
2025-01-09T18:24:10.6947930Z     
2025-01-09T18:24:10.6948030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6948100Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6948480Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6948490Z 
2025-01-09T18:24:10.6948580Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6948720Z _________ ERROR at setup of test_plasma_state_iterations[iterations_w] _________
2025-01-09T18:24:10.6948720Z 
2025-01-09T18:24:10.6949210Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6949520Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.6949520Z 
2025-01-09T18:24:10.6949590Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6949690Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-09T18:24:10.6949760Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.6949830Z         config.montecarlo.iterations = 2
2025-01-09T18:24:10.6954590Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-09T18:24:10.6954930Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-09T18:24:10.6955080Z     
2025-01-09T18:24:10.6955290Z         sim = Simulation.from_config(config)
2025-01-09T18:24:10.6955830Z >       sim.run_convergence()
2025-01-09T18:24:10.6955850Z 
2025-01-09T18:24:10.6956100Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-09T18:24:10.6956340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6956590Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.6956910Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6957110Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6957750Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6957990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6958010Z 
2025-01-09T18:24:10.6958660Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17932c1d0>
2025-01-09T18:24:10.6959090Z simulation_state = <tardis.model.base.SimulationState object at 0x35ed8a4b0>
2025-01-09T18:24:10.6959590Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1787dd520>
2025-01-09T18:24:10.6960170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1793109b0>
2025-01-09T18:24:10.6960490Z plasma = <tardis.plasma.base.BasePlasma object at 0x30647d3d0>
2025-01-09T18:24:10.6960790Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6961130Z 
2025-01-09T18:24:10.6961330Z     def initialize_transport_state(
2025-01-09T18:24:10.6961490Z         self,
2025-01-09T18:24:10.6961680Z         simulation_state,
2025-01-09T18:24:10.6961840Z         opacity_state,
2025-01-09T18:24:10.6961990Z         macro_atom_state,
2025-01-09T18:24:10.6962150Z         plasma,
2025-01-09T18:24:10.6962300Z         no_of_packets,
2025-01-09T18:24:10.6962740Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6962920Z         iteration=0,
2025-01-09T18:24:10.6963070Z     ):
2025-01-09T18:24:10.6963330Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6963820Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6964030Z         else:
2025-01-09T18:24:10.6964100Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6964140Z     
2025-01-09T18:24:10.6964270Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6964420Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6964480Z         )
2025-01-09T18:24:10.6964530Z     
2025-01-09T18:24:10.6964640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6964720Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6965110Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6965120Z 
2025-01-09T18:24:10.6965220Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6965360Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.6965690Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.6966040Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.6966170Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.6966570Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.6966720Z _______ ERROR at setup of test_plasma_state_iterations[iterations_t_rad] _______
2025-01-09T18:24:10.6966940Z 
2025-01-09T18:24:10.6967440Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6967740Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.6967740Z 
2025-01-09T18:24:10.6967810Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6967910Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-09T18:24:10.6967980Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.6968060Z         config.montecarlo.iterations = 2
2025-01-09T18:24:10.6968140Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-09T18:24:10.6968230Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-09T18:24:10.6968280Z     
2025-01-09T18:24:10.6968450Z         sim = Simulation.from_config(config)
2025-01-09T18:24:10.6968520Z >       sim.run_convergence()
2025-01-09T18:24:10.6968610Z 
2025-01-09T18:24:10.6968700Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-09T18:24:10.6968860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6968950Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.6969230Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6969300Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6969480Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6969750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6969760Z 
2025-01-09T18:24:10.6970030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17932c1d0>
2025-01-09T18:24:10.6970250Z simulation_state = <tardis.model.base.SimulationState object at 0x35ed8a4b0>
2025-01-09T18:24:10.6970430Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1787dd520>
2025-01-09T18:24:10.6970720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1793109b0>
2025-01-09T18:24:10.6970890Z plasma = <tardis.plasma.base.BasePlasma object at 0x30647d3d0>
2025-01-09T18:24:10.6971070Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6971080Z 
2025-01-09T18:24:10.6971140Z     def initialize_transport_state(
2025-01-09T18:24:10.6971260Z         self,
2025-01-09T18:24:10.6971370Z         simulation_state,
2025-01-09T18:24:10.6971470Z         opacity_state,
2025-01-09T18:24:10.6971590Z         macro_atom_state,
2025-01-09T18:24:10.6971640Z         plasma,
2025-01-09T18:24:10.6971750Z         no_of_packets,
2025-01-09T18:24:10.6971870Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6972010Z         iteration=0,
2025-01-09T18:24:10.6972060Z     ):
2025-01-09T18:24:10.6972250Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6972390Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6972490Z         else:
2025-01-09T18:24:10.6972550Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6972640Z     
2025-01-09T18:24:10.6972810Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6972940Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6973050Z         )
2025-01-09T18:24:10.6973090Z     
2025-01-09T18:24:10.6973250Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6973410Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6973860Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6973870Z 
2025-01-09T18:24:10.6973960Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6974160Z _ ERROR at setup of test_plasma_state_iterations[iterations_electron_densities] _
2025-01-09T18:24:10.6974260Z 
2025-01-09T18:24:10.6974790Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6975170Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.6975180Z 
2025-01-09T18:24:10.6975300Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6975390Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-09T18:24:10.6975520Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.6975650Z         config.montecarlo.iterations = 2
2025-01-09T18:24:10.6975730Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-09T18:24:10.6975910Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-09T18:24:10.6976010Z     
2025-01-09T18:24:10.6981180Z         sim = Simulation.from_config(config)
2025-01-09T18:24:10.6981280Z >       sim.run_convergence()
2025-01-09T18:24:10.6981290Z 
2025-01-09T18:24:10.6981380Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-09T18:24:10.6981470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6981560Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.6981670Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6981740Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6981870Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6982080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6982080Z 
2025-01-09T18:24:10.6982290Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17932c1d0>
2025-01-09T18:24:10.6982450Z simulation_state = <tardis.model.base.SimulationState object at 0x35ed8a4b0>
2025-01-09T18:24:10.6982620Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1787dd520>
2025-01-09T18:24:10.6982840Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1793109b0>
2025-01-09T18:24:10.6982960Z plasma = <tardis.plasma.base.BasePlasma object at 0x30647d3d0>
2025-01-09T18:24:10.6983080Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6983090Z 
2025-01-09T18:24:10.6983150Z     def initialize_transport_state(
2025-01-09T18:24:10.6983200Z         self,
2025-01-09T18:24:10.6983250Z         simulation_state,
2025-01-09T18:24:10.6983310Z         opacity_state,
2025-01-09T18:24:10.6983360Z         macro_atom_state,
2025-01-09T18:24:10.6983410Z         plasma,
2025-01-09T18:24:10.6983460Z         no_of_packets,
2025-01-09T18:24:10.6983520Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6983560Z         iteration=0,
2025-01-09T18:24:10.6983610Z     ):
2025-01-09T18:24:10.6983710Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6983780Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6983830Z         else:
2025-01-09T18:24:10.6983890Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6983930Z     
2025-01-09T18:24:10.6984040Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6984120Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6984160Z         )
2025-01-09T18:24:10.6984210Z     
2025-01-09T18:24:10.6984310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6984390Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6984770Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6984780Z 
2025-01-09T18:24:10.6984870Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6985070Z ______ ERROR at setup of test_plasma_state_iterations[iterations_t_inner] ______
2025-01-09T18:24:10.6985080Z 
2025-01-09T18:24:10.6985540Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6985840Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.6985850Z 
2025-01-09T18:24:10.6985910Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6986010Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-09T18:24:10.6986080Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.6986150Z         config.montecarlo.iterations = 2
2025-01-09T18:24:10.6986240Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-09T18:24:10.6986330Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-09T18:24:10.6986380Z     
2025-01-09T18:24:10.6986450Z         sim = Simulation.from_config(config)
2025-01-09T18:24:10.6986510Z >       sim.run_convergence()
2025-01-09T18:24:10.6986510Z 
2025-01-09T18:24:10.6986600Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-09T18:24:10.6986690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6986770Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.6986890Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6986960Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6987310Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6987410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6987410Z 
2025-01-09T18:24:10.6987610Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17932c1d0>
2025-01-09T18:24:10.6987780Z simulation_state = <tardis.model.base.SimulationState object at 0x35ed8a4b0>
2025-01-09T18:24:10.6987950Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1787dd520>
2025-01-09T18:24:10.6988170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1793109b0>
2025-01-09T18:24:10.6988290Z plasma = <tardis.plasma.base.BasePlasma object at 0x30647d3d0>
2025-01-09T18:24:10.6988400Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6988410Z 
2025-01-09T18:24:10.6988470Z     def initialize_transport_state(
2025-01-09T18:24:10.6988520Z         self,
2025-01-09T18:24:10.6988580Z         simulation_state,
2025-01-09T18:24:10.6988630Z         opacity_state,
2025-01-09T18:24:10.6988680Z         macro_atom_state,
2025-01-09T18:24:10.6988730Z         plasma,
2025-01-09T18:24:10.6988780Z         no_of_packets,
2025-01-09T18:24:10.6988830Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6988890Z         iteration=0,
2025-01-09T18:24:10.6988940Z     ):
2025-01-09T18:24:10.6989030Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6989100Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6989150Z         else:
2025-01-09T18:24:10.6989210Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6989250Z     
2025-01-09T18:24:10.6989360Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6989430Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6989480Z         )
2025-01-09T18:24:10.6989520Z     
2025-01-09T18:24:10.6989620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6989700Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6990090Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6990320Z 
2025-01-09T18:24:10.6990420Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6990580Z __________ ERROR at setup of test_plasma_estimates[nu_bar_estimator] ___________
2025-01-09T18:24:10.6990590Z 
2025-01-09T18:24:10.6991100Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6991440Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.6991450Z 
2025-01-09T18:24:10.6991520Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6991630Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-09T18:24:10.6991730Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.6991810Z         config.montecarlo.iterations = 2
2025-01-09T18:24:10.6991900Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-09T18:24:10.6992010Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-09T18:24:10.6992060Z     
2025-01-09T18:24:10.6992140Z         sim = Simulation.from_config(config)
2025-01-09T18:24:10.6992220Z >       sim.run_convergence()
2025-01-09T18:24:10.6992230Z 
2025-01-09T18:24:10.6992320Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-09T18:24:10.6992440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6992560Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.6992700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6992910Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6993050Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6993160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6993160Z 
2025-01-09T18:24:10.6993400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17932c1d0>
2025-01-09T18:24:10.6993580Z simulation_state = <tardis.model.base.SimulationState object at 0x35ed8a4b0>
2025-01-09T18:24:10.6993800Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1787dd520>
2025-01-09T18:24:10.6994040Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1793109b0>
2025-01-09T18:24:10.6994180Z plasma = <tardis.plasma.base.BasePlasma object at 0x30647d3d0>
2025-01-09T18:24:10.6994320Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.6994330Z 
2025-01-09T18:24:10.6994410Z     def initialize_transport_state(
2025-01-09T18:24:10.6994970Z         self,
2025-01-09T18:24:10.6995060Z         simulation_state,
2025-01-09T18:24:10.6995120Z         opacity_state,
2025-01-09T18:24:10.6995190Z         macro_atom_state,
2025-01-09T18:24:10.6995230Z         plasma,
2025-01-09T18:24:10.6995300Z         no_of_packets,
2025-01-09T18:24:10.6995390Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.6995460Z         iteration=0,
2025-01-09T18:24:10.6995510Z     ):
2025-01-09T18:24:10.6995610Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.6995700Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.6995780Z         else:
2025-01-09T18:24:10.6995840Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.6995880Z     
2025-01-09T18:24:10.6996000Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.6996090Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.6996150Z         )
2025-01-09T18:24:10.6996190Z     
2025-01-09T18:24:10.6996310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.6996390Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.6996830Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.6997070Z 
2025-01-09T18:24:10.6997200Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.6997360Z _____________ ERROR at setup of test_plasma_estimates[j_estimator] _____________
2025-01-09T18:24:10.6997370Z 
2025-01-09T18:24:10.6997860Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.6998190Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.6998210Z 
2025-01-09T18:24:10.6998270Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.6998360Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-09T18:24:10.6998440Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.6998510Z         config.montecarlo.iterations = 2
2025-01-09T18:24:10.6998590Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-09T18:24:10.6998680Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-09T18:24:10.6998730Z     
2025-01-09T18:24:10.6998800Z         sim = Simulation.from_config(config)
2025-01-09T18:24:10.6998850Z >       sim.run_convergence()
2025-01-09T18:24:10.6998860Z 
2025-01-09T18:24:10.6998940Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-09T18:24:10.6999030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6999140Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.6999380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.6999450Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.6999570Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.6999660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.6999660Z 
2025-01-09T18:24:10.6999880Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17932c1d0>
2025-01-09T18:24:10.7000050Z simulation_state = <tardis.model.base.SimulationState object at 0x35ed8a4b0>
2025-01-09T18:24:10.7000220Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1787dd520>
2025-01-09T18:24:10.7000430Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1793109b0>
2025-01-09T18:24:10.7000580Z plasma = <tardis.plasma.base.BasePlasma object at 0x30647d3d0>
2025-01-09T18:24:10.7000700Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7000710Z 
2025-01-09T18:24:10.7000770Z     def initialize_transport_state(
2025-01-09T18:24:10.7000810Z         self,
2025-01-09T18:24:10.7000880Z         simulation_state,
2025-01-09T18:24:10.7000920Z         opacity_state,
2025-01-09T18:24:10.7000980Z         macro_atom_state,
2025-01-09T18:24:10.7001020Z         plasma,
2025-01-09T18:24:10.7001080Z         no_of_packets,
2025-01-09T18:24:10.7001140Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7001190Z         iteration=0,
2025-01-09T18:24:10.7001230Z     ):
2025-01-09T18:24:10.7001330Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7001400Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7001440Z         else:
2025-01-09T18:24:10.7001510Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7001550Z     
2025-01-09T18:24:10.7001660Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7001730Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7001790Z         )
2025-01-09T18:24:10.7001840Z     
2025-01-09T18:24:10.7001970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7002080Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7002500Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7002590Z 
2025-01-09T18:24:10.7002690Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7002840Z _____________ ERROR at setup of test_plasma_estimates[t_radiative] _____________
2025-01-09T18:24:10.7002850Z 
2025-01-09T18:24:10.7003350Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7003710Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7003720Z 
2025-01-09T18:24:10.7003820Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7003940Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-09T18:24:10.7004040Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7004130Z         config.montecarlo.iterations = 2
2025-01-09T18:24:10.7004240Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-09T18:24:10.7004350Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-09T18:24:10.7004400Z     
2025-01-09T18:24:10.7004480Z         sim = Simulation.from_config(config)
2025-01-09T18:24:10.7004540Z >       sim.run_convergence()
2025-01-09T18:24:10.7004550Z 
2025-01-09T18:24:10.7004640Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-09T18:24:10.7004730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7004920Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7005050Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7005140Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7005290Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7005400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7005410Z 
2025-01-09T18:24:10.7005640Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17932c1d0>
2025-01-09T18:24:10.7005810Z simulation_state = <tardis.model.base.SimulationState object at 0x35ed8a4b0>
2025-01-09T18:24:10.7005980Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1787dd520>
2025-01-09T18:24:10.7006200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1793109b0>
2025-01-09T18:24:10.7006400Z plasma = <tardis.plasma.base.BasePlasma object at 0x30647d3d0>
2025-01-09T18:24:10.7006520Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7006520Z 
2025-01-09T18:24:10.7006590Z     def initialize_transport_state(
2025-01-09T18:24:10.7006630Z         self,
2025-01-09T18:24:10.7006690Z         simulation_state,
2025-01-09T18:24:10.7006740Z         opacity_state,
2025-01-09T18:24:10.7006790Z         macro_atom_state,
2025-01-09T18:24:10.7006840Z         plasma,
2025-01-09T18:24:10.7006890Z         no_of_packets,
2025-01-09T18:24:10.7006950Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7007000Z         iteration=0,
2025-01-09T18:24:10.7007040Z     ):
2025-01-09T18:24:10.7007140Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7007220Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7007270Z         else:
2025-01-09T18:24:10.7007340Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7007380Z     
2025-01-09T18:24:10.7007480Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7007560Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7007610Z         )
2025-01-09T18:24:10.7007650Z     
2025-01-09T18:24:10.7007750Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7007820Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7008270Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7008350Z 
2025-01-09T18:24:10.7008450Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7009080Z ___________ ERROR at setup of test_plasma_estimates[dilution_factor] ___________
2025-01-09T18:24:10.7009190Z 
2025-01-09T18:24:10.7010840Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7012720Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7012760Z 
2025-01-09T18:24:10.7013000Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7013340Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-09T18:24:10.7013560Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7013770Z         config.montecarlo.iterations = 2
2025-01-09T18:24:10.7013990Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-09T18:24:10.7014280Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-09T18:24:10.7014450Z     
2025-01-09T18:24:10.7014990Z         sim = Simulation.from_config(config)
2025-01-09T18:24:10.7015210Z >       sim.run_convergence()
2025-01-09T18:24:10.7015230Z 
2025-01-09T18:24:10.7015840Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-09T18:24:10.7016110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7018220Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7018490Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7018770Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7019060Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7019180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7019180Z 
2025-01-09T18:24:10.7019400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17932c1d0>
2025-01-09T18:24:10.7020290Z simulation_state = <tardis.model.base.SimulationState object at 0x35ed8a4b0>
2025-01-09T18:24:10.7020500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1787dd520>
2025-01-09T18:24:10.7020730Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1793109b0>
2025-01-09T18:24:10.7020870Z plasma = <tardis.plasma.base.BasePlasma object at 0x30647d3d0>
2025-01-09T18:24:10.7020990Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7020990Z 
2025-01-09T18:24:10.7021060Z     def initialize_transport_state(
2025-01-09T18:24:10.7021110Z         self,
2025-01-09T18:24:10.7021160Z         simulation_state,
2025-01-09T18:24:10.7021240Z         opacity_state,
2025-01-09T18:24:10.7021300Z         macro_atom_state,
2025-01-09T18:24:10.7021360Z         plasma,
2025-01-09T18:24:10.7022200Z         no_of_packets,
2025-01-09T18:24:10.7022280Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7022330Z         iteration=0,
2025-01-09T18:24:10.7022380Z     ):
2025-01-09T18:24:10.7022490Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7022560Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7022610Z         else:
2025-01-09T18:24:10.7022670Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7022720Z     
2025-01-09T18:24:10.7022830Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7022920Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7022970Z         )
2025-01-09T18:24:10.7023010Z     
2025-01-09T18:24:10.7023120Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7023200Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7024080Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7024090Z 
2025-01-09T18:24:10.7024180Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7024320Z _____________ ERROR at setup of test_plasma_estimates[output_nus] ______________
2025-01-09T18:24:10.7024320Z 
2025-01-09T18:24:10.7024970Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7025410Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7025410Z 
2025-01-09T18:24:10.7025480Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7025600Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-09T18:24:10.7025700Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7025790Z         config.montecarlo.iterations = 2
2025-01-09T18:24:10.7025890Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-09T18:24:10.7026010Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-09T18:24:10.7026060Z     
2025-01-09T18:24:10.7026130Z         sim = Simulation.from_config(config)
2025-01-09T18:24:10.7026210Z >       sim.run_convergence()
2025-01-09T18:24:10.7026220Z 
2025-01-09T18:24:10.7026310Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-09T18:24:10.7026570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7026720Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7026980Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7027070Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7027210Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7027370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7027380Z 
2025-01-09T18:24:10.7027700Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17932c1d0>
2025-01-09T18:24:10.7027860Z simulation_state = <tardis.model.base.SimulationState object at 0x35ed8a4b0>
2025-01-09T18:24:10.7028050Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1787dd520>
2025-01-09T18:24:10.7028280Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1793109b0>
2025-01-09T18:24:10.7028420Z plasma = <tardis.plasma.base.BasePlasma object at 0x30647d3d0>
2025-01-09T18:24:10.7028560Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7028570Z 
2025-01-09T18:24:10.7028640Z     def initialize_transport_state(
2025-01-09T18:24:10.7028690Z         self,
2025-01-09T18:24:10.7028750Z         simulation_state,
2025-01-09T18:24:10.7028800Z         opacity_state,
2025-01-09T18:24:10.7028850Z         macro_atom_state,
2025-01-09T18:24:10.7028900Z         plasma,
2025-01-09T18:24:10.7028950Z         no_of_packets,
2025-01-09T18:24:10.7029010Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7029070Z         iteration=0,
2025-01-09T18:24:10.7029150Z     ):
2025-01-09T18:24:10.7029260Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7029340Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7029390Z         else:
2025-01-09T18:24:10.7029450Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7029510Z     
2025-01-09T18:24:10.7029630Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7029730Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7029790Z         )
2025-01-09T18:24:10.7029830Z     
2025-01-09T18:24:10.7029940Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7030130Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7030510Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7030520Z 
2025-01-09T18:24:10.7030610Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7030750Z ___________ ERROR at setup of test_plasma_estimates[output_energies] ___________
2025-01-09T18:24:10.7030760Z 
2025-01-09T18:24:10.7031260Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7031560Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7031570Z 
2025-01-09T18:24:10.7031630Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7031740Z     def simulation_one_loop(config, atomic_data_fname):
2025-01-09T18:24:10.7031800Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7031880Z         config.montecarlo.iterations = 2
2025-01-09T18:24:10.7031960Z         config.montecarlo.no_of_packets = int(4e4)
2025-01-09T18:24:10.7032300Z         config.montecarlo.last_no_of_packets = int(4e4)
2025-01-09T18:24:10.7032360Z     
2025-01-09T18:24:10.7032430Z         sim = Simulation.from_config(config)
2025-01-09T18:24:10.7032490Z >       sim.run_convergence()
2025-01-09T18:24:10.7032490Z 
2025-01-09T18:24:10.7032850Z tardis/simulation/tests/test_simulation.py:26: 
2025-01-09T18:24:10.7032950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7033050Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7033340Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7033420Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7033560Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7033660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7033660Z 
2025-01-09T18:24:10.7034400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17932c1d0>
2025-01-09T18:24:10.7034740Z simulation_state = <tardis.model.base.SimulationState object at 0x35ed8a4b0>
2025-01-09T18:24:10.7034930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1787dd520>
2025-01-09T18:24:10.7035360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1793109b0>
2025-01-09T18:24:10.7035510Z plasma = <tardis.plasma.base.BasePlasma object at 0x30647d3d0>
2025-01-09T18:24:10.7035630Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7035630Z 
2025-01-09T18:24:10.7035690Z     def initialize_transport_state(
2025-01-09T18:24:10.7035750Z         self,
2025-01-09T18:24:10.7035800Z         simulation_state,
2025-01-09T18:24:10.7035870Z         opacity_state,
2025-01-09T18:24:10.7035930Z         macro_atom_state,
2025-01-09T18:24:10.7035970Z         plasma,
2025-01-09T18:24:10.7036030Z         no_of_packets,
2025-01-09T18:24:10.7036090Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7036160Z         iteration=0,
2025-01-09T18:24:10.7036260Z     ):
2025-01-09T18:24:10.7036360Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7036430Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7036480Z         else:
2025-01-09T18:24:10.7036540Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7036590Z     
2025-01-09T18:24:10.7036690Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7036820Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7036880Z         )
2025-01-09T18:24:10.7036930Z     
2025-01-09T18:24:10.7037190Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7037270Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7037660Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7037670Z 
2025-01-09T18:24:10.7037750Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7042310Z ___________ ERROR at setup of TestSpectrumSolver.test_initialization ___________
2025-01-09T18:24:10.7042400Z 
2025-01-09T18:24:10.7043330Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x13a851a00>
2025-01-09T18:24:10.7043740Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-09T18:24:10.7044600Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7045080Z generate_reference = False
2025-01-09T18:24:10.7045530Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-09T18:24:10.7045560Z 
2025-01-09T18:24:10.7045750Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7045930Z     def simulation(
2025-01-09T18:24:10.7046090Z         self,
2025-01-09T18:24:10.7046270Z         request,
2025-01-09T18:24:10.7046470Z         atomic_data_fname,
2025-01-09T18:24:10.7046690Z         generate_reference,
2025-01-09T18:24:10.7046900Z         example_configuration_dir: Path,
2025-01-09T18:24:10.7047060Z     ):
2025-01-09T18:24:10.7047290Z         config = Configuration.from_yaml(
2025-01-09T18:24:10.7048160Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-09T18:24:10.7048590Z         )
2025-01-09T18:24:10.7048830Z         config["atom_data"] = atomic_data_fname
2025-01-09T18:24:10.7048980Z     
2025-01-09T18:24:10.7049220Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7049390Z >       simulation.run_final()
2025-01-09T18:24:10.7049420Z 
2025-01-09T18:24:10.7049950Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-09T18:24:10.7050690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7050920Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7051220Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7051420Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7052020Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7052270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7052280Z 
2025-01-09T18:24:10.7052860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x159735280>
2025-01-09T18:24:10.7053300Z simulation_state = <tardis.model.base.SimulationState object at 0x15a5e7fb0>
2025-01-09T18:24:10.7054050Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16464f020>
2025-01-09T18:24:10.7054660Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16464c2c0>
2025-01-09T18:24:10.7055010Z plasma = <tardis.plasma.base.BasePlasma object at 0x15a5e8260>
2025-01-09T18:24:10.7055340Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7055350Z 
2025-01-09T18:24:10.7055800Z     def initialize_transport_state(
2025-01-09T18:24:10.7055960Z         self,
2025-01-09T18:24:10.7056130Z         simulation_state,
2025-01-09T18:24:10.7056290Z         opacity_state,
2025-01-09T18:24:10.7056450Z         macro_atom_state,
2025-01-09T18:24:10.7056610Z         plasma,
2025-01-09T18:24:10.7056760Z         no_of_packets,
2025-01-09T18:24:10.7056940Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7057100Z         iteration=0,
2025-01-09T18:24:10.7057250Z     ):
2025-01-09T18:24:10.7057780Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7057990Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7058880Z         else:
2025-01-09T18:24:10.7059270Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7059420Z     
2025-01-09T18:24:10.7059800Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7060010Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7060150Z         )
2025-01-09T18:24:10.7060300Z     
2025-01-09T18:24:10.7060570Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7060790Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7062140Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7062170Z 
2025-01-09T18:24:10.7062440Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7062770Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.7063930Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.7064920Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.7065500Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.7067030Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.7067300Z _______ ERROR at setup of TestSpectrumSolver.test_spectrum_real_packets ________
2025-01-09T18:24:10.7067820Z 
2025-01-09T18:24:10.7068040Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x13a851a00>
2025-01-09T18:24:10.7068180Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-09T18:24:10.7068500Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7068580Z generate_reference = False
2025-01-09T18:24:10.7068760Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-09T18:24:10.7068760Z 
2025-01-09T18:24:10.7068830Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7068890Z     def simulation(
2025-01-09T18:24:10.7068940Z         self,
2025-01-09T18:24:10.7068990Z         request,
2025-01-09T18:24:10.7069050Z         atomic_data_fname,
2025-01-09T18:24:10.7069100Z         generate_reference,
2025-01-09T18:24:10.7069170Z         example_configuration_dir: Path,
2025-01-09T18:24:10.7069220Z     ):
2025-01-09T18:24:10.7069290Z         config = Configuration.from_yaml(
2025-01-09T18:24:10.7069430Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-09T18:24:10.7069490Z         )
2025-01-09T18:24:10.7069560Z         config["atom_data"] = atomic_data_fname
2025-01-09T18:24:10.7069610Z     
2025-01-09T18:24:10.7069690Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7069750Z >       simulation.run_final()
2025-01-09T18:24:10.7069760Z 
2025-01-09T18:24:10.7069850Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-09T18:24:10.7069940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7070020Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7070130Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7070200Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7070350Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7070590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7070590Z 
2025-01-09T18:24:10.7070890Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x159735280>
2025-01-09T18:24:10.7071060Z simulation_state = <tardis.model.base.SimulationState object at 0x15a5e7fb0>
2025-01-09T18:24:10.7071580Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16464f020>
2025-01-09T18:24:10.7071920Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16464c2c0>
2025-01-09T18:24:10.7072120Z plasma = <tardis.plasma.base.BasePlasma object at 0x15a5e8260>
2025-01-09T18:24:10.7083880Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7083920Z 
2025-01-09T18:24:10.7084040Z     def initialize_transport_state(
2025-01-09T18:24:10.7084080Z         self,
2025-01-09T18:24:10.7084140Z         simulation_state,
2025-01-09T18:24:10.7084210Z         opacity_state,
2025-01-09T18:24:10.7084270Z         macro_atom_state,
2025-01-09T18:24:10.7084320Z         plasma,
2025-01-09T18:24:10.7084370Z         no_of_packets,
2025-01-09T18:24:10.7084440Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7084500Z         iteration=0,
2025-01-09T18:24:10.7084540Z     ):
2025-01-09T18:24:10.7084640Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7084720Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7084770Z         else:
2025-01-09T18:24:10.7084830Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7084870Z     
2025-01-09T18:24:10.7084980Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7085050Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7085100Z         )
2025-01-09T18:24:10.7085150Z     
2025-01-09T18:24:10.7085260Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7085340Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7086010Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7086010Z 
2025-01-09T18:24:10.7086110Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7086270Z __ ERROR at setup of TestSpectrumSolver.test_spectrum_real_packets_reabsorbed __
2025-01-09T18:24:10.7086280Z 
2025-01-09T18:24:10.7086480Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x13a851a00>
2025-01-09T18:24:10.7086620Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-09T18:24:10.7086930Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7086990Z generate_reference = False
2025-01-09T18:24:10.7087160Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-09T18:24:10.7087180Z 
2025-01-09T18:24:10.7087240Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7087300Z     def simulation(
2025-01-09T18:24:10.7087340Z         self,
2025-01-09T18:24:10.7087390Z         request,
2025-01-09T18:24:10.7087440Z         atomic_data_fname,
2025-01-09T18:24:10.7087500Z         generate_reference,
2025-01-09T18:24:10.7087590Z         example_configuration_dir: Path,
2025-01-09T18:24:10.7087640Z     ):
2025-01-09T18:24:10.7087710Z         config = Configuration.from_yaml(
2025-01-09T18:24:10.7087840Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-09T18:24:10.7087890Z         )
2025-01-09T18:24:10.7087960Z         config["atom_data"] = atomic_data_fname
2025-01-09T18:24:10.7088020Z     
2025-01-09T18:24:10.7088120Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7088190Z >       simulation.run_final()
2025-01-09T18:24:10.7088190Z 
2025-01-09T18:24:10.7088280Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-09T18:24:10.7088380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7088450Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7088560Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7088630Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7088880Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7088970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7088980Z 
2025-01-09T18:24:10.7089180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x159735280>
2025-01-09T18:24:10.7089340Z simulation_state = <tardis.model.base.SimulationState object at 0x15a5e7fb0>
2025-01-09T18:24:10.7089510Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16464f020>
2025-01-09T18:24:10.7089730Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16464c2c0>
2025-01-09T18:24:10.7089860Z plasma = <tardis.plasma.base.BasePlasma object at 0x15a5e8260>
2025-01-09T18:24:10.7089980Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7089980Z 
2025-01-09T18:24:10.7090050Z     def initialize_transport_state(
2025-01-09T18:24:10.7090100Z         self,
2025-01-09T18:24:10.7090160Z         simulation_state,
2025-01-09T18:24:10.7090220Z         opacity_state,
2025-01-09T18:24:10.7090280Z         macro_atom_state,
2025-01-09T18:24:10.7090330Z         plasma,
2025-01-09T18:24:10.7090380Z         no_of_packets,
2025-01-09T18:24:10.7090440Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7090480Z         iteration=0,
2025-01-09T18:24:10.7090530Z     ):
2025-01-09T18:24:10.7090630Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7090700Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7090750Z         else:
2025-01-09T18:24:10.7090820Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7090960Z     
2025-01-09T18:24:10.7091060Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7091130Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7091180Z         )
2025-01-09T18:24:10.7091230Z     
2025-01-09T18:24:10.7091330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7091430Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7091810Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7091810Z 
2025-01-09T18:24:10.7091900Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7092040Z _______________ ERROR at setup of TestSpectrumSolver.test_solve ________________
2025-01-09T18:24:10.7092040Z 
2025-01-09T18:24:10.7092240Z self = <tardis.spectrum.tests.test_spectrum_solver.TestSpectrumSolver object at 0x13a851a00>
2025-01-09T18:24:10.7092390Z request = <SubRequest 'simulation' for <Function test_initialization>>
2025-01-09T18:24:10.7092680Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7092740Z generate_reference = False
2025-01-09T18:24:10.7092890Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-09T18:24:10.7092900Z 
2025-01-09T18:24:10.7092980Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7093030Z     def simulation(
2025-01-09T18:24:10.7093080Z         self,
2025-01-09T18:24:10.7093120Z         request,
2025-01-09T18:24:10.7093180Z         atomic_data_fname,
2025-01-09T18:24:10.7093240Z         generate_reference,
2025-01-09T18:24:10.7093300Z         example_configuration_dir: Path,
2025-01-09T18:24:10.7093350Z     ):
2025-01-09T18:24:10.7093410Z         config = Configuration.from_yaml(
2025-01-09T18:24:10.7093550Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-09T18:24:10.7093600Z         )
2025-01-09T18:24:10.7093680Z         config["atom_data"] = atomic_data_fname
2025-01-09T18:24:10.7093720Z     
2025-01-09T18:24:10.7093810Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7093880Z >       simulation.run_final()
2025-01-09T18:24:10.7093880Z 
2025-01-09T18:24:10.7094070Z tardis/spectrum/tests/test_spectrum_solver.py:32: 
2025-01-09T18:24:10.7094160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7094240Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7094350Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7094420Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7094540Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7094630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7094630Z 
2025-01-09T18:24:10.7094860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x159735280>
2025-01-09T18:24:10.7095020Z simulation_state = <tardis.model.base.SimulationState object at 0x15a5e7fb0>
2025-01-09T18:24:10.7095200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16464f020>
2025-01-09T18:24:10.7095410Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16464c2c0>
2025-01-09T18:24:10.7095540Z plasma = <tardis.plasma.base.BasePlasma object at 0x15a5e8260>
2025-01-09T18:24:10.7095670Z no_of_packets = 500000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7095680Z 
2025-01-09T18:24:10.7095750Z     def initialize_transport_state(
2025-01-09T18:24:10.7095800Z         self,
2025-01-09T18:24:10.7095850Z         simulation_state,
2025-01-09T18:24:10.7095900Z         opacity_state,
2025-01-09T18:24:10.7095950Z         macro_atom_state,
2025-01-09T18:24:10.7096000Z         plasma,
2025-01-09T18:24:10.7096050Z         no_of_packets,
2025-01-09T18:24:10.7096200Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7096250Z         iteration=0,
2025-01-09T18:24:10.7096310Z     ):
2025-01-09T18:24:10.7096410Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7096480Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7096520Z         else:
2025-01-09T18:24:10.7096590Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7096630Z     
2025-01-09T18:24:10.7096740Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7096820Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7096880Z         )
2025-01-09T18:24:10.7096920Z     
2025-01-09T18:24:10.7097030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7097110Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7097480Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7097490Z 
2025-01-09T18:24:10.7097590Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7097750Z _________ ERROR at setup of TestTransportSimple.test_j_blue_estimators _________
2025-01-09T18:24:10.7097750Z 
2025-01-09T18:24:10.7097910Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x13bc7c8c0>
2025-01-09T18:24:10.7098060Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-09T18:24:10.7098360Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7098430Z generate_reference = False
2025-01-09T18:24:10.7098580Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-09T18:24:10.7098590Z 
2025-01-09T18:24:10.7098650Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7098700Z     def simulation(
2025-01-09T18:24:10.7098740Z         self,
2025-01-09T18:24:10.7098790Z         request,
2025-01-09T18:24:10.7098850Z         atomic_data_fname,
2025-01-09T18:24:10.7098900Z         generate_reference,
2025-01-09T18:24:10.7098970Z         example_configuration_dir: Path,
2025-01-09T18:24:10.7099020Z     ):
2025-01-09T18:24:10.7099090Z         config = Configuration.from_yaml(
2025-01-09T18:24:10.7099300Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-09T18:24:10.7099350Z         )
2025-01-09T18:24:10.7099430Z         config["atom_data"] = atomic_data_fname
2025-01-09T18:24:10.7099490Z     
2025-01-09T18:24:10.7099570Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7099630Z >       simulation.run_convergence()
2025-01-09T18:24:10.7099630Z 
2025-01-09T18:24:10.7099710Z tardis/tests/test_tardis_full.py:54: 
2025-01-09T18:24:10.7099800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7099890Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7100000Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7100070Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7100190Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7100280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7100290Z 
2025-01-09T18:24:10.7100490Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1785ec770>
2025-01-09T18:24:10.7100650Z simulation_state = <tardis.model.base.SimulationState object at 0x1793e5b80>
2025-01-09T18:24:10.7100820Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1790aa2d0>
2025-01-09T18:24:10.7101030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1790aa8d0>
2025-01-09T18:24:10.7101160Z plasma = <tardis.plasma.base.BasePlasma object at 0x1793e5370>
2025-01-09T18:24:10.7101270Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7101660Z 
2025-01-09T18:24:10.7101760Z     def initialize_transport_state(
2025-01-09T18:24:10.7101810Z         self,
2025-01-09T18:24:10.7101870Z         simulation_state,
2025-01-09T18:24:10.7101920Z         opacity_state,
2025-01-09T18:24:10.7101970Z         macro_atom_state,
2025-01-09T18:24:10.7102020Z         plasma,
2025-01-09T18:24:10.7102070Z         no_of_packets,
2025-01-09T18:24:10.7102130Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7102180Z         iteration=0,
2025-01-09T18:24:10.7102220Z     ):
2025-01-09T18:24:10.7102330Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7102420Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7102460Z         else:
2025-01-09T18:24:10.7102520Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7102560Z     
2025-01-09T18:24:10.7102670Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7102740Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7102790Z         )
2025-01-09T18:24:10.7102830Z     
2025-01-09T18:24:10.7102940Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7103010Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7103400Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7103400Z 
2025-01-09T18:24:10.7103500Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7103630Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.7103950Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7104090Z 	
2025-01-09T18:24:10.7104550Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-09T18:24:10.7104710Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7105050Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-09T18:24:10.7105190Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7105570Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-09T18:24:10.7106360Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.7106700Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.7106840Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7107010Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:10.7107140Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7107190Z 	
2025-01-09T18:24:10.7107300Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-09T18:24:10.7107430Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.7107550Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-09T18:24:10.7107810Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-09T18:24:10.7108120Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-09T18:24:10.7108480Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-09T18:24:10.7108880Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.7109160Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:10.7109250Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:10.7109310Z 	Starting iteration 1 of 5
2025-01-09T18:24:10.7109450Z _____________ ERROR at setup of TestTransportSimple.test_spectrum ______________
2025-01-09T18:24:10.7109470Z 
2025-01-09T18:24:10.7109650Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x13bc7c8c0>
2025-01-09T18:24:10.7109800Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-09T18:24:10.7110100Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7110170Z generate_reference = False
2025-01-09T18:24:10.7110320Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-09T18:24:10.7110320Z 
2025-01-09T18:24:10.7110390Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7110440Z     def simulation(
2025-01-09T18:24:10.7110490Z         self,
2025-01-09T18:24:10.7110540Z         request,
2025-01-09T18:24:10.7110600Z         atomic_data_fname,
2025-01-09T18:24:10.7110650Z         generate_reference,
2025-01-09T18:24:10.7110720Z         example_configuration_dir: Path,
2025-01-09T18:24:10.7110770Z     ):
2025-01-09T18:24:10.7110840Z         config = Configuration.from_yaml(
2025-01-09T18:24:10.7110980Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-09T18:24:10.7111020Z         )
2025-01-09T18:24:10.7111100Z         config["atom_data"] = atomic_data_fname
2025-01-09T18:24:10.7111140Z     
2025-01-09T18:24:10.7111230Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7111290Z >       simulation.run_convergence()
2025-01-09T18:24:10.7111290Z 
2025-01-09T18:24:10.7111360Z tardis/tests/test_tardis_full.py:54: 
2025-01-09T18:24:10.7111450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7111560Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7111670Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7111740Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7111860Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7112030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7112030Z 
2025-01-09T18:24:10.7112250Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1785ec770>
2025-01-09T18:24:10.7112410Z simulation_state = <tardis.model.base.SimulationState object at 0x1793e5b80>
2025-01-09T18:24:10.7112600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1790aa2d0>
2025-01-09T18:24:10.7112820Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1790aa8d0>
2025-01-09T18:24:10.7112950Z plasma = <tardis.plasma.base.BasePlasma object at 0x1793e5370>
2025-01-09T18:24:10.7113060Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7113070Z 
2025-01-09T18:24:10.7113140Z     def initialize_transport_state(
2025-01-09T18:24:10.7113180Z         self,
2025-01-09T18:24:10.7113240Z         simulation_state,
2025-01-09T18:24:10.7113290Z         opacity_state,
2025-01-09T18:24:10.7113340Z         macro_atom_state,
2025-01-09T18:24:10.7113390Z         plasma,
2025-01-09T18:24:10.7113440Z         no_of_packets,
2025-01-09T18:24:10.7113500Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7113550Z         iteration=0,
2025-01-09T18:24:10.7113600Z     ):
2025-01-09T18:24:10.7113690Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7113770Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7113810Z         else:
2025-01-09T18:24:10.7113870Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7113910Z     
2025-01-09T18:24:10.7114020Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7114180Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7114230Z         )
2025-01-09T18:24:10.7114270Z     
2025-01-09T18:24:10.7114370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7114450Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7114830Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7114830Z 
2025-01-09T18:24:10.7114920Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7128120Z _________ ERROR at setup of TestTransportSimple.test_virtual_spectrum __________
2025-01-09T18:24:10.7128160Z 
2025-01-09T18:24:10.7128320Z self = <tardis.tests.test_tardis_full.TestTransportSimple object at 0x13bc7c8c0>
2025-01-09T18:24:10.7128460Z request = <SubRequest 'simulation' for <Function test_j_blue_estimators>>
2025-01-09T18:24:10.7128790Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7128850Z generate_reference = False
2025-01-09T18:24:10.7129000Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-09T18:24:10.7129010Z 
2025-01-09T18:24:10.7129080Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7129130Z     def simulation(
2025-01-09T18:24:10.7129180Z         self,
2025-01-09T18:24:10.7129230Z         request,
2025-01-09T18:24:10.7129280Z         atomic_data_fname,
2025-01-09T18:24:10.7129330Z         generate_reference,
2025-01-09T18:24:10.7129400Z         example_configuration_dir: Path,
2025-01-09T18:24:10.7129440Z     ):
2025-01-09T18:24:10.7129510Z         config = Configuration.from_yaml(
2025-01-09T18:24:10.7129650Z             str(example_configuration_dir / "tardis_configv1_verysimple.yml")
2025-01-09T18:24:10.7129700Z         )
2025-01-09T18:24:10.7129770Z         config["atom_data"] = atomic_data_fname
2025-01-09T18:24:10.7129820Z     
2025-01-09T18:24:10.7129900Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7129960Z >       simulation.run_convergence()
2025-01-09T18:24:10.7129970Z 
2025-01-09T18:24:10.7130030Z tardis/tests/test_tardis_full.py:54: 
2025-01-09T18:24:10.7130430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7130520Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7130630Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7130710Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7130830Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7130920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7130920Z 
2025-01-09T18:24:10.7131120Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1785ec770>
2025-01-09T18:24:10.7131290Z simulation_state = <tardis.model.base.SimulationState object at 0x1793e5b80>
2025-01-09T18:24:10.7131460Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1790aa2d0>
2025-01-09T18:24:10.7131690Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1790aa8d0>
2025-01-09T18:24:10.7131830Z plasma = <tardis.plasma.base.BasePlasma object at 0x1793e5370>
2025-01-09T18:24:10.7131940Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7131940Z 
2025-01-09T18:24:10.7132010Z     def initialize_transport_state(
2025-01-09T18:24:10.7132060Z         self,
2025-01-09T18:24:10.7132110Z         simulation_state,
2025-01-09T18:24:10.7132160Z         opacity_state,
2025-01-09T18:24:10.7132220Z         macro_atom_state,
2025-01-09T18:24:10.7132260Z         plasma,
2025-01-09T18:24:10.7132310Z         no_of_packets,
2025-01-09T18:24:10.7132380Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7132600Z         iteration=0,
2025-01-09T18:24:10.7132650Z     ):
2025-01-09T18:24:10.7132750Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7132820Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7132870Z         else:
2025-01-09T18:24:10.7132930Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7132980Z     
2025-01-09T18:24:10.7133090Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7133160Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7133210Z         )
2025-01-09T18:24:10.7133250Z     
2025-01-09T18:24:10.7133350Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7133430Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7133810Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7133810Z 
2025-01-09T18:24:10.7133910Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7135090Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[-1-downbranch] _
2025-01-09T18:24:10.7135100Z 
2025-01-09T18:24:10.7135360Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7135840Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7136140Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7136140Z 
2025-01-09T18:24:10.7136210Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7136290Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7136370Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7136410Z     
2025-01-09T18:24:10.7136550Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7136660Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7136720Z             self.name += "_interp"
2025-01-09T18:24:10.7136860Z     
2025-01-09T18:24:10.7136950Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7137020Z >       simulation.run_convergence()
2025-01-09T18:24:10.7137020Z 
2025-01-09T18:24:10.7137120Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7137210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7137300Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7137410Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7137480Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7137620Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7137720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7137720Z 
2025-01-09T18:24:10.7137940Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16461ad20>
2025-01-09T18:24:10.7138110Z simulation_state = <tardis.model.base.SimulationState object at 0x17937c9b0>
2025-01-09T18:24:10.7138290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15a5e72f0>
2025-01-09T18:24:10.7138500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x15a5e7080>
2025-01-09T18:24:10.7138630Z plasma = <tardis.plasma.base.BasePlasma object at 0x31bb07950>
2025-01-09T18:24:10.7138730Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7138740Z 
2025-01-09T18:24:10.7138800Z     def initialize_transport_state(
2025-01-09T18:24:10.7138850Z         self,
2025-01-09T18:24:10.7138900Z         simulation_state,
2025-01-09T18:24:10.7139260Z         opacity_state,
2025-01-09T18:24:10.7139310Z         macro_atom_state,
2025-01-09T18:24:10.7139370Z         plasma,
2025-01-09T18:24:10.7139420Z         no_of_packets,
2025-01-09T18:24:10.7139480Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7139520Z         iteration=0,
2025-01-09T18:24:10.7139570Z     ):
2025-01-09T18:24:10.7139670Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7139750Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7139790Z         else:
2025-01-09T18:24:10.7139850Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7139890Z     
2025-01-09T18:24:10.7140000Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7140080Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7140120Z         )
2025-01-09T18:24:10.7140170Z     
2025-01-09T18:24:10.7140270Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7140340Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7140720Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7140730Z 
2025-01-09T18:24:10.7140820Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7140950Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.7146100Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'downbranch', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7146850Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7146900Z 	
2025-01-09T18:24:10.7147340Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-09T18:24:10.7147480Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7147810Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-09T18:24:10.7147940Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7148310Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-09T18:24:10.7148500Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.7148830Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.7148970Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7149140Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:10.7149260Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7149310Z 	
2025-01-09T18:24:10.7149420Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-09T18:24:10.7149550Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.7149670Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-09T18:24:10.7149940Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-09T18:24:10.7150240Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-09T18:24:10.7150610Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-09T18:24:10.7151020Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.7151330Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:10.7151430Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:10.7151500Z 	Starting iteration 1 of 5
2025-01-09T18:24:10.7151710Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-downbranch] _
2025-01-09T18:24:10.7151720Z 
2025-01-09T18:24:10.7151960Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7152450Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7152760Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7152770Z 
2025-01-09T18:24:10.7152840Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7152930Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7153000Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7153050Z     
2025-01-09T18:24:10.7153180Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7153300Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7153350Z             self.name += "_interp"
2025-01-09T18:24:10.7153400Z     
2025-01-09T18:24:10.7153480Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7153650Z >       simulation.run_convergence()
2025-01-09T18:24:10.7153650Z 
2025-01-09T18:24:10.7153760Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7153870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7153950Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7154070Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7154140Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7154270Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7154390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7154400Z 
2025-01-09T18:24:10.7154600Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16461ad20>
2025-01-09T18:24:10.7154750Z simulation_state = <tardis.model.base.SimulationState object at 0x17937c9b0>
2025-01-09T18:24:10.7154930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15a5e72f0>
2025-01-09T18:24:10.7155160Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x15a5e7080>
2025-01-09T18:24:10.7155290Z plasma = <tardis.plasma.base.BasePlasma object at 0x31bb07950>
2025-01-09T18:24:10.7155400Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7155410Z 
2025-01-09T18:24:10.7155470Z     def initialize_transport_state(
2025-01-09T18:24:10.7155520Z         self,
2025-01-09T18:24:10.7155580Z         simulation_state,
2025-01-09T18:24:10.7155620Z         opacity_state,
2025-01-09T18:24:10.7155680Z         macro_atom_state,
2025-01-09T18:24:10.7155720Z         plasma,
2025-01-09T18:24:10.7155770Z         no_of_packets,
2025-01-09T18:24:10.7155830Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7155880Z         iteration=0,
2025-01-09T18:24:10.7155920Z     ):
2025-01-09T18:24:10.7156030Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7156100Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7156150Z         else:
2025-01-09T18:24:10.7156200Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7156250Z     
2025-01-09T18:24:10.7156350Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7156430Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7156550Z         )
2025-01-09T18:24:10.7156600Z     
2025-01-09T18:24:10.7156700Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7156780Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7157160Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7157160Z 
2025-01-09T18:24:10.7157250Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7157440Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[-1-downbranch] _
2025-01-09T18:24:10.7157450Z 
2025-01-09T18:24:10.7157700Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7158170Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7158480Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7158490Z 
2025-01-09T18:24:10.7158560Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7158650Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7158720Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7158760Z     
2025-01-09T18:24:10.7158890Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7159090Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7159150Z             self.name += "_interp"
2025-01-09T18:24:10.7159200Z     
2025-01-09T18:24:10.7159280Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7159350Z >       simulation.run_convergence()
2025-01-09T18:24:10.7159350Z 
2025-01-09T18:24:10.7159460Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7159540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7159630Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7159740Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7159810Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7159930Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7160020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7160030Z 
2025-01-09T18:24:10.7160240Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16461ad20>
2025-01-09T18:24:10.7160400Z simulation_state = <tardis.model.base.SimulationState object at 0x17937c9b0>
2025-01-09T18:24:10.7160570Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15a5e72f0>
2025-01-09T18:24:10.7160800Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x15a5e7080>
2025-01-09T18:24:10.7160930Z plasma = <tardis.plasma.base.BasePlasma object at 0x31bb07950>
2025-01-09T18:24:10.7161040Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7167240Z 
2025-01-09T18:24:10.7167370Z     def initialize_transport_state(
2025-01-09T18:24:10.7167420Z         self,
2025-01-09T18:24:10.7167480Z         simulation_state,
2025-01-09T18:24:10.7167540Z         opacity_state,
2025-01-09T18:24:10.7167730Z         macro_atom_state,
2025-01-09T18:24:10.7167780Z         plasma,
2025-01-09T18:24:10.7167850Z         no_of_packets,
2025-01-09T18:24:10.7167910Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7167970Z         iteration=0,
2025-01-09T18:24:10.7168010Z     ):
2025-01-09T18:24:10.7168110Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7168190Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7168450Z         else:
2025-01-09T18:24:10.7168520Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7168560Z     
2025-01-09T18:24:10.7168670Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7168750Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7168800Z         )
2025-01-09T18:24:10.7168850Z     
2025-01-09T18:24:10.7168950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7169030Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7169430Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7169430Z 
2025-01-09T18:24:10.7169530Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7169750Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-downbranch] _
2025-01-09T18:24:10.7169760Z 
2025-01-09T18:24:10.7170020Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7170500Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7170810Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7170820Z 
2025-01-09T18:24:10.7170890Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7171460Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7171540Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7171580Z     
2025-01-09T18:24:10.7171900Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7172020Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7172090Z             self.name += "_interp"
2025-01-09T18:24:10.7172140Z     
2025-01-09T18:24:10.7172220Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7172290Z >       simulation.run_convergence()
2025-01-09T18:24:10.7172300Z 
2025-01-09T18:24:10.7172400Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7172500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7172580Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7172690Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7172770Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7172890Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7172980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7172980Z 
2025-01-09T18:24:10.7173190Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16461ad20>
2025-01-09T18:24:10.7173350Z simulation_state = <tardis.model.base.SimulationState object at 0x17937c9b0>
2025-01-09T18:24:10.7173520Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15a5e72f0>
2025-01-09T18:24:10.7173750Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x15a5e7080>
2025-01-09T18:24:10.7173870Z plasma = <tardis.plasma.base.BasePlasma object at 0x31bb07950>
2025-01-09T18:24:10.7173990Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7173990Z 
2025-01-09T18:24:10.7174060Z     def initialize_transport_state(
2025-01-09T18:24:10.7174110Z         self,
2025-01-09T18:24:10.7174160Z         simulation_state,
2025-01-09T18:24:10.7174220Z         opacity_state,
2025-01-09T18:24:10.7174270Z         macro_atom_state,
2025-01-09T18:24:10.7174320Z         plasma,
2025-01-09T18:24:10.7174370Z         no_of_packets,
2025-01-09T18:24:10.7174660Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7174710Z         iteration=0,
2025-01-09T18:24:10.7174750Z     ):
2025-01-09T18:24:10.7174860Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7174930Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7174980Z         else:
2025-01-09T18:24:10.7175030Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7175070Z     
2025-01-09T18:24:10.7175180Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7175260Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7175300Z         )
2025-01-09T18:24:10.7175350Z     
2025-01-09T18:24:10.7175460Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7175540Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7210920Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7211130Z 
2025-01-09T18:24:10.7211620Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7212130Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[-1-macroatom] _
2025-01-09T18:24:10.7212140Z 
2025-01-09T18:24:10.7212820Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7214170Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7215430Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7215440Z 
2025-01-09T18:24:10.7215630Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7215870Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7216100Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7216250Z     
2025-01-09T18:24:10.7216600Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7217140Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7217320Z             self.name += "_interp"
2025-01-09T18:24:10.7217460Z     
2025-01-09T18:24:10.7217690Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7217870Z >       simulation.run_convergence()
2025-01-09T18:24:10.7217890Z 
2025-01-09T18:24:10.7218160Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7218410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7218650Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7218950Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7219170Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7219600Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7219920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7219940Z 
2025-01-09T18:24:10.7220620Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31a788d40>
2025-01-09T18:24:10.7221130Z simulation_state = <tardis.model.base.SimulationState object at 0x3064ea4b0>
2025-01-09T18:24:10.7221670Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30f2f7290>
2025-01-09T18:24:10.7222250Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30f3bf170>
2025-01-09T18:24:10.7222580Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f3df5f0>
2025-01-09T18:24:10.7222880Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7222890Z 
2025-01-09T18:24:10.7223070Z     def initialize_transport_state(
2025-01-09T18:24:10.7223490Z         self,
2025-01-09T18:24:10.7223650Z         simulation_state,
2025-01-09T18:24:10.7223810Z         opacity_state,
2025-01-09T18:24:10.7223970Z         macro_atom_state,
2025-01-09T18:24:10.7224230Z         plasma,
2025-01-09T18:24:10.7224390Z         no_of_packets,
2025-01-09T18:24:10.7224570Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7224720Z         iteration=0,
2025-01-09T18:24:10.7224860Z     ):
2025-01-09T18:24:10.7225150Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7225400Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7225590Z         else:
2025-01-09T18:24:10.7225780Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7225940Z     
2025-01-09T18:24:10.7226220Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7226460Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7226630Z         )
2025-01-09T18:24:10.7226790Z     
2025-01-09T18:24:10.7227100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7227330Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7228420Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7228440Z 
2025-01-09T18:24:10.7228720Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7229050Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.7243440Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'macroatom', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7244750Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7244900Z 	
2025-01-09T18:24:10.7246260Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-09T18:24:10.7246650Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7247540Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-09T18:24:10.7247950Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7248940Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-09T18:24:10.7249440Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.7250370Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.7286590Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7287120Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:10.7287260Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7287310Z 	
2025-01-09T18:24:10.7287440Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-09T18:24:10.7287570Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.7287990Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-09T18:24:10.7288270Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-09T18:24:10.7288580Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-09T18:24:10.7288930Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-09T18:24:10.7289330Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.7289510Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:10.7289590Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:10.7289660Z 	Starting iteration 1 of 5
2025-01-09T18:24:10.7289900Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[-1-macroatom] _
2025-01-09T18:24:10.7289910Z 
2025-01-09T18:24:10.7290160Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7290660Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7290990Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7291010Z 
2025-01-09T18:24:10.7291090Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7291200Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7291280Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7291340Z     
2025-01-09T18:24:10.7291490Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7291630Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7291700Z             self.name += "_interp"
2025-01-09T18:24:10.7291760Z     
2025-01-09T18:24:10.7291990Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7292060Z >       simulation.run_convergence()
2025-01-09T18:24:10.7292060Z 
2025-01-09T18:24:10.7292160Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7292260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7292360Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7292500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7292580Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7292710Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7292810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7292810Z 
2025-01-09T18:24:10.7293020Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31a788d40>
2025-01-09T18:24:10.7293200Z simulation_state = <tardis.model.base.SimulationState object at 0x3064ea4b0>
2025-01-09T18:24:10.7293380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30f2f7290>
2025-01-09T18:24:10.7293620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30f3bf170>
2025-01-09T18:24:10.7293750Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f3df5f0>
2025-01-09T18:24:10.7293860Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7293860Z 
2025-01-09T18:24:10.7293930Z     def initialize_transport_state(
2025-01-09T18:24:10.7293980Z         self,
2025-01-09T18:24:10.7294040Z         simulation_state,
2025-01-09T18:24:10.7294330Z         opacity_state,
2025-01-09T18:24:10.7294380Z         macro_atom_state,
2025-01-09T18:24:10.7294430Z         plasma,
2025-01-09T18:24:10.7294480Z         no_of_packets,
2025-01-09T18:24:10.7294540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7294590Z         iteration=0,
2025-01-09T18:24:10.7294640Z     ):
2025-01-09T18:24:10.7294740Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7294810Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7294860Z         else:
2025-01-09T18:24:10.7294920Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7294960Z     
2025-01-09T18:24:10.7295070Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7295140Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7295190Z         )
2025-01-09T18:24:10.7295230Z     
2025-01-09T18:24:10.7295330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7295410Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7295790Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7295800Z 
2025-01-09T18:24:10.7295900Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7296100Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[-1-macroatom] _
2025-01-09T18:24:10.7296110Z 
2025-01-09T18:24:10.7296360Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7296830Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7297140Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7297150Z 
2025-01-09T18:24:10.7297210Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7297310Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7297380Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7297430Z     
2025-01-09T18:24:10.7297800Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7297920Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7297990Z             self.name += "_interp"
2025-01-09T18:24:10.7298030Z     
2025-01-09T18:24:10.7298120Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7298180Z >       simulation.run_convergence()
2025-01-09T18:24:10.7298180Z 
2025-01-09T18:24:10.7298280Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7298730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7298830Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7298940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7299020Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7299140Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7299240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7299240Z 
2025-01-09T18:24:10.7299460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31a788d40>
2025-01-09T18:24:10.7299620Z simulation_state = <tardis.model.base.SimulationState object at 0x3064ea4b0>
2025-01-09T18:24:10.7299800Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30f2f7290>
2025-01-09T18:24:10.7300010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30f3bf170>
2025-01-09T18:24:10.7300130Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f3df5f0>
2025-01-09T18:24:10.7300350Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7300350Z 
2025-01-09T18:24:10.7300420Z     def initialize_transport_state(
2025-01-09T18:24:10.7300460Z         self,
2025-01-09T18:24:10.7300520Z         simulation_state,
2025-01-09T18:24:10.7300570Z         opacity_state,
2025-01-09T18:24:10.7300630Z         macro_atom_state,
2025-01-09T18:24:10.7300680Z         plasma,
2025-01-09T18:24:10.7300730Z         no_of_packets,
2025-01-09T18:24:10.7300790Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7300840Z         iteration=0,
2025-01-09T18:24:10.7300890Z     ):
2025-01-09T18:24:10.7300980Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7301060Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7301100Z         else:
2025-01-09T18:24:10.7301160Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7301220Z     
2025-01-09T18:24:10.7301330Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7301410Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7301460Z         )
2025-01-09T18:24:10.7301500Z     
2025-01-09T18:24:10.7301600Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7301670Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7302060Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7302060Z 
2025-01-09T18:24:10.7302150Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7302360Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[-1-macroatom] _
2025-01-09T18:24:10.7302370Z 
2025-01-09T18:24:10.7302620Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7303110Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': -1, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7303440Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7303520Z 
2025-01-09T18:24:10.7303620Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7303720Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7303790Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7303840Z     
2025-01-09T18:24:10.7304000Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7304110Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7304190Z             self.name += "_interp"
2025-01-09T18:24:10.7304240Z     
2025-01-09T18:24:10.7304340Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7304410Z >       simulation.run_convergence()
2025-01-09T18:24:10.7304420Z 
2025-01-09T18:24:10.7304520Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7304610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7304700Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7304820Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7304890Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7305010Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7305120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7305120Z 
2025-01-09T18:24:10.7305340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x31a788d40>
2025-01-09T18:24:10.7305490Z simulation_state = <tardis.model.base.SimulationState object at 0x3064ea4b0>
2025-01-09T18:24:10.7305680Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x30f2f7290>
2025-01-09T18:24:10.7306000Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x30f3bf170>
2025-01-09T18:24:10.7306130Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f3df5f0>
2025-01-09T18:24:10.7306250Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7306270Z 
2025-01-09T18:24:10.7306330Z     def initialize_transport_state(
2025-01-09T18:24:10.7306450Z         self,
2025-01-09T18:24:10.7306650Z         simulation_state,
2025-01-09T18:24:10.7306720Z         opacity_state,
2025-01-09T18:24:10.7306770Z         macro_atom_state,
2025-01-09T18:24:10.7306820Z         plasma,
2025-01-09T18:24:10.7306860Z         no_of_packets,
2025-01-09T18:24:10.7306920Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7306970Z         iteration=0,
2025-01-09T18:24:10.7307020Z     ):
2025-01-09T18:24:10.7307110Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7307190Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7307250Z         else:
2025-01-09T18:24:10.7307310Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7307350Z     
2025-01-09T18:24:10.7307470Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7307550Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7307600Z         )
2025-01-09T18:24:10.7307650Z     
2025-01-09T18:24:10.7307740Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7307820Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7308200Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7308210Z 
2025-01-09T18:24:10.7308310Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7308840Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[30-macroatom] _
2025-01-09T18:24:10.7308870Z 
2025-01-09T18:24:10.7309200Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7309690Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7310170Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7310180Z 
2025-01-09T18:24:10.7310250Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7310340Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7310410Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7310460Z     
2025-01-09T18:24:10.7310610Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7310750Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7310810Z             self.name += "_interp"
2025-01-09T18:24:10.7310870Z     
2025-01-09T18:24:10.7310950Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7311020Z >       simulation.run_convergence()
2025-01-09T18:24:10.7311030Z 
2025-01-09T18:24:10.7311130Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7311240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7311330Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7311450Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7311520Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7311650Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7311740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7311830Z 
2025-01-09T18:24:10.7312040Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x157995340>
2025-01-09T18:24:10.7312200Z simulation_state = <tardis.model.base.SimulationState object at 0x151843920>
2025-01-09T18:24:10.7312380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15798a810>
2025-01-09T18:24:10.7312600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x15798bad0>
2025-01-09T18:24:10.7312730Z plasma = <tardis.plasma.base.BasePlasma object at 0x14944eea0>
2025-01-09T18:24:10.7312840Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7312840Z 
2025-01-09T18:24:10.7312910Z     def initialize_transport_state(
2025-01-09T18:24:10.7312960Z         self,
2025-01-09T18:24:10.7313010Z         simulation_state,
2025-01-09T18:24:10.7313060Z         opacity_state,
2025-01-09T18:24:10.7313120Z         macro_atom_state,
2025-01-09T18:24:10.7313160Z         plasma,
2025-01-09T18:24:10.7313220Z         no_of_packets,
2025-01-09T18:24:10.7313280Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7313330Z         iteration=0,
2025-01-09T18:24:10.7313370Z     ):
2025-01-09T18:24:10.7313470Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7313550Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7313600Z         else:
2025-01-09T18:24:10.7313650Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7313700Z     
2025-01-09T18:24:10.7313810Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7313880Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7313920Z         )
2025-01-09T18:24:10.7313970Z     
2025-01-09T18:24:10.7314070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7314150Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7314540Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7314550Z 
2025-01-09T18:24:10.7314640Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7314770Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.7315060Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7315170Z 	
2025-01-09T18:24:10.7315600Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-09T18:24:10.7315740Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7316070Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-09T18:24:10.7316200Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7316560Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-09T18:24:10.7316760Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.7317090Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.7317230Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7317390Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:10.7317520Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7317560Z 	
2025-01-09T18:24:10.7317670Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-09T18:24:10.7317800Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.7317920Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-09T18:24:10.7318190Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-09T18:24:10.7318710Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-09T18:24:10.7319050Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-09T18:24:10.7319450Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.7319620Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:10.7319710Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:10.7319770Z 	Starting iteration 1 of 5
2025-01-09T18:24:10.7319970Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-macroatom] _
2025-01-09T18:24:10.7319980Z 
2025-01-09T18:24:10.7320230Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7320700Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7321000Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7321000Z 
2025-01-09T18:24:10.7321060Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7321160Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7321230Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7321270Z     
2025-01-09T18:24:10.7321400Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7321510Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7321580Z             self.name += "_interp"
2025-01-09T18:24:10.7321620Z     
2025-01-09T18:24:10.7321710Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7321770Z >       simulation.run_convergence()
2025-01-09T18:24:10.7321770Z 
2025-01-09T18:24:10.7321880Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7322320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7322410Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7322520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7322590Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7322710Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7322800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7322800Z 
2025-01-09T18:24:10.7323010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x157995340>
2025-01-09T18:24:10.7323160Z simulation_state = <tardis.model.base.SimulationState object at 0x151843920>
2025-01-09T18:24:10.7323340Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15798a810>
2025-01-09T18:24:10.7323560Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x15798bad0>
2025-01-09T18:24:10.7323680Z plasma = <tardis.plasma.base.BasePlasma object at 0x14944eea0>
2025-01-09T18:24:10.7323790Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7323800Z 
2025-01-09T18:24:10.7323860Z     def initialize_transport_state(
2025-01-09T18:24:10.7323910Z         self,
2025-01-09T18:24:10.7323970Z         simulation_state,
2025-01-09T18:24:10.7324020Z         opacity_state,
2025-01-09T18:24:10.7324070Z         macro_atom_state,
2025-01-09T18:24:10.7324120Z         plasma,
2025-01-09T18:24:10.7324170Z         no_of_packets,
2025-01-09T18:24:10.7324290Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7324340Z         iteration=0,
2025-01-09T18:24:10.7324380Z     ):
2025-01-09T18:24:10.7324480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7324550Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7324600Z         else:
2025-01-09T18:24:10.7324660Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7324700Z     
2025-01-09T18:24:10.7324810Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7324880Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7324920Z         )
2025-01-09T18:24:10.7324970Z     
2025-01-09T18:24:10.7325070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7325150Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7325530Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7325540Z 
2025-01-09T18:24:10.7325630Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7325810Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[30-macroatom] _
2025-01-09T18:24:10.7325810Z 
2025-01-09T18:24:10.7326060Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7326530Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7326920Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7326920Z 
2025-01-09T18:24:10.7326990Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7327080Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7327150Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7327190Z     
2025-01-09T18:24:10.7327320Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7327430Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7327540Z             self.name += "_interp"
2025-01-09T18:24:10.7327590Z     
2025-01-09T18:24:10.7327670Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7327740Z >       simulation.run_convergence()
2025-01-09T18:24:10.7327740Z 
2025-01-09T18:24:10.7327840Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7327930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7328010Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7328130Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7328190Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7328320Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7328410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7328410Z 
2025-01-09T18:24:10.7328610Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x157995340>
2025-01-09T18:24:10.7328770Z simulation_state = <tardis.model.base.SimulationState object at 0x151843920>
2025-01-09T18:24:10.7328940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15798a810>
2025-01-09T18:24:10.7329160Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x15798bad0>
2025-01-09T18:24:10.7329280Z plasma = <tardis.plasma.base.BasePlasma object at 0x14944eea0>
2025-01-09T18:24:10.7329390Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7329390Z 
2025-01-09T18:24:10.7329450Z     def initialize_transport_state(
2025-01-09T18:24:10.7329550Z         self,
2025-01-09T18:24:10.7329610Z         simulation_state,
2025-01-09T18:24:10.7329660Z         opacity_state,
2025-01-09T18:24:10.7329710Z         macro_atom_state,
2025-01-09T18:24:10.7329760Z         plasma,
2025-01-09T18:24:10.7329810Z         no_of_packets,
2025-01-09T18:24:10.7329870Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7329920Z         iteration=0,
2025-01-09T18:24:10.7329970Z     ):
2025-01-09T18:24:10.7330060Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7330130Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7330180Z         else:
2025-01-09T18:24:10.7330240Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7330300Z     
2025-01-09T18:24:10.7330440Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7330510Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7330560Z         )
2025-01-09T18:24:10.7330610Z     
2025-01-09T18:24:10.7330710Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7330790Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7331170Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7331170Z 
2025-01-09T18:24:10.7331270Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7331480Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-macroatom] _
2025-01-09T18:24:10.7331480Z 
2025-01-09T18:24:10.7331730Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7332190Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7332490Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7332490Z 
2025-01-09T18:24:10.7332550Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7332640Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7332710Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7332840Z     
2025-01-09T18:24:10.7332980Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7333090Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7333140Z             self.name += "_interp"
2025-01-09T18:24:10.7333190Z     
2025-01-09T18:24:10.7333270Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7333340Z >       simulation.run_convergence()
2025-01-09T18:24:10.7333340Z 
2025-01-09T18:24:10.7333440Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7333540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7333630Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7333740Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7333810Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7333930Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7334020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7334020Z 
2025-01-09T18:24:10.7339670Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x157995340>
2025-01-09T18:24:10.7339880Z simulation_state = <tardis.model.base.SimulationState object at 0x151843920>
2025-01-09T18:24:10.7340060Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15798a810>
2025-01-09T18:24:10.7340270Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x15798bad0>
2025-01-09T18:24:10.7340580Z plasma = <tardis.plasma.base.BasePlasma object at 0x14944eea0>
2025-01-09T18:24:10.7340700Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7340700Z 
2025-01-09T18:24:10.7340770Z     def initialize_transport_state(
2025-01-09T18:24:10.7340810Z         self,
2025-01-09T18:24:10.7340870Z         simulation_state,
2025-01-09T18:24:10.7340920Z         opacity_state,
2025-01-09T18:24:10.7340980Z         macro_atom_state,
2025-01-09T18:24:10.7341020Z         plasma,
2025-01-09T18:24:10.7341070Z         no_of_packets,
2025-01-09T18:24:10.7341140Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7341190Z         iteration=0,
2025-01-09T18:24:10.7341230Z     ):
2025-01-09T18:24:10.7341330Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7341400Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7341450Z         else:
2025-01-09T18:24:10.7341510Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7341550Z     
2025-01-09T18:24:10.7341670Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7341740Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7341790Z         )
2025-01-09T18:24:10.7341830Z     
2025-01-09T18:24:10.7341930Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7342010Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7342400Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7342410Z 
2025-01-09T18:24:10.7342500Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7342680Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_simulation[30-downbranch] _
2025-01-09T18:24:10.7342690Z 
2025-01-09T18:24:10.7342930Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7343400Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7343710Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7343760Z 
2025-01-09T18:24:10.7343830Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7343920Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7343990Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7344030Z     
2025-01-09T18:24:10.7344170Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7344280Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7344340Z             self.name += "_interp"
2025-01-09T18:24:10.7344380Z     
2025-01-09T18:24:10.7344460Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7344530Z >       simulation.run_convergence()
2025-01-09T18:24:10.7344530Z 
2025-01-09T18:24:10.7346240Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7346340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7346440Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7346550Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7346620Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7346740Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7346830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7346830Z 
2025-01-09T18:24:10.7347030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1636a2570>
2025-01-09T18:24:10.7347190Z simulation_state = <tardis.model.base.SimulationState object at 0x157acc9b0>
2025-01-09T18:24:10.7347640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15799ed80>
2025-01-09T18:24:10.7347850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x163642330>
2025-01-09T18:24:10.7347980Z plasma = <tardis.plasma.base.BasePlasma object at 0x157adf8c0>
2025-01-09T18:24:10.7348090Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7348100Z 
2025-01-09T18:24:10.7348160Z     def initialize_transport_state(
2025-01-09T18:24:10.7348210Z         self,
2025-01-09T18:24:10.7348260Z         simulation_state,
2025-01-09T18:24:10.7348320Z         opacity_state,
2025-01-09T18:24:10.7348370Z         macro_atom_state,
2025-01-09T18:24:10.7348420Z         plasma,
2025-01-09T18:24:10.7348470Z         no_of_packets,
2025-01-09T18:24:10.7348530Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7348580Z         iteration=0,
2025-01-09T18:24:10.7348620Z     ):
2025-01-09T18:24:10.7348720Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7348800Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7348850Z         else:
2025-01-09T18:24:10.7348900Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7348960Z     
2025-01-09T18:24:10.7349060Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7349140Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7349190Z         )
2025-01-09T18:24:10.7349230Z     
2025-01-09T18:24:10.7349350Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7349430Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7349820Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7349820Z 
2025-01-09T18:24:10.7349910Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7350040Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.7355190Z config {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Quantity 13. d>, 'luminosity_wavelength_start': <Quantity 0. Angstrom>, 'luminosity_wavelength_end': <Quantity inf Angstrom>}, 'atom_data': 'kurucz_cd23_chianti_H_He.h5', 'model': {'structure': {'type': 'specific', 'velocity': {'start': <Quantity 11000. km / s>, 'stop': <Quantity 20000. km / s>, 'num': 20}, 'density': {'type': 'branch85_w7', 'w7_time_0': <Quantity 0.00023148 d>, 'w7_rho_0': <Quantity 3.e+29 g / cm3>, 'w7_v_0': <Quantity 1. km / s>}}, 'abundances': {'type': 'uniform', 'O': 0.19, 'Mg': 0.03, 'Si': 0.52, 'S': 0.19, 'Ar': 0.04, 'Ca': 0.03, 'model_isotope_time_0': <Quantity 0. s>}}, 'plasma': {'ionization': 'lte', 'excitation': 'lte', 'radiative_rates_type': 'dilute-blackbody', 'line_interaction_type': 'downbranch', 'initial_t_inner': <Quantity -1. K>, 'initial_t_rad': <Quantity -1. K>, 'disable_electron_scattering': False, 'disable_line_scattering': False, 'w_epsilon': 1e-10, 'nlte': {'species': [], 'coronal_approximation': False, 'classical_nebular': False}, 'continuum_interaction': {'species': [], 'enable_adiabatic_cooling': False, 'enable_two_photon_decay': False}, 'helium_treatment': 'none', 'heating_rate_data_file': 'none', 'link_t_rad_t_electron': 0.9, 'nlte_ionization_species': [], 'nlte_excitation_species': [], 'nlte_solver': 'root'}, 'montecarlo': {'seed': 23111963, 'no_of_packets': 40000.0, 'iterations': 5, 'last_no_of_packets': 100000.0, 'no_of_virtual_packets': 0, 'convergence_strategy': {'type': 'damped', 'damping_constant': 0.5, 'threshold': 0.05, 'lock_t_inner_cycles': 1, 't_inner_update_exponent': -0.5, 'stop_if_converged': False, 'fraction': 0.8, 'hold_iterations': 3, 't_inner': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 't_rad': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}, 'w': {'damping_constant': 0.5, 'threshold': 0.05, 'type': 'damped'}}, 'nthreads': 1, 'virtual_spectrum_spawn_range': {'start': <Quantity 1. Angstrom>, 'end': <Quantity inf Angstrom>}, 'enable_full_relativity': False, 'enable_nonhomologous_expansion': False, 'tracking': {'track_rpacket': False, 'initial_array_length': 10}, 'debug_packets': False, 'logger_buffer': 1}, 'spectrum': {'start': <Quantity 500. Angstrom>, 'stop': <Quantity 20000. Angstrom>, 'num': 10000, 'virtual': {'virtual_packet_logging': True, 'tau_russian': 10.0, 'survival_probability': 0.0, 'enable_biasing': False}, 'method': 'integrated', 'integrated': {'points': 200, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7355820Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7355880Z 	
2025-01-09T18:24:10.7356300Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-09T18:24:10.7356440Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7356770Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-09T18:24:10.7356900Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7357260Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-09T18:24:10.7357450Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.7357790Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.7357920Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7358090Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:10.7358210Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7358260Z 	
2025-01-09T18:24:10.7358380Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-09T18:24:10.7358500Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.7358620Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-09T18:24:10.7358960Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-09T18:24:10.7359260Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-09T18:24:10.7359600Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-09T18:24:10.7359990Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.7360170Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:10.7360250Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:10.7360310Z 	Starting iteration 1 of 5
2025-01-09T18:24:10.7360520Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_j_blue_estimators[30-downbranch] _
2025-01-09T18:24:10.7360520Z 
2025-01-09T18:24:10.7360770Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7361240Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7361540Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7361600Z 
2025-01-09T18:24:10.7361670Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7361760Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7361840Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7361880Z     
2025-01-09T18:24:10.7362020Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7362130Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7362190Z             self.name += "_interp"
2025-01-09T18:24:10.7362230Z     
2025-01-09T18:24:10.7362320Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7362380Z >       simulation.run_convergence()
2025-01-09T18:24:10.7362380Z 
2025-01-09T18:24:10.7362490Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7362580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7362670Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7362780Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7362850Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7362970Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7363060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7363070Z 
2025-01-09T18:24:10.7363270Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1636a2570>
2025-01-09T18:24:10.7363430Z simulation_state = <tardis.model.base.SimulationState object at 0x157acc9b0>
2025-01-09T18:24:10.7363610Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15799ed80>
2025-01-09T18:24:10.7363820Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x163642330>
2025-01-09T18:24:10.7363940Z plasma = <tardis.plasma.base.BasePlasma object at 0x157adf8c0>
2025-01-09T18:24:10.7364060Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7364070Z 
2025-01-09T18:24:10.7364130Z     def initialize_transport_state(
2025-01-09T18:24:10.7364180Z         self,
2025-01-09T18:24:10.7364230Z         simulation_state,
2025-01-09T18:24:10.7364290Z         opacity_state,
2025-01-09T18:24:10.7364340Z         macro_atom_state,
2025-01-09T18:24:10.7364380Z         plasma,
2025-01-09T18:24:10.7364480Z         no_of_packets,
2025-01-09T18:24:10.7364540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7364590Z         iteration=0,
2025-01-09T18:24:10.7364640Z     ):
2025-01-09T18:24:10.7364730Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7364810Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7364850Z         else:
2025-01-09T18:24:10.7364910Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7364950Z     
2025-01-09T18:24:10.7365060Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7365140Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7365180Z         )
2025-01-09T18:24:10.7365230Z     
2025-01-09T18:24:10.7365330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7365410Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7365790Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7365800Z 
2025-01-09T18:24:10.7365890Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7366090Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum[30-downbranch] _
2025-01-09T18:24:10.7366100Z 
2025-01-09T18:24:10.7366370Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7366840Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7367200Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7367210Z 
2025-01-09T18:24:10.7367280Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7367370Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7367440Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7367480Z     
2025-01-09T18:24:10.7367620Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7367720Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7367790Z             self.name += "_interp"
2025-01-09T18:24:10.7367830Z     
2025-01-09T18:24:10.7367910Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7367970Z >       simulation.run_convergence()
2025-01-09T18:24:10.7367980Z 
2025-01-09T18:24:10.7368080Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7368170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7368250Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7368360Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7368430Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7368560Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7368650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7368650Z 
2025-01-09T18:24:10.7368860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1636a2570>
2025-01-09T18:24:10.7369020Z simulation_state = <tardis.model.base.SimulationState object at 0x157acc9b0>
2025-01-09T18:24:10.7369190Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15799ed80>
2025-01-09T18:24:10.7369410Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x163642330>
2025-01-09T18:24:10.7369530Z plasma = <tardis.plasma.base.BasePlasma object at 0x157adf8c0>
2025-01-09T18:24:10.7369640Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7369640Z 
2025-01-09T18:24:10.7369750Z     def initialize_transport_state(
2025-01-09T18:24:10.7369800Z         self,
2025-01-09T18:24:10.7369850Z         simulation_state,
2025-01-09T18:24:10.7369910Z         opacity_state,
2025-01-09T18:24:10.7369960Z         macro_atom_state,
2025-01-09T18:24:10.7370000Z         plasma,
2025-01-09T18:24:10.7370050Z         no_of_packets,
2025-01-09T18:24:10.7370110Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7370160Z         iteration=0,
2025-01-09T18:24:10.7370200Z     ):
2025-01-09T18:24:10.7370300Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7370370Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7370430Z         else:
2025-01-09T18:24:10.7370490Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7370530Z     
2025-01-09T18:24:10.7370640Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7370710Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7370750Z         )
2025-01-09T18:24:10.7370800Z     
2025-01-09T18:24:10.7370900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7370980Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7371360Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7371370Z 
2025-01-09T18:24:10.7371460Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7371670Z _ ERROR at setup of TestTransportSimpleFormalIntegral.test_spectrum_integrated[30-downbranch] _
2025-01-09T18:24:10.7371670Z 
2025-01-09T18:24:10.7372310Z self = <tardis.tests.test_tardis_full_formal_integral.TestTransportSimpleFormalIntegral object at 0x13bc7dcd0>
2025-01-09T18:24:10.7372780Z config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 200, 'interpolate_shells': 30, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7373070Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.7373080Z 
2025-01-09T18:24:10.7373140Z     @pytest.fixture(scope="class")
2025-01-09T18:24:10.7373240Z     def simulation(self, config, atomic_data_fname):
2025-01-09T18:24:10.7373310Z         config.atom_data = atomic_data_fname
2025-01-09T18:24:10.7373360Z     
2025-01-09T18:24:10.7373490Z         self.name = self._name + f"_{config.plasma.line_interaction_type:s}"
2025-01-09T18:24:10.7373600Z         if config.spectrum.integrated.interpolate_shells > 0:
2025-01-09T18:24:10.7373660Z             self.name += "_interp"
2025-01-09T18:24:10.7373710Z     
2025-01-09T18:24:10.7373790Z         simulation = Simulation.from_config(config)
2025-01-09T18:24:10.7373860Z >       simulation.run_convergence()
2025-01-09T18:24:10.7373860Z 
2025-01-09T18:24:10.7373970Z tardis/tests/test_tardis_full_formal_integral.py:63: 
2025-01-09T18:24:10.7374070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7374160Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7374270Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7374340Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7374460Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7374550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7374560Z 
2025-01-09T18:24:10.7374760Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1636a2570>
2025-01-09T18:24:10.7374930Z simulation_state = <tardis.model.base.SimulationState object at 0x157acc9b0>
2025-01-09T18:24:10.7375100Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15799ed80>
2025-01-09T18:24:10.7375320Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x163642330>
2025-01-09T18:24:10.7375660Z plasma = <tardis.plasma.base.BasePlasma object at 0x157adf8c0>
2025-01-09T18:24:10.7375770Z no_of_packets = 40000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7375780Z 
2025-01-09T18:24:10.7375840Z     def initialize_transport_state(
2025-01-09T18:24:10.7375890Z         self,
2025-01-09T18:24:10.7375950Z         simulation_state,
2025-01-09T18:24:10.7375990Z         opacity_state,
2025-01-09T18:24:10.7376050Z         macro_atom_state,
2025-01-09T18:24:10.7376090Z         plasma,
2025-01-09T18:24:10.7376150Z         no_of_packets,
2025-01-09T18:24:10.7376210Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7376260Z         iteration=0,
2025-01-09T18:24:10.7376310Z     ):
2025-01-09T18:24:10.7376400Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7376480Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7376520Z         else:
2025-01-09T18:24:10.7376580Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7376630Z     
2025-01-09T18:24:10.7376730Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7376810Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7376860Z         )
2025-01-09T18:24:10.7376900Z     
2025-01-09T18:24:10.7377000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7377070Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7377460Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7377520Z 
2025-01-09T18:24:10.7377610Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7377750Z ____________ ERROR at setup of test_hdf_transport_state[output_nu] _____________
2025-01-09T18:24:10.7377760Z 
2025-01-09T18:24:10.7378250Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7378540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7378540Z 
2025-01-09T18:24:10.7378610Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7378770Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7378850Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7378920Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7379060Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7379100Z         )
2025-01-09T18:24:10.7379170Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7379230Z >       sim.run_final()
2025-01-09T18:24:10.7379230Z 
2025-01-09T18:24:10.7379290Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7379380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7379450Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7379570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7379630Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7379750Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7379840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7379840Z 
2025-01-09T18:24:10.7380050Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7380210Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7380380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7380600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7380760Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7380870Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7380870Z 
2025-01-09T18:24:10.7380940Z     def initialize_transport_state(
2025-01-09T18:24:10.7380990Z         self,
2025-01-09T18:24:10.7381040Z         simulation_state,
2025-01-09T18:24:10.7381090Z         opacity_state,
2025-01-09T18:24:10.7381150Z         macro_atom_state,
2025-01-09T18:24:10.7381190Z         plasma,
2025-01-09T18:24:10.7381240Z         no_of_packets,
2025-01-09T18:24:10.7381300Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7381350Z         iteration=0,
2025-01-09T18:24:10.7381400Z     ):
2025-01-09T18:24:10.7381500Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7381570Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7381630Z         else:
2025-01-09T18:24:10.7381700Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7381740Z     
2025-01-09T18:24:10.7381850Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7381920Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7381960Z         )
2025-01-09T18:24:10.7382010Z     
2025-01-09T18:24:10.7382110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7382180Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7382560Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7382640Z 
2025-01-09T18:24:10.7382740Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7382880Z __________ ERROR at setup of test_hdf_transport_state[output_energy] ___________
2025-01-09T18:24:10.7382880Z 
2025-01-09T18:24:10.7383370Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7383660Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7383660Z 
2025-01-09T18:24:10.7383720Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7383890Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7383970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7384040Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7384180Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7384220Z         )
2025-01-09T18:24:10.7384290Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7384340Z >       sim.run_final()
2025-01-09T18:24:10.7384340Z 
2025-01-09T18:24:10.7384400Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7384490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7384570Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7384680Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7384750Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7384880Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7384960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7384970Z 
2025-01-09T18:24:10.7385170Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7385330Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7385500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7385720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7385890Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7386000Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7386000Z 
2025-01-09T18:24:10.7386070Z     def initialize_transport_state(
2025-01-09T18:24:10.7386110Z         self,
2025-01-09T18:24:10.7386170Z         simulation_state,
2025-01-09T18:24:10.7386220Z         opacity_state,
2025-01-09T18:24:10.7388440Z         macro_atom_state,
2025-01-09T18:24:10.7388490Z         plasma,
2025-01-09T18:24:10.7388540Z         no_of_packets,
2025-01-09T18:24:10.7388610Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7388660Z         iteration=0,
2025-01-09T18:24:10.7388700Z     ):
2025-01-09T18:24:10.7388800Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7388870Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7388920Z         else:
2025-01-09T18:24:10.7388980Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7389020Z     
2025-01-09T18:24:10.7389130Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7389200Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7389250Z         )
2025-01-09T18:24:10.7389290Z     
2025-01-09T18:24:10.7389390Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7389470Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7389850Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7390020Z 
2025-01-09T18:24:10.7390110Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7390250Z _________ ERROR at setup of test_hdf_transport_state[nu_bar_estimator] _________
2025-01-09T18:24:10.7390250Z 
2025-01-09T18:24:10.7390750Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7391030Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7391040Z 
2025-01-09T18:24:10.7391100Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7391270Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7391340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7391410Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7391550Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7391590Z         )
2025-01-09T18:24:10.7391660Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7391710Z >       sim.run_final()
2025-01-09T18:24:10.7391720Z 
2025-01-09T18:24:10.7391770Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7391860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7391940Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7392050Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7392110Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7392230Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7392320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7392330Z 
2025-01-09T18:24:10.7392530Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7392690Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7392860Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7393130Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7393260Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7393370Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7393370Z 
2025-01-09T18:24:10.7393440Z     def initialize_transport_state(
2025-01-09T18:24:10.7393480Z         self,
2025-01-09T18:24:10.7393540Z         simulation_state,
2025-01-09T18:24:10.7393580Z         opacity_state,
2025-01-09T18:24:10.7393640Z         macro_atom_state,
2025-01-09T18:24:10.7393690Z         plasma,
2025-01-09T18:24:10.7393740Z         no_of_packets,
2025-01-09T18:24:10.7393800Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7393850Z         iteration=0,
2025-01-09T18:24:10.7393900Z     ):
2025-01-09T18:24:10.7393990Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7394060Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7394120Z         else:
2025-01-09T18:24:10.7394170Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7394220Z     
2025-01-09T18:24:10.7394320Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7394400Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7394440Z         )
2025-01-09T18:24:10.7394490Z     
2025-01-09T18:24:10.7394590Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7394660Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7395050Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7395280Z 
2025-01-09T18:24:10.7395380Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7395520Z ___________ ERROR at setup of test_hdf_transport_state[j_estimator] ____________
2025-01-09T18:24:10.7395520Z 
2025-01-09T18:24:10.7396010Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7396300Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7396300Z 
2025-01-09T18:24:10.7396370Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7396530Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7396600Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7396670Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7396810Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7396860Z         )
2025-01-09T18:24:10.7396920Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7396970Z >       sim.run_final()
2025-01-09T18:24:10.7396980Z 
2025-01-09T18:24:10.7397040Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7397120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7397200Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7397310Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7397370Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7397500Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7397590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7397600Z 
2025-01-09T18:24:10.7397810Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7397960Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7398140Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7398560Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7398690Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7398800Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7398800Z 
2025-01-09T18:24:10.7398870Z     def initialize_transport_state(
2025-01-09T18:24:10.7398920Z         self,
2025-01-09T18:24:10.7398970Z         simulation_state,
2025-01-09T18:24:10.7399020Z         opacity_state,
2025-01-09T18:24:10.7399070Z         macro_atom_state,
2025-01-09T18:24:10.7399120Z         plasma,
2025-01-09T18:24:10.7399170Z         no_of_packets,
2025-01-09T18:24:10.7399230Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7399280Z         iteration=0,
2025-01-09T18:24:10.7399320Z     ):
2025-01-09T18:24:10.7399420Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7399490Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7399540Z         else:
2025-01-09T18:24:10.7399600Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7399640Z     
2025-01-09T18:24:10.7399750Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7399820Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7399860Z         )
2025-01-09T18:24:10.7399910Z     
2025-01-09T18:24:10.7400010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7400090Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7400460Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7400530Z 
2025-01-09T18:24:10.7400620Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7400760Z _______ ERROR at setup of test_hdf_transport_state[emitted_packet_mask] ________
2025-01-09T18:24:10.7400770Z 
2025-01-09T18:24:10.7401260Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7401540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7401540Z 
2025-01-09T18:24:10.7401610Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7401770Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7401840Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7401920Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7402050Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7402100Z         )
2025-01-09T18:24:10.7402160Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7402210Z >       sim.run_final()
2025-01-09T18:24:10.7402220Z 
2025-01-09T18:24:10.7402280Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7402360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7402440Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7402540Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7402610Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7402730Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7402820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7402820Z 
2025-01-09T18:24:10.7403030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7403190Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7403360Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7403620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7403740Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7403850Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7403850Z 
2025-01-09T18:24:10.7403920Z     def initialize_transport_state(
2025-01-09T18:24:10.7403960Z         self,
2025-01-09T18:24:10.7404020Z         simulation_state,
2025-01-09T18:24:10.7404070Z         opacity_state,
2025-01-09T18:24:10.7404120Z         macro_atom_state,
2025-01-09T18:24:10.7404170Z         plasma,
2025-01-09T18:24:10.7404230Z         no_of_packets,
2025-01-09T18:24:10.7404290Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7404340Z         iteration=0,
2025-01-09T18:24:10.7404380Z     ):
2025-01-09T18:24:10.7404480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7404550Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7404600Z         else:
2025-01-09T18:24:10.7404650Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7404690Z     
2025-01-09T18:24:10.7404800Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7404870Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7404920Z         )
2025-01-09T18:24:10.7404960Z     
2025-01-09T18:24:10.7405060Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7405140Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7405510Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7405560Z 
2025-01-09T18:24:10.7405710Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7405850Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_type] _______
2025-01-09T18:24:10.7405850Z 
2025-01-09T18:24:10.7406350Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7406630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7406630Z 
2025-01-09T18:24:10.7406700Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7406860Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7410770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7410870Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7411010Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7411050Z         )
2025-01-09T18:24:10.7411120Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7411180Z >       sim.run_final()
2025-01-09T18:24:10.7411180Z 
2025-01-09T18:24:10.7411240Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7411330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7411410Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7411520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7411590Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7411710Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7411800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7411810Z 
2025-01-09T18:24:10.7412010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7412170Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7412350Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7412710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7412830Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7412940Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7412950Z 
2025-01-09T18:24:10.7413010Z     def initialize_transport_state(
2025-01-09T18:24:10.7413060Z         self,
2025-01-09T18:24:10.7413110Z         simulation_state,
2025-01-09T18:24:10.7413160Z         opacity_state,
2025-01-09T18:24:10.7413220Z         macro_atom_state,
2025-01-09T18:24:10.7413270Z         plasma,
2025-01-09T18:24:10.7413320Z         no_of_packets,
2025-01-09T18:24:10.7413390Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7413430Z         iteration=0,
2025-01-09T18:24:10.7413480Z     ):
2025-01-09T18:24:10.7413580Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7413650Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7413690Z         else:
2025-01-09T18:24:10.7413750Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7413800Z     
2025-01-09T18:24:10.7413900Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7413970Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7414020Z         )
2025-01-09T18:24:10.7414060Z     
2025-01-09T18:24:10.7414170Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7414240Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7414620Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7414690Z 
2025-01-09T18:24:10.7414780Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7414920Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_in_nu] ______
2025-01-09T18:24:10.7414930Z 
2025-01-09T18:24:10.7415430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7415700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7415710Z 
2025-01-09T18:24:10.7415780Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7415940Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7416010Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7416080Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7416220Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7416270Z         )
2025-01-09T18:24:10.7416330Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7416380Z >       sim.run_final()
2025-01-09T18:24:10.7416380Z 
2025-01-09T18:24:10.7416440Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7416530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7416600Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7416720Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7416790Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7416910Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7417000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7417010Z 
2025-01-09T18:24:10.7417210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7417370Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7417540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7417810Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7417930Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7418040Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7418050Z 
2025-01-09T18:24:10.7418110Z     def initialize_transport_state(
2025-01-09T18:24:10.7418150Z         self,
2025-01-09T18:24:10.7418210Z         simulation_state,
2025-01-09T18:24:10.7418260Z         opacity_state,
2025-01-09T18:24:10.7418310Z         macro_atom_state,
2025-01-09T18:24:10.7418360Z         plasma,
2025-01-09T18:24:10.7418410Z         no_of_packets,
2025-01-09T18:24:10.7418470Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7418520Z         iteration=0,
2025-01-09T18:24:10.7418570Z     ):
2025-01-09T18:24:10.7418670Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7418740Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7418790Z         else:
2025-01-09T18:24:10.7418850Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7418890Z     
2025-01-09T18:24:10.7419000Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7419080Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7419120Z         )
2025-01-09T18:24:10.7419160Z     
2025-01-09T18:24:10.7419260Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7419340Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7419720Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7419950Z 
2025-01-09T18:24:10.7420060Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7420200Z ______ ERROR at setup of test_hdf_transport_state[last_interaction_in_r] _______
2025-01-09T18:24:10.7420200Z 
2025-01-09T18:24:10.7420700Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7420970Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7420980Z 
2025-01-09T18:24:10.7421040Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7421210Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7421280Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7421350Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7421490Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7421530Z         )
2025-01-09T18:24:10.7421590Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7421650Z >       sim.run_final()
2025-01-09T18:24:10.7421650Z 
2025-01-09T18:24:10.7421710Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7421800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7421870Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7421980Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7422050Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7422170Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7422260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7422270Z 
2025-01-09T18:24:10.7422470Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7422630Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7422800Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7423520Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7423640Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7423750Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7423750Z 
2025-01-09T18:24:10.7423820Z     def initialize_transport_state(
2025-01-09T18:24:10.7423860Z         self,
2025-01-09T18:24:10.7423920Z         simulation_state,
2025-01-09T18:24:10.7423970Z         opacity_state,
2025-01-09T18:24:10.7424020Z         macro_atom_state,
2025-01-09T18:24:10.7424070Z         plasma,
2025-01-09T18:24:10.7424120Z         no_of_packets,
2025-01-09T18:24:10.7424180Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7424230Z         iteration=0,
2025-01-09T18:24:10.7424270Z     ):
2025-01-09T18:24:10.7424370Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7424450Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7424490Z         else:
2025-01-09T18:24:10.7424550Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7424600Z     
2025-01-09T18:24:10.7424700Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7424770Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7424820Z         )
2025-01-09T18:24:10.7424860Z     
2025-01-09T18:24:10.7424960Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7425040Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7425420Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7425480Z 
2025-01-09T18:24:10.7425580Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7425730Z ___ ERROR at setup of test_hdf_transport_state[last_line_interaction_out_id] ___
2025-01-09T18:24:10.7425730Z 
2025-01-09T18:24:10.7426220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7426500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7426500Z 
2025-01-09T18:24:10.7426570Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7426730Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7426810Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7426880Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7427020Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7427070Z         )
2025-01-09T18:24:10.7427130Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7427190Z >       sim.run_final()
2025-01-09T18:24:10.7427190Z 
2025-01-09T18:24:10.7427240Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7427340Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7427410Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7427520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7427590Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7427720Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7427800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7427810Z 
2025-01-09T18:24:10.7428010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7428170Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7428440Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7428710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7428830Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7428950Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7428950Z 
2025-01-09T18:24:10.7429020Z     def initialize_transport_state(
2025-01-09T18:24:10.7429060Z         self,
2025-01-09T18:24:10.7429120Z         simulation_state,
2025-01-09T18:24:10.7429170Z         opacity_state,
2025-01-09T18:24:10.7429220Z         macro_atom_state,
2025-01-09T18:24:10.7429270Z         plasma,
2025-01-09T18:24:10.7429320Z         no_of_packets,
2025-01-09T18:24:10.7429380Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7429430Z         iteration=0,
2025-01-09T18:24:10.7429470Z     ):
2025-01-09T18:24:10.7429570Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7429640Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7429690Z         else:
2025-01-09T18:24:10.7429750Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7429790Z     
2025-01-09T18:24:10.7429900Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7429970Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7430020Z         )
2025-01-09T18:24:10.7430060Z     
2025-01-09T18:24:10.7430160Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7430240Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7430620Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7430670Z 
2025-01-09T18:24:10.7430760Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7430950Z ___ ERROR at setup of test_hdf_transport_state[last_line_interaction_in_id] ____
2025-01-09T18:24:10.7430960Z 
2025-01-09T18:24:10.7431450Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7431740Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7431740Z 
2025-01-09T18:24:10.7431810Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7431970Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7432050Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7432110Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7432250Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7432290Z         )
2025-01-09T18:24:10.7432370Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7432420Z >       sim.run_final()
2025-01-09T18:24:10.7432420Z 
2025-01-09T18:24:10.7432480Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7432570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7432640Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7432750Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7432820Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7432940Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7433020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7433030Z 
2025-01-09T18:24:10.7433230Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7433390Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7433660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7433870Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7433990Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7434100Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7434100Z 
2025-01-09T18:24:10.7434170Z     def initialize_transport_state(
2025-01-09T18:24:10.7434210Z         self,
2025-01-09T18:24:10.7434260Z         simulation_state,
2025-01-09T18:24:10.7434320Z         opacity_state,
2025-01-09T18:24:10.7434370Z         macro_atom_state,
2025-01-09T18:24:10.7434420Z         plasma,
2025-01-09T18:24:10.7434470Z         no_of_packets,
2025-01-09T18:24:10.7434530Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7434580Z         iteration=0,
2025-01-09T18:24:10.7434620Z     ):
2025-01-09T18:24:10.7434720Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7434790Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7434840Z         else:
2025-01-09T18:24:10.7434900Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7434940Z     
2025-01-09T18:24:10.7435050Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7435120Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7435170Z         )
2025-01-09T18:24:10.7435210Z     
2025-01-09T18:24:10.7435310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7435390Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7435830Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7435840Z 
2025-01-09T18:24:10.7435930Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7436070Z __ ERROR at setup of test_hdf_transport_state[last_line_interaction_shell_id] __
2025-01-09T18:24:10.7436080Z 
2025-01-09T18:24:10.7436570Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7436850Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7436860Z 
2025-01-09T18:24:10.7436920Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7437090Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7437160Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7437230Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7437370Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7437420Z         )
2025-01-09T18:24:10.7437480Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7437540Z >       sim.run_final()
2025-01-09T18:24:10.7437540Z 
2025-01-09T18:24:10.7437590Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7437680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7437760Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7437870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7437940Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7438060Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7438150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7438160Z 
2025-01-09T18:24:10.7438360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7438520Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7438740Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7438960Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7439080Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7439180Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7439190Z 
2025-01-09T18:24:10.7439250Z     def initialize_transport_state(
2025-01-09T18:24:10.7439300Z         self,
2025-01-09T18:24:10.7439360Z         simulation_state,
2025-01-09T18:24:10.7439410Z         opacity_state,
2025-01-09T18:24:10.7439460Z         macro_atom_state,
2025-01-09T18:24:10.7439510Z         plasma,
2025-01-09T18:24:10.7439560Z         no_of_packets,
2025-01-09T18:24:10.7439620Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7439670Z         iteration=0,
2025-01-09T18:24:10.7439710Z     ):
2025-01-09T18:24:10.7439810Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7439890Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7439940Z         else:
2025-01-09T18:24:10.7439990Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7440030Z     
2025-01-09T18:24:10.7440140Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7440210Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7440260Z         )
2025-01-09T18:24:10.7440300Z     
2025-01-09T18:24:10.7440400Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7440470Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7441120Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7441120Z 
2025-01-09T18:24:10.7441220Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7441360Z _________ ERROR at setup of test_hdf_transport_state[virt_packet_nus] __________
2025-01-09T18:24:10.7441360Z 
2025-01-09T18:24:10.7441860Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7442140Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7442140Z 
2025-01-09T18:24:10.7442210Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7442370Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7442440Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7442500Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7442650Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7442690Z         )
2025-01-09T18:24:10.7442750Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7442810Z >       sim.run_final()
2025-01-09T18:24:10.7442810Z 
2025-01-09T18:24:10.7442860Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7442950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7443020Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7443140Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7443210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7443330Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7443420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7443420Z 
2025-01-09T18:24:10.7443630Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7443780Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7444160Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7444380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7444500Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7444620Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7444630Z 
2025-01-09T18:24:10.7444700Z     def initialize_transport_state(
2025-01-09T18:24:10.7444760Z         self,
2025-01-09T18:24:10.7444820Z         simulation_state,
2025-01-09T18:24:10.7444870Z         opacity_state,
2025-01-09T18:24:10.7444930Z         macro_atom_state,
2025-01-09T18:24:10.7444970Z         plasma,
2025-01-09T18:24:10.7445030Z         no_of_packets,
2025-01-09T18:24:10.7445090Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7445140Z         iteration=0,
2025-01-09T18:24:10.7445180Z     ):
2025-01-09T18:24:10.7445280Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7445360Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7445410Z         else:
2025-01-09T18:24:10.7445460Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7445510Z     
2025-01-09T18:24:10.7445620Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7445690Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7445930Z         )
2025-01-09T18:24:10.7445980Z     
2025-01-09T18:24:10.7446100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7446300Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7446840Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7446860Z 
2025-01-09T18:24:10.7446940Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7447090Z _______ ERROR at setup of test_hdf_transport_state[virt_packet_energies] _______
2025-01-09T18:24:10.7447090Z 
2025-01-09T18:24:10.7447590Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7447870Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7447870Z 
2025-01-09T18:24:10.7447940Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7448130Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7448220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7448300Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7448440Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7448480Z         )
2025-01-09T18:24:10.7448550Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7448600Z >       sim.run_final()
2025-01-09T18:24:10.7448600Z 
2025-01-09T18:24:10.7448670Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7448750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7448850Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7448960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7449040Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7449160Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7449250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7449260Z 
2025-01-09T18:24:10.7449470Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7449650Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7449930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7450150Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7450270Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7450380Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7450380Z 
2025-01-09T18:24:10.7450450Z     def initialize_transport_state(
2025-01-09T18:24:10.7450490Z         self,
2025-01-09T18:24:10.7450550Z         simulation_state,
2025-01-09T18:24:10.7450610Z         opacity_state,
2025-01-09T18:24:10.7450670Z         macro_atom_state,
2025-01-09T18:24:10.7450720Z         plasma,
2025-01-09T18:24:10.7450770Z         no_of_packets,
2025-01-09T18:24:10.7450830Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7450880Z         iteration=0,
2025-01-09T18:24:10.7450920Z     ):
2025-01-09T18:24:10.7451020Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7451100Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7451140Z         else:
2025-01-09T18:24:10.7451200Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7451240Z     
2025-01-09T18:24:10.7451350Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7451420Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7451470Z         )
2025-01-09T18:24:10.7451510Z     
2025-01-09T18:24:10.7451610Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7451690Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7452160Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7452160Z 
2025-01-09T18:24:10.7452260Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7452400Z ______ ERROR at setup of test_hdf_transport_state[virt_packet_initial_rs] ______
2025-01-09T18:24:10.7452400Z 
2025-01-09T18:24:10.7452900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7453190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7453200Z 
2025-01-09T18:24:10.7453260Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7453430Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7453510Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7453570Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7453730Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7453810Z         )
2025-01-09T18:24:10.7453870Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7453930Z >       sim.run_final()
2025-01-09T18:24:10.7453930Z 
2025-01-09T18:24:10.7453980Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7454100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7454180Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7454310Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7454380Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7454500Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7454590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7454600Z 
2025-01-09T18:24:10.7454820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7454980Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7455240Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7455490Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7455640Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7455770Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7455780Z 
2025-01-09T18:24:10.7455870Z     def initialize_transport_state(
2025-01-09T18:24:10.7455920Z         self,
2025-01-09T18:24:10.7455990Z         simulation_state,
2025-01-09T18:24:10.7456060Z         opacity_state,
2025-01-09T18:24:10.7456130Z         macro_atom_state,
2025-01-09T18:24:10.7456170Z         plasma,
2025-01-09T18:24:10.7456240Z         no_of_packets,
2025-01-09T18:24:10.7456300Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7456360Z         iteration=0,
2025-01-09T18:24:10.7456400Z     ):
2025-01-09T18:24:10.7457400Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7457830Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7458380Z         else:
2025-01-09T18:24:10.7458670Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7458850Z     
2025-01-09T18:24:10.7459210Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7459430Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7459580Z         )
2025-01-09T18:24:10.7459760Z     
2025-01-09T18:24:10.7465610Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7465780Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7466510Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7466520Z 
2025-01-09T18:24:10.7466620Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7466820Z _____ ERROR at setup of test_hdf_transport_state[virt_packet_initial_mus] ______
2025-01-09T18:24:10.7466830Z 
2025-01-09T18:24:10.7467330Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7467620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7467630Z 
2025-01-09T18:24:10.7467700Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7467860Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7467960Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7468030Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7468180Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7468230Z         )
2025-01-09T18:24:10.7468340Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7468410Z >       sim.run_final()
2025-01-09T18:24:10.7468420Z 
2025-01-09T18:24:10.7468480Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7468570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7468640Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7468760Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7468830Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7468950Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7469040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7469050Z 
2025-01-09T18:24:10.7469260Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7469570Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7469880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7470120Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7470240Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7470350Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7470350Z 
2025-01-09T18:24:10.7470420Z     def initialize_transport_state(
2025-01-09T18:24:10.7470470Z         self,
2025-01-09T18:24:10.7470520Z         simulation_state,
2025-01-09T18:24:10.7470580Z         opacity_state,
2025-01-09T18:24:10.7470630Z         macro_atom_state,
2025-01-09T18:24:10.7470680Z         plasma,
2025-01-09T18:24:10.7470730Z         no_of_packets,
2025-01-09T18:24:10.7470790Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7470840Z         iteration=0,
2025-01-09T18:24:10.7470890Z     ):
2025-01-09T18:24:10.7471000Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7471080Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7471140Z         else:
2025-01-09T18:24:10.7471200Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7471250Z     
2025-01-09T18:24:10.7471360Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7471440Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7471480Z         )
2025-01-09T18:24:10.7471530Z     
2025-01-09T18:24:10.7471630Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7472580Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7472960Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7472970Z 
2025-01-09T18:24:10.7473060Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7473220Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_in_nu] _
2025-01-09T18:24:10.7473230Z 
2025-01-09T18:24:10.7473720Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7474020Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7474030Z 
2025-01-09T18:24:10.7474100Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7474270Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7474340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7474410Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7474550Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7474600Z         )
2025-01-09T18:24:10.7474670Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7474720Z >       sim.run_final()
2025-01-09T18:24:10.7474720Z 
2025-01-09T18:24:10.7474780Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7474870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7474950Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7475060Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7475130Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7475250Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7475370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7475380Z 
2025-01-09T18:24:10.7475600Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7475760Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7476480Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7476700Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7476830Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7476950Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7476960Z 
2025-01-09T18:24:10.7477030Z     def initialize_transport_state(
2025-01-09T18:24:10.7477070Z         self,
2025-01-09T18:24:10.7477130Z         simulation_state,
2025-01-09T18:24:10.7477180Z         opacity_state,
2025-01-09T18:24:10.7477240Z         macro_atom_state,
2025-01-09T18:24:10.7477280Z         plasma,
2025-01-09T18:24:10.7481880Z         no_of_packets,
2025-01-09T18:24:10.7481980Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7482030Z         iteration=0,
2025-01-09T18:24:10.7482090Z     ):
2025-01-09T18:24:10.7482190Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7482270Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7482320Z         else:
2025-01-09T18:24:10.7482370Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7482420Z     
2025-01-09T18:24:10.7482530Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7482600Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7482640Z         )
2025-01-09T18:24:10.7482690Z     
2025-01-09T18:24:10.7482790Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7483050Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7483440Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7483450Z 
2025-01-09T18:24:10.7483550Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7483700Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_in_r] _
2025-01-09T18:24:10.7483710Z 
2025-01-09T18:24:10.7484210Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7484580Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7484590Z 
2025-01-09T18:24:10.7484680Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7484850Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7484930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7485000Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7485130Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7485190Z         )
2025-01-09T18:24:10.7485260Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7485320Z >       sim.run_final()
2025-01-09T18:24:10.7485320Z 
2025-01-09T18:24:10.7485380Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7485470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7485550Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7485660Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7485730Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7485860Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7486040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7486040Z 
2025-01-09T18:24:10.7486250Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7486640Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7486830Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7487200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7487320Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7487430Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7487440Z 
2025-01-09T18:24:10.7487510Z     def initialize_transport_state(
2025-01-09T18:24:10.7487550Z         self,
2025-01-09T18:24:10.7487610Z         simulation_state,
2025-01-09T18:24:10.7487660Z         opacity_state,
2025-01-09T18:24:10.7487720Z         macro_atom_state,
2025-01-09T18:24:10.7487770Z         plasma,
2025-01-09T18:24:10.7487830Z         no_of_packets,
2025-01-09T18:24:10.7487900Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7487950Z         iteration=0,
2025-01-09T18:24:10.7488000Z     ):
2025-01-09T18:24:10.7488090Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7488180Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7488230Z         else:
2025-01-09T18:24:10.7488290Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7488340Z     
2025-01-09T18:24:10.7488460Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7488540Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7488590Z         )
2025-01-09T18:24:10.7488640Z     
2025-01-09T18:24:10.7488760Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7488940Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7489340Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7489340Z 
2025-01-09T18:24:10.7489440Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7489600Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_interaction_type] _
2025-01-09T18:24:10.7489600Z 
2025-01-09T18:24:10.7490100Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7490380Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7490380Z 
2025-01-09T18:24:10.7490450Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7490610Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7490690Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7490760Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7490900Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7490950Z         )
2025-01-09T18:24:10.7491010Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7491070Z >       sim.run_final()
2025-01-09T18:24:10.7491070Z 
2025-01-09T18:24:10.7491130Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7491210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7491290Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7491410Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7491480Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7491610Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7491710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7491710Z 
2025-01-09T18:24:10.7491940Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7492510Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7492700Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7492930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7493060Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7493170Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7493170Z 
2025-01-09T18:24:10.7493240Z     def initialize_transport_state(
2025-01-09T18:24:10.7493290Z         self,
2025-01-09T18:24:10.7493350Z         simulation_state,
2025-01-09T18:24:10.7493400Z         opacity_state,
2025-01-09T18:24:10.7493460Z         macro_atom_state,
2025-01-09T18:24:10.7493500Z         plasma,
2025-01-09T18:24:10.7493550Z         no_of_packets,
2025-01-09T18:24:10.7493610Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7493670Z         iteration=0,
2025-01-09T18:24:10.7493720Z     ):
2025-01-09T18:24:10.7493820Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7493890Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7493930Z         else:
2025-01-09T18:24:10.7493990Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7494030Z     
2025-01-09T18:24:10.7494140Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7494220Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7494260Z         )
2025-01-09T18:24:10.7494310Z     
2025-01-09T18:24:10.7494420Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7494590Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7495260Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7495260Z 
2025-01-09T18:24:10.7495360Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7495530Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_in_id] _
2025-01-09T18:24:10.7495530Z 
2025-01-09T18:24:10.7496030Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7496320Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7496320Z 
2025-01-09T18:24:10.7496390Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7496560Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7496630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7496710Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7496990Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7497040Z         )
2025-01-09T18:24:10.7497110Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7497160Z >       sim.run_final()
2025-01-09T18:24:10.7497160Z 
2025-01-09T18:24:10.7497220Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7497310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7497390Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7497500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7497570Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7497690Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7497780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7497790Z 
2025-01-09T18:24:10.7497990Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7498220Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7498390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7498720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7498850Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7498960Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7498960Z 
2025-01-09T18:24:10.7499030Z     def initialize_transport_state(
2025-01-09T18:24:10.7499080Z         self,
2025-01-09T18:24:10.7499130Z         simulation_state,
2025-01-09T18:24:10.7499180Z         opacity_state,
2025-01-09T18:24:10.7499240Z         macro_atom_state,
2025-01-09T18:24:10.7499280Z         plasma,
2025-01-09T18:24:10.7499340Z         no_of_packets,
2025-01-09T18:24:10.7499400Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7499460Z         iteration=0,
2025-01-09T18:24:10.7499500Z     ):
2025-01-09T18:24:10.7499600Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7499670Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7499720Z         else:
2025-01-09T18:24:10.7499780Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7499830Z     
2025-01-09T18:24:10.7499940Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7500010Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7500060Z         )
2025-01-09T18:24:10.7500100Z     
2025-01-09T18:24:10.7500210Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7500610Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7500990Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7501000Z 
2025-01-09T18:24:10.7501090Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7501270Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_out_id] _
2025-01-09T18:24:10.7501270Z 
2025-01-09T18:24:10.7502250Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7502550Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7502560Z 
2025-01-09T18:24:10.7502630Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7502810Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7502890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7502950Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7503110Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7503160Z         )
2025-01-09T18:24:10.7503220Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7503280Z >       sim.run_final()
2025-01-09T18:24:10.7503280Z 
2025-01-09T18:24:10.7503330Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7503420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7503500Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7503620Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7503690Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7503840Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7503930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7503940Z 
2025-01-09T18:24:10.7504140Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7504620Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7504800Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7505020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7505150Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7505640Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7505750Z 
2025-01-09T18:24:10.7506430Z     def initialize_transport_state(
2025-01-09T18:24:10.7506680Z         self,
2025-01-09T18:24:10.7506860Z         simulation_state,
2025-01-09T18:24:10.7507030Z         opacity_state,
2025-01-09T18:24:10.7507200Z         macro_atom_state,
2025-01-09T18:24:10.7507360Z         plasma,
2025-01-09T18:24:10.7507520Z         no_of_packets,
2025-01-09T18:24:10.7508000Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7508130Z         iteration=0,
2025-01-09T18:24:10.7508180Z     ):
2025-01-09T18:24:10.7508280Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7508360Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7508410Z         else:
2025-01-09T18:24:10.7508470Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7508520Z     
2025-01-09T18:24:10.7508620Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7508700Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7508740Z         )
2025-01-09T18:24:10.7508800Z     
2025-01-09T18:24:10.7509010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7509090Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7509480Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7509490Z 
2025-01-09T18:24:10.7509580Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7509830Z _ ERROR at setup of test_hdf_transport_state[virt_packet_last_line_interaction_shell_id] _
2025-01-09T18:24:10.7509830Z 
2025-01-09T18:24:10.7510390Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7510710Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7510720Z 
2025-01-09T18:24:10.7510790Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.7510960Z     def simulation_verysimple_vpacket_tracking(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7511040Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7511110Z         sim = Simulation.from_config(
2025-01-09T18:24:10.7511260Z             config_verysimple, atom_data=atomic_data, virtual_packet_logging=True
2025-01-09T18:24:10.7511310Z         )
2025-01-09T18:24:10.7511380Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.7511430Z >       sim.run_final()
2025-01-09T18:24:10.7511440Z 
2025-01-09T18:24:10.7511500Z tardis/conftest.py:244: 
2025-01-09T18:24:10.7511590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7511680Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.7511800Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7511900Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7512040Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7512130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7512130Z 
2025-01-09T18:24:10.7512340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163728aa0>
2025-01-09T18:24:10.7512640Z simulation_state = <tardis.model.base.SimulationState object at 0x163718860>
2025-01-09T18:24:10.7512850Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x16376b620>
2025-01-09T18:24:10.7513070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x16376b320>
2025-01-09T18:24:10.7513440Z plasma = <tardis.plasma.base.BasePlasma object at 0x16372ab40>
2025-01-09T18:24:10.7513560Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.7513570Z 
2025-01-09T18:24:10.7513640Z     def initialize_transport_state(
2025-01-09T18:24:10.7513680Z         self,
2025-01-09T18:24:10.7513740Z         simulation_state,
2025-01-09T18:24:10.7513800Z         opacity_state,
2025-01-09T18:24:10.7513850Z         macro_atom_state,
2025-01-09T18:24:10.7513930Z         plasma,
2025-01-09T18:24:10.7514010Z         no_of_packets,
2025-01-09T18:24:10.7514120Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7514200Z         iteration=0,
2025-01-09T18:24:10.7514290Z     ):
2025-01-09T18:24:10.7514440Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7514550Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7514610Z         else:
2025-01-09T18:24:10.7514690Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7514770Z     
2025-01-09T18:24:10.7514940Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7515060Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7515150Z         )
2025-01-09T18:24:10.7515450Z     
2025-01-09T18:24:10.7515620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7515750Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7516270Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7516290Z 
2025-01-09T18:24:10.7516450Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7516660Z ____________________ ERROR at setup of test_thomson_scatter ____________________
2025-01-09T18:24:10.7516670Z 
2025-01-09T18:24:10.7517320Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7517720Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7517740Z 
2025-01-09T18:24:10.7517860Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7518070Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7518200Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7518440Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7518530Z >       sim.iterate(10)
2025-01-09T18:24:10.7518550Z 
2025-01-09T18:24:10.7518800Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7518900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7518970Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7519130Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7519260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7519280Z 
2025-01-09T18:24:10.7519570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7519950Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7520210Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7520690Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7520870Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7521030Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7521040Z 
2025-01-09T18:24:10.7521150Z     def initialize_transport_state(
2025-01-09T18:24:10.7521250Z         self,
2025-01-09T18:24:10.7521330Z         simulation_state,
2025-01-09T18:24:10.7521430Z         opacity_state,
2025-01-09T18:24:10.7521510Z         macro_atom_state,
2025-01-09T18:24:10.7521600Z         plasma,
2025-01-09T18:24:10.7521680Z         no_of_packets,
2025-01-09T18:24:10.7521790Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7521880Z         iteration=0,
2025-01-09T18:24:10.7521940Z     ):
2025-01-09T18:24:10.7522190Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7522270Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7522330Z         else:
2025-01-09T18:24:10.7522390Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7522430Z     
2025-01-09T18:24:10.7522540Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7522610Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7522650Z         )
2025-01-09T18:24:10.7522700Z     
2025-01-09T18:24:10.7522800Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7522870Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7523320Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7523500Z 
2025-01-09T18:24:10.7523650Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7523840Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.7524330Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.7524820Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.7525080Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7525350Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:10.7525590Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7525680Z 	
2025-01-09T18:24:10.7525910Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-09T18:24:10.7526120Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.7526980Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.7527340Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:10.7527450Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:10.7527520Z 	Starting iteration 1 of 5
2025-01-09T18:24:10.7527640Z ____________________ ERROR at setup of test_line_scatter[0] ____________________
2025-01-09T18:24:10.7527650Z 
2025-01-09T18:24:10.7528160Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7528450Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7528460Z 
2025-01-09T18:24:10.7528530Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7528660Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7528740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7528880Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7529060Z >       sim.iterate(10)
2025-01-09T18:24:10.7529070Z 
2025-01-09T18:24:10.7529190Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7529290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7529360Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7529490Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7529590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7529590Z 
2025-01-09T18:24:10.7529820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7530010Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7530210Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7530440Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7530800Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7530920Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7530930Z 
2025-01-09T18:24:10.7531020Z     def initialize_transport_state(
2025-01-09T18:24:10.7531070Z         self,
2025-01-09T18:24:10.7531130Z         simulation_state,
2025-01-09T18:24:10.7531190Z         opacity_state,
2025-01-09T18:24:10.7531240Z         macro_atom_state,
2025-01-09T18:24:10.7531300Z         plasma,
2025-01-09T18:24:10.7531350Z         no_of_packets,
2025-01-09T18:24:10.7535200Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7535260Z         iteration=0,
2025-01-09T18:24:10.7535300Z     ):
2025-01-09T18:24:10.7535420Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7535500Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7535550Z         else:
2025-01-09T18:24:10.7535620Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7535670Z     
2025-01-09T18:24:10.7535800Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7535880Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7535930Z         )
2025-01-09T18:24:10.7535990Z     
2025-01-09T18:24:10.7536100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7536190Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7536600Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7536600Z 
2025-01-09T18:24:10.7536710Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7536840Z ____________________ ERROR at setup of test_line_scatter[1] ____________________
2025-01-09T18:24:10.7536850Z 
2025-01-09T18:24:10.7537380Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7539430Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7539540Z 
2025-01-09T18:24:10.7539850Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7540240Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7540460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7541490Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7541640Z >       sim.iterate(10)
2025-01-09T18:24:10.7541650Z 
2025-01-09T18:24:10.7541770Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7541880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7544840Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7544980Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7545070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7545080Z 
2025-01-09T18:24:10.7545290Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7545460Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7545650Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7545890Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7546020Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7546130Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7546140Z 
2025-01-09T18:24:10.7546210Z     def initialize_transport_state(
2025-01-09T18:24:10.7546260Z         self,
2025-01-09T18:24:10.7546520Z         simulation_state,
2025-01-09T18:24:10.7546580Z         opacity_state,
2025-01-09T18:24:10.7546630Z         macro_atom_state,
2025-01-09T18:24:10.7546690Z         plasma,
2025-01-09T18:24:10.7546740Z         no_of_packets,
2025-01-09T18:24:10.7546810Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7546860Z         iteration=0,
2025-01-09T18:24:10.7546910Z     ):
2025-01-09T18:24:10.7547020Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7547120Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7547350Z         else:
2025-01-09T18:24:10.7547420Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7547460Z     
2025-01-09T18:24:10.7547580Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7547660Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7547720Z         )
2025-01-09T18:24:10.7547770Z     
2025-01-09T18:24:10.7547880Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7547960Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7548570Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7548580Z 
2025-01-09T18:24:10.7548680Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7548820Z ____________________ ERROR at setup of test_line_scatter[2] ____________________
2025-01-09T18:24:10.7548820Z 
2025-01-09T18:24:10.7549390Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7549700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7549700Z 
2025-01-09T18:24:10.7549780Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7549910Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7549990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7550150Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7550200Z >       sim.iterate(10)
2025-01-09T18:24:10.7550210Z 
2025-01-09T18:24:10.7550390Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7550500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7550590Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7550750Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7550850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7551010Z 
2025-01-09T18:24:10.7551270Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7551460Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7551710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7552020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7552220Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7552390Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7552420Z 
2025-01-09T18:24:10.7552530Z     def initialize_transport_state(
2025-01-09T18:24:10.7552620Z         self,
2025-01-09T18:24:10.7552720Z         simulation_state,
2025-01-09T18:24:10.7552830Z         opacity_state,
2025-01-09T18:24:10.7552930Z         macro_atom_state,
2025-01-09T18:24:10.7553020Z         plasma,
2025-01-09T18:24:10.7553120Z         no_of_packets,
2025-01-09T18:24:10.7553240Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7553330Z         iteration=0,
2025-01-09T18:24:10.7553400Z     ):
2025-01-09T18:24:10.7553550Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7553680Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7553750Z         else:
2025-01-09T18:24:10.7553870Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7553950Z     
2025-01-09T18:24:10.7554130Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7554240Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7554510Z         )
2025-01-09T18:24:10.7554610Z     
2025-01-09T18:24:10.7554790Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7554950Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7555590Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7555600Z 
2025-01-09T18:24:10.7556060Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7556260Z _________ ERROR at setup of test_line_emission[test_packet0-expected0] _________
2025-01-09T18:24:10.7556270Z 
2025-01-09T18:24:10.7556900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7557270Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7557290Z 
2025-01-09T18:24:10.7557380Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7557570Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7557680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7557890Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7557990Z >       sim.iterate(10)
2025-01-09T18:24:10.7558000Z 
2025-01-09T18:24:10.7558140Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7558280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7558370Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7558520Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7558650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7558660Z 
2025-01-09T18:24:10.7558900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7561090Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7561330Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7561690Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7561830Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7561950Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7561950Z 
2025-01-09T18:24:10.7562020Z     def initialize_transport_state(
2025-01-09T18:24:10.7562070Z         self,
2025-01-09T18:24:10.7562130Z         simulation_state,
2025-01-09T18:24:10.7562190Z         opacity_state,
2025-01-09T18:24:10.7562240Z         macro_atom_state,
2025-01-09T18:24:10.7562300Z         plasma,
2025-01-09T18:24:10.7562350Z         no_of_packets,
2025-01-09T18:24:10.7562420Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7562480Z         iteration=0,
2025-01-09T18:24:10.7562530Z     ):
2025-01-09T18:24:10.7562640Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7562720Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7562770Z         else:
2025-01-09T18:24:10.7562840Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7562880Z     
2025-01-09T18:24:10.7563000Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7563080Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7563130Z         )
2025-01-09T18:24:10.7563180Z     
2025-01-09T18:24:10.7563290Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7563380Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7563790Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7563870Z 
2025-01-09T18:24:10.7563980Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7564140Z _________ ERROR at setup of test_line_emission[test_packet1-expected1] _________
2025-01-09T18:24:10.7564140Z 
2025-01-09T18:24:10.7564680Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7565000Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7565010Z 
2025-01-09T18:24:10.7565090Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7565250Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7565340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7565510Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7565570Z >       sim.iterate(10)
2025-01-09T18:24:10.7565580Z 
2025-01-09T18:24:10.7565680Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7565780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7565870Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7566030Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7566170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7566180Z 
2025-01-09T18:24:10.7566460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7566690Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7566940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7567210Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7567340Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7574350Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7574550Z 
2025-01-09T18:24:10.7574650Z     def initialize_transport_state(
2025-01-09T18:24:10.7579810Z         self,
2025-01-09T18:24:10.7579890Z         simulation_state,
2025-01-09T18:24:10.7579950Z         opacity_state,
2025-01-09T18:24:10.7580010Z         macro_atom_state,
2025-01-09T18:24:10.7580100Z         plasma,
2025-01-09T18:24:10.7580190Z         no_of_packets,
2025-01-09T18:24:10.7580280Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7580360Z         iteration=0,
2025-01-09T18:24:10.7580420Z     ):
2025-01-09T18:24:10.7580540Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7580630Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7580700Z         else:
2025-01-09T18:24:10.7580790Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7580890Z     
2025-01-09T18:24:10.7581110Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7581210Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7581290Z         )
2025-01-09T18:24:10.7581380Z     
2025-01-09T18:24:10.7581530Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7581630Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7582540Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7582580Z 
2025-01-09T18:24:10.7582740Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7582950Z _________ ERROR at setup of test_line_emission[test_packet2-expected2] _________
2025-01-09T18:24:10.7583860Z 
2025-01-09T18:24:10.7584450Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7584790Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7584810Z 
2025-01-09T18:24:10.7584910Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7585110Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7585240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7585390Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7585490Z >       sim.iterate(10)
2025-01-09T18:24:10.7585490Z 
2025-01-09T18:24:10.7585630Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7585790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7585920Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7586050Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7586150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7586170Z 
2025-01-09T18:24:10.7586430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7586640Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7586850Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7587090Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7587260Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7587440Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7587450Z 
2025-01-09T18:24:10.7587550Z     def initialize_transport_state(
2025-01-09T18:24:10.7587610Z         self,
2025-01-09T18:24:10.7587670Z         simulation_state,
2025-01-09T18:24:10.7587720Z         opacity_state,
2025-01-09T18:24:10.7588820Z         macro_atom_state,
2025-01-09T18:24:10.7588930Z         plasma,
2025-01-09T18:24:10.7589020Z         no_of_packets,
2025-01-09T18:24:10.7589120Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7589220Z         iteration=0,
2025-01-09T18:24:10.7589300Z     ):
2025-01-09T18:24:10.7589430Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7589500Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7589640Z         else:
2025-01-09T18:24:10.7589900Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7589990Z     
2025-01-09T18:24:10.7590150Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7590290Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7590360Z         )
2025-01-09T18:24:10.7590440Z     
2025-01-09T18:24:10.7590600Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7590680Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7591140Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7591160Z 
2025-01-09T18:24:10.7591310Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7591490Z ________________ ERROR at setup of test_macro_atom[1963-10015] _________________
2025-01-09T18:24:10.7591500Z 
2025-01-09T18:24:10.7592880Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7597680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7597690Z 
2025-01-09T18:24:10.7597780Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7597970Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7598100Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7598270Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7598330Z >       sim.iterate(10)
2025-01-09T18:24:10.7598330Z 
2025-01-09T18:24:10.7598430Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7598560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7598670Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7598860Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7598970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7598970Z 
2025-01-09T18:24:10.7599230Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7599540Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7599770Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7600070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7600250Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7600390Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7600400Z 
2025-01-09T18:24:10.7600520Z     def initialize_transport_state(
2025-01-09T18:24:10.7600600Z         self,
2025-01-09T18:24:10.7600680Z         simulation_state,
2025-01-09T18:24:10.7600740Z         opacity_state,
2025-01-09T18:24:10.7600800Z         macro_atom_state,
2025-01-09T18:24:10.7600870Z         plasma,
2025-01-09T18:24:10.7600950Z         no_of_packets,
2025-01-09T18:24:10.7601060Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7602160Z         iteration=0,
2025-01-09T18:24:10.7602600Z     ):
2025-01-09T18:24:10.7603050Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7604140Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7604390Z         else:
2025-01-09T18:24:10.7604700Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7604930Z     
2025-01-09T18:24:10.7605370Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7605710Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7605980Z         )
2025-01-09T18:24:10.7606210Z     
2025-01-09T18:24:10.7606500Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7606710Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7607790Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7607800Z 
2025-01-09T18:24:10.7608060Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7608400Z __________________ ERROR at setup of test_macro_atom[1-9993] ___________________
2025-01-09T18:24:10.7608410Z 
2025-01-09T18:24:10.7609800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7610550Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7610570Z 
2025-01-09T18:24:10.7610760Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7611410Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7611820Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7612220Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7612510Z >       sim.iterate(10)
2025-01-09T18:24:10.7612530Z 
2025-01-09T18:24:10.7612810Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7613090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7613340Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7613700Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7613960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7613970Z 
2025-01-09T18:24:10.7614530Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7614940Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7615410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7615970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7616310Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7616620Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7616630Z 
2025-01-09T18:24:10.7616830Z     def initialize_transport_state(
2025-01-09T18:24:10.7616990Z         self,
2025-01-09T18:24:10.7617180Z         simulation_state,
2025-01-09T18:24:10.7617340Z         opacity_state,
2025-01-09T18:24:10.7617500Z         macro_atom_state,
2025-01-09T18:24:10.7617660Z         plasma,
2025-01-09T18:24:10.7617810Z         no_of_packets,
2025-01-09T18:24:10.7617990Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7618140Z         iteration=0,
2025-01-09T18:24:10.7618290Z     ):
2025-01-09T18:24:10.7618550Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7618760Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7618900Z         else:
2025-01-09T18:24:10.7619070Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7619210Z     
2025-01-09T18:24:10.7633420Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7634340Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7634490Z         )
2025-01-09T18:24:10.7634630Z     
2025-01-09T18:24:10.7635100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7635330Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7636410Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7636430Z 
2025-01-09T18:24:10.7636700Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7637050Z _______________ ERROR at setup of test_macro_atom[2111963-17296] _______________
2025-01-09T18:24:10.7637070Z 
2025-01-09T18:24:10.7638490Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7639260Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7639280Z 
2025-01-09T18:24:10.7639470Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7639810Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7640020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7640400Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7640560Z >       sim.iterate(10)
2025-01-09T18:24:10.7641050Z 
2025-01-09T18:24:10.7641360Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7641610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7641820Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7642170Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7642420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7642430Z 
2025-01-09T18:24:10.7643130Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7643550Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7644000Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7644570Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7644900Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7645180Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7645190Z 
2025-01-09T18:24:10.7645380Z     def initialize_transport_state(
2025-01-09T18:24:10.7645540Z         self,
2025-01-09T18:24:10.7645720Z         simulation_state,
2025-01-09T18:24:10.7645880Z         opacity_state,
2025-01-09T18:24:10.7646050Z         macro_atom_state,
2025-01-09T18:24:10.7646210Z         plasma,
2025-01-09T18:24:10.7646360Z         no_of_packets,
2025-01-09T18:24:10.7646540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7646690Z         iteration=0,
2025-01-09T18:24:10.7646840Z     ):
2025-01-09T18:24:10.7647100Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7647310Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7647450Z         else:
2025-01-09T18:24:10.7647620Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7647750Z     
2025-01-09T18:24:10.7648050Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7648250Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7648420Z         )
2025-01-09T18:24:10.7648570Z     
2025-01-09T18:24:10.7648850Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7649060Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7650320Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7650330Z 
2025-01-09T18:24:10.7650590Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7650930Z ________________ ERROR at setup of test_macro_atom[10000-9993] _________________
2025-01-09T18:24:10.7650950Z 
2025-01-09T18:24:10.7652350Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7653140Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7653160Z 
2025-01-09T18:24:10.7653350Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7653700Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7653930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7654310Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7654480Z >       sim.iterate(10)
2025-01-09T18:24:10.7654490Z 
2025-01-09T18:24:10.7654750Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7654980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7655220Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7656900Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7657160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7657170Z 
2025-01-09T18:24:10.7657740Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7658200Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7658690Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7659270Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7659610Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7659880Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7659890Z 
2025-01-09T18:24:10.7660080Z     def initialize_transport_state(
2025-01-09T18:24:10.7660230Z         self,
2025-01-09T18:24:10.7660410Z         simulation_state,
2025-01-09T18:24:10.7660570Z         opacity_state,
2025-01-09T18:24:10.7660740Z         macro_atom_state,
2025-01-09T18:24:10.7660880Z         plasma,
2025-01-09T18:24:10.7661040Z         no_of_packets,
2025-01-09T18:24:10.7661220Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7661380Z         iteration=0,
2025-01-09T18:24:10.7661540Z     ):
2025-01-09T18:24:10.7661800Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7662000Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7662150Z         else:
2025-01-09T18:24:10.7662320Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7662460Z     
2025-01-09T18:24:10.7662760Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7662960Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7663110Z         )
2025-01-09T18:24:10.7663250Z     
2025-01-09T18:24:10.7663520Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7663760Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7664820Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7664830Z 
2025-01-09T18:24:10.7665610Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7666000Z ________ ERROR at setup of test_opacity_state_initialize[scatter-False] ________
2025-01-09T18:24:10.7666010Z 
2025-01-09T18:24:10.7667390Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7668140Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7668160Z 
2025-01-09T18:24:10.7668360Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7668700Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7668920Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7669310Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7669480Z >       sim.iterate(10)
2025-01-09T18:24:10.7669490Z 
2025-01-09T18:24:10.7669760Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7670010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7670230Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7670550Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7670820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7670830Z 
2025-01-09T18:24:10.7671370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7672010Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7672480Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7696700Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7697450Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7697880Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7697890Z 
2025-01-09T18:24:10.7697960Z     def initialize_transport_state(
2025-01-09T18:24:10.7698010Z         self,
2025-01-09T18:24:10.7698070Z         simulation_state,
2025-01-09T18:24:10.7698120Z         opacity_state,
2025-01-09T18:24:10.7698180Z         macro_atom_state,
2025-01-09T18:24:10.7698470Z         plasma,
2025-01-09T18:24:10.7698540Z         no_of_packets,
2025-01-09T18:24:10.7698600Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7698660Z         iteration=0,
2025-01-09T18:24:10.7698710Z     ):
2025-01-09T18:24:10.7699070Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7699160Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7699200Z         else:
2025-01-09T18:24:10.7699270Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7699310Z     
2025-01-09T18:24:10.7699680Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7699760Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7699800Z         )
2025-01-09T18:24:10.7699850Z     
2025-01-09T18:24:10.7699950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7700250Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7700700Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7700720Z 
2025-01-09T18:24:10.7700830Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7701040Z _______ ERROR at setup of test_opacity_state_initialize[macroatom-False] _______
2025-01-09T18:24:10.7701040Z 
2025-01-09T18:24:10.7701670Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7702300Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7702310Z 
2025-01-09T18:24:10.7702480Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7702650Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7702750Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7702900Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7702960Z >       sim.iterate(10)
2025-01-09T18:24:10.7702960Z 
2025-01-09T18:24:10.7703150Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7703250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7703320Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7703450Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7703550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7703550Z 
2025-01-09T18:24:10.7703840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7704060Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7704250Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7704550Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7704870Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7705040Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7705040Z 
2025-01-09T18:24:10.7705310Z     def initialize_transport_state(
2025-01-09T18:24:10.7705370Z         self,
2025-01-09T18:24:10.7705430Z         simulation_state,
2025-01-09T18:24:10.7705480Z         opacity_state,
2025-01-09T18:24:10.7705600Z         macro_atom_state,
2025-01-09T18:24:10.7705660Z         plasma,
2025-01-09T18:24:10.7705710Z         no_of_packets,
2025-01-09T18:24:10.7705770Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7705820Z         iteration=0,
2025-01-09T18:24:10.7705860Z     ):
2025-01-09T18:24:10.7705960Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7706040Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7706080Z         else:
2025-01-09T18:24:10.7706200Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7706250Z     
2025-01-09T18:24:10.7706360Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7706450Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7706510Z         )
2025-01-09T18:24:10.7706560Z     
2025-01-09T18:24:10.7706670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7706740Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7707190Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7707200Z 
2025-01-09T18:24:10.7707300Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7707530Z _______ ERROR at setup of test_opacity_state_initialize[macroatom-True] ________
2025-01-09T18:24:10.7707540Z 
2025-01-09T18:24:10.7708120Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7708430Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7708540Z 
2025-01-09T18:24:10.7708660Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7708850Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7708930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7709070Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7709120Z >       sim.iterate(10)
2025-01-09T18:24:10.7709120Z 
2025-01-09T18:24:10.7709240Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7709330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7709400Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7709520Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7709620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7709620Z 
2025-01-09T18:24:10.7709820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7710000Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7710230Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7710450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7710580Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7710680Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7710690Z 
2025-01-09T18:24:10.7710760Z     def initialize_transport_state(
2025-01-09T18:24:10.7710890Z         self,
2025-01-09T18:24:10.7710950Z         simulation_state,
2025-01-09T18:24:10.7711000Z         opacity_state,
2025-01-09T18:24:10.7711060Z         macro_atom_state,
2025-01-09T18:24:10.7711100Z         plasma,
2025-01-09T18:24:10.7711160Z         no_of_packets,
2025-01-09T18:24:10.7711220Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7711270Z         iteration=0,
2025-01-09T18:24:10.7711320Z     ):
2025-01-09T18:24:10.7711420Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7711490Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7711540Z         else:
2025-01-09T18:24:10.7711590Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7711640Z     
2025-01-09T18:24:10.7711750Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7711850Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7711900Z         )
2025-01-09T18:24:10.7711940Z     
2025-01-09T18:24:10.7712060Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7712150Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7712560Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7712570Z 
2025-01-09T18:24:10.7712670Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7712810Z ______ ERROR at setup of test_opacity_state_initialize[downbranch-False] _______
2025-01-09T18:24:10.7712810Z 
2025-01-09T18:24:10.7713690Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7714000Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7714000Z 
2025-01-09T18:24:10.7714080Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7714200Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7714280Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7714520Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7714580Z >       sim.iterate(10)
2025-01-09T18:24:10.7714580Z 
2025-01-09T18:24:10.7714680Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7714760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7714840Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7714970Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7715060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7715070Z 
2025-01-09T18:24:10.7715270Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7715440Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7715630Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7715850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7715980Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7716080Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7716080Z 
2025-01-09T18:24:10.7716160Z     def initialize_transport_state(
2025-01-09T18:24:10.7716210Z         self,
2025-01-09T18:24:10.7716270Z         simulation_state,
2025-01-09T18:24:10.7716320Z         opacity_state,
2025-01-09T18:24:10.7716790Z         macro_atom_state,
2025-01-09T18:24:10.7716840Z         plasma,
2025-01-09T18:24:10.7716890Z         no_of_packets,
2025-01-09T18:24:10.7717190Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7717250Z         iteration=0,
2025-01-09T18:24:10.7717290Z     ):
2025-01-09T18:24:10.7717390Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7717470Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7717510Z         else:
2025-01-09T18:24:10.7717570Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7717620Z     
2025-01-09T18:24:10.7717720Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7717790Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7717840Z         )
2025-01-09T18:24:10.7717890Z     
2025-01-09T18:24:10.7717990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7718060Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7718450Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7718450Z 
2025-01-09T18:24:10.7718540Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7718690Z _______ ERROR at setup of test_opacity_state_initialize[downbranch-True] _______
2025-01-09T18:24:10.7718690Z 
2025-01-09T18:24:10.7719180Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7719460Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7719460Z 
2025-01-09T18:24:10.7719530Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7719660Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7719740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7719880Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7719930Z >       sim.iterate(10)
2025-01-09T18:24:10.7719930Z 
2025-01-09T18:24:10.7720040Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7720130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7720440Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7720560Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7720650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7720650Z 
2025-01-09T18:24:10.7720850Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7721010Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7721180Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7721400Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7721520Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7721630Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7721630Z 
2025-01-09T18:24:10.7721700Z     def initialize_transport_state(
2025-01-09T18:24:10.7721750Z         self,
2025-01-09T18:24:10.7721800Z         simulation_state,
2025-01-09T18:24:10.7721850Z         opacity_state,
2025-01-09T18:24:10.7721910Z         macro_atom_state,
2025-01-09T18:24:10.7721950Z         plasma,
2025-01-09T18:24:10.7722000Z         no_of_packets,
2025-01-09T18:24:10.7722060Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7722110Z         iteration=0,
2025-01-09T18:24:10.7722150Z     ):
2025-01-09T18:24:10.7722250Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7722330Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7722440Z         else:
2025-01-09T18:24:10.7722490Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7722540Z     
2025-01-09T18:24:10.7722640Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7722720Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7722760Z         )
2025-01-09T18:24:10.7722800Z     
2025-01-09T18:24:10.7722910Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7722990Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7723360Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7723370Z 
2025-01-09T18:24:10.7723460Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7723600Z _____________ ERROR at setup of test_VPacketCollection_add_packet ______________
2025-01-09T18:24:10.7723600Z 
2025-01-09T18:24:10.7724100Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7724380Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7724380Z 
2025-01-09T18:24:10.7724450Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7724570Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7724650Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7724790Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7724840Z >       sim.iterate(10)
2025-01-09T18:24:10.7724840Z 
2025-01-09T18:24:10.7724940Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7725030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7725100Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7725220Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7725310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7725360Z 
2025-01-09T18:24:10.7725570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7725730Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7725900Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7726110Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7726230Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7726340Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7726340Z 
2025-01-09T18:24:10.7726410Z     def initialize_transport_state(
2025-01-09T18:24:10.7726450Z         self,
2025-01-09T18:24:10.7726510Z         simulation_state,
2025-01-09T18:24:10.7726560Z         opacity_state,
2025-01-09T18:24:10.7726610Z         macro_atom_state,
2025-01-09T18:24:10.7726660Z         plasma,
2025-01-09T18:24:10.7726710Z         no_of_packets,
2025-01-09T18:24:10.7726770Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7726820Z         iteration=0,
2025-01-09T18:24:10.7726860Z     ):
2025-01-09T18:24:10.7726960Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7727030Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7727080Z         else:
2025-01-09T18:24:10.7727130Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7727180Z     
2025-01-09T18:24:10.7727280Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7727350Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7727450Z         )
2025-01-09T18:24:10.7727490Z     
2025-01-09T18:24:10.7727600Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7727670Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7728050Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7728060Z 
2025-01-09T18:24:10.7728150Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7728300Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-11-132] _
2025-01-09T18:24:10.7728300Z 
2025-01-09T18:24:10.7728790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7729070Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7729080Z 
2025-01-09T18:24:10.7729140Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7729270Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7729540Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7729680Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7729740Z >       sim.iterate(10)
2025-01-09T18:24:10.7729740Z 
2025-01-09T18:24:10.7729830Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7729920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7734120Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7734290Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7734380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7734390Z 
2025-01-09T18:24:10.7734600Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7734760Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7734940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7735300Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7735420Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7735530Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7735540Z 
2025-01-09T18:24:10.7735600Z     def initialize_transport_state(
2025-01-09T18:24:10.7735650Z         self,
2025-01-09T18:24:10.7735700Z         simulation_state,
2025-01-09T18:24:10.7735760Z         opacity_state,
2025-01-09T18:24:10.7735810Z         macro_atom_state,
2025-01-09T18:24:10.7735860Z         plasma,
2025-01-09T18:24:10.7735900Z         no_of_packets,
2025-01-09T18:24:10.7735970Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7736020Z         iteration=0,
2025-01-09T18:24:10.7736060Z     ):
2025-01-09T18:24:10.7736160Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7736230Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7736280Z         else:
2025-01-09T18:24:10.7743470Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7743550Z     
2025-01-09T18:24:10.7743680Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7743750Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7744140Z         )
2025-01-09T18:24:10.7744190Z     
2025-01-09T18:24:10.7744290Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7744370Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7744770Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7744940Z 
2025-01-09T18:24:10.7745040Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7745200Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-1-133] __
2025-01-09T18:24:10.7745200Z 
2025-01-09T18:24:10.7745710Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7746000Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7746000Z 
2025-01-09T18:24:10.7746070Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7746200Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7746280Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7746430Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7746490Z >       sim.iterate(10)
2025-01-09T18:24:10.7746490Z 
2025-01-09T18:24:10.7746580Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7746680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7746750Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7746890Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7746980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7746990Z 
2025-01-09T18:24:10.7747190Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7747350Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7747530Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7747740Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7747870Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7747980Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7748060Z 
2025-01-09T18:24:10.7748130Z     def initialize_transport_state(
2025-01-09T18:24:10.7748180Z         self,
2025-01-09T18:24:10.7748240Z         simulation_state,
2025-01-09T18:24:10.7748290Z         opacity_state,
2025-01-09T18:24:10.7748340Z         macro_atom_state,
2025-01-09T18:24:10.7748390Z         plasma,
2025-01-09T18:24:10.7748430Z         no_of_packets,
2025-01-09T18:24:10.7748500Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7748550Z         iteration=0,
2025-01-09T18:24:10.7748600Z     ):
2025-01-09T18:24:10.7748700Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7748780Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7748820Z         else:
2025-01-09T18:24:10.7748880Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7748920Z     
2025-01-09T18:24:10.7749030Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7749100Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7749150Z         )
2025-01-09T18:24:10.7749190Z     
2025-01-09T18:24:10.7749300Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7749380Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7749760Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7749760Z 
2025-01-09T18:24:10.7749860Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7750000Z _ ERROR at setup of test_move_packet_across_shell_boundary_emitted[132-2-133] __
2025-01-09T18:24:10.7750220Z 
2025-01-09T18:24:10.7750730Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7751020Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7751020Z 
2025-01-09T18:24:10.7751090Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7751220Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7751290Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7751430Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7751490Z >       sim.iterate(10)
2025-01-09T18:24:10.7751490Z 
2025-01-09T18:24:10.7751590Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7751680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7751750Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7751880Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7751970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7751970Z 
2025-01-09T18:24:10.7752180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7752340Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7752510Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7752730Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7752860Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7752980Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7752980Z 
2025-01-09T18:24:10.7753050Z     def initialize_transport_state(
2025-01-09T18:24:10.7753100Z         self,
2025-01-09T18:24:10.7753150Z         simulation_state,
2025-01-09T18:24:10.7753200Z         opacity_state,
2025-01-09T18:24:10.7753780Z         macro_atom_state,
2025-01-09T18:24:10.7753830Z         plasma,
2025-01-09T18:24:10.7753890Z         no_of_packets,
2025-01-09T18:24:10.7753940Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7753990Z         iteration=0,
2025-01-09T18:24:10.7754050Z     ):
2025-01-09T18:24:10.7754160Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7754230Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7754280Z         else:
2025-01-09T18:24:10.7754330Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7754380Z     
2025-01-09T18:24:10.7754480Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7754560Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7754610Z         )
2025-01-09T18:24:10.7754650Z     
2025-01-09T18:24:10.7754760Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7754830Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7755240Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7755250Z 
2025-01-09T18:24:10.7755350Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7755510Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--133-132] _
2025-01-09T18:24:10.7755520Z 
2025-01-09T18:24:10.7756030Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7756470Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7756480Z 
2025-01-09T18:24:10.7756550Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7756680Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7756760Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7756910Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7756960Z >       sim.iterate(10)
2025-01-09T18:24:10.7756960Z 
2025-01-09T18:24:10.7757050Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7757150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7757240Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7757370Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7757480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7757480Z 
2025-01-09T18:24:10.7757690Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7757860Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7758050Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7758280Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7758730Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7758840Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7758840Z 
2025-01-09T18:24:10.7758910Z     def initialize_transport_state(
2025-01-09T18:24:10.7758950Z         self,
2025-01-09T18:24:10.7759010Z         simulation_state,
2025-01-09T18:24:10.7759060Z         opacity_state,
2025-01-09T18:24:10.7759120Z         macro_atom_state,
2025-01-09T18:24:10.7759160Z         plasma,
2025-01-09T18:24:10.7759220Z         no_of_packets,
2025-01-09T18:24:10.7759280Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7759330Z         iteration=0,
2025-01-09T18:24:10.7759380Z     ):
2025-01-09T18:24:10.7759570Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7759650Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7759690Z         else:
2025-01-09T18:24:10.7759750Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7759800Z     
2025-01-09T18:24:10.7759920Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7760010Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7760480Z         )
2025-01-09T18:24:10.7760540Z     
2025-01-09T18:24:10.7760650Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7760730Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7761460Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7761470Z 
2025-01-09T18:24:10.7761900Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7762090Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--133-133] _
2025-01-09T18:24:10.7762090Z 
2025-01-09T18:24:10.7763200Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7763500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7763500Z 
2025-01-09T18:24:10.7763830Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7764070Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7764460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7764630Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7764690Z >       sim.iterate(10)
2025-01-09T18:24:10.7764700Z 
2025-01-09T18:24:10.7765100Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7765200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7765290Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7765420Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7765800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7765810Z 
2025-01-09T18:24:10.7766010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7766440Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7766620Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7767150Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7767280Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7767400Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7767400Z 
2025-01-09T18:24:10.7767540Z     def initialize_transport_state(
2025-01-09T18:24:10.7767590Z         self,
2025-01-09T18:24:10.7767700Z         simulation_state,
2025-01-09T18:24:10.7767750Z         opacity_state,
2025-01-09T18:24:10.7767800Z         macro_atom_state,
2025-01-09T18:24:10.7767860Z         plasma,
2025-01-09T18:24:10.7767930Z         no_of_packets,
2025-01-09T18:24:10.7767980Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7768030Z         iteration=0,
2025-01-09T18:24:10.7768080Z     ):
2025-01-09T18:24:10.7768270Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7768350Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7768390Z         else:
2025-01-09T18:24:10.7768450Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7768490Z     
2025-01-09T18:24:10.7768600Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7768760Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7768810Z         )
2025-01-09T18:24:10.7768850Z     
2025-01-09T18:24:10.7768960Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7769030Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7769490Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7769500Z 
2025-01-09T18:24:10.7769590Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7769860Z _ ERROR at setup of test_move_packet_across_shell_boundary_reabsorbed[132--1000000000.0-133] _
2025-01-09T18:24:10.7769860Z 
2025-01-09T18:24:10.7770390Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7770770Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7770780Z 
2025-01-09T18:24:10.7770840Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7770970Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7771040Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7771260Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7771390Z >       sim.iterate(10)
2025-01-09T18:24:10.7771400Z 
2025-01-09T18:24:10.7771490Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7771580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7771650Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7771780Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7771950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7771950Z 
2025-01-09T18:24:10.7772160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7772310Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7772560Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7772780Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7772910Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7773010Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7773010Z 
2025-01-09T18:24:10.7773090Z     def initialize_transport_state(
2025-01-09T18:24:10.7773130Z         self,
2025-01-09T18:24:10.7773190Z         simulation_state,
2025-01-09T18:24:10.7773240Z         opacity_state,
2025-01-09T18:24:10.7773290Z         macro_atom_state,
2025-01-09T18:24:10.7773340Z         plasma,
2025-01-09T18:24:10.7773400Z         no_of_packets,
2025-01-09T18:24:10.7773460Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7773510Z         iteration=0,
2025-01-09T18:24:10.7773560Z     ):
2025-01-09T18:24:10.7773660Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7773730Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7773790Z         else:
2025-01-09T18:24:10.7773840Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7773890Z     
2025-01-09T18:24:10.7774000Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7774080Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7774130Z         )
2025-01-09T18:24:10.7774170Z     
2025-01-09T18:24:10.7774270Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7774400Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7774790Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7774800Z 
2025-01-09T18:24:10.7774890Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7775050Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132--1-199] _
2025-01-09T18:24:10.7775050Z 
2025-01-09T18:24:10.7775540Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7775940Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7775950Z 
2025-01-09T18:24:10.7776020Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7776140Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7776220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7776360Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7776500Z >       sim.iterate(10)
2025-01-09T18:24:10.7776510Z 
2025-01-09T18:24:10.7776600Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7776690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7776760Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7777120Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7777300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7777300Z 
2025-01-09T18:24:10.7777510Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7777670Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7777850Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7778150Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7778270Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7778370Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7778370Z 
2025-01-09T18:24:10.7778440Z     def initialize_transport_state(
2025-01-09T18:24:10.7778490Z         self,
2025-01-09T18:24:10.7778540Z         simulation_state,
2025-01-09T18:24:10.7778590Z         opacity_state,
2025-01-09T18:24:10.7778650Z         macro_atom_state,
2025-01-09T18:24:10.7778690Z         plasma,
2025-01-09T18:24:10.7778740Z         no_of_packets,
2025-01-09T18:24:10.7778800Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7778850Z         iteration=0,
2025-01-09T18:24:10.7778900Z     ):
2025-01-09T18:24:10.7779000Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7779100Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7779160Z         else:
2025-01-09T18:24:10.7779220Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7779350Z     
2025-01-09T18:24:10.7779460Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7779540Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7779590Z         )
2025-01-09T18:24:10.7779630Z     
2025-01-09T18:24:10.7779740Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7779820Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7780200Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7780400Z 
2025-01-09T18:24:10.7780500Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7780650Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132-0-132] _
2025-01-09T18:24:10.7780650Z 
2025-01-09T18:24:10.7781140Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7781430Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7781430Z 
2025-01-09T18:24:10.7781500Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7781630Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7781700Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7781840Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7781900Z >       sim.iterate(10)
2025-01-09T18:24:10.7781900Z 
2025-01-09T18:24:10.7781990Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7782370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7782460Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7782580Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7782670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7782680Z 
2025-01-09T18:24:10.7782880Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7783130Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7783310Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7783520Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7783660Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7783780Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7783780Z 
2025-01-09T18:24:10.7783850Z     def initialize_transport_state(
2025-01-09T18:24:10.7783890Z         self,
2025-01-09T18:24:10.7783950Z         simulation_state,
2025-01-09T18:24:10.7784000Z         opacity_state,
2025-01-09T18:24:10.7784060Z         macro_atom_state,
2025-01-09T18:24:10.7784110Z         plasma,
2025-01-09T18:24:10.7784160Z         no_of_packets,
2025-01-09T18:24:10.7784220Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7784270Z         iteration=0,
2025-01-09T18:24:10.7784310Z     ):
2025-01-09T18:24:10.7784420Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7784490Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7784540Z         else:
2025-01-09T18:24:10.7784600Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7784650Z     
2025-01-09T18:24:10.7784760Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7784830Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7784870Z         )
2025-01-09T18:24:10.7784920Z     
2025-01-09T18:24:10.7785020Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7785090Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7785480Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7785480Z 
2025-01-09T18:24:10.7785570Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7785740Z _ ERROR at setup of test_move_packet_across_shell_boundary_increment[132-20-154] _
2025-01-09T18:24:10.7785750Z 
2025-01-09T18:24:10.7786240Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...: {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}, 'config_dirname': 'tardis/io/configuration/tests/data'}
2025-01-09T18:24:10.7802250Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7802300Z 
2025-01-09T18:24:10.7802470Z     @pytest.fixture(scope="package")
2025-01-09T18:24:10.7802630Z     def nb_simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7802710Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7802870Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.7802930Z >       sim.iterate(10)
2025-01-09T18:24:10.7802930Z 
2025-01-09T18:24:10.7803130Z tardis/transport/montecarlo/tests/conftest.py:43: 
2025-01-09T18:24:10.7803230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7803310Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7803440Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7803530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7803530Z 
2025-01-09T18:24:10.7803810Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7804040Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7804210Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7804810Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7804940Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7805040Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7805050Z 
2025-01-09T18:24:10.7805110Z     def initialize_transport_state(
2025-01-09T18:24:10.7805160Z         self,
2025-01-09T18:24:10.7805210Z         simulation_state,
2025-01-09T18:24:10.7805260Z         opacity_state,
2025-01-09T18:24:10.7805320Z         macro_atom_state,
2025-01-09T18:24:10.7805370Z         plasma,
2025-01-09T18:24:10.7805420Z         no_of_packets,
2025-01-09T18:24:10.7805480Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7805540Z         iteration=0,
2025-01-09T18:24:10.7805680Z     ):
2025-01-09T18:24:10.7805780Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7805850Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7805910Z         else:
2025-01-09T18:24:10.7805960Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7806010Z     
2025-01-09T18:24:10.7806110Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7806190Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7806230Z         )
2025-01-09T18:24:10.7806280Z     
2025-01-09T18:24:10.7806380Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7806590Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7806970Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7806980Z 
2025-01-09T18:24:10.7807060Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7807220Z _________________ ERROR at setup of test_boundary_interactions _________________
2025-01-09T18:24:10.7807230Z 
2025-01-09T18:24:10.7807470Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.7807740Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.7807750Z 
2025-01-09T18:24:10.7807810Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.7807870Z         "expected,obtained",
2025-01-09T18:24:10.7808050Z         [
2025-01-09T18:24:10.7808100Z             (
2025-01-09T18:24:10.7808290Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.7808370Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.7808420Z             ),
2025-01-09T18:24:10.7808550Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.7808650Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.7808690Z         ],
2025-01-09T18:24:10.7808740Z     )
2025-01-09T18:24:10.7808870Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.7808970Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7808970Z 
2025-01-09T18:24:10.7809190Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.7809290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7809520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.7809610Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.7809950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7810030Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7810230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.7810330Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.7810590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7810870Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7811070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.7811120Z     raise exc
2025-01-09T18:24:10.7811320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.7811380Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.7811570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.7811710Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.7811890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.7812050Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.7812250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.7812390Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.7812640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:10.7812730Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.7813010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.7813050Z     yield
2025-01-09T18:24:10.7813310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:10.7813400Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.7813700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.7813750Z     yield
2025-01-09T18:24:10.7813970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:10.7814160Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:10.7814370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.7814500Z     yield
2025-01-09T18:24:10.7814720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:10.7814780Z     return (yield)
2025-01-09T18:24:10.7815000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:10.7815060Z     return (yield)
2025-01-09T18:24:10.7815390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:10.7815440Z     raise e
2025-01-09T18:24:10.7815660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:10.7815710Z     item.runtest()
2025-01-09T18:24:10.7815900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:10.7815990Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:10.7816180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.7816340Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.7816630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.7816770Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.7816990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:10.7817060Z     result = testfunction(**testargs)
2025-01-09T18:24:10.7817320Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.7818080Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7818300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.7818510Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.7818760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7818830Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7819030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.7819120Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.7819450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7819530Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7819720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.7819770Z     raise exc
2025-01-09T18:24:10.7820060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.7820130Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.7820320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.7820450Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.7820640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.7820890Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.7821110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.7821250Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.7821500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:10.7821580Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.7821860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.7822310Z     yield
2025-01-09T18:24:10.7822580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:10.7822670Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.7823090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.7823130Z     yield
2025-01-09T18:24:10.7823360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:10.7823440Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:10.7823650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.7823790Z     yield
2025-01-09T18:24:10.7824010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:10.7824070Z     return (yield)
2025-01-09T18:24:10.7824300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:10.7824340Z     return (yield)
2025-01-09T18:24:10.7824560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:10.7824610Z     raise e
2025-01-09T18:24:10.7824830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:10.7824880Z     item.runtest()
2025-01-09T18:24:10.7825080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:10.7825260Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:10.7825570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.7825730Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.7825940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.7826070Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.7826290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:10.7826350Z     result = testfunction(**testargs)
2025-01-09T18:24:10.7826670Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.7826760Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7826980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.7827080Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.7827310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7827390Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7827580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.7827680Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.7827910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7827980Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7828180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-09T18:24:10.7828410Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-09T18:24:10.7828610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.7828760Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.7828960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.7836910Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.7837710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-09T18:24:10.7837880Z     return (yield)
2025-01-09T18:24:10.7838530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-09T18:24:10.7838820Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-09T18:24:10.7839430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-09T18:24:10.7839670Z     fixture_result = fixturefunc(**kwargs)
2025-01-09T18:24:10.7839960Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.7840120Z     sim = run_tardis(
2025-01-09T18:24:10.7840300Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.7840490Z     simulation.run_convergence()
2025-01-09T18:24:10.7840760Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7841090Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7841300Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7841630Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7841880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7841890Z 
2025-01-09T18:24:10.7842440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.7842860Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.7847970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.7848610Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.7848750Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.7848890Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7848890Z 
2025-01-09T18:24:10.7848960Z     def initialize_transport_state(
2025-01-09T18:24:10.7849010Z         self,
2025-01-09T18:24:10.7849080Z         simulation_state,
2025-01-09T18:24:10.7849130Z         opacity_state,
2025-01-09T18:24:10.7849180Z         macro_atom_state,
2025-01-09T18:24:10.7849240Z         plasma,
2025-01-09T18:24:10.7849290Z         no_of_packets,
2025-01-09T18:24:10.7849350Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7849400Z         iteration=0,
2025-01-09T18:24:10.7849440Z     ):
2025-01-09T18:24:10.7849550Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7849630Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7849680Z         else:
2025-01-09T18:24:10.7849760Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7849810Z     
2025-01-09T18:24:10.7849930Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7850010Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7850060Z         )
2025-01-09T18:24:10.7850100Z     
2025-01-09T18:24:10.7850210Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7850290Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7850670Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7850680Z 
2025-01-09T18:24:10.7850780Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7850920Z _____________ ERROR at setup of test_rpacket_trackers_to_dataframe _____________
2025-01-09T18:24:10.7850920Z 
2025-01-09T18:24:10.7851060Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.7851320Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.7851620Z 
2025-01-09T18:24:10.7851700Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.7851770Z         "expected,obtained",
2025-01-09T18:24:10.7851820Z         [
2025-01-09T18:24:10.7851870Z             (
2025-01-09T18:24:10.7851950Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.7852040Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.7852080Z             ),
2025-01-09T18:24:10.7852210Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.7852300Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.7852420Z         ],
2025-01-09T18:24:10.7852460Z     )
2025-01-09T18:24:10.7852600Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.7852700Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7852700Z 
2025-01-09T18:24:10.7852840Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.7852940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7853170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.7853360Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.7853640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7853730Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7853940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.7854240Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.7854480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7854560Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7854780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.7854830Z     raise exc
2025-01-09T18:24:10.7855040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.7855200Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.7855400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.7855530Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.7855730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.7855890Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.7856090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.7856290Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.7856550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:10.7856630Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.7856910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.7856960Z     yield
2025-01-09T18:24:10.7857310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:10.7857410Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.7857730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.7857780Z     yield
2025-01-09T18:24:10.7858080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:10.7858160Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:10.7858470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.7858520Z     yield
2025-01-09T18:24:10.7858740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:10.7858810Z     return (yield)
2025-01-09T18:24:10.7859170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:10.7859230Z     return (yield)
2025-01-09T18:24:10.7859440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:10.7859500Z     raise e
2025-01-09T18:24:10.7859720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:10.7859770Z     item.runtest()
2025-01-09T18:24:10.7860020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:10.7860120Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:10.7860310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.7860460Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.7860670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.7860820Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.7861100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:10.7861580Z     result = testfunction(**testargs)
2025-01-09T18:24:10.7861810Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.7861900Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7862190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.7862300Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.7862540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7862620Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7862810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.7862980Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.7863220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7863300Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7863510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.7863560Z     raise exc
2025-01-09T18:24:10.7863750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.7863880Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.7864080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.7864210Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.7864400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.7864560Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.7864820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.7864960Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.7865230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:10.7865670Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.7865950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.7866000Z     yield
2025-01-09T18:24:10.7866260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:10.7866350Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.7866720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.7866780Z     yield
2025-01-09T18:24:10.7867010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:10.7867090Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:10.7867290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.7867350Z     yield
2025-01-09T18:24:10.7867630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:10.7867680Z     return (yield)
2025-01-09T18:24:10.7867930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:10.7867980Z     return (yield)
2025-01-09T18:24:10.7868200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:10.7868250Z     raise e
2025-01-09T18:24:10.7868530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:10.7868690Z     item.runtest()
2025-01-09T18:24:10.7868890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:10.7868980Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:10.7869180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.7869350Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.7869610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.7869750Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.7869960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:10.7870030Z     result = testfunction(**testargs)
2025-01-09T18:24:10.7870250Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.7870350Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7870620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.7870720Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.7870960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7871030Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7871230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.7871330Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.7871560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.7871630Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.7871840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-09T18:24:10.7871990Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-09T18:24:10.7872180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.7872430Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.7872690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.7872820Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.7873050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-09T18:24:10.7873110Z     return (yield)
2025-01-09T18:24:10.7873330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-09T18:24:10.7873450Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-09T18:24:10.7873660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-09T18:24:10.7873740Z     fixture_result = fixturefunc(**kwargs)
2025-01-09T18:24:10.7874330Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.7874430Z     sim = run_tardis(
2025-01-09T18:24:10.7874500Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.7874560Z     simulation.run_convergence()
2025-01-09T18:24:10.7874650Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7874760Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7874840Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7874950Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7875050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7875050Z 
2025-01-09T18:24:10.7875420Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.7875590Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.7875760Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.7875970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.7876100Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.7876210Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7876210Z 
2025-01-09T18:24:10.7876280Z     def initialize_transport_state(
2025-01-09T18:24:10.7876330Z         self,
2025-01-09T18:24:10.7876390Z         simulation_state,
2025-01-09T18:24:10.7876440Z         opacity_state,
2025-01-09T18:24:10.7876490Z         macro_atom_state,
2025-01-09T18:24:10.7876540Z         plasma,
2025-01-09T18:24:10.7876600Z         no_of_packets,
2025-01-09T18:24:10.7876660Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7876710Z         iteration=0,
2025-01-09T18:24:10.7876750Z     ):
2025-01-09T18:24:10.7876850Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7876930Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7876970Z         else:
2025-01-09T18:24:10.7877040Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7877080Z     
2025-01-09T18:24:10.7877190Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7877260Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7877310Z         )
2025-01-09T18:24:10.7877350Z     
2025-01-09T18:24:10.7877460Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7877530Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7877920Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7877930Z 
2025-01-09T18:24:10.7878020Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7878160Z ______________ ERROR at setup of test_trace_vpacket_within_shell _______________
2025-01-09T18:24:10.7878160Z 
2025-01-09T18:24:10.7878270Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-09T18:24:10.7878570Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-09T18:24:10.7878570Z 
2025-01-09T18:24:10.7878640Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.7878690Z         "expected,obtained",
2025-01-09T18:24:10.7878750Z         [
2025-01-09T18:24:10.7878790Z             (
2025-01-09T18:24:10.7878860Z                 "interaction_type_in_use",
2025-01-09T18:24:10.7878930Z                 "interaction_type_to_check",
2025-01-09T18:24:10.7878980Z             ),
2025-01-09T18:24:10.7879020Z             (
2025-01-09T18:24:10.7879080Z                 "shell_id_in_use",
2025-01-09T18:24:10.7879140Z                 "shell_id_to_check",
2025-01-09T18:24:10.7879190Z             ),
2025-01-09T18:24:10.7879230Z             (
2025-01-09T18:24:10.7879280Z                 "r_in_use",
2025-01-09T18:24:10.7879330Z                 "r_to_check",
2025-01-09T18:24:10.7879380Z             ),
2025-01-09T18:24:10.7879460Z             ("nu_packet_collection", "nu_to_check"),
2025-01-09T18:24:10.7879510Z         ],
2025-01-09T18:24:10.7879560Z     )
2025-01-09T18:24:10.7879690Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-09T18:24:10.7879780Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7879790Z 
2025-01-09T18:24:10.7879960Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-09T18:24:10.7880060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7880320Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:10.7880480Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7880750Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:10.7880840Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7881110Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:10.7881190Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7881400Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-09T18:24:10.7881460Z     sim.iterate(10)
2025-01-09T18:24:10.7881540Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7881660Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7881750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7881760Z 
2025-01-09T18:24:10.7881960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7882120Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7882300Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7882510Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7882640Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7882740Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7882740Z 
2025-01-09T18:24:10.7882810Z     def initialize_transport_state(
2025-01-09T18:24:10.7882860Z         self,
2025-01-09T18:24:10.7882910Z         simulation_state,
2025-01-09T18:24:10.7882960Z         opacity_state,
2025-01-09T18:24:10.7883020Z         macro_atom_state,
2025-01-09T18:24:10.7883060Z         plasma,
2025-01-09T18:24:10.7883110Z         no_of_packets,
2025-01-09T18:24:10.7883180Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7883230Z         iteration=0,
2025-01-09T18:24:10.7883270Z     ):
2025-01-09T18:24:10.7883370Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7883440Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7883600Z         else:
2025-01-09T18:24:10.7883660Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7883700Z     
2025-01-09T18:24:10.7883810Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7883880Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7883930Z         )
2025-01-09T18:24:10.7883970Z     
2025-01-09T18:24:10.7884070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7884140Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7884530Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7884540Z 
2025-01-09T18:24:10.7884630Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7884750Z _____________________ ERROR at setup of test_trace_vpacket _____________________
2025-01-09T18:24:10.7884750Z 
2025-01-09T18:24:10.7884860Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-09T18:24:10.7885110Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-09T18:24:10.7885120Z 
2025-01-09T18:24:10.7885190Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.7885250Z         "expected,obtained",
2025-01-09T18:24:10.7885290Z         [
2025-01-09T18:24:10.7885340Z             (
2025-01-09T18:24:10.7885410Z                 "interaction_type_in_use",
2025-01-09T18:24:10.7885470Z                 "interaction_type_to_check",
2025-01-09T18:24:10.7885520Z             ),
2025-01-09T18:24:10.7885900Z             (
2025-01-09T18:24:10.7885960Z                 "shell_id_in_use",
2025-01-09T18:24:10.7886020Z                 "shell_id_to_check",
2025-01-09T18:24:10.7886060Z             ),
2025-01-09T18:24:10.7886100Z             (
2025-01-09T18:24:10.7886150Z                 "r_in_use",
2025-01-09T18:24:10.7886210Z                 "r_to_check",
2025-01-09T18:24:10.7886260Z             ),
2025-01-09T18:24:10.7886350Z             ("nu_packet_collection", "nu_to_check"),
2025-01-09T18:24:10.7886390Z         ],
2025-01-09T18:24:10.7886440Z     )
2025-01-09T18:24:10.7886570Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-09T18:24:10.7886660Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7886660Z 
2025-01-09T18:24:10.7886840Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-09T18:24:10.7886930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7887200Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:10.7887290Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7887550Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:10.7887630Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7887900Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:10.7887990Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7888160Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-09T18:24:10.7888930Z     sim.iterate(10)
2025-01-09T18:24:10.7889500Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7890060Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7890360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7890400Z 
2025-01-09T18:24:10.7891160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7891620Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7892090Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7893970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7894350Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7894640Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7894650Z 
2025-01-09T18:24:10.7894840Z     def initialize_transport_state(
2025-01-09T18:24:10.7894990Z         self,
2025-01-09T18:24:10.7895160Z         simulation_state,
2025-01-09T18:24:10.7895320Z         opacity_state,
2025-01-09T18:24:10.7895480Z         macro_atom_state,
2025-01-09T18:24:10.7895640Z         plasma,
2025-01-09T18:24:10.7895800Z         no_of_packets,
2025-01-09T18:24:10.7895980Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7896130Z         iteration=0,
2025-01-09T18:24:10.7896270Z     ):
2025-01-09T18:24:10.7896530Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7896740Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7896890Z         else:
2025-01-09T18:24:10.7897060Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7897210Z     
2025-01-09T18:24:10.7897500Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7897690Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7897850Z         )
2025-01-09T18:24:10.7897990Z     
2025-01-09T18:24:10.7898260Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7898480Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7899780Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7900120Z 
2025-01-09T18:24:10.7900400Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7900760Z ___________________ ERROR at setup of test_trace_bad_vpacket ___________________
2025-01-09T18:24:10.7900770Z 
2025-01-09T18:24:10.7901070Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-09T18:24:10.7901740Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-09T18:24:10.7901770Z 
2025-01-09T18:24:10.7901980Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.7902170Z         "expected,obtained",
2025-01-09T18:24:10.7902320Z         [
2025-01-09T18:24:10.7902470Z             (
2025-01-09T18:24:10.7902660Z                 "interaction_type_in_use",
2025-01-09T18:24:10.7902850Z                 "interaction_type_to_check",
2025-01-09T18:24:10.7903010Z             ),
2025-01-09T18:24:10.7903160Z             (
2025-01-09T18:24:10.7903320Z                 "shell_id_in_use",
2025-01-09T18:24:10.7903700Z                 "shell_id_to_check",
2025-01-09T18:24:10.7903850Z             ),
2025-01-09T18:24:10.7904000Z             (
2025-01-09T18:24:10.7904150Z                 "r_in_use",
2025-01-09T18:24:10.7904480Z                 "r_to_check",
2025-01-09T18:24:10.7904640Z             ),
2025-01-09T18:24:10.7905030Z             ("nu_packet_collection", "nu_to_check"),
2025-01-09T18:24:10.7905180Z         ],
2025-01-09T18:24:10.7905360Z     )
2025-01-09T18:24:10.7906020Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-09T18:24:10.7906460Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7906470Z 
2025-01-09T18:24:10.7907230Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-09T18:24:10.7907560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7908720Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:10.7909050Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7910230Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:10.7911010Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7911850Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:10.7912320Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.7913020Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-09T18:24:10.7913220Z     sim.iterate(10)
2025-01-09T18:24:10.7913700Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7914050Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7914530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7914550Z 
2025-01-09T18:24:10.7915400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:10.7916100Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:10.7916880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:10.7917750Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:10.7918320Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:10.7918610Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7918620Z 
2025-01-09T18:24:10.7918940Z     def initialize_transport_state(
2025-01-09T18:24:10.7919190Z         self,
2025-01-09T18:24:10.7919350Z         simulation_state,
2025-01-09T18:24:10.7919540Z         opacity_state,
2025-01-09T18:24:10.7920240Z         macro_atom_state,
2025-01-09T18:24:10.7920390Z         plasma,
2025-01-09T18:24:10.7920550Z         no_of_packets,
2025-01-09T18:24:10.7920750Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7920910Z         iteration=0,
2025-01-09T18:24:10.7921240Z     ):
2025-01-09T18:24:10.7921600Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7921820Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7921960Z         else:
2025-01-09T18:24:10.7922130Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7922270Z     
2025-01-09T18:24:10.7922560Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7922860Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7923010Z         )
2025-01-09T18:24:10.7923150Z     
2025-01-09T18:24:10.7923430Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7923650Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7924690Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7924710Z 
2025-01-09T18:24:10.7925060Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7925470Z ___ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_list] ____
2025-01-09T18:24:10.7925480Z 
2025-01-09T18:24:10.7926940Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.7927700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7927720Z 
2025-01-09T18:24:10.7927900Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7928200Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7928350Z         """
2025-01-09T18:24:10.7928770Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.7937110Z     
2025-01-09T18:24:10.7937500Z         Parameters:
2025-01-09T18:24:10.7937570Z         -----------
2025-01-09T18:24:10.7937690Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.7938470Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.7938600Z     
2025-01-09T18:24:10.7938650Z         Returns:
2025-01-09T18:24:10.7938700Z         --------
2025-01-09T18:24:10.7938770Z         A TARDIS simulation object.
2025-01-09T18:24:10.7938810Z         """
2025-01-09T18:24:10.7938910Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.7939010Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.7939120Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.7939270Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.7939400Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.7939470Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7939530Z >       sim = run_tardis(
2025-01-09T18:24:10.7939580Z             config_verysimple,
2025-01-09T18:24:10.7939830Z             atom_data=atomic_data,
2025-01-09T18:24:10.7939870Z         )
2025-01-09T18:24:10.7939880Z 
2025-01-09T18:24:10.7939990Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.7940250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7940310Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.7940380Z     simulation.run_convergence()
2025-01-09T18:24:10.7940660Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7940780Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7940850Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7941440Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7941540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7941540Z 
2025-01-09T18:24:10.7941770Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.7941940Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.7942130Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.7942360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.7942480Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.7942590Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7942600Z 
2025-01-09T18:24:10.7942660Z     def initialize_transport_state(
2025-01-09T18:24:10.7942710Z         self,
2025-01-09T18:24:10.7942770Z         simulation_state,
2025-01-09T18:24:10.7942820Z         opacity_state,
2025-01-09T18:24:10.7942870Z         macro_atom_state,
2025-01-09T18:24:10.7942920Z         plasma,
2025-01-09T18:24:10.7942960Z         no_of_packets,
2025-01-09T18:24:10.7943020Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7943080Z         iteration=0,
2025-01-09T18:24:10.7943120Z     ):
2025-01-09T18:24:10.7943230Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7943300Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7943350Z         else:
2025-01-09T18:24:10.7943400Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7943450Z     
2025-01-09T18:24:10.7943550Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7943630Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7943670Z         )
2025-01-09T18:24:10.7943720Z     
2025-01-09T18:24:10.7943830Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7943910Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7944290Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7944300Z 
2025-01-09T18:24:10.7944490Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7944620Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.7945000Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.7945340Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.7945480Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7945650Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:10.7945770Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.7945830Z 	
2025-01-09T18:24:10.7945940Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-09T18:24:10.7946060Z ------------------------------ Captured log setup ------------------------------
2025-01-09T18:24:10.7946470Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.7946660Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:10.7946750Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:10.7946800Z 	Starting iteration 1 of 3
2025-01-09T18:24:10.7946960Z ____ ERROR at setup of TestLIVPlotter.test_parse_species_list[_keep_colour] ____
2025-01-09T18:24:10.7946960Z 
2025-01-09T18:24:10.7947490Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.7948050Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7948060Z 
2025-01-09T18:24:10.7948130Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7948250Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7952560Z         """
2025-01-09T18:24:10.7952690Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.7952730Z     
2025-01-09T18:24:10.7952790Z         Parameters:
2025-01-09T18:24:10.7952830Z         -----------
2025-01-09T18:24:10.7952940Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.7953050Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.7953110Z     
2025-01-09T18:24:10.7953150Z         Returns:
2025-01-09T18:24:10.7953210Z         --------
2025-01-09T18:24:10.7953270Z         A TARDIS simulation object.
2025-01-09T18:24:10.7953320Z         """
2025-01-09T18:24:10.7953400Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.7953500Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.7953600Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.7953750Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.7953860Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.7953930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7953990Z >       sim = run_tardis(
2025-01-09T18:24:10.7954040Z             config_verysimple,
2025-01-09T18:24:10.7954110Z             atom_data=atomic_data,
2025-01-09T18:24:10.7954150Z         )
2025-01-09T18:24:10.7954150Z 
2025-01-09T18:24:10.7954260Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.7954350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7954420Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.7954490Z     simulation.run_convergence()
2025-01-09T18:24:10.7954590Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7954690Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7955020Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7955140Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7955230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7955230Z 
2025-01-09T18:24:10.7955440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.7955600Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.7956070Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.7956300Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.7956420Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.7956530Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7956530Z 
2025-01-09T18:24:10.7956600Z     def initialize_transport_state(
2025-01-09T18:24:10.7956650Z         self,
2025-01-09T18:24:10.7956710Z         simulation_state,
2025-01-09T18:24:10.7956760Z         opacity_state,
2025-01-09T18:24:10.7956810Z         macro_atom_state,
2025-01-09T18:24:10.7956860Z         plasma,
2025-01-09T18:24:10.7956910Z         no_of_packets,
2025-01-09T18:24:10.7956970Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7957020Z         iteration=0,
2025-01-09T18:24:10.7957060Z     ):
2025-01-09T18:24:10.7957160Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7957240Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7957370Z         else:
2025-01-09T18:24:10.7957430Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7957890Z     
2025-01-09T18:24:10.7958020Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7958090Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7958140Z         )
2025-01-09T18:24:10.7958180Z     
2025-01-09T18:24:10.7958600Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7958690Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7959380Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7959390Z 
2025-01-09T18:24:10.7959490Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7959660Z __ ERROR at setup of TestLIVPlotter.test_parse_species_list[_species_mapped] ___
2025-01-09T18:24:10.7959660Z 
2025-01-09T18:24:10.7960900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.7961200Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7961220Z 
2025-01-09T18:24:10.7961280Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7961470Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7961560Z         """
2025-01-09T18:24:10.7961650Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.7961700Z     
2025-01-09T18:24:10.7961750Z         Parameters:
2025-01-09T18:24:10.7961800Z         -----------
2025-01-09T18:24:10.7961930Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.7962070Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.7962130Z     
2025-01-09T18:24:10.7962170Z         Returns:
2025-01-09T18:24:10.7962220Z         --------
2025-01-09T18:24:10.7962340Z         A TARDIS simulation object.
2025-01-09T18:24:10.7962390Z         """
2025-01-09T18:24:10.7962470Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.7962680Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.7962800Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.7962950Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.7963050Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.7963190Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7963240Z >       sim = run_tardis(
2025-01-09T18:24:10.7963300Z             config_verysimple,
2025-01-09T18:24:10.7963360Z             atom_data=atomic_data,
2025-01-09T18:24:10.7963410Z         )
2025-01-09T18:24:10.7963420Z 
2025-01-09T18:24:10.7963530Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.7963610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7963680Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.7963740Z     simulation.run_convergence()
2025-01-09T18:24:10.7963930Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7964050Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7964130Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7964260Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7964360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7964360Z 
2025-01-09T18:24:10.7964590Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.7964810Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.7965100Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.7965340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.7965470Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.7965640Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7965640Z 
2025-01-09T18:24:10.7965710Z     def initialize_transport_state(
2025-01-09T18:24:10.7965750Z         self,
2025-01-09T18:24:10.7965810Z         simulation_state,
2025-01-09T18:24:10.7965860Z         opacity_state,
2025-01-09T18:24:10.7965930Z         macro_atom_state,
2025-01-09T18:24:10.7966000Z         plasma,
2025-01-09T18:24:10.7966050Z         no_of_packets,
2025-01-09T18:24:10.7966110Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7966160Z         iteration=0,
2025-01-09T18:24:10.7966210Z     ):
2025-01-09T18:24:10.7966330Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7966410Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7966510Z         else:
2025-01-09T18:24:10.7966570Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7966610Z     
2025-01-09T18:24:10.7966730Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7966830Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7966890Z         )
2025-01-09T18:24:10.7966930Z     
2025-01-09T18:24:10.7967050Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7967130Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7967570Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7967570Z 
2025-01-09T18:24:10.7967670Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7967890Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] _
2025-01-09T18:24:10.7967900Z 
2025-01-09T18:24:10.7968500Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.7968970Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7968980Z 
2025-01-09T18:24:10.7969060Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7969180Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7969220Z         """
2025-01-09T18:24:10.7969320Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.7969360Z     
2025-01-09T18:24:10.7969420Z         Parameters:
2025-01-09T18:24:10.7969470Z         -----------
2025-01-09T18:24:10.7969580Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.7969750Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.7969800Z     
2025-01-09T18:24:10.7969840Z         Returns:
2025-01-09T18:24:10.7969890Z         --------
2025-01-09T18:24:10.7969950Z         A TARDIS simulation object.
2025-01-09T18:24:10.7970010Z         """
2025-01-09T18:24:10.7970130Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.7970240Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.7970410Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.7970560Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.7970670Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.7970740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7970790Z >       sim = run_tardis(
2025-01-09T18:24:10.7970950Z             config_verysimple,
2025-01-09T18:24:10.7971020Z             atom_data=atomic_data,
2025-01-09T18:24:10.7971070Z         )
2025-01-09T18:24:10.7971080Z 
2025-01-09T18:24:10.7971240Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.7971330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7971400Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.7971470Z     simulation.run_convergence()
2025-01-09T18:24:10.7971560Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7971670Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7971740Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7971860Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7972000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7972010Z 
2025-01-09T18:24:10.7972220Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.7972390Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.7972580Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.7972840Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.7972980Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.7973110Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7973120Z 
2025-01-09T18:24:10.7973190Z     def initialize_transport_state(
2025-01-09T18:24:10.7973240Z         self,
2025-01-09T18:24:10.7973290Z         simulation_state,
2025-01-09T18:24:10.7973360Z         opacity_state,
2025-01-09T18:24:10.7973420Z         macro_atom_state,
2025-01-09T18:24:10.7973470Z         plasma,
2025-01-09T18:24:10.7973510Z         no_of_packets,
2025-01-09T18:24:10.7973640Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7973690Z         iteration=0,
2025-01-09T18:24:10.7973730Z     ):
2025-01-09T18:24:10.7973830Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7973920Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7973980Z         else:
2025-01-09T18:24:10.7974130Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7974170Z     
2025-01-09T18:24:10.7974280Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7974350Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7974400Z         )
2025-01-09T18:24:10.7974500Z     
2025-01-09T18:24:10.7974610Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7974680Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7975060Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7975070Z 
2025-01-09T18:24:10.7975160Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7975390Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] _
2025-01-09T18:24:10.7975400Z 
2025-01-09T18:24:10.7976010Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.7976290Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7976300Z 
2025-01-09T18:24:10.7976370Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7976480Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7976520Z         """
2025-01-09T18:24:10.7976610Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.7977030Z     
2025-01-09T18:24:10.7977090Z         Parameters:
2025-01-09T18:24:10.7977130Z         -----------
2025-01-09T18:24:10.7977240Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.7977350Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.7977400Z     
2025-01-09T18:24:10.7977450Z         Returns:
2025-01-09T18:24:10.7977490Z         --------
2025-01-09T18:24:10.7977550Z         A TARDIS simulation object.
2025-01-09T18:24:10.7977600Z         """
2025-01-09T18:24:10.7977690Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.7977780Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.7977890Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.7978030Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.7978140Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.7978210Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7979290Z >       sim = run_tardis(
2025-01-09T18:24:10.7979380Z             config_verysimple,
2025-01-09T18:24:10.7979440Z             atom_data=atomic_data,
2025-01-09T18:24:10.7979490Z         )
2025-01-09T18:24:10.7979490Z 
2025-01-09T18:24:10.7979600Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.7979700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7979760Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.7979830Z     simulation.run_convergence()
2025-01-09T18:24:10.7979910Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7980030Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7980090Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7980220Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7980310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7980310Z 
2025-01-09T18:24:10.7980520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.7980680Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.7981160Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.7981380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.7981510Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.7981620Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7981620Z 
2025-01-09T18:24:10.7981680Z     def initialize_transport_state(
2025-01-09T18:24:10.7981730Z         self,
2025-01-09T18:24:10.7981780Z         simulation_state,
2025-01-09T18:24:10.7981840Z         opacity_state,
2025-01-09T18:24:10.7981890Z         macro_atom_state,
2025-01-09T18:24:10.7981940Z         plasma,
2025-01-09T18:24:10.7981990Z         no_of_packets,
2025-01-09T18:24:10.7982050Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7982100Z         iteration=0,
2025-01-09T18:24:10.7982140Z     ):
2025-01-09T18:24:10.7982360Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7982450Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7982490Z         else:
2025-01-09T18:24:10.7982550Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7982590Z     
2025-01-09T18:24:10.7982690Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7982770Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7982810Z         )
2025-01-09T18:24:10.7982860Z     
2025-01-09T18:24:10.7982960Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7983040Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7983480Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7983490Z 
2025-01-09T18:24:10.7983670Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7984020Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] _
2025-01-09T18:24:10.7984030Z 
2025-01-09T18:24:10.7984550Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.7984830Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7984830Z 
2025-01-09T18:24:10.7985490Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7986140Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7986300Z         """
2025-01-09T18:24:10.7986540Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.7986680Z     
2025-01-09T18:24:10.7986850Z         Parameters:
2025-01-09T18:24:10.7987010Z         -----------
2025-01-09T18:24:10.7987320Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.7987620Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.7987760Z     
2025-01-09T18:24:10.7987920Z         Returns:
2025-01-09T18:24:10.7988070Z         --------
2025-01-09T18:24:10.7988250Z         A TARDIS simulation object.
2025-01-09T18:24:10.7988390Z         """
2025-01-09T18:24:10.7988640Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.7988890Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.7989480Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.7989750Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.7989880Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.7989960Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7990010Z >       sim = run_tardis(
2025-01-09T18:24:10.7990070Z             config_verysimple,
2025-01-09T18:24:10.7990380Z             atom_data=atomic_data,
2025-01-09T18:24:10.7990430Z         )
2025-01-09T18:24:10.7990430Z 
2025-01-09T18:24:10.7990550Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.7990640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7990710Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.7990780Z     simulation.run_convergence()
2025-01-09T18:24:10.7990870Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7990990Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7991070Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7991190Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7991280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7991290Z 
2025-01-09T18:24:10.7991500Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.7991670Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.7991840Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.7992060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.7992190Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.7992300Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7992300Z 
2025-01-09T18:24:10.7992370Z     def initialize_transport_state(
2025-01-09T18:24:10.7992520Z         self,
2025-01-09T18:24:10.7992570Z         simulation_state,
2025-01-09T18:24:10.7992630Z         opacity_state,
2025-01-09T18:24:10.7992680Z         macro_atom_state,
2025-01-09T18:24:10.7992730Z         plasma,
2025-01-09T18:24:10.7992780Z         no_of_packets,
2025-01-09T18:24:10.7992830Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7992890Z         iteration=0,
2025-01-09T18:24:10.7992930Z     ):
2025-01-09T18:24:10.7993030Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7993110Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7993160Z         else:
2025-01-09T18:24:10.7993220Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7993270Z     
2025-01-09T18:24:10.7993380Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.7993460Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.7993510Z         )
2025-01-09T18:24:10.7993560Z     
2025-01-09T18:24:10.7993660Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.7993740Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.7994170Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.7994190Z 
2025-01-09T18:24:10.7994280Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.7994490Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] _
2025-01-09T18:24:10.7994490Z 
2025-01-09T18:24:10.7995040Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.7995330Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.7995340Z 
2025-01-09T18:24:10.7995400Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.7995530Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.7995590Z         """
2025-01-09T18:24:10.7995670Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.7995810Z     
2025-01-09T18:24:10.7995860Z         Parameters:
2025-01-09T18:24:10.7995910Z         -----------
2025-01-09T18:24:10.7996020Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.7996130Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.7996180Z     
2025-01-09T18:24:10.7996230Z         Returns:
2025-01-09T18:24:10.7996280Z         --------
2025-01-09T18:24:10.7996340Z         A TARDIS simulation object.
2025-01-09T18:24:10.7996390Z         """
2025-01-09T18:24:10.7996480Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.7996570Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.7996690Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.7996830Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.7996930Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.7997020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.7997070Z >       sim = run_tardis(
2025-01-09T18:24:10.7997130Z             config_verysimple,
2025-01-09T18:24:10.7997190Z             atom_data=atomic_data,
2025-01-09T18:24:10.7997230Z         )
2025-01-09T18:24:10.7997240Z 
2025-01-09T18:24:10.7997340Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.7997440Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7997500Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.7997560Z     simulation.run_convergence()
2025-01-09T18:24:10.7997650Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.7997840Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.7997910Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.7998030Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.7998120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.7998130Z 
2025-01-09T18:24:10.7998330Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.7998500Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.7998670Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.7998890Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.7999010Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.7999130Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.7999130Z 
2025-01-09T18:24:10.7999200Z     def initialize_transport_state(
2025-01-09T18:24:10.7999240Z         self,
2025-01-09T18:24:10.7999300Z         simulation_state,
2025-01-09T18:24:10.7999350Z         opacity_state,
2025-01-09T18:24:10.7999400Z         macro_atom_state,
2025-01-09T18:24:10.7999450Z         plasma,
2025-01-09T18:24:10.7999510Z         no_of_packets,
2025-01-09T18:24:10.7999560Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.7999610Z         iteration=0,
2025-01-09T18:24:10.7999660Z     ):
2025-01-09T18:24:10.7999750Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.7999830Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.7999880Z         else:
2025-01-09T18:24:10.7999930Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.7999980Z     
2025-01-09T18:24:10.8000080Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8000160Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8000210Z         )
2025-01-09T18:24:10.8000250Z     
2025-01-09T18:24:10.8000350Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8000430Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8000810Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8000870Z 
2025-01-09T18:24:10.8000960Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8001180Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] _
2025-01-09T18:24:10.8001180Z 
2025-01-09T18:24:10.8001700Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8001990Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8001990Z 
2025-01-09T18:24:10.8002060Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8002170Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8002220Z         """
2025-01-09T18:24:10.8002310Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8002350Z     
2025-01-09T18:24:10.8002400Z         Parameters:
2025-01-09T18:24:10.8002450Z         -----------
2025-01-09T18:24:10.8002560Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8002670Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8002720Z     
2025-01-09T18:24:10.8002770Z         Returns:
2025-01-09T18:24:10.8002810Z         --------
2025-01-09T18:24:10.8002880Z         A TARDIS simulation object.
2025-01-09T18:24:10.8003340Z         """
2025-01-09T18:24:10.8003440Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8003530Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8003640Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8003780Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8003890Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8003970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8004020Z >       sim = run_tardis(
2025-01-09T18:24:10.8004080Z             config_verysimple,
2025-01-09T18:24:10.8004130Z             atom_data=atomic_data,
2025-01-09T18:24:10.8004180Z         )
2025-01-09T18:24:10.8004180Z 
2025-01-09T18:24:10.8004290Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8004380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8004450Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8004510Z     simulation.run_convergence()
2025-01-09T18:24:10.8004600Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8004710Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8004780Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8004900Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8005000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8005000Z 
2025-01-09T18:24:10.8005210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8005370Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8005540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8005750Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8005880Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8006000Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8006010Z 
2025-01-09T18:24:10.8006080Z     def initialize_transport_state(
2025-01-09T18:24:10.8006120Z         self,
2025-01-09T18:24:10.8006480Z         simulation_state,
2025-01-09T18:24:10.8006530Z         opacity_state,
2025-01-09T18:24:10.8006590Z         macro_atom_state,
2025-01-09T18:24:10.8006630Z         plasma,
2025-01-09T18:24:10.8006680Z         no_of_packets,
2025-01-09T18:24:10.8006740Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8006800Z         iteration=0,
2025-01-09T18:24:10.8006840Z     ):
2025-01-09T18:24:10.8006940Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8007020Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8007060Z         else:
2025-01-09T18:24:10.8007120Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8007170Z     
2025-01-09T18:24:10.8007280Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8007350Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8007400Z         )
2025-01-09T18:24:10.8007440Z     
2025-01-09T18:24:10.8007550Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8007620Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8008010Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8008010Z 
2025-01-09T18:24:10.8008100Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8008480Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] _
2025-01-09T18:24:10.8008480Z 
2025-01-09T18:24:10.8009030Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8009590Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8009600Z 
2025-01-09T18:24:10.8009670Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8009770Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8009830Z         """
2025-01-09T18:24:10.8009910Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8010040Z     
2025-01-09T18:24:10.8010100Z         Parameters:
2025-01-09T18:24:10.8010140Z         -----------
2025-01-09T18:24:10.8010250Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8010370Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8010420Z     
2025-01-09T18:24:10.8010460Z         Returns:
2025-01-09T18:24:10.8010510Z         --------
2025-01-09T18:24:10.8010570Z         A TARDIS simulation object.
2025-01-09T18:24:10.8010700Z         """
2025-01-09T18:24:10.8010790Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8010890Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8011010Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8011170Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8011360Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8011440Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8011490Z >       sim = run_tardis(
2025-01-09T18:24:10.8011550Z             config_verysimple,
2025-01-09T18:24:10.8011610Z             atom_data=atomic_data,
2025-01-09T18:24:10.8011660Z         )
2025-01-09T18:24:10.8011660Z 
2025-01-09T18:24:10.8011770Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8011860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8012010Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8012080Z     simulation.run_convergence()
2025-01-09T18:24:10.8012170Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8012380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8012450Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8012570Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8012750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8012750Z 
2025-01-09T18:24:10.8012960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8013110Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8013380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8013610Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8013730Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8013840Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8013840Z 
2025-01-09T18:24:10.8014000Z     def initialize_transport_state(
2025-01-09T18:24:10.8014040Z         self,
2025-01-09T18:24:10.8014100Z         simulation_state,
2025-01-09T18:24:10.8014150Z         opacity_state,
2025-01-09T18:24:10.8014210Z         macro_atom_state,
2025-01-09T18:24:10.8019400Z         plasma,
2025-01-09T18:24:10.8019500Z         no_of_packets,
2025-01-09T18:24:10.8019560Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8019610Z         iteration=0,
2025-01-09T18:24:10.8019660Z     ):
2025-01-09T18:24:10.8019840Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8021700Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8021760Z         else:
2025-01-09T18:24:10.8021900Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8021950Z     
2025-01-09T18:24:10.8022060Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8022130Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8022180Z         )
2025-01-09T18:24:10.8022230Z     
2025-01-09T18:24:10.8022340Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8022420Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8022880Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8022890Z 
2025-01-09T18:24:10.8023000Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8023220Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] _
2025-01-09T18:24:10.8023240Z 
2025-01-09T18:24:10.8023940Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8024240Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8024240Z 
2025-01-09T18:24:10.8024310Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8024420Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8024470Z         """
2025-01-09T18:24:10.8024560Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8024600Z     
2025-01-09T18:24:10.8025060Z         Parameters:
2025-01-09T18:24:10.8025120Z         -----------
2025-01-09T18:24:10.8025230Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8025480Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8025520Z     
2025-01-09T18:24:10.8025570Z         Returns:
2025-01-09T18:24:10.8025610Z         --------
2025-01-09T18:24:10.8025680Z         A TARDIS simulation object.
2025-01-09T18:24:10.8025840Z         """
2025-01-09T18:24:10.8025940Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8026030Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8026140Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8026270Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8026390Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8026530Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8026590Z >       sim = run_tardis(
2025-01-09T18:24:10.8026650Z             config_verysimple,
2025-01-09T18:24:10.8026720Z             atom_data=atomic_data,
2025-01-09T18:24:10.8026930Z         )
2025-01-09T18:24:10.8026940Z 
2025-01-09T18:24:10.8027050Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8027140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8027200Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8027270Z     simulation.run_convergence()
2025-01-09T18:24:10.8027360Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8027470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8027540Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8027660Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8027760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8027760Z 
2025-01-09T18:24:10.8027970Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8028340Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8028520Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8028740Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8028870Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8028970Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8028980Z 
2025-01-09T18:24:10.8029040Z     def initialize_transport_state(
2025-01-09T18:24:10.8029090Z         self,
2025-01-09T18:24:10.8029620Z         simulation_state,
2025-01-09T18:24:10.8029690Z         opacity_state,
2025-01-09T18:24:10.8029740Z         macro_atom_state,
2025-01-09T18:24:10.8029790Z         plasma,
2025-01-09T18:24:10.8029840Z         no_of_packets,
2025-01-09T18:24:10.8029900Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8029950Z         iteration=0,
2025-01-09T18:24:10.8030000Z     ):
2025-01-09T18:24:10.8030090Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8030170Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8030220Z         else:
2025-01-09T18:24:10.8030270Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8030320Z     
2025-01-09T18:24:10.8030430Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8030500Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8030550Z         )
2025-01-09T18:24:10.8030590Z     
2025-01-09T18:24:10.8030690Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8030770Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8031150Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8031160Z 
2025-01-09T18:24:10.8031250Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8031460Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] _
2025-01-09T18:24:10.8031460Z 
2025-01-09T18:24:10.8031980Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8032340Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8032340Z 
2025-01-09T18:24:10.8032410Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8032520Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8032560Z         """
2025-01-09T18:24:10.8032660Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8032700Z     
2025-01-09T18:24:10.8032750Z         Parameters:
2025-01-09T18:24:10.8032800Z         -----------
2025-01-09T18:24:10.8032910Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8033020Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8033060Z     
2025-01-09T18:24:10.8033110Z         Returns:
2025-01-09T18:24:10.8033160Z         --------
2025-01-09T18:24:10.8033220Z         A TARDIS simulation object.
2025-01-09T18:24:10.8033270Z         """
2025-01-09T18:24:10.8033360Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8033450Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8033560Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8033690Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8033800Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8033870Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8034130Z >       sim = run_tardis(
2025-01-09T18:24:10.8034180Z             config_verysimple,
2025-01-09T18:24:10.8034240Z             atom_data=atomic_data,
2025-01-09T18:24:10.8034290Z         )
2025-01-09T18:24:10.8034290Z 
2025-01-09T18:24:10.8034400Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8034490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8034550Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8034620Z     simulation.run_convergence()
2025-01-09T18:24:10.8034710Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8034820Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8034880Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8035010Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8035100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8035110Z 
2025-01-09T18:24:10.8035310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8035470Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8035640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8035860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8035980Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8036100Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8036100Z 
2025-01-09T18:24:10.8036160Z     def initialize_transport_state(
2025-01-09T18:24:10.8036210Z         self,
2025-01-09T18:24:10.8036260Z         simulation_state,
2025-01-09T18:24:10.8036310Z         opacity_state,
2025-01-09T18:24:10.8036370Z         macro_atom_state,
2025-01-09T18:24:10.8036420Z         plasma,
2025-01-09T18:24:10.8036460Z         no_of_packets,
2025-01-09T18:24:10.8036530Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8036580Z         iteration=0,
2025-01-09T18:24:10.8036620Z     ):
2025-01-09T18:24:10.8036720Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8036790Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8037280Z         else:
2025-01-09T18:24:10.8037340Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8037390Z     
2025-01-09T18:24:10.8037490Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8037570Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8037610Z         )
2025-01-09T18:24:10.8037660Z     
2025-01-09T18:24:10.8037760Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8037830Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8038210Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8038220Z 
2025-01-09T18:24:10.8038310Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8038530Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] _
2025-01-09T18:24:10.8038530Z 
2025-01-09T18:24:10.8039050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8039330Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8039330Z 
2025-01-09T18:24:10.8039390Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8039510Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8039620Z         """
2025-01-09T18:24:10.8039710Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8039750Z     
2025-01-09T18:24:10.8039800Z         Parameters:
2025-01-09T18:24:10.8039850Z         -----------
2025-01-09T18:24:10.8039950Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8040070Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8040120Z     
2025-01-09T18:24:10.8040170Z         Returns:
2025-01-09T18:24:10.8040210Z         --------
2025-01-09T18:24:10.8040270Z         A TARDIS simulation object.
2025-01-09T18:24:10.8040320Z         """
2025-01-09T18:24:10.8040410Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8040500Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8040610Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8040750Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8040860Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8040930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8040980Z >       sim = run_tardis(
2025-01-09T18:24:10.8041040Z             config_verysimple,
2025-01-09T18:24:10.8041100Z             atom_data=atomic_data,
2025-01-09T18:24:10.8041150Z         )
2025-01-09T18:24:10.8041150Z 
2025-01-09T18:24:10.8041250Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8041350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8041400Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8041470Z     simulation.run_convergence()
2025-01-09T18:24:10.8041840Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8041960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8042030Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8042160Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8042250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8042250Z 
2025-01-09T18:24:10.8042480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8042780Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8042980Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8043310Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8043440Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8043550Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8043550Z 
2025-01-09T18:24:10.8043610Z     def initialize_transport_state(
2025-01-09T18:24:10.8043660Z         self,
2025-01-09T18:24:10.8043720Z         simulation_state,
2025-01-09T18:24:10.8043850Z         opacity_state,
2025-01-09T18:24:10.8043910Z         macro_atom_state,
2025-01-09T18:24:10.8043960Z         plasma,
2025-01-09T18:24:10.8044020Z         no_of_packets,
2025-01-09T18:24:10.8044070Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8044130Z         iteration=0,
2025-01-09T18:24:10.8044180Z     ):
2025-01-09T18:24:10.8044280Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8044350Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8044390Z         else:
2025-01-09T18:24:10.8044450Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8044490Z     
2025-01-09T18:24:10.8044690Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8044760Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8044810Z         )
2025-01-09T18:24:10.8044860Z     
2025-01-09T18:24:10.8044960Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8045160Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8045650Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8045660Z 
2025-01-09T18:24:10.8045750Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8045970Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] _
2025-01-09T18:24:10.8045980Z 
2025-01-09T18:24:10.8046610Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8046980Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8046990Z 
2025-01-09T18:24:10.8047050Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8047160Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8047220Z         """
2025-01-09T18:24:10.8047320Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8047360Z     
2025-01-09T18:24:10.8047500Z         Parameters:
2025-01-09T18:24:10.8047610Z         -----------
2025-01-09T18:24:10.8047710Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8047830Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8047880Z     
2025-01-09T18:24:10.8047930Z         Returns:
2025-01-09T18:24:10.8047970Z         --------
2025-01-09T18:24:10.8048040Z         A TARDIS simulation object.
2025-01-09T18:24:10.8048160Z         """
2025-01-09T18:24:10.8048250Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8048350Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8048450Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8048610Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8048810Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8048890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8049010Z >       sim = run_tardis(
2025-01-09T18:24:10.8049070Z             config_verysimple,
2025-01-09T18:24:10.8049130Z             atom_data=atomic_data,
2025-01-09T18:24:10.8049180Z         )
2025-01-09T18:24:10.8049180Z 
2025-01-09T18:24:10.8049290Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8049460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8049530Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8049590Z     simulation.run_convergence()
2025-01-09T18:24:10.8049670Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8049790Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8049860Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8049970Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8050070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8050070Z 
2025-01-09T18:24:10.8050270Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8050430Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8050600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8050830Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8050950Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8051060Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8051110Z 
2025-01-09T18:24:10.8051190Z     def initialize_transport_state(
2025-01-09T18:24:10.8051230Z         self,
2025-01-09T18:24:10.8051290Z         simulation_state,
2025-01-09T18:24:10.8051340Z         opacity_state,
2025-01-09T18:24:10.8051390Z         macro_atom_state,
2025-01-09T18:24:10.8051440Z         plasma,
2025-01-09T18:24:10.8051490Z         no_of_packets,
2025-01-09T18:24:10.8051550Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8051680Z         iteration=0,
2025-01-09T18:24:10.8051730Z     ):
2025-01-09T18:24:10.8051830Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8051900Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8051940Z         else:
2025-01-09T18:24:10.8052000Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8052040Z     
2025-01-09T18:24:10.8052150Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8052250Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8052310Z         )
2025-01-09T18:24:10.8052350Z     
2025-01-09T18:24:10.8052540Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8052610Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8053010Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8053020Z 
2025-01-09T18:24:10.8053200Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8053440Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] _
2025-01-09T18:24:10.8053440Z 
2025-01-09T18:24:10.8054050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8054330Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8054340Z 
2025-01-09T18:24:10.8054400Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8054510Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8054700Z         """
2025-01-09T18:24:10.8054790Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8054840Z     
2025-01-09T18:24:10.8054890Z         Parameters:
2025-01-09T18:24:10.8054940Z         -----------
2025-01-09T18:24:10.8055050Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8055270Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8055320Z     
2025-01-09T18:24:10.8055370Z         Returns:
2025-01-09T18:24:10.8055410Z         --------
2025-01-09T18:24:10.8055470Z         A TARDIS simulation object.
2025-01-09T18:24:10.8055520Z         """
2025-01-09T18:24:10.8055610Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8055700Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8055880Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8056030Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8056140Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8056210Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8056270Z >       sim = run_tardis(
2025-01-09T18:24:10.8056320Z             config_verysimple,
2025-01-09T18:24:10.8056380Z             atom_data=atomic_data,
2025-01-09T18:24:10.8056430Z         )
2025-01-09T18:24:10.8056430Z 
2025-01-09T18:24:10.8056530Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8056620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8056770Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8057050Z     simulation.run_convergence()
2025-01-09T18:24:10.8057140Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8057250Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8057460Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8057590Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8057690Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8057690Z 
2025-01-09T18:24:10.8057980Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8058140Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8058320Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8058810Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8058990Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8059110Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8059120Z 
2025-01-09T18:24:10.8059190Z     def initialize_transport_state(
2025-01-09T18:24:10.8059240Z         self,
2025-01-09T18:24:10.8059290Z         simulation_state,
2025-01-09T18:24:10.8059350Z         opacity_state,
2025-01-09T18:24:10.8059410Z         macro_atom_state,
2025-01-09T18:24:10.8059460Z         plasma,
2025-01-09T18:24:10.8059510Z         no_of_packets,
2025-01-09T18:24:10.8059570Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8059620Z         iteration=0,
2025-01-09T18:24:10.8059670Z     ):
2025-01-09T18:24:10.8059770Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8059900Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8059950Z         else:
2025-01-09T18:24:10.8060010Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8060050Z     
2025-01-09T18:24:10.8060170Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8060240Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8060290Z         )
2025-01-09T18:24:10.8060340Z     
2025-01-09T18:24:10.8060440Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8060520Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8061220Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8061230Z 
2025-01-09T18:24:10.8061320Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8061560Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] _
2025-01-09T18:24:10.8061570Z 
2025-01-09T18:24:10.8062170Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8062460Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8062460Z 
2025-01-09T18:24:10.8062530Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8062650Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8062690Z         """
2025-01-09T18:24:10.8064390Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8064630Z     
2025-01-09T18:24:10.8064800Z         Parameters:
2025-01-09T18:24:10.8064960Z         -----------
2025-01-09T18:24:10.8065270Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8065670Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8065820Z     
2025-01-09T18:24:10.8065970Z         Returns:
2025-01-09T18:24:10.8066630Z         --------
2025-01-09T18:24:10.8066810Z         A TARDIS simulation object.
2025-01-09T18:24:10.8066960Z         """
2025-01-09T18:24:10.8067200Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8067460Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8067760Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8068170Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8068470Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8068670Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8068860Z >       sim = run_tardis(
2025-01-09T18:24:10.8069040Z             config_verysimple,
2025-01-09T18:24:10.8069220Z             atom_data=atomic_data,
2025-01-09T18:24:10.8069360Z         )
2025-01-09T18:24:10.8069370Z 
2025-01-09T18:24:10.8069670Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8069940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8070150Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8070330Z     simulation.run_convergence()
2025-01-09T18:24:10.8070590Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8070890Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8071100Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8071440Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8071670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8071680Z 
2025-01-09T18:24:10.8072240Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8072650Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8073110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8073690Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8074040Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8074340Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8074610Z 
2025-01-09T18:24:10.8074800Z     def initialize_transport_state(
2025-01-09T18:24:10.8074960Z         self,
2025-01-09T18:24:10.8075120Z         simulation_state,
2025-01-09T18:24:10.8076030Z         opacity_state,
2025-01-09T18:24:10.8076210Z         macro_atom_state,
2025-01-09T18:24:10.8076370Z         plasma,
2025-01-09T18:24:10.8076520Z         no_of_packets,
2025-01-09T18:24:10.8076700Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8076880Z         iteration=0,
2025-01-09T18:24:10.8077030Z     ):
2025-01-09T18:24:10.8077300Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8077510Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8077660Z         else:
2025-01-09T18:24:10.8077840Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8077980Z     
2025-01-09T18:24:10.8078300Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8078500Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8078660Z         )
2025-01-09T18:24:10.8078810Z     
2025-01-09T18:24:10.8079080Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8079310Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8080350Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8080360Z 
2025-01-09T18:24:10.8080620Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8081190Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] _
2025-01-09T18:24:10.8081550Z 
2025-01-09T18:24:10.8083040Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8083800Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8083820Z 
2025-01-09T18:24:10.8084000Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8084330Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8084490Z         """
2025-01-09T18:24:10.8084730Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8084870Z     
2025-01-09T18:24:10.8085030Z         Parameters:
2025-01-09T18:24:10.8085180Z         -----------
2025-01-09T18:24:10.8085470Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8085780Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8085930Z     
2025-01-09T18:24:10.8086080Z         Returns:
2025-01-09T18:24:10.8086240Z         --------
2025-01-09T18:24:10.8086420Z         A TARDIS simulation object.
2025-01-09T18:24:10.8086560Z         """
2025-01-09T18:24:10.8086800Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8087070Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8087350Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8087720Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8088020Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8088220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8088380Z >       sim = run_tardis(
2025-01-09T18:24:10.8088550Z             config_verysimple,
2025-01-09T18:24:10.8088720Z             atom_data=atomic_data,
2025-01-09T18:24:10.8089010Z         )
2025-01-09T18:24:10.8089020Z 
2025-01-09T18:24:10.8089320Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8089570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8089850Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8090060Z     simulation.run_convergence()
2025-01-09T18:24:10.8090600Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8090910Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8091100Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8091440Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8091670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8091680Z 
2025-01-09T18:24:10.8092330Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8092750Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8093220Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8094600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8094950Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8095260Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8095270Z 
2025-01-09T18:24:10.8095450Z     def initialize_transport_state(
2025-01-09T18:24:10.8095600Z         self,
2025-01-09T18:24:10.8095760Z         simulation_state,
2025-01-09T18:24:10.8095930Z         opacity_state,
2025-01-09T18:24:10.8096080Z         macro_atom_state,
2025-01-09T18:24:10.8096240Z         plasma,
2025-01-09T18:24:10.8096390Z         no_of_packets,
2025-01-09T18:24:10.8096560Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8097040Z         iteration=0,
2025-01-09T18:24:10.8097600Z     ):
2025-01-09T18:24:10.8097730Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8097810Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8097860Z         else:
2025-01-09T18:24:10.8097920Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8097960Z     
2025-01-09T18:24:10.8098080Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8098170Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8098210Z         )
2025-01-09T18:24:10.8098260Z     
2025-01-09T18:24:10.8098370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8098450Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8098850Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8098850Z 
2025-01-09T18:24:10.8098950Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8099180Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] _
2025-01-09T18:24:10.8099180Z 
2025-01-09T18:24:10.8099740Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8100060Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8100070Z 
2025-01-09T18:24:10.8100130Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8100250Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8100300Z         """
2025-01-09T18:24:10.8100390Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8100440Z     
2025-01-09T18:24:10.8100490Z         Parameters:
2025-01-09T18:24:10.8100550Z         -----------
2025-01-09T18:24:10.8100660Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8100780Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8100820Z     
2025-01-09T18:24:10.8100870Z         Returns:
2025-01-09T18:24:10.8100920Z         --------
2025-01-09T18:24:10.8101090Z         A TARDIS simulation object.
2025-01-09T18:24:10.8101130Z         """
2025-01-09T18:24:10.8101220Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8101320Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8101430Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8101570Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8101680Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8101760Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8106440Z >       sim = run_tardis(
2025-01-09T18:24:10.8106560Z             config_verysimple,
2025-01-09T18:24:10.8106620Z             atom_data=atomic_data,
2025-01-09T18:24:10.8106660Z         )
2025-01-09T18:24:10.8106670Z 
2025-01-09T18:24:10.8106780Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8106870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8106950Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8107010Z     simulation.run_convergence()
2025-01-09T18:24:10.8107110Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8107220Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8107290Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8107430Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8107530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8108110Z 
2025-01-09T18:24:10.8108340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8108510Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8108680Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8108900Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8109030Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8109140Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8109140Z 
2025-01-09T18:24:10.8109220Z     def initialize_transport_state(
2025-01-09T18:24:10.8109270Z         self,
2025-01-09T18:24:10.8109350Z         simulation_state,
2025-01-09T18:24:10.8109400Z         opacity_state,
2025-01-09T18:24:10.8109450Z         macro_atom_state,
2025-01-09T18:24:10.8109500Z         plasma,
2025-01-09T18:24:10.8109570Z         no_of_packets,
2025-01-09T18:24:10.8109650Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8109730Z         iteration=0,
2025-01-09T18:24:10.8109780Z     ):
2025-01-09T18:24:10.8109880Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8109970Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8110030Z         else:
2025-01-09T18:24:10.8110090Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8110130Z     
2025-01-09T18:24:10.8110250Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8110330Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8110380Z         )
2025-01-09T18:24:10.8110430Z     
2025-01-09T18:24:10.8110530Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8110620Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8111010Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8111020Z 
2025-01-09T18:24:10.8111130Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8111350Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] _
2025-01-09T18:24:10.8111350Z 
2025-01-09T18:24:10.8112160Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8112440Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8112450Z 
2025-01-09T18:24:10.8112530Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8112650Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8112700Z         """
2025-01-09T18:24:10.8112800Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8112840Z     
2025-01-09T18:24:10.8112900Z         Parameters:
2025-01-09T18:24:10.8112950Z         -----------
2025-01-09T18:24:10.8113060Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8113170Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8113220Z     
2025-01-09T18:24:10.8113270Z         Returns:
2025-01-09T18:24:10.8113320Z         --------
2025-01-09T18:24:10.8113380Z         A TARDIS simulation object.
2025-01-09T18:24:10.8113430Z         """
2025-01-09T18:24:10.8113520Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8113620Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8113730Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8113870Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8114070Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8114140Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8114210Z >       sim = run_tardis(
2025-01-09T18:24:10.8114270Z             config_verysimple,
2025-01-09T18:24:10.8114330Z             atom_data=atomic_data,
2025-01-09T18:24:10.8114380Z         )
2025-01-09T18:24:10.8114380Z 
2025-01-09T18:24:10.8114490Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8114580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8114660Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8114730Z     simulation.run_convergence()
2025-01-09T18:24:10.8114820Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8114930Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8115000Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8115120Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8115210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8115220Z 
2025-01-09T18:24:10.8115420Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8115580Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8115760Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8115970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8116100Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8116210Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8116210Z 
2025-01-09T18:24:10.8116270Z     def initialize_transport_state(
2025-01-09T18:24:10.8116320Z         self,
2025-01-09T18:24:10.8116370Z         simulation_state,
2025-01-09T18:24:10.8116420Z         opacity_state,
2025-01-09T18:24:10.8116480Z         macro_atom_state,
2025-01-09T18:24:10.8116530Z         plasma,
2025-01-09T18:24:10.8116580Z         no_of_packets,
2025-01-09T18:24:10.8116640Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8116690Z         iteration=0,
2025-01-09T18:24:10.8116740Z     ):
2025-01-09T18:24:10.8116950Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8117030Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8117080Z         else:
2025-01-09T18:24:10.8117140Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8117180Z     
2025-01-09T18:24:10.8117300Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8117370Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8117420Z         )
2025-01-09T18:24:10.8117460Z     
2025-01-09T18:24:10.8117560Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8117640Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8118020Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8118030Z 
2025-01-09T18:24:10.8118120Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8118320Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] _
2025-01-09T18:24:10.8118330Z 
2025-01-09T18:24:10.8118860Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8119140Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8119140Z 
2025-01-09T18:24:10.8119210Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8119390Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8119440Z         """
2025-01-09T18:24:10.8119530Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8119570Z     
2025-01-09T18:24:10.8119620Z         Parameters:
2025-01-09T18:24:10.8119680Z         -----------
2025-01-09T18:24:10.8119790Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8119900Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8119950Z     
2025-01-09T18:24:10.8120000Z         Returns:
2025-01-09T18:24:10.8120050Z         --------
2025-01-09T18:24:10.8120110Z         A TARDIS simulation object.
2025-01-09T18:24:10.8120160Z         """
2025-01-09T18:24:10.8120240Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8120350Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8120450Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8120600Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8120700Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8120780Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8120830Z >       sim = run_tardis(
2025-01-09T18:24:10.8120890Z             config_verysimple,
2025-01-09T18:24:10.8120950Z             atom_data=atomic_data,
2025-01-09T18:24:10.8121000Z         )
2025-01-09T18:24:10.8121000Z 
2025-01-09T18:24:10.8121100Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8121190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8121250Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8121310Z     simulation.run_convergence()
2025-01-09T18:24:10.8121400Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8121510Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8121580Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8121700Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8121790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8121800Z 
2025-01-09T18:24:10.8122000Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8122230Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8122410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8122620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8122750Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8122860Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8122860Z 
2025-01-09T18:24:10.8122940Z     def initialize_transport_state(
2025-01-09T18:24:10.8122980Z         self,
2025-01-09T18:24:10.8123040Z         simulation_state,
2025-01-09T18:24:10.8123090Z         opacity_state,
2025-01-09T18:24:10.8123140Z         macro_atom_state,
2025-01-09T18:24:10.8123190Z         plasma,
2025-01-09T18:24:10.8123250Z         no_of_packets,
2025-01-09T18:24:10.8123310Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8123360Z         iteration=0,
2025-01-09T18:24:10.8123400Z     ):
2025-01-09T18:24:10.8123500Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8123580Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8123620Z         else:
2025-01-09T18:24:10.8123690Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8123730Z     
2025-01-09T18:24:10.8123840Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8123910Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8123960Z         )
2025-01-09T18:24:10.8124060Z     
2025-01-09T18:24:10.8124160Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8124240Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8124620Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8124630Z 
2025-01-09T18:24:10.8124720Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8124940Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] _
2025-01-09T18:24:10.8124940Z 
2025-01-09T18:24:10.8125460Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8125730Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8125740Z 
2025-01-09T18:24:10.8125800Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8125920Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8125960Z         """
2025-01-09T18:24:10.8126050Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8126100Z     
2025-01-09T18:24:10.8126150Z         Parameters:
2025-01-09T18:24:10.8126200Z         -----------
2025-01-09T18:24:10.8126310Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8126420Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8126470Z     
2025-01-09T18:24:10.8126520Z         Returns:
2025-01-09T18:24:10.8126560Z         --------
2025-01-09T18:24:10.8126620Z         A TARDIS simulation object.
2025-01-09T18:24:10.8126670Z         """
2025-01-09T18:24:10.8126750Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8126860Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8126960Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8127110Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8127220Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8127340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8127400Z >       sim = run_tardis(
2025-01-09T18:24:10.8127450Z             config_verysimple,
2025-01-09T18:24:10.8127510Z             atom_data=atomic_data,
2025-01-09T18:24:10.8127560Z         )
2025-01-09T18:24:10.8127560Z 
2025-01-09T18:24:10.8127670Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8127760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8127820Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8127880Z     simulation.run_convergence()
2025-01-09T18:24:10.8127970Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8128080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8128150Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8128280Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8128370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8128380Z 
2025-01-09T18:24:10.8128580Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8128740Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8128910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8129130Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8129250Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8129840Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8129850Z 
2025-01-09T18:24:10.8129920Z     def initialize_transport_state(
2025-01-09T18:24:10.8129960Z         self,
2025-01-09T18:24:10.8130020Z         simulation_state,
2025-01-09T18:24:10.8130070Z         opacity_state,
2025-01-09T18:24:10.8130120Z         macro_atom_state,
2025-01-09T18:24:10.8130180Z         plasma,
2025-01-09T18:24:10.8130230Z         no_of_packets,
2025-01-09T18:24:10.8130310Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8130360Z         iteration=0,
2025-01-09T18:24:10.8130410Z     ):
2025-01-09T18:24:10.8130500Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8130580Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8130630Z         else:
2025-01-09T18:24:10.8130690Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8130730Z     
2025-01-09T18:24:10.8130840Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8130920Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8130960Z         )
2025-01-09T18:24:10.8131000Z     
2025-01-09T18:24:10.8131100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8131180Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8131570Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8131570Z 
2025-01-09T18:24:10.8131660Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8131870Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] _
2025-01-09T18:24:10.8131880Z 
2025-01-09T18:24:10.8132420Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8132710Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8132710Z 
2025-01-09T18:24:10.8132780Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8133180Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8133230Z         """
2025-01-09T18:24:10.8133320Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8133360Z     
2025-01-09T18:24:10.8133420Z         Parameters:
2025-01-09T18:24:10.8133460Z         -----------
2025-01-09T18:24:10.8133570Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8133690Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8133740Z     
2025-01-09T18:24:10.8133780Z         Returns:
2025-01-09T18:24:10.8133830Z         --------
2025-01-09T18:24:10.8133890Z         A TARDIS simulation object.
2025-01-09T18:24:10.8133950Z         """
2025-01-09T18:24:10.8134040Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8134130Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8134240Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8134380Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8134490Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8134560Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8134610Z >       sim = run_tardis(
2025-01-09T18:24:10.8134670Z             config_verysimple,
2025-01-09T18:24:10.8134730Z             atom_data=atomic_data,
2025-01-09T18:24:10.8134780Z         )
2025-01-09T18:24:10.8134780Z 
2025-01-09T18:24:10.8134890Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8134980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8135180Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8135240Z     simulation.run_convergence()
2025-01-09T18:24:10.8135320Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8135440Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8135510Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8135640Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8135720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8135730Z 
2025-01-09T18:24:10.8135930Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8136090Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8136260Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8136490Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8136610Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8136720Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8136720Z 
2025-01-09T18:24:10.8136790Z     def initialize_transport_state(
2025-01-09T18:24:10.8136840Z         self,
2025-01-09T18:24:10.8136890Z         simulation_state,
2025-01-09T18:24:10.8136940Z         opacity_state,
2025-01-09T18:24:10.8136990Z         macro_atom_state,
2025-01-09T18:24:10.8137040Z         plasma,
2025-01-09T18:24:10.8137090Z         no_of_packets,
2025-01-09T18:24:10.8137150Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8137200Z         iteration=0,
2025-01-09T18:24:10.8137240Z     ):
2025-01-09T18:24:10.8137340Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8137410Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8137460Z         else:
2025-01-09T18:24:10.8137520Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8137560Z     
2025-01-09T18:24:10.8137670Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8137740Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8137780Z         )
2025-01-09T18:24:10.8137830Z     
2025-01-09T18:24:10.8137990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8138070Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8138450Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8138450Z 
2025-01-09T18:24:10.8138540Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8138740Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] _
2025-01-09T18:24:10.8138750Z 
2025-01-09T18:24:10.8139270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8139580Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8139590Z 
2025-01-09T18:24:10.8139650Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8139770Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8139810Z         """
2025-01-09T18:24:10.8139910Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8139950Z     
2025-01-09T18:24:10.8140010Z         Parameters:
2025-01-09T18:24:10.8140050Z         -----------
2025-01-09T18:24:10.8140160Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8140270Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8140420Z     
2025-01-09T18:24:10.8140470Z         Returns:
2025-01-09T18:24:10.8140510Z         --------
2025-01-09T18:24:10.8140570Z         A TARDIS simulation object.
2025-01-09T18:24:10.8140620Z         """
2025-01-09T18:24:10.8140710Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8140810Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8140910Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8141050Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8141160Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8141230Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8141280Z >       sim = run_tardis(
2025-01-09T18:24:10.8141340Z             config_verysimple,
2025-01-09T18:24:10.8141400Z             atom_data=atomic_data,
2025-01-09T18:24:10.8141440Z         )
2025-01-09T18:24:10.8141450Z 
2025-01-09T18:24:10.8141550Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8141640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8141700Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8141770Z     simulation.run_convergence()
2025-01-09T18:24:10.8141850Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8141960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8142030Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8142150Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8142260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8142270Z 
2025-01-09T18:24:10.8142480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8142630Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8142810Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8143030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8143150Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8143350Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8143360Z 
2025-01-09T18:24:10.8143420Z     def initialize_transport_state(
2025-01-09T18:24:10.8143480Z         self,
2025-01-09T18:24:10.8143530Z         simulation_state,
2025-01-09T18:24:10.8143580Z         opacity_state,
2025-01-09T18:24:10.8143640Z         macro_atom_state,
2025-01-09T18:24:10.8143680Z         plasma,
2025-01-09T18:24:10.8143740Z         no_of_packets,
2025-01-09T18:24:10.8143800Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8143850Z         iteration=0,
2025-01-09T18:24:10.8143890Z     ):
2025-01-09T18:24:10.8144000Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8144070Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8144120Z         else:
2025-01-09T18:24:10.8144180Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8144220Z     
2025-01-09T18:24:10.8144330Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8144410Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8144450Z         )
2025-01-09T18:24:10.8144500Z     
2025-01-09T18:24:10.8144600Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8144680Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8145170Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8145180Z 
2025-01-09T18:24:10.8145270Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8145580Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] _
2025-01-09T18:24:10.8145580Z 
2025-01-09T18:24:10.8146100Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8146390Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8146390Z 
2025-01-09T18:24:10.8146460Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8146560Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8146610Z         """
2025-01-09T18:24:10.8146700Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8146740Z     
2025-01-09T18:24:10.8146790Z         Parameters:
2025-01-09T18:24:10.8146840Z         -----------
2025-01-09T18:24:10.8146950Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8147070Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8147110Z     
2025-01-09T18:24:10.8147160Z         Returns:
2025-01-09T18:24:10.8147210Z         --------
2025-01-09T18:24:10.8147270Z         A TARDIS simulation object.
2025-01-09T18:24:10.8147320Z         """
2025-01-09T18:24:10.8147400Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8147500Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8147600Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8147750Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8147850Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8147930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8147980Z >       sim = run_tardis(
2025-01-09T18:24:10.8148050Z             config_verysimple,
2025-01-09T18:24:10.8148100Z             atom_data=atomic_data,
2025-01-09T18:24:10.8148150Z         )
2025-01-09T18:24:10.8148150Z 
2025-01-09T18:24:10.8148260Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8148350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8148450Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8148540Z     simulation.run_convergence()
2025-01-09T18:24:10.8148640Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8148750Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8148830Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8148950Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8149040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8149050Z 
2025-01-09T18:24:10.8149260Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8149430Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8149600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8149820Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8149940Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8150050Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8150050Z 
2025-01-09T18:24:10.8150120Z     def initialize_transport_state(
2025-01-09T18:24:10.8150160Z         self,
2025-01-09T18:24:10.8150220Z         simulation_state,
2025-01-09T18:24:10.8150270Z         opacity_state,
2025-01-09T18:24:10.8150320Z         macro_atom_state,
2025-01-09T18:24:10.8150370Z         plasma,
2025-01-09T18:24:10.8150420Z         no_of_packets,
2025-01-09T18:24:10.8150480Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8150860Z         iteration=0,
2025-01-09T18:24:10.8150910Z     ):
2025-01-09T18:24:10.8151010Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8151080Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8151130Z         else:
2025-01-09T18:24:10.8151190Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8151230Z     
2025-01-09T18:24:10.8151340Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8151410Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8151460Z         )
2025-01-09T18:24:10.8151500Z     
2025-01-09T18:24:10.8151600Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8151680Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8152060Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8152070Z 
2025-01-09T18:24:10.8152160Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8152370Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] _
2025-01-09T18:24:10.8152380Z 
2025-01-09T18:24:10.8152890Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8153180Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8153180Z 
2025-01-09T18:24:10.8153240Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8153350Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8153400Z         """
2025-01-09T18:24:10.8153490Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8153540Z     
2025-01-09T18:24:10.8153590Z         Parameters:
2025-01-09T18:24:10.8153640Z         -----------
2025-01-09T18:24:10.8153750Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8153860Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8154380Z     
2025-01-09T18:24:10.8154430Z         Returns:
2025-01-09T18:24:10.8154490Z         --------
2025-01-09T18:24:10.8154540Z         A TARDIS simulation object.
2025-01-09T18:24:10.8154590Z         """
2025-01-09T18:24:10.8154680Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8154780Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8154890Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8155030Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8155130Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8155210Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8155260Z >       sim = run_tardis(
2025-01-09T18:24:10.8155320Z             config_verysimple,
2025-01-09T18:24:10.8155380Z             atom_data=atomic_data,
2025-01-09T18:24:10.8155430Z         )
2025-01-09T18:24:10.8155430Z 
2025-01-09T18:24:10.8155540Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8155630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8155700Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8155760Z     simulation.run_convergence()
2025-01-09T18:24:10.8155850Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8155950Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8156030Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8156140Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8156240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8156310Z 
2025-01-09T18:24:10.8156510Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8156680Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8156860Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8157070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8157200Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8157310Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8157310Z 
2025-01-09T18:24:10.8157380Z     def initialize_transport_state(
2025-01-09T18:24:10.8157420Z         self,
2025-01-09T18:24:10.8157480Z         simulation_state,
2025-01-09T18:24:10.8157530Z         opacity_state,
2025-01-09T18:24:10.8157590Z         macro_atom_state,
2025-01-09T18:24:10.8157640Z         plasma,
2025-01-09T18:24:10.8157690Z         no_of_packets,
2025-01-09T18:24:10.8157750Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8157800Z         iteration=0,
2025-01-09T18:24:10.8157850Z     ):
2025-01-09T18:24:10.8157950Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8158020Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8158070Z         else:
2025-01-09T18:24:10.8158130Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8158170Z     
2025-01-09T18:24:10.8158280Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8158350Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8158400Z         )
2025-01-09T18:24:10.8158440Z     
2025-01-09T18:24:10.8158550Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8158640Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8159050Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8159060Z 
2025-01-09T18:24:10.8163210Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8163480Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] _
2025-01-09T18:24:10.8163810Z 
2025-01-09T18:24:10.8164350Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8164630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8164630Z 
2025-01-09T18:24:10.8164700Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8164820Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8164870Z         """
2025-01-09T18:24:10.8164960Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8165010Z     
2025-01-09T18:24:10.8165060Z         Parameters:
2025-01-09T18:24:10.8165110Z         -----------
2025-01-09T18:24:10.8165230Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8165350Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8165390Z     
2025-01-09T18:24:10.8165450Z         Returns:
2025-01-09T18:24:10.8165490Z         --------
2025-01-09T18:24:10.8165560Z         A TARDIS simulation object.
2025-01-09T18:24:10.8165610Z         """
2025-01-09T18:24:10.8165700Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8165790Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8165900Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8166180Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8166290Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8166370Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8166420Z >       sim = run_tardis(
2025-01-09T18:24:10.8166480Z             config_verysimple,
2025-01-09T18:24:10.8166540Z             atom_data=atomic_data,
2025-01-09T18:24:10.8166590Z         )
2025-01-09T18:24:10.8166600Z 
2025-01-09T18:24:10.8166700Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8166800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8166860Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8166930Z     simulation.run_convergence()
2025-01-09T18:24:10.8167020Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8167130Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8167200Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8167330Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8167410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8167420Z 
2025-01-09T18:24:10.8167630Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8167830Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8168000Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8168240Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8168370Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8168480Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8168480Z 
2025-01-09T18:24:10.8168540Z     def initialize_transport_state(
2025-01-09T18:24:10.8168600Z         self,
2025-01-09T18:24:10.8168650Z         simulation_state,
2025-01-09T18:24:10.8168710Z         opacity_state,
2025-01-09T18:24:10.8168760Z         macro_atom_state,
2025-01-09T18:24:10.8168810Z         plasma,
2025-01-09T18:24:10.8168850Z         no_of_packets,
2025-01-09T18:24:10.8168910Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8169060Z         iteration=0,
2025-01-09T18:24:10.8169100Z     ):
2025-01-09T18:24:10.8169220Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8169290Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8169350Z         else:
2025-01-09T18:24:10.8169400Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8169450Z     
2025-01-09T18:24:10.8169570Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8169650Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8169700Z         )
2025-01-09T18:24:10.8169760Z     
2025-01-09T18:24:10.8169870Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8169960Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8170350Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8170360Z 
2025-01-09T18:24:10.8170450Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8170680Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] _
2025-01-09T18:24:10.8170690Z 
2025-01-09T18:24:10.8171220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8171530Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8171620Z 
2025-01-09T18:24:10.8171690Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8172520Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8172590Z         """
2025-01-09T18:24:10.8172680Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8172730Z     
2025-01-09T18:24:10.8172780Z         Parameters:
2025-01-09T18:24:10.8172830Z         -----------
2025-01-09T18:24:10.8172940Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8173060Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8173100Z     
2025-01-09T18:24:10.8173150Z         Returns:
2025-01-09T18:24:10.8173210Z         --------
2025-01-09T18:24:10.8173300Z         A TARDIS simulation object.
2025-01-09T18:24:10.8173350Z         """
2025-01-09T18:24:10.8173450Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8173560Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8173670Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8173820Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8173960Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8174040Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8174100Z >       sim = run_tardis(
2025-01-09T18:24:10.8174150Z             config_verysimple,
2025-01-09T18:24:10.8174210Z             atom_data=atomic_data,
2025-01-09T18:24:10.8174250Z         )
2025-01-09T18:24:10.8174250Z 
2025-01-09T18:24:10.8174360Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8174450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8174520Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8174610Z     simulation.run_convergence()
2025-01-09T18:24:10.8174690Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8174810Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8174890Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8175030Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8175120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8175270Z 
2025-01-09T18:24:10.8175480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8175670Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8175880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8176100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8176220Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8176330Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8176340Z 
2025-01-09T18:24:10.8176400Z     def initialize_transport_state(
2025-01-09T18:24:10.8176450Z         self,
2025-01-09T18:24:10.8176500Z         simulation_state,
2025-01-09T18:24:10.8176550Z         opacity_state,
2025-01-09T18:24:10.8176600Z         macro_atom_state,
2025-01-09T18:24:10.8176660Z         plasma,
2025-01-09T18:24:10.8176720Z         no_of_packets,
2025-01-09T18:24:10.8176780Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8176830Z         iteration=0,
2025-01-09T18:24:10.8176880Z     ):
2025-01-09T18:24:10.8176980Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8177060Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8177110Z         else:
2025-01-09T18:24:10.8177160Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8177210Z     
2025-01-09T18:24:10.8177330Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8177410Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8177770Z         )
2025-01-09T18:24:10.8177820Z     
2025-01-09T18:24:10.8177930Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8178020Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8178420Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8178440Z 
2025-01-09T18:24:10.8178550Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8178770Z _ ERROR at setup of TestLIVPlotter.test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] _
2025-01-09T18:24:10.8178770Z 
2025-01-09T18:24:10.8179310Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8179600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8179600Z 
2025-01-09T18:24:10.8179660Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8179780Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8179820Z         """
2025-01-09T18:24:10.8179920Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8179960Z     
2025-01-09T18:24:10.8180010Z         Parameters:
2025-01-09T18:24:10.8180060Z         -----------
2025-01-09T18:24:10.8180160Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8180280Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8180330Z     
2025-01-09T18:24:10.8180380Z         Returns:
2025-01-09T18:24:10.8180450Z         --------
2025-01-09T18:24:10.8180510Z         A TARDIS simulation object.
2025-01-09T18:24:10.8180570Z         """
2025-01-09T18:24:10.8180670Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8180760Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8180870Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8181030Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8181430Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8181520Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8181570Z >       sim = run_tardis(
2025-01-09T18:24:10.8181620Z             config_verysimple,
2025-01-09T18:24:10.8181680Z             atom_data=atomic_data,
2025-01-09T18:24:10.8181730Z         )
2025-01-09T18:24:10.8181730Z 
2025-01-09T18:24:10.8181850Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8181950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8182020Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8182080Z     simulation.run_convergence()
2025-01-09T18:24:10.8182160Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8182280Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8182350Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8182470Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8182560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8182570Z 
2025-01-09T18:24:10.8182770Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8182940Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8183120Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8183340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8183550Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8183660Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8183670Z 
2025-01-09T18:24:10.8183730Z     def initialize_transport_state(
2025-01-09T18:24:10.8183780Z         self,
2025-01-09T18:24:10.8183830Z         simulation_state,
2025-01-09T18:24:10.8183890Z         opacity_state,
2025-01-09T18:24:10.8183940Z         macro_atom_state,
2025-01-09T18:24:10.8183990Z         plasma,
2025-01-09T18:24:10.8184040Z         no_of_packets,
2025-01-09T18:24:10.8184100Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8184150Z         iteration=0,
2025-01-09T18:24:10.8184190Z     ):
2025-01-09T18:24:10.8184290Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8184360Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8184400Z         else:
2025-01-09T18:24:10.8184460Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8184510Z     
2025-01-09T18:24:10.8184610Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8184700Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8184750Z         )
2025-01-09T18:24:10.8184790Z     
2025-01-09T18:24:10.8184890Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8184980Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8185360Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8185360Z 
2025-01-09T18:24:10.8185450Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8185630Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl0] _
2025-01-09T18:24:10.8185640Z 
2025-01-09T18:24:10.8186160Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8186440Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8186520Z 
2025-01-09T18:24:10.8186590Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8186700Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8186750Z         """
2025-01-09T18:24:10.8186830Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8186880Z     
2025-01-09T18:24:10.8186920Z         Parameters:
2025-01-09T18:24:10.8186980Z         -----------
2025-01-09T18:24:10.8187080Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8187190Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8187240Z     
2025-01-09T18:24:10.8187290Z         Returns:
2025-01-09T18:24:10.8187340Z         --------
2025-01-09T18:24:10.8187400Z         A TARDIS simulation object.
2025-01-09T18:24:10.8187450Z         """
2025-01-09T18:24:10.8187540Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8187630Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8187750Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8187890Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8188010Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8188090Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8188140Z >       sim = run_tardis(
2025-01-09T18:24:10.8188200Z             config_verysimple,
2025-01-09T18:24:10.8188250Z             atom_data=atomic_data,
2025-01-09T18:24:10.8188300Z         )
2025-01-09T18:24:10.8188300Z 
2025-01-09T18:24:10.8188410Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8188590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8188650Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8188720Z     simulation.run_convergence()
2025-01-09T18:24:10.8188800Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8188920Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8188990Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8189110Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8189200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8189200Z 
2025-01-09T18:24:10.8189400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8189580Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8189760Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8189980Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8190100Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8190210Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8190210Z 
2025-01-09T18:24:10.8190280Z     def initialize_transport_state(
2025-01-09T18:24:10.8190320Z         self,
2025-01-09T18:24:10.8190380Z         simulation_state,
2025-01-09T18:24:10.8190430Z         opacity_state,
2025-01-09T18:24:10.8190490Z         macro_atom_state,
2025-01-09T18:24:10.8190530Z         plasma,
2025-01-09T18:24:10.8190590Z         no_of_packets,
2025-01-09T18:24:10.8190650Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8190700Z         iteration=0,
2025-01-09T18:24:10.8190740Z     ):
2025-01-09T18:24:10.8190840Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8190910Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8190960Z         else:
2025-01-09T18:24:10.8191020Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8191060Z     
2025-01-09T18:24:10.8191170Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8191240Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8191370Z         )
2025-01-09T18:24:10.8191420Z     
2025-01-09T18:24:10.8191530Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8191600Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8191980Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8191990Z 
2025-01-09T18:24:10.8192080Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8192270Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl1] _
2025-01-09T18:24:10.8192280Z 
2025-01-09T18:24:10.8192800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8193090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8193090Z 
2025-01-09T18:24:10.8193160Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8193260Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8193310Z         """
2025-01-09T18:24:10.8193400Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8193450Z     
2025-01-09T18:24:10.8193490Z         Parameters:
2025-01-09T18:24:10.8193540Z         -----------
2025-01-09T18:24:10.8193650Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8193850Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8193900Z     
2025-01-09T18:24:10.8193950Z         Returns:
2025-01-09T18:24:10.8194000Z         --------
2025-01-09T18:24:10.8194060Z         A TARDIS simulation object.
2025-01-09T18:24:10.8194110Z         """
2025-01-09T18:24:10.8194200Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8194300Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8194400Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8194540Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8194650Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8194730Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8194780Z >       sim = run_tardis(
2025-01-09T18:24:10.8194840Z             config_verysimple,
2025-01-09T18:24:10.8194890Z             atom_data=atomic_data,
2025-01-09T18:24:10.8194940Z         )
2025-01-09T18:24:10.8194940Z 
2025-01-09T18:24:10.8195050Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8195140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8195210Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8195270Z     simulation.run_convergence()
2025-01-09T18:24:10.8195360Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8195470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8195550Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8195670Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8195770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8195770Z 
2025-01-09T18:24:10.8195970Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8196140Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8196310Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8196540Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8196740Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8196850Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8196850Z 
2025-01-09T18:24:10.8196950Z     def initialize_transport_state(
2025-01-09T18:24:10.8197000Z         self,
2025-01-09T18:24:10.8197060Z         simulation_state,
2025-01-09T18:24:10.8197110Z         opacity_state,
2025-01-09T18:24:10.8197160Z         macro_atom_state,
2025-01-09T18:24:10.8197210Z         plasma,
2025-01-09T18:24:10.8197270Z         no_of_packets,
2025-01-09T18:24:10.8197330Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8197400Z         iteration=0,
2025-01-09T18:24:10.8197450Z     ):
2025-01-09T18:24:10.8197560Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8197630Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8197680Z         else:
2025-01-09T18:24:10.8197740Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8197780Z     
2025-01-09T18:24:10.8197900Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8197980Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8198030Z         )
2025-01-09T18:24:10.8198070Z     
2025-01-09T18:24:10.8198170Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8198250Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8198640Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8198640Z 
2025-01-09T18:24:10.8199250Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8199460Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl2] _
2025-01-09T18:24:10.8199460Z 
2025-01-09T18:24:10.8200010Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8200310Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8200310Z 
2025-01-09T18:24:10.8200380Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8200490Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8200540Z         """
2025-01-09T18:24:10.8200630Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8200680Z     
2025-01-09T18:24:10.8200730Z         Parameters:
2025-01-09T18:24:10.8200780Z         -----------
2025-01-09T18:24:10.8200890Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8201000Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8201050Z     
2025-01-09T18:24:10.8201100Z         Returns:
2025-01-09T18:24:10.8201150Z         --------
2025-01-09T18:24:10.8201210Z         A TARDIS simulation object.
2025-01-09T18:24:10.8201260Z         """
2025-01-09T18:24:10.8201350Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8201450Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8201550Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8201690Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8201800Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8201880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8201940Z >       sim = run_tardis(
2025-01-09T18:24:10.8202000Z             config_verysimple,
2025-01-09T18:24:10.8202050Z             atom_data=atomic_data,
2025-01-09T18:24:10.8202100Z         )
2025-01-09T18:24:10.8202100Z 
2025-01-09T18:24:10.8202210Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8202300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8202670Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8202740Z     simulation.run_convergence()
2025-01-09T18:24:10.8203020Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8203130Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8203210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8203330Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8203420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8203430Z 
2025-01-09T18:24:10.8203640Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8203930Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8204110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8204340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8204470Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8204580Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8204580Z 
2025-01-09T18:24:10.8204780Z     def initialize_transport_state(
2025-01-09T18:24:10.8204830Z         self,
2025-01-09T18:24:10.8204890Z         simulation_state,
2025-01-09T18:24:10.8204940Z         opacity_state,
2025-01-09T18:24:10.8204990Z         macro_atom_state,
2025-01-09T18:24:10.8205040Z         plasma,
2025-01-09T18:24:10.8205220Z         no_of_packets,
2025-01-09T18:24:10.8205280Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8205340Z         iteration=0,
2025-01-09T18:24:10.8205400Z     ):
2025-01-09T18:24:10.8205500Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8205580Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8205620Z         else:
2025-01-09T18:24:10.8205690Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8205730Z     
2025-01-09T18:24:10.8205840Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8205910Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8205960Z         )
2025-01-09T18:24:10.8206000Z     
2025-01-09T18:24:10.8206100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8206170Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8206550Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8206560Z 
2025-01-09T18:24:10.8206650Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8206840Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl3] _
2025-01-09T18:24:10.8206840Z 
2025-01-09T18:24:10.8207560Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8207840Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8207850Z 
2025-01-09T18:24:10.8207910Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8208030Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8208070Z         """
2025-01-09T18:24:10.8208160Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8208200Z     
2025-01-09T18:24:10.8208260Z         Parameters:
2025-01-09T18:24:10.8208310Z         -----------
2025-01-09T18:24:10.8208420Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8208530Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8208680Z     
2025-01-09T18:24:10.8208730Z         Returns:
2025-01-09T18:24:10.8208780Z         --------
2025-01-09T18:24:10.8208840Z         A TARDIS simulation object.
2025-01-09T18:24:10.8208890Z         """
2025-01-09T18:24:10.8208980Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8209070Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8209180Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8209320Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8209430Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8209500Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8209560Z >       sim = run_tardis(
2025-01-09T18:24:10.8209760Z             config_verysimple,
2025-01-09T18:24:10.8209810Z             atom_data=atomic_data,
2025-01-09T18:24:10.8209860Z         )
2025-01-09T18:24:10.8209860Z 
2025-01-09T18:24:10.8209970Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8210060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8210130Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8210190Z     simulation.run_convergence()
2025-01-09T18:24:10.8210270Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8210520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8210590Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8210710Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8210870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8210880Z 
2025-01-09T18:24:10.8211090Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8211380Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8211560Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8211780Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8211920Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8212040Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8212040Z 
2025-01-09T18:24:10.8212100Z     def initialize_transport_state(
2025-01-09T18:24:10.8212150Z         self,
2025-01-09T18:24:10.8212210Z         simulation_state,
2025-01-09T18:24:10.8212260Z         opacity_state,
2025-01-09T18:24:10.8212310Z         macro_atom_state,
2025-01-09T18:24:10.8212360Z         plasma,
2025-01-09T18:24:10.8212410Z         no_of_packets,
2025-01-09T18:24:10.8212470Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8212510Z         iteration=0,
2025-01-09T18:24:10.8212560Z     ):
2025-01-09T18:24:10.8212660Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8212740Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8212780Z         else:
2025-01-09T18:24:10.8212840Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8212880Z     
2025-01-09T18:24:10.8212990Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8213060Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8213110Z         )
2025-01-09T18:24:10.8213150Z     
2025-01-09T18:24:10.8213250Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8213330Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8213880Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8213880Z 
2025-01-09T18:24:10.8213980Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8214290Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl4] _
2025-01-09T18:24:10.8214310Z 
2025-01-09T18:24:10.8214830Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8215110Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8215110Z 
2025-01-09T18:24:10.8215180Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8215290Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8215340Z         """
2025-01-09T18:24:10.8215420Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8215470Z     
2025-01-09T18:24:10.8215520Z         Parameters:
2025-01-09T18:24:10.8215560Z         -----------
2025-01-09T18:24:10.8215670Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8215780Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8215830Z     
2025-01-09T18:24:10.8215880Z         Returns:
2025-01-09T18:24:10.8215930Z         --------
2025-01-09T18:24:10.8215990Z         A TARDIS simulation object.
2025-01-09T18:24:10.8216030Z         """
2025-01-09T18:24:10.8216280Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8216380Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8216490Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8216730Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8216990Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8217070Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8217130Z >       sim = run_tardis(
2025-01-09T18:24:10.8217190Z             config_verysimple,
2025-01-09T18:24:10.8217250Z             atom_data=atomic_data,
2025-01-09T18:24:10.8217290Z         )
2025-01-09T18:24:10.8217300Z 
2025-01-09T18:24:10.8217400Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8217500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8217560Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8217620Z     simulation.run_convergence()
2025-01-09T18:24:10.8217840Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8217960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8218030Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8218150Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8218240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8218240Z 
2025-01-09T18:24:10.8218460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8218610Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8218790Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8219010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8223540Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8223730Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8223730Z 
2025-01-09T18:24:10.8223800Z     def initialize_transport_state(
2025-01-09T18:24:10.8223860Z         self,
2025-01-09T18:24:10.8223910Z         simulation_state,
2025-01-09T18:24:10.8223960Z         opacity_state,
2025-01-09T18:24:10.8224020Z         macro_atom_state,
2025-01-09T18:24:10.8224070Z         plasma,
2025-01-09T18:24:10.8224120Z         no_of_packets,
2025-01-09T18:24:10.8224560Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8224620Z         iteration=0,
2025-01-09T18:24:10.8224660Z     ):
2025-01-09T18:24:10.8224760Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8224830Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8224880Z         else:
2025-01-09T18:24:10.8224940Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8224980Z     
2025-01-09T18:24:10.8225090Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8225160Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8225210Z         )
2025-01-09T18:24:10.8225260Z     
2025-01-09T18:24:10.8225370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8225440Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8225820Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8225830Z 
2025-01-09T18:24:10.8225920Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8226100Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl5] _
2025-01-09T18:24:10.8226110Z 
2025-01-09T18:24:10.8226630Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8226910Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8227230Z 
2025-01-09T18:24:10.8227300Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8227420Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8227470Z         """
2025-01-09T18:24:10.8227560Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8227610Z     
2025-01-09T18:24:10.8227650Z         Parameters:
2025-01-09T18:24:10.8227710Z         -----------
2025-01-09T18:24:10.8227810Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8227930Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8227980Z     
2025-01-09T18:24:10.8228020Z         Returns:
2025-01-09T18:24:10.8228070Z         --------
2025-01-09T18:24:10.8228130Z         A TARDIS simulation object.
2025-01-09T18:24:10.8228190Z         """
2025-01-09T18:24:10.8228420Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8228520Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8228630Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8228770Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8228880Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8228960Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8229010Z >       sim = run_tardis(
2025-01-09T18:24:10.8229070Z             config_verysimple,
2025-01-09T18:24:10.8229130Z             atom_data=atomic_data,
2025-01-09T18:24:10.8229170Z         )
2025-01-09T18:24:10.8229170Z 
2025-01-09T18:24:10.8229280Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8229370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8229430Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8229500Z     simulation.run_convergence()
2025-01-09T18:24:10.8229590Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8229700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8229770Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8229890Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8229980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8230210Z 
2025-01-09T18:24:10.8230430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8230590Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8230770Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8230980Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8231100Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8231210Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8231220Z 
2025-01-09T18:24:10.8231280Z     def initialize_transport_state(
2025-01-09T18:24:10.8231330Z         self,
2025-01-09T18:24:10.8231380Z         simulation_state,
2025-01-09T18:24:10.8231430Z         opacity_state,
2025-01-09T18:24:10.8231490Z         macro_atom_state,
2025-01-09T18:24:10.8231540Z         plasma,
2025-01-09T18:24:10.8231590Z         no_of_packets,
2025-01-09T18:24:10.8231640Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8231700Z         iteration=0,
2025-01-09T18:24:10.8231740Z     ):
2025-01-09T18:24:10.8231840Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8231910Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8231960Z         else:
2025-01-09T18:24:10.8232010Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8232060Z     
2025-01-09T18:24:10.8232160Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8232310Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8232350Z         )
2025-01-09T18:24:10.8232400Z     
2025-01-09T18:24:10.8232490Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8232570Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8232950Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8232960Z 
2025-01-09T18:24:10.8233040Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8233380Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl6] _
2025-01-09T18:24:10.8233390Z 
2025-01-09T18:24:10.8233910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8234210Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8234220Z 
2025-01-09T18:24:10.8234290Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8234400Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8234450Z         """
2025-01-09T18:24:10.8234540Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8234590Z     
2025-01-09T18:24:10.8234640Z         Parameters:
2025-01-09T18:24:10.8234680Z         -----------
2025-01-09T18:24:10.8234790Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8234910Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8234950Z     
2025-01-09T18:24:10.8235000Z         Returns:
2025-01-09T18:24:10.8235040Z         --------
2025-01-09T18:24:10.8235110Z         A TARDIS simulation object.
2025-01-09T18:24:10.8235150Z         """
2025-01-09T18:24:10.8235250Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8235350Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8235450Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8235590Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8235800Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8235870Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8235920Z >       sim = run_tardis(
2025-01-09T18:24:10.8235980Z             config_verysimple,
2025-01-09T18:24:10.8236030Z             atom_data=atomic_data,
2025-01-09T18:24:10.8236080Z         )
2025-01-09T18:24:10.8236080Z 
2025-01-09T18:24:10.8236180Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8236430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8236500Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8236560Z     simulation.run_convergence()
2025-01-09T18:24:10.8236650Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8236760Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8236830Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8236960Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8237040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8237050Z 
2025-01-09T18:24:10.8237250Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8237540Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8237720Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8237940Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8238140Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8238380Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8238380Z 
2025-01-09T18:24:10.8238450Z     def initialize_transport_state(
2025-01-09T18:24:10.8238500Z         self,
2025-01-09T18:24:10.8238560Z         simulation_state,
2025-01-09T18:24:10.8238610Z         opacity_state,
2025-01-09T18:24:10.8238660Z         macro_atom_state,
2025-01-09T18:24:10.8238710Z         plasma,
2025-01-09T18:24:10.8238760Z         no_of_packets,
2025-01-09T18:24:10.8238820Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8238870Z         iteration=0,
2025-01-09T18:24:10.8238910Z     ):
2025-01-09T18:24:10.8239010Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8239080Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8239130Z         else:
2025-01-09T18:24:10.8239190Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8239240Z     
2025-01-09T18:24:10.8239340Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8239410Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8239460Z         )
2025-01-09T18:24:10.8239510Z     
2025-01-09T18:24:10.8239610Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8239680Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8241510Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8241670Z 
2025-01-09T18:24:10.8242210Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8242760Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_mpl[plotter_generate_plot_mpl7] _
2025-01-09T18:24:10.8242780Z 
2025-01-09T18:24:10.8244250Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8245040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8245600Z 
2025-01-09T18:24:10.8245800Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8246130Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8246290Z         """
2025-01-09T18:24:10.8246520Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8246670Z     
2025-01-09T18:24:10.8246820Z         Parameters:
2025-01-09T18:24:10.8246990Z         -----------
2025-01-09T18:24:10.8247270Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8247580Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8247740Z     
2025-01-09T18:24:10.8247880Z         Returns:
2025-01-09T18:24:10.8248040Z         --------
2025-01-09T18:24:10.8248240Z         A TARDIS simulation object.
2025-01-09T18:24:10.8248400Z         """
2025-01-09T18:24:10.8248630Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8248900Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8249680Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8250140Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8250440Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8250650Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8250810Z >       sim = run_tardis(
2025-01-09T18:24:10.8251150Z             config_verysimple,
2025-01-09T18:24:10.8251320Z             atom_data=atomic_data,
2025-01-09T18:24:10.8251470Z         )
2025-01-09T18:24:10.8251480Z 
2025-01-09T18:24:10.8251780Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8252380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8252580Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8252760Z     simulation.run_convergence()
2025-01-09T18:24:10.8253010Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8253340Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8253590Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8254060Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8254310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8254320Z 
2025-01-09T18:24:10.8254900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8255340Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8255800Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8256410Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8256750Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8257050Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8257060Z 
2025-01-09T18:24:10.8257250Z     def initialize_transport_state(
2025-01-09T18:24:10.8257400Z         self,
2025-01-09T18:24:10.8257570Z         simulation_state,
2025-01-09T18:24:10.8257720Z         opacity_state,
2025-01-09T18:24:10.8257920Z         macro_atom_state,
2025-01-09T18:24:10.8258070Z         plasma,
2025-01-09T18:24:10.8258240Z         no_of_packets,
2025-01-09T18:24:10.8258420Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8258570Z         iteration=0,
2025-01-09T18:24:10.8258720Z     ):
2025-01-09T18:24:10.8258980Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8259190Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8259340Z         else:
2025-01-09T18:24:10.8259510Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8259650Z     
2025-01-09T18:24:10.8259950Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8260140Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8260470Z         )
2025-01-09T18:24:10.8260610Z     
2025-01-09T18:24:10.8260890Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8261100Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8262160Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8262170Z 
2025-01-09T18:24:10.8262430Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8262860Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl0] __
2025-01-09T18:24:10.8262880Z 
2025-01-09T18:24:10.8264340Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8265120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8265140Z 
2025-01-09T18:24:10.8265330Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8265620Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8265780Z         """
2025-01-09T18:24:10.8266020Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8266160Z     
2025-01-09T18:24:10.8266320Z         Parameters:
2025-01-09T18:24:10.8266470Z         -----------
2025-01-09T18:24:10.8266790Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8267570Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8267750Z     
2025-01-09T18:24:10.8267900Z         Returns:
2025-01-09T18:24:10.8268060Z         --------
2025-01-09T18:24:10.8268230Z         A TARDIS simulation object.
2025-01-09T18:24:10.8268380Z         """
2025-01-09T18:24:10.8268630Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8268890Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8269170Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8269570Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8269870Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8270070Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8270240Z >       sim = run_tardis(
2025-01-09T18:24:10.8270400Z             config_verysimple,
2025-01-09T18:24:10.8270590Z             atom_data=atomic_data,
2025-01-09T18:24:10.8270740Z         )
2025-01-09T18:24:10.8270740Z 
2025-01-09T18:24:10.8271040Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8271270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8271460Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8271650Z     simulation.run_convergence()
2025-01-09T18:24:10.8271900Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8272200Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8272410Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8272740Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8272980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8272990Z 
2025-01-09T18:24:10.8273560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8273990Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8274460Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8275030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8278580Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8278720Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8278720Z 
2025-01-09T18:24:10.8278790Z     def initialize_transport_state(
2025-01-09T18:24:10.8278850Z         self,
2025-01-09T18:24:10.8278900Z         simulation_state,
2025-01-09T18:24:10.8279010Z         opacity_state,
2025-01-09T18:24:10.8279060Z         macro_atom_state,
2025-01-09T18:24:10.8279110Z         plasma,
2025-01-09T18:24:10.8279160Z         no_of_packets,
2025-01-09T18:24:10.8282320Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8282410Z         iteration=0,
2025-01-09T18:24:10.8282470Z     ):
2025-01-09T18:24:10.8282580Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8282660Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8282700Z         else:
2025-01-09T18:24:10.8282770Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8282820Z     
2025-01-09T18:24:10.8282940Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8283020Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8283070Z         )
2025-01-09T18:24:10.8283110Z     
2025-01-09T18:24:10.8283220Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8283300Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8283690Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8283690Z 
2025-01-09T18:24:10.8284030Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8284200Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl1] __
2025-01-09T18:24:10.8284200Z 
2025-01-09T18:24:10.8284750Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8285050Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8285060Z 
2025-01-09T18:24:10.8285120Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8285240Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8285280Z         """
2025-01-09T18:24:10.8285380Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8285420Z     
2025-01-09T18:24:10.8285480Z         Parameters:
2025-01-09T18:24:10.8285540Z         -----------
2025-01-09T18:24:10.8285660Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8285780Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8285830Z     
2025-01-09T18:24:10.8285880Z         Returns:
2025-01-09T18:24:10.8285930Z         --------
2025-01-09T18:24:10.8285990Z         A TARDIS simulation object.
2025-01-09T18:24:10.8286040Z         """
2025-01-09T18:24:10.8286140Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8286240Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8286350Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8286500Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8286610Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8286680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8286740Z >       sim = run_tardis(
2025-01-09T18:24:10.8286800Z             config_verysimple,
2025-01-09T18:24:10.8286860Z             atom_data=atomic_data,
2025-01-09T18:24:10.8286900Z         )
2025-01-09T18:24:10.8286910Z 
2025-01-09T18:24:10.8287010Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8287310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8287380Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8287450Z     simulation.run_convergence()
2025-01-09T18:24:10.8287540Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8287650Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8287720Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8287860Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8287940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8287950Z 
2025-01-09T18:24:10.8288160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8288330Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8288510Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8288720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8288850Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8288960Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8288970Z 
2025-01-09T18:24:10.8289030Z     def initialize_transport_state(
2025-01-09T18:24:10.8289080Z         self,
2025-01-09T18:24:10.8289130Z         simulation_state,
2025-01-09T18:24:10.8289190Z         opacity_state,
2025-01-09T18:24:10.8289240Z         macro_atom_state,
2025-01-09T18:24:10.8289290Z         plasma,
2025-01-09T18:24:10.8289420Z         no_of_packets,
2025-01-09T18:24:10.8289490Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8289540Z         iteration=0,
2025-01-09T18:24:10.8289590Z     ):
2025-01-09T18:24:10.8289690Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8289760Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8289820Z         else:
2025-01-09T18:24:10.8289870Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8289920Z     
2025-01-09T18:24:10.8290050Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8290140Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8290190Z         )
2025-01-09T18:24:10.8290240Z     
2025-01-09T18:24:10.8290350Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8290430Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8290810Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8290820Z 
2025-01-09T18:24:10.8290920Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8291080Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl2] __
2025-01-09T18:24:10.8291080Z 
2025-01-09T18:24:10.8291690Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8292040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8292050Z 
2025-01-09T18:24:10.8292110Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8292230Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8292280Z         """
2025-01-09T18:24:10.8292370Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8292410Z     
2025-01-09T18:24:10.8292470Z         Parameters:
2025-01-09T18:24:10.8292510Z         -----------
2025-01-09T18:24:10.8292630Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8292740Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8292880Z     
2025-01-09T18:24:10.8292930Z         Returns:
2025-01-09T18:24:10.8292980Z         --------
2025-01-09T18:24:10.8293040Z         A TARDIS simulation object.
2025-01-09T18:24:10.8293080Z         """
2025-01-09T18:24:10.8293180Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8293270Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8293380Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8293520Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8293640Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8293710Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8293760Z >       sim = run_tardis(
2025-01-09T18:24:10.8293820Z             config_verysimple,
2025-01-09T18:24:10.8293880Z             atom_data=atomic_data,
2025-01-09T18:24:10.8293930Z         )
2025-01-09T18:24:10.8293930Z 
2025-01-09T18:24:10.8294040Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8294130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8294190Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8294260Z     simulation.run_convergence()
2025-01-09T18:24:10.8294340Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8294450Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8294520Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8294650Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8294810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8294820Z 
2025-01-09T18:24:10.8295030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8295190Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8295360Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8295580Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8295710Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8295820Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8295830Z 
2025-01-09T18:24:10.8295890Z     def initialize_transport_state(
2025-01-09T18:24:10.8295940Z         self,
2025-01-09T18:24:10.8295990Z         simulation_state,
2025-01-09T18:24:10.8296040Z         opacity_state,
2025-01-09T18:24:10.8296090Z         macro_atom_state,
2025-01-09T18:24:10.8296150Z         plasma,
2025-01-09T18:24:10.8296200Z         no_of_packets,
2025-01-09T18:24:10.8296260Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8296310Z         iteration=0,
2025-01-09T18:24:10.8296350Z     ):
2025-01-09T18:24:10.8296450Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8296520Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8296570Z         else:
2025-01-09T18:24:10.8296630Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8296670Z     
2025-01-09T18:24:10.8296780Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8296860Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8296900Z         )
2025-01-09T18:24:10.8297000Z     
2025-01-09T18:24:10.8297100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8297180Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8298330Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8298450Z 
2025-01-09T18:24:10.8298850Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8299920Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl3] __
2025-01-09T18:24:10.8299940Z 
2025-01-09T18:24:10.8302370Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8302770Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8302780Z 
2025-01-09T18:24:10.8302860Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8302990Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8303040Z         """
2025-01-09T18:24:10.8303130Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8303180Z     
2025-01-09T18:24:10.8303230Z         Parameters:
2025-01-09T18:24:10.8303290Z         -----------
2025-01-09T18:24:10.8303410Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8303530Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8303570Z     
2025-01-09T18:24:10.8303620Z         Returns:
2025-01-09T18:24:10.8303670Z         --------
2025-01-09T18:24:10.8303750Z         A TARDIS simulation object.
2025-01-09T18:24:10.8303800Z         """
2025-01-09T18:24:10.8303900Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8304000Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8304110Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8304700Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8304810Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8304890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8304940Z >       sim = run_tardis(
2025-01-09T18:24:10.8305010Z             config_verysimple,
2025-01-09T18:24:10.8305060Z             atom_data=atomic_data,
2025-01-09T18:24:10.8305110Z         )
2025-01-09T18:24:10.8305110Z 
2025-01-09T18:24:10.8305220Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8305320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8305400Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8305470Z     simulation.run_convergence()
2025-01-09T18:24:10.8305560Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8305670Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8305750Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8305870Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8305970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8305970Z 
2025-01-09T18:24:10.8306180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8306360Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8306540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8306760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8306880Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8306990Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8306990Z 
2025-01-09T18:24:10.8307060Z     def initialize_transport_state(
2025-01-09T18:24:10.8307110Z         self,
2025-01-09T18:24:10.8307170Z         simulation_state,
2025-01-09T18:24:10.8307220Z         opacity_state,
2025-01-09T18:24:10.8307280Z         macro_atom_state,
2025-01-09T18:24:10.8307410Z         plasma,
2025-01-09T18:24:10.8307470Z         no_of_packets,
2025-01-09T18:24:10.8307540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8307900Z         iteration=0,
2025-01-09T18:24:10.8307940Z     ):
2025-01-09T18:24:10.8308050Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8308140Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8308190Z         else:
2025-01-09T18:24:10.8308250Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8308310Z     
2025-01-09T18:24:10.8308440Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8308520Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8308580Z         )
2025-01-09T18:24:10.8308620Z     
2025-01-09T18:24:10.8308730Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8308800Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8309220Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8309240Z 
2025-01-09T18:24:10.8309330Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8309520Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl4] __
2025-01-09T18:24:10.8309530Z 
2025-01-09T18:24:10.8310090Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8310400Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8310500Z 
2025-01-09T18:24:10.8310580Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8310690Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8310750Z         """
2025-01-09T18:24:10.8310840Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8310890Z     
2025-01-09T18:24:10.8310940Z         Parameters:
2025-01-09T18:24:10.8311010Z         -----------
2025-01-09T18:24:10.8311120Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8311240Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8311280Z     
2025-01-09T18:24:10.8311340Z         Returns:
2025-01-09T18:24:10.8311380Z         --------
2025-01-09T18:24:10.8311450Z         A TARDIS simulation object.
2025-01-09T18:24:10.8311500Z         """
2025-01-09T18:24:10.8316040Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8316210Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8316320Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8316460Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8316580Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8316660Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8316710Z >       sim = run_tardis(
2025-01-09T18:24:10.8316770Z             config_verysimple,
2025-01-09T18:24:10.8316830Z             atom_data=atomic_data,
2025-01-09T18:24:10.8316870Z         )
2025-01-09T18:24:10.8316870Z 
2025-01-09T18:24:10.8316980Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8317070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8317150Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8317210Z     simulation.run_convergence()
2025-01-09T18:24:10.8317300Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8317410Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8317480Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8317610Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8317700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8317930Z 
2025-01-09T18:24:10.8318150Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8318410Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8318610Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8318830Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8318970Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8319080Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8319090Z 
2025-01-09T18:24:10.8319160Z     def initialize_transport_state(
2025-01-09T18:24:10.8319220Z         self,
2025-01-09T18:24:10.8319280Z         simulation_state,
2025-01-09T18:24:10.8319340Z         opacity_state,
2025-01-09T18:24:10.8319390Z         macro_atom_state,
2025-01-09T18:24:10.8319450Z         plasma,
2025-01-09T18:24:10.8319510Z         no_of_packets,
2025-01-09T18:24:10.8319580Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8319640Z         iteration=0,
2025-01-09T18:24:10.8319690Z     ):
2025-01-09T18:24:10.8319810Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8319880Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8319930Z         else:
2025-01-09T18:24:10.8319990Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8320040Z     
2025-01-09T18:24:10.8320160Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8320410Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8320470Z         )
2025-01-09T18:24:10.8320520Z     
2025-01-09T18:24:10.8320630Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8320710Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8321100Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8321120Z 
2025-01-09T18:24:10.8321220Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8321380Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl5] __
2025-01-09T18:24:10.8321380Z 
2025-01-09T18:24:10.8322050Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8322370Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8322380Z 
2025-01-09T18:24:10.8322450Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8322560Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8322610Z         """
2025-01-09T18:24:10.8322710Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8322770Z     
2025-01-09T18:24:10.8322820Z         Parameters:
2025-01-09T18:24:10.8322860Z         -----------
2025-01-09T18:24:10.8322980Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8323090Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8323140Z     
2025-01-09T18:24:10.8323200Z         Returns:
2025-01-09T18:24:10.8323250Z         --------
2025-01-09T18:24:10.8323320Z         A TARDIS simulation object.
2025-01-09T18:24:10.8323370Z         """
2025-01-09T18:24:10.8323460Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8323560Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8323680Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8323830Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8324100Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8324180Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8324240Z >       sim = run_tardis(
2025-01-09T18:24:10.8324300Z             config_verysimple,
2025-01-09T18:24:10.8324360Z             atom_data=atomic_data,
2025-01-09T18:24:10.8324400Z         )
2025-01-09T18:24:10.8324400Z 
2025-01-09T18:24:10.8324530Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8324620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8324710Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8324780Z     simulation.run_convergence()
2025-01-09T18:24:10.8324880Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8325000Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8325080Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8325220Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8325310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8325310Z 
2025-01-09T18:24:10.8325520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8325680Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8325860Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8326080Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8326310Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8326420Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8326430Z 
2025-01-09T18:24:10.8326500Z     def initialize_transport_state(
2025-01-09T18:24:10.8326540Z         self,
2025-01-09T18:24:10.8326600Z         simulation_state,
2025-01-09T18:24:10.8326650Z         opacity_state,
2025-01-09T18:24:10.8326710Z         macro_atom_state,
2025-01-09T18:24:10.8326760Z         plasma,
2025-01-09T18:24:10.8326810Z         no_of_packets,
2025-01-09T18:24:10.8326870Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8326920Z         iteration=0,
2025-01-09T18:24:10.8326970Z     ):
2025-01-09T18:24:10.8327070Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8327140Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8327190Z         else:
2025-01-09T18:24:10.8327250Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8327290Z     
2025-01-09T18:24:10.8327400Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8327470Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8327530Z         )
2025-01-09T18:24:10.8327570Z     
2025-01-09T18:24:10.8327670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8327750Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8328130Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8328130Z 
2025-01-09T18:24:10.8328230Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8328380Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl6] __
2025-01-09T18:24:10.8328390Z 
2025-01-09T18:24:10.8328910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8329190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8329260Z 
2025-01-09T18:24:10.8329330Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8329450Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8329490Z         """
2025-01-09T18:24:10.8329590Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8329630Z     
2025-01-09T18:24:10.8329690Z         Parameters:
2025-01-09T18:24:10.8329740Z         -----------
2025-01-09T18:24:10.8329850Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8329970Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8330020Z     
2025-01-09T18:24:10.8330070Z         Returns:
2025-01-09T18:24:10.8330120Z         --------
2025-01-09T18:24:10.8330180Z         A TARDIS simulation object.
2025-01-09T18:24:10.8330220Z         """
2025-01-09T18:24:10.8330310Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8330410Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8330520Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8330660Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8330770Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8330840Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8330900Z >       sim = run_tardis(
2025-01-09T18:24:10.8330950Z             config_verysimple,
2025-01-09T18:24:10.8331010Z             atom_data=atomic_data,
2025-01-09T18:24:10.8331050Z         )
2025-01-09T18:24:10.8331060Z 
2025-01-09T18:24:10.8331170Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8331800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8331860Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8331930Z     simulation.run_convergence()
2025-01-09T18:24:10.8332020Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8332140Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8332200Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8332330Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8332410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8332420Z 
2025-01-09T18:24:10.8332620Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8332780Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8332950Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8333170Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8333290Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8333400Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8333410Z 
2025-01-09T18:24:10.8333470Z     def initialize_transport_state(
2025-01-09T18:24:10.8333520Z         self,
2025-01-09T18:24:10.8333580Z         simulation_state,
2025-01-09T18:24:10.8333630Z         opacity_state,
2025-01-09T18:24:10.8333680Z         macro_atom_state,
2025-01-09T18:24:10.8333740Z         plasma,
2025-01-09T18:24:10.8333800Z         no_of_packets,
2025-01-09T18:24:10.8333880Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8333920Z         iteration=0,
2025-01-09T18:24:10.8333970Z     ):
2025-01-09T18:24:10.8334070Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8334140Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8334190Z         else:
2025-01-09T18:24:10.8334250Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8342200Z     
2025-01-09T18:24:10.8342380Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8342460Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8342980Z         )
2025-01-09T18:24:10.8343310Z     
2025-01-09T18:24:10.8343420Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8343500Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8343900Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8343900Z 
2025-01-09T18:24:10.8344000Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8344160Z _ ERROR at setup of TestLIVPlotter.test_mpl_image[plotter_generate_plot_mpl7] __
2025-01-09T18:24:10.8344170Z 
2025-01-09T18:24:10.8344710Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8345000Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8345010Z 
2025-01-09T18:24:10.8345070Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8345190Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8345230Z         """
2025-01-09T18:24:10.8345320Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8345380Z     
2025-01-09T18:24:10.8345440Z         Parameters:
2025-01-09T18:24:10.8345490Z         -----------
2025-01-09T18:24:10.8345600Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8345840Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8345890Z     
2025-01-09T18:24:10.8345940Z         Returns:
2025-01-09T18:24:10.8345980Z         --------
2025-01-09T18:24:10.8346060Z         A TARDIS simulation object.
2025-01-09T18:24:10.8346110Z         """
2025-01-09T18:24:10.8346210Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8346320Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8346440Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8346590Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8346700Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8346770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8346830Z >       sim = run_tardis(
2025-01-09T18:24:10.8346880Z             config_verysimple,
2025-01-09T18:24:10.8346940Z             atom_data=atomic_data,
2025-01-09T18:24:10.8346990Z         )
2025-01-09T18:24:10.8346990Z 
2025-01-09T18:24:10.8347100Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8347200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8347260Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8347330Z     simulation.run_convergence()
2025-01-09T18:24:10.8347410Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8347520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8347590Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8347720Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8347800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8347810Z 
2025-01-09T18:24:10.8348030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8348290Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8348480Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8348700Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8348820Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8349050Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8349060Z 
2025-01-09T18:24:10.8349120Z     def initialize_transport_state(
2025-01-09T18:24:10.8349170Z         self,
2025-01-09T18:24:10.8349240Z         simulation_state,
2025-01-09T18:24:10.8349310Z         opacity_state,
2025-01-09T18:24:10.8349370Z         macro_atom_state,
2025-01-09T18:24:10.8349440Z         plasma,
2025-01-09T18:24:10.8349500Z         no_of_packets,
2025-01-09T18:24:10.8349560Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8349630Z         iteration=0,
2025-01-09T18:24:10.8349690Z     ):
2025-01-09T18:24:10.8349810Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8349900Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8349950Z         else:
2025-01-09T18:24:10.8350000Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8350060Z     
2025-01-09T18:24:10.8350160Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8350240Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8350300Z         )
2025-01-09T18:24:10.8350350Z     
2025-01-09T18:24:10.8350450Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8350530Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8350920Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8350930Z 
2025-01-09T18:24:10.8351030Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8351370Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply0] _
2025-01-09T18:24:10.8351380Z 
2025-01-09T18:24:10.8351920Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8352280Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8352290Z 
2025-01-09T18:24:10.8352350Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8352460Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8352510Z         """
2025-01-09T18:24:10.8352600Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8352650Z     
2025-01-09T18:24:10.8352700Z         Parameters:
2025-01-09T18:24:10.8352750Z         -----------
2025-01-09T18:24:10.8352860Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8352980Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8353020Z     
2025-01-09T18:24:10.8353070Z         Returns:
2025-01-09T18:24:10.8353110Z         --------
2025-01-09T18:24:10.8353170Z         A TARDIS simulation object.
2025-01-09T18:24:10.8353220Z         """
2025-01-09T18:24:10.8353310Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8353400Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8353510Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8353670Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8353780Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8353850Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8353910Z >       sim = run_tardis(
2025-01-09T18:24:10.8353970Z             config_verysimple,
2025-01-09T18:24:10.8354020Z             atom_data=atomic_data,
2025-01-09T18:24:10.8354070Z         )
2025-01-09T18:24:10.8354070Z 
2025-01-09T18:24:10.8354170Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8354270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8354420Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8354490Z     simulation.run_convergence()
2025-01-09T18:24:10.8354570Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8354700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8354790Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8354910Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8355020Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8355030Z 
2025-01-09T18:24:10.8355240Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8355420Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8355600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8355840Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8355970Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8356120Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8356130Z 
2025-01-09T18:24:10.8356200Z     def initialize_transport_state(
2025-01-09T18:24:10.8356240Z         self,
2025-01-09T18:24:10.8356300Z         simulation_state,
2025-01-09T18:24:10.8356360Z         opacity_state,
2025-01-09T18:24:10.8356430Z         macro_atom_state,
2025-01-09T18:24:10.8356470Z         plasma,
2025-01-09T18:24:10.8356520Z         no_of_packets,
2025-01-09T18:24:10.8356670Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8356720Z         iteration=0,
2025-01-09T18:24:10.8356760Z     ):
2025-01-09T18:24:10.8356860Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8356930Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8356980Z         else:
2025-01-09T18:24:10.8357040Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8357080Z     
2025-01-09T18:24:10.8357190Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8357280Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8357320Z         )
2025-01-09T18:24:10.8357370Z     
2025-01-09T18:24:10.8357470Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8357560Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8357950Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8357950Z 
2025-01-09T18:24:10.8358040Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8358220Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply1] _
2025-01-09T18:24:10.8358230Z 
2025-01-09T18:24:10.8362590Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8362950Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8362950Z 
2025-01-09T18:24:10.8363030Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8363140Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8363190Z         """
2025-01-09T18:24:10.8363300Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8363350Z     
2025-01-09T18:24:10.8363400Z         Parameters:
2025-01-09T18:24:10.8363450Z         -----------
2025-01-09T18:24:10.8363560Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8363700Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8363910Z     
2025-01-09T18:24:10.8363960Z         Returns:
2025-01-09T18:24:10.8364010Z         --------
2025-01-09T18:24:10.8364100Z         A TARDIS simulation object.
2025-01-09T18:24:10.8364150Z         """
2025-01-09T18:24:10.8364240Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8364340Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8364450Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8364590Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8364710Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8364790Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8364860Z >       sim = run_tardis(
2025-01-09T18:24:10.8364920Z             config_verysimple,
2025-01-09T18:24:10.8364980Z             atom_data=atomic_data,
2025-01-09T18:24:10.8365040Z         )
2025-01-09T18:24:10.8365050Z 
2025-01-09T18:24:10.8365170Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8365280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8365350Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8365430Z     simulation.run_convergence()
2025-01-09T18:24:10.8365540Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8365660Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8365750Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8365880Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8366240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8366250Z 
2025-01-09T18:24:10.8366460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8366620Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8366820Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8367050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8367200Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8367300Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8367310Z 
2025-01-09T18:24:10.8367370Z     def initialize_transport_state(
2025-01-09T18:24:10.8367440Z         self,
2025-01-09T18:24:10.8367500Z         simulation_state,
2025-01-09T18:24:10.8367550Z         opacity_state,
2025-01-09T18:24:10.8367610Z         macro_atom_state,
2025-01-09T18:24:10.8367660Z         plasma,
2025-01-09T18:24:10.8367710Z         no_of_packets,
2025-01-09T18:24:10.8367770Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8367830Z         iteration=0,
2025-01-09T18:24:10.8367880Z     ):
2025-01-09T18:24:10.8367980Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8368060Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8368110Z         else:
2025-01-09T18:24:10.8368170Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8368220Z     
2025-01-09T18:24:10.8368320Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8368400Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8368450Z         )
2025-01-09T18:24:10.8368490Z     
2025-01-09T18:24:10.8368590Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8368670Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8369060Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8369070Z 
2025-01-09T18:24:10.8369160Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8369590Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply2] _
2025-01-09T18:24:10.8369600Z 
2025-01-09T18:24:10.8370150Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8370460Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8370460Z 
2025-01-09T18:24:10.8370520Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8370640Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8370690Z         """
2025-01-09T18:24:10.8370780Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8370820Z     
2025-01-09T18:24:10.8370870Z         Parameters:
2025-01-09T18:24:10.8370920Z         -----------
2025-01-09T18:24:10.8371030Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8371150Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8371190Z     
2025-01-09T18:24:10.8371230Z         Returns:
2025-01-09T18:24:10.8371290Z         --------
2025-01-09T18:24:10.8371350Z         A TARDIS simulation object.
2025-01-09T18:24:10.8371400Z         """
2025-01-09T18:24:10.8371490Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8371590Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8371690Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8371930Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8372040Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8372120Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8372170Z >       sim = run_tardis(
2025-01-09T18:24:10.8372230Z             config_verysimple,
2025-01-09T18:24:10.8372290Z             atom_data=atomic_data,
2025-01-09T18:24:10.8372330Z         )
2025-01-09T18:24:10.8372340Z 
2025-01-09T18:24:10.8372550Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8372640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8372710Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8372780Z     simulation.run_convergence()
2025-01-09T18:24:10.8372860Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8372970Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8373050Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8373170Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8373260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8373260Z 
2025-01-09T18:24:10.8373460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8373630Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8373800Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8374020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8374140Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8374250Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8374250Z 
2025-01-09T18:24:10.8374320Z     def initialize_transport_state(
2025-01-09T18:24:10.8374360Z         self,
2025-01-09T18:24:10.8374420Z         simulation_state,
2025-01-09T18:24:10.8374470Z         opacity_state,
2025-01-09T18:24:10.8374520Z         macro_atom_state,
2025-01-09T18:24:10.8374570Z         plasma,
2025-01-09T18:24:10.8374620Z         no_of_packets,
2025-01-09T18:24:10.8374680Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8374800Z         iteration=0,
2025-01-09T18:24:10.8374850Z     ):
2025-01-09T18:24:10.8374940Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8375020Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8375060Z         else:
2025-01-09T18:24:10.8375120Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8375160Z     
2025-01-09T18:24:10.8375270Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8375340Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8375390Z         )
2025-01-09T18:24:10.8375430Z     
2025-01-09T18:24:10.8375540Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8375610Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8376000Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8376010Z 
2025-01-09T18:24:10.8376100Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8376270Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply3] _
2025-01-09T18:24:10.8376280Z 
2025-01-09T18:24:10.8376800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8377090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8377160Z 
2025-01-09T18:24:10.8377240Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8377350Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8377410Z         """
2025-01-09T18:24:10.8377500Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8377550Z     
2025-01-09T18:24:10.8377600Z         Parameters:
2025-01-09T18:24:10.8377650Z         -----------
2025-01-09T18:24:10.8377750Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8377870Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8377910Z     
2025-01-09T18:24:10.8377960Z         Returns:
2025-01-09T18:24:10.8378010Z         --------
2025-01-09T18:24:10.8378070Z         A TARDIS simulation object.
2025-01-09T18:24:10.8378120Z         """
2025-01-09T18:24:10.8378210Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8378310Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8378410Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8378550Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8378660Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8378740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8378790Z >       sim = run_tardis(
2025-01-09T18:24:10.8378850Z             config_verysimple,
2025-01-09T18:24:10.8378910Z             atom_data=atomic_data,
2025-01-09T18:24:10.8378950Z         )
2025-01-09T18:24:10.8378950Z 
2025-01-09T18:24:10.8379060Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8379150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8379220Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8379280Z     simulation.run_convergence()
2025-01-09T18:24:10.8379360Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8379480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8379550Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8379680Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8379770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8379830Z 
2025-01-09T18:24:10.8380090Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8380260Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8380440Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8380650Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8380780Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8380890Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8380890Z 
2025-01-09T18:24:10.8380960Z     def initialize_transport_state(
2025-01-09T18:24:10.8381010Z         self,
2025-01-09T18:24:10.8381060Z         simulation_state,
2025-01-09T18:24:10.8381120Z         opacity_state,
2025-01-09T18:24:10.8381170Z         macro_atom_state,
2025-01-09T18:24:10.8381220Z         plasma,
2025-01-09T18:24:10.8381280Z         no_of_packets,
2025-01-09T18:24:10.8381340Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8381400Z         iteration=0,
2025-01-09T18:24:10.8381460Z     ):
2025-01-09T18:24:10.8381570Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8381650Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8381700Z         else:
2025-01-09T18:24:10.8381760Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8381800Z     
2025-01-09T18:24:10.8381920Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8395520Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8395770Z         )
2025-01-09T18:24:10.8395820Z     
2025-01-09T18:24:10.8395930Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8396010Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8396390Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8396430Z 
2025-01-09T18:24:10.8396530Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8396710Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply4] _
2025-01-09T18:24:10.8396710Z 
2025-01-09T18:24:10.8397240Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8397530Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8397530Z 
2025-01-09T18:24:10.8397590Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8397700Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8397760Z         """
2025-01-09T18:24:10.8397850Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8397890Z     
2025-01-09T18:24:10.8397940Z         Parameters:
2025-01-09T18:24:10.8398000Z         -----------
2025-01-09T18:24:10.8398110Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8398220Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8398260Z     
2025-01-09T18:24:10.8398310Z         Returns:
2025-01-09T18:24:10.8398360Z         --------
2025-01-09T18:24:10.8398420Z         A TARDIS simulation object.
2025-01-09T18:24:10.8398470Z         """
2025-01-09T18:24:10.8398560Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8398660Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8398770Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8398910Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8399280Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8399360Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8399410Z >       sim = run_tardis(
2025-01-09T18:24:10.8399470Z             config_verysimple,
2025-01-09T18:24:10.8399530Z             atom_data=atomic_data,
2025-01-09T18:24:10.8399580Z         )
2025-01-09T18:24:10.8399580Z 
2025-01-09T18:24:10.8399680Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8399790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8399850Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8399920Z     simulation.run_convergence()
2025-01-09T18:24:10.8400010Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8400120Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8400190Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8400310Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8400410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8400410Z 
2025-01-09T18:24:10.8400620Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8400800Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8400980Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8401220Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8401700Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8401840Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8401850Z 
2025-01-09T18:24:10.8401920Z     def initialize_transport_state(
2025-01-09T18:24:10.8401960Z         self,
2025-01-09T18:24:10.8402020Z         simulation_state,
2025-01-09T18:24:10.8402090Z         opacity_state,
2025-01-09T18:24:10.8402150Z         macro_atom_state,
2025-01-09T18:24:10.8402200Z         plasma,
2025-01-09T18:24:10.8402250Z         no_of_packets,
2025-01-09T18:24:10.8402310Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8402360Z         iteration=0,
2025-01-09T18:24:10.8402400Z     ):
2025-01-09T18:24:10.8402500Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8402580Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8402640Z         else:
2025-01-09T18:24:10.8402700Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8402750Z     
2025-01-09T18:24:10.8402860Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8402940Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8402990Z         )
2025-01-09T18:24:10.8403030Z     
2025-01-09T18:24:10.8403130Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8403210Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8403590Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8403600Z 
2025-01-09T18:24:10.8403690Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8403870Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply5] _
2025-01-09T18:24:10.8403870Z 
2025-01-09T18:24:10.8404390Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8404680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8404910Z 
2025-01-09T18:24:10.8404990Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8405100Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8405140Z         """
2025-01-09T18:24:10.8405240Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8405280Z     
2025-01-09T18:24:10.8405330Z         Parameters:
2025-01-09T18:24:10.8405370Z         -----------
2025-01-09T18:24:10.8405490Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8405600Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8405640Z     
2025-01-09T18:24:10.8405690Z         Returns:
2025-01-09T18:24:10.8405740Z         --------
2025-01-09T18:24:10.8405800Z         A TARDIS simulation object.
2025-01-09T18:24:10.8405860Z         """
2025-01-09T18:24:10.8405950Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8406050Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8406170Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8406310Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8406420Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8406490Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8406550Z >       sim = run_tardis(
2025-01-09T18:24:10.8406610Z             config_verysimple,
2025-01-09T18:24:10.8406660Z             atom_data=atomic_data,
2025-01-09T18:24:10.8406710Z         )
2025-01-09T18:24:10.8406710Z 
2025-01-09T18:24:10.8406820Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8407000Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8407060Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8407130Z     simulation.run_convergence()
2025-01-09T18:24:10.8407220Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8407330Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8407410Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8407550Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8407650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8407650Z 
2025-01-09T18:24:10.8407870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8408040Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8408220Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8408450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8408590Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8408700Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8408700Z 
2025-01-09T18:24:10.8408760Z     def initialize_transport_state(
2025-01-09T18:24:10.8408830Z         self,
2025-01-09T18:24:10.8408890Z         simulation_state,
2025-01-09T18:24:10.8408940Z         opacity_state,
2025-01-09T18:24:10.8408990Z         macro_atom_state,
2025-01-09T18:24:10.8409040Z         plasma,
2025-01-09T18:24:10.8409090Z         no_of_packets,
2025-01-09T18:24:10.8409140Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8409200Z         iteration=0,
2025-01-09T18:24:10.8409240Z     ):
2025-01-09T18:24:10.8409340Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8409430Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8409480Z         else:
2025-01-09T18:24:10.8409540Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8409590Z     
2025-01-09T18:24:10.8409690Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8409770Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8409890Z         )
2025-01-09T18:24:10.8409940Z     
2025-01-09T18:24:10.8410040Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8410120Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8410500Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8410510Z 
2025-01-09T18:24:10.8410610Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8410780Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply6] _
2025-01-09T18:24:10.8410790Z 
2025-01-09T18:24:10.8411320Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8411620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8411620Z 
2025-01-09T18:24:10.8411680Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8411790Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8411840Z         """
2025-01-09T18:24:10.8411930Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8411970Z     
2025-01-09T18:24:10.8412020Z         Parameters:
2025-01-09T18:24:10.8412070Z         -----------
2025-01-09T18:24:10.8412170Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8412370Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8412420Z     
2025-01-09T18:24:10.8412460Z         Returns:
2025-01-09T18:24:10.8412510Z         --------
2025-01-09T18:24:10.8412580Z         A TARDIS simulation object.
2025-01-09T18:24:10.8412620Z         """
2025-01-09T18:24:10.8412710Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8412810Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8412920Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8413060Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8413170Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8413240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8413290Z >       sim = run_tardis(
2025-01-09T18:24:10.8413350Z             config_verysimple,
2025-01-09T18:24:10.8413410Z             atom_data=atomic_data,
2025-01-09T18:24:10.8413450Z         )
2025-01-09T18:24:10.8413460Z 
2025-01-09T18:24:10.8413560Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8413650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8413710Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8413780Z     simulation.run_convergence()
2025-01-09T18:24:10.8413860Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8413970Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8414040Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8414160Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8414250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8414260Z 
2025-01-09T18:24:10.8414460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8414620Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8414790Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8415010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8415190Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8415300Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8415300Z 
2025-01-09T18:24:10.8415370Z     def initialize_transport_state(
2025-01-09T18:24:10.8415410Z         self,
2025-01-09T18:24:10.8415470Z         simulation_state,
2025-01-09T18:24:10.8415520Z         opacity_state,
2025-01-09T18:24:10.8415580Z         macro_atom_state,
2025-01-09T18:24:10.8415800Z         plasma,
2025-01-09T18:24:10.8415860Z         no_of_packets,
2025-01-09T18:24:10.8415920Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8415970Z         iteration=0,
2025-01-09T18:24:10.8416020Z     ):
2025-01-09T18:24:10.8416120Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8416190Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8416240Z         else:
2025-01-09T18:24:10.8416300Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8416350Z     
2025-01-09T18:24:10.8416470Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8416550Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8416590Z         )
2025-01-09T18:24:10.8416630Z     
2025-01-09T18:24:10.8416740Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8416810Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8417250Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8417250Z 
2025-01-09T18:24:10.8418370Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8418710Z _ ERROR at setup of TestLIVPlotter.test_generate_plot_ply[plotter_generate_plot_ply7] _
2025-01-09T18:24:10.8418710Z 
2025-01-09T18:24:10.8419330Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8419620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8419630Z 
2025-01-09T18:24:10.8419690Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8419800Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8419850Z         """
2025-01-09T18:24:10.8419930Z         Fixture to create a simple TARDIS simulation.
2025-01-09T18:24:10.8419980Z     
2025-01-09T18:24:10.8420030Z         Parameters:
2025-01-09T18:24:10.8420090Z         -----------
2025-01-09T18:24:10.8420190Z         config_verysimple: A basic TARDIS configuration object.
2025-01-09T18:24:10.8420310Z         atomic_dataset: An atomic dataset to use in the simulation.
2025-01-09T18:24:10.8420350Z     
2025-01-09T18:24:10.8420400Z         Returns:
2025-01-09T18:24:10.8420450Z         --------
2025-01-09T18:24:10.8420510Z         A TARDIS simulation object.
2025-01-09T18:24:10.8420560Z         """
2025-01-09T18:24:10.8420640Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8420740Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8420840Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8420980Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8421090Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8421160Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8421220Z >       sim = run_tardis(
2025-01-09T18:24:10.8421280Z             config_verysimple,
2025-01-09T18:24:10.8421330Z             atom_data=atomic_data,
2025-01-09T18:24:10.8421380Z         )
2025-01-09T18:24:10.8421380Z 
2025-01-09T18:24:10.8421480Z tardis/visualization/tools/tests/test_liv_plot.py:57: 
2025-01-09T18:24:10.8421570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8421740Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8421800Z     simulation.run_convergence()
2025-01-09T18:24:10.8421890Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8421990Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8422060Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8422180Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8422270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8422280Z 
2025-01-09T18:24:10.8422480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x303481af0>
2025-01-09T18:24:10.8422640Z simulation_state = <tardis.model.base.SimulationState object at 0x14f5aa8d0>
2025-01-09T18:24:10.8422810Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x14ec92ed0>
2025-01-09T18:24:10.8423030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x14f5865a0>
2025-01-09T18:24:10.8423160Z plasma = <tardis.plasma.base.BasePlasma object at 0x14f4f7380>
2025-01-09T18:24:10.8423260Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8423270Z 
2025-01-09T18:24:10.8423340Z     def initialize_transport_state(
2025-01-09T18:24:10.8423380Z         self,
2025-01-09T18:24:10.8423440Z         simulation_state,
2025-01-09T18:24:10.8423490Z         opacity_state,
2025-01-09T18:24:10.8423550Z         macro_atom_state,
2025-01-09T18:24:10.8423590Z         plasma,
2025-01-09T18:24:10.8423890Z         no_of_packets,
2025-01-09T18:24:10.8423950Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8424000Z         iteration=0,
2025-01-09T18:24:10.8424040Z     ):
2025-01-09T18:24:10.8424140Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8424210Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8424260Z         else:
2025-01-09T18:24:10.8424320Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8424360Z     
2025-01-09T18:24:10.8424470Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8424540Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8424580Z         )
2025-01-09T18:24:10.8424630Z     
2025-01-09T18:24:10.8424730Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8424810Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8425180Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8425190Z 
2025-01-09T18:24:10.8425280Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8425440Z __ ERROR at setup of TestRPacketPlotter.test_get_coordinates_with_theta_init ___
2025-01-09T18:24:10.8425440Z 
2025-01-09T18:24:10.8425580Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8425840Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8425840Z 
2025-01-09T18:24:10.8425910Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8425970Z         "expected,obtained",
2025-01-09T18:24:10.8426010Z         [
2025-01-09T18:24:10.8426060Z             (
2025-01-09T18:24:10.8426140Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8426220Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8426270Z             ),
2025-01-09T18:24:10.8426400Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8426490Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8426540Z         ],
2025-01-09T18:24:10.8426580Z     )
2025-01-09T18:24:10.8426710Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8427000Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8427010Z 
2025-01-09T18:24:10.8427140Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8427230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8427450Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8427530Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8427750Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8427840Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8427940Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8427990Z     sim = run_tardis(
2025-01-09T18:24:10.8428050Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8428120Z     simulation.run_convergence()
2025-01-09T18:24:10.8428210Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8428320Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8428390Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8428510Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8428600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8428600Z 
2025-01-09T18:24:10.8428800Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8428960Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8429190Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8429400Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8429530Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8429640Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8429640Z 
2025-01-09T18:24:10.8429700Z     def initialize_transport_state(
2025-01-09T18:24:10.8429750Z         self,
2025-01-09T18:24:10.8429810Z         simulation_state,
2025-01-09T18:24:10.8429860Z         opacity_state,
2025-01-09T18:24:10.8429910Z         macro_atom_state,
2025-01-09T18:24:10.8429960Z         plasma,
2025-01-09T18:24:10.8430010Z         no_of_packets,
2025-01-09T18:24:10.8430070Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8430120Z         iteration=0,
2025-01-09T18:24:10.8430160Z     ):
2025-01-09T18:24:10.8430260Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8430340Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8430380Z         else:
2025-01-09T18:24:10.8430440Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8430490Z     
2025-01-09T18:24:10.8430590Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8430670Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8430710Z         )
2025-01-09T18:24:10.8430760Z     
2025-01-09T18:24:10.8430860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8430940Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8431320Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8431330Z 
2025-01-09T18:24:10.8431420Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8431590Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[2] _
2025-01-09T18:24:10.8431600Z 
2025-01-09T18:24:10.8431730Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8431990Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8432030Z 
2025-01-09T18:24:10.8432100Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8432160Z         "expected,obtained",
2025-01-09T18:24:10.8432210Z         [
2025-01-09T18:24:10.8432250Z             (
2025-01-09T18:24:10.8432330Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8432420Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8432460Z             ),
2025-01-09T18:24:10.8432590Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8432690Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8432730Z         ],
2025-01-09T18:24:10.8432780Z     )
2025-01-09T18:24:10.8432910Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8433000Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8433000Z 
2025-01-09T18:24:10.8433130Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8433220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8433440Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8433530Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8433740Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8433830Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8433930Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8433980Z     sim = run_tardis(
2025-01-09T18:24:10.8434090Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8434160Z     simulation.run_convergence()
2025-01-09T18:24:10.8434250Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8434360Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8434430Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8434550Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8434640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8434640Z 
2025-01-09T18:24:10.8434840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8435000Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8435170Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8435380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8435830Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8435940Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8435950Z 
2025-01-09T18:24:10.8436010Z     def initialize_transport_state(
2025-01-09T18:24:10.8436060Z         self,
2025-01-09T18:24:10.8436120Z         simulation_state,
2025-01-09T18:24:10.8436170Z         opacity_state,
2025-01-09T18:24:10.8436220Z         macro_atom_state,
2025-01-09T18:24:10.8436270Z         plasma,
2025-01-09T18:24:10.8436310Z         no_of_packets,
2025-01-09T18:24:10.8436370Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8436420Z         iteration=0,
2025-01-09T18:24:10.8436460Z     ):
2025-01-09T18:24:10.8436560Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8436640Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8436680Z         else:
2025-01-09T18:24:10.8436740Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8436780Z     
2025-01-09T18:24:10.8436890Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8436960Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8437010Z         )
2025-01-09T18:24:10.8437050Z     
2025-01-09T18:24:10.8437150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8437300Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8437680Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8437690Z 
2025-01-09T18:24:10.8437780Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8437940Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[5] _
2025-01-09T18:24:10.8437940Z 
2025-01-09T18:24:10.8438080Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8438340Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8438340Z 
2025-01-09T18:24:10.8438410Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8438470Z         "expected,obtained",
2025-01-09T18:24:10.8438510Z         [
2025-01-09T18:24:10.8438560Z             (
2025-01-09T18:24:10.8438640Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8438720Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8438770Z             ),
2025-01-09T18:24:10.8438890Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8438980Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8439030Z         ],
2025-01-09T18:24:10.8439070Z     )
2025-01-09T18:24:10.8439200Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8439290Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8439340Z 
2025-01-09T18:24:10.8439470Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8439560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8439780Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8439870Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8440080Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8440170Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8440270Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8440320Z     sim = run_tardis(
2025-01-09T18:24:10.8440380Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8440440Z     simulation.run_convergence()
2025-01-09T18:24:10.8440530Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8440640Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8440710Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8440840Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8440930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8440930Z 
2025-01-09T18:24:10.8441140Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8441290Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8441470Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8441680Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8441800Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8441910Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8441920Z 
2025-01-09T18:24:10.8441980Z     def initialize_transport_state(
2025-01-09T18:24:10.8442030Z         self,
2025-01-09T18:24:10.8442080Z         simulation_state,
2025-01-09T18:24:10.8442130Z         opacity_state,
2025-01-09T18:24:10.8442180Z         macro_atom_state,
2025-01-09T18:24:10.8442270Z         plasma,
2025-01-09T18:24:10.8442320Z         no_of_packets,
2025-01-09T18:24:10.8442380Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8442430Z         iteration=0,
2025-01-09T18:24:10.8442470Z     ):
2025-01-09T18:24:10.8442570Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8442640Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8442690Z         else:
2025-01-09T18:24:10.8442740Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8442790Z     
2025-01-09T18:24:10.8442890Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8442970Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8443010Z         )
2025-01-09T18:24:10.8443060Z     
2025-01-09T18:24:10.8443160Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8443240Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8443610Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8443620Z 
2025-01-09T18:24:10.8443710Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8443880Z _ ERROR at setup of TestRPacketPlotter.test_get_coordinates_multiple_packets[10] _
2025-01-09T18:24:10.8443880Z 
2025-01-09T18:24:10.8444010Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8444270Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8444270Z 
2025-01-09T18:24:10.8444730Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8444790Z         "expected,obtained",
2025-01-09T18:24:10.8444830Z         [
2025-01-09T18:24:10.8444880Z             (
2025-01-09T18:24:10.8444960Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8445050Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8445090Z             ),
2025-01-09T18:24:10.8445220Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8445320Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8445370Z         ],
2025-01-09T18:24:10.8445420Z     )
2025-01-09T18:24:10.8445540Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8445630Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8445640Z 
2025-01-09T18:24:10.8445770Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8445860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8446070Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8446160Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8446370Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8446470Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8446570Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8446620Z     sim = run_tardis(
2025-01-09T18:24:10.8446680Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8446740Z     simulation.run_convergence()
2025-01-09T18:24:10.8446830Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8446940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8447010Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8447130Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8447230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8447230Z 
2025-01-09T18:24:10.8447430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8447590Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8448030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8448430Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8448550Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8448660Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8448670Z 
2025-01-09T18:24:10.8448730Z     def initialize_transport_state(
2025-01-09T18:24:10.8448780Z         self,
2025-01-09T18:24:10.8448840Z         simulation_state,
2025-01-09T18:24:10.8448890Z         opacity_state,
2025-01-09T18:24:10.8448950Z         macro_atom_state,
2025-01-09T18:24:10.8449000Z         plasma,
2025-01-09T18:24:10.8449050Z         no_of_packets,
2025-01-09T18:24:10.8449110Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8449160Z         iteration=0,
2025-01-09T18:24:10.8449210Z     ):
2025-01-09T18:24:10.8449300Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8449380Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8449430Z         else:
2025-01-09T18:24:10.8458420Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8458590Z     
2025-01-09T18:24:10.8458910Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8459120Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8459260Z         )
2025-01-09T18:24:10.8459410Z     
2025-01-09T18:24:10.8459680Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8460600Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8461660Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8461670Z 
2025-01-09T18:24:10.8461930Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8462340Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[2] _______
2025-01-09T18:24:10.8462360Z 
2025-01-09T18:24:10.8464430Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8464830Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8464830Z 
2025-01-09T18:24:10.8464900Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8464970Z         "expected,obtained",
2025-01-09T18:24:10.8465010Z         [
2025-01-09T18:24:10.8465060Z             (
2025-01-09T18:24:10.8465170Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8465260Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8465310Z             ),
2025-01-09T18:24:10.8465440Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8465530Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8465590Z         ],
2025-01-09T18:24:10.8465630Z     )
2025-01-09T18:24:10.8465760Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8465860Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8465860Z 
2025-01-09T18:24:10.8466000Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8466100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8466320Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8466420Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8466640Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8466720Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8466830Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8467120Z     sim = run_tardis(
2025-01-09T18:24:10.8467180Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8467250Z     simulation.run_convergence()
2025-01-09T18:24:10.8467340Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8467460Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8467530Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8467650Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8467750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8467750Z 
2025-01-09T18:24:10.8467960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8468120Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8468290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8468510Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8468640Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8468750Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8468750Z 
2025-01-09T18:24:10.8468810Z     def initialize_transport_state(
2025-01-09T18:24:10.8468860Z         self,
2025-01-09T18:24:10.8468920Z         simulation_state,
2025-01-09T18:24:10.8468970Z         opacity_state,
2025-01-09T18:24:10.8469020Z         macro_atom_state,
2025-01-09T18:24:10.8469070Z         plasma,
2025-01-09T18:24:10.8469120Z         no_of_packets,
2025-01-09T18:24:10.8469270Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8469320Z         iteration=0,
2025-01-09T18:24:10.8469360Z     ):
2025-01-09T18:24:10.8469470Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8469540Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8469590Z         else:
2025-01-09T18:24:10.8469650Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8469700Z     
2025-01-09T18:24:10.8469810Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8469880Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8469920Z         )
2025-01-09T18:24:10.8469970Z     
2025-01-09T18:24:10.8470070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8470150Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8470540Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8470550Z 
2025-01-09T18:24:10.8470640Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8470790Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[5] _______
2025-01-09T18:24:10.8470790Z 
2025-01-09T18:24:10.8470930Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8471190Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8471190Z 
2025-01-09T18:24:10.8471260Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8471320Z         "expected,obtained",
2025-01-09T18:24:10.8471360Z         [
2025-01-09T18:24:10.8471410Z             (
2025-01-09T18:24:10.8471490Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8471570Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8471620Z             ),
2025-01-09T18:24:10.8471740Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8471840Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8471880Z         ],
2025-01-09T18:24:10.8471930Z     )
2025-01-09T18:24:10.8472050Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8472200Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8472210Z 
2025-01-09T18:24:10.8472340Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8472430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8472650Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8472740Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8472950Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8473040Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8473140Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8473190Z     sim = run_tardis(
2025-01-09T18:24:10.8473260Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8473320Z     simulation.run_convergence()
2025-01-09T18:24:10.8473410Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8473520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8473590Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8473710Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8473800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8473800Z 
2025-01-09T18:24:10.8474010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8474160Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8474390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8474600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8474720Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8474840Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8474840Z 
2025-01-09T18:24:10.8474910Z     def initialize_transport_state(
2025-01-09T18:24:10.8474950Z         self,
2025-01-09T18:24:10.8475010Z         simulation_state,
2025-01-09T18:24:10.8475060Z         opacity_state,
2025-01-09T18:24:10.8475110Z         macro_atom_state,
2025-01-09T18:24:10.8475150Z         plasma,
2025-01-09T18:24:10.8475210Z         no_of_packets,
2025-01-09T18:24:10.8475260Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8475310Z         iteration=0,
2025-01-09T18:24:10.8475360Z     ):
2025-01-09T18:24:10.8475450Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8475530Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8475580Z         else:
2025-01-09T18:24:10.8475630Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8475670Z     
2025-01-09T18:24:10.8475780Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8475860Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8475900Z         )
2025-01-09T18:24:10.8475950Z     
2025-01-09T18:24:10.8476050Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8476120Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8476510Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8476510Z 
2025-01-09T18:24:10.8476600Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8476750Z ______ ERROR at setup of TestRPacketPlotter.test_get_equal_array_size[10] ______
2025-01-09T18:24:10.8476760Z 
2025-01-09T18:24:10.8476890Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8477150Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8477190Z 
2025-01-09T18:24:10.8477260Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8477320Z         "expected,obtained",
2025-01-09T18:24:10.8477360Z         [
2025-01-09T18:24:10.8477410Z             (
2025-01-09T18:24:10.8477490Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8477570Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8477620Z             ),
2025-01-09T18:24:10.8477740Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8477840Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8477890Z         ],
2025-01-09T18:24:10.8477940Z     )
2025-01-09T18:24:10.8478070Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8478150Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8478160Z 
2025-01-09T18:24:10.8478290Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8478380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8478600Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8478680Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8478900Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8478980Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8479080Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8479140Z     sim = run_tardis(
2025-01-09T18:24:10.8479410Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8479480Z     simulation.run_convergence()
2025-01-09T18:24:10.8479560Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8479670Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8479740Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8479870Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8479960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8479960Z 
2025-01-09T18:24:10.8480160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8480320Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8480490Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8480710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8480830Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8480940Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8480940Z 
2025-01-09T18:24:10.8481000Z     def initialize_transport_state(
2025-01-09T18:24:10.8481050Z         self,
2025-01-09T18:24:10.8481110Z         simulation_state,
2025-01-09T18:24:10.8481170Z         opacity_state,
2025-01-09T18:24:10.8481220Z         macro_atom_state,
2025-01-09T18:24:10.8481270Z         plasma,
2025-01-09T18:24:10.8481310Z         no_of_packets,
2025-01-09T18:24:10.8481370Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8481420Z         iteration=0,
2025-01-09T18:24:10.8481470Z     ):
2025-01-09T18:24:10.8481570Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8481640Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8481690Z         else:
2025-01-09T18:24:10.8481740Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8481790Z     
2025-01-09T18:24:10.8481900Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8481970Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8482010Z         )
2025-01-09T18:24:10.8482060Z     
2025-01-09T18:24:10.8482160Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8482470Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8482880Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8482890Z 
2025-01-09T18:24:10.8482980Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8483130Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-2] _________
2025-01-09T18:24:10.8483140Z 
2025-01-09T18:24:10.8483270Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8483560Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8483570Z 
2025-01-09T18:24:10.8483640Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8483700Z         "expected,obtained",
2025-01-09T18:24:10.8483750Z         [
2025-01-09T18:24:10.8483790Z             (
2025-01-09T18:24:10.8483900Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8484010Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8484050Z             ),
2025-01-09T18:24:10.8484180Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8484280Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8484320Z         ],
2025-01-09T18:24:10.8484370Z     )
2025-01-09T18:24:10.8484500Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8484590Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8484670Z 
2025-01-09T18:24:10.8484800Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8484900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8485110Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8485200Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8485420Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8485510Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8485610Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8485660Z     sim = run_tardis(
2025-01-09T18:24:10.8485730Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8485790Z     simulation.run_convergence()
2025-01-09T18:24:10.8485870Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8485990Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8486060Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8486180Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8486270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8486270Z 
2025-01-09T18:24:10.8486470Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8486640Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8486810Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8487020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8487150Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8487250Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8487260Z 
2025-01-09T18:24:10.8487320Z     def initialize_transport_state(
2025-01-09T18:24:10.8487370Z         self,
2025-01-09T18:24:10.8487430Z         simulation_state,
2025-01-09T18:24:10.8487480Z         opacity_state,
2025-01-09T18:24:10.8487530Z         macro_atom_state,
2025-01-09T18:24:10.8487580Z         plasma,
2025-01-09T18:24:10.8487680Z         no_of_packets,
2025-01-09T18:24:10.8487740Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8487790Z         iteration=0,
2025-01-09T18:24:10.8487830Z     ):
2025-01-09T18:24:10.8487930Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8488010Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8488050Z         else:
2025-01-09T18:24:10.8488110Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8488150Z     
2025-01-09T18:24:10.8488260Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8488330Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8488380Z         )
2025-01-09T18:24:10.8488420Z     
2025-01-09T18:24:10.8488520Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8488590Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8488980Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8488980Z 
2025-01-09T18:24:10.8489070Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8489220Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-5] _________
2025-01-09T18:24:10.8489220Z 
2025-01-09T18:24:10.8489360Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8489610Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8489610Z 
2025-01-09T18:24:10.8489680Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8489790Z         "expected,obtained",
2025-01-09T18:24:10.8489840Z         [
2025-01-09T18:24:10.8489880Z             (
2025-01-09T18:24:10.8489960Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8490050Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8490090Z             ),
2025-01-09T18:24:10.8490220Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8490310Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8490360Z         ],
2025-01-09T18:24:10.8490400Z     )
2025-01-09T18:24:10.8490530Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8490620Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8490620Z 
2025-01-09T18:24:10.8490750Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8490840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8491060Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8491150Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8491360Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8491450Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8491550Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8491600Z     sim = run_tardis(
2025-01-09T18:24:10.8491660Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8491740Z     simulation.run_convergence()
2025-01-09T18:24:10.8491850Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8492080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8492150Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8492280Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8492370Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8492370Z 
2025-01-09T18:24:10.8492580Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8492740Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8493010Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8493230Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8493350Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8493460Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8493460Z 
2025-01-09T18:24:10.8493520Z     def initialize_transport_state(
2025-01-09T18:24:10.8493570Z         self,
2025-01-09T18:24:10.8493620Z         simulation_state,
2025-01-09T18:24:10.8493680Z         opacity_state,
2025-01-09T18:24:10.8493730Z         macro_atom_state,
2025-01-09T18:24:10.8493780Z         plasma,
2025-01-09T18:24:10.8493830Z         no_of_packets,
2025-01-09T18:24:10.8493890Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8493940Z         iteration=0,
2025-01-09T18:24:10.8493980Z     ):
2025-01-09T18:24:10.8494080Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8494160Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8494200Z         else:
2025-01-09T18:24:10.8494260Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8494300Z     
2025-01-09T18:24:10.8494400Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8494480Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8494520Z         )
2025-01-09T18:24:10.8494570Z     
2025-01-09T18:24:10.8494680Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8494760Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8495210Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8495220Z 
2025-01-09T18:24:10.8495310Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8495460Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[light-10] ________
2025-01-09T18:24:10.8495460Z 
2025-01-09T18:24:10.8495590Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8495850Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8495850Z 
2025-01-09T18:24:10.8495910Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8495970Z         "expected,obtained",
2025-01-09T18:24:10.8496020Z         [
2025-01-09T18:24:10.8496060Z             (
2025-01-09T18:24:10.8496140Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8496230Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8496280Z             ),
2025-01-09T18:24:10.8496400Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8496490Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8496540Z         ],
2025-01-09T18:24:10.8496590Z     )
2025-01-09T18:24:10.8496710Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8496810Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8496810Z 
2025-01-09T18:24:10.8496940Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8497030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8497240Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8497330Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8497550Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8497630Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8497740Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8497810Z     sim = run_tardis(
2025-01-09T18:24:10.8497950Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8498010Z     simulation.run_convergence()
2025-01-09T18:24:10.8498100Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8498210Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8498280Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8498400Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8498490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8498490Z 
2025-01-09T18:24:10.8498700Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8498860Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8499030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8499250Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8499370Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8499480Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8499490Z 
2025-01-09T18:24:10.8499560Z     def initialize_transport_state(
2025-01-09T18:24:10.8499600Z         self,
2025-01-09T18:24:10.8499660Z         simulation_state,
2025-01-09T18:24:10.8499710Z         opacity_state,
2025-01-09T18:24:10.8499760Z         macro_atom_state,
2025-01-09T18:24:10.8499810Z         plasma,
2025-01-09T18:24:10.8499860Z         no_of_packets,
2025-01-09T18:24:10.8500270Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8500320Z         iteration=0,
2025-01-09T18:24:10.8500370Z     ):
2025-01-09T18:24:10.8500470Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8500540Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8500590Z         else:
2025-01-09T18:24:10.8500650Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8500690Z     
2025-01-09T18:24:10.8500800Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8500870Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8500920Z         )
2025-01-09T18:24:10.8500970Z     
2025-01-09T18:24:10.8501070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8501140Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8501520Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8501530Z 
2025-01-09T18:24:10.8501620Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8501760Z _________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-2] _________
2025-01-09T18:24:10.8501770Z 
2025-01-09T18:24:10.8501900Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8502160Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8502160Z 
2025-01-09T18:24:10.8502230Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8502290Z         "expected,obtained",
2025-01-09T18:24:10.8502340Z         [
2025-01-09T18:24:10.8502380Z             (
2025-01-09T18:24:10.8502460Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8502550Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8502600Z             ),
2025-01-09T18:24:10.8502720Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8502820Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8502860Z         ],
2025-01-09T18:24:10.8502910Z     )
2025-01-09T18:24:10.8503030Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8503120Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8503480Z 
2025-01-09T18:24:10.8503670Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8503760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8503990Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8504070Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8504290Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8504380Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8504480Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8504530Z     sim = run_tardis(
2025-01-09T18:24:10.8504600Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8504660Z     simulation.run_convergence()
2025-01-09T18:24:10.8504740Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8504860Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8504920Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8505050Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8505140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8505140Z 
2025-01-09T18:24:10.8505340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8505500Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8505670Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8505990Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8506110Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8506220Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8506230Z 
2025-01-09T18:24:10.8506290Z     def initialize_transport_state(
2025-01-09T18:24:10.8506340Z         self,
2025-01-09T18:24:10.8506390Z         simulation_state,
2025-01-09T18:24:10.8506450Z         opacity_state,
2025-01-09T18:24:10.8506500Z         macro_atom_state,
2025-01-09T18:24:10.8506550Z         plasma,
2025-01-09T18:24:10.8506600Z         no_of_packets,
2025-01-09T18:24:10.8506650Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8506710Z         iteration=0,
2025-01-09T18:24:10.8506750Z     ):
2025-01-09T18:24:10.8506850Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8506920Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8506970Z         else:
2025-01-09T18:24:10.8507030Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8507070Z     
2025-01-09T18:24:10.8507180Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8507260Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8507300Z         )
2025-01-09T18:24:10.8507350Z     
2025-01-09T18:24:10.8507450Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8507520Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8507900Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8507900Z 
2025-01-09T18:24:10.8507990Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8508140Z _________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-5] _________
2025-01-09T18:24:10.8508140Z 
2025-01-09T18:24:10.8508280Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8508530Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8508540Z 
2025-01-09T18:24:10.8508650Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8508720Z         "expected,obtained",
2025-01-09T18:24:10.8508760Z         [
2025-01-09T18:24:10.8508810Z             (
2025-01-09T18:24:10.8508900Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8508980Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8509020Z             ),
2025-01-09T18:24:10.8509140Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8509250Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8509290Z         ],
2025-01-09T18:24:10.8509340Z     )
2025-01-09T18:24:10.8509460Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8509560Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8509560Z 
2025-01-09T18:24:10.8509680Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8509770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8509990Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8510080Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8510290Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8510370Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8510480Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8510530Z     sim = run_tardis(
2025-01-09T18:24:10.8510590Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8510710Z     simulation.run_convergence()
2025-01-09T18:24:10.8510800Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8510910Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8510980Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8511100Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8511190Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8511190Z 
2025-01-09T18:24:10.8511390Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8511550Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8511720Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8511930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8512060Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8512170Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8512170Z 
2025-01-09T18:24:10.8512240Z     def initialize_transport_state(
2025-01-09T18:24:10.8512280Z         self,
2025-01-09T18:24:10.8512340Z         simulation_state,
2025-01-09T18:24:10.8512390Z         opacity_state,
2025-01-09T18:24:10.8512450Z         macro_atom_state,
2025-01-09T18:24:10.8512500Z         plasma,
2025-01-09T18:24:10.8512550Z         no_of_packets,
2025-01-09T18:24:10.8512610Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8512660Z         iteration=0,
2025-01-09T18:24:10.8512700Z     ):
2025-01-09T18:24:10.8512800Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8512870Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8512920Z         else:
2025-01-09T18:24:10.8512970Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8513020Z     
2025-01-09T18:24:10.8513130Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8513200Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8513250Z         )
2025-01-09T18:24:10.8513290Z     
2025-01-09T18:24:10.8513390Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8513510Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8513900Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8513900Z 
2025-01-09T18:24:10.8513990Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8514140Z ________ ERROR at setup of TestRPacketPlotter.test_get_frames[dark-10] _________
2025-01-09T18:24:10.8514140Z 
2025-01-09T18:24:10.8514280Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8514530Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8514540Z 
2025-01-09T18:24:10.8514600Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8514660Z         "expected,obtained",
2025-01-09T18:24:10.8514700Z         [
2025-01-09T18:24:10.8519330Z             (
2025-01-09T18:24:10.8519470Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8519550Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8519600Z             ),
2025-01-09T18:24:10.8519730Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8519820Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8519870Z         ],
2025-01-09T18:24:10.8519910Z     )
2025-01-09T18:24:10.8520040Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8520140Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8520360Z 
2025-01-09T18:24:10.8520500Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8520590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8520810Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8520910Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8521120Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8521210Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8521310Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8521370Z     sim = run_tardis(
2025-01-09T18:24:10.8521430Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8521500Z     simulation.run_convergence()
2025-01-09T18:24:10.8521590Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8521700Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8521770Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8521890Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8521980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8521990Z 
2025-01-09T18:24:10.8522190Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8522350Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8522520Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8522730Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8522860Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8522960Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8522970Z 
2025-01-09T18:24:10.8523040Z     def initialize_transport_state(
2025-01-09T18:24:10.8523080Z         self,
2025-01-09T18:24:10.8523140Z         simulation_state,
2025-01-09T18:24:10.8523190Z         opacity_state,
2025-01-09T18:24:10.8523240Z         macro_atom_state,
2025-01-09T18:24:10.8523290Z         plasma,
2025-01-09T18:24:10.8523340Z         no_of_packets,
2025-01-09T18:24:10.8523460Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8523510Z         iteration=0,
2025-01-09T18:24:10.8523560Z     ):
2025-01-09T18:24:10.8523650Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8523730Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8523780Z         else:
2025-01-09T18:24:10.8523830Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8523880Z     
2025-01-09T18:24:10.8523990Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8524060Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8524100Z         )
2025-01-09T18:24:10.8524150Z     
2025-01-09T18:24:10.8524250Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8524320Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8524710Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8524710Z 
2025-01-09T18:24:10.8524810Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8524950Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[10] ________
2025-01-09T18:24:10.8524950Z 
2025-01-09T18:24:10.8525090Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8525340Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8525350Z 
2025-01-09T18:24:10.8525410Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8525920Z         "expected,obtained",
2025-01-09T18:24:10.8525960Z         [
2025-01-09T18:24:10.8526010Z             (
2025-01-09T18:24:10.8526100Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8526170Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8526220Z             ),
2025-01-09T18:24:10.8526350Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8526450Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8526500Z         ],
2025-01-09T18:24:10.8526540Z     )
2025-01-09T18:24:10.8526670Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8526760Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8526760Z 
2025-01-09T18:24:10.8526900Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8526980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8527210Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8527290Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8527510Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8527590Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8527700Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8527750Z     sim = run_tardis(
2025-01-09T18:24:10.8527820Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8527880Z     simulation.run_convergence()
2025-01-09T18:24:10.8527970Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8528070Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8528150Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8528260Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8528360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8528360Z 
2025-01-09T18:24:10.8528560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8528720Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8529190Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8529420Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8529540Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8529660Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8529660Z 
2025-01-09T18:24:10.8529720Z     def initialize_transport_state(
2025-01-09T18:24:10.8529770Z         self,
2025-01-09T18:24:10.8529830Z         simulation_state,
2025-01-09T18:24:10.8529890Z         opacity_state,
2025-01-09T18:24:10.8529940Z         macro_atom_state,
2025-01-09T18:24:10.8529990Z         plasma,
2025-01-09T18:24:10.8530040Z         no_of_packets,
2025-01-09T18:24:10.8530100Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8530150Z         iteration=0,
2025-01-09T18:24:10.8530200Z     ):
2025-01-09T18:24:10.8530300Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8530370Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8530420Z         else:
2025-01-09T18:24:10.8530480Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8530520Z     
2025-01-09T18:24:10.8530630Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8530700Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8530750Z         )
2025-01-09T18:24:10.8530800Z     
2025-01-09T18:24:10.8530900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8530970Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8531440Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8531440Z 
2025-01-09T18:24:10.8531540Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8531690Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[30] ________
2025-01-09T18:24:10.8531690Z 
2025-01-09T18:24:10.8531830Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8532190Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8532190Z 
2025-01-09T18:24:10.8532260Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8532320Z         "expected,obtained",
2025-01-09T18:24:10.8532360Z         [
2025-01-09T18:24:10.8532410Z             (
2025-01-09T18:24:10.8532490Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8532580Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8532630Z             ),
2025-01-09T18:24:10.8532750Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8532840Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8532890Z         ],
2025-01-09T18:24:10.8532940Z     )
2025-01-09T18:24:10.8533070Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8533160Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8533160Z 
2025-01-09T18:24:10.8533290Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8533380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8533600Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8533690Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8533910Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8533990Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8534120Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8534200Z     sim = run_tardis(
2025-01-09T18:24:10.8534410Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8534470Z     simulation.run_convergence()
2025-01-09T18:24:10.8534560Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8534670Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8534740Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8534870Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8534950Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8534960Z 
2025-01-09T18:24:10.8535160Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8535320Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8535500Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8535710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8535840Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8535950Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8535950Z 
2025-01-09T18:24:10.8536010Z     def initialize_transport_state(
2025-01-09T18:24:10.8536060Z         self,
2025-01-09T18:24:10.8536110Z         simulation_state,
2025-01-09T18:24:10.8536160Z         opacity_state,
2025-01-09T18:24:10.8536220Z         macro_atom_state,
2025-01-09T18:24:10.8536270Z         plasma,
2025-01-09T18:24:10.8536340Z         no_of_packets,
2025-01-09T18:24:10.8536400Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8536550Z         iteration=0,
2025-01-09T18:24:10.8536600Z     ):
2025-01-09T18:24:10.8536690Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8536760Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8536820Z         else:
2025-01-09T18:24:10.8536870Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8536920Z     
2025-01-09T18:24:10.8537020Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8537100Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8537140Z         )
2025-01-09T18:24:10.8537190Z     
2025-01-09T18:24:10.8537290Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8537370Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8537750Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8537750Z 
2025-01-09T18:24:10.8537840Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8537990Z ________ ERROR at setup of TestRPacketPlotter.test_get_slider_steps[50] ________
2025-01-09T18:24:10.8537990Z 
2025-01-09T18:24:10.8538130Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8538390Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8538390Z 
2025-01-09T18:24:10.8538450Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8538510Z         "expected,obtained",
2025-01-09T18:24:10.8538560Z         [
2025-01-09T18:24:10.8538600Z             (
2025-01-09T18:24:10.8538690Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8538770Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8538820Z             ),
2025-01-09T18:24:10.8538940Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8539040Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8539080Z         ],
2025-01-09T18:24:10.8539130Z     )
2025-01-09T18:24:10.8539260Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8539360Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8539420Z 
2025-01-09T18:24:10.8539550Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8539640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8539880Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8539970Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8540190Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8540270Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8540380Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8540430Z     sim = run_tardis(
2025-01-09T18:24:10.8540500Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8540560Z     simulation.run_convergence()
2025-01-09T18:24:10.8540650Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8540750Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8540830Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8540950Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8541040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8541040Z 
2025-01-09T18:24:10.8541250Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8541410Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8541580Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8541900Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8542030Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8542130Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8542140Z 
2025-01-09T18:24:10.8542210Z     def initialize_transport_state(
2025-01-09T18:24:10.8542250Z         self,
2025-01-09T18:24:10.8542310Z         simulation_state,
2025-01-09T18:24:10.8542360Z         opacity_state,
2025-01-09T18:24:10.8542420Z         macro_atom_state,
2025-01-09T18:24:10.8542470Z         plasma,
2025-01-09T18:24:10.8542510Z         no_of_packets,
2025-01-09T18:24:10.8542570Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8542620Z         iteration=0,
2025-01-09T18:24:10.8542660Z     ):
2025-01-09T18:24:10.8542760Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8542830Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8542880Z         else:
2025-01-09T18:24:10.8542940Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8542980Z     
2025-01-09T18:24:10.8543090Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8543170Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8543210Z         )
2025-01-09T18:24:10.8543260Z     
2025-01-09T18:24:10.8543360Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8543440Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8543810Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8543820Z 
2025-01-09T18:24:10.8543910Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8544060Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-2] _______
2025-01-09T18:24:10.8544060Z 
2025-01-09T18:24:10.8544220Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8544480Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8544480Z 
2025-01-09T18:24:10.8544550Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8544720Z         "expected,obtained",
2025-01-09T18:24:10.8544760Z         [
2025-01-09T18:24:10.8544810Z             (
2025-01-09T18:24:10.8544890Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8544970Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8545020Z             ),
2025-01-09T18:24:10.8545140Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8545240Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8545280Z         ],
2025-01-09T18:24:10.8545330Z     )
2025-01-09T18:24:10.8545460Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8545550Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8545550Z 
2025-01-09T18:24:10.8545690Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8545770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8545990Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8546080Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8546300Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8546380Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8546480Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8546540Z     sim = run_tardis(
2025-01-09T18:24:10.8546600Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8546980Z     simulation.run_convergence()
2025-01-09T18:24:10.8547070Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8547180Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8547240Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8547370Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8547470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8547470Z 
2025-01-09T18:24:10.8547670Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8547830Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8548000Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8548210Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8548330Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8548450Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8548450Z 
2025-01-09T18:24:10.8548510Z     def initialize_transport_state(
2025-01-09T18:24:10.8548560Z         self,
2025-01-09T18:24:10.8548620Z         simulation_state,
2025-01-09T18:24:10.8548670Z         opacity_state,
2025-01-09T18:24:10.8548730Z         macro_atom_state,
2025-01-09T18:24:10.8548780Z         plasma,
2025-01-09T18:24:10.8548830Z         no_of_packets,
2025-01-09T18:24:10.8548890Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8548940Z         iteration=0,
2025-01-09T18:24:10.8548990Z     ):
2025-01-09T18:24:10.8549080Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8549150Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8549200Z         else:
2025-01-09T18:24:10.8549260Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8549300Z     
2025-01-09T18:24:10.8549410Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8549480Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8549530Z         )
2025-01-09T18:24:10.8549570Z     
2025-01-09T18:24:10.8549670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8549740Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8550360Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8550360Z 
2025-01-09T18:24:10.8550450Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8550610Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-5] _______
2025-01-09T18:24:10.8550610Z 
2025-01-09T18:24:10.8550740Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8551000Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8551010Z 
2025-01-09T18:24:10.8551070Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8551130Z         "expected,obtained",
2025-01-09T18:24:10.8551170Z         [
2025-01-09T18:24:10.8551220Z             (
2025-01-09T18:24:10.8551300Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8551380Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8551430Z             ),
2025-01-09T18:24:10.8551550Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8551650Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8551690Z         ],
2025-01-09T18:24:10.8551740Z     )
2025-01-09T18:24:10.8551870Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8551970Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8551970Z 
2025-01-09T18:24:10.8552180Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8552270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8552490Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8552570Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8552790Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8553020Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8553130Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8553180Z     sim = run_tardis(
2025-01-09T18:24:10.8553240Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8553300Z     simulation.run_convergence()
2025-01-09T18:24:10.8553390Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8553500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8553570Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8553700Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8553780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8553790Z 
2025-01-09T18:24:10.8554000Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8554150Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8554340Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8554560Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8554690Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8554800Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8554800Z 
2025-01-09T18:24:10.8554860Z     def initialize_transport_state(
2025-01-09T18:24:10.8554920Z         self,
2025-01-09T18:24:10.8554970Z         simulation_state,
2025-01-09T18:24:10.8555020Z         opacity_state,
2025-01-09T18:24:10.8555070Z         macro_atom_state,
2025-01-09T18:24:10.8555120Z         plasma,
2025-01-09T18:24:10.8555160Z         no_of_packets,
2025-01-09T18:24:10.8555230Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8555380Z         iteration=0,
2025-01-09T18:24:10.8555430Z     ):
2025-01-09T18:24:10.8555520Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8555600Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8555640Z         else:
2025-01-09T18:24:10.8555700Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8555740Z     
2025-01-09T18:24:10.8555850Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8555920Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8555970Z         )
2025-01-09T18:24:10.8556010Z     
2025-01-09T18:24:10.8556110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8556190Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8556570Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8556580Z 
2025-01-09T18:24:10.8556670Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8556810Z ______ ERROR at setup of TestRPacketPlotter.test_generate_plot[light-10] _______
2025-01-09T18:24:10.8556820Z 
2025-01-09T18:24:10.8556960Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8557210Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8557220Z 
2025-01-09T18:24:10.8557280Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8557340Z         "expected,obtained",
2025-01-09T18:24:10.8557450Z         [
2025-01-09T18:24:10.8557500Z             (
2025-01-09T18:24:10.8557580Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8557660Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8557710Z             ),
2025-01-09T18:24:10.8557830Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8557930Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8557970Z         ],
2025-01-09T18:24:10.8558020Z     )
2025-01-09T18:24:10.8558140Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8558230Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8558230Z 
2025-01-09T18:24:10.8558370Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8558460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8558670Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8558760Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8558970Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8559060Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8559170Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8559220Z     sim = run_tardis(
2025-01-09T18:24:10.8559280Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8559340Z     simulation.run_convergence()
2025-01-09T18:24:10.8559420Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8559530Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8559600Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8559730Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8559820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8559820Z 
2025-01-09T18:24:10.8560020Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8560180Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8560350Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8560620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8560740Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8560860Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8560860Z 
2025-01-09T18:24:10.8560930Z     def initialize_transport_state(
2025-01-09T18:24:10.8560970Z         self,
2025-01-09T18:24:10.8561030Z         simulation_state,
2025-01-09T18:24:10.8561080Z         opacity_state,
2025-01-09T18:24:10.8561130Z         macro_atom_state,
2025-01-09T18:24:10.8561180Z         plasma,
2025-01-09T18:24:10.8561230Z         no_of_packets,
2025-01-09T18:24:10.8561290Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8561340Z         iteration=0,
2025-01-09T18:24:10.8561380Z     ):
2025-01-09T18:24:10.8561480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8561560Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8561600Z         else:
2025-01-09T18:24:10.8561660Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8561700Z     
2025-01-09T18:24:10.8561800Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8561880Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8561920Z         )
2025-01-09T18:24:10.8561970Z     
2025-01-09T18:24:10.8562070Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8562140Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8562530Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8562580Z 
2025-01-09T18:24:10.8562680Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8562830Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-2] ________
2025-01-09T18:24:10.8562830Z 
2025-01-09T18:24:10.8562970Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8563230Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8563230Z 
2025-01-09T18:24:10.8563300Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8563360Z         "expected,obtained",
2025-01-09T18:24:10.8563400Z         [
2025-01-09T18:24:10.8563450Z             (
2025-01-09T18:24:10.8563530Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8563610Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8563670Z             ),
2025-01-09T18:24:10.8563790Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8563890Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8563930Z         ],
2025-01-09T18:24:10.8563980Z     )
2025-01-09T18:24:10.8564110Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8564200Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8564210Z 
2025-01-09T18:24:10.8564330Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8564420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8564640Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8564730Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8564950Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8565040Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8565150Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8565200Z     sim = run_tardis(
2025-01-09T18:24:10.8565260Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8565370Z     simulation.run_convergence()
2025-01-09T18:24:10.8565460Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8565570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8565640Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8565770Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8565850Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8565850Z 
2025-01-09T18:24:10.8566060Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8566220Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8566400Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8566610Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8566740Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8566850Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8566850Z 
2025-01-09T18:24:10.8566920Z     def initialize_transport_state(
2025-01-09T18:24:10.8566960Z         self,
2025-01-09T18:24:10.8567020Z         simulation_state,
2025-01-09T18:24:10.8567070Z         opacity_state,
2025-01-09T18:24:10.8567120Z         macro_atom_state,
2025-01-09T18:24:10.8567170Z         plasma,
2025-01-09T18:24:10.8567220Z         no_of_packets,
2025-01-09T18:24:10.8567280Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8567320Z         iteration=0,
2025-01-09T18:24:10.8567740Z     ):
2025-01-09T18:24:10.8567840Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8567920Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8567960Z         else:
2025-01-09T18:24:10.8568030Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8568070Z     
2025-01-09T18:24:10.8568180Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8568250Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8568300Z         )
2025-01-09T18:24:10.8568350Z     
2025-01-09T18:24:10.8568440Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8568530Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8568900Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8568910Z 
2025-01-09T18:24:10.8569010Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8569150Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-5] ________
2025-01-09T18:24:10.8569160Z 
2025-01-09T18:24:10.8569290Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8569540Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8569550Z 
2025-01-09T18:24:10.8569620Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8569680Z         "expected,obtained",
2025-01-09T18:24:10.8569730Z         [
2025-01-09T18:24:10.8569770Z             (
2025-01-09T18:24:10.8569850Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8569940Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8569980Z             ),
2025-01-09T18:24:10.8570110Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8570210Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8570250Z         ],
2025-01-09T18:24:10.8570300Z     )
2025-01-09T18:24:10.8570420Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8570510Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8570770Z 
2025-01-09T18:24:10.8570920Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8571010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8571230Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8571310Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8571530Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8571610Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8575630Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8575740Z     sim = run_tardis(
2025-01-09T18:24:10.8575810Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8575870Z     simulation.run_convergence()
2025-01-09T18:24:10.8575960Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8576080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8576150Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8576270Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8576360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8576360Z 
2025-01-09T18:24:10.8576590Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8576750Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8576930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8577370Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8577510Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8577620Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8577620Z 
2025-01-09T18:24:10.8577690Z     def initialize_transport_state(
2025-01-09T18:24:10.8577730Z         self,
2025-01-09T18:24:10.8577790Z         simulation_state,
2025-01-09T18:24:10.8577840Z         opacity_state,
2025-01-09T18:24:10.8577890Z         macro_atom_state,
2025-01-09T18:24:10.8577950Z         plasma,
2025-01-09T18:24:10.8578000Z         no_of_packets,
2025-01-09T18:24:10.8578060Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8578110Z         iteration=0,
2025-01-09T18:24:10.8578160Z     ):
2025-01-09T18:24:10.8578250Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8578330Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8578380Z         else:
2025-01-09T18:24:10.8578440Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8578480Z     
2025-01-09T18:24:10.8578590Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8578660Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8578710Z         )
2025-01-09T18:24:10.8578750Z     
2025-01-09T18:24:10.8578850Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8578930Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8579300Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8579310Z 
2025-01-09T18:24:10.8579400Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8579540Z _______ ERROR at setup of TestRPacketPlotter.test_generate_plot[dark-10] _______
2025-01-09T18:24:10.8579540Z 
2025-01-09T18:24:10.8579680Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:10.8579940Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:10.8579940Z 
2025-01-09T18:24:10.8580010Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.8580160Z         "expected,obtained",
2025-01-09T18:24:10.8580210Z         [
2025-01-09T18:24:10.8580250Z             (
2025-01-09T18:24:10.8580340Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:10.8580420Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:10.8580460Z             ),
2025-01-09T18:24:10.8580590Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:10.8580690Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:10.8580730Z         ],
2025-01-09T18:24:10.8580770Z     )
2025-01-09T18:24:10.8580900Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:10.8580990Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8581000Z 
2025-01-09T18:24:10.8581130Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:10.8581220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8581440Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8581530Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8581740Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:10.8581830Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.8581930Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:10.8581980Z     sim = run_tardis(
2025-01-09T18:24:10.8582040Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8582110Z     simulation.run_convergence()
2025-01-09T18:24:10.8582260Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8582380Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8582450Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8582570Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8582660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8582670Z 
2025-01-09T18:24:10.8582870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:10.8583030Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:10.8583200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:10.8583420Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:10.8583540Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:10.8583650Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8583660Z 
2025-01-09T18:24:10.8583720Z     def initialize_transport_state(
2025-01-09T18:24:10.8583770Z         self,
2025-01-09T18:24:10.8583820Z         simulation_state,
2025-01-09T18:24:10.8583870Z         opacity_state,
2025-01-09T18:24:10.8583930Z         macro_atom_state,
2025-01-09T18:24:10.8583980Z         plasma,
2025-01-09T18:24:10.8584120Z         no_of_packets,
2025-01-09T18:24:10.8584180Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8584230Z         iteration=0,
2025-01-09T18:24:10.8584280Z     ):
2025-01-09T18:24:10.8584370Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8584450Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8584490Z         else:
2025-01-09T18:24:10.8584550Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8584600Z     
2025-01-09T18:24:10.8584700Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8584780Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8584830Z         )
2025-01-09T18:24:10.8584870Z     
2025-01-09T18:24:10.8584970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8585050Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8585490Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8585490Z 
2025-01-09T18:24:10.8585590Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8585740Z _ ERROR at setup of TestSDECPlotter.test_parse_species_list[_full_species_list] _
2025-01-09T18:24:10.8585750Z 
2025-01-09T18:24:10.8586280Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8586570Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8586580Z 
2025-01-09T18:24:10.8586640Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8586760Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8586800Z         """
2025-01-09T18:24:10.8586920Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8586960Z     
2025-01-09T18:24:10.8587020Z         Parameters
2025-01-09T18:24:10.8587070Z         ----------
2025-01-09T18:24:10.8587180Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8587280Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8587370Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8587420Z             Atomic data.
2025-01-09T18:24:10.8587520Z     
2025-01-09T18:24:10.8587570Z         Returns
2025-01-09T18:24:10.8587620Z         -------
2025-01-09T18:24:10.8587700Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8587750Z             Simulation object.
2025-01-09T18:24:10.8587800Z         """
2025-01-09T18:24:10.8587920Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8588060Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8588150Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8588250Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8588350Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8588490Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8588600Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8588670Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8588750Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8588800Z >       sim = run_tardis(
2025-01-09T18:24:10.8588860Z             config_verysimple,
2025-01-09T18:24:10.8588950Z             atom_data=atomic_data,
2025-01-09T18:24:10.8589030Z             show_convergence_plots=False,
2025-01-09T18:24:10.8589090Z             log_level="CRITICAl",
2025-01-09T18:24:10.8589140Z         )
2025-01-09T18:24:10.8589140Z 
2025-01-09T18:24:10.8589260Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8589360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8589430Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8589490Z     simulation.run_convergence()
2025-01-09T18:24:10.8589580Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8589690Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8589760Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8589880Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8589970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8589970Z 
2025-01-09T18:24:10.8590180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8590410Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8590590Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8590800Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8590920Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8591030Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8591040Z 
2025-01-09T18:24:10.8591100Z     def initialize_transport_state(
2025-01-09T18:24:10.8591150Z         self,
2025-01-09T18:24:10.8591210Z         simulation_state,
2025-01-09T18:24:10.8591260Z         opacity_state,
2025-01-09T18:24:10.8591320Z         macro_atom_state,
2025-01-09T18:24:10.8591360Z         plasma,
2025-01-09T18:24:10.8591410Z         no_of_packets,
2025-01-09T18:24:10.8591470Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8591520Z         iteration=0,
2025-01-09T18:24:10.8591560Z     ):
2025-01-09T18:24:10.8591660Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8591730Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8591780Z         else:
2025-01-09T18:24:10.8591840Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8591890Z     
2025-01-09T18:24:10.8591990Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8592060Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8592110Z         )
2025-01-09T18:24:10.8592160Z     
2025-01-09T18:24:10.8592260Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8592800Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8593200Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8593210Z 
2025-01-09T18:24:10.8593310Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8593440Z ---------------------------- Captured stdout setup -----------------------------
2025-01-09T18:24:10.8593610Z log_level is defined both in Functional Argument & YAML Configuration {debug section}
2025-01-09T18:24:10.8593720Z log_level = CRITICAL will be used for Log Level Determination
2025-01-09T18:24:10.8593730Z 
2025-01-09T18:24:10.8593880Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_species_list] ___
2025-01-09T18:24:10.8593890Z 
2025-01-09T18:24:10.8594430Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8594720Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8594730Z 
2025-01-09T18:24:10.8594790Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8621870Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8622050Z         """
2025-01-09T18:24:10.8622190Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8622230Z     
2025-01-09T18:24:10.8622300Z         Parameters
2025-01-09T18:24:10.8622350Z         ----------
2025-01-09T18:24:10.8622470Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8622580Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8622670Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8622750Z             Atomic data.
2025-01-09T18:24:10.8622790Z     
2025-01-09T18:24:10.8622840Z         Returns
2025-01-09T18:24:10.8622880Z         -------
2025-01-09T18:24:10.8622970Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8623030Z             Simulation object.
2025-01-09T18:24:10.8623540Z         """
2025-01-09T18:24:10.8623670Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8623810Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8623900Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8624000Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8624120Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8624260Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8624370Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8624460Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8624530Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8624580Z >       sim = run_tardis(
2025-01-09T18:24:10.8624640Z             config_verysimple,
2025-01-09T18:24:10.8624700Z             atom_data=atomic_data,
2025-01-09T18:24:10.8624770Z             show_convergence_plots=False,
2025-01-09T18:24:10.8624840Z             log_level="CRITICAl",
2025-01-09T18:24:10.8624890Z         )
2025-01-09T18:24:10.8624890Z 
2025-01-09T18:24:10.8625000Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8625100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8625180Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8625260Z     simulation.run_convergence()
2025-01-09T18:24:10.8625370Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8625480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8625740Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8625860Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8625960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8625960Z 
2025-01-09T18:24:10.8626170Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8626360Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8626550Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8626770Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8626900Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8627020Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8627030Z 
2025-01-09T18:24:10.8627100Z     def initialize_transport_state(
2025-01-09T18:24:10.8627150Z         self,
2025-01-09T18:24:10.8627210Z         simulation_state,
2025-01-09T18:24:10.8627260Z         opacity_state,
2025-01-09T18:24:10.8627320Z         macro_atom_state,
2025-01-09T18:24:10.8627360Z         plasma,
2025-01-09T18:24:10.8627420Z         no_of_packets,
2025-01-09T18:24:10.8627480Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8627530Z         iteration=0,
2025-01-09T18:24:10.8627570Z     ):
2025-01-09T18:24:10.8627680Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8627760Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8627810Z         else:
2025-01-09T18:24:10.8627870Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8627910Z     
2025-01-09T18:24:10.8628040Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8628120Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8628170Z         )
2025-01-09T18:24:10.8628210Z     
2025-01-09T18:24:10.8628330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8628410Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8628830Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8628910Z 
2025-01-09T18:24:10.8629010Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8629170Z ___ ERROR at setup of TestSDECPlotter.test_parse_species_list[_keep_colour] ____
2025-01-09T18:24:10.8629170Z 
2025-01-09T18:24:10.8629700Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8629980Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8629990Z 
2025-01-09T18:24:10.8630060Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8630160Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8630300Z         """
2025-01-09T18:24:10.8630420Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8630470Z     
2025-01-09T18:24:10.8630520Z         Parameters
2025-01-09T18:24:10.8630570Z         ----------
2025-01-09T18:24:10.8630680Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8630780Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8630870Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8630920Z             Atomic data.
2025-01-09T18:24:10.8630970Z     
2025-01-09T18:24:10.8631020Z         Returns
2025-01-09T18:24:10.8631070Z         -------
2025-01-09T18:24:10.8631150Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8631280Z             Simulation object.
2025-01-09T18:24:10.8631330Z         """
2025-01-09T18:24:10.8631450Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8631580Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8631680Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8631780Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8631890Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8632030Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8632130Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8632220Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8632290Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8632340Z >       sim = run_tardis(
2025-01-09T18:24:10.8632400Z             config_verysimple,
2025-01-09T18:24:10.8632460Z             atom_data=atomic_data,
2025-01-09T18:24:10.8632520Z             show_convergence_plots=False,
2025-01-09T18:24:10.8632580Z             log_level="CRITICAl",
2025-01-09T18:24:10.8632630Z         )
2025-01-09T18:24:10.8632630Z 
2025-01-09T18:24:10.8632740Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8632830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8632900Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8632980Z     simulation.run_convergence()
2025-01-09T18:24:10.8633070Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8633180Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8633250Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8633380Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8633480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8633490Z 
2025-01-09T18:24:10.8633700Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8633860Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8634030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8634340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8634460Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8634570Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8634580Z 
2025-01-09T18:24:10.8634640Z     def initialize_transport_state(
2025-01-09T18:24:10.8634690Z         self,
2025-01-09T18:24:10.8634740Z         simulation_state,
2025-01-09T18:24:10.8634790Z         opacity_state,
2025-01-09T18:24:10.8634840Z         macro_atom_state,
2025-01-09T18:24:10.8634890Z         plasma,
2025-01-09T18:24:10.8634940Z         no_of_packets,
2025-01-09T18:24:10.8635010Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8635050Z         iteration=0,
2025-01-09T18:24:10.8635100Z     ):
2025-01-09T18:24:10.8635190Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8635270Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8635320Z         else:
2025-01-09T18:24:10.8635370Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8635420Z     
2025-01-09T18:24:10.8635520Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8635600Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8635640Z         )
2025-01-09T18:24:10.8635690Z     
2025-01-09T18:24:10.8635780Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8635860Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8636240Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8636310Z 
2025-01-09T18:24:10.8636410Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8636630Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data0] _
2025-01-09T18:24:10.8636640Z 
2025-01-09T18:24:10.8637160Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8637440Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8637450Z 
2025-01-09T18:24:10.8637510Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8637630Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8637680Z         """
2025-01-09T18:24:10.8637800Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8637840Z     
2025-01-09T18:24:10.8637890Z         Parameters
2025-01-09T18:24:10.8637930Z         ----------
2025-01-09T18:24:10.8638050Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8638150Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8638250Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8638310Z             Atomic data.
2025-01-09T18:24:10.8638350Z     
2025-01-09T18:24:10.8638390Z         Returns
2025-01-09T18:24:10.8638440Z         -------
2025-01-09T18:24:10.8638520Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8638570Z             Simulation object.
2025-01-09T18:24:10.8638620Z         """
2025-01-09T18:24:10.8638740Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8638880Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8638960Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8639060Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8639170Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8639350Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8639470Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8639540Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8639620Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8639670Z >       sim = run_tardis(
2025-01-09T18:24:10.8639730Z             config_verysimple,
2025-01-09T18:24:10.8639790Z             atom_data=atomic_data,
2025-01-09T18:24:10.8639850Z             show_convergence_plots=False,
2025-01-09T18:24:10.8639910Z             log_level="CRITICAl",
2025-01-09T18:24:10.8639960Z         )
2025-01-09T18:24:10.8639970Z 
2025-01-09T18:24:10.8640070Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8640170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8640230Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8640290Z     simulation.run_convergence()
2025-01-09T18:24:10.8640390Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8640500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8640570Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8640690Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8640780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8640780Z 
2025-01-09T18:24:10.8640990Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8641150Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8641620Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8641850Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8641970Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8642090Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8642090Z 
2025-01-09T18:24:10.8642160Z     def initialize_transport_state(
2025-01-09T18:24:10.8642200Z         self,
2025-01-09T18:24:10.8642260Z         simulation_state,
2025-01-09T18:24:10.8642310Z         opacity_state,
2025-01-09T18:24:10.8642370Z         macro_atom_state,
2025-01-09T18:24:10.8642410Z         plasma,
2025-01-09T18:24:10.8642460Z         no_of_packets,
2025-01-09T18:24:10.8642520Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8642570Z         iteration=0,
2025-01-09T18:24:10.8642610Z     ):
2025-01-09T18:24:10.8642720Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8642790Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8642830Z         else:
2025-01-09T18:24:10.8642900Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8642940Z     
2025-01-09T18:24:10.8643040Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8643120Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8643170Z         )
2025-01-09T18:24:10.8643210Z     
2025-01-09T18:24:10.8643310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8643380Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8643770Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8643780Z 
2025-01-09T18:24:10.8643860Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8644080Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data1] _
2025-01-09T18:24:10.8644080Z 
2025-01-09T18:24:10.8644600Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8645220Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8645230Z 
2025-01-09T18:24:10.8645300Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8645410Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8645460Z         """
2025-01-09T18:24:10.8645580Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8645630Z     
2025-01-09T18:24:10.8645680Z         Parameters
2025-01-09T18:24:10.8645730Z         ----------
2025-01-09T18:24:10.8645850Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8645940Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8646040Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8646090Z             Atomic data.
2025-01-09T18:24:10.8646140Z     
2025-01-09T18:24:10.8646180Z         Returns
2025-01-09T18:24:10.8646230Z         -------
2025-01-09T18:24:10.8646310Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8646370Z             Simulation object.
2025-01-09T18:24:10.8646410Z         """
2025-01-09T18:24:10.8646540Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8646670Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8646760Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8646850Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8647050Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8647190Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8647300Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8647380Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8647450Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8647510Z >       sim = run_tardis(
2025-01-09T18:24:10.8647560Z             config_verysimple,
2025-01-09T18:24:10.8647620Z             atom_data=atomic_data,
2025-01-09T18:24:10.8647690Z             show_convergence_plots=False,
2025-01-09T18:24:10.8647750Z             log_level="CRITICAl",
2025-01-09T18:24:10.8647790Z         )
2025-01-09T18:24:10.8647790Z 
2025-01-09T18:24:10.8647900Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8647990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8648060Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8648130Z     simulation.run_convergence()
2025-01-09T18:24:10.8648210Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8648320Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8648390Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8648520Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8648610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8648610Z 
2025-01-09T18:24:10.8648820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8648970Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8649140Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8649360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8649480Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8649590Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8649600Z 
2025-01-09T18:24:10.8649660Z     def initialize_transport_state(
2025-01-09T18:24:10.8649760Z         self,
2025-01-09T18:24:10.8649820Z         simulation_state,
2025-01-09T18:24:10.8649870Z         opacity_state,
2025-01-09T18:24:10.8649920Z         macro_atom_state,
2025-01-09T18:24:10.8649970Z         plasma,
2025-01-09T18:24:10.8650020Z         no_of_packets,
2025-01-09T18:24:10.8650090Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8650150Z         iteration=0,
2025-01-09T18:24:10.8650200Z     ):
2025-01-09T18:24:10.8650290Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8650360Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8650420Z         else:
2025-01-09T18:24:10.8650470Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8650520Z     
2025-01-09T18:24:10.8650730Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8650810Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8650850Z         )
2025-01-09T18:24:10.8650900Z     
2025-01-09T18:24:10.8651000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8651090Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8651470Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8651470Z 
2025-01-09T18:24:10.8651560Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8651780Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data2] _
2025-01-09T18:24:10.8651780Z 
2025-01-09T18:24:10.8652300Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8652710Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8652710Z 
2025-01-09T18:24:10.8652780Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8652890Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8652930Z         """
2025-01-09T18:24:10.8653050Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8653100Z     
2025-01-09T18:24:10.8653150Z         Parameters
2025-01-09T18:24:10.8653200Z         ----------
2025-01-09T18:24:10.8653310Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8653420Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8653510Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8653560Z             Atomic data.
2025-01-09T18:24:10.8653600Z     
2025-01-09T18:24:10.8653650Z         Returns
2025-01-09T18:24:10.8653700Z         -------
2025-01-09T18:24:10.8653770Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8653830Z             Simulation object.
2025-01-09T18:24:10.8653880Z         """
2025-01-09T18:24:10.8654000Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8654140Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8654230Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8654330Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8654430Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8654570Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8654690Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8654760Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8654830Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8654880Z >       sim = run_tardis(
2025-01-09T18:24:10.8660310Z             config_verysimple,
2025-01-09T18:24:10.8660640Z             atom_data=atomic_data,
2025-01-09T18:24:10.8660720Z             show_convergence_plots=False,
2025-01-09T18:24:10.8660780Z             log_level="CRITICAl",
2025-01-09T18:24:10.8660820Z         )
2025-01-09T18:24:10.8660830Z 
2025-01-09T18:24:10.8660950Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8661040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8661110Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8661170Z     simulation.run_convergence()
2025-01-09T18:24:10.8661270Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8661390Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8661460Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8661580Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8661670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8661680Z 
2025-01-09T18:24:10.8661890Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8662120Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8662300Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8662520Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8662640Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8662750Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8662830Z 
2025-01-09T18:24:10.8662900Z     def initialize_transport_state(
2025-01-09T18:24:10.8662950Z         self,
2025-01-09T18:24:10.8663000Z         simulation_state,
2025-01-09T18:24:10.8663060Z         opacity_state,
2025-01-09T18:24:10.8663110Z         macro_atom_state,
2025-01-09T18:24:10.8663150Z         plasma,
2025-01-09T18:24:10.8663210Z         no_of_packets,
2025-01-09T18:24:10.8663270Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8663320Z         iteration=0,
2025-01-09T18:24:10.8663370Z     ):
2025-01-09T18:24:10.8663470Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8663540Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8663590Z         else:
2025-01-09T18:24:10.8663640Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8663690Z     
2025-01-09T18:24:10.8663800Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8663880Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8663930Z         )
2025-01-09T18:24:10.8663980Z     
2025-01-09T18:24:10.8664080Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8664160Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8664670Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8664680Z 
2025-01-09T18:24:10.8664780Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8664990Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data3] _
2025-01-09T18:24:10.8665000Z 
2025-01-09T18:24:10.8665530Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8665810Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8665820Z 
2025-01-09T18:24:10.8665890Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8666000Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8666090Z         """
2025-01-09T18:24:10.8666220Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8666260Z     
2025-01-09T18:24:10.8666310Z         Parameters
2025-01-09T18:24:10.8666360Z         ----------
2025-01-09T18:24:10.8666490Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8666580Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8666670Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8666730Z             Atomic data.
2025-01-09T18:24:10.8666770Z     
2025-01-09T18:24:10.8666820Z         Returns
2025-01-09T18:24:10.8666870Z         -------
2025-01-09T18:24:10.8666950Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8667010Z             Simulation object.
2025-01-09T18:24:10.8667050Z         """
2025-01-09T18:24:10.8667170Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8667310Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8667400Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8667500Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8667600Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8667740Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8667850Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8667920Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8668000Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8668320Z >       sim = run_tardis(
2025-01-09T18:24:10.8668380Z             config_verysimple,
2025-01-09T18:24:10.8668440Z             atom_data=atomic_data,
2025-01-09T18:24:10.8668510Z             show_convergence_plots=False,
2025-01-09T18:24:10.8668570Z             log_level="CRITICAl",
2025-01-09T18:24:10.8668610Z         )
2025-01-09T18:24:10.8668620Z 
2025-01-09T18:24:10.8668730Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8668820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8668880Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8668950Z     simulation.run_convergence()
2025-01-09T18:24:10.8669030Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8669140Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8669210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8669340Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8669430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8669430Z 
2025-01-09T18:24:10.8669630Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8669790Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8669970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8670180Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8670300Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8670420Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8670420Z 
2025-01-09T18:24:10.8670480Z     def initialize_transport_state(
2025-01-09T18:24:10.8670530Z         self,
2025-01-09T18:24:10.8670580Z         simulation_state,
2025-01-09T18:24:10.8670640Z         opacity_state,
2025-01-09T18:24:10.8670690Z         macro_atom_state,
2025-01-09T18:24:10.8670740Z         plasma,
2025-01-09T18:24:10.8670790Z         no_of_packets,
2025-01-09T18:24:10.8670850Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8670900Z         iteration=0,
2025-01-09T18:24:10.8670940Z     ):
2025-01-09T18:24:10.8671040Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8671370Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8671420Z         else:
2025-01-09T18:24:10.8671470Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8671520Z     
2025-01-09T18:24:10.8671620Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8671700Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8671740Z         )
2025-01-09T18:24:10.8671790Z     
2025-01-09T18:24:10.8671890Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8671960Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8672350Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8672350Z 
2025-01-09T18:24:10.8672450Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8672910Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data4] _
2025-01-09T18:24:10.8672920Z 
2025-01-09T18:24:10.8673450Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8673730Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8673730Z 
2025-01-09T18:24:10.8673790Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8674020Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8674070Z         """
2025-01-09T18:24:10.8674190Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8674230Z     
2025-01-09T18:24:10.8674280Z         Parameters
2025-01-09T18:24:10.8674330Z         ----------
2025-01-09T18:24:10.8674450Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8674550Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8674640Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8674700Z             Atomic data.
2025-01-09T18:24:10.8674740Z     
2025-01-09T18:24:10.8674790Z         Returns
2025-01-09T18:24:10.8674830Z         -------
2025-01-09T18:24:10.8674910Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8674970Z             Simulation object.
2025-01-09T18:24:10.8675020Z         """
2025-01-09T18:24:10.8675140Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8675290Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8675380Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8675480Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8675580Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8675720Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8675830Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8675910Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8675990Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8676040Z >       sim = run_tardis(
2025-01-09T18:24:10.8676090Z             config_verysimple,
2025-01-09T18:24:10.8676150Z             atom_data=atomic_data,
2025-01-09T18:24:10.8676220Z             show_convergence_plots=False,
2025-01-09T18:24:10.8676280Z             log_level="CRITICAl",
2025-01-09T18:24:10.8676320Z         )
2025-01-09T18:24:10.8676330Z 
2025-01-09T18:24:10.8676430Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8676530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8676650Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8676710Z     simulation.run_convergence()
2025-01-09T18:24:10.8676800Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8676910Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8676980Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8677320Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8677430Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8677430Z 
2025-01-09T18:24:10.8677640Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8677800Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8678020Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8678360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8678490Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8678590Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8678600Z 
2025-01-09T18:24:10.8678670Z     def initialize_transport_state(
2025-01-09T18:24:10.8678710Z         self,
2025-01-09T18:24:10.8678770Z         simulation_state,
2025-01-09T18:24:10.8678820Z         opacity_state,
2025-01-09T18:24:10.8678880Z         macro_atom_state,
2025-01-09T18:24:10.8678930Z         plasma,
2025-01-09T18:24:10.8678980Z         no_of_packets,
2025-01-09T18:24:10.8679030Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8679170Z         iteration=0,
2025-01-09T18:24:10.8679210Z     ):
2025-01-09T18:24:10.8679310Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8679390Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8679430Z         else:
2025-01-09T18:24:10.8679490Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8679530Z     
2025-01-09T18:24:10.8679640Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8679710Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8679760Z         )
2025-01-09T18:24:10.8679800Z     
2025-01-09T18:24:10.8679900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8679980Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8680360Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8680370Z 
2025-01-09T18:24:10.8680760Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8681000Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data5] _
2025-01-09T18:24:10.8681000Z 
2025-01-09T18:24:10.8681520Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8681810Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8681810Z 
2025-01-09T18:24:10.8681880Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8681990Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8682040Z         """
2025-01-09T18:24:10.8682150Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8682200Z     
2025-01-09T18:24:10.8682250Z         Parameters
2025-01-09T18:24:10.8682300Z         ----------
2025-01-09T18:24:10.8682550Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8682650Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8682830Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8682880Z             Atomic data.
2025-01-09T18:24:10.8682920Z     
2025-01-09T18:24:10.8682970Z         Returns
2025-01-09T18:24:10.8683020Z         -------
2025-01-09T18:24:10.8683390Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8683560Z             Simulation object.
2025-01-09T18:24:10.8683610Z         """
2025-01-09T18:24:10.8683740Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8683880Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8683980Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8684080Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8684190Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8684330Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8684440Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8684520Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8684590Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8684650Z >       sim = run_tardis(
2025-01-09T18:24:10.8684710Z             config_verysimple,
2025-01-09T18:24:10.8684770Z             atom_data=atomic_data,
2025-01-09T18:24:10.8684830Z             show_convergence_plots=False,
2025-01-09T18:24:10.8684890Z             log_level="CRITICAl",
2025-01-09T18:24:10.8684940Z         )
2025-01-09T18:24:10.8684940Z 
2025-01-09T18:24:10.8685050Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8685290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8685360Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8685420Z     simulation.run_convergence()
2025-01-09T18:24:10.8685510Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8685630Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8685700Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8685830Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8685910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8685920Z 
2025-01-09T18:24:10.8686200Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8686360Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8686540Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8686760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8686880Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8686990Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8686990Z 
2025-01-09T18:24:10.8687900Z     def initialize_transport_state(
2025-01-09T18:24:10.8688240Z         self,
2025-01-09T18:24:10.8688410Z         simulation_state,
2025-01-09T18:24:10.8688580Z         opacity_state,
2025-01-09T18:24:10.8688740Z         macro_atom_state,
2025-01-09T18:24:10.8688900Z         plasma,
2025-01-09T18:24:10.8689050Z         no_of_packets,
2025-01-09T18:24:10.8689240Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8689390Z         iteration=0,
2025-01-09T18:24:10.8689540Z     ):
2025-01-09T18:24:10.8689810Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8690030Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8690230Z         else:
2025-01-09T18:24:10.8690410Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8690560Z     
2025-01-09T18:24:10.8690850Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8691060Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8691590Z         )
2025-01-09T18:24:10.8691740Z     
2025-01-09T18:24:10.8692010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8692220Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8693280Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8693290Z 
2025-01-09T18:24:10.8693560Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8694130Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data6] _
2025-01-09T18:24:10.8694150Z 
2025-01-09T18:24:10.8695630Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8696380Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8696400Z 
2025-01-09T18:24:10.8696590Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8696890Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8697040Z         """
2025-01-09T18:24:10.8697350Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8697490Z     
2025-01-09T18:24:10.8697650Z         Parameters
2025-01-09T18:24:10.8697800Z         ----------
2025-01-09T18:24:10.8698230Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8699200Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8699670Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8699890Z             Atomic data.
2025-01-09T18:24:10.8699940Z     
2025-01-09T18:24:10.8699990Z         Returns
2025-01-09T18:24:10.8700040Z         -------
2025-01-09T18:24:10.8700140Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8700200Z             Simulation object.
2025-01-09T18:24:10.8700250Z         """
2025-01-09T18:24:10.8700380Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8700530Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8700620Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8700720Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8700820Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8700970Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8701090Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8701160Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8701240Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8701290Z >       sim = run_tardis(
2025-01-09T18:24:10.8701360Z             config_verysimple,
2025-01-09T18:24:10.8701410Z             atom_data=atomic_data,
2025-01-09T18:24:10.8701480Z             show_convergence_plots=False,
2025-01-09T18:24:10.8701540Z             log_level="CRITICAl",
2025-01-09T18:24:10.8701590Z         )
2025-01-09T18:24:10.8701590Z 
2025-01-09T18:24:10.8701710Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8701800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8701860Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8701930Z     simulation.run_convergence()
2025-01-09T18:24:10.8702020Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8702130Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8702210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8702330Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8702900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8702900Z 
2025-01-09T18:24:10.8703110Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8703280Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8703450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8703670Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8703820Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8703940Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8703940Z 
2025-01-09T18:24:10.8704010Z     def initialize_transport_state(
2025-01-09T18:24:10.8704050Z         self,
2025-01-09T18:24:10.8704110Z         simulation_state,
2025-01-09T18:24:10.8704160Z         opacity_state,
2025-01-09T18:24:10.8704220Z         macro_atom_state,
2025-01-09T18:24:10.8704270Z         plasma,
2025-01-09T18:24:10.8704320Z         no_of_packets,
2025-01-09T18:24:10.8704380Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8704430Z         iteration=0,
2025-01-09T18:24:10.8704470Z     ):
2025-01-09T18:24:10.8704580Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8704650Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8704700Z         else:
2025-01-09T18:24:10.8704760Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8704800Z     
2025-01-09T18:24:10.8704910Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8705110Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8705160Z         )
2025-01-09T18:24:10.8705200Z     
2025-01-09T18:24:10.8705310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8705380Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8705900Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8705910Z 
2025-01-09T18:24:10.8706000Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8706220Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data7] _
2025-01-09T18:24:10.8706230Z 
2025-01-09T18:24:10.8706760Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8707040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8707050Z 
2025-01-09T18:24:10.8707120Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8707260Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8707320Z         """
2025-01-09T18:24:10.8707450Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8707500Z     
2025-01-09T18:24:10.8707550Z         Parameters
2025-01-09T18:24:10.8707600Z         ----------
2025-01-09T18:24:10.8707720Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8707810Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8707910Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8707970Z             Atomic data.
2025-01-09T18:24:10.8708030Z     
2025-01-09T18:24:10.8708070Z         Returns
2025-01-09T18:24:10.8708130Z         -------
2025-01-09T18:24:10.8708210Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8708260Z             Simulation object.
2025-01-09T18:24:10.8708310Z         """
2025-01-09T18:24:10.8708430Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8708660Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8708760Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8708860Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8708960Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8709110Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8709210Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8709290Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8709360Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8709420Z >       sim = run_tardis(
2025-01-09T18:24:10.8709470Z             config_verysimple,
2025-01-09T18:24:10.8709530Z             atom_data=atomic_data,
2025-01-09T18:24:10.8709600Z             show_convergence_plots=False,
2025-01-09T18:24:10.8709660Z             log_level="CRITICAl",
2025-01-09T18:24:10.8709710Z         )
2025-01-09T18:24:10.8709710Z 
2025-01-09T18:24:10.8709820Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8709910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8709990Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8710060Z     simulation.run_convergence()
2025-01-09T18:24:10.8710150Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8710260Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8710320Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8710530Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8710620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8710630Z 
2025-01-09T18:24:10.8710830Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8710990Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8711170Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8711380Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8711520Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8711630Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8711630Z 
2025-01-09T18:24:10.8711690Z     def initialize_transport_state(
2025-01-09T18:24:10.8711740Z         self,
2025-01-09T18:24:10.8711800Z         simulation_state,
2025-01-09T18:24:10.8711860Z         opacity_state,
2025-01-09T18:24:10.8711910Z         macro_atom_state,
2025-01-09T18:24:10.8711960Z         plasma,
2025-01-09T18:24:10.8712010Z         no_of_packets,
2025-01-09T18:24:10.8712070Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8712120Z         iteration=0,
2025-01-09T18:24:10.8712170Z     ):
2025-01-09T18:24:10.8712270Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8712340Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8712380Z         else:
2025-01-09T18:24:10.8712440Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8712490Z     
2025-01-09T18:24:10.8712600Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8712670Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8712710Z         )
2025-01-09T18:24:10.8712760Z     
2025-01-09T18:24:10.8712860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8712940Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8713320Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8713330Z 
2025-01-09T18:24:10.8713480Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8713690Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data8] _
2025-01-09T18:24:10.8713700Z 
2025-01-09T18:24:10.8714220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8714500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8714510Z 
2025-01-09T18:24:10.8714570Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8714690Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8714730Z         """
2025-01-09T18:24:10.8714850Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8714890Z     
2025-01-09T18:24:10.8714950Z         Parameters
2025-01-09T18:24:10.8714990Z         ----------
2025-01-09T18:24:10.8715110Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8715210Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8715300Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8715350Z             Atomic data.
2025-01-09T18:24:10.8715400Z     
2025-01-09T18:24:10.8715440Z         Returns
2025-01-09T18:24:10.8715490Z         -------
2025-01-09T18:24:10.8715570Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8715680Z             Simulation object.
2025-01-09T18:24:10.8715730Z         """
2025-01-09T18:24:10.8715850Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8715990Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8716070Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8716180Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8716280Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8716420Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8716530Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8716600Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8716680Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8716730Z >       sim = run_tardis(
2025-01-09T18:24:10.8716780Z             config_verysimple,
2025-01-09T18:24:10.8716840Z             atom_data=atomic_data,
2025-01-09T18:24:10.8716910Z             show_convergence_plots=False,
2025-01-09T18:24:10.8716970Z             log_level="CRITICAl",
2025-01-09T18:24:10.8717020Z         )
2025-01-09T18:24:10.8717020Z 
2025-01-09T18:24:10.8717120Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8717220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8717280Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8717350Z     simulation.run_convergence()
2025-01-09T18:24:10.8717450Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8717580Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8717670Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8717790Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8717880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8717890Z 
2025-01-09T18:24:10.8718090Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8718250Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8718420Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8718710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8718840Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8718950Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8718950Z 
2025-01-09T18:24:10.8719020Z     def initialize_transport_state(
2025-01-09T18:24:10.8719070Z         self,
2025-01-09T18:24:10.8719140Z         simulation_state,
2025-01-09T18:24:10.8719180Z         opacity_state,
2025-01-09T18:24:10.8719240Z         macro_atom_state,
2025-01-09T18:24:10.8719280Z         plasma,
2025-01-09T18:24:10.8719340Z         no_of_packets,
2025-01-09T18:24:10.8719400Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8719450Z         iteration=0,
2025-01-09T18:24:10.8719490Z     ):
2025-01-09T18:24:10.8719590Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8719660Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8719710Z         else:
2025-01-09T18:24:10.8719770Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8719820Z     
2025-01-09T18:24:10.8719940Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8720020Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8720060Z         )
2025-01-09T18:24:10.8720100Z     
2025-01-09T18:24:10.8720200Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8720280Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8720660Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8720900Z 
2025-01-09T18:24:10.8721010Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8721220Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data9] _
2025-01-09T18:24:10.8721230Z 
2025-01-09T18:24:10.8721750Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8722470Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8722500Z 
2025-01-09T18:24:10.8723000Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8723130Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8723190Z         """
2025-01-09T18:24:10.8723380Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8723430Z     
2025-01-09T18:24:10.8723480Z         Parameters
2025-01-09T18:24:10.8723530Z         ----------
2025-01-09T18:24:10.8723640Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8723740Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8723840Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8723880Z             Atomic data.
2025-01-09T18:24:10.8723930Z     
2025-01-09T18:24:10.8727940Z         Returns
2025-01-09T18:24:10.8728020Z         -------
2025-01-09T18:24:10.8728120Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8728180Z             Simulation object.
2025-01-09T18:24:10.8728230Z         """
2025-01-09T18:24:10.8728350Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8728490Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8728580Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8728690Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8728790Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8728930Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8729400Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8729480Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8729560Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8729610Z >       sim = run_tardis(
2025-01-09T18:24:10.8729670Z             config_verysimple,
2025-01-09T18:24:10.8729730Z             atom_data=atomic_data,
2025-01-09T18:24:10.8729800Z             show_convergence_plots=False,
2025-01-09T18:24:10.8729860Z             log_level="CRITICAl",
2025-01-09T18:24:10.8729900Z         )
2025-01-09T18:24:10.8729910Z 
2025-01-09T18:24:10.8730020Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8730120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8730180Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8730250Z     simulation.run_convergence()
2025-01-09T18:24:10.8730330Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8730450Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8730520Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8730640Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8730740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8730740Z 
2025-01-09T18:24:10.8730950Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8731100Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8731360Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8731580Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8731700Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8731810Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8731820Z 
2025-01-09T18:24:10.8731880Z     def initialize_transport_state(
2025-01-09T18:24:10.8731930Z         self,
2025-01-09T18:24:10.8731990Z         simulation_state,
2025-01-09T18:24:10.8732030Z         opacity_state,
2025-01-09T18:24:10.8732090Z         macro_atom_state,
2025-01-09T18:24:10.8732140Z         plasma,
2025-01-09T18:24:10.8732190Z         no_of_packets,
2025-01-09T18:24:10.8732240Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8732290Z         iteration=0,
2025-01-09T18:24:10.8732340Z     ):
2025-01-09T18:24:10.8732430Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8732510Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8732560Z         else:
2025-01-09T18:24:10.8732610Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8732670Z     
2025-01-09T18:24:10.8732780Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8732860Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8732910Z         )
2025-01-09T18:24:10.8732950Z     
2025-01-09T18:24:10.8733060Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8733130Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8733530Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8733540Z 
2025-01-09T18:24:10.8733630Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8733850Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data10] _
2025-01-09T18:24:10.8733850Z 
2025-01-09T18:24:10.8734380Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8734740Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8734740Z 
2025-01-09T18:24:10.8734810Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8734920Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8734970Z         """
2025-01-09T18:24:10.8735080Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8735130Z     
2025-01-09T18:24:10.8735180Z         Parameters
2025-01-09T18:24:10.8735230Z         ----------
2025-01-09T18:24:10.8735360Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8735460Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8735550Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8735600Z             Atomic data.
2025-01-09T18:24:10.8735650Z     
2025-01-09T18:24:10.8735700Z         Returns
2025-01-09T18:24:10.8735760Z         -------
2025-01-09T18:24:10.8735840Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8735900Z             Simulation object.
2025-01-09T18:24:10.8735940Z         """
2025-01-09T18:24:10.8736060Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8736210Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8736290Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8736390Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8736590Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8736730Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8736840Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8736920Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8737000Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8737050Z >       sim = run_tardis(
2025-01-09T18:24:10.8737110Z             config_verysimple,
2025-01-09T18:24:10.8737170Z             atom_data=atomic_data,
2025-01-09T18:24:10.8737230Z             show_convergence_plots=False,
2025-01-09T18:24:10.8737290Z             log_level="CRITICAl",
2025-01-09T18:24:10.8737340Z         )
2025-01-09T18:24:10.8737340Z 
2025-01-09T18:24:10.8737450Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8737540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8737600Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8737670Z     simulation.run_convergence()
2025-01-09T18:24:10.8737760Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8737870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8737940Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8738060Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8738150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8738160Z 
2025-01-09T18:24:10.8738360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8738520Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8738880Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8739110Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8739240Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8739350Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8739350Z 
2025-01-09T18:24:10.8739410Z     def initialize_transport_state(
2025-01-09T18:24:10.8739460Z         self,
2025-01-09T18:24:10.8739750Z         simulation_state,
2025-01-09T18:24:10.8739810Z         opacity_state,
2025-01-09T18:24:10.8739860Z         macro_atom_state,
2025-01-09T18:24:10.8739910Z         plasma,
2025-01-09T18:24:10.8739960Z         no_of_packets,
2025-01-09T18:24:10.8740020Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8740070Z         iteration=0,
2025-01-09T18:24:10.8740110Z     ):
2025-01-09T18:24:10.8740210Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8740280Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8740330Z         else:
2025-01-09T18:24:10.8740390Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8740570Z     
2025-01-09T18:24:10.8740680Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8740750Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8740810Z         )
2025-01-09T18:24:10.8740850Z     
2025-01-09T18:24:10.8740950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8741020Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8741430Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8741440Z 
2025-01-09T18:24:10.8741530Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8741740Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data11] _
2025-01-09T18:24:10.8741750Z 
2025-01-09T18:24:10.8742270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8742670Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8742680Z 
2025-01-09T18:24:10.8742750Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8742850Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8742910Z         """
2025-01-09T18:24:10.8743020Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8743210Z     
2025-01-09T18:24:10.8743270Z         Parameters
2025-01-09T18:24:10.8743320Z         ----------
2025-01-09T18:24:10.8743430Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8743530Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8743630Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8743690Z             Atomic data.
2025-01-09T18:24:10.8743730Z     
2025-01-09T18:24:10.8743780Z         Returns
2025-01-09T18:24:10.8743820Z         -------
2025-01-09T18:24:10.8743900Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8743960Z             Simulation object.
2025-01-09T18:24:10.8744000Z         """
2025-01-09T18:24:10.8744130Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8744260Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8744350Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8744450Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8744560Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8744690Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8744800Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8744880Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8744950Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8745000Z >       sim = run_tardis(
2025-01-09T18:24:10.8745060Z             config_verysimple,
2025-01-09T18:24:10.8745110Z             atom_data=atomic_data,
2025-01-09T18:24:10.8745250Z             show_convergence_plots=False,
2025-01-09T18:24:10.8745310Z             log_level="CRITICAl",
2025-01-09T18:24:10.8745350Z         )
2025-01-09T18:24:10.8745360Z 
2025-01-09T18:24:10.8745470Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8745560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8745620Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8745690Z     simulation.run_convergence()
2025-01-09T18:24:10.8745770Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8745890Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8745960Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8746080Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8746170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8746170Z 
2025-01-09T18:24:10.8746380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8746540Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8746870Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8747090Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8747210Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8747320Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8747320Z 
2025-01-09T18:24:10.8747800Z     def initialize_transport_state(
2025-01-09T18:24:10.8747850Z         self,
2025-01-09T18:24:10.8747910Z         simulation_state,
2025-01-09T18:24:10.8747960Z         opacity_state,
2025-01-09T18:24:10.8748020Z         macro_atom_state,
2025-01-09T18:24:10.8748060Z         plasma,
2025-01-09T18:24:10.8748110Z         no_of_packets,
2025-01-09T18:24:10.8748170Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8748220Z         iteration=0,
2025-01-09T18:24:10.8748270Z     ):
2025-01-09T18:24:10.8748360Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8748440Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8748490Z         else:
2025-01-09T18:24:10.8748550Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8748590Z     
2025-01-09T18:24:10.8748690Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8748770Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8748810Z         )
2025-01-09T18:24:10.8748870Z     
2025-01-09T18:24:10.8748970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8749050Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8749430Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8749430Z 
2025-01-09T18:24:10.8749520Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8749740Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data12] _
2025-01-09T18:24:10.8749740Z 
2025-01-09T18:24:10.8750260Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8750540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8750540Z 
2025-01-09T18:24:10.8750610Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8750720Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8750770Z         """
2025-01-09T18:24:10.8751120Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8751170Z     
2025-01-09T18:24:10.8751220Z         Parameters
2025-01-09T18:24:10.8751260Z         ----------
2025-01-09T18:24:10.8751380Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8751490Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8751580Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8751630Z             Atomic data.
2025-01-09T18:24:10.8751670Z     
2025-01-09T18:24:10.8751720Z         Returns
2025-01-09T18:24:10.8751770Z         -------
2025-01-09T18:24:10.8751850Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8751910Z             Simulation object.
2025-01-09T18:24:10.8751960Z         """
2025-01-09T18:24:10.8752080Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8752220Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8752310Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8752410Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8752510Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8752660Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8752770Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8752840Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8752920Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8752970Z >       sim = run_tardis(
2025-01-09T18:24:10.8753120Z             config_verysimple,
2025-01-09T18:24:10.8753170Z             atom_data=atomic_data,
2025-01-09T18:24:10.8753240Z             show_convergence_plots=False,
2025-01-09T18:24:10.8753300Z             log_level="CRITICAl",
2025-01-09T18:24:10.8753340Z         )
2025-01-09T18:24:10.8753350Z 
2025-01-09T18:24:10.8753460Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8753550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8753610Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8753670Z     simulation.run_convergence()
2025-01-09T18:24:10.8753760Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8753870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8753940Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8754060Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8754150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8754160Z 
2025-01-09T18:24:10.8754360Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8754520Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8754700Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8754920Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8755040Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8755150Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8755160Z 
2025-01-09T18:24:10.8755220Z     def initialize_transport_state(
2025-01-09T18:24:10.8755270Z         self,
2025-01-09T18:24:10.8755330Z         simulation_state,
2025-01-09T18:24:10.8755380Z         opacity_state,
2025-01-09T18:24:10.8755440Z         macro_atom_state,
2025-01-09T18:24:10.8755480Z         plasma,
2025-01-09T18:24:10.8755540Z         no_of_packets,
2025-01-09T18:24:10.8755600Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8755650Z         iteration=0,
2025-01-09T18:24:10.8755690Z     ):
2025-01-09T18:24:10.8755810Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8755990Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8756040Z         else:
2025-01-09T18:24:10.8756100Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8756140Z     
2025-01-09T18:24:10.8756250Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8756320Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8756370Z         )
2025-01-09T18:24:10.8756410Z     
2025-01-09T18:24:10.8756510Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8756590Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8756970Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8756970Z 
2025-01-09T18:24:10.8757060Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8757280Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data13] _
2025-01-09T18:24:10.8757280Z 
2025-01-09T18:24:10.8757810Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8758310Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8758310Z 
2025-01-09T18:24:10.8758380Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8758630Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8758680Z         """
2025-01-09T18:24:10.8758800Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8758840Z     
2025-01-09T18:24:10.8758890Z         Parameters
2025-01-09T18:24:10.8758940Z         ----------
2025-01-09T18:24:10.8759060Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8759160Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8759250Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8759300Z             Atomic data.
2025-01-09T18:24:10.8759350Z     
2025-01-09T18:24:10.8759390Z         Returns
2025-01-09T18:24:10.8759440Z         -------
2025-01-09T18:24:10.8759510Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8759580Z             Simulation object.
2025-01-09T18:24:10.8759620Z         """
2025-01-09T18:24:10.8759740Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8759880Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8759970Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8760070Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8760170Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8760320Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8760430Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8760510Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8760570Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8760630Z >       sim = run_tardis(
2025-01-09T18:24:10.8760690Z             config_verysimple,
2025-01-09T18:24:10.8760750Z             atom_data=atomic_data,
2025-01-09T18:24:10.8760820Z             show_convergence_plots=False,
2025-01-09T18:24:10.8760890Z             log_level="CRITICAl",
2025-01-09T18:24:10.8760940Z         )
2025-01-09T18:24:10.8760950Z 
2025-01-09T18:24:10.8761050Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8761150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8761210Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8761370Z     simulation.run_convergence()
2025-01-09T18:24:10.8761460Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8761570Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8761640Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8761770Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8761860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8761860Z 
2025-01-09T18:24:10.8762070Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8762230Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8762400Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8762610Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8762740Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8762850Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8762860Z 
2025-01-09T18:24:10.8763280Z     def initialize_transport_state(
2025-01-09T18:24:10.8763380Z         self,
2025-01-09T18:24:10.8763440Z         simulation_state,
2025-01-09T18:24:10.8763500Z         opacity_state,
2025-01-09T18:24:10.8763560Z         macro_atom_state,
2025-01-09T18:24:10.8763600Z         plasma,
2025-01-09T18:24:10.8763650Z         no_of_packets,
2025-01-09T18:24:10.8763720Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8763770Z         iteration=0,
2025-01-09T18:24:10.8764030Z     ):
2025-01-09T18:24:10.8764150Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8764220Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8764270Z         else:
2025-01-09T18:24:10.8764330Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8764380Z     
2025-01-09T18:24:10.8764500Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8764570Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8764620Z         )
2025-01-09T18:24:10.8764660Z     
2025-01-09T18:24:10.8764770Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8764850Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8765240Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8765250Z 
2025-01-09T18:24:10.8765350Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8765570Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data14] _
2025-01-09T18:24:10.8765580Z 
2025-01-09T18:24:10.8766120Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8766400Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8766410Z 
2025-01-09T18:24:10.8766470Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8766590Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8766630Z         """
2025-01-09T18:24:10.8766760Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8766810Z     
2025-01-09T18:24:10.8766860Z         Parameters
2025-01-09T18:24:10.8766910Z         ----------
2025-01-09T18:24:10.8767030Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8767130Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8767220Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8767340Z             Atomic data.
2025-01-09T18:24:10.8767400Z     
2025-01-09T18:24:10.8767450Z         Returns
2025-01-09T18:24:10.8767500Z         -------
2025-01-09T18:24:10.8767580Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8767630Z             Simulation object.
2025-01-09T18:24:10.8767690Z         """
2025-01-09T18:24:10.8767810Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8767960Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8768040Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8768150Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8768260Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8768400Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8768510Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8768590Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8768660Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8768720Z >       sim = run_tardis(
2025-01-09T18:24:10.8768780Z             config_verysimple,
2025-01-09T18:24:10.8768840Z             atom_data=atomic_data,
2025-01-09T18:24:10.8768910Z             show_convergence_plots=False,
2025-01-09T18:24:10.8768960Z             log_level="CRITICAl",
2025-01-09T18:24:10.8769010Z         )
2025-01-09T18:24:10.8769010Z 
2025-01-09T18:24:10.8769120Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8769220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8769560Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8769630Z     simulation.run_convergence()
2025-01-09T18:24:10.8769720Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8769830Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8769900Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8770020Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8770110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8770120Z 
2025-01-09T18:24:10.8770320Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8770490Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8770660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8770880Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8771010Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8771120Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8771120Z 
2025-01-09T18:24:10.8771190Z     def initialize_transport_state(
2025-01-09T18:24:10.8771240Z         self,
2025-01-09T18:24:10.8771290Z         simulation_state,
2025-01-09T18:24:10.8771340Z         opacity_state,
2025-01-09T18:24:10.8771390Z         macro_atom_state,
2025-01-09T18:24:10.8771440Z         plasma,
2025-01-09T18:24:10.8771490Z         no_of_packets,
2025-01-09T18:24:10.8771550Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8771600Z         iteration=0,
2025-01-09T18:24:10.8771640Z     ):
2025-01-09T18:24:10.8771740Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8771810Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8771860Z         else:
2025-01-09T18:24:10.8771920Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8771960Z     
2025-01-09T18:24:10.8772070Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8772140Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8772190Z         )
2025-01-09T18:24:10.8772230Z     
2025-01-09T18:24:10.8772590Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8772670Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8773060Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8773060Z 
2025-01-09T18:24:10.8773150Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8773370Z _ ERROR at setup of TestSDECPlotter.test_calculate_plotting_data[plotter_calculate_plotting_data15] _
2025-01-09T18:24:10.8773380Z 
2025-01-09T18:24:10.8773900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8774190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8774190Z 
2025-01-09T18:24:10.8774260Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8774370Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8774420Z         """
2025-01-09T18:24:10.8774530Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8774580Z     
2025-01-09T18:24:10.8774620Z         Parameters
2025-01-09T18:24:10.8774670Z         ----------
2025-01-09T18:24:10.8774790Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8774890Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8775060Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8775110Z             Atomic data.
2025-01-09T18:24:10.8775160Z     
2025-01-09T18:24:10.8775200Z         Returns
2025-01-09T18:24:10.8775250Z         -------
2025-01-09T18:24:10.8775330Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8775390Z             Simulation object.
2025-01-09T18:24:10.8775430Z         """
2025-01-09T18:24:10.8775560Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8775690Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8775780Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8775880Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8775980Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8776130Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8776230Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8776320Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8776390Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8776440Z >       sim = run_tardis(
2025-01-09T18:24:10.8776500Z             config_verysimple,
2025-01-09T18:24:10.8776560Z             atom_data=atomic_data,
2025-01-09T18:24:10.8776620Z             show_convergence_plots=False,
2025-01-09T18:24:10.8776680Z             log_level="CRITICAl",
2025-01-09T18:24:10.8776730Z         )
2025-01-09T18:24:10.8776730Z 
2025-01-09T18:24:10.8776840Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8776930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8776990Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8777060Z     simulation.run_convergence()
2025-01-09T18:24:10.8777140Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8777260Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8777330Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8777450Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8777540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8777600Z 
2025-01-09T18:24:10.8777820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8777980Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8778150Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8778360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8778490Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8778600Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8778600Z 
2025-01-09T18:24:10.8778670Z     def initialize_transport_state(
2025-01-09T18:24:10.8778720Z         self,
2025-01-09T18:24:10.8778770Z         simulation_state,
2025-01-09T18:24:10.8778830Z         opacity_state,
2025-01-09T18:24:10.8778880Z         macro_atom_state,
2025-01-09T18:24:10.8778930Z         plasma,
2025-01-09T18:24:10.8778980Z         no_of_packets,
2025-01-09T18:24:10.8779040Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8779080Z         iteration=0,
2025-01-09T18:24:10.8779130Z     ):
2025-01-09T18:24:10.8779230Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8779300Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8779350Z         else:
2025-01-09T18:24:10.8779400Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8779450Z     
2025-01-09T18:24:10.8779550Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8779690Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8779740Z         )
2025-01-09T18:24:10.8779780Z     
2025-01-09T18:24:10.8779880Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8779960Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8780330Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8780340Z 
2025-01-09T18:24:10.8780430Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8780610Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply0] _
2025-01-09T18:24:10.8780620Z 
2025-01-09T18:24:10.8785260Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8785600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8785600Z 
2025-01-09T18:24:10.8785670Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8785780Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8785840Z         """
2025-01-09T18:24:10.8785950Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8786000Z     
2025-01-09T18:24:10.8786050Z         Parameters
2025-01-09T18:24:10.8786100Z         ----------
2025-01-09T18:24:10.8786210Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8786310Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8786400Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8786450Z             Atomic data.
2025-01-09T18:24:10.8786500Z     
2025-01-09T18:24:10.8786550Z         Returns
2025-01-09T18:24:10.8786600Z         -------
2025-01-09T18:24:10.8786670Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8786730Z             Simulation object.
2025-01-09T18:24:10.8786780Z         """
2025-01-09T18:24:10.8786900Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8787230Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8787320Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8787420Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8787530Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8787660Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8787770Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8787850Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8787920Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8787980Z >       sim = run_tardis(
2025-01-09T18:24:10.8788040Z             config_verysimple,
2025-01-09T18:24:10.8788090Z             atom_data=atomic_data,
2025-01-09T18:24:10.8788160Z             show_convergence_plots=False,
2025-01-09T18:24:10.8788220Z             log_level="CRITICAl",
2025-01-09T18:24:10.8788270Z         )
2025-01-09T18:24:10.8788270Z 
2025-01-09T18:24:10.8788380Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8788470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8788540Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8788600Z     simulation.run_convergence()
2025-01-09T18:24:10.8788680Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8788800Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8788870Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8788990Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8789160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8789160Z 
2025-01-09T18:24:10.8789370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8789530Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8789700Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8789920Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8790040Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8790150Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8790150Z 
2025-01-09T18:24:10.8790220Z     def initialize_transport_state(
2025-01-09T18:24:10.8790260Z         self,
2025-01-09T18:24:10.8790320Z         simulation_state,
2025-01-09T18:24:10.8790370Z         opacity_state,
2025-01-09T18:24:10.8790420Z         macro_atom_state,
2025-01-09T18:24:10.8790470Z         plasma,
2025-01-09T18:24:10.8790520Z         no_of_packets,
2025-01-09T18:24:10.8790580Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8790620Z         iteration=0,
2025-01-09T18:24:10.8790670Z     ):
2025-01-09T18:24:10.8790770Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8790850Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8790890Z         else:
2025-01-09T18:24:10.8790950Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8790990Z     
2025-01-09T18:24:10.8791100Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8791170Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8791220Z         )
2025-01-09T18:24:10.8791260Z     
2025-01-09T18:24:10.8791360Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8791450Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8791830Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8791830Z 
2025-01-09T18:24:10.8791990Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8792220Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply1] _
2025-01-09T18:24:10.8792230Z 
2025-01-09T18:24:10.8793700Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8794610Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8794620Z 
2025-01-09T18:24:10.8794840Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8795150Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8795300Z         """
2025-01-09T18:24:10.8795610Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8795760Z     
2025-01-09T18:24:10.8795910Z         Parameters
2025-01-09T18:24:10.8796080Z         ----------
2025-01-09T18:24:10.8796380Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8796650Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8796900Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8797050Z             Atomic data.
2025-01-09T18:24:10.8797200Z     
2025-01-09T18:24:10.8797340Z         Returns
2025-01-09T18:24:10.8797490Z         -------
2025-01-09T18:24:10.8797710Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8797880Z             Simulation object.
2025-01-09T18:24:10.8798020Z         """
2025-01-09T18:24:10.8799040Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8799410Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8799660Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8799910Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8800210Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8800820Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8801160Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8801380Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8801590Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8801750Z >       sim = run_tardis(
2025-01-09T18:24:10.8801920Z             config_verysimple,
2025-01-09T18:24:10.8802090Z             atom_data=atomic_data,
2025-01-09T18:24:10.8802300Z             show_convergence_plots=False,
2025-01-09T18:24:10.8802470Z             log_level="CRITICAl",
2025-01-09T18:24:10.8802610Z         )
2025-01-09T18:24:10.8802620Z 
2025-01-09T18:24:10.8802930Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8803350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8803550Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8803730Z     simulation.run_convergence()
2025-01-09T18:24:10.8803980Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8804290Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8804490Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8804820Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8805050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8805060Z 
2025-01-09T18:24:10.8805620Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8806040Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8806510Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8807070Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8808110Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8808420Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8808420Z 
2025-01-09T18:24:10.8808610Z     def initialize_transport_state(
2025-01-09T18:24:10.8808750Z         self,
2025-01-09T18:24:10.8808920Z         simulation_state,
2025-01-09T18:24:10.8809080Z         opacity_state,
2025-01-09T18:24:10.8809240Z         macro_atom_state,
2025-01-09T18:24:10.8809390Z         plasma,
2025-01-09T18:24:10.8809550Z         no_of_packets,
2025-01-09T18:24:10.8809730Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8809880Z         iteration=0,
2025-01-09T18:24:10.8810030Z     ):
2025-01-09T18:24:10.8810300Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8810500Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8810640Z         else:
2025-01-09T18:24:10.8810810Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8810990Z     
2025-01-09T18:24:10.8811320Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8811520Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8811670Z         )
2025-01-09T18:24:10.8811810Z     
2025-01-09T18:24:10.8812080Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8812300Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8813350Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8813630Z 
2025-01-09T18:24:10.8813910Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8814410Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply2] _
2025-01-09T18:24:10.8814420Z 
2025-01-09T18:24:10.8815910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8816680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8816690Z 
2025-01-09T18:24:10.8816870Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8817180Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8817320Z         """
2025-01-09T18:24:10.8817630Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8817780Z     
2025-01-09T18:24:10.8817940Z         Parameters
2025-01-09T18:24:10.8818100Z         ----------
2025-01-09T18:24:10.8818410Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8818670Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8818930Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8819090Z             Atomic data.
2025-01-09T18:24:10.8819230Z     
2025-01-09T18:24:10.8819380Z         Returns
2025-01-09T18:24:10.8819530Z         -------
2025-01-09T18:24:10.8819750Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8819910Z             Simulation object.
2025-01-09T18:24:10.8820060Z         """
2025-01-09T18:24:10.8820380Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8820760Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8821000Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8821270Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8821550Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8821930Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8822220Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8822670Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8822880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8823040Z >       sim = run_tardis(
2025-01-09T18:24:10.8823210Z             config_verysimple,
2025-01-09T18:24:10.8823380Z             atom_data=atomic_data,
2025-01-09T18:24:10.8823580Z             show_convergence_plots=False,
2025-01-09T18:24:10.8823750Z             log_level="CRITICAl",
2025-01-09T18:24:10.8823900Z         )
2025-01-09T18:24:10.8823910Z 
2025-01-09T18:24:10.8824200Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8824450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8824630Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8824820Z     simulation.run_convergence()
2025-01-09T18:24:10.8825070Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8825370Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8825580Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8825910Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8826150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8826160Z 
2025-01-09T18:24:10.8826700Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8827190Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8827710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8828630Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8828970Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8829270Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8829290Z 
2025-01-09T18:24:10.8829480Z     def initialize_transport_state(
2025-01-09T18:24:10.8829620Z         self,
2025-01-09T18:24:10.8829790Z         simulation_state,
2025-01-09T18:24:10.8829950Z         opacity_state,
2025-01-09T18:24:10.8830110Z         macro_atom_state,
2025-01-09T18:24:10.8830260Z         plasma,
2025-01-09T18:24:10.8830420Z         no_of_packets,
2025-01-09T18:24:10.8830590Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8830750Z         iteration=0,
2025-01-09T18:24:10.8830900Z     ):
2025-01-09T18:24:10.8831170Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8831360Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8831520Z         else:
2025-01-09T18:24:10.8831680Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8831830Z     
2025-01-09T18:24:10.8832120Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8832320Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8832470Z         )
2025-01-09T18:24:10.8832610Z     
2025-01-09T18:24:10.8832900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8833100Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8834220Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8834240Z 
2025-01-09T18:24:10.8834490Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8834990Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply3] _
2025-01-09T18:24:10.8835010Z 
2025-01-09T18:24:10.8836470Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8837230Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8837600Z 
2025-01-09T18:24:10.8837820Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8838140Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8838310Z         """
2025-01-09T18:24:10.8838630Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8838780Z     
2025-01-09T18:24:10.8838940Z         Parameters
2025-01-09T18:24:10.8839100Z         ----------
2025-01-09T18:24:10.8839400Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8839680Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8839920Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8840090Z             Atomic data.
2025-01-09T18:24:10.8840240Z     
2025-01-09T18:24:10.8840380Z         Returns
2025-01-09T18:24:10.8840540Z         -------
2025-01-09T18:24:10.8840760Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8840940Z             Simulation object.
2025-01-09T18:24:10.8841110Z         """
2025-01-09T18:24:10.8841440Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8841810Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8842060Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8842320Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8842610Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8843600Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8843910Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8844130Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8844330Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8844500Z >       sim = run_tardis(
2025-01-09T18:24:10.8844690Z             config_verysimple,
2025-01-09T18:24:10.8844870Z             atom_data=atomic_data,
2025-01-09T18:24:10.8862180Z             show_convergence_plots=False,
2025-01-09T18:24:10.8862450Z             log_level="CRITICAl",
2025-01-09T18:24:10.8862590Z         )
2025-01-09T18:24:10.8862600Z 
2025-01-09T18:24:10.8862940Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8863180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8863390Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8863610Z     simulation.run_convergence()
2025-01-09T18:24:10.8863890Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8864200Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8864400Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8864730Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8864980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8864990Z 
2025-01-09T18:24:10.8865550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8865970Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8866430Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8867000Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8867330Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8867630Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8867640Z 
2025-01-09T18:24:10.8867820Z     def initialize_transport_state(
2025-01-09T18:24:10.8867980Z         self,
2025-01-09T18:24:10.8868140Z         simulation_state,
2025-01-09T18:24:10.8868300Z         opacity_state,
2025-01-09T18:24:10.8868870Z         macro_atom_state,
2025-01-09T18:24:10.8869020Z         plasma,
2025-01-09T18:24:10.8869180Z         no_of_packets,
2025-01-09T18:24:10.8869350Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8869500Z         iteration=0,
2025-01-09T18:24:10.8869650Z     ):
2025-01-09T18:24:10.8869910Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8870120Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8870260Z         else:
2025-01-09T18:24:10.8870430Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8870570Z     
2025-01-09T18:24:10.8870860Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8871080Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8871220Z         )
2025-01-09T18:24:10.8871360Z     
2025-01-09T18:24:10.8871630Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8871840Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8872900Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8872910Z 
2025-01-09T18:24:10.8873160Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8873640Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply4] _
2025-01-09T18:24:10.8873650Z 
2025-01-09T18:24:10.8875110Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8876570Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8876580Z 
2025-01-09T18:24:10.8876760Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8877080Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8877220Z         """
2025-01-09T18:24:10.8877560Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8877710Z     
2025-01-09T18:24:10.8877870Z         Parameters
2025-01-09T18:24:10.8878020Z         ----------
2025-01-09T18:24:10.8878330Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8878590Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8878830Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8879000Z             Atomic data.
2025-01-09T18:24:10.8879140Z     
2025-01-09T18:24:10.8879300Z         Returns
2025-01-09T18:24:10.8879440Z         -------
2025-01-09T18:24:10.8879660Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8879830Z             Simulation object.
2025-01-09T18:24:10.8879980Z         """
2025-01-09T18:24:10.8880290Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8881050Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8881300Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8881560Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8881840Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8882210Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8882500Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8882710Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8882920Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8883080Z >       sim = run_tardis(
2025-01-09T18:24:10.8883280Z             config_verysimple,
2025-01-09T18:24:10.8883450Z             atom_data=atomic_data,
2025-01-09T18:24:10.8883640Z             show_convergence_plots=False,
2025-01-09T18:24:10.8884290Z             log_level="CRITICAl",
2025-01-09T18:24:10.8884440Z         )
2025-01-09T18:24:10.8884440Z 
2025-01-09T18:24:10.8884760Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8885010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8885190Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8885380Z     simulation.run_convergence()
2025-01-09T18:24:10.8885620Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8885920Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8886130Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8886460Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8886700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8886710Z 
2025-01-09T18:24:10.8887310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8887740Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8888200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8888780Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8889100Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8889400Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8889410Z 
2025-01-09T18:24:10.8889600Z     def initialize_transport_state(
2025-01-09T18:24:10.8889740Z         self,
2025-01-09T18:24:10.8890120Z         simulation_state,
2025-01-09T18:24:10.8890280Z         opacity_state,
2025-01-09T18:24:10.8890450Z         macro_atom_state,
2025-01-09T18:24:10.8890590Z         plasma,
2025-01-09T18:24:10.8890760Z         no_of_packets,
2025-01-09T18:24:10.8890930Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8891100Z         iteration=0,
2025-01-09T18:24:10.8891240Z     ):
2025-01-09T18:24:10.8891510Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8891710Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8891870Z         else:
2025-01-09T18:24:10.8892040Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8892180Z     
2025-01-09T18:24:10.8892470Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8892700Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8892870Z         )
2025-01-09T18:24:10.8893010Z     
2025-01-09T18:24:10.8893290Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8893500Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8894570Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8894590Z 
2025-01-09T18:24:10.8894860Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8895350Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply5] _
2025-01-09T18:24:10.8895360Z 
2025-01-09T18:24:10.8896830Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8897610Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8897630Z 
2025-01-09T18:24:10.8897820Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8898120Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8898300Z         """
2025-01-09T18:24:10.8898620Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8898770Z     
2025-01-09T18:24:10.8899120Z         Parameters
2025-01-09T18:24:10.8899280Z         ----------
2025-01-09T18:24:10.8899580Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8899860Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8900130Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8900300Z             Atomic data.
2025-01-09T18:24:10.8900470Z     
2025-01-09T18:24:10.8900610Z         Returns
2025-01-09T18:24:10.8900770Z         -------
2025-01-09T18:24:10.8900980Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8901150Z             Simulation object.
2025-01-09T18:24:10.8901300Z         """
2025-01-09T18:24:10.8901630Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8902000Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8902240Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8902500Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8902790Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8903160Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8903450Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8903670Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8903870Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8904030Z >       sim = run_tardis(
2025-01-09T18:24:10.8904200Z             config_verysimple,
2025-01-09T18:24:10.8904370Z             atom_data=atomic_data,
2025-01-09T18:24:10.8904770Z             show_convergence_plots=False,
2025-01-09T18:24:10.8904940Z             log_level="CRITICAl",
2025-01-09T18:24:10.8905090Z         )
2025-01-09T18:24:10.8905100Z 
2025-01-09T18:24:10.8905400Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8905660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8905870Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8906050Z     simulation.run_convergence()
2025-01-09T18:24:10.8906300Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8906610Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8906830Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8907160Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8907400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8907410Z 
2025-01-09T18:24:10.8908070Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8908480Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8908950Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8909770Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8910130Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8910260Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8910260Z 
2025-01-09T18:24:10.8910330Z     def initialize_transport_state(
2025-01-09T18:24:10.8910380Z         self,
2025-01-09T18:24:10.8910440Z         simulation_state,
2025-01-09T18:24:10.8910490Z         opacity_state,
2025-01-09T18:24:10.8910540Z         macro_atom_state,
2025-01-09T18:24:10.8910600Z         plasma,
2025-01-09T18:24:10.8910650Z         no_of_packets,
2025-01-09T18:24:10.8910720Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8910770Z         iteration=0,
2025-01-09T18:24:10.8910820Z     ):
2025-01-09T18:24:10.8910920Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8911010Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8911050Z         else:
2025-01-09T18:24:10.8911410Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8911450Z     
2025-01-09T18:24:10.8911570Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8911640Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8911690Z         )
2025-01-09T18:24:10.8911740Z     
2025-01-09T18:24:10.8911840Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8911920Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8912410Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8912410Z 
2025-01-09T18:24:10.8912510Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8912700Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply6] _
2025-01-09T18:24:10.8912700Z 
2025-01-09T18:24:10.8913230Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8913520Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8913530Z 
2025-01-09T18:24:10.8913590Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8913710Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8913760Z         """
2025-01-09T18:24:10.8913990Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8914040Z     
2025-01-09T18:24:10.8914090Z         Parameters
2025-01-09T18:24:10.8914140Z         ----------
2025-01-09T18:24:10.8914250Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8914350Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8914450Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8914520Z             Atomic data.
2025-01-09T18:24:10.8914580Z     
2025-01-09T18:24:10.8914630Z         Returns
2025-01-09T18:24:10.8914680Z         -------
2025-01-09T18:24:10.8914760Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8914810Z             Simulation object.
2025-01-09T18:24:10.8914860Z         """
2025-01-09T18:24:10.8914980Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8915120Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8915220Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8915320Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8915430Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8915560Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8915670Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8915760Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8915830Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8915890Z >       sim = run_tardis(
2025-01-09T18:24:10.8915940Z             config_verysimple,
2025-01-09T18:24:10.8916000Z             atom_data=atomic_data,
2025-01-09T18:24:10.8916070Z             show_convergence_plots=False,
2025-01-09T18:24:10.8916130Z             log_level="CRITICAl",
2025-01-09T18:24:10.8916170Z         )
2025-01-09T18:24:10.8916180Z 
2025-01-09T18:24:10.8916290Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8916390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8916460Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8916520Z     simulation.run_convergence()
2025-01-09T18:24:10.8916610Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8916810Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8916880Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8917000Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8917090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8917100Z 
2025-01-09T18:24:10.8917300Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8917470Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8917640Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8917860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8917980Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8918100Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8918100Z 
2025-01-09T18:24:10.8918170Z     def initialize_transport_state(
2025-01-09T18:24:10.8918220Z         self,
2025-01-09T18:24:10.8918280Z         simulation_state,
2025-01-09T18:24:10.8918330Z         opacity_state,
2025-01-09T18:24:10.8918380Z         macro_atom_state,
2025-01-09T18:24:10.8918430Z         plasma,
2025-01-09T18:24:10.8918480Z         no_of_packets,
2025-01-09T18:24:10.8918540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8918590Z         iteration=0,
2025-01-09T18:24:10.8923150Z     ):
2025-01-09T18:24:10.8923330Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8923780Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8923830Z         else:
2025-01-09T18:24:10.8923880Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8923930Z     
2025-01-09T18:24:10.8924030Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8924110Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8924160Z         )
2025-01-09T18:24:10.8924200Z     
2025-01-09T18:24:10.8924300Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8924380Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8924780Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8924790Z 
2025-01-09T18:24:10.8924890Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8925060Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply7] _
2025-01-09T18:24:10.8925070Z 
2025-01-09T18:24:10.8925620Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8925900Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8925910Z 
2025-01-09T18:24:10.8925980Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8926100Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8926140Z         """
2025-01-09T18:24:10.8926260Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8926300Z     
2025-01-09T18:24:10.8926350Z         Parameters
2025-01-09T18:24:10.8926400Z         ----------
2025-01-09T18:24:10.8926520Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8926620Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8926710Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8926770Z             Atomic data.
2025-01-09T18:24:10.8926810Z     
2025-01-09T18:24:10.8926860Z         Returns
2025-01-09T18:24:10.8927150Z         -------
2025-01-09T18:24:10.8927240Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8927290Z             Simulation object.
2025-01-09T18:24:10.8927340Z         """
2025-01-09T18:24:10.8927460Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8927600Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8927690Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8927790Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8927890Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8928040Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8928150Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8928230Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8928300Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8928360Z >       sim = run_tardis(
2025-01-09T18:24:10.8928430Z             config_verysimple,
2025-01-09T18:24:10.8928480Z             atom_data=atomic_data,
2025-01-09T18:24:10.8928560Z             show_convergence_plots=False,
2025-01-09T18:24:10.8928620Z             log_level="CRITICAl",
2025-01-09T18:24:10.8928660Z         )
2025-01-09T18:24:10.8928660Z 
2025-01-09T18:24:10.8928770Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8928860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8928920Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8929080Z     simulation.run_convergence()
2025-01-09T18:24:10.8929170Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8929280Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8929350Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8929490Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8929580Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8929590Z 
2025-01-09T18:24:10.8929800Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8929970Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8930150Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8930360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8930490Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8930600Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8930600Z 
2025-01-09T18:24:10.8930670Z     def initialize_transport_state(
2025-01-09T18:24:10.8930720Z         self,
2025-01-09T18:24:10.8930770Z         simulation_state,
2025-01-09T18:24:10.8930830Z         opacity_state,
2025-01-09T18:24:10.8930900Z         macro_atom_state,
2025-01-09T18:24:10.8930950Z         plasma,
2025-01-09T18:24:10.8931000Z         no_of_packets,
2025-01-09T18:24:10.8931060Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8931110Z         iteration=0,
2025-01-09T18:24:10.8931150Z     ):
2025-01-09T18:24:10.8931250Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8931320Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8931370Z         else:
2025-01-09T18:24:10.8931430Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8931470Z     
2025-01-09T18:24:10.8931580Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8931660Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8931700Z         )
2025-01-09T18:24:10.8931750Z     
2025-01-09T18:24:10.8931850Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8931930Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8932400Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8932410Z 
2025-01-09T18:24:10.8932510Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8932680Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply8] _
2025-01-09T18:24:10.8932690Z 
2025-01-09T18:24:10.8933210Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8933500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8933500Z 
2025-01-09T18:24:10.8933570Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8933680Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8933730Z         """
2025-01-09T18:24:10.8933850Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8933890Z     
2025-01-09T18:24:10.8933940Z         Parameters
2025-01-09T18:24:10.8933990Z         ----------
2025-01-09T18:24:10.8934100Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8934200Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8934300Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8934440Z             Atomic data.
2025-01-09T18:24:10.8934480Z     
2025-01-09T18:24:10.8934530Z         Returns
2025-01-09T18:24:10.8934580Z         -------
2025-01-09T18:24:10.8934670Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8934730Z             Simulation object.
2025-01-09T18:24:10.8934780Z         """
2025-01-09T18:24:10.8934900Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8935040Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8935130Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8935230Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8935330Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8935470Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8935580Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8935660Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8935740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8935790Z >       sim = run_tardis(
2025-01-09T18:24:10.8935850Z             config_verysimple,
2025-01-09T18:24:10.8935900Z             atom_data=atomic_data,
2025-01-09T18:24:10.8935980Z             show_convergence_plots=False,
2025-01-09T18:24:10.8936030Z             log_level="CRITICAl",
2025-01-09T18:24:10.8936100Z         )
2025-01-09T18:24:10.8936100Z 
2025-01-09T18:24:10.8936210Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8936310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8936370Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8936430Z     simulation.run_convergence()
2025-01-09T18:24:10.8936520Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8936630Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8936700Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8936820Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8936910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8936920Z 
2025-01-09T18:24:10.8937120Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8937360Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8937530Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8937750Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8937870Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8937990Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8937990Z 
2025-01-09T18:24:10.8938060Z     def initialize_transport_state(
2025-01-09T18:24:10.8938100Z         self,
2025-01-09T18:24:10.8938160Z         simulation_state,
2025-01-09T18:24:10.8938210Z         opacity_state,
2025-01-09T18:24:10.8938270Z         macro_atom_state,
2025-01-09T18:24:10.8938310Z         plasma,
2025-01-09T18:24:10.8938370Z         no_of_packets,
2025-01-09T18:24:10.8938430Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8938480Z         iteration=0,
2025-01-09T18:24:10.8938520Z     ):
2025-01-09T18:24:10.8938620Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8938690Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8938740Z         else:
2025-01-09T18:24:10.8938800Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8938840Z     
2025-01-09T18:24:10.8938940Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8939020Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8939090Z         )
2025-01-09T18:24:10.8939130Z     
2025-01-09T18:24:10.8939340Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8939420Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8939800Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8939810Z 
2025-01-09T18:24:10.8939900Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8940080Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply9] _
2025-01-09T18:24:10.8940080Z 
2025-01-09T18:24:10.8940610Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8940890Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8940900Z 
2025-01-09T18:24:10.8940970Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8941080Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8941130Z         """
2025-01-09T18:24:10.8941240Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8941290Z     
2025-01-09T18:24:10.8941340Z         Parameters
2025-01-09T18:24:10.8941390Z         ----------
2025-01-09T18:24:10.8941500Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8941600Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8941690Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8941740Z             Atomic data.
2025-01-09T18:24:10.8941790Z     
2025-01-09T18:24:10.8941840Z         Returns
2025-01-09T18:24:10.8941900Z         -------
2025-01-09T18:24:10.8941980Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8942040Z             Simulation object.
2025-01-09T18:24:10.8942080Z         """
2025-01-09T18:24:10.8942210Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8942340Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8942440Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8942620Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8942720Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8942860Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8942970Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8943070Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8943140Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8943200Z >       sim = run_tardis(
2025-01-09T18:24:10.8943270Z             config_verysimple,
2025-01-09T18:24:10.8943340Z             atom_data=atomic_data,
2025-01-09T18:24:10.8943400Z             show_convergence_plots=False,
2025-01-09T18:24:10.8943460Z             log_level="CRITICAl",
2025-01-09T18:24:10.8943510Z         )
2025-01-09T18:24:10.8943510Z 
2025-01-09T18:24:10.8943620Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8943710Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8943780Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8943840Z     simulation.run_convergence()
2025-01-09T18:24:10.8943930Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8944030Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8944100Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8944220Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8944310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8944620Z 
2025-01-09T18:24:10.8944860Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8945020Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8945190Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8945410Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8945540Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8945640Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8945650Z 
2025-01-09T18:24:10.8945710Z     def initialize_transport_state(
2025-01-09T18:24:10.8945760Z         self,
2025-01-09T18:24:10.8945820Z         simulation_state,
2025-01-09T18:24:10.8945870Z         opacity_state,
2025-01-09T18:24:10.8945930Z         macro_atom_state,
2025-01-09T18:24:10.8945970Z         plasma,
2025-01-09T18:24:10.8946020Z         no_of_packets,
2025-01-09T18:24:10.8946090Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8946140Z         iteration=0,
2025-01-09T18:24:10.8946180Z     ):
2025-01-09T18:24:10.8946280Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8946350Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8946400Z         else:
2025-01-09T18:24:10.8946460Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8946500Z     
2025-01-09T18:24:10.8946610Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8946690Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8946730Z         )
2025-01-09T18:24:10.8946780Z     
2025-01-09T18:24:10.8946880Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8946950Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8947330Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8947330Z 
2025-01-09T18:24:10.8947430Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8947620Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply10] _
2025-01-09T18:24:10.8947850Z 
2025-01-09T18:24:10.8948410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8948700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8948700Z 
2025-01-09T18:24:10.8948760Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8948880Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8948930Z         """
2025-01-09T18:24:10.8949050Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8949090Z     
2025-01-09T18:24:10.8949150Z         Parameters
2025-01-09T18:24:10.8949190Z         ----------
2025-01-09T18:24:10.8949310Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8949420Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8949510Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8949560Z             Atomic data.
2025-01-09T18:24:10.8949600Z     
2025-01-09T18:24:10.8949650Z         Returns
2025-01-09T18:24:10.8949700Z         -------
2025-01-09T18:24:10.8949780Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8949830Z             Simulation object.
2025-01-09T18:24:10.8949880Z         """
2025-01-09T18:24:10.8949990Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8950130Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8950310Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8950410Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8950520Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8950660Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8950770Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8950850Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8950930Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8950980Z >       sim = run_tardis(
2025-01-09T18:24:10.8951040Z             config_verysimple,
2025-01-09T18:24:10.8951110Z             atom_data=atomic_data,
2025-01-09T18:24:10.8951190Z             show_convergence_plots=False,
2025-01-09T18:24:10.8951240Z             log_level="CRITICAl",
2025-01-09T18:24:10.8951290Z         )
2025-01-09T18:24:10.8951300Z 
2025-01-09T18:24:10.8951400Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8951500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8951560Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8951620Z     simulation.run_convergence()
2025-01-09T18:24:10.8951710Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8951830Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8951900Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8952010Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8952110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8952110Z 
2025-01-09T18:24:10.8952310Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8952470Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8952650Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8952860Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8952980Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8953170Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8953180Z 
2025-01-09T18:24:10.8953240Z     def initialize_transport_state(
2025-01-09T18:24:10.8953290Z         self,
2025-01-09T18:24:10.8953370Z         simulation_state,
2025-01-09T18:24:10.8953420Z         opacity_state,
2025-01-09T18:24:10.8953470Z         macro_atom_state,
2025-01-09T18:24:10.8953520Z         plasma,
2025-01-09T18:24:10.8953570Z         no_of_packets,
2025-01-09T18:24:10.8953630Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8953670Z         iteration=0,
2025-01-09T18:24:10.8953720Z     ):
2025-01-09T18:24:10.8953810Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8953890Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8953940Z         else:
2025-01-09T18:24:10.8953990Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8954040Z     
2025-01-09T18:24:10.8954140Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8954220Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8954270Z         )
2025-01-09T18:24:10.8954310Z     
2025-01-09T18:24:10.8954430Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8954510Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8954910Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8954910Z 
2025-01-09T18:24:10.8955010Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8955280Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply11] _
2025-01-09T18:24:10.8955280Z 
2025-01-09T18:24:10.8955800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8956090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8956090Z 
2025-01-09T18:24:10.8956160Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8956270Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8956320Z         """
2025-01-09T18:24:10.8956430Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8956480Z     
2025-01-09T18:24:10.8956530Z         Parameters
2025-01-09T18:24:10.8956580Z         ----------
2025-01-09T18:24:10.8956700Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8956800Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8956880Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8956940Z             Atomic data.
2025-01-09T18:24:10.8956980Z     
2025-01-09T18:24:10.8957030Z         Returns
2025-01-09T18:24:10.8957070Z         -------
2025-01-09T18:24:10.8957150Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8957210Z             Simulation object.
2025-01-09T18:24:10.8957250Z         """
2025-01-09T18:24:10.8957370Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8957510Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8957600Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8957690Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8957800Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8957940Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8958050Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8958130Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8958260Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8958320Z >       sim = run_tardis(
2025-01-09T18:24:10.8958370Z             config_verysimple,
2025-01-09T18:24:10.8958430Z             atom_data=atomic_data,
2025-01-09T18:24:10.8958500Z             show_convergence_plots=False,
2025-01-09T18:24:10.8958560Z             log_level="CRITICAl",
2025-01-09T18:24:10.8958610Z         )
2025-01-09T18:24:10.8958610Z 
2025-01-09T18:24:10.8958740Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8958830Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8958890Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8958960Z     simulation.run_convergence()
2025-01-09T18:24:10.8959050Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8959160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8959230Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8959360Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8959450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8959450Z 
2025-01-09T18:24:10.8959650Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8959810Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8960000Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8960220Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8960430Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8960540Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8960540Z 
2025-01-09T18:24:10.8960600Z     def initialize_transport_state(
2025-01-09T18:24:10.8960650Z         self,
2025-01-09T18:24:10.8960710Z         simulation_state,
2025-01-09T18:24:10.8960760Z         opacity_state,
2025-01-09T18:24:10.8960820Z         macro_atom_state,
2025-01-09T18:24:10.8960960Z         plasma,
2025-01-09T18:24:10.8961010Z         no_of_packets,
2025-01-09T18:24:10.8961070Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8961120Z         iteration=0,
2025-01-09T18:24:10.8961160Z     ):
2025-01-09T18:24:10.8961270Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8961350Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8961390Z         else:
2025-01-09T18:24:10.8961450Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8961500Z     
2025-01-09T18:24:10.8961600Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8961670Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8961720Z         )
2025-01-09T18:24:10.8961760Z     
2025-01-09T18:24:10.8961860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8961940Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8962320Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8962320Z 
2025-01-09T18:24:10.8962420Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8962610Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply12] _
2025-01-09T18:24:10.8962620Z 
2025-01-09T18:24:10.8963170Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8963460Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8963570Z 
2025-01-09T18:24:10.8963640Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8963750Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8963800Z         """
2025-01-09T18:24:10.8963910Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8963950Z     
2025-01-09T18:24:10.8964010Z         Parameters
2025-01-09T18:24:10.8964050Z         ----------
2025-01-09T18:24:10.8964170Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8964270Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8964360Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8964420Z             Atomic data.
2025-01-09T18:24:10.8964460Z     
2025-01-09T18:24:10.8964510Z         Returns
2025-01-09T18:24:10.8964560Z         -------
2025-01-09T18:24:10.8964640Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8964690Z             Simulation object.
2025-01-09T18:24:10.8964740Z         """
2025-01-09T18:24:10.8964860Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8965000Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8965090Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8965190Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8965290Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8965430Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8965530Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8965890Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8965970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8966020Z >       sim = run_tardis(
2025-01-09T18:24:10.8966080Z             config_verysimple,
2025-01-09T18:24:10.8966140Z             atom_data=atomic_data,
2025-01-09T18:24:10.8966210Z             show_convergence_plots=False,
2025-01-09T18:24:10.8966260Z             log_level="CRITICAl",
2025-01-09T18:24:10.8966310Z         )
2025-01-09T18:24:10.8966320Z 
2025-01-09T18:24:10.8966420Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8966510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8966570Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8966640Z     simulation.run_convergence()
2025-01-09T18:24:10.8966730Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8966840Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8966910Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8967030Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8967120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8967120Z 
2025-01-09T18:24:10.8967330Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8967490Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8967660Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8967880Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8968000Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8968110Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8968120Z 
2025-01-09T18:24:10.8968200Z     def initialize_transport_state(
2025-01-09T18:24:10.8968250Z         self,
2025-01-09T18:24:10.8968310Z         simulation_state,
2025-01-09T18:24:10.8968360Z         opacity_state,
2025-01-09T18:24:10.8968420Z         macro_atom_state,
2025-01-09T18:24:10.8968460Z         plasma,
2025-01-09T18:24:10.8968520Z         no_of_packets,
2025-01-09T18:24:10.8968830Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8968880Z         iteration=0,
2025-01-09T18:24:10.8968920Z     ):
2025-01-09T18:24:10.8969020Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8969090Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8969140Z         else:
2025-01-09T18:24:10.8969200Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8969240Z     
2025-01-09T18:24:10.8969350Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8969420Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8969470Z         )
2025-01-09T18:24:10.8969520Z     
2025-01-09T18:24:10.8969620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8969690Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8970090Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8970100Z 
2025-01-09T18:24:10.8970190Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8970380Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply13] _
2025-01-09T18:24:10.8970380Z 
2025-01-09T18:24:10.8970900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8971200Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8971310Z 
2025-01-09T18:24:10.8971390Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8971510Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8971560Z         """
2025-01-09T18:24:10.8971670Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8971720Z     
2025-01-09T18:24:10.8971760Z         Parameters
2025-01-09T18:24:10.8971820Z         ----------
2025-01-09T18:24:10.8971930Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8972030Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8972120Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8972170Z             Atomic data.
2025-01-09T18:24:10.8972210Z     
2025-01-09T18:24:10.8972260Z         Returns
2025-01-09T18:24:10.8972310Z         -------
2025-01-09T18:24:10.8972380Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8972440Z             Simulation object.
2025-01-09T18:24:10.8972490Z         """
2025-01-09T18:24:10.8972620Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8972760Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8972850Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8972950Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8973050Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8973190Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8973300Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8973370Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8973440Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8973500Z >       sim = run_tardis(
2025-01-09T18:24:10.8973560Z             config_verysimple,
2025-01-09T18:24:10.8973610Z             atom_data=atomic_data,
2025-01-09T18:24:10.8973680Z             show_convergence_plots=False,
2025-01-09T18:24:10.8973740Z             log_level="CRITICAl",
2025-01-09T18:24:10.8973780Z         )
2025-01-09T18:24:10.8973790Z 
2025-01-09T18:24:10.8973890Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8974060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8974130Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8974190Z     simulation.run_convergence()
2025-01-09T18:24:10.8974290Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8974400Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8974470Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8974590Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8974680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8974690Z 
2025-01-09T18:24:10.8974900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8978840Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8979090Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8979320Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8979450Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8979560Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8979560Z 
2025-01-09T18:24:10.8979630Z     def initialize_transport_state(
2025-01-09T18:24:10.8979670Z         self,
2025-01-09T18:24:10.8979730Z         simulation_state,
2025-01-09T18:24:10.8979780Z         opacity_state,
2025-01-09T18:24:10.8979830Z         macro_atom_state,
2025-01-09T18:24:10.8980090Z         plasma,
2025-01-09T18:24:10.8980150Z         no_of_packets,
2025-01-09T18:24:10.8980210Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8980260Z         iteration=0,
2025-01-09T18:24:10.8980300Z     ):
2025-01-09T18:24:10.8980400Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8980480Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8980530Z         else:
2025-01-09T18:24:10.8980580Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8980630Z     
2025-01-09T18:24:10.8980730Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8980810Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8980850Z         )
2025-01-09T18:24:10.8980890Z     
2025-01-09T18:24:10.8980990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8981070Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8981450Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8981460Z 
2025-01-09T18:24:10.8981550Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8981730Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply14] _
2025-01-09T18:24:10.8981740Z 
2025-01-09T18:24:10.8982270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8982550Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8982550Z 
2025-01-09T18:24:10.8982610Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8982720Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8982770Z         """
2025-01-09T18:24:10.8982880Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8982930Z     
2025-01-09T18:24:10.8983370Z         Parameters
2025-01-09T18:24:10.8983440Z         ----------
2025-01-09T18:24:10.8983560Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8983770Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8983880Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8983940Z             Atomic data.
2025-01-09T18:24:10.8983980Z     
2025-01-09T18:24:10.8984020Z         Returns
2025-01-09T18:24:10.8984070Z         -------
2025-01-09T18:24:10.8984150Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8984200Z             Simulation object.
2025-01-09T18:24:10.8984320Z         """
2025-01-09T18:24:10.8984440Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8984570Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8984670Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8984760Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8984870Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8985010Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8985570Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8985690Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8985780Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8985840Z >       sim = run_tardis(
2025-01-09T18:24:10.8985900Z             config_verysimple,
2025-01-09T18:24:10.8986030Z             atom_data=atomic_data,
2025-01-09T18:24:10.8986120Z             show_convergence_plots=False,
2025-01-09T18:24:10.8986190Z             log_level="CRITICAl",
2025-01-09T18:24:10.8986380Z         )
2025-01-09T18:24:10.8986380Z 
2025-01-09T18:24:10.8986500Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8986600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8986670Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8986730Z     simulation.run_convergence()
2025-01-09T18:24:10.8986820Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8986940Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8987010Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8987130Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8987230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8987230Z 
2025-01-09T18:24:10.8987440Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8987600Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8987790Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8988020Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8988150Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8988260Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8988260Z 
2025-01-09T18:24:10.8988330Z     def initialize_transport_state(
2025-01-09T18:24:10.8988380Z         self,
2025-01-09T18:24:10.8988440Z         simulation_state,
2025-01-09T18:24:10.8988490Z         opacity_state,
2025-01-09T18:24:10.8988540Z         macro_atom_state,
2025-01-09T18:24:10.8988590Z         plasma,
2025-01-09T18:24:10.8988640Z         no_of_packets,
2025-01-09T18:24:10.8988700Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8988750Z         iteration=0,
2025-01-09T18:24:10.8988800Z     ):
2025-01-09T18:24:10.8988900Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8988970Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8989020Z         else:
2025-01-09T18:24:10.8989080Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8989120Z     
2025-01-09T18:24:10.8989230Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8989380Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8989430Z         )
2025-01-09T18:24:10.8989480Z     
2025-01-09T18:24:10.8989580Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8989650Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8990050Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8990050Z 
2025-01-09T18:24:10.8990140Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8990340Z _ ERROR at setup of TestSDECPlotter.test_generate_plot_mpl[plotter_generate_plot_ply15] _
2025-01-09T18:24:10.8990340Z 
2025-01-09T18:24:10.8990890Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8991190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8991190Z 
2025-01-09T18:24:10.8991260Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8991370Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8991420Z         """
2025-01-09T18:24:10.8991530Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8991580Z     
2025-01-09T18:24:10.8991630Z         Parameters
2025-01-09T18:24:10.8992000Z         ----------
2025-01-09T18:24:10.8992110Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8992220Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8992300Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.8992360Z             Atomic data.
2025-01-09T18:24:10.8992400Z     
2025-01-09T18:24:10.8992450Z         Returns
2025-01-09T18:24:10.8992500Z         -------
2025-01-09T18:24:10.8992640Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.8992700Z             Simulation object.
2025-01-09T18:24:10.8992740Z         """
2025-01-09T18:24:10.8992860Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.8993000Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.8993090Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.8993190Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.8993300Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.8993440Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.8993550Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.8993630Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.8993700Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.8993760Z >       sim = run_tardis(
2025-01-09T18:24:10.8993820Z             config_verysimple,
2025-01-09T18:24:10.8993880Z             atom_data=atomic_data,
2025-01-09T18:24:10.8993940Z             show_convergence_plots=False,
2025-01-09T18:24:10.8994000Z             log_level="CRITICAl",
2025-01-09T18:24:10.8994050Z         )
2025-01-09T18:24:10.8994050Z 
2025-01-09T18:24:10.8994180Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.8994270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8994340Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.8994400Z     simulation.run_convergence()
2025-01-09T18:24:10.8994490Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.8994600Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.8994670Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.8995070Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.8995160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.8995170Z 
2025-01-09T18:24:10.8995380Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.8995530Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.8995710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.8995920Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.8996060Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.8996230Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.8996240Z 
2025-01-09T18:24:10.8996310Z     def initialize_transport_state(
2025-01-09T18:24:10.8996360Z         self,
2025-01-09T18:24:10.8996420Z         simulation_state,
2025-01-09T18:24:10.8996470Z         opacity_state,
2025-01-09T18:24:10.8996520Z         macro_atom_state,
2025-01-09T18:24:10.8996570Z         plasma,
2025-01-09T18:24:10.8996620Z         no_of_packets,
2025-01-09T18:24:10.8996680Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.8996730Z         iteration=0,
2025-01-09T18:24:10.8996770Z     ):
2025-01-09T18:24:10.8996870Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.8996950Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.8996990Z         else:
2025-01-09T18:24:10.8997140Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.8997190Z     
2025-01-09T18:24:10.8997290Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.8997370Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.8997410Z         )
2025-01-09T18:24:10.8997450Z     
2025-01-09T18:24:10.8997560Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.8997640Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.8998020Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.8998020Z 
2025-01-09T18:24:10.8998120Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.8998280Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl0] _
2025-01-09T18:24:10.8998280Z 
2025-01-09T18:24:10.8998810Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.8999120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.8999140Z 
2025-01-09T18:24:10.8999200Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.8999320Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.8999360Z         """
2025-01-09T18:24:10.8999480Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.8999520Z     
2025-01-09T18:24:10.8999570Z         Parameters
2025-01-09T18:24:10.8999620Z         ----------
2025-01-09T18:24:10.8999740Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.8999840Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.8999950Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9000000Z             Atomic data.
2025-01-09T18:24:10.9000050Z     
2025-01-09T18:24:10.9000090Z         Returns
2025-01-09T18:24:10.9000140Z         -------
2025-01-09T18:24:10.9000220Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9000280Z             Simulation object.
2025-01-09T18:24:10.9000410Z         """
2025-01-09T18:24:10.9000530Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9000670Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9000760Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9000860Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9000970Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9001110Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9001230Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9001320Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9001390Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9001450Z >       sim = run_tardis(
2025-01-09T18:24:10.9001510Z             config_verysimple,
2025-01-09T18:24:10.9001570Z             atom_data=atomic_data,
2025-01-09T18:24:10.9001640Z             show_convergence_plots=False,
2025-01-09T18:24:10.9001700Z             log_level="CRITICAl",
2025-01-09T18:24:10.9001740Z         )
2025-01-09T18:24:10.9001740Z 
2025-01-09T18:24:10.9001850Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9001940Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9002000Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9002070Z     simulation.run_convergence()
2025-01-09T18:24:10.9002150Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9002270Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9002430Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9002550Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9002640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9002650Z 
2025-01-09T18:24:10.9002850Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9003010Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9003180Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9003410Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9003540Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9003650Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9003660Z 
2025-01-09T18:24:10.9003720Z     def initialize_transport_state(
2025-01-09T18:24:10.9003780Z         self,
2025-01-09T18:24:10.9003830Z         simulation_state,
2025-01-09T18:24:10.9003880Z         opacity_state,
2025-01-09T18:24:10.9003940Z         macro_atom_state,
2025-01-09T18:24:10.9003980Z         plasma,
2025-01-09T18:24:10.9004040Z         no_of_packets,
2025-01-09T18:24:10.9004090Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9004140Z         iteration=0,
2025-01-09T18:24:10.9004190Z     ):
2025-01-09T18:24:10.9004280Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9004350Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9004410Z         else:
2025-01-09T18:24:10.9004460Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9004510Z     
2025-01-09T18:24:10.9004610Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9004690Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9004730Z         )
2025-01-09T18:24:10.9004780Z     
2025-01-09T18:24:10.9004880Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9004950Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9005350Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9005460Z 
2025-01-09T18:24:10.9005570Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9005730Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl1] _
2025-01-09T18:24:10.9005730Z 
2025-01-09T18:24:10.9006250Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9006540Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9006540Z 
2025-01-09T18:24:10.9006680Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9006800Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9006840Z         """
2025-01-09T18:24:10.9006960Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9007010Z     
2025-01-09T18:24:10.9007050Z         Parameters
2025-01-09T18:24:10.9007100Z         ----------
2025-01-09T18:24:10.9007210Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9007320Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9007400Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9007460Z             Atomic data.
2025-01-09T18:24:10.9007500Z     
2025-01-09T18:24:10.9007550Z         Returns
2025-01-09T18:24:10.9007600Z         -------
2025-01-09T18:24:10.9007770Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9007830Z             Simulation object.
2025-01-09T18:24:10.9007870Z         """
2025-01-09T18:24:10.9007990Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9008130Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9008240Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9008340Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9008450Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9008590Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9008700Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9008770Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9008850Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9008900Z >       sim = run_tardis(
2025-01-09T18:24:10.9008960Z             config_verysimple,
2025-01-09T18:24:10.9009020Z             atom_data=atomic_data,
2025-01-09T18:24:10.9009080Z             show_convergence_plots=False,
2025-01-09T18:24:10.9009140Z             log_level="CRITICAl",
2025-01-09T18:24:10.9009190Z         )
2025-01-09T18:24:10.9009190Z 
2025-01-09T18:24:10.9009300Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9009390Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9009460Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9009520Z     simulation.run_convergence()
2025-01-09T18:24:10.9009600Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9009710Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9009780Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9009900Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9009990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9010000Z 
2025-01-09T18:24:10.9010210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9010360Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9010610Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9010830Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9010960Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9011060Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9011070Z 
2025-01-09T18:24:10.9011150Z     def initialize_transport_state(
2025-01-09T18:24:10.9011210Z         self,
2025-01-09T18:24:10.9011260Z         simulation_state,
2025-01-09T18:24:10.9011310Z         opacity_state,
2025-01-09T18:24:10.9011360Z         macro_atom_state,
2025-01-09T18:24:10.9011410Z         plasma,
2025-01-09T18:24:10.9011460Z         no_of_packets,
2025-01-09T18:24:10.9011520Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9011570Z         iteration=0,
2025-01-09T18:24:10.9011610Z     ):
2025-01-09T18:24:10.9011710Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9011790Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9011840Z         else:
2025-01-09T18:24:10.9011900Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9011940Z     
2025-01-09T18:24:10.9012050Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9012120Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9012170Z         )
2025-01-09T18:24:10.9012210Z     
2025-01-09T18:24:10.9012310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9012390Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9013020Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9013030Z 
2025-01-09T18:24:10.9013120Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9013280Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl2] _
2025-01-09T18:24:10.9013280Z 
2025-01-09T18:24:10.9013830Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9014120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9014120Z 
2025-01-09T18:24:10.9014190Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9014300Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9014350Z         """
2025-01-09T18:24:10.9014460Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9014500Z     
2025-01-09T18:24:10.9014560Z         Parameters
2025-01-09T18:24:10.9014600Z         ----------
2025-01-09T18:24:10.9014720Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9014820Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9014910Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9014960Z             Atomic data.
2025-01-09T18:24:10.9015000Z     
2025-01-09T18:24:10.9015050Z         Returns
2025-01-09T18:24:10.9015090Z         -------
2025-01-09T18:24:10.9015180Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9015230Z             Simulation object.
2025-01-09T18:24:10.9015290Z         """
2025-01-09T18:24:10.9015410Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9015570Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9015660Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9015760Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9015860Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9016280Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9016390Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9016460Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9016530Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9016590Z >       sim = run_tardis(
2025-01-09T18:24:10.9016650Z             config_verysimple,
2025-01-09T18:24:10.9016710Z             atom_data=atomic_data,
2025-01-09T18:24:10.9016770Z             show_convergence_plots=False,
2025-01-09T18:24:10.9016830Z             log_level="CRITICAl",
2025-01-09T18:24:10.9016890Z         )
2025-01-09T18:24:10.9016890Z 
2025-01-09T18:24:10.9017000Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9017110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9017180Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9017240Z     simulation.run_convergence()
2025-01-09T18:24:10.9017330Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9017440Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9017510Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9017640Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9017730Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9017730Z 
2025-01-09T18:24:10.9017940Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9018200Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9018630Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9018940Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9019080Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9019200Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9019210Z 
2025-01-09T18:24:10.9019280Z     def initialize_transport_state(
2025-01-09T18:24:10.9019320Z         self,
2025-01-09T18:24:10.9019380Z         simulation_state,
2025-01-09T18:24:10.9019430Z         opacity_state,
2025-01-09T18:24:10.9019490Z         macro_atom_state,
2025-01-09T18:24:10.9019530Z         plasma,
2025-01-09T18:24:10.9019710Z         no_of_packets,
2025-01-09T18:24:10.9019770Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9019830Z         iteration=0,
2025-01-09T18:24:10.9019870Z     ):
2025-01-09T18:24:10.9020100Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9020170Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9020220Z         else:
2025-01-09T18:24:10.9020390Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9020440Z     
2025-01-09T18:24:10.9020560Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9020640Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9020680Z         )
2025-01-09T18:24:10.9020730Z     
2025-01-09T18:24:10.9020830Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9020910Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9021420Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9021420Z 
2025-01-09T18:24:10.9021520Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9021690Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl3] _
2025-01-09T18:24:10.9021690Z 
2025-01-09T18:24:10.9022220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9022770Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9022780Z 
2025-01-09T18:24:10.9022850Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9022980Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9023030Z         """
2025-01-09T18:24:10.9023150Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9023200Z     
2025-01-09T18:24:10.9023240Z         Parameters
2025-01-09T18:24:10.9023310Z         ----------
2025-01-09T18:24:10.9023420Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9023530Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9023610Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9023670Z             Atomic data.
2025-01-09T18:24:10.9023710Z     
2025-01-09T18:24:10.9023760Z         Returns
2025-01-09T18:24:10.9023800Z         -------
2025-01-09T18:24:10.9023970Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9024040Z             Simulation object.
2025-01-09T18:24:10.9024090Z         """
2025-01-09T18:24:10.9024210Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9024500Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9024600Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9024700Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9024920Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9025060Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9025170Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9025250Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9025320Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9025380Z >       sim = run_tardis(
2025-01-09T18:24:10.9025440Z             config_verysimple,
2025-01-09T18:24:10.9025500Z             atom_data=atomic_data,
2025-01-09T18:24:10.9025560Z             show_convergence_plots=False,
2025-01-09T18:24:10.9025630Z             log_level="CRITICAl",
2025-01-09T18:24:10.9025670Z         )
2025-01-09T18:24:10.9025670Z 
2025-01-09T18:24:10.9025780Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9025880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9025950Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9026010Z     simulation.run_convergence()
2025-01-09T18:24:10.9026100Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9026210Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9026280Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9026420Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9026530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9026530Z 
2025-01-09T18:24:10.9026740Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9026900Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9027210Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9027430Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9027560Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9027670Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9027670Z 
2025-01-09T18:24:10.9027740Z     def initialize_transport_state(
2025-01-09T18:24:10.9027880Z         self,
2025-01-09T18:24:10.9027940Z         simulation_state,
2025-01-09T18:24:10.9027990Z         opacity_state,
2025-01-09T18:24:10.9028040Z         macro_atom_state,
2025-01-09T18:24:10.9028090Z         plasma,
2025-01-09T18:24:10.9028140Z         no_of_packets,
2025-01-09T18:24:10.9028200Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9028250Z         iteration=0,
2025-01-09T18:24:10.9028310Z     ):
2025-01-09T18:24:10.9028410Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9028480Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9028530Z         else:
2025-01-09T18:24:10.9028590Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9028640Z     
2025-01-09T18:24:10.9028740Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9028810Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9028860Z         )
2025-01-09T18:24:10.9028900Z     
2025-01-09T18:24:10.9029000Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9029080Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9029460Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9029470Z 
2025-01-09T18:24:10.9029560Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9029860Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl4] _
2025-01-09T18:24:10.9029870Z 
2025-01-09T18:24:10.9030410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9030910Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9030920Z 
2025-01-09T18:24:10.9030990Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9031100Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9031140Z         """
2025-01-09T18:24:10.9031370Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9031420Z     
2025-01-09T18:24:10.9031470Z         Parameters
2025-01-09T18:24:10.9031640Z         ----------
2025-01-09T18:24:10.9031770Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9031880Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9031980Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9032030Z             Atomic data.
2025-01-09T18:24:10.9032080Z     
2025-01-09T18:24:10.9032120Z         Returns
2025-01-09T18:24:10.9032170Z         -------
2025-01-09T18:24:10.9032250Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9032310Z             Simulation object.
2025-01-09T18:24:10.9032360Z         """
2025-01-09T18:24:10.9032470Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9032740Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9032840Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9032950Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9033050Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9033200Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9033310Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9033390Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9033460Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9033510Z >       sim = run_tardis(
2025-01-09T18:24:10.9038490Z             config_verysimple,
2025-01-09T18:24:10.9038800Z             atom_data=atomic_data,
2025-01-09T18:24:10.9038870Z             show_convergence_plots=False,
2025-01-09T18:24:10.9038930Z             log_level="CRITICAl",
2025-01-09T18:24:10.9038980Z         )
2025-01-09T18:24:10.9039100Z 
2025-01-09T18:24:10.9039220Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9039310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9039380Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9039440Z     simulation.run_convergence()
2025-01-09T18:24:10.9039530Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9039640Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9039720Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9039950Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9040050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9040050Z 
2025-01-09T18:24:10.9040280Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9040440Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9040620Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9040840Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9041090Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9041200Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9041480Z 
2025-01-09T18:24:10.9041560Z     def initialize_transport_state(
2025-01-09T18:24:10.9041610Z         self,
2025-01-09T18:24:10.9041670Z         simulation_state,
2025-01-09T18:24:10.9041720Z         opacity_state,
2025-01-09T18:24:10.9041770Z         macro_atom_state,
2025-01-09T18:24:10.9041820Z         plasma,
2025-01-09T18:24:10.9041880Z         no_of_packets,
2025-01-09T18:24:10.9041940Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9041990Z         iteration=0,
2025-01-09T18:24:10.9042040Z     ):
2025-01-09T18:24:10.9042140Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9042210Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9042260Z         else:
2025-01-09T18:24:10.9042320Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9042360Z     
2025-01-09T18:24:10.9042470Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9042540Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9042590Z         )
2025-01-09T18:24:10.9042630Z     
2025-01-09T18:24:10.9042730Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9042810Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9044070Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9044190Z 
2025-01-09T18:24:10.9044530Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9044980Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl5] _
2025-01-09T18:24:10.9044990Z 
2025-01-09T18:24:10.9046960Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9047740Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9047750Z 
2025-01-09T18:24:10.9047950Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9048290Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9048460Z         """
2025-01-09T18:24:10.9049620Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9049760Z     
2025-01-09T18:24:10.9049920Z         Parameters
2025-01-09T18:24:10.9050080Z         ----------
2025-01-09T18:24:10.9050390Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9050650Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9051180Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9051310Z             Atomic data.
2025-01-09T18:24:10.9051370Z     
2025-01-09T18:24:10.9051410Z         Returns
2025-01-09T18:24:10.9051470Z         -------
2025-01-09T18:24:10.9051570Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9051640Z             Simulation object.
2025-01-09T18:24:10.9051680Z         """
2025-01-09T18:24:10.9051810Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9051950Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9052060Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9052160Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9052260Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9052410Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9052520Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9052600Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9052670Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9052720Z >       sim = run_tardis(
2025-01-09T18:24:10.9052970Z             config_verysimple,
2025-01-09T18:24:10.9053030Z             atom_data=atomic_data,
2025-01-09T18:24:10.9053100Z             show_convergence_plots=False,
2025-01-09T18:24:10.9053160Z             log_level="CRITICAl",
2025-01-09T18:24:10.9053210Z         )
2025-01-09T18:24:10.9053210Z 
2025-01-09T18:24:10.9053330Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9053420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9053490Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9053560Z     simulation.run_convergence()
2025-01-09T18:24:10.9053650Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9053760Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9053830Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9053950Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9054050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9054050Z 
2025-01-09T18:24:10.9054260Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9054420Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9054600Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9054820Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9054940Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9055050Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9055060Z 
2025-01-09T18:24:10.9055130Z     def initialize_transport_state(
2025-01-09T18:24:10.9055170Z         self,
2025-01-09T18:24:10.9055230Z         simulation_state,
2025-01-09T18:24:10.9055280Z         opacity_state,
2025-01-09T18:24:10.9055340Z         macro_atom_state,
2025-01-09T18:24:10.9055390Z         plasma,
2025-01-09T18:24:10.9055430Z         no_of_packets,
2025-01-09T18:24:10.9055490Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9055540Z         iteration=0,
2025-01-09T18:24:10.9055590Z     ):
2025-01-09T18:24:10.9055690Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9055840Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9055890Z         else:
2025-01-09T18:24:10.9055950Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9056000Z     
2025-01-09T18:24:10.9056110Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9056180Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9056220Z         )
2025-01-09T18:24:10.9056270Z     
2025-01-09T18:24:10.9056370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9056450Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9056840Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9056840Z 
2025-01-09T18:24:10.9056940Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9057100Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl6] _
2025-01-09T18:24:10.9057100Z 
2025-01-09T18:24:10.9057640Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9057920Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9057920Z 
2025-01-09T18:24:10.9057990Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9058150Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9058200Z         """
2025-01-09T18:24:10.9058310Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9058360Z     
2025-01-09T18:24:10.9058410Z         Parameters
2025-01-09T18:24:10.9058460Z         ----------
2025-01-09T18:24:10.9058580Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9058670Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9058760Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9058810Z             Atomic data.
2025-01-09T18:24:10.9058860Z     
2025-01-09T18:24:10.9058910Z         Returns
2025-01-09T18:24:10.9058950Z         -------
2025-01-09T18:24:10.9059030Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9059090Z             Simulation object.
2025-01-09T18:24:10.9059140Z         """
2025-01-09T18:24:10.9059260Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9059400Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9059490Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9059590Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9059690Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9059830Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9059940Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9060020Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9060090Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9060140Z >       sim = run_tardis(
2025-01-09T18:24:10.9060200Z             config_verysimple,
2025-01-09T18:24:10.9060250Z             atom_data=atomic_data,
2025-01-09T18:24:10.9060320Z             show_convergence_plots=False,
2025-01-09T18:24:10.9060370Z             log_level="CRITICAl",
2025-01-09T18:24:10.9060430Z         )
2025-01-09T18:24:10.9060430Z 
2025-01-09T18:24:10.9060540Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9060630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9060690Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9060800Z     simulation.run_convergence()
2025-01-09T18:24:10.9060890Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9061010Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9061080Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9061200Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9061290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9061290Z 
2025-01-09T18:24:10.9061490Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9061660Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9061830Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9062050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9062170Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9062280Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9062280Z 
2025-01-09T18:24:10.9062340Z     def initialize_transport_state(
2025-01-09T18:24:10.9062390Z         self,
2025-01-09T18:24:10.9062450Z         simulation_state,
2025-01-09T18:24:10.9062530Z         opacity_state,
2025-01-09T18:24:10.9062590Z         macro_atom_state,
2025-01-09T18:24:10.9062640Z         plasma,
2025-01-09T18:24:10.9062690Z         no_of_packets,
2025-01-09T18:24:10.9062740Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9062790Z         iteration=0,
2025-01-09T18:24:10.9062930Z     ):
2025-01-09T18:24:10.9063030Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9063100Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9063150Z         else:
2025-01-09T18:24:10.9063210Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9063260Z     
2025-01-09T18:24:10.9063360Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9063440Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9063480Z         )
2025-01-09T18:24:10.9063530Z     
2025-01-09T18:24:10.9063630Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9063710Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9064090Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9064100Z 
2025-01-09T18:24:10.9064190Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9064350Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl7] _
2025-01-09T18:24:10.9064360Z 
2025-01-09T18:24:10.9064880Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9065260Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9065260Z 
2025-01-09T18:24:10.9065330Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9065440Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9065490Z         """
2025-01-09T18:24:10.9065600Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9065740Z     
2025-01-09T18:24:10.9065800Z         Parameters
2025-01-09T18:24:10.9065850Z         ----------
2025-01-09T18:24:10.9065960Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9066070Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9066160Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9066280Z             Atomic data.
2025-01-09T18:24:10.9066330Z     
2025-01-09T18:24:10.9066380Z         Returns
2025-01-09T18:24:10.9066430Z         -------
2025-01-09T18:24:10.9066510Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9066570Z             Simulation object.
2025-01-09T18:24:10.9066610Z         """
2025-01-09T18:24:10.9066730Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9066870Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9066960Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9067060Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9067170Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9067310Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9067420Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9067490Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9067570Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9067620Z >       sim = run_tardis(
2025-01-09T18:24:10.9067680Z             config_verysimple,
2025-01-09T18:24:10.9067740Z             atom_data=atomic_data,
2025-01-09T18:24:10.9067800Z             show_convergence_plots=False,
2025-01-09T18:24:10.9067860Z             log_level="CRITICAl",
2025-01-09T18:24:10.9067900Z         )
2025-01-09T18:24:10.9067910Z 
2025-01-09T18:24:10.9068020Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9068110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9068420Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9068490Z     simulation.run_convergence()
2025-01-09T18:24:10.9068580Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9068680Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9068760Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9068880Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9068970Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9068970Z 
2025-01-09T18:24:10.9069180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9069330Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9069510Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9069720Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9069850Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9069960Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9069970Z 
2025-01-09T18:24:10.9070030Z     def initialize_transport_state(
2025-01-09T18:24:10.9070080Z         self,
2025-01-09T18:24:10.9070130Z         simulation_state,
2025-01-09T18:24:10.9070180Z         opacity_state,
2025-01-09T18:24:10.9070240Z         macro_atom_state,
2025-01-09T18:24:10.9070320Z         plasma,
2025-01-09T18:24:10.9070370Z         no_of_packets,
2025-01-09T18:24:10.9070420Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9070470Z         iteration=0,
2025-01-09T18:24:10.9070520Z     ):
2025-01-09T18:24:10.9070620Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9070690Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9070730Z         else:
2025-01-09T18:24:10.9070800Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9070840Z     
2025-01-09T18:24:10.9070950Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9071020Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9071070Z         )
2025-01-09T18:24:10.9071110Z     
2025-01-09T18:24:10.9071480Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9071560Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9071940Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9071940Z 
2025-01-09T18:24:10.9072030Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9072190Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl8] _
2025-01-09T18:24:10.9072190Z 
2025-01-09T18:24:10.9072710Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9073000Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9073010Z 
2025-01-09T18:24:10.9073080Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9073190Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9073230Z         """
2025-01-09T18:24:10.9073350Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9073390Z     
2025-01-09T18:24:10.9073450Z         Parameters
2025-01-09T18:24:10.9073490Z         ----------
2025-01-09T18:24:10.9073610Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9073700Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9073870Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9073920Z             Atomic data.
2025-01-09T18:24:10.9073970Z     
2025-01-09T18:24:10.9074010Z         Returns
2025-01-09T18:24:10.9074060Z         -------
2025-01-09T18:24:10.9074130Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9074200Z             Simulation object.
2025-01-09T18:24:10.9074240Z         """
2025-01-09T18:24:10.9074360Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9074500Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9074600Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9074700Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9074810Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9074950Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9075060Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9075140Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9075210Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9075260Z >       sim = run_tardis(
2025-01-09T18:24:10.9075310Z             config_verysimple,
2025-01-09T18:24:10.9075370Z             atom_data=atomic_data,
2025-01-09T18:24:10.9075440Z             show_convergence_plots=False,
2025-01-09T18:24:10.9075500Z             log_level="CRITICAl",
2025-01-09T18:24:10.9075540Z         )
2025-01-09T18:24:10.9075550Z 
2025-01-09T18:24:10.9075650Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9075740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9075800Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9075870Z     simulation.run_convergence()
2025-01-09T18:24:10.9075960Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9076070Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9076140Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9076260Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9076350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9076430Z 
2025-01-09T18:24:10.9076640Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9076800Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9076970Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9077190Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9077310Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9077420Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9077430Z 
2025-01-09T18:24:10.9077490Z     def initialize_transport_state(
2025-01-09T18:24:10.9077540Z         self,
2025-01-09T18:24:10.9077600Z         simulation_state,
2025-01-09T18:24:10.9077650Z         opacity_state,
2025-01-09T18:24:10.9077700Z         macro_atom_state,
2025-01-09T18:24:10.9077740Z         plasma,
2025-01-09T18:24:10.9077800Z         no_of_packets,
2025-01-09T18:24:10.9077860Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9077910Z         iteration=0,
2025-01-09T18:24:10.9077950Z     ):
2025-01-09T18:24:10.9078050Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9078120Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9078170Z         else:
2025-01-09T18:24:10.9078230Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9078270Z     
2025-01-09T18:24:10.9078380Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9078450Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9078560Z         )
2025-01-09T18:24:10.9078600Z     
2025-01-09T18:24:10.9078700Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9078780Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9079160Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9079170Z 
2025-01-09T18:24:10.9079280Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9079450Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl9] _
2025-01-09T18:24:10.9079450Z 
2025-01-09T18:24:10.9079970Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9080250Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9080250Z 
2025-01-09T18:24:10.9080320Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9080430Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9080490Z         """
2025-01-09T18:24:10.9080610Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9080650Z     
2025-01-09T18:24:10.9080700Z         Parameters
2025-01-09T18:24:10.9080750Z         ----------
2025-01-09T18:24:10.9080860Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9080960Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9081050Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9081100Z             Atomic data.
2025-01-09T18:24:10.9081140Z     
2025-01-09T18:24:10.9081190Z         Returns
2025-01-09T18:24:10.9081240Z         -------
2025-01-09T18:24:10.9081320Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9081380Z             Simulation object.
2025-01-09T18:24:10.9081420Z         """
2025-01-09T18:24:10.9081540Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9081680Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9081870Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9081970Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9082070Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9082210Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9082320Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9082390Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9082470Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9082520Z >       sim = run_tardis(
2025-01-09T18:24:10.9082580Z             config_verysimple,
2025-01-09T18:24:10.9082640Z             atom_data=atomic_data,
2025-01-09T18:24:10.9082710Z             show_convergence_plots=False,
2025-01-09T18:24:10.9082760Z             log_level="CRITICAl",
2025-01-09T18:24:10.9082810Z         )
2025-01-09T18:24:10.9082820Z 
2025-01-09T18:24:10.9082920Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9083010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9083080Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9083140Z     simulation.run_convergence()
2025-01-09T18:24:10.9083230Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9083340Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9083400Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9083530Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9083800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9083810Z 
2025-01-09T18:24:10.9084010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9084170Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9084350Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9084560Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9084690Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9084790Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9084800Z 
2025-01-09T18:24:10.9084860Z     def initialize_transport_state(
2025-01-09T18:24:10.9084910Z         self,
2025-01-09T18:24:10.9084960Z         simulation_state,
2025-01-09T18:24:10.9085010Z         opacity_state,
2025-01-09T18:24:10.9085070Z         macro_atom_state,
2025-01-09T18:24:10.9085110Z         plasma,
2025-01-09T18:24:10.9085170Z         no_of_packets,
2025-01-09T18:24:10.9085230Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9085280Z         iteration=0,
2025-01-09T18:24:10.9085320Z     ):
2025-01-09T18:24:10.9085420Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9085500Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9085540Z         else:
2025-01-09T18:24:10.9085600Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9085640Z     
2025-01-09T18:24:10.9085740Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9085820Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9085870Z         )
2025-01-09T18:24:10.9085910Z     
2025-01-09T18:24:10.9086010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9086080Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9086490Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9086500Z 
2025-01-09T18:24:10.9086590Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9086760Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl10] _
2025-01-09T18:24:10.9086830Z 
2025-01-09T18:24:10.9087350Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9087630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9087640Z 
2025-01-09T18:24:10.9087700Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9087820Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9087860Z         """
2025-01-09T18:24:10.9087980Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9088020Z     
2025-01-09T18:24:10.9088070Z         Parameters
2025-01-09T18:24:10.9088120Z         ----------
2025-01-09T18:24:10.9088240Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9088330Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9088420Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9088470Z             Atomic data.
2025-01-09T18:24:10.9088520Z     
2025-01-09T18:24:10.9088560Z         Returns
2025-01-09T18:24:10.9088610Z         -------
2025-01-09T18:24:10.9088680Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9088740Z             Simulation object.
2025-01-09T18:24:10.9088780Z         """
2025-01-09T18:24:10.9088900Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9089350Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9089440Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9089540Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9089640Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9089790Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9089890Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9089970Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9090040Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9090090Z >       sim = run_tardis(
2025-01-09T18:24:10.9090150Z             config_verysimple,
2025-01-09T18:24:10.9090210Z             atom_data=atomic_data,
2025-01-09T18:24:10.9090270Z             show_convergence_plots=False,
2025-01-09T18:24:10.9090330Z             log_level="CRITICAl",
2025-01-09T18:24:10.9090380Z         )
2025-01-09T18:24:10.9090380Z 
2025-01-09T18:24:10.9090480Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9090570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9090630Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9090700Z     simulation.run_convergence()
2025-01-09T18:24:10.9090790Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9090900Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9090970Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9091090Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9091180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9091180Z 
2025-01-09T18:24:10.9091390Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9091550Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9091720Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9091940Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9092280Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9092410Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9092420Z 
2025-01-09T18:24:10.9092480Z     def initialize_transport_state(
2025-01-09T18:24:10.9092530Z         self,
2025-01-09T18:24:10.9092590Z         simulation_state,
2025-01-09T18:24:10.9092640Z         opacity_state,
2025-01-09T18:24:10.9092690Z         macro_atom_state,
2025-01-09T18:24:10.9092740Z         plasma,
2025-01-09T18:24:10.9092790Z         no_of_packets,
2025-01-09T18:24:10.9092840Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9092900Z         iteration=0,
2025-01-09T18:24:10.9092940Z     ):
2025-01-09T18:24:10.9093040Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9093110Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9093160Z         else:
2025-01-09T18:24:10.9093210Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9093260Z     
2025-01-09T18:24:10.9093360Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9093440Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9093490Z         )
2025-01-09T18:24:10.9093530Z     
2025-01-09T18:24:10.9093630Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9093710Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9094090Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9094100Z 
2025-01-09T18:24:10.9094270Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9094440Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl11] _
2025-01-09T18:24:10.9094440Z 
2025-01-09T18:24:10.9094950Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9095240Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9095240Z 
2025-01-09T18:24:10.9095320Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9095440Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9095490Z         """
2025-01-09T18:24:10.9095600Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9095650Z     
2025-01-09T18:24:10.9095700Z         Parameters
2025-01-09T18:24:10.9095750Z         ----------
2025-01-09T18:24:10.9095860Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9095960Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9096040Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9096100Z             Atomic data.
2025-01-09T18:24:10.9096140Z     
2025-01-09T18:24:10.9096190Z         Returns
2025-01-09T18:24:10.9100150Z         -------
2025-01-09T18:24:10.9100270Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9100320Z             Simulation object.
2025-01-09T18:24:10.9100370Z         """
2025-01-09T18:24:10.9100490Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9100630Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9100720Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9100830Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9100950Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9101090Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9101200Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9101460Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9101540Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9101590Z >       sim = run_tardis(
2025-01-09T18:24:10.9101650Z             config_verysimple,
2025-01-09T18:24:10.9101710Z             atom_data=atomic_data,
2025-01-09T18:24:10.9101770Z             show_convergence_plots=False,
2025-01-09T18:24:10.9101830Z             log_level="CRITICAl",
2025-01-09T18:24:10.9101880Z         )
2025-01-09T18:24:10.9101880Z 
2025-01-09T18:24:10.9101990Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9102080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9102150Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9102220Z     simulation.run_convergence()
2025-01-09T18:24:10.9102300Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9102420Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9102490Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9102610Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9102700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9102700Z 
2025-01-09T18:24:10.9102910Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9103070Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9103240Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9103460Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9103640Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9103750Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9103760Z 
2025-01-09T18:24:10.9103820Z     def initialize_transport_state(
2025-01-09T18:24:10.9103870Z         self,
2025-01-09T18:24:10.9103920Z         simulation_state,
2025-01-09T18:24:10.9103970Z         opacity_state,
2025-01-09T18:24:10.9104030Z         macro_atom_state,
2025-01-09T18:24:10.9104080Z         plasma,
2025-01-09T18:24:10.9104120Z         no_of_packets,
2025-01-09T18:24:10.9104190Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9104250Z         iteration=0,
2025-01-09T18:24:10.9104300Z     ):
2025-01-09T18:24:10.9104400Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9104470Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9104520Z         else:
2025-01-09T18:24:10.9104580Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9104620Z     
2025-01-09T18:24:10.9104730Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9104800Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9104850Z         )
2025-01-09T18:24:10.9104890Z     
2025-01-09T18:24:10.9104990Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9105070Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9105540Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9105550Z 
2025-01-09T18:24:10.9105640Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9105820Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl12] _
2025-01-09T18:24:10.9105830Z 
2025-01-09T18:24:10.9106340Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9106630Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9106710Z 
2025-01-09T18:24:10.9106780Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9106890Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9106940Z         """
2025-01-09T18:24:10.9107050Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9107090Z     
2025-01-09T18:24:10.9107140Z         Parameters
2025-01-09T18:24:10.9107200Z         ----------
2025-01-09T18:24:10.9107310Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9107410Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9107510Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9107570Z             Atomic data.
2025-01-09T18:24:10.9107610Z     
2025-01-09T18:24:10.9107660Z         Returns
2025-01-09T18:24:10.9107710Z         -------
2025-01-09T18:24:10.9107780Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9107840Z             Simulation object.
2025-01-09T18:24:10.9107890Z         """
2025-01-09T18:24:10.9108010Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9108150Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9108230Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9108330Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9108440Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9108580Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9108760Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9108840Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9108910Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9108970Z >       sim = run_tardis(
2025-01-09T18:24:10.9109020Z             config_verysimple,
2025-01-09T18:24:10.9109080Z             atom_data=atomic_data,
2025-01-09T18:24:10.9109140Z             show_convergence_plots=False,
2025-01-09T18:24:10.9109210Z             log_level="CRITICAl",
2025-01-09T18:24:10.9109250Z         )
2025-01-09T18:24:10.9109250Z 
2025-01-09T18:24:10.9109370Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9109460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9109520Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9109590Z     simulation.run_convergence()
2025-01-09T18:24:10.9109720Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9109850Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9109930Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9110050Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9110140Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9110150Z 
2025-01-09T18:24:10.9110350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9110510Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9110680Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9110900Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9111020Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9111130Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9111140Z 
2025-01-09T18:24:10.9111200Z     def initialize_transport_state(
2025-01-09T18:24:10.9111250Z         self,
2025-01-09T18:24:10.9111300Z         simulation_state,
2025-01-09T18:24:10.9111350Z         opacity_state,
2025-01-09T18:24:10.9111400Z         macro_atom_state,
2025-01-09T18:24:10.9111530Z         plasma,
2025-01-09T18:24:10.9111580Z         no_of_packets,
2025-01-09T18:24:10.9111640Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9111690Z         iteration=0,
2025-01-09T18:24:10.9111730Z     ):
2025-01-09T18:24:10.9111830Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9111900Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9111950Z         else:
2025-01-09T18:24:10.9112010Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9112050Z     
2025-01-09T18:24:10.9112160Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9112230Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9112280Z         )
2025-01-09T18:24:10.9112330Z     
2025-01-09T18:24:10.9112430Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9112510Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9112890Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9112900Z 
2025-01-09T18:24:10.9112990Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9113160Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl13] _
2025-01-09T18:24:10.9113160Z 
2025-01-09T18:24:10.9113720Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9114290Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9114290Z 
2025-01-09T18:24:10.9114360Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9114480Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9114520Z         """
2025-01-09T18:24:10.9114640Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9114690Z     
2025-01-09T18:24:10.9114730Z         Parameters
2025-01-09T18:24:10.9114800Z         ----------
2025-01-09T18:24:10.9114920Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9115020Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9115120Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9115170Z             Atomic data.
2025-01-09T18:24:10.9115220Z     
2025-01-09T18:24:10.9115260Z         Returns
2025-01-09T18:24:10.9115320Z         -------
2025-01-09T18:24:10.9115400Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9115450Z             Simulation object.
2025-01-09T18:24:10.9115510Z         """
2025-01-09T18:24:10.9115630Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9115780Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9115890Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9115980Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9116090Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9116230Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9116340Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9116410Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9116480Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9116540Z >       sim = run_tardis(
2025-01-09T18:24:10.9116600Z             config_verysimple,
2025-01-09T18:24:10.9116650Z             atom_data=atomic_data,
2025-01-09T18:24:10.9116720Z             show_convergence_plots=False,
2025-01-09T18:24:10.9116770Z             log_level="CRITICAl",
2025-01-09T18:24:10.9116820Z         )
2025-01-09T18:24:10.9117040Z 
2025-01-09T18:24:10.9117160Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9117250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9117310Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9117370Z     simulation.run_convergence()
2025-01-09T18:24:10.9117470Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9117580Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9117650Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9117780Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9117880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9117890Z 
2025-01-09T18:24:10.9118110Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9118270Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9118460Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9118680Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9118800Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9118910Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9118910Z 
2025-01-09T18:24:10.9118980Z     def initialize_transport_state(
2025-01-09T18:24:10.9119020Z         self,
2025-01-09T18:24:10.9119080Z         simulation_state,
2025-01-09T18:24:10.9119200Z         opacity_state,
2025-01-09T18:24:10.9119260Z         macro_atom_state,
2025-01-09T18:24:10.9119310Z         plasma,
2025-01-09T18:24:10.9119360Z         no_of_packets,
2025-01-09T18:24:10.9119420Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9119470Z         iteration=0,
2025-01-09T18:24:10.9119520Z     ):
2025-01-09T18:24:10.9119620Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9119700Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9119740Z         else:
2025-01-09T18:24:10.9119800Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9119850Z     
2025-01-09T18:24:10.9119950Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9120020Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9120070Z         )
2025-01-09T18:24:10.9120110Z     
2025-01-09T18:24:10.9120220Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9120290Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9120690Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9120690Z 
2025-01-09T18:24:10.9120780Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9120940Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl14] _
2025-01-09T18:24:10.9120940Z 
2025-01-09T18:24:10.9121460Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9122530Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9122640Z 
2025-01-09T18:24:10.9122900Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9123240Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9123400Z         """
2025-01-09T18:24:10.9123720Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9123870Z     
2025-01-09T18:24:10.9124030Z         Parameters
2025-01-09T18:24:10.9124190Z         ----------
2025-01-09T18:24:10.9125070Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9125350Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9125590Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9125750Z             Atomic data.
2025-01-09T18:24:10.9125900Z     
2025-01-09T18:24:10.9126050Z         Returns
2025-01-09T18:24:10.9126210Z         -------
2025-01-09T18:24:10.9126420Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9126600Z             Simulation object.
2025-01-09T18:24:10.9126740Z         """
2025-01-09T18:24:10.9127070Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9127450Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9127700Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9127970Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9128260Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9128650Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9128930Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9129150Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9129350Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9129520Z >       sim = run_tardis(
2025-01-09T18:24:10.9129680Z             config_verysimple,
2025-01-09T18:24:10.9129860Z             atom_data=atomic_data,
2025-01-09T18:24:10.9130050Z             show_convergence_plots=False,
2025-01-09T18:24:10.9130460Z             log_level="CRITICAl",
2025-01-09T18:24:10.9130600Z         )
2025-01-09T18:24:10.9130620Z 
2025-01-09T18:24:10.9131890Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9132170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9132350Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9132560Z     simulation.run_convergence()
2025-01-09T18:24:10.9132800Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9133110Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9133310Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9133840Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9134160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9134170Z 
2025-01-09T18:24:10.9134770Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9135220Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9135700Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9136340Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9136690Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9136990Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9137000Z 
2025-01-09T18:24:10.9137440Z     def initialize_transport_state(
2025-01-09T18:24:10.9137640Z         self,
2025-01-09T18:24:10.9137840Z         simulation_state,
2025-01-09T18:24:10.9138020Z         opacity_state,
2025-01-09T18:24:10.9138180Z         macro_atom_state,
2025-01-09T18:24:10.9138340Z         plasma,
2025-01-09T18:24:10.9138490Z         no_of_packets,
2025-01-09T18:24:10.9138680Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9138840Z         iteration=0,
2025-01-09T18:24:10.9138980Z     ):
2025-01-09T18:24:10.9139480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9139670Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9139820Z         else:
2025-01-09T18:24:10.9140000Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9140560Z     
2025-01-09T18:24:10.9140850Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9141060Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9141430Z         )
2025-01-09T18:24:10.9142020Z     
2025-01-09T18:24:10.9142370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9142600Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9144070Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9144150Z 
2025-01-09T18:24:10.9144890Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9145080Z _ ERROR at setup of TestSDECPlotter.test_mpl_image[plotter_generate_plot_mpl15] _
2025-01-09T18:24:10.9145080Z 
2025-01-09T18:24:10.9145620Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9149210Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9149240Z 
2025-01-09T18:24:10.9149450Z     @pytest.fixture(scope="module")
2025-01-09T18:24:10.9150120Z     def simulation_simple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9150270Z         """
2025-01-09T18:24:10.9150580Z         Instantiate SDEC plotter using a simple simulation model.
2025-01-09T18:24:10.9151500Z     
2025-01-09T18:24:10.9152030Z         Parameters
2025-01-09T18:24:10.9152190Z         ----------
2025-01-09T18:24:10.9152750Z         config_verysimple : tardis.io.config_reader.Configuration
2025-01-09T18:24:10.9153150Z             Configuration object for a very simple simulation.
2025-01-09T18:24:10.9153390Z         atomic_dataset : str or tardis.atomic.AtomData
2025-01-09T18:24:10.9153940Z             Atomic data.
2025-01-09T18:24:10.9154080Z     
2025-01-09T18:24:10.9154230Z         Returns
2025-01-09T18:24:10.9154610Z         -------
2025-01-09T18:24:10.9154950Z         sim: tardis.simulation.base.Simulation
2025-01-09T18:24:10.9155110Z             Simulation object.
2025-01-09T18:24:10.9155500Z         """
2025-01-09T18:24:10.9155930Z         # Setup simulation configuration using config_verysimple and
2025-01-09T18:24:10.9156680Z         # override properties in such a way to make the simulation run faster
2025-01-09T18:24:10.9177760Z         config_verysimple.montecarlo.iterations = 3
2025-01-09T18:24:10.9178020Z         config_verysimple.montecarlo.no_of_packets = 4000
2025-01-09T18:24:10.9178140Z         config_verysimple.montecarlo.last_no_of_packets = -1
2025-01-09T18:24:10.9178280Z         config_verysimple.spectrum.virtual.virtual_packet_logging = True
2025-01-09T18:24:10.9178390Z         config_verysimple.montecarlo.no_of_virtual_packets = 1
2025-01-09T18:24:10.9178470Z         config_verysimple.spectrum.num = 2000
2025-01-09T18:24:10.9178550Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9178600Z >       sim = run_tardis(
2025-01-09T18:24:10.9178670Z             config_verysimple,
2025-01-09T18:24:10.9178720Z             atom_data=atomic_data,
2025-01-09T18:24:10.9178790Z             show_convergence_plots=False,
2025-01-09T18:24:10.9178850Z             log_level="CRITICAl",
2025-01-09T18:24:10.9178900Z         )
2025-01-09T18:24:10.9178900Z 
2025-01-09T18:24:10.9179020Z tardis/visualization/tools/tests/test_sdec_plot.py:73: 
2025-01-09T18:24:10.9179250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9179470Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9179570Z     simulation.run_convergence()
2025-01-09T18:24:10.9179670Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9179790Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9180010Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9180440Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9180550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9180550Z 
2025-01-09T18:24:10.9180760Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14eed3440>
2025-01-09T18:24:10.9181210Z simulation_state = <tardis.model.base.SimulationState object at 0x156a7b260>
2025-01-09T18:24:10.9181390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x38a3b17c0>
2025-01-09T18:24:10.9181610Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x3610d3c20>
2025-01-09T18:24:10.9182030Z plasma = <tardis.plasma.base.BasePlasma object at 0x14efc7dd0>
2025-01-09T18:24:10.9182150Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9182150Z 
2025-01-09T18:24:10.9182220Z     def initialize_transport_state(
2025-01-09T18:24:10.9182260Z         self,
2025-01-09T18:24:10.9182320Z         simulation_state,
2025-01-09T18:24:10.9182370Z         opacity_state,
2025-01-09T18:24:10.9182430Z         macro_atom_state,
2025-01-09T18:24:10.9182470Z         plasma,
2025-01-09T18:24:10.9182700Z         no_of_packets,
2025-01-09T18:24:10.9182890Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9182940Z         iteration=0,
2025-01-09T18:24:10.9182990Z     ):
2025-01-09T18:24:10.9183090Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9183170Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9183540Z         else:
2025-01-09T18:24:10.9183600Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9183640Z     
2025-01-09T18:24:10.9183760Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9183830Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9183880Z         )
2025-01-09T18:24:10.9183920Z     
2025-01-09T18:24:10.9184030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9184100Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9184810Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9184820Z 
2025-01-09T18:24:10.9184910Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9185440Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range0-packet_out_nu] _
2025-01-09T18:24:10.9185450Z 
2025-01-09T18:24:10.9186280Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9186570Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9186580Z 
2025-01-09T18:24:10.9186660Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9186800Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9186890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9187040Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9187100Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9187150Z >       sim.run_final()
2025-01-09T18:24:10.9187150Z 
2025-01-09T18:24:10.9187210Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9187310Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9187390Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9187500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9187580Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9187930Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9188030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9188030Z 
2025-01-09T18:24:10.9188240Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9188400Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9188570Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9188790Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9188920Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9189040Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9189040Z 
2025-01-09T18:24:10.9189100Z     def initialize_transport_state(
2025-01-09T18:24:10.9189150Z         self,
2025-01-09T18:24:10.9189210Z         simulation_state,
2025-01-09T18:24:10.9189260Z         opacity_state,
2025-01-09T18:24:10.9189320Z         macro_atom_state,
2025-01-09T18:24:10.9189370Z         plasma,
2025-01-09T18:24:10.9189430Z         no_of_packets,
2025-01-09T18:24:10.9189490Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9189550Z         iteration=0,
2025-01-09T18:24:10.9189590Z     ):
2025-01-09T18:24:10.9189700Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9189780Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9189830Z         else:
2025-01-09T18:24:10.9189890Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9190020Z     
2025-01-09T18:24:10.9190130Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9190210Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9190250Z         )
2025-01-09T18:24:10.9190300Z     
2025-01-09T18:24:10.9190400Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9190490Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9190930Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9190940Z 
2025-01-09T18:24:10.9191030Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9191270Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range1-packet_in_nu] _
2025-01-09T18:24:10.9191270Z 
2025-01-09T18:24:10.9191810Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9192090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9192100Z 
2025-01-09T18:24:10.9192170Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9192290Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9192370Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9192520Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9192590Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9192640Z >       sim.run_final()
2025-01-09T18:24:10.9192650Z 
2025-01-09T18:24:10.9192700Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9192790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9192870Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9192980Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9193060Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9193180Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9193360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9193360Z 
2025-01-09T18:24:10.9193570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9193720Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9193900Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9194110Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9194230Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9194340Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9194350Z 
2025-01-09T18:24:10.9194410Z     def initialize_transport_state(
2025-01-09T18:24:10.9194460Z         self,
2025-01-09T18:24:10.9194510Z         simulation_state,
2025-01-09T18:24:10.9194570Z         opacity_state,
2025-01-09T18:24:10.9194620Z         macro_atom_state,
2025-01-09T18:24:10.9194670Z         plasma,
2025-01-09T18:24:10.9194740Z         no_of_packets,
2025-01-09T18:24:10.9194800Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9194850Z         iteration=0,
2025-01-09T18:24:10.9194890Z     ):
2025-01-09T18:24:10.9194990Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9195070Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9195120Z         else:
2025-01-09T18:24:10.9195190Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9195240Z     
2025-01-09T18:24:10.9195350Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9195500Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9195550Z         )
2025-01-09T18:24:10.9195590Z     
2025-01-09T18:24:10.9195690Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9195770Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9196160Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9196160Z 
2025-01-09T18:24:10.9196250Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9196490Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[wavelength_range2-packet_out_nu] _
2025-01-09T18:24:10.9196490Z 
2025-01-09T18:24:10.9197020Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9197320Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9197340Z 
2025-01-09T18:24:10.9197400Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9197530Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9197610Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9197750Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9197810Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9197880Z >       sim.run_final()
2025-01-09T18:24:10.9197880Z 
2025-01-09T18:24:10.9197940Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9198040Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9198110Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9198230Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9198310Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9198430Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9198530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9198610Z 
2025-01-09T18:24:10.9198820Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9198980Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9199150Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9199370Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9199500Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9199620Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9199630Z 
2025-01-09T18:24:10.9199700Z     def initialize_transport_state(
2025-01-09T18:24:10.9199750Z         self,
2025-01-09T18:24:10.9199800Z         simulation_state,
2025-01-09T18:24:10.9199850Z         opacity_state,
2025-01-09T18:24:10.9199910Z         macro_atom_state,
2025-01-09T18:24:10.9199960Z         plasma,
2025-01-09T18:24:10.9200010Z         no_of_packets,
2025-01-09T18:24:10.9200070Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9200120Z         iteration=0,
2025-01-09T18:24:10.9200160Z     ):
2025-01-09T18:24:10.9200260Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9200330Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9200380Z         else:
2025-01-09T18:24:10.9200440Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9200490Z     
2025-01-09T18:24:10.9200590Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9200670Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9200800Z         )
2025-01-09T18:24:10.9200840Z     
2025-01-09T18:24:10.9200950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9201030Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9201410Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9201420Z 
2025-01-09T18:24:10.9201510Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9201720Z _ ERROR at setup of TestLineInfoWidgetData.test_get_species_interactions[None-packet_in_nu] _
2025-01-09T18:24:10.9201720Z 
2025-01-09T18:24:10.9202260Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9202550Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9202550Z 
2025-01-09T18:24:10.9202620Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9202740Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9202820Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9202970Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9203030Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9203080Z >       sim.run_final()
2025-01-09T18:24:10.9203090Z 
2025-01-09T18:24:10.9203150Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9203240Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9203320Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9207660Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9207770Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9207890Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9207990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9208000Z 
2025-01-09T18:24:10.9208210Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9208550Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9208720Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9208970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9209090Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9209210Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9209210Z 
2025-01-09T18:24:10.9209280Z     def initialize_transport_state(
2025-01-09T18:24:10.9209330Z         self,
2025-01-09T18:24:10.9209390Z         simulation_state,
2025-01-09T18:24:10.9209440Z         opacity_state,
2025-01-09T18:24:10.9209500Z         macro_atom_state,
2025-01-09T18:24:10.9209550Z         plasma,
2025-01-09T18:24:10.9209600Z         no_of_packets,
2025-01-09T18:24:10.9209660Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9209710Z         iteration=0,
2025-01-09T18:24:10.9209760Z     ):
2025-01-09T18:24:10.9209860Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9209930Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9209980Z         else:
2025-01-09T18:24:10.9210040Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9210080Z     
2025-01-09T18:24:10.9210190Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9210270Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9210310Z         )
2025-01-09T18:24:10.9210610Z     
2025-01-09T18:24:10.9210710Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9210790Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9211180Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9211180Z 
2025-01-09T18:24:10.9211270Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9211510Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range0-packet_out_nu] _
2025-01-09T18:24:10.9211520Z 
2025-01-09T18:24:10.9212040Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9212320Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9212320Z 
2025-01-09T18:24:10.9212400Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9212520Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9212600Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9212730Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9212800Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9212850Z >       sim.run_final()
2025-01-09T18:24:10.9212850Z 
2025-01-09T18:24:10.9212910Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9212990Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9213070Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9213190Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9213250Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9213380Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9213470Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9213470Z 
2025-01-09T18:24:10.9213680Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9214020Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9214200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9214420Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9214540Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9214650Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9214660Z 
2025-01-09T18:24:10.9214720Z     def initialize_transport_state(
2025-01-09T18:24:10.9214760Z         self,
2025-01-09T18:24:10.9214820Z         simulation_state,
2025-01-09T18:24:10.9214870Z         opacity_state,
2025-01-09T18:24:10.9214920Z         macro_atom_state,
2025-01-09T18:24:10.9214980Z         plasma,
2025-01-09T18:24:10.9215030Z         no_of_packets,
2025-01-09T18:24:10.9215080Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9215140Z         iteration=0,
2025-01-09T18:24:10.9215190Z     ):
2025-01-09T18:24:10.9215280Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9215350Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9215400Z         else:
2025-01-09T18:24:10.9215450Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9215490Z     
2025-01-09T18:24:10.9215600Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9215670Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9215720Z         )
2025-01-09T18:24:10.9215760Z     
2025-01-09T18:24:10.9215860Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9215990Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9216380Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9216380Z 
2025-01-09T18:24:10.9216470Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9216700Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range1-packet_in_nu] _
2025-01-09T18:24:10.9216700Z 
2025-01-09T18:24:10.9217220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9217500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9217500Z 
2025-01-09T18:24:10.9217570Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9217690Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9217770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9217900Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9217970Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9218020Z >       sim.run_final()
2025-01-09T18:24:10.9218030Z 
2025-01-09T18:24:10.9218080Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9218170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9218240Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9218360Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9218420Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9218550Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9218630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9218640Z 
2025-01-09T18:24:10.9218840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9219000Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9219220Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9219440Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9219560Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9219660Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9219670Z 
2025-01-09T18:24:10.9219730Z     def initialize_transport_state(
2025-01-09T18:24:10.9219780Z         self,
2025-01-09T18:24:10.9219830Z         simulation_state,
2025-01-09T18:24:10.9219890Z         opacity_state,
2025-01-09T18:24:10.9219940Z         macro_atom_state,
2025-01-09T18:24:10.9219990Z         plasma,
2025-01-09T18:24:10.9220030Z         no_of_packets,
2025-01-09T18:24:10.9220090Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9220140Z         iteration=0,
2025-01-09T18:24:10.9220180Z     ):
2025-01-09T18:24:10.9220370Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9220440Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9220490Z         else:
2025-01-09T18:24:10.9220540Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9220590Z     
2025-01-09T18:24:10.9220690Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9220770Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9220810Z         )
2025-01-09T18:24:10.9220850Z     
2025-01-09T18:24:10.9220950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9221030Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9221470Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9221480Z 
2025-01-09T18:24:10.9221570Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9221800Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-wavelength_range2-packet_out_nu] _
2025-01-09T18:24:10.9221810Z 
2025-01-09T18:24:10.9222320Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9222600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9222610Z 
2025-01-09T18:24:10.9222670Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9222800Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9222880Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9223020Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9223080Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9223130Z >       sim.run_final()
2025-01-09T18:24:10.9223140Z 
2025-01-09T18:24:10.9223190Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9223280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9223360Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9223470Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9223540Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9223660Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9223750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9223760Z 
2025-01-09T18:24:10.9223960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9224120Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9224290Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9224560Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9224690Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9224790Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9224800Z 
2025-01-09T18:24:10.9224860Z     def initialize_transport_state(
2025-01-09T18:24:10.9224910Z         self,
2025-01-09T18:24:10.9224970Z         simulation_state,
2025-01-09T18:24:10.9225010Z         opacity_state,
2025-01-09T18:24:10.9236380Z         macro_atom_state,
2025-01-09T18:24:10.9236960Z         plasma,
2025-01-09T18:24:10.9237110Z         no_of_packets,
2025-01-09T18:24:10.9237650Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9238060Z         iteration=0,
2025-01-09T18:24:10.9238210Z     ):
2025-01-09T18:24:10.9238480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9238700Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9238840Z         else:
2025-01-09T18:24:10.9239020Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9239490Z     
2025-01-09T18:24:10.9240010Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9240220Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9240370Z         )
2025-01-09T18:24:10.9240510Z     
2025-01-09T18:24:10.9241290Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9241510Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9243070Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9243790Z 
2025-01-09T18:24:10.9244070Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9244610Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[exc-None-packet_in_nu] _
2025-01-09T18:24:10.9244620Z 
2025-01-09T18:24:10.9245960Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9246680Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9246780Z 
2025-01-09T18:24:10.9246920Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9247050Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9247180Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9247330Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9247400Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9247460Z >       sim.run_final()
2025-01-09T18:24:10.9247470Z 
2025-01-09T18:24:10.9247530Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9247640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9247710Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9247830Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9247910Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9248030Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9248130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9248130Z 
2025-01-09T18:24:10.9248340Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9248510Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9248680Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9248900Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9249310Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9249420Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9249430Z 
2025-01-09T18:24:10.9249490Z     def initialize_transport_state(
2025-01-09T18:24:10.9249540Z         self,
2025-01-09T18:24:10.9249600Z         simulation_state,
2025-01-09T18:24:10.9249650Z         opacity_state,
2025-01-09T18:24:10.9249710Z         macro_atom_state,
2025-01-09T18:24:10.9249760Z         plasma,
2025-01-09T18:24:10.9249820Z         no_of_packets,
2025-01-09T18:24:10.9249880Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9249940Z         iteration=0,
2025-01-09T18:24:10.9249980Z     ):
2025-01-09T18:24:10.9250090Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9250170Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9250230Z         else:
2025-01-09T18:24:10.9250290Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9250340Z     
2025-01-09T18:24:10.9250450Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9250530Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9250580Z         )
2025-01-09T18:24:10.9250620Z     
2025-01-09T18:24:10.9250730Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9250810Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9251210Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9251510Z 
2025-01-09T18:24:10.9251620Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9251870Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range0-packet_out_nu] _
2025-01-09T18:24:10.9251880Z 
2025-01-09T18:24:10.9252410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9252700Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9252710Z 
2025-01-09T18:24:10.9252770Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9252900Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9252980Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9253120Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9253190Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9253240Z >       sim.run_final()
2025-01-09T18:24:10.9253250Z 
2025-01-09T18:24:10.9253300Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9253400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9253480Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9253590Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9253670Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9253790Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9253880Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9253880Z 
2025-01-09T18:24:10.9254090Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9254260Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9254440Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9254660Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9254990Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9255100Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9255100Z 
2025-01-09T18:24:10.9255160Z     def initialize_transport_state(
2025-01-09T18:24:10.9255220Z         self,
2025-01-09T18:24:10.9255270Z         simulation_state,
2025-01-09T18:24:10.9255330Z         opacity_state,
2025-01-09T18:24:10.9255380Z         macro_atom_state,
2025-01-09T18:24:10.9255430Z         plasma,
2025-01-09T18:24:10.9255480Z         no_of_packets,
2025-01-09T18:24:10.9255540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9255590Z         iteration=0,
2025-01-09T18:24:10.9255640Z     ):
2025-01-09T18:24:10.9255740Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9255820Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9255870Z         else:
2025-01-09T18:24:10.9255930Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9255980Z     
2025-01-09T18:24:10.9256090Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9256170Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9256220Z         )
2025-01-09T18:24:10.9256260Z     
2025-01-09T18:24:10.9256370Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9256450Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9256840Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9256900Z 
2025-01-09T18:24:10.9257010Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9257250Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range1-packet_in_nu] _
2025-01-09T18:24:10.9257260Z 
2025-01-09T18:24:10.9257800Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9258090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9258090Z 
2025-01-09T18:24:10.9258160Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9258290Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9258360Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9258510Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9258580Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9258640Z >       sim.run_final()
2025-01-09T18:24:10.9258640Z 
2025-01-09T18:24:10.9258700Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9258800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9258880Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9258990Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9259070Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9259200Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9259290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9259290Z 
2025-01-09T18:24:10.9259510Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9259670Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9259850Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9260080Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9260210Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9260390Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9260390Z 
2025-01-09T18:24:10.9260460Z     def initialize_transport_state(
2025-01-09T18:24:10.9260500Z         self,
2025-01-09T18:24:10.9260560Z         simulation_state,
2025-01-09T18:24:10.9260610Z         opacity_state,
2025-01-09T18:24:10.9260670Z         macro_atom_state,
2025-01-09T18:24:10.9260720Z         plasma,
2025-01-09T18:24:10.9260770Z         no_of_packets,
2025-01-09T18:24:10.9260830Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9260890Z         iteration=0,
2025-01-09T18:24:10.9260930Z     ):
2025-01-09T18:24:10.9261030Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9261110Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9261160Z         else:
2025-01-09T18:24:10.9261220Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9261260Z     
2025-01-09T18:24:10.9261380Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9261450Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9261500Z         )
2025-01-09T18:24:10.9261550Z     
2025-01-09T18:24:10.9261650Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9261730Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9262130Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9262140Z 
2025-01-09T18:24:10.9262230Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9262540Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-wavelength_range2-packet_out_nu] _
2025-01-09T18:24:10.9262540Z 
2025-01-09T18:24:10.9263090Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9263380Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9263380Z 
2025-01-09T18:24:10.9263450Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9263580Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9263660Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9263800Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9263870Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9263920Z >       sim.run_final()
2025-01-09T18:24:10.9263930Z 
2025-01-09T18:24:10.9263990Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9264080Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9264150Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9264270Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9264340Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9264470Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9264560Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9264570Z 
2025-01-09T18:24:10.9264780Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9264940Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9265120Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9265350Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9265470Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9265590Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9265640Z 
2025-01-09T18:24:10.9265710Z     def initialize_transport_state(
2025-01-09T18:24:10.9265760Z         self,
2025-01-09T18:24:10.9265810Z         simulation_state,
2025-01-09T18:24:10.9265870Z         opacity_state,
2025-01-09T18:24:10.9265930Z         macro_atom_state,
2025-01-09T18:24:10.9265970Z         plasma,
2025-01-09T18:24:10.9266030Z         no_of_packets,
2025-01-09T18:24:10.9266090Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9266140Z         iteration=0,
2025-01-09T18:24:10.9266190Z     ):
2025-01-09T18:24:10.9266290Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9266370Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9266430Z         else:
2025-01-09T18:24:10.9266480Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9266530Z     
2025-01-09T18:24:10.9266640Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9266720Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9266770Z         )
2025-01-09T18:24:10.9266810Z     
2025-01-09T18:24:10.9266920Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9267000Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9267390Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9267390Z 
2025-01-09T18:24:10.9267480Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9267700Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[de-exc-None-packet_in_nu] _
2025-01-09T18:24:10.9267740Z 
2025-01-09T18:24:10.9268310Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9268620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9268620Z 
2025-01-09T18:24:10.9268700Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9268840Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9268920Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9269070Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9269150Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9269200Z >       sim.run_final()
2025-01-09T18:24:10.9269200Z 
2025-01-09T18:24:10.9269260Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9269350Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9269430Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9269530Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9269610Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9269730Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9269820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9269820Z 
2025-01-09T18:24:10.9270020Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9270180Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9270360Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9270570Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9270700Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9270800Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9270810Z 
2025-01-09T18:24:10.9270880Z     def initialize_transport_state(
2025-01-09T18:24:10.9270960Z         self,
2025-01-09T18:24:10.9271020Z         simulation_state,
2025-01-09T18:24:10.9271070Z         opacity_state,
2025-01-09T18:24:10.9271120Z         macro_atom_state,
2025-01-09T18:24:10.9271170Z         plasma,
2025-01-09T18:24:10.9271220Z         no_of_packets,
2025-01-09T18:24:10.9271280Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9271330Z         iteration=0,
2025-01-09T18:24:10.9271380Z     ):
2025-01-09T18:24:10.9271470Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9271550Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9271590Z         else:
2025-01-09T18:24:10.9271660Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9271700Z     
2025-01-09T18:24:10.9271800Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9271870Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9271920Z         )
2025-01-09T18:24:10.9271970Z     
2025-01-09T18:24:10.9272080Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9272150Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9272530Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9272540Z 
2025-01-09T18:24:10.9272630Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9272850Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range0-packet_out_nu] _
2025-01-09T18:24:10.9272860Z 
2025-01-09T18:24:10.9273630Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9273920Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9273920Z 
2025-01-09T18:24:10.9274000Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9274130Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9274200Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9274350Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9274410Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9274470Z >       sim.run_final()
2025-01-09T18:24:10.9274470Z 
2025-01-09T18:24:10.9274520Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9274620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9274690Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9274810Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9274880Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9275020Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9275110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9275110Z 
2025-01-09T18:24:10.9275320Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9275480Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9275650Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9275870Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9276000Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9276110Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9276120Z 
2025-01-09T18:24:10.9276180Z     def initialize_transport_state(
2025-01-09T18:24:10.9276230Z         self,
2025-01-09T18:24:10.9276490Z         simulation_state,
2025-01-09T18:24:10.9276540Z         opacity_state,
2025-01-09T18:24:10.9276600Z         macro_atom_state,
2025-01-09T18:24:10.9276640Z         plasma,
2025-01-09T18:24:10.9276700Z         no_of_packets,
2025-01-09T18:24:10.9276850Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9276910Z         iteration=0,
2025-01-09T18:24:10.9276950Z     ):
2025-01-09T18:24:10.9277050Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9277130Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9277180Z         else:
2025-01-09T18:24:10.9277230Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9277280Z     
2025-01-09T18:24:10.9277390Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9277470Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9277510Z         )
2025-01-09T18:24:10.9277570Z     
2025-01-09T18:24:10.9277670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9277750Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9278790Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9278890Z 
2025-01-09T18:24:10.9279210Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9280050Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range1-packet_in_nu] _
2025-01-09T18:24:10.9280070Z 
2025-01-09T18:24:10.9281880Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9283260Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9283280Z 
2025-01-09T18:24:10.9283480Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9283810Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9284030Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9284410Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9284600Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9284750Z >       sim.run_final()
2025-01-09T18:24:10.9284760Z 
2025-01-09T18:24:10.9284940Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9285180Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9285410Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9285710Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9286320Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9286700Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9289620Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9289660Z 
2025-01-09T18:24:10.9289920Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9290080Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9290260Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9290480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9290610Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9290730Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9290740Z 
2025-01-09T18:24:10.9290800Z     def initialize_transport_state(
2025-01-09T18:24:10.9290850Z         self,
2025-01-09T18:24:10.9290910Z         simulation_state,
2025-01-09T18:24:10.9290960Z         opacity_state,
2025-01-09T18:24:10.9291220Z         macro_atom_state,
2025-01-09T18:24:10.9291280Z         plasma,
2025-01-09T18:24:10.9291330Z         no_of_packets,
2025-01-09T18:24:10.9291400Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9291460Z         iteration=0,
2025-01-09T18:24:10.9291510Z     ):
2025-01-09T18:24:10.9291610Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9291700Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9291750Z         else:
2025-01-09T18:24:10.9291810Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9291860Z     
2025-01-09T18:24:10.9291970Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9292050Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9292100Z         )
2025-01-09T18:24:10.9292150Z     
2025-01-09T18:24:10.9292260Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9292340Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9292750Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9292760Z 
2025-01-09T18:24:10.9292860Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9293100Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-wavelength_range2-packet_out_nu] _
2025-01-09T18:24:10.9293110Z 
2025-01-09T18:24:10.9293660Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9294050Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9294060Z 
2025-01-09T18:24:10.9294130Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9294270Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9294350Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9294500Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9294560Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9294620Z >       sim.run_final()
2025-01-09T18:24:10.9294620Z 
2025-01-09T18:24:10.9294680Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9294780Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9302960Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9303300Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9303410Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9303550Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9303650Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9303660Z 
2025-01-09T18:24:10.9303890Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9304060Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9304240Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9304460Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9304590Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9304700Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9304710Z 
2025-01-09T18:24:10.9304780Z     def initialize_transport_state(
2025-01-09T18:24:10.9304830Z         self,
2025-01-09T18:24:10.9304890Z         simulation_state,
2025-01-09T18:24:10.9304940Z         opacity_state,
2025-01-09T18:24:10.9304990Z         macro_atom_state,
2025-01-09T18:24:10.9305330Z         plasma,
2025-01-09T18:24:10.9305380Z         no_of_packets,
2025-01-09T18:24:10.9305440Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9305490Z         iteration=0,
2025-01-09T18:24:10.9305540Z     ):
2025-01-09T18:24:10.9305650Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9305730Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9305770Z         else:
2025-01-09T18:24:10.9305830Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9305870Z     
2025-01-09T18:24:10.9305980Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9306060Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9306110Z         )
2025-01-09T18:24:10.9306150Z     
2025-01-09T18:24:10.9306260Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9306340Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9306740Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9306740Z 
2025-01-09T18:24:10.9306840Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9307040Z _ ERROR at setup of TestLineInfoWidgetData.test_get_last_line_counts[both-None-packet_in_nu] _
2025-01-09T18:24:10.9307050Z 
2025-01-09T18:24:10.9307590Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9307980Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9307990Z 
2025-01-09T18:24:10.9308060Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9308180Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9308260Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9308400Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9308470Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9308520Z >       sim.run_final()
2025-01-09T18:24:10.9308520Z 
2025-01-09T18:24:10.9308580Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9308670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9308750Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9308870Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9308940Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9309060Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9309150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9309150Z 
2025-01-09T18:24:10.9309350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9309520Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9309710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9309940Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9310060Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9310170Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9310170Z 
2025-01-09T18:24:10.9310240Z     def initialize_transport_state(
2025-01-09T18:24:10.9310290Z         self,
2025-01-09T18:24:10.9310340Z         simulation_state,
2025-01-09T18:24:10.9310390Z         opacity_state,
2025-01-09T18:24:10.9310450Z         macro_atom_state,
2025-01-09T18:24:10.9310500Z         plasma,
2025-01-09T18:24:10.9310550Z         no_of_packets,
2025-01-09T18:24:10.9310680Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9310730Z         iteration=0,
2025-01-09T18:24:10.9310770Z     ):
2025-01-09T18:24:10.9310870Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9310940Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9310990Z         else:
2025-01-09T18:24:10.9311050Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9311090Z     
2025-01-09T18:24:10.9311200Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9311270Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9311320Z         )
2025-01-09T18:24:10.9311360Z     
2025-01-09T18:24:10.9311470Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9311550Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9311930Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9311940Z 
2025-01-09T18:24:10.9312040Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9312230Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[liw_with_selection0] _
2025-01-09T18:24:10.9312230Z 
2025-01-09T18:24:10.9312770Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9313060Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9313370Z 
2025-01-09T18:24:10.9313450Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9313580Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9313650Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9313790Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9313860Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9313920Z >       sim.run_final()
2025-01-09T18:24:10.9313920Z 
2025-01-09T18:24:10.9313980Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9314070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9314180Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9314290Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9314370Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9314490Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9314590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9314590Z 
2025-01-09T18:24:10.9314790Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9314960Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9315130Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9315360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9315490Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9315600Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9315600Z 
2025-01-09T18:24:10.9315670Z     def initialize_transport_state(
2025-01-09T18:24:10.9315710Z         self,
2025-01-09T18:24:10.9315770Z         simulation_state,
2025-01-09T18:24:10.9315820Z         opacity_state,
2025-01-09T18:24:10.9315880Z         macro_atom_state,
2025-01-09T18:24:10.9315920Z         plasma,
2025-01-09T18:24:10.9315980Z         no_of_packets,
2025-01-09T18:24:10.9316030Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9316080Z         iteration=0,
2025-01-09T18:24:10.9316450Z     ):
2025-01-09T18:24:10.9316560Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9316640Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9316680Z         else:
2025-01-09T18:24:10.9316740Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9316790Z     
2025-01-09T18:24:10.9317050Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9317120Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9317170Z         )
2025-01-09T18:24:10.9317210Z     
2025-01-09T18:24:10.9317330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9317410Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9317800Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9317800Z 
2025-01-09T18:24:10.9317890Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9318100Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection0-0] _
2025-01-09T18:24:10.9318100Z 
2025-01-09T18:24:10.9318650Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9318930Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9319090Z 
2025-01-09T18:24:10.9319170Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9319290Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9319380Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9319530Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9319590Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9319680Z >       sim.run_final()
2025-01-09T18:24:10.9319680Z 
2025-01-09T18:24:10.9319740Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9319840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9319930Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9320080Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9320180Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9320340Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9320450Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9320460Z 
2025-01-09T18:24:10.9320710Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9320910Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9321110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9321330Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9321450Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9321580Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9321580Z 
2025-01-09T18:24:10.9321650Z     def initialize_transport_state(
2025-01-09T18:24:10.9321710Z         self,
2025-01-09T18:24:10.9321770Z         simulation_state,
2025-01-09T18:24:10.9321820Z         opacity_state,
2025-01-09T18:24:10.9321870Z         macro_atom_state,
2025-01-09T18:24:10.9321920Z         plasma,
2025-01-09T18:24:10.9321970Z         no_of_packets,
2025-01-09T18:24:10.9322030Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9322080Z         iteration=0,
2025-01-09T18:24:10.9322130Z     ):
2025-01-09T18:24:10.9322230Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9322370Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9322420Z         else:
2025-01-09T18:24:10.9322470Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9322520Z     
2025-01-09T18:24:10.9322620Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9322700Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9322740Z         )
2025-01-09T18:24:10.9322790Z     
2025-01-09T18:24:10.9322890Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9322970Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9323350Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9323370Z 
2025-01-09T18:24:10.9323460Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9323660Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection0-1] _
2025-01-09T18:24:10.9323670Z 
2025-01-09T18:24:10.9324200Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9324480Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9324490Z 
2025-01-09T18:24:10.9324550Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9324820Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9324890Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9325030Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9325090Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9325150Z >       sim.run_final()
2025-01-09T18:24:10.9325150Z 
2025-01-09T18:24:10.9325210Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9325300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9325370Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9325480Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9325550Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9325680Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9325760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9325770Z 
2025-01-09T18:24:10.9325980Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9326140Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9326310Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9326530Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9326650Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9326760Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9326760Z 
2025-01-09T18:24:10.9326830Z     def initialize_transport_state(
2025-01-09T18:24:10.9326870Z         self,
2025-01-09T18:24:10.9326930Z         simulation_state,
2025-01-09T18:24:10.9326980Z         opacity_state,
2025-01-09T18:24:10.9327030Z         macro_atom_state,
2025-01-09T18:24:10.9327080Z         plasma,
2025-01-09T18:24:10.9327130Z         no_of_packets,
2025-01-09T18:24:10.9327190Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9327240Z         iteration=0,
2025-01-09T18:24:10.9327290Z     ):
2025-01-09T18:24:10.9327390Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9327460Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9327560Z         else:
2025-01-09T18:24:10.9327620Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9327660Z     
2025-01-09T18:24:10.9327770Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9327840Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9327890Z         )
2025-01-09T18:24:10.9327940Z     
2025-01-09T18:24:10.9328040Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9328120Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9328520Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9328530Z 
2025-01-09T18:24:10.9328630Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9328970Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[liw_with_selection0] _
2025-01-09T18:24:10.9328980Z 
2025-01-09T18:24:10.9329530Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9329820Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9329830Z 
2025-01-09T18:24:10.9329910Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9330040Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9330190Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9330340Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9330410Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9330470Z >       sim.run_final()
2025-01-09T18:24:10.9330470Z 
2025-01-09T18:24:10.9330540Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9330640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9330730Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9330850Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9330920Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9331050Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9331150Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9331150Z 
2025-01-09T18:24:10.9331370Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9331530Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9331710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9331930Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9332060Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9332180Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9332180Z 
2025-01-09T18:24:10.9332240Z     def initialize_transport_state(
2025-01-09T18:24:10.9332290Z         self,
2025-01-09T18:24:10.9332810Z         simulation_state,
2025-01-09T18:24:10.9333180Z         opacity_state,
2025-01-09T18:24:10.9333360Z         macro_atom_state,
2025-01-09T18:24:10.9333510Z         plasma,
2025-01-09T18:24:10.9333680Z         no_of_packets,
2025-01-09T18:24:10.9334150Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9334370Z         iteration=0,
2025-01-09T18:24:10.9334510Z     ):
2025-01-09T18:24:10.9334810Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9335020Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9335170Z         else:
2025-01-09T18:24:10.9335340Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9335940Z     
2025-01-09T18:24:10.9336240Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9336590Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9336740Z         )
2025-01-09T18:24:10.9336890Z     
2025-01-09T18:24:10.9337170Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9337510Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9338700Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9338720Z 
2025-01-09T18:24:10.9339100Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9339650Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-0] _
2025-01-09T18:24:10.9339660Z 
2025-01-09T18:24:10.9341420Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9342340Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9342360Z 
2025-01-09T18:24:10.9342670Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9343010Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9343220Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9344590Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9344790Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9344940Z >       sim.run_final()
2025-01-09T18:24:10.9344950Z 
2025-01-09T18:24:10.9345260Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9345500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9345730Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9346160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9346370Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9346830Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9347070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9347080Z 
2025-01-09T18:24:10.9347770Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9348200Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9348800Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9349500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9349840Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9350260Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9350280Z 
2025-01-09T18:24:10.9350460Z     def initialize_transport_state(
2025-01-09T18:24:10.9350620Z         self,
2025-01-09T18:24:10.9350780Z         simulation_state,
2025-01-09T18:24:10.9350950Z         opacity_state,
2025-01-09T18:24:10.9351230Z         macro_atom_state,
2025-01-09T18:24:10.9351390Z         plasma,
2025-01-09T18:24:10.9351540Z         no_of_packets,
2025-01-09T18:24:10.9351720Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9352000Z         iteration=0,
2025-01-09T18:24:10.9352160Z     ):
2025-01-09T18:24:10.9352420Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9352630Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9352910Z         else:
2025-01-09T18:24:10.9353080Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9353220Z     
2025-01-09T18:24:10.9353520Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9354730Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9354900Z         )
2025-01-09T18:24:10.9355050Z     
2025-01-09T18:24:10.9355320Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9355540Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9356610Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9356620Z 
2025-01-09T18:24:10.9356880Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9357670Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-1] _
2025-01-09T18:24:10.9357710Z 
2025-01-09T18:24:10.9358310Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9358610Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9358620Z 
2025-01-09T18:24:10.9359140Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9359280Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9359360Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9359510Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9359830Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9359880Z >       sim.run_final()
2025-01-09T18:24:10.9359890Z 
2025-01-09T18:24:10.9359940Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9360790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9360870Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9360990Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9361070Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9361190Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9361290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9361290Z 
2025-01-09T18:24:10.9361780Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9361950Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9362130Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9362350Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9362480Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9362580Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9362590Z 
2025-01-09T18:24:10.9362660Z     def initialize_transport_state(
2025-01-09T18:24:10.9362710Z         self,
2025-01-09T18:24:10.9362770Z         simulation_state,
2025-01-09T18:24:10.9362820Z         opacity_state,
2025-01-09T18:24:10.9362880Z         macro_atom_state,
2025-01-09T18:24:10.9362920Z         plasma,
2025-01-09T18:24:10.9362970Z         no_of_packets,
2025-01-09T18:24:10.9363030Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9363090Z         iteration=0,
2025-01-09T18:24:10.9363140Z     ):
2025-01-09T18:24:10.9363240Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9363790Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9363860Z         else:
2025-01-09T18:24:10.9363920Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9363970Z     
2025-01-09T18:24:10.9364080Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9364150Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9364310Z         )
2025-01-09T18:24:10.9364350Z     
2025-01-09T18:24:10.9364460Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9364530Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9364930Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9364930Z 
2025-01-09T18:24:10.9365190Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9365440Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection0-2] _
2025-01-09T18:24:10.9365460Z 
2025-01-09T18:24:10.9366060Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9366730Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9366740Z 
2025-01-09T18:24:10.9366820Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9366950Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9367030Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9367170Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9367250Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9367300Z >       sim.run_final()
2025-01-09T18:24:10.9367410Z 
2025-01-09T18:24:10.9367480Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9367590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9367690Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9367820Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9367900Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9368020Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9368110Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9368110Z 
2025-01-09T18:24:10.9368350Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9368540Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9368750Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9369010Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9369170Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9369290Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9369290Z 
2025-01-09T18:24:10.9369380Z     def initialize_transport_state(
2025-01-09T18:24:10.9369460Z         self,
2025-01-09T18:24:10.9369510Z         simulation_state,
2025-01-09T18:24:10.9369560Z         opacity_state,
2025-01-09T18:24:10.9369630Z         macro_atom_state,
2025-01-09T18:24:10.9369710Z         plasma,
2025-01-09T18:24:10.9370750Z         no_of_packets,
2025-01-09T18:24:10.9370860Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9370940Z         iteration=0,
2025-01-09T18:24:10.9370990Z     ):
2025-01-09T18:24:10.9371090Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9371190Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9371260Z         else:
2025-01-09T18:24:10.9371330Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9371370Z     
2025-01-09T18:24:10.9371500Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9371600Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9371650Z         )
2025-01-09T18:24:10.9371830Z     
2025-01-09T18:24:10.9371970Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9372050Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9372490Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9372500Z 
2025-01-09T18:24:10.9372610Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9372840Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[liw_with_selection1] _
2025-01-09T18:24:10.9372840Z 
2025-01-09T18:24:10.9382380Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9382760Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9382780Z 
2025-01-09T18:24:10.9382860Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9383030Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9383120Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9383280Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9383380Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9383440Z >       sim.run_final()
2025-01-09T18:24:10.9383450Z 
2025-01-09T18:24:10.9383510Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9383800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9384500Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9385120Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9385600Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9386150Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9386570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9386610Z 
2025-01-09T18:24:10.9387420Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9387950Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9388710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9389400Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9389950Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9390620Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9390650Z 
2025-01-09T18:24:10.9390900Z     def initialize_transport_state(
2025-01-09T18:24:10.9391090Z         self,
2025-01-09T18:24:10.9391550Z         simulation_state,
2025-01-09T18:24:10.9391770Z         opacity_state,
2025-01-09T18:24:10.9392410Z         macro_atom_state,
2025-01-09T18:24:10.9392780Z         plasma,
2025-01-09T18:24:10.9393300Z         no_of_packets,
2025-01-09T18:24:10.9393550Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9393760Z         iteration=0,
2025-01-09T18:24:10.9393960Z     ):
2025-01-09T18:24:10.9394560Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9395150Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9395520Z         else:
2025-01-09T18:24:10.9395770Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9395970Z     
2025-01-09T18:24:10.9396910Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9397340Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9397650Z         )
2025-01-09T18:24:10.9397980Z     
2025-01-09T18:24:10.9398660Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9400270Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9401830Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9401860Z 
2025-01-09T18:24:10.9402190Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9403010Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection1-0] _
2025-01-09T18:24:10.9403190Z 
2025-01-09T18:24:10.9405790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9406210Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9406230Z 
2025-01-09T18:24:10.9406310Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9406440Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9407020Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9407240Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9407310Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9407360Z >       sim.run_final()
2025-01-09T18:24:10.9407370Z 
2025-01-09T18:24:10.9407430Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9407540Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9408210Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9408370Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9408450Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9408620Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9408750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9408770Z 
2025-01-09T18:24:10.9409020Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9409240Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9409450Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9409710Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9409880Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9410020Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9410020Z 
2025-01-09T18:24:10.9410100Z     def initialize_transport_state(
2025-01-09T18:24:10.9410180Z         self,
2025-01-09T18:24:10.9410260Z         simulation_state,
2025-01-09T18:24:10.9410330Z         opacity_state,
2025-01-09T18:24:10.9410400Z         macro_atom_state,
2025-01-09T18:24:10.9410470Z         plasma,
2025-01-09T18:24:10.9410570Z         no_of_packets,
2025-01-09T18:24:10.9410650Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9410710Z         iteration=0,
2025-01-09T18:24:10.9410750Z     ):
2025-01-09T18:24:10.9410890Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9411000Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9411060Z         else:
2025-01-09T18:24:10.9411120Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9411180Z     
2025-01-09T18:24:10.9411320Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9411420Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9411500Z         )
2025-01-09T18:24:10.9411570Z     
2025-01-09T18:24:10.9411690Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9411780Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9412520Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9412540Z 
2025-01-09T18:24:10.9412650Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9412900Z _ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[liw_with_selection1-1] _
2025-01-09T18:24:10.9412920Z 
2025-01-09T18:24:10.9413520Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9413890Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9413910Z 
2025-01-09T18:24:10.9414010Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9414180Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9414280Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9414450Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9414540Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9414600Z >       sim.run_final()
2025-01-09T18:24:10.9414600Z 
2025-01-09T18:24:10.9414680Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9414800Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9419710Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9420070Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9420170Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9420320Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9420410Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9420420Z 
2025-01-09T18:24:10.9420670Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9420870Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9421080Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9421370Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9421540Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9421670Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9421680Z 
2025-01-09T18:24:10.9421770Z     def initialize_transport_state(
2025-01-09T18:24:10.9421850Z         self,
2025-01-09T18:24:10.9421920Z         simulation_state,
2025-01-09T18:24:10.9421970Z         opacity_state,
2025-01-09T18:24:10.9422050Z         macro_atom_state,
2025-01-09T18:24:10.9422130Z         plasma,
2025-01-09T18:24:10.9422200Z         no_of_packets,
2025-01-09T18:24:10.9427150Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9427240Z         iteration=0,
2025-01-09T18:24:10.9427300Z     ):
2025-01-09T18:24:10.9427430Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9427520Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9427570Z         else:
2025-01-09T18:24:10.9427630Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9427700Z     
2025-01-09T18:24:10.9427840Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9427920Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9427970Z         )
2025-01-09T18:24:10.9428010Z     
2025-01-09T18:24:10.9428110Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9428200Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9428650Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9428780Z 
2025-01-09T18:24:10.9428900Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9429200Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[liw_with_selection1] _
2025-01-09T18:24:10.9429210Z 
2025-01-09T18:24:10.9429790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9430200Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9430210Z 
2025-01-09T18:24:10.9430300Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9430460Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9430540Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9430720Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9430810Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9430860Z >       sim.run_final()
2025-01-09T18:24:10.9430870Z 
2025-01-09T18:24:10.9430950Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9431060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9431150Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9431620Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9431870Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9432050Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9432160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9432160Z 
2025-01-09T18:24:10.9432400Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9432690Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9432920Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9433200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9433340Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9433450Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9433450Z 
2025-01-09T18:24:10.9433530Z     def initialize_transport_state(
2025-01-09T18:24:10.9433590Z         self,
2025-01-09T18:24:10.9433670Z         simulation_state,
2025-01-09T18:24:10.9433730Z         opacity_state,
2025-01-09T18:24:10.9433790Z         macro_atom_state,
2025-01-09T18:24:10.9433840Z         plasma,
2025-01-09T18:24:10.9433890Z         no_of_packets,
2025-01-09T18:24:10.9433970Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9434050Z         iteration=0,
2025-01-09T18:24:10.9434120Z     ):
2025-01-09T18:24:10.9434220Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9434310Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9434390Z         else:
2025-01-09T18:24:10.9434460Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9434510Z     
2025-01-09T18:24:10.9434630Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9434740Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9434800Z         )
2025-01-09T18:24:10.9434840Z     
2025-01-09T18:24:10.9434980Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9435090Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9435530Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9435680Z 
2025-01-09T18:24:10.9435790Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9436030Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-0] _
2025-01-09T18:24:10.9436040Z 
2025-01-09T18:24:10.9436640Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9437000Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9437010Z 
2025-01-09T18:24:10.9437190Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9437330Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9437410Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9437600Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9437700Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9437750Z >       sim.run_final()
2025-01-09T18:24:10.9437760Z 
2025-01-09T18:24:10.9437820Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9437920Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9438040Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9438160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9438250Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9438420Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9438600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9438600Z 
2025-01-09T18:24:10.9438830Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9439020Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9439230Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9439480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9439650Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9439780Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9439790Z 
2025-01-09T18:24:10.9439850Z     def initialize_transport_state(
2025-01-09T18:24:10.9439920Z         self,
2025-01-09T18:24:10.9440000Z         simulation_state,
2025-01-09T18:24:10.9440100Z         opacity_state,
2025-01-09T18:24:10.9440160Z         macro_atom_state,
2025-01-09T18:24:10.9440210Z         plasma,
2025-01-09T18:24:10.9440260Z         no_of_packets,
2025-01-09T18:24:10.9440330Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9440410Z         iteration=0,
2025-01-09T18:24:10.9440500Z     ):
2025-01-09T18:24:10.9440610Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9440680Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9440750Z         else:
2025-01-09T18:24:10.9440850Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9440900Z     
2025-01-09T18:24:10.9441010Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9441090Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9441160Z         )
2025-01-09T18:24:10.9441230Z     
2025-01-09T18:24:10.9441360Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9441450Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9441870Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9441890Z 
2025-01-09T18:24:10.9442010Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9442350Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-1] _
2025-01-09T18:24:10.9442360Z 
2025-01-09T18:24:10.9442980Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9443320Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9443330Z 
2025-01-09T18:24:10.9443410Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9443570Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9443650Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9443830Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9443910Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9443970Z >       sim.run_final()
2025-01-09T18:24:10.9443970Z 
2025-01-09T18:24:10.9444040Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9444160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9444250Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9444390Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9444490Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9444620Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9444750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9445250Z 
2025-01-09T18:24:10.9445510Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9445720Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9445910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9446200Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9446360Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9446500Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9446510Z 
2025-01-09T18:24:10.9446590Z     def initialize_transport_state(
2025-01-09T18:24:10.9446650Z         self,
2025-01-09T18:24:10.9446710Z         simulation_state,
2025-01-09T18:24:10.9446760Z         opacity_state,
2025-01-09T18:24:10.9446840Z         macro_atom_state,
2025-01-09T18:24:10.9446920Z         plasma,
2025-01-09T18:24:10.9446980Z         no_of_packets,
2025-01-09T18:24:10.9447040Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9447110Z         iteration=0,
2025-01-09T18:24:10.9447180Z     ):
2025-01-09T18:24:10.9447300Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9447390Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9447460Z         else:
2025-01-09T18:24:10.9447550Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9447620Z     
2025-01-09T18:24:10.9447730Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9447820Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9447900Z         )
2025-01-09T18:24:10.9447940Z     
2025-01-09T18:24:10.9448050Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9448150Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9448600Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9448610Z 
2025-01-09T18:24:10.9448730Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9448950Z _ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[liw_with_selection1-2] _
2025-01-09T18:24:10.9449190Z 
2025-01-09T18:24:10.9449790Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9450120Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9450120Z 
2025-01-09T18:24:10.9450200Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9450330Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9450450Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9450600Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9450670Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9450750Z >       sim.run_final()
2025-01-09T18:24:10.9450760Z 
2025-01-09T18:24:10.9450820Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9450930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9451030Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9451160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9451230Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9451400Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9451520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9451610Z 
2025-01-09T18:24:10.9451870Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9452070Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9452260Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9452540Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9452670Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9452790Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9452800Z 
2025-01-09T18:24:10.9452880Z     def initialize_transport_state(
2025-01-09T18:24:10.9452930Z         self,
2025-01-09T18:24:10.9452990Z         simulation_state,
2025-01-09T18:24:10.9453070Z         opacity_state,
2025-01-09T18:24:10.9453150Z         macro_atom_state,
2025-01-09T18:24:10.9453230Z         plasma,
2025-01-09T18:24:10.9453290Z         no_of_packets,
2025-01-09T18:24:10.9453360Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9453410Z         iteration=0,
2025-01-09T18:24:10.9453450Z     ):
2025-01-09T18:24:10.9453570Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9453660Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9453730Z         else:
2025-01-09T18:24:10.9453790Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9453840Z     
2025-01-09T18:24:10.9453970Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9454060Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9454100Z         )
2025-01-09T18:24:10.9454150Z     
2025-01-09T18:24:10.9454280Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9454380Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9454800Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9454820Z 
2025-01-09T18:24:10.9454930Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9455120Z ___ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_plot[None] ____
2025-01-09T18:24:10.9455120Z 
2025-01-09T18:24:10.9455840Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9456190Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9456200Z 
2025-01-09T18:24:10.9456270Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9456430Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9456530Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9456700Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9456770Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9456860Z >       sim.run_final()
2025-01-09T18:24:10.9456870Z 
2025-01-09T18:24:10.9456980Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9457120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9457240Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9457420Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9457960Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9458990Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9459130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9459130Z 
2025-01-09T18:24:10.9459420Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9459800Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9460030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9460300Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9460460Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9460600Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9460610Z 
2025-01-09T18:24:10.9460720Z     def initialize_transport_state(
2025-01-09T18:24:10.9460780Z         self,
2025-01-09T18:24:10.9460850Z         simulation_state,
2025-01-09T18:24:10.9460900Z         opacity_state,
2025-01-09T18:24:10.9460970Z         macro_atom_state,
2025-01-09T18:24:10.9461030Z         plasma,
2025-01-09T18:24:10.9461120Z         no_of_packets,
2025-01-09T18:24:10.9461200Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9461260Z         iteration=0,
2025-01-09T18:24:10.9461310Z     ):
2025-01-09T18:24:10.9461440Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9461570Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9461650Z         else:
2025-01-09T18:24:10.9461710Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9461750Z     
2025-01-09T18:24:10.9461900Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9462020Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9462090Z         )
2025-01-09T18:24:10.9462160Z     
2025-01-09T18:24:10.9462330Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9462450Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9462930Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9462940Z 
2025-01-09T18:24:10.9463080Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9463290Z __ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[None-0] __
2025-01-09T18:24:10.9463300Z 
2025-01-09T18:24:10.9464060Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9464510Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9464520Z 
2025-01-09T18:24:10.9464620Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9464750Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9464840Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9465050Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9465160Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9465270Z >       sim.run_final()
2025-01-09T18:24:10.9465280Z 
2025-01-09T18:24:10.9465380Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9465490Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9465570Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9465720Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9465840Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9466020Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9466120Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9466320Z 
2025-01-09T18:24:10.9530180Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9530650Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9531260Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9532900Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9533120Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9533250Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9533250Z 
2025-01-09T18:24:10.9533320Z     def initialize_transport_state(
2025-01-09T18:24:10.9533390Z         self,
2025-01-09T18:24:10.9533470Z         simulation_state,
2025-01-09T18:24:10.9533570Z         opacity_state,
2025-01-09T18:24:10.9533650Z         macro_atom_state,
2025-01-09T18:24:10.9533700Z         plasma,
2025-01-09T18:24:10.9533760Z         no_of_packets,
2025-01-09T18:24:10.9533840Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9533930Z         iteration=0,
2025-01-09T18:24:10.9534000Z     ):
2025-01-09T18:24:10.9534140Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9534220Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9534280Z         else:
2025-01-09T18:24:10.9534370Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9534450Z     
2025-01-09T18:24:10.9534590Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9534720Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9534780Z         )
2025-01-09T18:24:10.9534820Z     
2025-01-09T18:24:10.9534920Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9535030Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9535490Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9535500Z 
2025-01-09T18:24:10.9535610Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9535840Z __ ERROR at setup of TestLineInfoWidgetEvents.test_filter_mode_toggle[None-1] __
2025-01-09T18:24:10.9535850Z 
2025-01-09T18:24:10.9537160Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9538560Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9538580Z 
2025-01-09T18:24:10.9538690Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9538900Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9539050Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9539280Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9539390Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9539450Z >       sim.run_final()
2025-01-09T18:24:10.9539460Z 
2025-01-09T18:24:10.9539910Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9540030Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9540120Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9540260Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9540400Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9540560Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9540670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9540680Z 
2025-01-09T18:24:10.9540960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9541170Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9541410Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9542060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9542280Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9542470Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9542500Z 
2025-01-09T18:24:10.9542620Z     def initialize_transport_state(
2025-01-09T18:24:10.9542710Z         self,
2025-01-09T18:24:10.9542830Z         simulation_state,
2025-01-09T18:24:10.9542890Z         opacity_state,
2025-01-09T18:24:10.9542940Z         macro_atom_state,
2025-01-09T18:24:10.9543000Z         plasma,
2025-01-09T18:24:10.9543060Z         no_of_packets,
2025-01-09T18:24:10.9543160Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9543230Z         iteration=0,
2025-01-09T18:24:10.9543320Z     ):
2025-01-09T18:24:10.9543480Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9543600Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9543660Z         else:
2025-01-09T18:24:10.9543720Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9543770Z     
2025-01-09T18:24:10.9543880Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9543970Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9544040Z         )
2025-01-09T18:24:10.9544130Z     
2025-01-09T18:24:10.9544240Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9544320Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9545100Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9545290Z 
2025-01-09T18:24:10.9545430Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9545690Z _ ERROR at setup of TestLineInfoWidgetEvents.test_selection_on_species_intrctn_table[None] _
2025-01-09T18:24:10.9545710Z 
2025-01-09T18:24:10.9546320Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9546660Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9547180Z 
2025-01-09T18:24:10.9547270Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9547450Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9547530Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9547670Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9547750Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9547850Z >       sim.run_final()
2025-01-09T18:24:10.9547860Z 
2025-01-09T18:24:10.9547960Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9548070Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9548150Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9548310Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9548430Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9548620Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9548720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9548720Z 
2025-01-09T18:24:10.9548970Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9549170Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9549370Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9549660Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9549930Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9550100Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9550110Z 
2025-01-09T18:24:10.9550220Z     def initialize_transport_state(
2025-01-09T18:24:10.9550300Z         self,
2025-01-09T18:24:10.9550420Z         simulation_state,
2025-01-09T18:24:10.9550520Z         opacity_state,
2025-01-09T18:24:10.9550630Z         macro_atom_state,
2025-01-09T18:24:10.9550730Z         plasma,
2025-01-09T18:24:10.9550830Z         no_of_packets,
2025-01-09T18:24:10.9550920Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9551040Z         iteration=0,
2025-01-09T18:24:10.9551110Z     ):
2025-01-09T18:24:10.9551460Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9552220Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9552890Z         else:
2025-01-09T18:24:10.9553030Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9553110Z     
2025-01-09T18:24:10.9553270Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9553940Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9554250Z         )
2025-01-09T18:24:10.9554540Z     
2025-01-09T18:24:10.9554950Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9555490Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9556370Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9556390Z 
2025-01-09T18:24:10.9556540Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9556820Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-0] ___
2025-01-09T18:24:10.9556830Z 
2025-01-09T18:24:10.9557520Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9558600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9559030Z 
2025-01-09T18:24:10.9559170Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9559300Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9559390Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9559590Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9559700Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9559790Z >       sim.run_final()
2025-01-09T18:24:10.9559800Z 
2025-01-09T18:24:10.9559870Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9559960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9560060Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9560250Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9560370Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9560580Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9560720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9560730Z 
2025-01-09T18:24:10.9561040Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9561280Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9561550Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9561790Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9562000Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9562360Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9562370Z 
2025-01-09T18:24:10.9562440Z     def initialize_transport_state(
2025-01-09T18:24:10.9562490Z         self,
2025-01-09T18:24:10.9562550Z         simulation_state,
2025-01-09T18:24:10.9562610Z         opacity_state,
2025-01-09T18:24:10.9562700Z         macro_atom_state,
2025-01-09T18:24:10.9562800Z         plasma,
2025-01-09T18:24:10.9562880Z         no_of_packets,
2025-01-09T18:24:10.9562960Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9563500Z         iteration=0,
2025-01-09T18:24:10.9563590Z     ):
2025-01-09T18:24:10.9563710Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9563800Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9563870Z         else:
2025-01-09T18:24:10.9563960Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9564040Z     
2025-01-09T18:24:10.9564170Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9564260Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9564310Z         )
2025-01-09T18:24:10.9564390Z     
2025-01-09T18:24:10.9564540Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9564680Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9565380Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9565410Z 
2025-01-09T18:24:10.9566140Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9566360Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-1] ___
2025-01-09T18:24:10.9566370Z 
2025-01-09T18:24:10.9567040Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9567480Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9567490Z 
2025-01-09T18:24:10.9567560Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9568380Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9568510Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9571830Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9571940Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9572040Z >       sim.run_final()
2025-01-09T18:24:10.9572050Z 
2025-01-09T18:24:10.9572140Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9572280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9572400Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9572560Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9572680Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9572860Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9573010Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9573030Z 
2025-01-09T18:24:10.9573330Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9573580Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9573810Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9574060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9574250Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9574400Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9574590Z 
2025-01-09T18:24:10.9574700Z     def initialize_transport_state(
2025-01-09T18:24:10.9574770Z         self,
2025-01-09T18:24:10.9574870Z         simulation_state,
2025-01-09T18:24:10.9574950Z         opacity_state,
2025-01-09T18:24:10.9575040Z         macro_atom_state,
2025-01-09T18:24:10.9575120Z         plasma,
2025-01-09T18:24:10.9575190Z         no_of_packets,
2025-01-09T18:24:10.9575250Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9575310Z         iteration=0,
2025-01-09T18:24:10.9575360Z     ):
2025-01-09T18:24:10.9575520Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9575660Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9575710Z         else:
2025-01-09T18:24:10.9575770Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9575810Z     
2025-01-09T18:24:10.9575930Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9576030Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9576100Z         )
2025-01-09T18:24:10.9576150Z     
2025-01-09T18:24:10.9576260Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9576340Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9577120Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9577190Z 
2025-01-09T18:24:10.9577620Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9578270Z __ ERROR at setup of TestLineInfoWidgetEvents.test_group_mode_change[None-2] ___
2025-01-09T18:24:10.9578300Z 
2025-01-09T18:24:10.9580120Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9581040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9581060Z 
2025-01-09T18:24:10.9582080Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9582960Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9583230Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9584060Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9584260Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9584430Z >       sim.run_final()
2025-01-09T18:24:10.9584440Z 
2025-01-09T18:24:10.9584610Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9584860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9593760Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9594100Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9594310Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9594650Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9594900Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9594910Z 
2025-01-09T18:24:10.9595460Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9595920Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9596380Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9596950Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9597290Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9597580Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9597580Z 
2025-01-09T18:24:10.9597770Z     def initialize_transport_state(
2025-01-09T18:24:10.9598590Z         self,
2025-01-09T18:24:10.9598770Z         simulation_state,
2025-01-09T18:24:10.9598930Z         opacity_state,
2025-01-09T18:24:10.9599090Z         macro_atom_state,
2025-01-09T18:24:10.9599240Z         plasma,
2025-01-09T18:24:10.9599400Z         no_of_packets,
2025-01-09T18:24:10.9599580Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9599750Z         iteration=0,
2025-01-09T18:24:10.9599890Z     ):
2025-01-09T18:24:10.9600160Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9600360Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9600510Z         else:
2025-01-09T18:24:10.9600690Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9600830Z     
2025-01-09T18:24:10.9601130Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9601330Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9601480Z         )
2025-01-09T18:24:10.9601620Z     
2025-01-09T18:24:10.9601900Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9602120Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9603190Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9603210Z 
2025-01-09T18:24:10.9603470Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9603850Z _____________ ERROR at setup of TestBaseShellInfo.test_shells_data _____________
2025-01-09T18:24:10.9603860Z 
2025-01-09T18:24:10.9605330Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9606090Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9606110Z 
2025-01-09T18:24:10.9606300Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9606630Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9606850Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9607220Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9607880Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9608040Z >       sim.run_final()
2025-01-09T18:24:10.9608060Z 
2025-01-09T18:24:10.9608230Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9608480Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9608690Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9609000Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9609210Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9611020Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9611290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9611310Z 
2025-01-09T18:24:10.9611880Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9612540Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9613030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9613910Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9614290Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9614600Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9614600Z 
2025-01-09T18:24:10.9614790Z     def initialize_transport_state(
2025-01-09T18:24:10.9614950Z         self,
2025-01-09T18:24:10.9615140Z         simulation_state,
2025-01-09T18:24:10.9615740Z         opacity_state,
2025-01-09T18:24:10.9615910Z         macro_atom_state,
2025-01-09T18:24:10.9616070Z         plasma,
2025-01-09T18:24:10.9616500Z         no_of_packets,
2025-01-09T18:24:10.9616690Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9618280Z         iteration=0,
2025-01-09T18:24:10.9618650Z     ):
2025-01-09T18:24:10.9618960Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9619180Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9619330Z         else:
2025-01-09T18:24:10.9619500Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9619770Z     
2025-01-09T18:24:10.9620070Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9620280Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9620430Z         )
2025-01-09T18:24:10.9620570Z     
2025-01-09T18:24:10.9621090Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9621540Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9622890Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9623020Z 
2025-01-09T18:24:10.9623300Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9624870Z ________ ERROR at setup of TestBaseShellInfo.test_element_count_data[1] ________
2025-01-09T18:24:10.9624910Z 
2025-01-09T18:24:10.9626410Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9627180Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9627190Z 
2025-01-09T18:24:10.9628480Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9628950Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9629080Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9629230Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9629300Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9629650Z >       sim.run_final()
2025-01-09T18:24:10.9629660Z 
2025-01-09T18:24:10.9629720Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9629810Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9629890Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9630000Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9630070Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9630200Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9630300Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9630310Z 
2025-01-09T18:24:10.9630520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9630690Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9630860Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9631190Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9631330Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9631450Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9631450Z 
2025-01-09T18:24:10.9631510Z     def initialize_transport_state(
2025-01-09T18:24:10.9631570Z         self,
2025-01-09T18:24:10.9631620Z         simulation_state,
2025-01-09T18:24:10.9631680Z         opacity_state,
2025-01-09T18:24:10.9631730Z         macro_atom_state,
2025-01-09T18:24:10.9631950Z         plasma,
2025-01-09T18:24:10.9632010Z         no_of_packets,
2025-01-09T18:24:10.9632070Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9632120Z         iteration=0,
2025-01-09T18:24:10.9632170Z     ):
2025-01-09T18:24:10.9632270Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9632340Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9632400Z         else:
2025-01-09T18:24:10.9632450Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9632500Z     
2025-01-09T18:24:10.9632610Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9632690Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9632740Z         )
2025-01-09T18:24:10.9632780Z     
2025-01-09T18:24:10.9632880Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9632960Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9633360Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9633360Z 
2025-01-09T18:24:10.9633460Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9633610Z _______ ERROR at setup of TestBaseShellInfo.test_element_count_data[20] ________
2025-01-09T18:24:10.9633620Z 
2025-01-09T18:24:10.9634150Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9634440Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9634450Z 
2025-01-09T18:24:10.9634520Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9634640Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9634720Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9634870Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9634940Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9634990Z >       sim.run_final()
2025-01-09T18:24:10.9634990Z 
2025-01-09T18:24:10.9635110Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9635210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9635280Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9635390Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9635470Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9635590Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9635680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9635680Z 
2025-01-09T18:24:10.9635900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9636060Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9636240Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9636460Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9636590Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9636700Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9636700Z 
2025-01-09T18:24:10.9636770Z     def initialize_transport_state(
2025-01-09T18:24:10.9636820Z         self,
2025-01-09T18:24:10.9636870Z         simulation_state,
2025-01-09T18:24:10.9636930Z         opacity_state,
2025-01-09T18:24:10.9636980Z         macro_atom_state,
2025-01-09T18:24:10.9637030Z         plasma,
2025-01-09T18:24:10.9637080Z         no_of_packets,
2025-01-09T18:24:10.9637140Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9637250Z         iteration=0,
2025-01-09T18:24:10.9637300Z     ):
2025-01-09T18:24:10.9637400Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9637480Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9637520Z         else:
2025-01-09T18:24:10.9637580Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9637630Z     
2025-01-09T18:24:10.9637740Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9637820Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9637860Z         )
2025-01-09T18:24:10.9637910Z     
2025-01-09T18:24:10.9638010Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9638090Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9638480Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9638490Z 
2025-01-09T18:24:10.9638580Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9638720Z ________ ERROR at setup of TestBaseShellInfo.test_ion_count_data[12-1] _________
2025-01-09T18:24:10.9638730Z 
2025-01-09T18:24:10.9639280Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9639580Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9639580Z 
2025-01-09T18:24:10.9639650Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9639780Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9639850Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9640000Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9640060Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9640120Z >       sim.run_final()
2025-01-09T18:24:10.9640120Z 
2025-01-09T18:24:10.9640180Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9640270Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9640410Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9640530Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9640600Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9640730Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9640820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9640820Z 
2025-01-09T18:24:10.9641030Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9641190Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9641370Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9641590Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9641710Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9641830Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9641830Z 
2025-01-09T18:24:10.9641900Z     def initialize_transport_state(
2025-01-09T18:24:10.9641940Z         self,
2025-01-09T18:24:10.9642000Z         simulation_state,
2025-01-09T18:24:10.9642050Z         opacity_state,
2025-01-09T18:24:10.9642110Z         macro_atom_state,
2025-01-09T18:24:10.9642150Z         plasma,
2025-01-09T18:24:10.9642210Z         no_of_packets,
2025-01-09T18:24:10.9642270Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9642320Z         iteration=0,
2025-01-09T18:24:10.9642360Z     ):
2025-01-09T18:24:10.9642690Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9642760Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9642810Z         else:
2025-01-09T18:24:10.9642870Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9642920Z     
2025-01-09T18:24:10.9643020Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9643100Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9643150Z         )
2025-01-09T18:24:10.9643190Z     
2025-01-09T18:24:10.9643290Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9643370Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9643780Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9643790Z 
2025-01-09T18:24:10.9643880Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9644040Z ________ ERROR at setup of TestBaseShellInfo.test_ion_count_data[20-20] ________
2025-01-09T18:24:10.9644040Z 
2025-01-09T18:24:10.9644570Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9644850Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9644860Z 
2025-01-09T18:24:10.9644930Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9645050Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9645130Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9645270Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9645340Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9645390Z >       sim.run_final()
2025-01-09T18:24:10.9645390Z 
2025-01-09T18:24:10.9645450Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9645550Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9645620Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9646000Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9646070Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9646200Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9646290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9646290Z 
2025-01-09T18:24:10.9646500Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9646650Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9646830Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9647050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9647170Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9647280Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9647290Z 
2025-01-09T18:24:10.9647350Z     def initialize_transport_state(
2025-01-09T18:24:10.9647400Z         self,
2025-01-09T18:24:10.9647460Z         simulation_state,
2025-01-09T18:24:10.9647510Z         opacity_state,
2025-01-09T18:24:10.9647560Z         macro_atom_state,
2025-01-09T18:24:10.9647610Z         plasma,
2025-01-09T18:24:10.9647660Z         no_of_packets,
2025-01-09T18:24:10.9647720Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9647770Z         iteration=0,
2025-01-09T18:24:10.9647810Z     ):
2025-01-09T18:24:10.9647910Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9648050Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9648100Z         else:
2025-01-09T18:24:10.9648150Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9648200Z     
2025-01-09T18:24:10.9648300Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9648380Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9648430Z         )
2025-01-09T18:24:10.9648470Z     
2025-01-09T18:24:10.9648570Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9648650Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9649030Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9649030Z 
2025-01-09T18:24:10.9649130Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9649280Z ______ ERROR at setup of TestBaseShellInfo.test_level_count_data[2-12-1] _______
2025-01-09T18:24:10.9649290Z 
2025-01-09T18:24:10.9649810Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9650100Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9650100Z 
2025-01-09T18:24:10.9650170Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9650290Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9650360Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9650500Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9650560Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9650610Z >       sim.run_final()
2025-01-09T18:24:10.9650620Z 
2025-01-09T18:24:10.9650680Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9650760Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9650840Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9650950Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9651070Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9651190Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9651280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9651280Z 
2025-01-09T18:24:10.9651490Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9651650Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9651830Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9652050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9652170Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9652280Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9652280Z 
2025-01-09T18:24:10.9652350Z     def initialize_transport_state(
2025-01-09T18:24:10.9652400Z         self,
2025-01-09T18:24:10.9652460Z         simulation_state,
2025-01-09T18:24:10.9652510Z         opacity_state,
2025-01-09T18:24:10.9652560Z         macro_atom_state,
2025-01-09T18:24:10.9652610Z         plasma,
2025-01-09T18:24:10.9652660Z         no_of_packets,
2025-01-09T18:24:10.9652720Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9652770Z         iteration=0,
2025-01-09T18:24:10.9652810Z     ):
2025-01-09T18:24:10.9652910Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9652980Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9653030Z         else:
2025-01-09T18:24:10.9653130Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9653170Z     
2025-01-09T18:24:10.9653280Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9654030Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9654230Z         )
2025-01-09T18:24:10.9654280Z     
2025-01-09T18:24:10.9654390Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9654470Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9654860Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9654860Z 
2025-01-09T18:24:10.9654950Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9655110Z ______ ERROR at setup of TestBaseShellInfo.test_level_count_data[3-20-20] ______
2025-01-09T18:24:10.9655110Z 
2025-01-09T18:24:10.9655640Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9655930Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9655930Z 
2025-01-09T18:24:10.9656000Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9656130Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9656200Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9656340Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9656410Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9656460Z >       sim.run_final()
2025-01-09T18:24:10.9656470Z 
2025-01-09T18:24:10.9656520Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9656610Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9656690Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9656800Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9656870Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9657000Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9657220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9657220Z 
2025-01-09T18:24:10.9657430Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9657590Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9657770Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9657980Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9658100Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9658220Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9658220Z 
2025-01-09T18:24:10.9658290Z     def initialize_transport_state(
2025-01-09T18:24:10.9658340Z         self,
2025-01-09T18:24:10.9658390Z         simulation_state,
2025-01-09T18:24:10.9658450Z         opacity_state,
2025-01-09T18:24:10.9658500Z         macro_atom_state,
2025-01-09T18:24:10.9658550Z         plasma,
2025-01-09T18:24:10.9658600Z         no_of_packets,
2025-01-09T18:24:10.9658660Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9658710Z         iteration=0,
2025-01-09T18:24:10.9658760Z     ):
2025-01-09T18:24:10.9658850Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9658930Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9658980Z         else:
2025-01-09T18:24:10.9659030Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9659080Z     
2025-01-09T18:24:10.9659230Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9659310Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9659350Z         )
2025-01-09T18:24:10.9659400Z     
2025-01-09T18:24:10.9659500Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9659580Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9659960Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9659970Z 
2025-01-09T18:24:10.9660070Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9660220Z __________ ERROR at setup of TestSimulationShellInfo.test_shells_data __________
2025-01-09T18:24:10.9660220Z 
2025-01-09T18:24:10.9660760Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9661060Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9661070Z 
2025-01-09T18:24:10.9661130Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9661260Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9661340Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9661480Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9661550Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9661600Z >       sim.run_final()
2025-01-09T18:24:10.9661600Z 
2025-01-09T18:24:10.9661660Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9661750Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9661820Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9661930Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9662010Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9662130Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9662220Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9662300Z 
2025-01-09T18:24:10.9662520Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9662680Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9662850Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9663060Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9663190Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9663320Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9663330Z 
2025-01-09T18:24:10.9663400Z     def initialize_transport_state(
2025-01-09T18:24:10.9663440Z         self,
2025-01-09T18:24:10.9663500Z         simulation_state,
2025-01-09T18:24:10.9663550Z         opacity_state,
2025-01-09T18:24:10.9663600Z         macro_atom_state,
2025-01-09T18:24:10.9663650Z         plasma,
2025-01-09T18:24:10.9663700Z         no_of_packets,
2025-01-09T18:24:10.9663770Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9663810Z         iteration=0,
2025-01-09T18:24:10.9663860Z     ):
2025-01-09T18:24:10.9663960Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9664030Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9664070Z         else:
2025-01-09T18:24:10.9664140Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9664180Z     
2025-01-09T18:24:10.9664290Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9664360Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9664670Z         )
2025-01-09T18:24:10.9664720Z     
2025-01-09T18:24:10.9664830Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9664900Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9665290Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9665290Z 
2025-01-09T18:24:10.9665390Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9665540Z _____ ERROR at setup of TestSimulationShellInfo.test_element_count_data[1] _____
2025-01-09T18:24:10.9665540Z 
2025-01-09T18:24:10.9666080Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9666360Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9666360Z 
2025-01-09T18:24:10.9666430Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9666560Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9666630Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9666780Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9666840Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9666900Z >       sim.run_final()
2025-01-09T18:24:10.9666900Z 
2025-01-09T18:24:10.9666950Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9667050Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9667120Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9667230Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9667300Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9667420Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9667510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9667510Z 
2025-01-09T18:24:10.9667720Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9668090Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9668260Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9668480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9668600Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9668710Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9668710Z 
2025-01-09T18:24:10.9668770Z     def initialize_transport_state(
2025-01-09T18:24:10.9668820Z         self,
2025-01-09T18:24:10.9668880Z         simulation_state,
2025-01-09T18:24:10.9668930Z         opacity_state,
2025-01-09T18:24:10.9668990Z         macro_atom_state,
2025-01-09T18:24:10.9669040Z         plasma,
2025-01-09T18:24:10.9669090Z         no_of_packets,
2025-01-09T18:24:10.9669150Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9669200Z         iteration=0,
2025-01-09T18:24:10.9669240Z     ):
2025-01-09T18:24:10.9669340Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9669410Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9669460Z         else:
2025-01-09T18:24:10.9669510Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9669560Z     
2025-01-09T18:24:10.9669660Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9669730Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9669780Z         )
2025-01-09T18:24:10.9669830Z     
2025-01-09T18:24:10.9669980Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9670060Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9670440Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9670450Z 
2025-01-09T18:24:10.9670540Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9670700Z ____ ERROR at setup of TestSimulationShellInfo.test_element_count_data[20] _____
2025-01-09T18:24:10.9670700Z 
2025-01-09T18:24:10.9671210Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9671500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9671500Z 
2025-01-09T18:24:10.9671570Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9671690Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9671770Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9671910Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9671970Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9672020Z >       sim.run_final()
2025-01-09T18:24:10.9672030Z 
2025-01-09T18:24:10.9672080Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9672170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9672250Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9672360Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9672430Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9672550Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9672640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9672640Z 
2025-01-09T18:24:10.9672850Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9673010Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9673230Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9673450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9673570Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9673680Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9673690Z 
2025-01-09T18:24:10.9673750Z     def initialize_transport_state(
2025-01-09T18:24:10.9673800Z         self,
2025-01-09T18:24:10.9673860Z         simulation_state,
2025-01-09T18:24:10.9673910Z         opacity_state,
2025-01-09T18:24:10.9673960Z         macro_atom_state,
2025-01-09T18:24:10.9674010Z         plasma,
2025-01-09T18:24:10.9674060Z         no_of_packets,
2025-01-09T18:24:10.9674120Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9674170Z         iteration=0,
2025-01-09T18:24:10.9674220Z     ):
2025-01-09T18:24:10.9674310Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9674390Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9674440Z         else:
2025-01-09T18:24:10.9674500Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9674540Z     
2025-01-09T18:24:10.9674650Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9674730Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9674770Z         )
2025-01-09T18:24:10.9674820Z     
2025-01-09T18:24:10.9674920Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9675050Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9675430Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9675440Z 
2025-01-09T18:24:10.9675530Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9675690Z _____ ERROR at setup of TestSimulationShellInfo.test_ion_count_data[12-1] ______
2025-01-09T18:24:10.9675690Z 
2025-01-09T18:24:10.9676220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9676510Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9676510Z 
2025-01-09T18:24:10.9676580Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9676710Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9676780Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9676930Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9676990Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9677050Z >       sim.run_final()
2025-01-09T18:24:10.9677050Z 
2025-01-09T18:24:10.9677110Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9677210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9681980Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9682150Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9682240Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9682370Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9682460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9682480Z 
2025-01-09T18:24:10.9682690Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9682850Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9683030Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9683440Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9683570Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9683670Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9683680Z 
2025-01-09T18:24:10.9683740Z     def initialize_transport_state(
2025-01-09T18:24:10.9683790Z         self,
2025-01-09T18:24:10.9683850Z         simulation_state,
2025-01-09T18:24:10.9683900Z         opacity_state,
2025-01-09T18:24:10.9683950Z         macro_atom_state,
2025-01-09T18:24:10.9684010Z         plasma,
2025-01-09T18:24:10.9684060Z         no_of_packets,
2025-01-09T18:24:10.9684120Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9684170Z         iteration=0,
2025-01-09T18:24:10.9684220Z     ):
2025-01-09T18:24:10.9684320Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9684400Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9684440Z         else:
2025-01-09T18:24:10.9684500Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9684550Z     
2025-01-09T18:24:10.9684650Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9684730Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9684780Z         )
2025-01-09T18:24:10.9684820Z     
2025-01-09T18:24:10.9684920Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9685010Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9685390Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9685480Z 
2025-01-09T18:24:10.9685580Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9685740Z _____ ERROR at setup of TestSimulationShellInfo.test_ion_count_data[20-20] _____
2025-01-09T18:24:10.9685740Z 
2025-01-09T18:24:10.9686270Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9686550Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9686560Z 
2025-01-09T18:24:10.9686630Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9686750Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9686830Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9686970Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9687030Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9687090Z >       sim.run_final()
2025-01-09T18:24:10.9687100Z 
2025-01-09T18:24:10.9687160Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9687250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9687320Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9687580Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9687660Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9687780Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9687870Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9687870Z 
2025-01-09T18:24:10.9688080Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9688360Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9688530Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9688970Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9689150Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9689270Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9689270Z 
2025-01-09T18:24:10.9689340Z     def initialize_transport_state(
2025-01-09T18:24:10.9689380Z         self,
2025-01-09T18:24:10.9689460Z         simulation_state,
2025-01-09T18:24:10.9689520Z         opacity_state,
2025-01-09T18:24:10.9689580Z         macro_atom_state,
2025-01-09T18:24:10.9689620Z         plasma,
2025-01-09T18:24:10.9689670Z         no_of_packets,
2025-01-09T18:24:10.9689730Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9689950Z         iteration=0,
2025-01-09T18:24:10.9690000Z     ):
2025-01-09T18:24:10.9690090Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9690160Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9690210Z         else:
2025-01-09T18:24:10.9690270Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9690320Z     
2025-01-09T18:24:10.9690430Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9690500Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9690550Z         )
2025-01-09T18:24:10.9690590Z     
2025-01-09T18:24:10.9690690Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9690770Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9691150Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9691380Z 
2025-01-09T18:24:10.9691480Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9691640Z ___ ERROR at setup of TestSimulationShellInfo.test_level_count_data[2-12-1] ____
2025-01-09T18:24:10.9691650Z 
2025-01-09T18:24:10.9692180Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9692470Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9692470Z 
2025-01-09T18:24:10.9692540Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9692670Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9692740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9692890Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9692950Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9693010Z >       sim.run_final()
2025-01-09T18:24:10.9693010Z 
2025-01-09T18:24:10.9693070Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9693160Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9693240Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9693360Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9693430Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9693550Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9693640Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9693640Z 
2025-01-09T18:24:10.9693850Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9694020Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9694200Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9694410Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9694750Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9694870Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9694870Z 
2025-01-09T18:24:10.9694930Z     def initialize_transport_state(
2025-01-09T18:24:10.9694980Z         self,
2025-01-09T18:24:10.9695040Z         simulation_state,
2025-01-09T18:24:10.9695090Z         opacity_state,
2025-01-09T18:24:10.9695160Z         macro_atom_state,
2025-01-09T18:24:10.9695210Z         plasma,
2025-01-09T18:24:10.9695280Z         no_of_packets,
2025-01-09T18:24:10.9695350Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9695400Z         iteration=0,
2025-01-09T18:24:10.9695440Z     ):
2025-01-09T18:24:10.9695540Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9695620Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9695660Z         else:
2025-01-09T18:24:10.9695720Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9695780Z     
2025-01-09T18:24:10.9695910Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9695990Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9696040Z         )
2025-01-09T18:24:10.9696080Z     
2025-01-09T18:24:10.9696180Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9696260Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9696650Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9696660Z 
2025-01-09T18:24:10.9696860Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9697040Z ___ ERROR at setup of TestSimulationShellInfo.test_level_count_data[3-20-20] ___
2025-01-09T18:24:10.9697040Z 
2025-01-09T18:24:10.9697710Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9698010Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9698020Z 
2025-01-09T18:24:10.9698090Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9698210Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9698290Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9698430Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9698500Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9698550Z >       sim.run_final()
2025-01-09T18:24:10.9698550Z 
2025-01-09T18:24:10.9698610Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9698700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9698780Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9698890Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9698960Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9699080Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9699170Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9699170Z 
2025-01-09T18:24:10.9699390Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9699550Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9699730Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9699950Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9700070Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9700190Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9700320Z 
2025-01-09T18:24:10.9700390Z     def initialize_transport_state(
2025-01-09T18:24:10.9700440Z         self,
2025-01-09T18:24:10.9700500Z         simulation_state,
2025-01-09T18:24:10.9700550Z         opacity_state,
2025-01-09T18:24:10.9700600Z         macro_atom_state,
2025-01-09T18:24:10.9700650Z         plasma,
2025-01-09T18:24:10.9700700Z         no_of_packets,
2025-01-09T18:24:10.9700760Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9700820Z         iteration=0,
2025-01-09T18:24:10.9700860Z     ):
2025-01-09T18:24:10.9700960Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9701030Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9701080Z         else:
2025-01-09T18:24:10.9701140Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9701180Z     
2025-01-09T18:24:10.9701290Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9701370Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9701420Z         )
2025-01-09T18:24:10.9701460Z     
2025-01-09T18:24:10.9701560Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9701640Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9702030Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9702040Z 
2025-01-09T18:24:10.9702470Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9702630Z _____________ ERROR at setup of TestHDFShellInfo.test_shells_data ______________
2025-01-09T18:24:10.9702760Z 
2025-01-09T18:24:10.9703300Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9703600Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9703600Z 
2025-01-09T18:24:10.9703670Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9703790Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9703870Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9704010Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9704080Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9704140Z >       sim.run_final()
2025-01-09T18:24:10.9704140Z 
2025-01-09T18:24:10.9704200Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9704290Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9704370Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9704500Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9704580Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9704700Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9704790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9704800Z 
2025-01-09T18:24:10.9705010Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9705170Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9705910Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9706760Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9707130Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9708980Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9709000Z 
2025-01-09T18:24:10.9709080Z     def initialize_transport_state(
2025-01-09T18:24:10.9709260Z         self,
2025-01-09T18:24:10.9709330Z         simulation_state,
2025-01-09T18:24:10.9709380Z         opacity_state,
2025-01-09T18:24:10.9709440Z         macro_atom_state,
2025-01-09T18:24:10.9709490Z         plasma,
2025-01-09T18:24:10.9709530Z         no_of_packets,
2025-01-09T18:24:10.9709600Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9709650Z         iteration=0,
2025-01-09T18:24:10.9709690Z     ):
2025-01-09T18:24:10.9709790Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9709870Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9709920Z         else:
2025-01-09T18:24:10.9709990Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9710200Z     
2025-01-09T18:24:10.9710320Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9710390Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9710440Z         )
2025-01-09T18:24:10.9710480Z     
2025-01-09T18:24:10.9710590Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9710670Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9711050Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9711060Z 
2025-01-09T18:24:10.9711150Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9711310Z ________ ERROR at setup of TestHDFShellInfo.test_element_count_data[1] _________
2025-01-09T18:24:10.9711320Z 
2025-01-09T18:24:10.9712110Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9712400Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9712410Z 
2025-01-09T18:24:10.9712470Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9712600Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9712740Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9712890Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9713530Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9713760Z >       sim.run_final()
2025-01-09T18:24:10.9713770Z 
2025-01-09T18:24:10.9714160Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9714330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9714410Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9714520Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9714600Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9714740Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9714840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9714840Z 
2025-01-09T18:24:10.9715050Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9715220Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9715390Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9715620Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9715750Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9715860Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9715870Z 
2025-01-09T18:24:10.9715930Z     def initialize_transport_state(
2025-01-09T18:24:10.9715980Z         self,
2025-01-09T18:24:10.9716040Z         simulation_state,
2025-01-09T18:24:10.9716190Z         opacity_state,
2025-01-09T18:24:10.9716250Z         macro_atom_state,
2025-01-09T18:24:10.9716300Z         plasma,
2025-01-09T18:24:10.9716360Z         no_of_packets,
2025-01-09T18:24:10.9716420Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9716480Z         iteration=0,
2025-01-09T18:24:10.9716520Z     ):
2025-01-09T18:24:10.9716620Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9716690Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9716740Z         else:
2025-01-09T18:24:10.9716800Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9716850Z     
2025-01-09T18:24:10.9716960Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9717040Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9717090Z         )
2025-01-09T18:24:10.9717130Z     
2025-01-09T18:24:10.9717230Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9717320Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9718240Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9718250Z 
2025-01-09T18:24:10.9718350Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9718500Z ________ ERROR at setup of TestHDFShellInfo.test_element_count_data[20] ________
2025-01-09T18:24:10.9718500Z 
2025-01-09T18:24:10.9719030Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9719690Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9719690Z 
2025-01-09T18:24:10.9719770Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9719890Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9719970Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9720110Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9720180Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9720230Z >       sim.run_final()
2025-01-09T18:24:10.9720230Z 
2025-01-09T18:24:10.9720290Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9720890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9720980Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9721090Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9721160Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9721290Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9721380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9721380Z 
2025-01-09T18:24:10.9721600Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9721750Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9721930Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9722160Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9722300Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9722410Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9722410Z 
2025-01-09T18:24:10.9722480Z     def initialize_transport_state(
2025-01-09T18:24:10.9722530Z         self,
2025-01-09T18:24:10.9722580Z         simulation_state,
2025-01-09T18:24:10.9722640Z         opacity_state,
2025-01-09T18:24:10.9722690Z         macro_atom_state,
2025-01-09T18:24:10.9723120Z         plasma,
2025-01-09T18:24:10.9723180Z         no_of_packets,
2025-01-09T18:24:10.9723240Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9723290Z         iteration=0,
2025-01-09T18:24:10.9723330Z     ):
2025-01-09T18:24:10.9723430Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9723500Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9723550Z         else:
2025-01-09T18:24:10.9723610Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9723660Z     
2025-01-09T18:24:10.9723770Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9723840Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9723890Z         )
2025-01-09T18:24:10.9723940Z     
2025-01-09T18:24:10.9724040Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9724120Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9724500Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9724510Z 
2025-01-09T18:24:10.9724600Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9724750Z _________ ERROR at setup of TestHDFShellInfo.test_ion_count_data[12-1] _________
2025-01-09T18:24:10.9724750Z 
2025-01-09T18:24:10.9725280Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9725620Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9725630Z 
2025-01-09T18:24:10.9725690Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9725820Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9725900Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9726040Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9726110Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9726160Z >       sim.run_final()
2025-01-09T18:24:10.9726160Z 
2025-01-09T18:24:10.9726220Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9726770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9726900Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9727020Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9727100Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9727230Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9727330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9727330Z 
2025-01-09T18:24:10.9727550Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9727720Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9727900Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9728600Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9729090Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9729390Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9729400Z 
2025-01-09T18:24:10.9729620Z     def initialize_transport_state(
2025-01-09T18:24:10.9729760Z         self,
2025-01-09T18:24:10.9729940Z         simulation_state,
2025-01-09T18:24:10.9730090Z         opacity_state,
2025-01-09T18:24:10.9730260Z         macro_atom_state,
2025-01-09T18:24:10.9730410Z         plasma,
2025-01-09T18:24:10.9730570Z         no_of_packets,
2025-01-09T18:24:10.9732450Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9732610Z         iteration=0,
2025-01-09T18:24:10.9732660Z     ):
2025-01-09T18:24:10.9732770Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9732840Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9732890Z         else:
2025-01-09T18:24:10.9732950Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9733000Z     
2025-01-09T18:24:10.9733110Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9733190Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9733240Z         )
2025-01-09T18:24:10.9733300Z     
2025-01-09T18:24:10.9733400Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9733480Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9733880Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9733890Z 
2025-01-09T18:24:10.9733990Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9734140Z ________ ERROR at setup of TestHDFShellInfo.test_ion_count_data[20-20] _________
2025-01-09T18:24:10.9734140Z 
2025-01-09T18:24:10.9734690Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9734980Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9735070Z 
2025-01-09T18:24:10.9735140Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9735270Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9735350Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9735500Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9735570Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9735620Z >       sim.run_final()
2025-01-09T18:24:10.9735630Z 
2025-01-09T18:24:10.9735690Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9735790Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9735860Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9735980Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9736040Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9736180Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9736260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9736270Z 
2025-01-09T18:24:10.9736480Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9736640Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9736820Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9737030Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9737160Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9737270Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9737270Z 
2025-01-09T18:24:10.9737340Z     def initialize_transport_state(
2025-01-09T18:24:10.9737390Z         self,
2025-01-09T18:24:10.9737450Z         simulation_state,
2025-01-09T18:24:10.9737510Z         opacity_state,
2025-01-09T18:24:10.9737560Z         macro_atom_state,
2025-01-09T18:24:10.9737610Z         plasma,
2025-01-09T18:24:10.9737660Z         no_of_packets,
2025-01-09T18:24:10.9737720Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9737770Z         iteration=0,
2025-01-09T18:24:10.9737910Z     ):
2025-01-09T18:24:10.9738020Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9738090Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9738140Z         else:
2025-01-09T18:24:10.9738200Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9738240Z     
2025-01-09T18:24:10.9738350Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9738430Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9738470Z         )
2025-01-09T18:24:10.9738520Z     
2025-01-09T18:24:10.9738620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9738700Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9739080Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9739090Z 
2025-01-09T18:24:10.9739180Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9739330Z _______ ERROR at setup of TestHDFShellInfo.test_level_count_data[2-12-1] _______
2025-01-09T18:24:10.9739330Z 
2025-01-09T18:24:10.9739910Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9740200Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9740250Z 
2025-01-09T18:24:10.9740320Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9740450Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9740520Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9740660Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9740730Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9740780Z >       sim.run_final()
2025-01-09T18:24:10.9740780Z 
2025-01-09T18:24:10.9740840Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9740930Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9741000Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9741110Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9741180Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9741300Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9741400Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9741400Z 
2025-01-09T18:24:10.9741600Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9741760Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9741940Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9742150Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9742280Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9742380Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9742390Z 
2025-01-09T18:24:10.9742460Z     def initialize_transport_state(
2025-01-09T18:24:10.9742500Z         self,
2025-01-09T18:24:10.9742560Z         simulation_state,
2025-01-09T18:24:10.9742620Z         opacity_state,
2025-01-09T18:24:10.9742680Z         macro_atom_state,
2025-01-09T18:24:10.9742720Z         plasma,
2025-01-09T18:24:10.9742770Z         no_of_packets,
2025-01-09T18:24:10.9742830Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9742880Z         iteration=0,
2025-01-09T18:24:10.9742920Z     ):
2025-01-09T18:24:10.9743140Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9743270Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9743320Z         else:
2025-01-09T18:24:10.9743370Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9743420Z     
2025-01-09T18:24:10.9743530Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9743600Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9743650Z         )
2025-01-09T18:24:10.9743690Z     
2025-01-09T18:24:10.9743800Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9743870Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9744260Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9744260Z 
2025-01-09T18:24:10.9744360Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9744510Z ______ ERROR at setup of TestHDFShellInfo.test_level_count_data[3-20-20] _______
2025-01-09T18:24:10.9744510Z 
2025-01-09T18:24:10.9745770Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9747500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9747900Z 
2025-01-09T18:24:10.9748850Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9750920Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9751050Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9752600Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9752710Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9752770Z >       sim.run_final()
2025-01-09T18:24:10.9752790Z 
2025-01-09T18:24:10.9752850Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9752960Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9753040Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9753160Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9753240Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9753370Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9753460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9753470Z 
2025-01-09T18:24:10.9753690Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9753850Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9754790Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9755050Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9755180Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9755290Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9755300Z 
2025-01-09T18:24:10.9755360Z     def initialize_transport_state(
2025-01-09T18:24:10.9755410Z         self,
2025-01-09T18:24:10.9755470Z         simulation_state,
2025-01-09T18:24:10.9755520Z         opacity_state,
2025-01-09T18:24:10.9755570Z         macro_atom_state,
2025-01-09T18:24:10.9755630Z         plasma,
2025-01-09T18:24:10.9755680Z         no_of_packets,
2025-01-09T18:24:10.9755740Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9755800Z         iteration=0,
2025-01-09T18:24:10.9755840Z     ):
2025-01-09T18:24:10.9755950Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9756020Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9756470Z         else:
2025-01-09T18:24:10.9756530Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9756570Z     
2025-01-09T18:24:10.9756680Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9756760Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9756800Z         )
2025-01-09T18:24:10.9756850Z     
2025-01-09T18:24:10.9756960Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9757030Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9757420Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9757430Z 
2025-01-09T18:24:10.9757520Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9757680Z _____ ERROR at setup of TestShellInfoWidget.test_selection_on_shells_table _____
2025-01-09T18:24:10.9757690Z 
2025-01-09T18:24:10.9758220Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9758500Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9758510Z 
2025-01-09T18:24:10.9758570Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9758700Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9758780Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9759020Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9759090Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9759140Z >       sim.run_final()
2025-01-09T18:24:10.9759140Z 
2025-01-09T18:24:10.9759210Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9763530Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9763710Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9763830Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9763890Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9764010Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9764100Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9764110Z 
2025-01-09T18:24:10.9764320Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9764480Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9764650Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9764870Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9765000Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9765110Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9765110Z 
2025-01-09T18:24:10.9765180Z     def initialize_transport_state(
2025-01-09T18:24:10.9765230Z         self,
2025-01-09T18:24:10.9765280Z         simulation_state,
2025-01-09T18:24:10.9765330Z         opacity_state,
2025-01-09T18:24:10.9765390Z         macro_atom_state,
2025-01-09T18:24:10.9765430Z         plasma,
2025-01-09T18:24:10.9765480Z         no_of_packets,
2025-01-09T18:24:10.9765540Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9765590Z         iteration=0,
2025-01-09T18:24:10.9765830Z     ):
2025-01-09T18:24:10.9765940Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9766010Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9766060Z         else:
2025-01-09T18:24:10.9766120Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9766290Z     
2025-01-09T18:24:10.9766400Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9766480Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9766520Z         )
2025-01-09T18:24:10.9766570Z     
2025-01-09T18:24:10.9766670Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9766750Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9767140Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9767150Z 
2025-01-09T18:24:10.9767240Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9767410Z _ ERROR at setup of TestShellInfoWidget.test_selection_on_element_count_table __
2025-01-09T18:24:10.9767410Z 
2025-01-09T18:24:10.9768480Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9769040Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9769040Z 
2025-01-09T18:24:10.9769110Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9769240Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9769310Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9769450Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9769630Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9769690Z >       sim.run_final()
2025-01-09T18:24:10.9769690Z 
2025-01-09T18:24:10.9769750Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9769840Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9769920Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9770040Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9770110Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9770230Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9770320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9770330Z 
2025-01-09T18:24:10.9770540Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9770700Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9770890Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9771100Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9771230Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9771340Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9771350Z 
2025-01-09T18:24:10.9771410Z     def initialize_transport_state(
2025-01-09T18:24:10.9771460Z         self,
2025-01-09T18:24:10.9771520Z         simulation_state,
2025-01-09T18:24:10.9771570Z         opacity_state,
2025-01-09T18:24:10.9771620Z         macro_atom_state,
2025-01-09T18:24:10.9771670Z         plasma,
2025-01-09T18:24:10.9771720Z         no_of_packets,
2025-01-09T18:24:10.9771780Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9771830Z         iteration=0,
2025-01-09T18:24:10.9771870Z     ):
2025-01-09T18:24:10.9771970Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9772050Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9772100Z         else:
2025-01-09T18:24:10.9772160Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9772200Z     
2025-01-09T18:24:10.9772310Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9772440Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9772490Z         )
2025-01-09T18:24:10.9772530Z     
2025-01-09T18:24:10.9772640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9772710Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9773100Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9773110Z 
2025-01-09T18:24:10.9773210Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9773370Z ___ ERROR at setup of TestShellInfoWidget.test_selection_on_ion_count_table ____
2025-01-09T18:24:10.9773370Z 
2025-01-09T18:24:10.9773900Z config_verysimple = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...}, 'config_dirname': 'tardis/io/configuration/tests/data', 'debug': {'log_level': 'INFO', 'specific_log_level': False}}
2025-01-09T18:24:10.9774360Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=271741 Levels=24806>
2025-01-09T18:24:10.9774360Z 
2025-01-09T18:24:10.9774840Z     @pytest.fixture(scope="session")
2025-01-09T18:24:10.9775270Z     def simulation_verysimple(config_verysimple, atomic_dataset):
2025-01-09T18:24:10.9775480Z         atomic_data = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9775850Z         sim = Simulation.from_config(config_verysimple, atom_data=atomic_data)
2025-01-09T18:24:10.9776040Z         sim.last_no_of_packets = 4000
2025-01-09T18:24:10.9776580Z >       sim.run_final()
2025-01-09T18:24:10.9776590Z 
2025-01-09T18:24:10.9776770Z tardis/conftest.py:233: 
2025-01-09T18:24:10.9777200Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9777330Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9777450Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9777520Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9777650Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9777740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9777740Z 
2025-01-09T18:24:10.9777950Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x16b8123f0>
2025-01-09T18:24:10.9778110Z simulation_state = <tardis.model.base.SimulationState object at 0x156e89d90>
2025-01-09T18:24:10.9778280Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1568bf5c0>
2025-01-09T18:24:10.9778500Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1567ee960>
2025-01-09T18:24:10.9778620Z plasma = <tardis.plasma.base.BasePlasma object at 0x16b7fbce0>
2025-01-09T18:24:10.9778730Z no_of_packets = 4000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9778740Z 
2025-01-09T18:24:10.9778800Z     def initialize_transport_state(
2025-01-09T18:24:10.9778850Z         self,
2025-01-09T18:24:10.9778910Z         simulation_state,
2025-01-09T18:24:10.9778960Z         opacity_state,
2025-01-09T18:24:10.9779010Z         macro_atom_state,
2025-01-09T18:24:10.9779050Z         plasma,
2025-01-09T18:24:10.9779100Z         no_of_packets,
2025-01-09T18:24:10.9779160Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9779210Z         iteration=0,
2025-01-09T18:24:10.9779260Z     ):
2025-01-09T18:24:10.9779370Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9779440Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9779490Z         else:
2025-01-09T18:24:10.9779550Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9779600Z     
2025-01-09T18:24:10.9779700Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9779780Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9779820Z         )
2025-01-09T18:24:10.9780000Z     
2025-01-09T18:24:10.9780100Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9780180Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9780570Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9780580Z 
2025-01-09T18:24:10.9780670Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9780750Z =================================== FAILURES ===================================
2025-01-09T18:24:10.9780920Z ___________ test_populate_z_photosphere[formal_integral_geometry0-0] ___________
2025-01-09T18:24:10.9780920Z 
2025-01-09T18:24:10.9781180Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x13bc33f10>
2025-01-09T18:24:10.9781260Z time_explosion = 3.33564095198152e-11, p = 0
2025-01-09T18:24:10.9781260Z 
2025-01-09T18:24:10.9781350Z     @pytest.mark.parametrize("p", [0, 0.5, 1])
2025-01-09T18:24:10.9781510Z     def test_populate_z_photosphere(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9781560Z         """
2025-01-09T18:24:10.9781620Z         Test the case where p < r[0]
2025-01-09T18:24:10.9781730Z         That means we 'hit' all shells from inside to outside.
2025-01-09T18:24:10.9781770Z         """
2025-01-09T18:24:10.9781930Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9781930Z 
2025-01-09T18:24:10.9782040Z tardis/spectrum/tests/test_numba_formal_integral.py:95: 
2025-01-09T18:24:10.9782420Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9782420Z 
2025-01-09T18:24:10.9782580Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x36110e900>
2025-01-09T18:24:10.9782720Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9782840Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9782840Z 
2025-01-09T18:24:10.9782890Z     def __init__(
2025-01-09T18:24:10.9782940Z         self,
2025-01-09T18:24:10.9782990Z         simulation_state,
2025-01-09T18:24:10.9783040Z         plasma,
2025-01-09T18:24:10.9783090Z         transport,
2025-01-09T18:24:10.9783150Z         opacity_state=None,
2025-01-09T18:24:10.9783210Z         macro_atom_state=None,
2025-01-09T18:24:10.9783260Z         points=1000,
2025-01-09T18:24:10.9783300Z     ):
2025-01-09T18:24:10.9783380Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9783450Z         self.transport = transport
2025-01-09T18:24:10.9783510Z         self.points = points
2025-01-09T18:24:10.9783590Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9784180Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9784190Z 
2025-01-09T18:24:10.9784280Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9784420Z __________ test_populate_z_photosphere[formal_integral_geometry0-0.5] __________
2025-01-09T18:24:10.9784430Z 
2025-01-09T18:24:10.9784690Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152a6b4c0>
2025-01-09T18:24:10.9784760Z time_explosion = 3.33564095198152e-11, p = 0.5
2025-01-09T18:24:10.9784770Z 
2025-01-09T18:24:10.9784850Z     @pytest.mark.parametrize("p", [0, 0.5, 1])
2025-01-09T18:24:10.9785010Z     def test_populate_z_photosphere(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9785060Z         """
2025-01-09T18:24:10.9785130Z         Test the case where p < r[0]
2025-01-09T18:24:10.9785230Z         That means we 'hit' all shells from inside to outside.
2025-01-09T18:24:10.9785270Z         """
2025-01-09T18:24:10.9785430Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9785680Z 
2025-01-09T18:24:10.9785820Z tardis/spectrum/tests/test_numba_formal_integral.py:95: 
2025-01-09T18:24:10.9785910Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9785920Z 
2025-01-09T18:24:10.9786400Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152a6b680>
2025-01-09T18:24:10.9786900Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9787050Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9787060Z 
2025-01-09T18:24:10.9787110Z     def __init__(
2025-01-09T18:24:10.9787160Z         self,
2025-01-09T18:24:10.9787220Z         simulation_state,
2025-01-09T18:24:10.9787270Z         plasma,
2025-01-09T18:24:10.9787320Z         transport,
2025-01-09T18:24:10.9787380Z         opacity_state=None,
2025-01-09T18:24:10.9787440Z         macro_atom_state=None,
2025-01-09T18:24:10.9787490Z         points=1000,
2025-01-09T18:24:10.9787540Z     ):
2025-01-09T18:24:10.9787620Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9787690Z         self.transport = transport
2025-01-09T18:24:10.9787750Z         self.points = points
2025-01-09T18:24:10.9787850Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9788250Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9788260Z 
2025-01-09T18:24:10.9788350Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9788500Z ___________ test_populate_z_photosphere[formal_integral_geometry0-1] ___________
2025-01-09T18:24:10.9788610Z 
2025-01-09T18:24:10.9788880Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152aa82e0>
2025-01-09T18:24:10.9788950Z time_explosion = 3.33564095198152e-11, p = 1
2025-01-09T18:24:10.9788950Z 
2025-01-09T18:24:10.9789030Z     @pytest.mark.parametrize("p", [0, 0.5, 1])
2025-01-09T18:24:10.9789190Z     def test_populate_z_photosphere(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9789240Z         """
2025-01-09T18:24:10.9789310Z         Test the case where p < r[0]
2025-01-09T18:24:10.9789410Z         That means we 'hit' all shells from inside to outside.
2025-01-09T18:24:10.9789460Z         """
2025-01-09T18:24:10.9789620Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9789620Z 
2025-01-09T18:24:10.9789730Z tardis/spectrum/tests/test_numba_formal_integral.py:95: 
2025-01-09T18:24:10.9789820Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9789830Z 
2025-01-09T18:24:10.9789990Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152aa8440>
2025-01-09T18:24:10.9790130Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9790240Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9790250Z 
2025-01-09T18:24:10.9790300Z     def __init__(
2025-01-09T18:24:10.9790350Z         self,
2025-01-09T18:24:10.9790400Z         simulation_state,
2025-01-09T18:24:10.9790450Z         plasma,
2025-01-09T18:24:10.9790500Z         transport,
2025-01-09T18:24:10.9790560Z         opacity_state=None,
2025-01-09T18:24:10.9790610Z         macro_atom_state=None,
2025-01-09T18:24:10.9790670Z         points=1000,
2025-01-09T18:24:10.9790710Z     ):
2025-01-09T18:24:10.9790790Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9790860Z         self.transport = transport
2025-01-09T18:24:10.9790920Z         self.points = points
2025-01-09T18:24:10.9791000Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9791390Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9791450Z 
2025-01-09T18:24:10.9791540Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9791690Z ___________ test_populate_z_photosphere[formal_integral_geometry1-0] ___________
2025-01-09T18:24:10.9791690Z 
2025-01-09T18:24:10.9791950Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152aa8fd0>
2025-01-09T18:24:10.9792020Z time_explosion = 3.33564095198152e-11, p = 0
2025-01-09T18:24:10.9792020Z 
2025-01-09T18:24:10.9792100Z     @pytest.mark.parametrize("p", [0, 0.5, 1])
2025-01-09T18:24:10.9792320Z     def test_populate_z_photosphere(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9792380Z         """
2025-01-09T18:24:10.9792440Z         Test the case where p < r[0]
2025-01-09T18:24:10.9792540Z         That means we 'hit' all shells from inside to outside.
2025-01-09T18:24:10.9792590Z         """
2025-01-09T18:24:10.9792740Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9792750Z 
2025-01-09T18:24:10.9792860Z tardis/spectrum/tests/test_numba_formal_integral.py:95: 
2025-01-09T18:24:10.9793460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9793480Z 
2025-01-09T18:24:10.9793730Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152aa9100>
2025-01-09T18:24:10.9795040Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9795590Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9795600Z 
2025-01-09T18:24:10.9795650Z     def __init__(
2025-01-09T18:24:10.9795700Z         self,
2025-01-09T18:24:10.9795870Z         simulation_state,
2025-01-09T18:24:10.9795940Z         plasma,
2025-01-09T18:24:10.9795990Z         transport,
2025-01-09T18:24:10.9796050Z         opacity_state=None,
2025-01-09T18:24:10.9796120Z         macro_atom_state=None,
2025-01-09T18:24:10.9796180Z         points=1000,
2025-01-09T18:24:10.9796230Z     ):
2025-01-09T18:24:10.9796310Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9796380Z         self.transport = transport
2025-01-09T18:24:10.9796430Z         self.points = points
2025-01-09T18:24:10.9796510Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9796900Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9796910Z 
2025-01-09T18:24:10.9797000Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9797150Z __________ test_populate_z_photosphere[formal_integral_geometry1-0.5] __________
2025-01-09T18:24:10.9797160Z 
2025-01-09T18:24:10.9797410Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x13bc3c8e0>
2025-01-09T18:24:10.9797500Z time_explosion = 3.33564095198152e-11, p = 0.5
2025-01-09T18:24:10.9797500Z 
2025-01-09T18:24:10.9797580Z     @pytest.mark.parametrize("p", [0, 0.5, 1])
2025-01-09T18:24:10.9797750Z     def test_populate_z_photosphere(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9797800Z         """
2025-01-09T18:24:10.9797860Z         Test the case where p < r[0]
2025-01-09T18:24:10.9797970Z         That means we 'hit' all shells from inside to outside.
2025-01-09T18:24:10.9798020Z         """
2025-01-09T18:24:10.9798170Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9798170Z 
2025-01-09T18:24:10.9798290Z tardis/spectrum/tests/test_numba_formal_integral.py:95: 
2025-01-09T18:24:10.9798380Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9798390Z 
2025-01-09T18:24:10.9798550Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x13bc3c6b0>
2025-01-09T18:24:10.9798690Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9798800Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9798880Z 
2025-01-09T18:24:10.9798940Z     def __init__(
2025-01-09T18:24:10.9798980Z         self,
2025-01-09T18:24:10.9799040Z         simulation_state,
2025-01-09T18:24:10.9799090Z         plasma,
2025-01-09T18:24:10.9799140Z         transport,
2025-01-09T18:24:10.9799190Z         opacity_state=None,
2025-01-09T18:24:10.9799250Z         macro_atom_state=None,
2025-01-09T18:24:10.9799300Z         points=1000,
2025-01-09T18:24:10.9799350Z     ):
2025-01-09T18:24:10.9799430Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9799490Z         self.transport = transport
2025-01-09T18:24:10.9799560Z         self.points = points
2025-01-09T18:24:10.9799630Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9800010Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9800020Z 
2025-01-09T18:24:10.9800110Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9800260Z ___________ test_populate_z_photosphere[formal_integral_geometry1-1] ___________
2025-01-09T18:24:10.9800260Z 
2025-01-09T18:24:10.9800510Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152a69e40>
2025-01-09T18:24:10.9800590Z time_explosion = 3.33564095198152e-11, p = 1
2025-01-09T18:24:10.9800590Z 
2025-01-09T18:24:10.9800670Z     @pytest.mark.parametrize("p", [0, 0.5, 1])
2025-01-09T18:24:10.9800830Z     def test_populate_z_photosphere(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9800940Z         """
2025-01-09T18:24:10.9801010Z         Test the case where p < r[0]
2025-01-09T18:24:10.9801110Z         That means we 'hit' all shells from inside to outside.
2025-01-09T18:24:10.9801150Z         """
2025-01-09T18:24:10.9801310Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9801310Z 
2025-01-09T18:24:10.9801430Z tardis/spectrum/tests/test_numba_formal_integral.py:95: 
2025-01-09T18:24:10.9801520Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9801520Z 
2025-01-09T18:24:10.9801680Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152a69dc0>
2025-01-09T18:24:10.9801830Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9801950Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9801950Z 
2025-01-09T18:24:10.9802000Z     def __init__(
2025-01-09T18:24:10.9802050Z         self,
2025-01-09T18:24:10.9802110Z         simulation_state,
2025-01-09T18:24:10.9802160Z         plasma,
2025-01-09T18:24:10.9802210Z         transport,
2025-01-09T18:24:10.9802270Z         opacity_state=None,
2025-01-09T18:24:10.9802330Z         macro_atom_state=None,
2025-01-09T18:24:10.9802380Z         points=1000,
2025-01-09T18:24:10.9802420Z     ):
2025-01-09T18:24:10.9802500Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9802570Z         self.transport = transport
2025-01-09T18:24:10.9802630Z         self.points = points
2025-01-09T18:24:10.9802700Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9803080Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9803080Z 
2025-01-09T18:24:10.9803170Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9803320Z ___________ test_populate_z_shells[formal_integral_geometry0-1e-05] ____________
2025-01-09T18:24:10.9803330Z 
2025-01-09T18:24:10.9803580Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152a68c70>
2025-01-09T18:24:10.9803660Z time_explosion = 3.33564095198152e-11, p = 1e-05
2025-01-09T18:24:10.9803660Z 
2025-01-09T18:24:10.9803760Z     @pytest.mark.parametrize("p", [1e-5, 0.5, 0.99, 1])
2025-01-09T18:24:10.9803950Z     def test_populate_z_shells(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9804000Z         """
2025-01-09T18:24:10.9804070Z         Test the case where p > r[0]
2025-01-09T18:24:10.9804130Z         """
2025-01-09T18:24:10.9804300Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9804310Z 
2025-01-09T18:24:10.9804420Z tardis/spectrum/tests/test_numba_formal_integral.py:118: 
2025-01-09T18:24:10.9804510Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9804510Z 
2025-01-09T18:24:10.9805320Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152a69010>
2025-01-09T18:24:10.9805470Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9805580Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9805580Z 
2025-01-09T18:24:10.9805630Z     def __init__(
2025-01-09T18:24:10.9805690Z         self,
2025-01-09T18:24:10.9805740Z         simulation_state,
2025-01-09T18:24:10.9805790Z         plasma,
2025-01-09T18:24:10.9805830Z         transport,
2025-01-09T18:24:10.9806040Z         opacity_state=None,
2025-01-09T18:24:10.9806140Z         macro_atom_state=None,
2025-01-09T18:24:10.9806190Z         points=1000,
2025-01-09T18:24:10.9806230Z     ):
2025-01-09T18:24:10.9806320Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9806390Z         self.transport = transport
2025-01-09T18:24:10.9806450Z         self.points = points
2025-01-09T18:24:10.9806520Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9807220Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9807230Z 
2025-01-09T18:24:10.9807320Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9807470Z ____________ test_populate_z_shells[formal_integral_geometry0-0.5] _____________
2025-01-09T18:24:10.9807480Z 
2025-01-09T18:24:10.9807730Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152a6ac20>
2025-01-09T18:24:10.9807810Z time_explosion = 3.33564095198152e-11, p = 0.5
2025-01-09T18:24:10.9807810Z 
2025-01-09T18:24:10.9807910Z     @pytest.mark.parametrize("p", [1e-5, 0.5, 0.99, 1])
2025-01-09T18:24:10.9808060Z     def test_populate_z_shells(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9808110Z         """
2025-01-09T18:24:10.9808170Z         Test the case where p > r[0]
2025-01-09T18:24:10.9808230Z         """
2025-01-09T18:24:10.9808380Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9808390Z 
2025-01-09T18:24:10.9808500Z tardis/spectrum/tests/test_numba_formal_integral.py:118: 
2025-01-09T18:24:10.9808590Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9808600Z 
2025-01-09T18:24:10.9808760Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152a6ae10>
2025-01-09T18:24:10.9808920Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9809190Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9809210Z 
2025-01-09T18:24:10.9809270Z     def __init__(
2025-01-09T18:24:10.9809320Z         self,
2025-01-09T18:24:10.9809380Z         simulation_state,
2025-01-09T18:24:10.9809430Z         plasma,
2025-01-09T18:24:10.9809470Z         transport,
2025-01-09T18:24:10.9809530Z         opacity_state=None,
2025-01-09T18:24:10.9809600Z         macro_atom_state=None,
2025-01-09T18:24:10.9809650Z         points=1000,
2025-01-09T18:24:10.9809690Z     ):
2025-01-09T18:24:10.9809770Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9809830Z         self.transport = transport
2025-01-09T18:24:10.9809900Z         self.points = points
2025-01-09T18:24:10.9810220Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9810610Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9810610Z 
2025-01-09T18:24:10.9810700Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9810840Z ____________ test_populate_z_shells[formal_integral_geometry0-0.99] ____________
2025-01-09T18:24:10.9810840Z 
2025-01-09T18:24:10.9811100Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152a6a410>
2025-01-09T18:24:10.9811240Z time_explosion = 3.33564095198152e-11, p = 0.99
2025-01-09T18:24:10.9811240Z 
2025-01-09T18:24:10.9811470Z     @pytest.mark.parametrize("p", [1e-5, 0.5, 0.99, 1])
2025-01-09T18:24:10.9811610Z     def test_populate_z_shells(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9811670Z         """
2025-01-09T18:24:10.9811730Z         Test the case where p > r[0]
2025-01-09T18:24:10.9811780Z         """
2025-01-09T18:24:10.9811930Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9811930Z 
2025-01-09T18:24:10.9812040Z tardis/spectrum/tests/test_numba_formal_integral.py:118: 
2025-01-09T18:24:10.9812130Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9812130Z 
2025-01-09T18:24:10.9812300Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152a6a2d0>
2025-01-09T18:24:10.9812430Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9812610Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9812610Z 
2025-01-09T18:24:10.9812660Z     def __init__(
2025-01-09T18:24:10.9812710Z         self,
2025-01-09T18:24:10.9812770Z         simulation_state,
2025-01-09T18:24:10.9812820Z         plasma,
2025-01-09T18:24:10.9812880Z         transport,
2025-01-09T18:24:10.9812930Z         opacity_state=None,
2025-01-09T18:24:10.9813010Z         macro_atom_state=None,
2025-01-09T18:24:10.9813060Z         points=1000,
2025-01-09T18:24:10.9813100Z     ):
2025-01-09T18:24:10.9813180Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9813250Z         self.transport = transport
2025-01-09T18:24:10.9813300Z         self.points = points
2025-01-09T18:24:10.9813380Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9813760Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9813760Z 
2025-01-09T18:24:10.9813850Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9813990Z _____________ test_populate_z_shells[formal_integral_geometry0-1] ______________
2025-01-09T18:24:10.9813990Z 
2025-01-09T18:24:10.9814240Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152a66440>
2025-01-09T18:24:10.9814450Z time_explosion = 3.33564095198152e-11, p = 1
2025-01-09T18:24:10.9814450Z 
2025-01-09T18:24:10.9814550Z     @pytest.mark.parametrize("p", [1e-5, 0.5, 0.99, 1])
2025-01-09T18:24:10.9814700Z     def test_populate_z_shells(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9814740Z         """
2025-01-09T18:24:10.9814800Z         Test the case where p > r[0]
2025-01-09T18:24:10.9814850Z         """
2025-01-09T18:24:10.9815000Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9815010Z 
2025-01-09T18:24:10.9815120Z tardis/spectrum/tests/test_numba_formal_integral.py:118: 
2025-01-09T18:24:10.9815210Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9815210Z 
2025-01-09T18:24:10.9815370Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152a665d0>
2025-01-09T18:24:10.9815500Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9815690Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9815700Z 
2025-01-09T18:24:10.9815750Z     def __init__(
2025-01-09T18:24:10.9815790Z         self,
2025-01-09T18:24:10.9815850Z         simulation_state,
2025-01-09T18:24:10.9815900Z         plasma,
2025-01-09T18:24:10.9815950Z         transport,
2025-01-09T18:24:10.9816000Z         opacity_state=None,
2025-01-09T18:24:10.9816060Z         macro_atom_state=None,
2025-01-09T18:24:10.9816110Z         points=1000,
2025-01-09T18:24:10.9816150Z     ):
2025-01-09T18:24:10.9816230Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9816290Z         self.transport = transport
2025-01-09T18:24:10.9816350Z         self.points = points
2025-01-09T18:24:10.9816420Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9816800Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9816810Z 
2025-01-09T18:24:10.9816900Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9817040Z ___________ test_populate_z_shells[formal_integral_geometry1-1e-05] ____________
2025-01-09T18:24:10.9817050Z 
2025-01-09T18:24:10.9817300Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x1529d3790>
2025-01-09T18:24:10.9817380Z time_explosion = 3.33564095198152e-11, p = 1e-05
2025-01-09T18:24:10.9817380Z 
2025-01-09T18:24:10.9817470Z     @pytest.mark.parametrize("p", [1e-5, 0.5, 0.99, 1])
2025-01-09T18:24:10.9817790Z     def test_populate_z_shells(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9817840Z         """
2025-01-09T18:24:10.9817900Z         Test the case where p > r[0]
2025-01-09T18:24:10.9817940Z         """
2025-01-09T18:24:10.9818120Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9818130Z 
2025-01-09T18:24:10.9818240Z tardis/spectrum/tests/test_numba_formal_integral.py:118: 
2025-01-09T18:24:10.9818330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9818330Z 
2025-01-09T18:24:10.9818490Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152a6a2d0>
2025-01-09T18:24:10.9818620Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9818740Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9818740Z 
2025-01-09T18:24:10.9818780Z     def __init__(
2025-01-09T18:24:10.9818830Z         self,
2025-01-09T18:24:10.9818890Z         simulation_state,
2025-01-09T18:24:10.9818930Z         plasma,
2025-01-09T18:24:10.9818980Z         transport,
2025-01-09T18:24:10.9819040Z         opacity_state=None,
2025-01-09T18:24:10.9819100Z         macro_atom_state=None,
2025-01-09T18:24:10.9819140Z         points=1000,
2025-01-09T18:24:10.9819190Z     ):
2025-01-09T18:24:10.9819260Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9819330Z         self.transport = transport
2025-01-09T18:24:10.9819380Z         self.points = points
2025-01-09T18:24:10.9819460Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9819850Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9819860Z 
2025-01-09T18:24:10.9819950Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9820090Z ____________ test_populate_z_shells[formal_integral_geometry1-0.5] _____________
2025-01-09T18:24:10.9820090Z 
2025-01-09T18:24:10.9820350Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152a68eb0>
2025-01-09T18:24:10.9820430Z time_explosion = 3.33564095198152e-11, p = 0.5
2025-01-09T18:24:10.9820430Z 
2025-01-09T18:24:10.9820600Z     @pytest.mark.parametrize("p", [1e-5, 0.5, 0.99, 1])
2025-01-09T18:24:10.9820750Z     def test_populate_z_shells(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9820790Z         """
2025-01-09T18:24:10.9820860Z         Test the case where p > r[0]
2025-01-09T18:24:10.9820900Z         """
2025-01-09T18:24:10.9821050Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9821050Z 
2025-01-09T18:24:10.9821160Z tardis/spectrum/tests/test_numba_formal_integral.py:118: 
2025-01-09T18:24:10.9821250Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9821260Z 
2025-01-09T18:24:10.9821420Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152a68e30>
2025-01-09T18:24:10.9821560Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9821790Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9821800Z 
2025-01-09T18:24:10.9821850Z     def __init__(
2025-01-09T18:24:10.9821900Z         self,
2025-01-09T18:24:10.9821950Z         simulation_state,
2025-01-09T18:24:10.9822000Z         plasma,
2025-01-09T18:24:10.9822050Z         transport,
2025-01-09T18:24:10.9822100Z         opacity_state=None,
2025-01-09T18:24:10.9822160Z         macro_atom_state=None,
2025-01-09T18:24:10.9822220Z         points=1000,
2025-01-09T18:24:10.9822270Z     ):
2025-01-09T18:24:10.9822350Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9822410Z         self.transport = transport
2025-01-09T18:24:10.9822470Z         self.points = points
2025-01-09T18:24:10.9822630Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9823010Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9823010Z 
2025-01-09T18:24:10.9823230Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9823370Z ____________ test_populate_z_shells[formal_integral_geometry1-0.99] ____________
2025-01-09T18:24:10.9823380Z 
2025-01-09T18:24:10.9823640Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152a6bd90>
2025-01-09T18:24:10.9823730Z time_explosion = 3.33564095198152e-11, p = 0.99
2025-01-09T18:24:10.9823730Z 
2025-01-09T18:24:10.9823830Z     @pytest.mark.parametrize("p", [1e-5, 0.5, 0.99, 1])
2025-01-09T18:24:10.9823970Z     def test_populate_z_shells(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9824010Z         """
2025-01-09T18:24:10.9824080Z         Test the case where p > r[0]
2025-01-09T18:24:10.9824120Z         """
2025-01-09T18:24:10.9824410Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9824410Z 
2025-01-09T18:24:10.9824520Z tardis/spectrum/tests/test_numba_formal_integral.py:118: 
2025-01-09T18:24:10.9824630Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9824640Z 
2025-01-09T18:24:10.9824790Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152a6b200>
2025-01-09T18:24:10.9824940Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9825040Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9825050Z 
2025-01-09T18:24:10.9825100Z     def __init__(
2025-01-09T18:24:10.9832290Z         self,
2025-01-09T18:24:10.9832510Z         simulation_state,
2025-01-09T18:24:10.9832570Z         plasma,
2025-01-09T18:24:10.9832810Z         transport,
2025-01-09T18:24:10.9832880Z         opacity_state=None,
2025-01-09T18:24:10.9832950Z         macro_atom_state=None,
2025-01-09T18:24:10.9833000Z         points=1000,
2025-01-09T18:24:10.9833040Z     ):
2025-01-09T18:24:10.9833120Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9833190Z         self.transport = transport
2025-01-09T18:24:10.9833410Z         self.points = points
2025-01-09T18:24:10.9833490Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9834110Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9834300Z 
2025-01-09T18:24:10.9834400Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9834550Z _____________ test_populate_z_shells[formal_integral_geometry1-1] ______________
2025-01-09T18:24:10.9834550Z 
2025-01-09T18:24:10.9834810Z formal_integral_geometry = <numba.experimental.jitclass.boxing.NumbaRadial1DGeometry object at 0x152a660b0>
2025-01-09T18:24:10.9834890Z time_explosion = 3.33564095198152e-11, p = 1
2025-01-09T18:24:10.9834890Z 
2025-01-09T18:24:10.9834990Z     @pytest.mark.parametrize("p", [1e-5, 0.5, 0.99, 1])
2025-01-09T18:24:10.9835460Z     def test_populate_z_shells(formal_integral_geometry, time_explosion, p):
2025-01-09T18:24:10.9835980Z         """
2025-01-09T18:24:10.9836070Z         Test the case where p > r[0]
2025-01-09T18:24:10.9836360Z         """
2025-01-09T18:24:10.9838380Z >       integrator = formal_integral.FormalIntegrator(time_explosion, None, None)
2025-01-09T18:24:10.9838420Z 
2025-01-09T18:24:10.9839330Z tardis/spectrum/tests/test_numba_formal_integral.py:118: 
2025-01-09T18:24:10.9839460Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9839470Z 
2025-01-09T18:24:10.9839630Z self = <tardis.spectrum.formal_integral.FormalIntegrator object at 0x152a67920>
2025-01-09T18:24:10.9839770Z simulation_state = 3.33564095198152e-11, plasma = None, transport = None
2025-01-09T18:24:10.9840180Z opacity_state = None, macro_atom_state = None, points = 1000
2025-01-09T18:24:10.9840190Z 
2025-01-09T18:24:10.9840680Z     def __init__(
2025-01-09T18:24:10.9841230Z         self,
2025-01-09T18:24:10.9841330Z         simulation_state,
2025-01-09T18:24:10.9841380Z         plasma,
2025-01-09T18:24:10.9841440Z         transport,
2025-01-09T18:24:10.9841500Z         opacity_state=None,
2025-01-09T18:24:10.9841550Z         macro_atom_state=None,
2025-01-09T18:24:10.9841610Z         points=1000,
2025-01-09T18:24:10.9841650Z     ):
2025-01-09T18:24:10.9841730Z         self.simulation_state = simulation_state
2025-01-09T18:24:10.9842130Z         self.transport = transport
2025-01-09T18:24:10.9842950Z         self.points = points
2025-01-09T18:24:10.9843080Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9843460Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9843470Z 
2025-01-09T18:24:10.9843560Z tardis/spectrum/formal_integral.py:285: TypeError
2025-01-09T18:24:10.9843690Z _______________________ test_run_tardis_from_config_obj ________________________
2025-01-09T18:24:10.9843690Z 
2025-01-09T18:24:10.9845530Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.9845710Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-09T18:24:10.9845910Z 
2025-01-09T18:24:10.9847350Z     def test_run_tardis_from_config_obj(
2025-01-09T18:24:10.9847470Z         atomic_data_fname, example_configuration_dir: Path
2025-01-09T18:24:10.9847660Z     ):
2025-01-09T18:24:10.9847730Z         """
2025-01-09T18:24:10.9847890Z         Tests whether the run_tardis function can take in the Configuration object
2025-01-09T18:24:10.9847940Z         as arguments
2025-01-09T18:24:10.9847990Z         """
2025-01-09T18:24:10.9848060Z         config = Configuration.from_yaml(
2025-01-09T18:24:10.9848180Z             example_configuration_dir / "tardis_configv1_verysimple.yml"
2025-01-09T18:24:10.9848230Z         )
2025-01-09T18:24:10.9848300Z         config["atom_data"] = atomic_data_fname
2025-01-09T18:24:10.9848350Z     
2025-01-09T18:24:10.9848630Z         try:
2025-01-09T18:24:10.9848690Z >           sim = run_tardis(config)
2025-01-09T18:24:10.9848700Z 
2025-01-09T18:24:10.9848770Z tardis/tests/test_tardis_full.py:28: 
2025-01-09T18:24:10.9848860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9848930Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:10.9848990Z     simulation.run_convergence()
2025-01-09T18:24:10.9849410Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:10.9849540Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9849970Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9850570Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9850700Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9850700Z 
2025-01-09T18:24:10.9851190Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x17911b200>
2025-01-09T18:24:10.9851720Z simulation_state = <tardis.model.base.SimulationState object at 0x16465e150>
2025-01-09T18:24:10.9851920Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x179004b00>
2025-01-09T18:24:10.9852630Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1790062a0>
2025-01-09T18:24:10.9853210Z plasma = <tardis.plasma.base.BasePlasma object at 0x1645ff3b0>
2025-01-09T18:24:10.9853370Z no_of_packets = 200000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9853370Z 
2025-01-09T18:24:10.9853430Z     def initialize_transport_state(
2025-01-09T18:24:10.9853630Z         self,
2025-01-09T18:24:10.9853690Z         simulation_state,
2025-01-09T18:24:10.9853740Z         opacity_state,
2025-01-09T18:24:10.9853790Z         macro_atom_state,
2025-01-09T18:24:10.9853840Z         plasma,
2025-01-09T18:24:10.9853900Z         no_of_packets,
2025-01-09T18:24:10.9853960Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9854020Z         iteration=0,
2025-01-09T18:24:10.9854160Z     ):
2025-01-09T18:24:10.9854310Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9854400Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9854450Z         else:
2025-01-09T18:24:10.9854510Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9854560Z     
2025-01-09T18:24:10.9854830Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9855220Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9855990Z         )
2025-01-09T18:24:10.9856040Z     
2025-01-09T18:24:10.9856150Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9856240Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9856650Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9856660Z 
2025-01-09T18:24:10.9856760Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9856770Z 
2025-01-09T18:24:10.9856900Z During handling of the above exception, another exception occurred:
2025-01-09T18:24:10.9856910Z 
2025-01-09T18:24:10.9857200Z atomic_data_fname = PosixPath('/Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5')
2025-01-09T18:24:10.9857360Z example_configuration_dir = PosixPath('tardis/io/configuration/tests/data')
2025-01-09T18:24:10.9857370Z 
2025-01-09T18:24:10.9857430Z     def test_run_tardis_from_config_obj(
2025-01-09T18:24:10.9857880Z         atomic_data_fname, example_configuration_dir: Path
2025-01-09T18:24:10.9858250Z     ):
2025-01-09T18:24:10.9858490Z         """
2025-01-09T18:24:10.9858690Z         Tests whether the run_tardis function can take in the Configuration object
2025-01-09T18:24:10.9858740Z         as arguments
2025-01-09T18:24:10.9858790Z         """
2025-01-09T18:24:10.9858860Z         config = Configuration.from_yaml(
2025-01-09T18:24:10.9859120Z             example_configuration_dir / "tardis_configv1_verysimple.yml"
2025-01-09T18:24:10.9859170Z         )
2025-01-09T18:24:10.9859600Z         config["atom_data"] = atomic_data_fname
2025-01-09T18:24:10.9859980Z     
2025-01-09T18:24:10.9860050Z         try:
2025-01-09T18:24:10.9860100Z             sim = run_tardis(config)
2025-01-09T18:24:10.9860170Z         except Exception as e:
2025-01-09T18:24:10.9860330Z >           pytest.fail(str(e.args[0]))
2025-01-09T18:24:10.9860720Z E           Failed: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9860730Z 
2025-01-09T18:24:10.9860810Z tardis/tests/test_tardis_full.py:30: Failed
2025-01-09T18:24:10.9861230Z ----------------------------- Captured stdout call -----------------------------
2025-01-09T18:24:10.9861560Z [[1mtardis.io.model.parse_atom_data[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9861610Z 	
2025-01-09T18:24:10.9862110Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5 ([1mparse_atom_data.py[0m:40)
2025-01-09T18:24:10.9862250Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9863220Z 	Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace  ([1mbase.py[0m:258)
2025-01-09T18:24:10.9864680Z [[1mtardis.io.atom_data.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9865140Z 	Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules ([1mbase.py[0m:262)
2025-01-09T18:24:10.9865480Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.9865820Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.9865960Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9867050Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:10.9867220Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9867280Z 	
2025-01-09T18:24:10.9867410Z 	Starting iteration 1 of 5 ([1mbase.py[0m:444)
2025-01-09T18:24:10.9867540Z ------------------------------ Captured log call -------------------------------
2025-01-09T18:24:10.9867660Z INFO     tardis.io.model.parse_atom_data:parse_atom_data.py:40 
2025-01-09T18:24:10.9867930Z 	Reading Atomic Data from /Users/runner/work/tardis/tardis/tardis-regression-data/atom_data/kurucz_cd23_chianti_H_He.h5
2025-01-09T18:24:10.9868240Z INFO     tardis.io.atom_data.base:base.py:258 Reading Atom Data with: UUID = 6f7b09e887a311e7a06b246e96350010 MD5  = 864f1753714343c41f99cb065710cace 
2025-01-09T18:24:10.9868790Z INFO     tardis.io.atom_data.base:base.py:262 Non provided Atomic Data: synpp_refs, photoionization_data, yg_data, two_photon_data, linelist_atoms, linelist_molecules
2025-01-09T18:24:10.9869190Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.9869640Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:10.9870520Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:10.9870620Z 	Starting iteration 1 of 5
2025-01-09T18:24:10.9870750Z __________________________ test_montecarlo_main_loop ___________________________
2025-01-09T18:24:10.9870750Z 
2025-01-09T18:24:10.9871290Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-09T18:24:10.9871510Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x13bd6f2c0>
2025-01-09T18:24:10.9871910Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-09T18:24:10.9871920Z 
2025-01-09T18:24:10.9871980Z     def test_montecarlo_main_loop(
2025-01-09T18:24:10.9872040Z         montecarlo_main_loop_config,
2025-01-09T18:24:10.9872370Z         regression_data,
2025-01-09T18:24:10.9872540Z         atomic_dataset,
2025-01-09T18:24:10.9872690Z     ):
2025-01-09T18:24:10.9872910Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9873330Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-09T18:24:10.9873450Z             montecarlo_main_loop_config,
2025-01-09T18:24:10.9873580Z             atom_data=atomic_dataset,
2025-01-09T18:24:10.9873670Z             virtual_packet_logging=False,
2025-01-09T18:24:10.9873740Z             legacy_mode_enabled=True,
2025-01-09T18:24:10.9873780Z         )
2025-01-09T18:24:10.9873890Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-09T18:24:10.9873980Z >       montecarlo_main_loop_simulation.run_final()
2025-01-09T18:24:10.9873980Z 
2025-01-09T18:24:10.9874470Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:27: 
2025-01-09T18:24:10.9874980Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9875100Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9875220Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9875290Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9875410Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9875600Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9875600Z 
2025-01-09T18:24:10.9875810Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163ac60f0>
2025-01-09T18:24:10.9875970Z simulation_state = <tardis.model.base.SimulationState object at 0x13bd6e0f0>
2025-01-09T18:24:10.9876140Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163b3b6b0>
2025-01-09T18:24:10.9876360Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x163b38590>
2025-01-09T18:24:10.9876480Z plasma = <tardis.plasma.base.BasePlasma object at 0x157ac3650>
2025-01-09T18:24:10.9877010Z no_of_packets = 100000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:10.9877020Z 
2025-01-09T18:24:10.9877110Z     def initialize_transport_state(
2025-01-09T18:24:10.9877160Z         self,
2025-01-09T18:24:10.9877210Z         simulation_state,
2025-01-09T18:24:10.9877270Z         opacity_state,
2025-01-09T18:24:10.9877320Z         macro_atom_state,
2025-01-09T18:24:10.9877370Z         plasma,
2025-01-09T18:24:10.9877420Z         no_of_packets,
2025-01-09T18:24:10.9877480Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9877530Z         iteration=0,
2025-01-09T18:24:10.9877890Z     ):
2025-01-09T18:24:10.9878010Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9878090Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9878140Z         else:
2025-01-09T18:24:10.9878200Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9878240Z     
2025-01-09T18:24:10.9878350Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9878420Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9878470Z         )
2025-01-09T18:24:10.9878520Z     
2025-01-09T18:24:10.9878620Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9878700Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9879090Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9879090Z 
2025-01-09T18:24:10.9880230Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9880480Z ----------------------------- Captured stdout call -----------------------------
2025-01-09T18:24:10.9880710Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.9881050Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.9881180Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9881360Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:10.9881490Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9881540Z 	
2025-01-09T18:24:10.9881610Z 	Simulation finished in 0 iterations 
2025-01-09T18:24:10.9881660Z 	Simulation took 0.00 s
2025-01-09T18:24:10.9881740Z  ([1mbase.py[0m:542)
2025-01-09T18:24:10.9881860Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9881910Z 	
2025-01-09T18:24:10.9882020Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-09T18:24:10.9882150Z ------------------------------ Captured log call -------------------------------
2025-01-09T18:24:10.9882540Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.9882720Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:10.9883770Z INFO     tardis.simulation.base:base.py:542 
2025-01-09T18:24:10.9883860Z 	Simulation finished in 0 iterations 
2025-01-09T18:24:10.9883920Z 	Simulation took 0.00 s
2025-01-09T18:24:10.9884200Z 
2025-01-09T18:24:10.9884300Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:10.9884360Z 	Starting iteration 1 of 1
2025-01-09T18:24:10.9884500Z ____________________ test_montecarlo_main_loop_vpacket_log _____________________
2025-01-09T18:24:10.9884500Z 
2025-01-09T18:24:10.9885040Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-09T18:24:10.9885640Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x163bba9c0>
2025-01-09T18:24:10.9885940Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-09T18:24:10.9885950Z 
2025-01-09T18:24:10.9886030Z     def test_montecarlo_main_loop_vpacket_log(
2025-01-09T18:24:10.9886090Z         montecarlo_main_loop_config,
2025-01-09T18:24:10.9886150Z         regression_data,
2025-01-09T18:24:10.9886200Z         atomic_dataset,
2025-01-09T18:24:10.9886250Z     ):
2025-01-09T18:24:10.9886330Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-09T18:24:10.9886470Z         montecarlo_main_loop_config.montecarlo.no_of_virtual_packets = 5
2025-01-09T18:24:10.9886510Z     
2025-01-09T18:24:10.9886720Z         montecarlo_main_loop_simulation = Simulation.from_config(
2025-01-09T18:24:10.9886780Z             montecarlo_main_loop_config,
2025-01-09T18:24:10.9886840Z             atom_data=atomic_dataset,
2025-01-09T18:24:10.9886960Z             virtual_packet_logging=True,
2025-01-09T18:24:10.9887030Z             legacy_mode_enabled=True,
2025-01-09T18:24:10.9887070Z         )
2025-01-09T18:24:10.9887170Z         montecarlo_main_loop_simulation.run_convergence()
2025-01-09T18:24:10.9887460Z >       montecarlo_main_loop_simulation.run_final()
2025-01-09T18:24:10.9887510Z 
2025-01-09T18:24:10.9888110Z tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py:80: 
2025-01-09T18:24:10.9888230Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9888310Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:10.9888430Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:10.9888500Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:10.9889950Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:10.9890060Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9890060Z 
2025-01-09T18:24:10.9890270Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x1579b1490>
2025-01-09T18:24:10.9890530Z simulation_state = <tardis.model.base.SimulationState object at 0x163b43410>
2025-01-09T18:24:10.9890710Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x15799f290>
2025-01-09T18:24:10.9890920Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x15799e390>
2025-01-09T18:24:10.9891050Z plasma = <tardis.plasma.base.BasePlasma object at 0x16373f5f0>
2025-01-09T18:24:10.9891450Z no_of_packets = 100000, no_of_virtual_packets = 5, iteration = 0
2025-01-09T18:24:10.9891450Z 
2025-01-09T18:24:10.9891520Z     def initialize_transport_state(
2025-01-09T18:24:10.9892040Z         self,
2025-01-09T18:24:10.9892130Z         simulation_state,
2025-01-09T18:24:10.9892190Z         opacity_state,
2025-01-09T18:24:10.9892240Z         macro_atom_state,
2025-01-09T18:24:10.9892290Z         plasma,
2025-01-09T18:24:10.9892340Z         no_of_packets,
2025-01-09T18:24:10.9892400Z         no_of_virtual_packets=0,
2025-01-09T18:24:10.9892450Z         iteration=0,
2025-01-09T18:24:10.9892500Z     ):
2025-01-09T18:24:10.9892590Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:10.9892660Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:10.9892770Z         else:
2025-01-09T18:24:10.9892940Z             gamma_shape = (0, 0)
2025-01-09T18:24:10.9892990Z     
2025-01-09T18:24:10.9893090Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:10.9893170Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:10.9893210Z         )
2025-01-09T18:24:10.9893260Z     
2025-01-09T18:24:10.9893360Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:10.9893440Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:10.9893820Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:10.9893830Z 
2025-01-09T18:24:10.9893920Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:10.9894050Z ----------------------------- Captured stdout call -----------------------------
2025-01-09T18:24:10.9894270Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:10.9894610Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:10.9894750Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9894910Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:10.9895030Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9895080Z 	
2025-01-09T18:24:10.9895150Z 	Simulation finished in 0 iterations 
2025-01-09T18:24:10.9895200Z 	Simulation took 0.00 s
2025-01-09T18:24:10.9895280Z  ([1mbase.py[0m:542)
2025-01-09T18:24:10.9895400Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:10.9895440Z 	
2025-01-09T18:24:10.9895550Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-09T18:24:10.9895680Z ------------------------------ Captured log call -------------------------------
2025-01-09T18:24:10.9896080Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:10.9896260Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:10.9896340Z INFO     tardis.simulation.base:base.py:542 
2025-01-09T18:24:10.9896480Z 	Simulation finished in 0 iterations 
2025-01-09T18:24:10.9896630Z 	Simulation took 0.00 s
2025-01-09T18:24:10.9896630Z 
2025-01-09T18:24:10.9896710Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:10.9896770Z 	Starting iteration 1 of 1
2025-01-09T18:24:10.9897910Z _ test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check] _
2025-01-09T18:24:10.9897920Z 
2025-01-09T18:24:10.9898080Z expected = 'interaction_type_in_use', obtained = 'interaction_type_to_check'
2025-01-09T18:24:10.9898410Z request = <FixtureRequest for <Function test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check]>>
2025-01-09T18:24:10.9898420Z 
2025-01-09T18:24:10.9898490Z     @pytest.mark.parametrize(
2025-01-09T18:24:10.9898550Z         "expected,obtained",
2025-01-09T18:24:10.9898600Z         [
2025-01-09T18:24:10.9898640Z             (
2025-01-09T18:24:10.9898710Z                 "interaction_type_in_use",
2025-01-09T18:24:10.9899180Z                 "interaction_type_to_check",
2025-01-09T18:24:10.9899270Z             ),
2025-01-09T18:24:10.9899320Z             (
2025-01-09T18:24:10.9899370Z                 "shell_id_in_use",
2025-01-09T18:24:10.9899440Z                 "shell_id_to_check",
2025-01-09T18:24:10.9899480Z             ),
2025-01-09T18:24:10.9899530Z             (
2025-01-09T18:24:10.9899660Z                 "r_in_use",
2025-01-09T18:24:10.9899740Z                 "r_to_check",
2025-01-09T18:24:10.9899780Z             ),
2025-01-09T18:24:10.9899870Z             ("nu_packet_collection", "nu_to_check"),
2025-01-09T18:24:10.9899910Z         ],
2025-01-09T18:24:10.9899960Z     )
2025-01-09T18:24:10.9900090Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-09T18:24:10.9900300Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:10.9900300Z 
2025-01-09T18:24:10.9901090Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-09T18:24:10.9901500Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:10.9902590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9902930Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9903950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9904040Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9904260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9904360Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9904600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9904680Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9904880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9904930Z     raise exc
2025-01-09T18:24:10.9905420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9905520Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9905720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9905920Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9906130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9906290Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9906680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9907350Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9908530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9909480Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9909800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9909850Z     yield
2025-01-09T18:24:10.9910080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9910160Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9910370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9910420Z     yield
2025-01-09T18:24:10.9911540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9911750Z     return (yield)
2025-01-09T18:24:10.9912910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9913220Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9914510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9914610Z     yield
2025-01-09T18:24:10.9914850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9914920Z     item.session._setupstate.setup(item)
2025-01-09T18:24:10.9915110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:10.9915160Z     raise exc
2025-01-09T18:24:10.9915460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:10.9915510Z     col.setup()
2025-01-09T18:24:10.9915690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:10.9915760Z     self._request._fillfixtures()
2025-01-09T18:24:10.9915970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:10.9916170Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:10.9916410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9916510Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9916750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9916820Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9917020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9917120Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9917460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9917700Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9918520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9918680Z     raise exc
2025-01-09T18:24:10.9918880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9918950Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9919140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9919380Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9920070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9920270Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9920810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9921340Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9924460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9924580Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9924890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9924930Z     yield
2025-01-09T18:24:10.9925290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9926060Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9926300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9926350Z     yield
2025-01-09T18:24:10.9926580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9926640Z     return (yield)
2025-01-09T18:24:10.9926890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9926970Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9927250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9927300Z     yield
2025-01-09T18:24:10.9927610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9927830Z     item.session._setupstate.setup(item)
2025-01-09T18:24:10.9929800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:10.9929890Z     raise exc
2025-01-09T18:24:10.9930080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:10.9930130Z     col.setup()
2025-01-09T18:24:10.9930320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:10.9930500Z     self._request._fillfixtures()
2025-01-09T18:24:10.9930720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:10.9930820Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:10.9931600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9932120Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9932370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9932460Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9932650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9932840Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9933750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9933860Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9934060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9934110Z     raise exc
2025-01-09T18:24:10.9934300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9934560Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9936000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9936170Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9936380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9936540Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9937750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9937890Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9938160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9938240Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9938550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9938590Z     yield
2025-01-09T18:24:10.9938820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9938900Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9939110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9939160Z     yield
2025-01-09T18:24:10.9939380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9939430Z     return (yield)
2025-01-09T18:24:10.9939680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9939760Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9940030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9940080Z     yield
2025-01-09T18:24:10.9940300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9940520Z     item.session._setupstate.setup(item)
2025-01-09T18:24:10.9940700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:10.9940750Z     raise exc
2025-01-09T18:24:10.9940930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:10.9940990Z     col.setup()
2025-01-09T18:24:10.9941170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:10.9941240Z     self._request._fillfixtures()
2025-01-09T18:24:10.9941450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:10.9941550Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:10.9941770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9941890Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9942130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9942200Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9942400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9942520Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9942760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9942830Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9943020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9943080Z     raise exc
2025-01-09T18:24:10.9943270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9943340Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9943520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9943660Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9943840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9944100Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9944290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9944430Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9944690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9944770Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9945080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9945120Z     yield
2025-01-09T18:24:10.9945350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9945430Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9945640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9945680Z     yield
2025-01-09T18:24:10.9945910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9945960Z     return (yield)
2025-01-09T18:24:10.9946210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9946290Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9946560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9946660Z     yield
2025-01-09T18:24:10.9946880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9946960Z     item.session._setupstate.setup(item)
2025-01-09T18:24:10.9947140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:10.9947200Z     raise exc
2025-01-09T18:24:10.9947380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:10.9947430Z     col.setup()
2025-01-09T18:24:10.9947620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:10.9947680Z     self._request._fillfixtures()
2025-01-09T18:24:10.9947890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:10.9948000Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:10.9948230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9948320Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9948560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9948630Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9948830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9948930Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9949160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9953530Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9953760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9953820Z     raise exc
2025-01-09T18:24:10.9954010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9954080Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9954270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9954540Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9954740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9954890Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9955100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9955230Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9955500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9955590Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9955890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9955940Z     yield
2025-01-09T18:24:10.9956160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9956250Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9956450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9956500Z     yield
2025-01-09T18:24:10.9956720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9956780Z     return (yield)
2025-01-09T18:24:10.9957030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9957190Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9957460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9957510Z     yield
2025-01-09T18:24:10.9957730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9957810Z     item.session._setupstate.setup(item)
2025-01-09T18:24:10.9957990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:10.9958040Z     raise exc
2025-01-09T18:24:10.9958230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:10.9958270Z     col.setup()
2025-01-09T18:24:10.9958460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:10.9958520Z     self._request._fillfixtures()
2025-01-09T18:24:10.9958730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:10.9958840Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:10.9959050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9959150Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9959390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9959470Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9959660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9959760Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9959990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9960070Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9960260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9960310Z     raise exc
2025-01-09T18:24:10.9960500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9960620Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9960810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9960930Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9961120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9961280Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9961470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9961620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9961880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9961970Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9962260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9962320Z     yield
2025-01-09T18:24:10.9962540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9962620Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9962830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9962870Z     yield
2025-01-09T18:24:10.9963100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9963480Z     return (yield)
2025-01-09T18:24:10.9963730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9963810Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9964090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9964130Z     yield
2025-01-09T18:24:10.9964360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9964430Z     item.session._setupstate.setup(item)
2025-01-09T18:24:10.9964610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:10.9964660Z     raise exc
2025-01-09T18:24:10.9964850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:10.9964890Z     col.setup()
2025-01-09T18:24:10.9965080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:10.9965140Z     self._request._fillfixtures()
2025-01-09T18:24:10.9965350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:10.9965460Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:10.9965680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9965770Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9966000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9966080Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9966270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9966370Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9966600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9966680Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9966870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9967200Z     raise exc
2025-01-09T18:24:10.9967390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9967460Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9967640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9967780Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9967970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9968120Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9968320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9968460Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9968730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9968810Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9969110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9969170Z     yield
2025-01-09T18:24:10.9969410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9969490Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9969690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9969830Z     yield
2025-01-09T18:24:10.9970060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9970110Z     return (yield)
2025-01-09T18:24:10.9970350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9970550Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9970820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9970870Z     yield
2025-01-09T18:24:10.9971090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9971170Z     item.session._setupstate.setup(item)
2025-01-09T18:24:10.9971360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:10.9971400Z     raise exc
2025-01-09T18:24:10.9971590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:10.9971640Z     col.setup()
2025-01-09T18:24:10.9971830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:10.9971890Z     self._request._fillfixtures()
2025-01-09T18:24:10.9972120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:10.9972220Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:10.9972440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9972550Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9972790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9972860Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9973070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9973180Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9973410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9973490Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9973780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9973830Z     raise exc
2025-01-09T18:24:10.9974020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9974090Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9974280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9974540Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9974770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9974940Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9975140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9975280Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9975550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9975640Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9975940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9975980Z     yield
2025-01-09T18:24:10.9976210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9976480Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9976690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9976730Z     yield
2025-01-09T18:24:10.9976960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9977010Z     return (yield)
2025-01-09T18:24:10.9977490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9977570Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9977850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9977900Z     yield
2025-01-09T18:24:10.9978120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9978190Z     item.session._setupstate.setup(item)
2025-01-09T18:24:10.9978390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:10.9978430Z     raise exc
2025-01-09T18:24:10.9978620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:10.9978800Z     col.setup()
2025-01-09T18:24:10.9979000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:10.9979070Z     self._request._fillfixtures()
2025-01-09T18:24:10.9979280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:10.9979380Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:10.9979600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9979830Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9980070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9980150Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9980350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9980450Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9980750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9980830Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9981260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9981350Z     raise exc
2025-01-09T18:24:10.9981570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9981640Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9981840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9982080Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9982340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9982500Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9982720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9982860Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9983140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9983230Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9983710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9983760Z     yield
2025-01-09T18:24:10.9984120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9984200Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9984410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9984460Z     yield
2025-01-09T18:24:10.9984690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9984750Z     return (yield)
2025-01-09T18:24:10.9985000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9985080Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9985360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9985410Z     yield
2025-01-09T18:24:10.9985650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9985720Z     item.session._setupstate.setup(item)
2025-01-09T18:24:10.9985910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:10.9985960Z     raise exc
2025-01-09T18:24:10.9986150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:10.9986200Z     col.setup()
2025-01-09T18:24:10.9986390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:10.9986450Z     self._request._fillfixtures()
2025-01-09T18:24:10.9986810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:10.9986920Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:10.9987140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9987230Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9987610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9987690Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9987890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9988050Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9988420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9988500Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9988720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9988770Z     raise exc
2025-01-09T18:24:10.9988960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9989030Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9989230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9989360Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9989550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9989710Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9989910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9990040Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9990310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9990390Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9991130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9991180Z     yield
2025-01-09T18:24:10.9991410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9991490Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9991690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9991760Z     yield
2025-01-09T18:24:10.9991990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9992040Z     return (yield)
2025-01-09T18:24:10.9992290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9992370Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9992640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9992690Z     yield
2025-01-09T18:24:10.9992910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9992980Z     item.session._setupstate.setup(item)
2025-01-09T18:24:10.9993180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:10.9993220Z     raise exc
2025-01-09T18:24:10.9993410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:10.9993460Z     col.setup()
2025-01-09T18:24:10.9993650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:10.9993710Z     self._request._fillfixtures()
2025-01-09T18:24:10.9993920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:10.9994020Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:10.9994240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:10.9994340Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:10.9994570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9995090Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9995290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:10.9995390Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:10.9995620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:10.9995690Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:10.9995890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:10.9995940Z     raise exc
2025-01-09T18:24:10.9996140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:10.9996200Z     result: Optional[TResult] = func()
2025-01-09T18:24:10.9996390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:10.9996520Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:10.9996710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:10.9996870Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:10.9997070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:10.9997200Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:10.9997460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:10.9997630Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:10.9997920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:10.9997970Z     yield
2025-01-09T18:24:10.9998200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:10.9998280Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:10.9998490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:10.9998530Z     yield
2025-01-09T18:24:10.9998760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:10.9998810Z     return (yield)
2025-01-09T18:24:10.9999050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:10.9999140Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:10.9999410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:10.9999460Z     yield
2025-01-09T18:24:10.9999680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:10.9999760Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0000150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0000200Z     raise exc
2025-01-09T18:24:11.0000400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0000460Z     col.setup()
2025-01-09T18:24:11.0000640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0000710Z     self._request._fillfixtures()
2025-01-09T18:24:11.0000920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0001030Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0001240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0001440Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0001670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0001750Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0001940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0002040Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0002270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0002350Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0002550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0002600Z     raise exc
2025-01-09T18:24:11.0002940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0003000Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0003200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0003320Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0003520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0003670Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0004010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0004230Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0004500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0004600Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0005030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0005090Z     yield
2025-01-09T18:24:11.0005310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0005390Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0005590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0005640Z     yield
2025-01-09T18:24:11.0005860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0005920Z     return (yield)
2025-01-09T18:24:11.0006170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0006250Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0006530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0006580Z     yield
2025-01-09T18:24:11.0006810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0006880Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0007060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0007110Z     raise exc
2025-01-09T18:24:11.0007300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0007350Z     col.setup()
2025-01-09T18:24:11.0007680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0007740Z     self._request._fillfixtures()
2025-01-09T18:24:11.0007950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0008060Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0008340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0008440Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0008660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0008740Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0008930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0009040Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0009270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0009350Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0009550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0009590Z     raise exc
2025-01-09T18:24:11.0009790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0009850Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0010040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0010170Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0010500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0010660Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0010920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0011050Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0011450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0011550Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0011850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0011900Z     yield
2025-01-09T18:24:11.0012120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0012200Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0012400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0012460Z     yield
2025-01-09T18:24:11.0012820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0012870Z     return (yield)
2025-01-09T18:24:11.0013120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0013200Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0013480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0013530Z     yield
2025-01-09T18:24:11.0013750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0013820Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0014010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0014050Z     raise exc
2025-01-09T18:24:11.0014240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0014290Z     col.setup()
2025-01-09T18:24:11.0014470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0014540Z     self._request._fillfixtures()
2025-01-09T18:24:11.0014800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0014910Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0015250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0015350Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0015590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0015660Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0015900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0016020Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0016250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0016330Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0016530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0016570Z     raise exc
2025-01-09T18:24:11.0016770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0016830Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0017020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0017150Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0017770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0017920Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0018190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0018330Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0018600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0018690Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0018980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0019030Z     yield
2025-01-09T18:24:11.0019250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0019330Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0019530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0019580Z     yield
2025-01-09T18:24:11.0019810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0019860Z     return (yield)
2025-01-09T18:24:11.0020110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0020180Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0020460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0020510Z     yield
2025-01-09T18:24:11.0020730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0020800Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0020990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0021030Z     raise exc
2025-01-09T18:24:11.0021220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0021270Z     col.setup()
2025-01-09T18:24:11.0021770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0021840Z     self._request._fillfixtures()
2025-01-09T18:24:11.0022040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0022150Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0022360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0022460Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0022690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0022770Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0022960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0023060Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0023300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0023380Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0023570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0023610Z     raise exc
2025-01-09T18:24:11.0023810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0023870Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0024070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0024260Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0024450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0024610Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0024800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0024940Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0025200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0025290Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0025590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0025640Z     yield
2025-01-09T18:24:11.0025870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0025950Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0026160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0026210Z     yield
2025-01-09T18:24:11.0026440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0026490Z     return (yield)
2025-01-09T18:24:11.0026740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0026820Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0027110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0027150Z     yield
2025-01-09T18:24:11.0027390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0027460Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0027650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0027690Z     raise exc
2025-01-09T18:24:11.0027930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0027980Z     col.setup()
2025-01-09T18:24:11.0028160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0028230Z     self._request._fillfixtures()
2025-01-09T18:24:11.0028440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0028550Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0028760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0029540Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0029840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0029930Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0030150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0030240Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0030490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0030560Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0030760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0030810Z     raise exc
2025-01-09T18:24:11.0031000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0031300Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0031500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0031630Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0031820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0032150Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0032720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0033270Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0034040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0034300Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0035960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0036150Z     yield
2025-01-09T18:24:11.0037020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0037270Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0037830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0037980Z     yield
2025-01-09T18:24:11.0038630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0038800Z     return (yield)
2025-01-09T18:24:11.0039480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0039700Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0040730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0040900Z     yield
2025-01-09T18:24:11.0041790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0042000Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0043290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0043490Z     raise exc
2025-01-09T18:24:11.0044000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0044160Z     col.setup()
2025-01-09T18:24:11.0044730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0048960Z     self._request._fillfixtures()
2025-01-09T18:24:11.0049200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0049320Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0049540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0049640Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0049870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0049960Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0050170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0050210Z     raise exc
2025-01-09T18:24:11.0050400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0050470Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0050660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0050950Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0051130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0051290Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0051490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0051630Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0051890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0051980Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0052280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0052320Z     yield
2025-01-09T18:24:11.0052550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0052630Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0052840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0052880Z     yield
2025-01-09T18:24:11.0053110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0053170Z     return (yield)
2025-01-09T18:24:11.0053420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0053500Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0053820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0053870Z     yield
2025-01-09T18:24:11.0054090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0054160Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0054340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0054390Z     raise exc
2025-01-09T18:24:11.0054570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0054700Z     col.setup()
2025-01-09T18:24:11.0054890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0054950Z     self._request._fillfixtures()
2025-01-09T18:24:11.0055160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0055270Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0055480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0055570Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0055810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0055880Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0056080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0056130Z     raise exc
2025-01-09T18:24:11.0056320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0056380Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0056570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0056700Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0056890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0057050Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0057450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0057590Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0057850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0057940Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0058240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0058280Z     yield
2025-01-09T18:24:11.0058510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0058590Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0058790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0058840Z     yield
2025-01-09T18:24:11.0059070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0059110Z     return (yield)
2025-01-09T18:24:11.0059360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0059440Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0059720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0059760Z     yield
2025-01-09T18:24:11.0059990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0060060Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0060240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0060290Z     raise exc
2025-01-09T18:24:11.0060480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0060530Z     col.setup()
2025-01-09T18:24:11.0060710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0060770Z     self._request._fillfixtures()
2025-01-09T18:24:11.0061260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0061360Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0061580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0061670Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0061910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0061980Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0062180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0062230Z     raise exc
2025-01-09T18:24:11.0062420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0062490Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0062670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0062810Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0063000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0063150Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0063350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0063480Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0063810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0063890Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0064190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0064230Z     yield
2025-01-09T18:24:11.0064470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0064540Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0064750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0064790Z     yield
2025-01-09T18:24:11.0065010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0065070Z     return (yield)
2025-01-09T18:24:11.0065320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0065400Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0065670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0065720Z     yield
2025-01-09T18:24:11.0065930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0066010Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0066200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0066240Z     raise exc
2025-01-09T18:24:11.0066430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0066470Z     col.setup()
2025-01-09T18:24:11.0066660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0066730Z     self._request._fillfixtures()
2025-01-09T18:24:11.0066940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0067040Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0067300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0067390Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0067620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0067700Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0067890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0067940Z     raise exc
2025-01-09T18:24:11.0068130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0068200Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0068390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0068520Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0068700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0068860Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0069060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0069190Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0069450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0069540Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0069880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0069930Z     yield
2025-01-09T18:24:11.0070150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0070230Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0070440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0070480Z     yield
2025-01-09T18:24:11.0070710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0070760Z     return (yield)
2025-01-09T18:24:11.0071000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0071080Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0071360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0071410Z     yield
2025-01-09T18:24:11.0071620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0071700Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0071880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0071930Z     raise exc
2025-01-09T18:24:11.0072110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0072160Z     col.setup()
2025-01-09T18:24:11.0072350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0072410Z     self._request._fillfixtures()
2025-01-09T18:24:11.0072630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0072740Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0073070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0073170Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0073420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0073580Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0073820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0073880Z     raise exc
2025-01-09T18:24:11.0074070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0074140Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0074320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0074460Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0074650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0074800Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0075000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0075140Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0075400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0075480Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0075780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0075830Z     yield
2025-01-09T18:24:11.0076050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0076200Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0076410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0076450Z     yield
2025-01-09T18:24:11.0076680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0076730Z     return (yield)
2025-01-09T18:24:11.0077000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0077080Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0077350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0077400Z     yield
2025-01-09T18:24:11.0077620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0077700Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0077890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0077950Z     raise exc
2025-01-09T18:24:11.0078140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0078200Z     col.setup()
2025-01-09T18:24:11.0078390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0078460Z     self._request._fillfixtures()
2025-01-09T18:24:11.0078660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0078770Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0079000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0079090Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0079330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0079400Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0079590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0079920Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0080160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0080240Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0080450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0080500Z     raise exc
2025-01-09T18:24:11.0080690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0080760Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0080950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0081080Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0081270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0081440Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0081640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0081770Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0082040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0082120Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0082420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0082720Z     yield
2025-01-09T18:24:11.0082950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0083030Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0083240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0083280Z     yield
2025-01-09T18:24:11.0083510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0083560Z     return (yield)
2025-01-09T18:24:11.0083820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0083910Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0084180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0084230Z     yield
2025-01-09T18:24:11.0084450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0084530Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0084710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0084760Z     raise exc
2025-01-09T18:24:11.0084940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0084990Z     col.setup()
2025-01-09T18:24:11.0085180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0085240Z     self._request._fillfixtures()
2025-01-09T18:24:11.0085470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0085580Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0085800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0085890Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0086130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0086590Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0086800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0086890Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0087130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0087200Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0087390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0087440Z     raise exc
2025-01-09T18:24:11.0087970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0088070Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0088280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0088440Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0088630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0088790Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0088990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0089130Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0089410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0089720Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0090020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0090070Z     yield
2025-01-09T18:24:11.0090300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0090390Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0090590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0090640Z     yield
2025-01-09T18:24:11.0090870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0090920Z     return (yield)
2025-01-09T18:24:11.0091170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0091260Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0091530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0091580Z     yield
2025-01-09T18:24:11.0091800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0091880Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0092060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0092110Z     raise exc
2025-01-09T18:24:11.0092290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0092340Z     col.setup()
2025-01-09T18:24:11.0092530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0092590Z     self._request._fillfixtures()
2025-01-09T18:24:11.0092810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0092920Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0093140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0093230Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0093530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0093600Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0093800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0093900Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0094130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0094210Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0094420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0094480Z     raise exc
2025-01-09T18:24:11.0094670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0094740Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0094930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0095060Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0095240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0095400Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0095600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0095730Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0096140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0096230Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0096540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0096600Z     yield
2025-01-09T18:24:11.0096830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0096900Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0097110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0097150Z     yield
2025-01-09T18:24:11.0097380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0097440Z     return (yield)
2025-01-09T18:24:11.0097690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0097780Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0098060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0098120Z     yield
2025-01-09T18:24:11.0098340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0098410Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0098590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0098640Z     raise exc
2025-01-09T18:24:11.0098820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0098870Z     col.setup()
2025-01-09T18:24:11.0099060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0099120Z     self._request._fillfixtures()
2025-01-09T18:24:11.0099350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0099460Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0099750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0099840Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0100080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0100150Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0100360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0100460Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0100690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0100780Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0100970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0101020Z     raise exc
2025-01-09T18:24:11.0101210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0101280Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0101460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0101600Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0101780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0101940Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0102220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0102360Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0102620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0102710Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0103020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0103070Z     yield
2025-01-09T18:24:11.0103290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0103370Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0103580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0103630Z     yield
2025-01-09T18:24:11.0103850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0103910Z     return (yield)
2025-01-09T18:24:11.0104160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0104240Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0104510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0104560Z     yield
2025-01-09T18:24:11.0104770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0104850Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0105030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0105080Z     raise exc
2025-01-09T18:24:11.0105260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0105310Z     col.setup()
2025-01-09T18:24:11.0105500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0105560Z     self._request._fillfixtures()
2025-01-09T18:24:11.0105770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0105950Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0106170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0106260Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0106490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0106560Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0106760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0106860Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0107090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0107190Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0107390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0107440Z     raise exc
2025-01-09T18:24:11.0107630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0107700Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0107880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0108010Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0108200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0108610Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0108890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0109030Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0109350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0109440Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0109740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0109780Z     yield
2025-01-09T18:24:11.0110030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0110110Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0110320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0110360Z     yield
2025-01-09T18:24:11.0110590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0110640Z     return (yield)
2025-01-09T18:24:11.0110890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0110980Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0111260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0111310Z     yield
2025-01-09T18:24:11.0111530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0111600Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0111790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0111840Z     raise exc
2025-01-09T18:24:11.0112030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0112070Z     col.setup()
2025-01-09T18:24:11.0112280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0112580Z     self._request._fillfixtures()
2025-01-09T18:24:11.0112790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0112890Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0113110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0113220Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0113450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0113530Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0113730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0113830Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0114060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0114140Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0114330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0114380Z     raise exc
2025-01-09T18:24:11.0114570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0114630Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0114820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0115030Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0115220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0115370Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0115580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0115710Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0115980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0116060Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0116360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0116410Z     yield
2025-01-09T18:24:11.0116640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0116720Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0116920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0116970Z     yield
2025-01-09T18:24:11.0117200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0117250Z     return (yield)
2025-01-09T18:24:11.0117490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0117580Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0117850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0117900Z     yield
2025-01-09T18:24:11.0118120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0118200Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0118390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0118430Z     raise exc
2025-01-09T18:24:11.0118620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0118710Z     col.setup()
2025-01-09T18:24:11.0118900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0118960Z     self._request._fillfixtures()
2025-01-09T18:24:11.0119170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0119290Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0119520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0119610Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0119930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0120010Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0120200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0120300Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0120530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0120610Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0120810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0120870Z     raise exc
2025-01-09T18:24:11.0121060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0121210Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0121400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0121530Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0121720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0121870Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0122070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0122220Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0122500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0122590Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0122900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0122950Z     yield
2025-01-09T18:24:11.0123170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0123240Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0123450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0123500Z     yield
2025-01-09T18:24:11.0123720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0123780Z     return (yield)
2025-01-09T18:24:11.0124020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0124100Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0124380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0124420Z     yield
2025-01-09T18:24:11.0124650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0124720Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0124900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0125020Z     raise exc
2025-01-09T18:24:11.0125210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0125260Z     col.setup()
2025-01-09T18:24:11.0125450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0125510Z     self._request._fillfixtures()
2025-01-09T18:24:11.0125720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0125830Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0126050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0126140Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0126370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0126450Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0126650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0126750Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0126980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0131190Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0131450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0131680Z     raise exc
2025-01-09T18:24:11.0131880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0131940Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0132130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0132260Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0132450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0132610Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0132800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0132940Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0133200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0133300Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0133600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0133650Z     yield
2025-01-09T18:24:11.0133870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0133950Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0134160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0134210Z     yield
2025-01-09T18:24:11.0134430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0134480Z     return (yield)
2025-01-09T18:24:11.0134750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0134840Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0135110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0135160Z     yield
2025-01-09T18:24:11.0135380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0135530Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0135720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0135760Z     raise exc
2025-01-09T18:24:11.0135950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0136000Z     col.setup()
2025-01-09T18:24:11.0136180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0136250Z     self._request._fillfixtures()
2025-01-09T18:24:11.0136460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0136570Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0136790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0136880Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0137110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0137190Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0137390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0137490Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0137720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0137790Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0138230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0138280Z     raise exc
2025-01-09T18:24:11.0138470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0138530Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0138730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0138860Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0139590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0139750Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0139950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0140090Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0140350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0140440Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0140740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0140800Z     yield
2025-01-09T18:24:11.0141020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0141120Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0141330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0141380Z     yield
2025-01-09T18:24:11.0141610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0141660Z     return (yield)
2025-01-09T18:24:11.0141910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0141980Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0142260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0142580Z     yield
2025-01-09T18:24:11.0142810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0142880Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0143070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0143130Z     raise exc
2025-01-09T18:24:11.0143310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0143360Z     col.setup()
2025-01-09T18:24:11.0143550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0143620Z     self._request._fillfixtures()
2025-01-09T18:24:11.0143830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0143930Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0144150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0144250Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0144480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0144550Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0144740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0144860Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0145180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0145270Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0145460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0145510Z     raise exc
2025-01-09T18:24:11.0145710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0145770Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0145960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0146090Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0146280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0146440Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0146640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0146770Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0147040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0147130Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0147420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0147470Z     yield
2025-01-09T18:24:11.0147690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0147770Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0147970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0148020Z     yield
2025-01-09T18:24:11.0148240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0148290Z     return (yield)
2025-01-09T18:24:11.0148560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0148730Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0149010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0149050Z     yield
2025-01-09T18:24:11.0149280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0149340Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0149610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0149650Z     raise exc
2025-01-09T18:24:11.0149840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0149890Z     col.setup()
2025-01-09T18:24:11.0150090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0150160Z     self._request._fillfixtures()
2025-01-09T18:24:11.0150370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0150480Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0150690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0150780Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0151030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0151110Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0151300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0151490Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0151730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0151800Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0152010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-09T18:24:11.0152160Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-09T18:24:11.0152360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0152520Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0152720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0152850Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0153080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-09T18:24:11.0153130Z     return (yield)
2025-01-09T18:24:11.0153380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-09T18:24:11.0153500Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-09T18:24:11.0153710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-09T18:24:11.0153790Z     fixture_result = fixturefunc(**kwargs)
2025-01-09T18:24:11.0153960Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-09T18:24:11.0154010Z     sim.iterate(10)
2025-01-09T18:24:11.0154090Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:11.0154220Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:11.0154330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.0154340Z 
2025-01-09T18:24:11.0154560Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:11.0154710Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:11.0154960Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:11.0155180Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:11.0155300Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:11.0155410Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:11.0155410Z 
2025-01-09T18:24:11.0155470Z     def initialize_transport_state(
2025-01-09T18:24:11.0155520Z         self,
2025-01-09T18:24:11.0155580Z         simulation_state,
2025-01-09T18:24:11.0155630Z         opacity_state,
2025-01-09T18:24:11.0155680Z         macro_atom_state,
2025-01-09T18:24:11.0155730Z         plasma,
2025-01-09T18:24:11.0155780Z         no_of_packets,
2025-01-09T18:24:11.0155840Z         no_of_virtual_packets=0,
2025-01-09T18:24:11.0155890Z         iteration=0,
2025-01-09T18:24:11.0155930Z     ):
2025-01-09T18:24:11.0156030Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:11.0156110Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:11.0156150Z         else:
2025-01-09T18:24:11.0156210Z             gamma_shape = (0, 0)
2025-01-09T18:24:11.0156270Z     
2025-01-09T18:24:11.0156380Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:11.0156450Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:11.0156500Z         )
2025-01-09T18:24:11.0156540Z     
2025-01-09T18:24:11.0156640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:11.0156720Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:11.0157110Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.0157190Z 
2025-01-09T18:24:11.0157290Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:11.0157440Z _____ test_last_interaction_properties[shell_id_in_use-shell_id_to_check] ______
2025-01-09T18:24:11.0157450Z 
2025-01-09T18:24:11.0157560Z expected = 'shell_id_in_use', obtained = 'shell_id_to_check'
2025-01-09T18:24:11.0157790Z request = <FixtureRequest for <Function test_last_interaction_properties[shell_id_in_use-shell_id_to_check]>>
2025-01-09T18:24:11.0157800Z 
2025-01-09T18:24:11.0157860Z     @pytest.mark.parametrize(
2025-01-09T18:24:11.0157920Z         "expected,obtained",
2025-01-09T18:24:11.0157960Z         [
2025-01-09T18:24:11.0158010Z             (
2025-01-09T18:24:11.0158090Z                 "interaction_type_in_use",
2025-01-09T18:24:11.0158160Z                 "interaction_type_to_check",
2025-01-09T18:24:11.0158210Z             ),
2025-01-09T18:24:11.0158260Z             (
2025-01-09T18:24:11.0158320Z                 "shell_id_in_use",
2025-01-09T18:24:11.0158370Z                 "shell_id_to_check",
2025-01-09T18:24:11.0158420Z             ),
2025-01-09T18:24:11.0158460Z             (
2025-01-09T18:24:11.0158520Z                 "r_in_use",
2025-01-09T18:24:11.0158570Z                 "r_to_check",
2025-01-09T18:24:11.0158620Z             ),
2025-01-09T18:24:11.0158700Z             ("nu_packet_collection", "nu_to_check"),
2025-01-09T18:24:11.0158750Z         ],
2025-01-09T18:24:11.0158790Z     )
2025-01-09T18:24:11.0158920Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-09T18:24:11.0159010Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.0159010Z 
2025-01-09T18:24:11.0159190Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-09T18:24:11.0159280Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.0159500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0159590Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0159820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0160050Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0160260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0160360Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0160590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0160660Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0160860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0160910Z     raise exc
2025-01-09T18:24:11.0161100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0161170Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0161360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0161510Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0161700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0161850Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0162050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0162200Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0162450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:11.0162860Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0163140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0163190Z     yield
2025-01-09T18:24:11.0163450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:11.0163540Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0163840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0163890Z     yield
2025-01-09T18:24:11.0164110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:11.0164190Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:11.0164390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0164440Z     yield
2025-01-09T18:24:11.0164660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:11.0164710Z     return (yield)
2025-01-09T18:24:11.0164940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:11.0164990Z     return (yield)
2025-01-09T18:24:11.0165210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:11.0165250Z     raise e
2025-01-09T18:24:11.0165470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:11.0165520Z     item.runtest()
2025-01-09T18:24:11.0165710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:11.0165800Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:11.0166000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0166150Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0166350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0166750Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0166970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:11.0167040Z     result = testfunction(**testargs)
2025-01-09T18:24:11.0167310Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:11.0167410Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.0167630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0167730Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0167960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0168040Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0168230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0168330Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0168570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0168640Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0168830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0168880Z     raise exc
2025-01-09T18:24:11.0169070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0169210Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0169400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0169530Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0169720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0169880Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0170070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0170210Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0170470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0170560Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0170860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0170910Z     yield
2025-01-09T18:24:11.0171130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0171210Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0171420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0171470Z     yield
2025-01-09T18:24:11.0171690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0171740Z     return (yield)
2025-01-09T18:24:11.0171990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0172070Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0172350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0172390Z     yield
2025-01-09T18:24:11.0172620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0172690Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0172920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0172980Z     raise exc
2025-01-09T18:24:11.0173160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0173210Z     col.setup()
2025-01-09T18:24:11.0173410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0173480Z     self._request._fillfixtures()
2025-01-09T18:24:11.0173680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0173790Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0174010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0174100Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0174330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0174410Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0174610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0174700Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0174940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0175010Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0175220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0175360Z     raise exc
2025-01-09T18:24:11.0175550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0175610Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0175800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0175940Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0176130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0176280Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0176480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0176620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0176890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0176990Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0177280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0177330Z     yield
2025-01-09T18:24:11.0177560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0177640Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0177840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0177890Z     yield
2025-01-09T18:24:11.0178190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0178240Z     return (yield)
2025-01-09T18:24:11.0178490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0183020Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0184680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0185000Z     yield
2025-01-09T18:24:11.0185330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0186380Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0186930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0187090Z     raise exc
2025-01-09T18:24:11.0187590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0187750Z     col.setup()
2025-01-09T18:24:11.0188380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0188570Z     self._request._fillfixtures()
2025-01-09T18:24:11.0189160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0189450Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0190030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0190290Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0190930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0191140Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0191680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0191940Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0192580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0192990Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0193530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0193680Z     raise exc
2025-01-09T18:24:11.0194210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0194410Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0194920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0195270Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0195780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0196190Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0196720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0197090Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0197830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0198090Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0198910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0199070Z     yield
2025-01-09T18:24:11.0199690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0199900Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0200460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0200600Z     yield
2025-01-09T18:24:11.0201220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0201380Z     return (yield)
2025-01-09T18:24:11.0202060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0202290Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0203070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0203430Z     yield
2025-01-09T18:24:11.0204040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0204250Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0204760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0204930Z     raise exc
2025-01-09T18:24:11.0205450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0205630Z     col.setup()
2025-01-09T18:24:11.0206140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0206330Z     self._request._fillfixtures()
2025-01-09T18:24:11.0206890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0207180Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0207770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0208030Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0208690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0210090Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0210410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0210510Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0211270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0211360Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0211570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0211630Z     raise exc
2025-01-09T18:24:11.0211850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0211940Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0212180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0212360Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0212590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0212790Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0213020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0213170Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0213440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0213530Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0213830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0213870Z     yield
2025-01-09T18:24:11.0214100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0214180Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0214450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0214530Z     yield
2025-01-09T18:24:11.0214850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0214930Z     return (yield)
2025-01-09T18:24:11.0215280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0215680Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0216050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0216130Z     yield
2025-01-09T18:24:11.0216420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0216540Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0216760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0216820Z     raise exc
2025-01-09T18:24:11.0217000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0217060Z     col.setup()
2025-01-09T18:24:11.0217240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0217310Z     self._request._fillfixtures()
2025-01-09T18:24:11.0217520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0217630Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0217840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0217940Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0218190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0218260Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0218550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0218650Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0218880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0218960Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0219150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0219200Z     raise exc
2025-01-09T18:24:11.0219390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0219450Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0219640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0219770Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0219960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0220110Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0220310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0220450Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0220700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0220790Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0221090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0221130Z     yield
2025-01-09T18:24:11.0221360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0221440Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0221650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0221690Z     yield
2025-01-09T18:24:11.0221920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0222030Z     return (yield)
2025-01-09T18:24:11.0222300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0222390Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0222660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0222710Z     yield
2025-01-09T18:24:11.0222930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0223000Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0223190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0223240Z     raise exc
2025-01-09T18:24:11.0223420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0223480Z     col.setup()
2025-01-09T18:24:11.0223660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0223730Z     self._request._fillfixtures()
2025-01-09T18:24:11.0236420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0236840Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0237450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0237700Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0238350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0239270Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0239810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0240080Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0240740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0240940Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0241480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0241640Z     raise exc
2025-01-09T18:24:11.0242160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0242350Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0243020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0243410Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0243930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0244350Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0244900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0245260Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0245980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0246220Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0247040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0247190Z     yield
2025-01-09T18:24:11.0247810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0248130Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0248720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0249990Z     yield
2025-01-09T18:24:11.0251580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0251750Z     return (yield)
2025-01-09T18:24:11.0252440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0252670Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0253510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0253740Z     yield
2025-01-09T18:24:11.0254510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0254850Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0255440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0255600Z     raise exc
2025-01-09T18:24:11.0256110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0256270Z     col.setup()
2025-01-09T18:24:11.0266080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0266300Z     self._request._fillfixtures()
2025-01-09T18:24:11.0266890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0267170Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0267760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0268350Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0269010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0269230Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0269760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0270040Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0270690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0270910Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0271470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0271630Z     raise exc
2025-01-09T18:24:11.0272180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0272390Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0272910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0273250Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0273790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0274230Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0274800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0275170Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0275940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0276370Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0278550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0278710Z     yield
2025-01-09T18:24:11.0278970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0279050Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0279510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0279560Z     yield
2025-01-09T18:24:11.0279800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0279850Z     return (yield)
2025-01-09T18:24:11.0280120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0280210Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0280500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0280560Z     yield
2025-01-09T18:24:11.0280780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0280850Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0281060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0281110Z     raise exc
2025-01-09T18:24:11.0281300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0281360Z     col.setup()
2025-01-09T18:24:11.0281540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0281610Z     self._request._fillfixtures()
2025-01-09T18:24:11.0281820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0282400Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0282620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0282720Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0282950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0283040Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0283240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0283350Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0283580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0283660Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0283860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0283910Z     raise exc
2025-01-09T18:24:11.0284130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0284200Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0284400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0284550Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0284740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0284900Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0285090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0285230Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0285500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0285600Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0285900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0285950Z     yield
2025-01-09T18:24:11.0286550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0286630Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0286850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0286910Z     yield
2025-01-09T18:24:11.0287140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0287190Z     return (yield)
2025-01-09T18:24:11.0287440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0287530Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0287800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0287850Z     yield
2025-01-09T18:24:11.0288070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0288150Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0288330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0288380Z     raise exc
2025-01-09T18:24:11.0288580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0288630Z     col.setup()
2025-01-09T18:24:11.0288820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0288890Z     self._request._fillfixtures()
2025-01-09T18:24:11.0289190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0289300Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0289510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0289610Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0289850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0289920Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0290120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0290220Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0290450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0290530Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0290730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0290780Z     raise exc
2025-01-09T18:24:11.0290980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0291060Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0291250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0291380Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0291570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0291730Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0291930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0292060Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0292330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0292410Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0292800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0292850Z     yield
2025-01-09T18:24:11.0293070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0293150Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0293360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0293400Z     yield
2025-01-09T18:24:11.0293630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0293680Z     return (yield)
2025-01-09T18:24:11.0293930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0294010Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0294300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0294360Z     yield
2025-01-09T18:24:11.0294580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0294660Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0294840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0294890Z     raise exc
2025-01-09T18:24:11.0295080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0295130Z     col.setup()
2025-01-09T18:24:11.0295430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0295490Z     self._request._fillfixtures()
2025-01-09T18:24:11.0295710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0295810Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0296030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0296140Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0296450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0296700Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0296910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0297130Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0297480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0297560Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0297770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0297830Z     raise exc
2025-01-09T18:24:11.0298010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0298080Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0298270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0298410Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0298590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0298750Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0298950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0299080Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0299350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0299560Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0299870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0299930Z     yield
2025-01-09T18:24:11.0300150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0300230Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0300440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0300510Z     yield
2025-01-09T18:24:11.0300730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0300790Z     return (yield)
2025-01-09T18:24:11.0301040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0301130Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0301400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0301450Z     yield
2025-01-09T18:24:11.0301670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0301750Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0301940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0302070Z     raise exc
2025-01-09T18:24:11.0302260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0302310Z     col.setup()
2025-01-09T18:24:11.0302500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0302560Z     self._request._fillfixtures()
2025-01-09T18:24:11.0302780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0302880Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0303110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0303200Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0303440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0303510Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0303710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0303950Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0304180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0304270Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0304460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0304510Z     raise exc
2025-01-09T18:24:11.0304700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0304770Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0304980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0305110Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0305310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0305520Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0305730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0305960Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0306230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0306320Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0306630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0306680Z     yield
2025-01-09T18:24:11.0306910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0306990Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0307200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0307250Z     yield
2025-01-09T18:24:11.0307490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0307540Z     return (yield)
2025-01-09T18:24:11.0307810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0307900Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0308170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0308220Z     yield
2025-01-09T18:24:11.0308590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0308680Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0309180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0309230Z     raise exc
2025-01-09T18:24:11.0309420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0309460Z     col.setup()
2025-01-09T18:24:11.0309660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0309720Z     self._request._fillfixtures()
2025-01-09T18:24:11.0309940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0310050Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0310270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0310360Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0310600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0310680Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0310890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0311000Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0311240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0311320Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0311510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0311560Z     raise exc
2025-01-09T18:24:11.0311750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0311820Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0312010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0312140Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0312330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0312490Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0312930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0313070Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0313330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0313420Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0313850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0313910Z     yield
2025-01-09T18:24:11.0314130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0314210Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0314410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0314460Z     yield
2025-01-09T18:24:11.0314690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0314740Z     return (yield)
2025-01-09T18:24:11.0314980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0315370Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0315740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0315800Z     yield
2025-01-09T18:24:11.0316290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0316360Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0316570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0316610Z     raise exc
2025-01-09T18:24:11.0316880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0316940Z     col.setup()
2025-01-09T18:24:11.0317130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0317200Z     self._request._fillfixtures()
2025-01-09T18:24:11.0317410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0317520Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0317830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0317930Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0318170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0318250Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0318480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0318590Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0318830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0318900Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0319100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0319150Z     raise exc
2025-01-09T18:24:11.0319340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0319410Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0319610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0319740Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0320040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0320200Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0320420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0320560Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0320830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0320920Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0321880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0321940Z     yield
2025-01-09T18:24:11.0322570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0322680Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0322890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0322940Z     yield
2025-01-09T18:24:11.0323190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0323250Z     return (yield)
2025-01-09T18:24:11.0323500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0323580Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0323860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0324050Z     yield
2025-01-09T18:24:11.0324270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0324340Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0324530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0324580Z     raise exc
2025-01-09T18:24:11.0325810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0325900Z     col.setup()
2025-01-09T18:24:11.0326090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0326160Z     self._request._fillfixtures()
2025-01-09T18:24:11.0327090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0344060Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0344730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0345010Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0345840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0346120Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0346720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0347010Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0347700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0347930Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0348470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0348640Z     raise exc
2025-01-09T18:24:11.0349210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0349420Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0349970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0351110Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0351670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0352100Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0352660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0353020Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0353800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0354080Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0354960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0355130Z     yield
2025-01-09T18:24:11.0355760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0355990Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0356580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0356750Z     yield
2025-01-09T18:24:11.0357410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0357600Z     return (yield)
2025-01-09T18:24:11.0359160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0359810Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0360600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0360780Z     yield
2025-01-09T18:24:11.0361420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0361650Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0362190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0362340Z     raise exc
2025-01-09T18:24:11.0362870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0363020Z     col.setup()
2025-01-09T18:24:11.0363550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0363740Z     self._request._fillfixtures()
2025-01-09T18:24:11.0364320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0364620Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0365240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0365540Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0366250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0366490Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0367080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0367400Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0368110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0368370Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0368980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0369160Z     raise exc
2025-01-09T18:24:11.0369740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0370290Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0370860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0371230Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0371760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0372200Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0372810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0373190Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0373930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0374170Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0375030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0375200Z     yield
2025-01-09T18:24:11.0376470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0376860Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0378040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0378220Z     yield
2025-01-09T18:24:11.0381600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0383740Z     return (yield)
2025-01-09T18:24:11.0385180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0405480Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0406960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0408130Z     yield
2025-01-09T18:24:11.0409290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0410570Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0411760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0413190Z     raise exc
2025-01-09T18:24:11.0413550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0413890Z     col.setup()
2025-01-09T18:24:11.0414180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0414610Z     self._request._fillfixtures()
2025-01-09T18:24:11.0414960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0415360Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0415780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0416170Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0416580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0416970Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0417320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0417690Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0418100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0418490Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0418840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0421010Z     raise exc
2025-01-09T18:24:11.0421800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0422780Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0423680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0424770Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0426050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0427700Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0428930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0430040Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0431340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0432510Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0433830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0435060Z     yield
2025-01-09T18:24:11.0435950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0437020Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0438020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0439730Z     yield
2025-01-09T18:24:11.0440580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0441610Z     return (yield)
2025-01-09T18:24:11.0442540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0444560Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0445180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0445790Z     yield
2025-01-09T18:24:11.0446100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0446490Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0446830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0447170Z     raise exc
2025-01-09T18:24:11.0447640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0449740Z     col.setup()
2025-01-09T18:24:11.0464060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0465180Z     self._request._fillfixtures()
2025-01-09T18:24:11.0466140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0467190Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0468260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0469410Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0469870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0470250Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0470620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0471330Z     raise exc
2025-01-09T18:24:11.0471620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0471960Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0472670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0473070Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0473620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0474060Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0474500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0474930Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0475430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0475870Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0476340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0476780Z     yield
2025-01-09T18:24:11.0477090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0477490Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0477860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0478200Z     yield
2025-01-09T18:24:11.0494940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0495970Z     return (yield)
2025-01-09T18:24:11.0497590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0498740Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0499940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0501100Z     yield
2025-01-09T18:24:11.0501990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0504080Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0504540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0504860Z     raise exc
2025-01-09T18:24:11.0505130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0505820Z     col.setup()
2025-01-09T18:24:11.0506110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0506440Z     self._request._fillfixtures()
2025-01-09T18:24:11.0506790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0507180Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0507590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0507980Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0508390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0508770Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0509200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0509530Z     raise exc
2025-01-09T18:24:11.0509800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0510140Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0510480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0510870Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0511450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0511880Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0512310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0512720Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0513200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0513650Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0525650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0526120Z     yield
2025-01-09T18:24:11.0526430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0528340Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0532300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0532640Z     yield
2025-01-09T18:24:11.0533790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0534790Z     return (yield)
2025-01-09T18:24:11.0535180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0536180Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0536790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0537190Z     yield
2025-01-09T18:24:11.0537490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0537860Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0538200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0538510Z     raise exc
2025-01-09T18:24:11.0538780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0539090Z     col.setup()
2025-01-09T18:24:11.0539610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0539940Z     self._request._fillfixtures()
2025-01-09T18:24:11.0540280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0541080Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0541480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0541860Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0542270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0542650Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0543000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0543320Z     raise exc
2025-01-09T18:24:11.0544000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0544340Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0544680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0545070Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0545470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0545940Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0546590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0547230Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0547720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0548210Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0548860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0549350Z     yield
2025-01-09T18:24:11.0549720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0550120Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0550480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0550810Z     yield
2025-01-09T18:24:11.0551110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0551450Z     return (yield)
2025-01-09T18:24:11.0551800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0552340Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0552780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0553420Z     yield
2025-01-09T18:24:11.0553730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0554410Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0554740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0555040Z     raise exc
2025-01-09T18:24:11.0555310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0555620Z     col.setup()
2025-01-09T18:24:11.0555890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0556220Z     self._request._fillfixtures()
2025-01-09T18:24:11.0556560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0556960Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0557400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0557790Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0558190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0559060Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0559420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0559920Z     raise exc
2025-01-09T18:24:11.0560210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0560540Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0560870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0561440Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0561850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0562280Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0562710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0565410Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0565910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0566570Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0567040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0570600Z     yield
2025-01-09T18:24:11.0570940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0571340Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0571870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0572220Z     yield
2025-01-09T18:24:11.0572540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0572900Z     return (yield)
2025-01-09T18:24:11.0573260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0573690Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0574150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0574550Z     yield
2025-01-09T18:24:11.0574850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0575230Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0575780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0577020Z     raise exc
2025-01-09T18:24:11.0577290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0577600Z     col.setup()
2025-01-09T18:24:11.0577890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0578240Z     self._request._fillfixtures()
2025-01-09T18:24:11.0578590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0578980Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0579380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0579770Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0580470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0581730Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0582670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0583560Z     raise exc
2025-01-09T18:24:11.0584300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0588970Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0590000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0591150Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0592240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0593420Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0595560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0596740Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0598110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0599300Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0600590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0603290Z     yield
2025-01-09T18:24:11.0603670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0604080Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0604460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0604830Z     yield
2025-01-09T18:24:11.0605160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0605530Z     return (yield)
2025-01-09T18:24:11.0605890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0606330Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0606770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0607180Z     yield
2025-01-09T18:24:11.0607480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0607870Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0608210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0608530Z     raise exc
2025-01-09T18:24:11.0609650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0611090Z     col.setup()
2025-01-09T18:24:11.0611860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0613120Z     self._request._fillfixtures()
2025-01-09T18:24:11.0614110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0614780Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0615210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0615600Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0616010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0616440Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0617010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0617510Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0618240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0618650Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0620830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0622980Z     raise exc
2025-01-09T18:24:11.0624290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0624730Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0625070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0625770Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0626240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0626740Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0627220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0627670Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0628200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0628830Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0629350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0629800Z     yield
2025-01-09T18:24:11.0630120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0630520Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0630910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0631270Z     yield
2025-01-09T18:24:11.0631580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0631930Z     return (yield)
2025-01-09T18:24:11.0632260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0632680Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0633150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0633610Z     yield
2025-01-09T18:24:11.0633950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0634360Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0634900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0635960Z     raise exc
2025-01-09T18:24:11.0636240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0636770Z     col.setup()
2025-01-09T18:24:11.0637060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0637410Z     self._request._fillfixtures()
2025-01-09T18:24:11.0637770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0638200Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0638630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0639060Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0639490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0639880Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0640320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0640690Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0641100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0642040Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0643050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0643440Z     raise exc
2025-01-09T18:24:11.0646450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0646860Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0647200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0652850Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0653300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0653820Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0654250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0654660Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0655290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0655730Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0667300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0668810Z     yield
2025-01-09T18:24:11.0688350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0695830Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0696900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0697870Z     yield
2025-01-09T18:24:11.0698790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0699920Z     return (yield)
2025-01-09T18:24:11.0700980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0702190Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0703480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0704690Z     yield
2025-01-09T18:24:11.0705560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0707390Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0708660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0710580Z     raise exc
2025-01-09T18:24:11.0711470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0712340Z     col.setup()
2025-01-09T18:24:11.0713110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0714010Z     self._request._fillfixtures()
2025-01-09T18:24:11.0714920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0715990Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0717150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0717600Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0718020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0718420Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0718770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0719150Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0719550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0719930Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0720280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0720590Z     raise exc
2025-01-09T18:24:11.0720870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0721200Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0721540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0721940Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0722330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0722760Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0723520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0723920Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0724400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0724820Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0725290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0725710Z     yield
2025-01-09T18:24:11.0726020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0726420Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0726800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0727130Z     yield
2025-01-09T18:24:11.0727430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0727790Z     return (yield)
2025-01-09T18:24:11.0728140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0728550Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0728990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0729670Z     yield
2025-01-09T18:24:11.0729980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0730510Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0730860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0731180Z     raise exc
2025-01-09T18:24:11.0731450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0731770Z     col.setup()
2025-01-09T18:24:11.0732060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0732390Z     self._request._fillfixtures()
2025-01-09T18:24:11.0732730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0733120Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0733530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0733920Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0734330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0734710Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0735160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0736100Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0738500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0740250Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0740660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0741000Z     raise exc
2025-01-09T18:24:11.0741300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0741650Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0742000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0742410Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0743010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0744060Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0744500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0744910Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0745420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0745850Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0746330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0746760Z     yield
2025-01-09T18:24:11.0747070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0747450Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0747810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0748150Z     yield
2025-01-09T18:24:11.0748450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0748810Z     return (yield)
2025-01-09T18:24:11.0749150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0749790Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0750220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0750750Z     yield
2025-01-09T18:24:11.0751060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0751430Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0751780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0752240Z     raise exc
2025-01-09T18:24:11.0752530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0752850Z     col.setup()
2025-01-09T18:24:11.0753950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0755450Z     self._request._fillfixtures()
2025-01-09T18:24:11.0755900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0756320Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0757480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0758710Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0759660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0760090Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0760460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0760840Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0761240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0761620Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0761970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0764080Z     raise exc
2025-01-09T18:24:11.0765280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0766580Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0767800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0770550Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0771810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0772330Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0772770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0773180Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0773690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0774130Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0774850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0775280Z     yield
2025-01-09T18:24:11.0775590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0775990Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0777010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0777940Z     yield
2025-01-09T18:24:11.0779980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0781020Z     return (yield)
2025-01-09T18:24:11.0788600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0790140Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0791350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0792660Z     yield
2025-01-09T18:24:11.0794480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0795970Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0796940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0797790Z     raise exc
2025-01-09T18:24:11.0798590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0799440Z     col.setup()
2025-01-09T18:24:11.0800180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0801070Z     self._request._fillfixtures()
2025-01-09T18:24:11.0801990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0803050Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0804120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0805160Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0806270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0807310Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0808240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0809250Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0810360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0818400Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0818800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0819120Z     raise exc
2025-01-09T18:24:11.0819400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0820040Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0820400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0820810Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0821220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0821680Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0822130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0822570Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0823090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0823530Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0824480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0826040Z     yield
2025-01-09T18:24:11.0826910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0827960Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0828940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0829890Z     yield
2025-01-09T18:24:11.0831550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0833760Z     return (yield)
2025-01-09T18:24:11.0834710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0835860Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0837050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0838190Z     yield
2025-01-09T18:24:11.0839040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0840120Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0841020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0841910Z     raise exc
2025-01-09T18:24:11.0842650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0843530Z     col.setup()
2025-01-09T18:24:11.0844620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0845570Z     self._request._fillfixtures()
2025-01-09T18:24:11.0846490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0847540Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0849060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0850120Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0850780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0850990Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0851540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0851840Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0852520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0854190Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0854890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0856420Z     raise exc
2025-01-09T18:24:11.0856980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0857180Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0857720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0858120Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0858830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0859280Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0860510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0860730Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0861010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0861110Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0861410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0861460Z     yield
2025-01-09T18:24:11.0861900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0861990Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0862580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0862800Z     yield
2025-01-09T18:24:11.0863020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0863080Z     return (yield)
2025-01-09T18:24:11.0863330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0863410Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0863690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0863740Z     yield
2025-01-09T18:24:11.0864110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0864180Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0864370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0864420Z     raise exc
2025-01-09T18:24:11.0864610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0864670Z     col.setup()
2025-01-09T18:24:11.0864860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0864920Z     self._request._fillfixtures()
2025-01-09T18:24:11.0865130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0865240Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0865460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0865550Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0866650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0867180Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0875050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0875370Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0876030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0876250Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0877460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0877800Z     raise exc
2025-01-09T18:24:11.0878140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0878210Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0878430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0878590Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0879220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0879770Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0880010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0880150Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0880520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0881500Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0881980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0882040Z     yield
2025-01-09T18:24:11.0882960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0883340Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0884490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0884800Z     yield
2025-01-09T18:24:11.0885070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0885130Z     return (yield)
2025-01-09T18:24:11.0886400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0886510Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0888120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0888200Z     yield
2025-01-09T18:24:11.0888730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0890230Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0892350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0892420Z     raise exc
2025-01-09T18:24:11.0893080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0893310Z     col.setup()
2025-01-09T18:24:11.0893750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0894050Z     self._request._fillfixtures()
2025-01-09T18:24:11.0894680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0894800Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0895030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0895130Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0895370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0895450Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0895650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0895830Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0897180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0897270Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0897490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0897540Z     raise exc
2025-01-09T18:24:11.0897750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0897820Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0898020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0898170Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0898370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0898530Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0898740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0898880Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0899160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0899250Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0915320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0915760Z     yield
2025-01-09T18:24:11.0916150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0916230Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0916430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0916490Z     yield
2025-01-09T18:24:11.0916720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0916770Z     return (yield)
2025-01-09T18:24:11.0917020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0917100Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0917380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0917430Z     yield
2025-01-09T18:24:11.0917650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0917720Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0917910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0917960Z     raise exc
2025-01-09T18:24:11.0918150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0918200Z     col.setup()
2025-01-09T18:24:11.0918390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0918460Z     self._request._fillfixtures()
2025-01-09T18:24:11.0918670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0918780Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0918990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0919090Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0919330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0919400Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0919600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0919750Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0919980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0920060Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0920250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0920300Z     raise exc
2025-01-09T18:24:11.0920490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0920560Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0920750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0920880Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0921070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0921230Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0921430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0921560Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0921830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0921990Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0922290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0922560Z     yield
2025-01-09T18:24:11.0922790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0922870Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0923080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0923130Z     yield
2025-01-09T18:24:11.0923350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0923400Z     return (yield)
2025-01-09T18:24:11.0923660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0923740Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0924020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0924070Z     yield
2025-01-09T18:24:11.0924290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0924370Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0924550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0924600Z     raise exc
2025-01-09T18:24:11.0924790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0924840Z     col.setup()
2025-01-09T18:24:11.0925040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0925110Z     self._request._fillfixtures()
2025-01-09T18:24:11.0925320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0925430Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0925640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0925740Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0925970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0926210Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0926410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0926510Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0926740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0926820Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0927020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-09T18:24:11.0927160Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-09T18:24:11.0927350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0927500Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0927700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0927830Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0928070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-09T18:24:11.0928120Z     return (yield)
2025-01-09T18:24:11.0928550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-09T18:24:11.0928790Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-09T18:24:11.0929000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-09T18:24:11.0929150Z     fixture_result = fixturefunc(**kwargs)
2025-01-09T18:24:11.0929320Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-09T18:24:11.0929370Z     sim.iterate(10)
2025-01-09T18:24:11.0929440Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:11.0929570Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:11.0929660Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.0929670Z 
2025-01-09T18:24:11.0929890Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:11.0930060Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:11.0930230Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:11.0930450Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:11.0930580Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:11.0930680Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:11.0930690Z 
2025-01-09T18:24:11.0930750Z     def initialize_transport_state(
2025-01-09T18:24:11.0930800Z         self,
2025-01-09T18:24:11.0930850Z         simulation_state,
2025-01-09T18:24:11.0930900Z         opacity_state,
2025-01-09T18:24:11.0930950Z         macro_atom_state,
2025-01-09T18:24:11.0931000Z         plasma,
2025-01-09T18:24:11.0931050Z         no_of_packets,
2025-01-09T18:24:11.0931110Z         no_of_virtual_packets=0,
2025-01-09T18:24:11.0931160Z         iteration=0,
2025-01-09T18:24:11.0931210Z     ):
2025-01-09T18:24:11.0931310Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:11.0931380Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:11.0931430Z         else:
2025-01-09T18:24:11.0931820Z             gamma_shape = (0, 0)
2025-01-09T18:24:11.0932810Z     
2025-01-09T18:24:11.0933140Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:11.0933360Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:11.0933500Z         )
2025-01-09T18:24:11.0933650Z     
2025-01-09T18:24:11.0934090Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:11.0934320Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:11.0934710Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.0934720Z 
2025-01-09T18:24:11.0934810Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:11.0934950Z ____________ test_last_interaction_properties[r_in_use-r_to_check] _____________
2025-01-09T18:24:11.0934960Z 
2025-01-09T18:24:11.0935210Z expected = 'r_in_use', obtained = 'r_to_check'
2025-01-09T18:24:11.0935870Z request = <FixtureRequest for <Function test_last_interaction_properties[r_in_use-r_to_check]>>
2025-01-09T18:24:11.0935880Z 
2025-01-09T18:24:11.0936080Z     @pytest.mark.parametrize(
2025-01-09T18:24:11.0936150Z         "expected,obtained",
2025-01-09T18:24:11.0936190Z         [
2025-01-09T18:24:11.0936400Z             (
2025-01-09T18:24:11.0936470Z                 "interaction_type_in_use",
2025-01-09T18:24:11.0936540Z                 "interaction_type_to_check",
2025-01-09T18:24:11.0936590Z             ),
2025-01-09T18:24:11.0936630Z             (
2025-01-09T18:24:11.0936690Z                 "shell_id_in_use",
2025-01-09T18:24:11.0936740Z                 "shell_id_to_check",
2025-01-09T18:24:11.0936790Z             ),
2025-01-09T18:24:11.0936830Z             (
2025-01-09T18:24:11.0936890Z                 "r_in_use",
2025-01-09T18:24:11.0937060Z                 "r_to_check",
2025-01-09T18:24:11.0937100Z             ),
2025-01-09T18:24:11.0937180Z             ("nu_packet_collection", "nu_to_check"),
2025-01-09T18:24:11.0937310Z         ],
2025-01-09T18:24:11.0937360Z     )
2025-01-09T18:24:11.0937490Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-09T18:24:11.0937580Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.0937580Z 
2025-01-09T18:24:11.0937770Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-09T18:24:11.0937860Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.0938080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0938180Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0938410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0938490Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0938680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0939150Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0939880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0940110Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0941030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0941130Z     raise exc
2025-01-09T18:24:11.0941350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0941420Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0941620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0941760Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0941950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0942120Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0942320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0942450Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0942830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:11.0942910Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0943190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0943240Z     yield
2025-01-09T18:24:11.0943500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:11.0943590Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0943890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0943950Z     yield
2025-01-09T18:24:11.0944170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:11.0944260Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:11.0944460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0944510Z     yield
2025-01-09T18:24:11.0944740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:11.0944780Z     return (yield)
2025-01-09T18:24:11.0945020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:11.0945270Z     return (yield)
2025-01-09T18:24:11.0945490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:11.0945610Z     raise e
2025-01-09T18:24:11.0945830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:11.0945880Z     item.runtest()
2025-01-09T18:24:11.0946090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:11.0946180Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:11.0946370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0946530Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0947730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0947900Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0948130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:11.0948200Z     result = testfunction(**testargs)
2025-01-09T18:24:11.0948480Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:11.0948730Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.0948960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0949060Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0949300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0949380Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0949580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0949680Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0949920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0949990Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0950190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0950330Z     raise exc
2025-01-09T18:24:11.0950520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0950590Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0950780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0950910Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0951100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0951260Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0951460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0951600Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0951850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:11.0951930Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0952690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0952950Z     yield
2025-01-09T18:24:11.0953710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:11.0953950Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0955280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0955910Z     yield
2025-01-09T18:24:11.0956540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:11.0956750Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:11.0957320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0957470Z     yield
2025-01-09T18:24:11.0958090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:11.0958250Z     return (yield)
2025-01-09T18:24:11.0958870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:11.0959030Z     return (yield)
2025-01-09T18:24:11.0959710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:11.0959810Z     raise e
2025-01-09T18:24:11.0960030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:11.0960090Z     item.runtest()
2025-01-09T18:24:11.0960280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:11.0960380Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:11.0960570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0960730Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0960930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0961060Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0961280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:11.0961340Z     result = testfunction(**testargs)
2025-01-09T18:24:11.0961620Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:11.0961710Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.0961930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0962250Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0962490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0962570Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0962760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0962860Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0963100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0963180Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0963370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0963420Z     raise exc
2025-01-09T18:24:11.0963610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0963680Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0963870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0964000Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0964190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0964340Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0964690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0964920Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0965190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0965280Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0965580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0965630Z     yield
2025-01-09T18:24:11.0965860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0965940Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0966160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0966220Z     yield
2025-01-09T18:24:11.0966440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0966500Z     return (yield)
2025-01-09T18:24:11.0966740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0966820Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0967090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0967220Z     yield
2025-01-09T18:24:11.0967440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0967670Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0967880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0967930Z     raise exc
2025-01-09T18:24:11.0968110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0968160Z     col.setup()
2025-01-09T18:24:11.0968360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0968420Z     self._request._fillfixtures()
2025-01-09T18:24:11.0968630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0968740Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0969030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0969130Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0969360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0969440Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0969640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0969740Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0969980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0970050Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0970250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0970300Z     raise exc
2025-01-09T18:24:11.0970490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0970560Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0970750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0970880Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0971320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0971580Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0971850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0971980Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0972250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0972340Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0972640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0972700Z     yield
2025-01-09T18:24:11.0972920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0973000Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0973460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0973870Z     yield
2025-01-09T18:24:11.0974820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0974910Z     return (yield)
2025-01-09T18:24:11.0975160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0975250Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0975520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0975570Z     yield
2025-01-09T18:24:11.0975790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0975860Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0976060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0976110Z     raise exc
2025-01-09T18:24:11.0976300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0976350Z     col.setup()
2025-01-09T18:24:11.0977910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0978010Z     self._request._fillfixtures()
2025-01-09T18:24:11.0978470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0978580Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0978790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0980040Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0981710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0981800Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0982010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0982120Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0982360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0982430Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0982630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0982690Z     raise exc
2025-01-09T18:24:11.0982880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0982950Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0983140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0983520Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0983720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0983980Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0984180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0984320Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0984600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0984680Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0984990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0985040Z     yield
2025-01-09T18:24:11.0985270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0985360Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0985560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0985610Z     yield
2025-01-09T18:24:11.0985840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0985890Z     return (yield)
2025-01-09T18:24:11.0986950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0987080Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0987390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0987440Z     yield
2025-01-09T18:24:11.0987670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.0987750Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.0987950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.0988000Z     raise exc
2025-01-09T18:24:11.0988190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.0988240Z     col.setup()
2025-01-09T18:24:11.0988540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.0988610Z     self._request._fillfixtures()
2025-01-09T18:24:11.0988830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.0988930Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.0989150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.0989250Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.0989480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0989570Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0989760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.0989860Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.0990100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.0990180Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.0990370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.0990420Z     raise exc
2025-01-09T18:24:11.0990620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.0990820Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.0991020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.0991520Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.0991710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.0991870Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.0992070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.0992210Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.0993120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.0993490Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.0994330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.0994500Z     yield
2025-01-09T18:24:11.0995380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.0995630Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.0996400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.0996570Z     yield
2025-01-09T18:24:11.0997200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.0997370Z     return (yield)
2025-01-09T18:24:11.0998050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.0998280Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.0999050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.0999200Z     yield
2025-01-09T18:24:11.0999810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1000140Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1000650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1000800Z     raise exc
2025-01-09T18:24:11.1002100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1002260Z     col.setup()
2025-01-09T18:24:11.1002790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1002970Z     self._request._fillfixtures()
2025-01-09T18:24:11.1003550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1003850Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1004570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1004840Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1005490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1005710Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1006250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1006520Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1007160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1007380Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1007910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1008590Z     raise exc
2025-01-09T18:24:11.1009140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1009580Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1010100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1010440Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1010960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1011440Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1012290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1012670Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1013400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1013660Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1014500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1014660Z     yield
2025-01-09T18:24:11.1015540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1015770Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1016430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1016590Z     yield
2025-01-09T18:24:11.1017430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1017650Z     return (yield)
2025-01-09T18:24:11.1018360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1034940Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1035240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1035290Z     yield
2025-01-09T18:24:11.1035520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1035590Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1036420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1036900Z     raise exc
2025-01-09T18:24:11.1037470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1037620Z     col.setup()
2025-01-09T18:24:11.1038170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1038380Z     self._request._fillfixtures()
2025-01-09T18:24:11.1039000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1039360Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1039950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1040620Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1041580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1041800Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1042420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1042550Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1042790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1042860Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1043380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1043520Z     raise exc
2025-01-09T18:24:11.1043720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1043780Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1043970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1044190Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1044390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1044550Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1044750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1044880Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1045210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1045310Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1047860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1047920Z     yield
2025-01-09T18:24:11.1048160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1048240Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1048440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1048490Z     yield
2025-01-09T18:24:11.1048710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1048770Z     return (yield)
2025-01-09T18:24:11.1049450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1049590Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1049960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1050010Z     yield
2025-01-09T18:24:11.1050240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1050600Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1050980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1051030Z     raise exc
2025-01-09T18:24:11.1051220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1051320Z     col.setup()
2025-01-09T18:24:11.1052400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1052500Z     self._request._fillfixtures()
2025-01-09T18:24:11.1052720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1052840Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1053070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1053180Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1059760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1059840Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1060040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1060140Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1061120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1061320Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1061530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1061580Z     raise exc
2025-01-09T18:24:11.1061770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1061840Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1062330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1062650Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1063050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1063260Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1063470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1063830Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1064370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1064480Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1064790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1064850Z     yield
2025-01-09T18:24:11.1065230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1065430Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1065860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1066080Z     yield
2025-01-09T18:24:11.1066530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1067020Z     return (yield)
2025-01-09T18:24:11.1067370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1067450Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1067730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1067850Z     yield
2025-01-09T18:24:11.1068080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1068150Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1068340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1068560Z     raise exc
2025-01-09T18:24:11.1068800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1068850Z     col.setup()
2025-01-09T18:24:11.1069050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1069110Z     self._request._fillfixtures()
2025-01-09T18:24:11.1069320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1069420Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1069650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1069750Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1069980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1070060Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1070260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1070480Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1070830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1070900Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1071090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1071140Z     raise exc
2025-01-09T18:24:11.1071340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1071400Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1071600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1071740Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1071940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1072100Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1072360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1072620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1072940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1073030Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1073330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1073380Z     yield
2025-01-09T18:24:11.1073600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1073680Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1073990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1074040Z     yield
2025-01-09T18:24:11.1074260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1074310Z     return (yield)
2025-01-09T18:24:11.1074560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1074740Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1075020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1075070Z     yield
2025-01-09T18:24:11.1075290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1075360Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1075550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1075600Z     raise exc
2025-01-09T18:24:11.1075780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1075830Z     col.setup()
2025-01-09T18:24:11.1076020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1076080Z     self._request._fillfixtures()
2025-01-09T18:24:11.1076290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1076400Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1076610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1076710Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1076940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1077100Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1077320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1077420Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1077660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1077730Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1077930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1077970Z     raise exc
2025-01-09T18:24:11.1078160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1078230Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1078420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1078550Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1078770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1078940Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1079130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1079270Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1079530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1079620Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1079920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1079970Z     yield
2025-01-09T18:24:11.1080190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1080360Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1080570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1080610Z     yield
2025-01-09T18:24:11.1080840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1080920Z     return (yield)
2025-01-09T18:24:11.1081170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1081250Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1081520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1081570Z     yield
2025-01-09T18:24:11.1081790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1081860Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1082050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1082100Z     raise exc
2025-01-09T18:24:11.1082300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1082350Z     col.setup()
2025-01-09T18:24:11.1082540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1082600Z     self._request._fillfixtures()
2025-01-09T18:24:11.1082810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1082910Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1083130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1083310Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1083550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1083650Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1083850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1083950Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1084180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1084250Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1084450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1084770Z     raise exc
2025-01-09T18:24:11.1087420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1087520Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1087720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1087850Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1088240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1088770Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1089360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1089720Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1091020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1091160Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1091480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1091900Z     yield
2025-01-09T18:24:11.1092140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1092210Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1092430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1092620Z     yield
2025-01-09T18:24:11.1092850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1092900Z     return (yield)
2025-01-09T18:24:11.1093760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1093870Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1094150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1094200Z     yield
2025-01-09T18:24:11.1094440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1094510Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1094700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1094750Z     raise exc
2025-01-09T18:24:11.1094940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1094990Z     col.setup()
2025-01-09T18:24:11.1095180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1095240Z     self._request._fillfixtures()
2025-01-09T18:24:11.1095450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1095560Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1096040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1096190Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1096740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1096820Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1097220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1097660Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1097960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1098040Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1098250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1098300Z     raise exc
2025-01-09T18:24:11.1098510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1098580Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1098770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1098900Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1099090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1099250Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1099450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1099590Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1099850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1100160Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1100470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1100520Z     yield
2025-01-09T18:24:11.1100750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1100870Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1101080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1101130Z     yield
2025-01-09T18:24:11.1101360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1101410Z     return (yield)
2025-01-09T18:24:11.1101660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1101740Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1102020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1102070Z     yield
2025-01-09T18:24:11.1102290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1102370Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1102550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1102600Z     raise exc
2025-01-09T18:24:11.1102790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1102840Z     col.setup()
2025-01-09T18:24:11.1103030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1103090Z     self._request._fillfixtures()
2025-01-09T18:24:11.1103380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1103650Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1103870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1103960Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1104210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1104290Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1104490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1104590Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1104830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1104900Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1105100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1105140Z     raise exc
2025-01-09T18:24:11.1105340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1105410Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1105590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1105730Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1105920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1106070Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1106440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1107790Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1109600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1110030Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1110870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1111020Z     yield
2025-01-09T18:24:11.1111980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1112110Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1112490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1112710Z     yield
2025-01-09T18:24:11.1113570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1113660Z     return (yield)
2025-01-09T18:24:11.1113930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1114010Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1114290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1114340Z     yield
2025-01-09T18:24:11.1114560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1114640Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1114830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1114880Z     raise exc
2025-01-09T18:24:11.1115060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1115110Z     col.setup()
2025-01-09T18:24:11.1116040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1116120Z     self._request._fillfixtures()
2025-01-09T18:24:11.1116890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1117230Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1117830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1118090Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1118730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1119060Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1120400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1120540Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1120790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1120870Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1121070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1121120Z     raise exc
2025-01-09T18:24:11.1121310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1121380Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1121570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1121700Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1121890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1122040Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1122400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1122540Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1122800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1122890Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1123250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1123300Z     yield
2025-01-09T18:24:11.1123530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1123610Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1123810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1123860Z     yield
2025-01-09T18:24:11.1124090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1124140Z     return (yield)
2025-01-09T18:24:11.1124390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1124470Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1124740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1124790Z     yield
2025-01-09T18:24:11.1125010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1125080Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1125260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1125310Z     raise exc
2025-01-09T18:24:11.1125560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1125620Z     col.setup()
2025-01-09T18:24:11.1125840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1125910Z     self._request._fillfixtures()
2025-01-09T18:24:11.1126120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1126260Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1126470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1126560Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1126800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1126870Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1127070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1127170Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1127400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1127470Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1127670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1127720Z     raise exc
2025-01-09T18:24:11.1127910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1127980Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1128170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1128300Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1128480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1128980Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1129170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1129310Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1129580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1129700Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1130010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1130060Z     yield
2025-01-09T18:24:11.1130290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1130360Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1130570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1130620Z     yield
2025-01-09T18:24:11.1130840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1130890Z     return (yield)
2025-01-09T18:24:11.1131140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1131220Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1131500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1131540Z     yield
2025-01-09T18:24:11.1131760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1131830Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1132250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1132350Z     raise exc
2025-01-09T18:24:11.1132530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1132580Z     col.setup()
2025-01-09T18:24:11.1132770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1132830Z     self._request._fillfixtures()
2025-01-09T18:24:11.1133040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1133150Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1133360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1133450Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1133690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1133760Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1133960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1134060Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1134290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1134360Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1134560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1134610Z     raise exc
2025-01-09T18:24:11.1143190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1143490Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1144040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1145330Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1145880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1146300Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1146840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1147380Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1148110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1148350Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1149430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1149580Z     yield
2025-01-09T18:24:11.1150210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1150430Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1151000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1151140Z     yield
2025-01-09T18:24:11.1151770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1151930Z     return (yield)
2025-01-09T18:24:11.1152610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1152830Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1153600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1153740Z     yield
2025-01-09T18:24:11.1154350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1154840Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1155780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1155930Z     raise exc
2025-01-09T18:24:11.1156440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1156590Z     col.setup()
2025-01-09T18:24:11.1157110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1157410Z     self._request._fillfixtures()
2025-01-09T18:24:11.1157980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1158270Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1158870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1159120Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1159790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1160020Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1162860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1163080Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1163350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1163430Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1163640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1163690Z     raise exc
2025-01-09T18:24:11.1163890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1163970Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1169410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1169600Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1169790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1169960Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1170420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1170560Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1171930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1172220Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1173330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1173500Z     yield
2025-01-09T18:24:11.1174160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1174390Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1175230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1175330Z     yield
2025-01-09T18:24:11.1175580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1175630Z     return (yield)
2025-01-09T18:24:11.1176030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1176120Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1176410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1176640Z     yield
2025-01-09T18:24:11.1177090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1177160Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1177370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1177430Z     raise exc
2025-01-09T18:24:11.1177620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1177660Z     col.setup()
2025-01-09T18:24:11.1177870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1177940Z     self._request._fillfixtures()
2025-01-09T18:24:11.1178150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1178260Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1178480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1178570Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1178810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1178890Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1179090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1179140Z     raise exc
2025-01-09T18:24:11.1179330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1179400Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1179590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1179720Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1180180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1180350Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1180550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1180690Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1181030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1181120Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1181420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1181470Z     yield
2025-01-09T18:24:11.1181700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1181780Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1182000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1182040Z     yield
2025-01-09T18:24:11.1182270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1182330Z     return (yield)
2025-01-09T18:24:11.1182580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1182670Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1182940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1182990Z     yield
2025-01-09T18:24:11.1183210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1183370Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1183560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1183650Z     raise exc
2025-01-09T18:24:11.1183840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1183890Z     col.setup()
2025-01-09T18:24:11.1184090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1184150Z     self._request._fillfixtures()
2025-01-09T18:24:11.1184370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1184480Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1184700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1184800Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1185050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1185120Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1185320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1185370Z     raise exc
2025-01-09T18:24:11.1185570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1185640Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1185830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1185980Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1186190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1186350Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1186730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1186880Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1187150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1187240Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1187590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1187640Z     yield
2025-01-09T18:24:11.1187870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1187950Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1188160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1188210Z     yield
2025-01-09T18:24:11.1188460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1188510Z     return (yield)
2025-01-09T18:24:11.1188770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1188840Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1189130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1189180Z     yield
2025-01-09T18:24:11.1189410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1189480Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1189670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1189720Z     raise exc
2025-01-09T18:24:11.1190090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1190190Z     col.setup()
2025-01-09T18:24:11.1190390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1190460Z     self._request._fillfixtures()
2025-01-09T18:24:11.1190680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1200670Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1201590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1201860Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1202990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1203330Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1203910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1204080Z     raise exc
2025-01-09T18:24:11.1204840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1205050Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1205570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1205920Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1206440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1206860Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1207430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1207790Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1208530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1209870Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1211090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1211260Z     yield
2025-01-09T18:24:11.1212580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1213220Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1213780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1213930Z     yield
2025-01-09T18:24:11.1214560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1214720Z     return (yield)
2025-01-09T18:24:11.1215400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1215640Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1216730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1216910Z     yield
2025-01-09T18:24:11.1218030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1218200Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1218400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1218450Z     raise exc
2025-01-09T18:24:11.1218650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1218700Z     col.setup()
2025-01-09T18:24:11.1218890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1219210Z     self._request._fillfixtures()
2025-01-09T18:24:11.1219420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1219700Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1219930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1220020Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1220270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1220350Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1220550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1220590Z     raise exc
2025-01-09T18:24:11.1220780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1220850Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1221040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1221180Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1221370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1221540Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1221740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1221880Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1222150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1222250Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1222560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1222730Z     yield
2025-01-09T18:24:11.1222960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1223040Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1223260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1223440Z     yield
2025-01-09T18:24:11.1223680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1223730Z     return (yield)
2025-01-09T18:24:11.1223980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1224060Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1224340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1224400Z     yield
2025-01-09T18:24:11.1224620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1224710Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1224890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1224940Z     raise exc
2025-01-09T18:24:11.1225130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1225170Z     col.setup()
2025-01-09T18:24:11.1225360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1225420Z     self._request._fillfixtures()
2025-01-09T18:24:11.1225630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1225820Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1226050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1226190Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1226430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1226500Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1226700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1226750Z     raise exc
2025-01-09T18:24:11.1226940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1227020Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1227200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1227330Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1227530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1227680Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1227880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1228020Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1228290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1228380Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1228680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1228730Z     yield
2025-01-09T18:24:11.1228950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1229100Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1229310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1229360Z     yield
2025-01-09T18:24:11.1229580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1229630Z     return (yield)
2025-01-09T18:24:11.1229910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1229990Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1230260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1230320Z     yield
2025-01-09T18:24:11.1230540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1230620Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1230800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1230850Z     raise exc
2025-01-09T18:24:11.1231040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1231080Z     col.setup()
2025-01-09T18:24:11.1231270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1231340Z     self._request._fillfixtures()
2025-01-09T18:24:11.1231550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1231650Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1231870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1232270Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1232690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1232810Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1233010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1233110Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1233340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1233420Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1233620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1233670Z     raise exc
2025-01-09T18:24:11.1233860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1233930Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1234130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1234260Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1234450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1234610Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1234810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1234940Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1235210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1235300Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1235600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1235800Z     yield
2025-01-09T18:24:11.1236040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1236120Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1236320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1236370Z     yield
2025-01-09T18:24:11.1236650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1236710Z     return (yield)
2025-01-09T18:24:11.1236960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1237040Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1237310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1237370Z     yield
2025-01-09T18:24:11.1237590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1237660Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1237850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1237900Z     raise exc
2025-01-09T18:24:11.1238090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1238140Z     col.setup()
2025-01-09T18:24:11.1238330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1238390Z     self._request._fillfixtures()
2025-01-09T18:24:11.1238610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1238710Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1239190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1239350Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1239580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1239660Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1239860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1239960Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1240190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1240260Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1240460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1240510Z     raise exc
2025-01-09T18:24:11.1240710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1240780Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1240970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1241110Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1241300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1241450Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1241650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1241790Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1242060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1242150Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1242530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1242580Z     yield
2025-01-09T18:24:11.1242810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1242890Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1243130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1243180Z     yield
2025-01-09T18:24:11.1243410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1243460Z     return (yield)
2025-01-09T18:24:11.1243710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1243790Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1244070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1244120Z     yield
2025-01-09T18:24:11.1244350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1244420Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1244610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1244660Z     raise exc
2025-01-09T18:24:11.1244850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1244890Z     col.setup()
2025-01-09T18:24:11.1245330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1245410Z     self._request._fillfixtures()
2025-01-09T18:24:11.1245630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1245830Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1246170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1246270Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1246500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1246580Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1246770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1246880Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1247110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1247180Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1247380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1247430Z     raise exc
2025-01-09T18:24:11.1247630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1247700Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1247890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1248020Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1248220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1248380Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1248580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1248710Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1249080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1249170Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1249480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1249520Z     yield
2025-01-09T18:24:11.1249750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1249960Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1250170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1250210Z     yield
2025-01-09T18:24:11.1250430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1250490Z     return (yield)
2025-01-09T18:24:11.1250730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1250820Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1251090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1251140Z     yield
2025-01-09T18:24:11.1251360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1251430Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1251620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1251670Z     raise exc
2025-01-09T18:24:11.1251850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1251900Z     col.setup()
2025-01-09T18:24:11.1252090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1252230Z     self._request._fillfixtures()
2025-01-09T18:24:11.1252480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1252580Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1252800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1252890Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1253120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1254150Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1254820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1255110Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1255780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1256040Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1256590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1256750Z     raise exc
2025-01-09T18:24:11.1257290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1257480Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1258410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1258760Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1259290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1259700Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1260240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1261260Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1262240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1262490Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1263430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1263810Z     yield
2025-01-09T18:24:11.1264430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1264650Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1265230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1265390Z     yield
2025-01-09T18:24:11.1266030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1266220Z     return (yield)
2025-01-09T18:24:11.1266900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1267130Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1268140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1268330Z     yield
2025-01-09T18:24:11.1269000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1269220Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1270110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1270320Z     raise exc
2025-01-09T18:24:11.1270880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1271530Z     col.setup()
2025-01-09T18:24:11.1272090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1273290Z     self._request._fillfixtures()
2025-01-09T18:24:11.1273920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1274230Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1274830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1275280Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1275940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1276160Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1276690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1276870Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1277120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1277210Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1277440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1277490Z     raise exc
2025-01-09T18:24:11.1277720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1277790Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1277990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1278120Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1278320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1278940Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1279160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1279300Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1279570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1279750Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1280060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1280110Z     yield
2025-01-09T18:24:11.1280340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1280420Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1280630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1280680Z     yield
2025-01-09T18:24:11.1280910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1280960Z     return (yield)
2025-01-09T18:24:11.1281210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1281310Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1281600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1281640Z     yield
2025-01-09T18:24:11.1281870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1281940Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1282140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1282380Z     raise exc
2025-01-09T18:24:11.1282580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1282680Z     col.setup()
2025-01-09T18:24:11.1282870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1282950Z     self._request._fillfixtures()
2025-01-09T18:24:11.1283180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1283300Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1283530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1283630Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1283860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1283940Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1284140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1284240Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1284480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1284560Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1284770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1284830Z     raise exc
2025-01-09T18:24:11.1285030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1285090Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1285290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1285430Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1285880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1286040Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1286250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1286390Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1286700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1286800Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1287110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1287160Z     yield
2025-01-09T18:24:11.1287380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1287470Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1287690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1287740Z     yield
2025-01-09T18:24:11.1287970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1288020Z     return (yield)
2025-01-09T18:24:11.1288280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1288350Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1288640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1288690Z     yield
2025-01-09T18:24:11.1288910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1289980Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1290630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1290680Z     raise exc
2025-01-09T18:24:11.1290890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1291060Z     col.setup()
2025-01-09T18:24:11.1291330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1291420Z     self._request._fillfixtures()
2025-01-09T18:24:11.1291640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1291750Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1291970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1292070Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1292670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1292760Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1293190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1293310Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1293560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1293650Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1293850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1293900Z     raise exc
2025-01-09T18:24:11.1294100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1294160Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1294530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1294670Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1294860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1295020Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1295370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1295520Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1295800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1295900Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1296220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1296280Z     yield
2025-01-09T18:24:11.1296520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1296600Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1296820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1296870Z     yield
2025-01-09T18:24:11.1297110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1297160Z     return (yield)
2025-01-09T18:24:11.1297430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1297510Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1297800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1297940Z     yield
2025-01-09T18:24:11.1298170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1298270Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1298460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1298510Z     raise exc
2025-01-09T18:24:11.1298700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1298750Z     col.setup()
2025-01-09T18:24:11.1298940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1299000Z     self._request._fillfixtures()
2025-01-09T18:24:11.1299250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1299370Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1299610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1299710Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1299950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1300040Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1300240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1300340Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1300580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1300650Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1300860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1300900Z     raise exc
2025-01-09T18:24:11.1301100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1301290Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1301480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1301620Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1301810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1302000Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1302200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1302330Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1302610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1302720Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1303020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1303080Z     yield
2025-01-09T18:24:11.1303380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1303470Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1303670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1303730Z     yield
2025-01-09T18:24:11.1303950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1304000Z     return (yield)
2025-01-09T18:24:11.1304250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1304460Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1304750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1304850Z     yield
2025-01-09T18:24:11.1305100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1305170Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1305380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1305430Z     raise exc
2025-01-09T18:24:11.1305620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1305670Z     col.setup()
2025-01-09T18:24:11.1305870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1305940Z     self._request._fillfixtures()
2025-01-09T18:24:11.1306150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1306260Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1306480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1306580Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1306810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1306890Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1307100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1307200Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1307430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1307500Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1307720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1308010Z     raise exc
2025-01-09T18:24:11.1308200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1308270Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1308460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1308640Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1308830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1308990Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1309190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1309320Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1309590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1309680Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1309980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1310030Z     yield
2025-01-09T18:24:11.1310250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1310330Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1310560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1310620Z     yield
2025-01-09T18:24:11.1310850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1310890Z     return (yield)
2025-01-09T18:24:11.1311320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1311440Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1311720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1311760Z     yield
2025-01-09T18:24:11.1311990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1312060Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1312240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1312290Z     raise exc
2025-01-09T18:24:11.1312470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1312550Z     col.setup()
2025-01-09T18:24:11.1312730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1312800Z     self._request._fillfixtures()
2025-01-09T18:24:11.1313010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1313120Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1313330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1318050Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1318350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1318420Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1318620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1318740Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1318980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1319340Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1319550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1319590Z     raise exc
2025-01-09T18:24:11.1319800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1319950Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1320920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1321080Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1321420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1321610Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1321820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1321960Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1322240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1322340Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1322660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1322720Z     yield
2025-01-09T18:24:11.1322960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1323050Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1323250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1323300Z     yield
2025-01-09T18:24:11.1323730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1323910Z     return (yield)
2025-01-09T18:24:11.1324160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1324240Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1324520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1324570Z     yield
2025-01-09T18:24:11.1324790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1324860Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1325050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1325110Z     raise exc
2025-01-09T18:24:11.1325290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1325350Z     col.setup()
2025-01-09T18:24:11.1325700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1325790Z     self._request._fillfixtures()
2025-01-09T18:24:11.1326010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1326130Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1326340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1326440Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1326670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1326760Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1326950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1327190Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1327450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1327670Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1327870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-09T18:24:11.1328140Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-09T18:24:11.1328340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1328490Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1328690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1328840Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1329100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-09T18:24:11.1329150Z     return (yield)
2025-01-09T18:24:11.1329390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-09T18:24:11.1329520Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-09T18:24:11.1329740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-09T18:24:11.1329820Z     fixture_result = fixturefunc(**kwargs)
2025-01-09T18:24:11.1329990Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-09T18:24:11.1330040Z     sim.iterate(10)
2025-01-09T18:24:11.1330110Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:11.1330230Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:11.1330330Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1330440Z 
2025-01-09T18:24:11.1330840Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:11.1331090Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:11.1331260Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:11.1331480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:11.1331600Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:11.1331710Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:11.1331720Z 
2025-01-09T18:24:11.1331790Z     def initialize_transport_state(
2025-01-09T18:24:11.1331830Z         self,
2025-01-09T18:24:11.1331890Z         simulation_state,
2025-01-09T18:24:11.1331950Z         opacity_state,
2025-01-09T18:24:11.1332000Z         macro_atom_state,
2025-01-09T18:24:11.1332050Z         plasma,
2025-01-09T18:24:11.1332110Z         no_of_packets,
2025-01-09T18:24:11.1332160Z         no_of_virtual_packets=0,
2025-01-09T18:24:11.1333220Z         iteration=0,
2025-01-09T18:24:11.1333290Z     ):
2025-01-09T18:24:11.1333390Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:11.1333470Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:11.1333520Z         else:
2025-01-09T18:24:11.1333570Z             gamma_shape = (0, 0)
2025-01-09T18:24:11.1333620Z     
2025-01-09T18:24:11.1333730Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:11.1333800Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:11.1333860Z         )
2025-01-09T18:24:11.1333920Z     
2025-01-09T18:24:11.1334020Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:11.1334100Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:11.1334490Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1334640Z 
2025-01-09T18:24:11.1334740Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:11.1334900Z ______ test_last_interaction_properties[nu_packet_collection-nu_to_check] ______
2025-01-09T18:24:11.1334900Z 
2025-01-09T18:24:11.1335010Z expected = 'nu_packet_collection', obtained = 'nu_to_check'
2025-01-09T18:24:11.1335290Z request = <FixtureRequest for <Function test_last_interaction_properties[nu_packet_collection-nu_to_check]>>
2025-01-09T18:24:11.1335290Z 
2025-01-09T18:24:11.1335360Z     @pytest.mark.parametrize(
2025-01-09T18:24:11.1335420Z         "expected,obtained",
2025-01-09T18:24:11.1335470Z         [
2025-01-09T18:24:11.1335510Z             (
2025-01-09T18:24:11.1335580Z                 "interaction_type_in_use",
2025-01-09T18:24:11.1335650Z                 "interaction_type_to_check",
2025-01-09T18:24:11.1335700Z             ),
2025-01-09T18:24:11.1335740Z             (
2025-01-09T18:24:11.1335800Z                 "shell_id_in_use",
2025-01-09T18:24:11.1335860Z                 "shell_id_to_check",
2025-01-09T18:24:11.1335910Z             ),
2025-01-09T18:24:11.1335950Z             (
2025-01-09T18:24:11.1336000Z                 "r_in_use",
2025-01-09T18:24:11.1336060Z                 "r_to_check",
2025-01-09T18:24:11.1336100Z             ),
2025-01-09T18:24:11.1336180Z             ("nu_packet_collection", "nu_to_check"),
2025-01-09T18:24:11.1336220Z         ],
2025-01-09T18:24:11.1336270Z     )
2025-01-09T18:24:11.1336400Z     def test_last_interaction_properties(expected, obtained, request):
2025-01-09T18:24:11.1336490Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.1336500Z 
2025-01-09T18:24:11.1336670Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: 
2025-01-09T18:24:11.1336770Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1337050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1337190Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1337420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1337500Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1338000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1338100Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1339030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1339370Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1340320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1340440Z     raise exc
2025-01-09T18:24:11.1340670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1340740Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1340950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1341090Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1341290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1341460Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1341660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1341800Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1342050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:11.1342490Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1342780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1342830Z     yield
2025-01-09T18:24:11.1343090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:11.1343180Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1343720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1343780Z     yield
2025-01-09T18:24:11.1344010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:11.1344090Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:11.1344310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1344370Z     yield
2025-01-09T18:24:11.1344860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:11.1344920Z     return (yield)
2025-01-09T18:24:11.1347700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:11.1347800Z     return (yield)
2025-01-09T18:24:11.1348060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:11.1348120Z     raise e
2025-01-09T18:24:11.1348340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:11.1348390Z     item.runtest()
2025-01-09T18:24:11.1348580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:11.1348680Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:11.1349740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1351110Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1352020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1352170Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1352390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:11.1353030Z     result = testfunction(**testargs)
2025-01-09T18:24:11.1353330Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:11.1353420Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.1353640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1353740Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1353980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1354050Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1354260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1354350Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1354910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1355000Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1355190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1355240Z     raise exc
2025-01-09T18:24:11.1355430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1355500Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1355880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1356010Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1356260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1356430Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1356690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1357010Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1357320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:11.1357400Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1357690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1357740Z     yield
2025-01-09T18:24:11.1358010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:11.1358100Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1358410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1358450Z     yield
2025-01-09T18:24:11.1358700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:11.1358790Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:11.1358990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1359040Z     yield
2025-01-09T18:24:11.1359260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:11.1359490Z     return (yield)
2025-01-09T18:24:11.1359780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:11.1359970Z     return (yield)
2025-01-09T18:24:11.1360250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:11.1360290Z     raise e
2025-01-09T18:24:11.1360510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:11.1360570Z     item.runtest()
2025-01-09T18:24:11.1360760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:11.1360850Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:11.1361040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1361220Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1361420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1361560Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1361780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:11.1361840Z     result = testfunction(**testargs)
2025-01-09T18:24:11.1362120Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:11.1362210Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.1362420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1362520Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1362760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1362950Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1363150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1363300Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1363540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1363750Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1363950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1364000Z     raise exc
2025-01-09T18:24:11.1364190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1364250Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1364450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1364740Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1365070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1365590Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1365940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1366080Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1366330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:11.1366410Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1366680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1366730Z     yield
2025-01-09T18:24:11.1367220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:11.1367360Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1367670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1367730Z     yield
2025-01-09T18:24:11.1367950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:11.1368030Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:11.1368250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1368310Z     yield
2025-01-09T18:24:11.1368530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:11.1368580Z     return (yield)
2025-01-09T18:24:11.1368820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:11.1368890Z     return (yield)
2025-01-09T18:24:11.1369110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:11.1369150Z     raise e
2025-01-09T18:24:11.1369370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:11.1369420Z     item.runtest()
2025-01-09T18:24:11.1369620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:11.1369710Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:11.1369910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1370060Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1370380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1370980Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1371200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:11.1371540Z     result = testfunction(**testargs)
2025-01-09T18:24:11.1372500Z tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py:170: in test_last_interaction_properties
2025-01-09T18:24:11.1373210Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.1373920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1375210Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1375480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1375550Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1375750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1375860Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1376100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1376170Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1376370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1376420Z     raise exc
2025-01-09T18:24:11.1376620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1376680Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1376870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1377010Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1377190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1377540Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1377810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1377940Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1378460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1379090Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1380270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1380370Z     yield
2025-01-09T18:24:11.1380970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1381220Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1384930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1385260Z     yield
2025-01-09T18:24:11.1385940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1386030Z     return (yield)
2025-01-09T18:24:11.1386330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1386440Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1386720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1386770Z     yield
2025-01-09T18:24:11.1387010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1387100Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1387530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1390030Z     raise exc
2025-01-09T18:24:11.1390250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1390320Z     col.setup()
2025-01-09T18:24:11.1390550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1390620Z     self._request._fillfixtures()
2025-01-09T18:24:11.1390940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1391060Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1391320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1391420Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1391680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1392370Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1392590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1392840Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1393160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1393250Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1393450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1393490Z     raise exc
2025-01-09T18:24:11.1393700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1393780Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1394100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1394490Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1394760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1394930Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1395150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1395320Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1395610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1395710Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1396060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1396130Z     yield
2025-01-09T18:24:11.1396390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1396510Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1396740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1396800Z     yield
2025-01-09T18:24:11.1397050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1397200Z     return (yield)
2025-01-09T18:24:11.1397820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1398260Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1400360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1400550Z     yield
2025-01-09T18:24:11.1401230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1402110Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1402680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1402870Z     raise exc
2025-01-09T18:24:11.1403410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1403580Z     col.setup()
2025-01-09T18:24:11.1404240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1404450Z     self._request._fillfixtures()
2025-01-09T18:24:11.1405080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1405410Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1406010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1406300Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1406980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1407200Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1407810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1408090Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1408750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1408970Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1409520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1409660Z     raise exc
2025-01-09T18:24:11.1410210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1410730Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1411260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1411930Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1412450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1412880Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1413420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1413780Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1414520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1414780Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1416110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1416310Z     yield
2025-01-09T18:24:11.1417500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1417740Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1418320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1418470Z     yield
2025-01-09T18:24:11.1419330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1419500Z     return (yield)
2025-01-09T18:24:11.1420420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1420590Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1420890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1421290Z     yield
2025-01-09T18:24:11.1421530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1421610Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1421790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1421850Z     raise exc
2025-01-09T18:24:11.1422190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1422240Z     col.setup()
2025-01-09T18:24:11.1422440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1422520Z     self._request._fillfixtures()
2025-01-09T18:24:11.1422850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1423020Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1423270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1423370Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1423610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1423690Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1423900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1424000Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1424240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1424520Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1425010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1425250Z     raise exc
2025-01-09T18:24:11.1425450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1425580Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1425770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1425900Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1426100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1426270Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1426950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1428620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1428980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1429080Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1429670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1429740Z     yield
2025-01-09T18:24:11.1429980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1430060Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1430280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1430330Z     yield
2025-01-09T18:24:11.1430560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1430600Z     return (yield)
2025-01-09T18:24:11.1430860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1431130Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1431410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1431460Z     yield
2025-01-09T18:24:11.1431690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1431770Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1432020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1432080Z     raise exc
2025-01-09T18:24:11.1432280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1432330Z     col.setup()
2025-01-09T18:24:11.1432540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1432610Z     self._request._fillfixtures()
2025-01-09T18:24:11.1432830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1432940Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1433160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1433260Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1433500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1433570Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1433770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1433870Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1434110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1434280Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1434490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1434580Z     raise exc
2025-01-09T18:24:11.1434780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1434850Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1435050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1435200Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1435390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1435550Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1435750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1435890Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1436160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1436250Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1436560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1436610Z     yield
2025-01-09T18:24:11.1437400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1437500Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1437710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1437760Z     yield
2025-01-09T18:24:11.1437990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1438330Z     return (yield)
2025-01-09T18:24:11.1438590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1438670Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1438940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1438990Z     yield
2025-01-09T18:24:11.1439260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1439330Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1439520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1439570Z     raise exc
2025-01-09T18:24:11.1439750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1439800Z     col.setup()
2025-01-09T18:24:11.1439990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1440060Z     self._request._fillfixtures()
2025-01-09T18:24:11.1440270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1440380Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1440600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1440690Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1440930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1441000Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1441200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1441300Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1441700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1441810Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1442010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1442060Z     raise exc
2025-01-09T18:24:11.1442250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1442310Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1442500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1442640Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1442820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1442980Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1443180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1443320Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1443590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1443670Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1443980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1448060Z     yield
2025-01-09T18:24:11.1448290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1448370Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1448580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1448800Z     yield
2025-01-09T18:24:11.1449030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1449080Z     return (yield)
2025-01-09T18:24:11.1449340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1449420Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1449700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1449800Z     yield
2025-01-09T18:24:11.1450480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1450560Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1451600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1451680Z     raise exc
2025-01-09T18:24:11.1451880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1451940Z     col.setup()
2025-01-09T18:24:11.1452140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1452210Z     self._request._fillfixtures()
2025-01-09T18:24:11.1452420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1452540Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1453020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1453120Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1453350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1453430Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1453820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1453930Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1455550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1455650Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1455860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1455910Z     raise exc
2025-01-09T18:24:11.1456100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1456170Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1456360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1456500Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1456690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1457010Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1457220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1457350Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1457730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1457830Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1458300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1458360Z     yield
2025-01-09T18:24:11.1458670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1458750Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1459150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1459200Z     yield
2025-01-09T18:24:11.1460500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1460560Z     return (yield)
2025-01-09T18:24:11.1460820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1461100Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1461530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1461580Z     yield
2025-01-09T18:24:11.1461970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1462200Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1463280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1463360Z     raise exc
2025-01-09T18:24:11.1463550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1463600Z     col.setup()
2025-01-09T18:24:11.1463790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1463850Z     self._request._fillfixtures()
2025-01-09T18:24:11.1464070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1464180Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1464550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1464650Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1464890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1465130Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1465390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1465490Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1465720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1465800Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1466000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1466050Z     raise exc
2025-01-09T18:24:11.1466240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1466300Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1466490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1466630Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1466820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1467750Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1468010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1468150Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1468420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1468510Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1468920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1469860Z     yield
2025-01-09T18:24:11.1471050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1471280Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1471860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1472010Z     yield
2025-01-09T18:24:11.1472670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1473050Z     return (yield)
2025-01-09T18:24:11.1473730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1473960Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1475210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1475370Z     yield
2025-01-09T18:24:11.1475990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1476220Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1476720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1476880Z     raise exc
2025-01-09T18:24:11.1477610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1477770Z     col.setup()
2025-01-09T18:24:11.1478290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1478500Z     self._request._fillfixtures()
2025-01-09T18:24:11.1479120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1479410Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1480000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1480700Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1481510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1481910Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1482160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1482260Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1482510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1482590Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1482780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1482840Z     raise exc
2025-01-09T18:24:11.1483030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1483100Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1483300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1483430Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1483620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1483780Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1484050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1484190Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1484450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1484530Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1485400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1486330Z     yield
2025-01-09T18:24:11.1486970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1487110Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1487330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1487590Z     yield
2025-01-09T18:24:11.1488620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1488700Z     return (yield)
2025-01-09T18:24:11.1488960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1489040Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1489320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1489380Z     yield
2025-01-09T18:24:11.1489610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1489690Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1489900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1489950Z     raise exc
2025-01-09T18:24:11.1490130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1490180Z     col.setup()
2025-01-09T18:24:11.1490380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1490440Z     self._request._fillfixtures()
2025-01-09T18:24:11.1490660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1491060Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1491280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1491440Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1491680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1491760Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1491970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1492080Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1492380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1492460Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1492710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1492770Z     raise exc
2025-01-09T18:24:11.1492960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1493030Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1493220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1493350Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1493550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1493710Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1493920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1494060Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1494330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1494540Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1494850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1494890Z     yield
2025-01-09T18:24:11.1495120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1495250Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1495470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1495590Z     yield
2025-01-09T18:24:11.1495830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1495890Z     return (yield)
2025-01-09T18:24:11.1496140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1496220Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1496500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1496550Z     yield
2025-01-09T18:24:11.1496770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1496840Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1497030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1497090Z     raise exc
2025-01-09T18:24:11.1497280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1497330Z     col.setup()
2025-01-09T18:24:11.1497520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1497580Z     self._request._fillfixtures()
2025-01-09T18:24:11.1497900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1498180Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1498450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1498550Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1498780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1498860Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1499060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1499210Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1499440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1499680Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1499970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1500020Z     raise exc
2025-01-09T18:24:11.1500590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1500680Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1500870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1501000Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1501530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1501830Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1502120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1502260Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1502680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1502760Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1503060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1503220Z     yield
2025-01-09T18:24:11.1503450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1503660Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1503870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1503920Z     yield
2025-01-09T18:24:11.1504140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1504190Z     return (yield)
2025-01-09T18:24:11.1504440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1504520Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1504800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1504850Z     yield
2025-01-09T18:24:11.1505230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1505310Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1505490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1505540Z     raise exc
2025-01-09T18:24:11.1505730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1505770Z     col.setup()
2025-01-09T18:24:11.1506050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1506150Z     self._request._fillfixtures()
2025-01-09T18:24:11.1506540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1506650Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1506870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1506970Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1507200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1507280Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1507590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1507690Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1508040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1508120Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1508310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1508520Z     raise exc
2025-01-09T18:24:11.1508720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1508780Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1508980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1509100Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1509300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1509450Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1509750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1509890Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1510160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1510250Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1511540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1511790Z     yield
2025-01-09T18:24:11.1512980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1513240Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1514060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1514460Z     yield
2025-01-09T18:24:11.1515150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1515340Z     return (yield)
2025-01-09T18:24:11.1516030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1516260Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1517130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1517290Z     yield
2025-01-09T18:24:11.1518120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1518350Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1518880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1519560Z     raise exc
2025-01-09T18:24:11.1520070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1520420Z     col.setup()
2025-01-09T18:24:11.1520930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1521110Z     self._request._fillfixtures()
2025-01-09T18:24:11.1521690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1521970Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1522560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1522820Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1523450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1523660Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1524200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1524470Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1525110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1525320Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1525850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1526010Z     raise exc
2025-01-09T18:24:11.1526560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1526770Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1527280Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1527630Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1528150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1529360Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1529700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1529840Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1530950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1531660Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1532510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1532670Z     yield
2025-01-09T18:24:11.1533320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1533560Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1534130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1534290Z     yield
2025-01-09T18:24:11.1534910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1535100Z     return (yield)
2025-01-09T18:24:11.1535810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1536050Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1536820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1536960Z     yield
2025-01-09T18:24:11.1537580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1537780Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1539050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1539320Z     raise exc
2025-01-09T18:24:11.1539510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1539560Z     col.setup()
2025-01-09T18:24:11.1539760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1539830Z     self._request._fillfixtures()
2025-01-09T18:24:11.1540040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1540160Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1540370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1540470Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1540700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1540790Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1540990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1541090Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1541320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1541400Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1541600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1541650Z     raise exc
2025-01-09T18:24:11.1541850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1541910Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1542190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1542500Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1542700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1542850Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1543080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1543290Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1543560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1543650Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1543950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1544000Z     yield
2025-01-09T18:24:11.1544230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1544310Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1544520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1544570Z     yield
2025-01-09T18:24:11.1544790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1544850Z     return (yield)
2025-01-09T18:24:11.1545100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1545190Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1545460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1545510Z     yield
2025-01-09T18:24:11.1545830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1546070Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1546260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1546310Z     raise exc
2025-01-09T18:24:11.1546510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1546800Z     col.setup()
2025-01-09T18:24:11.1547550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1547730Z     self._request._fillfixtures()
2025-01-09T18:24:11.1548310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1548610Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1549190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1549480Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1550130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1550350Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1551400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1551680Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1552360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1552590Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1553140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1553300Z     raise exc
2025-01-09T18:24:11.1553830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1554540Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1555250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1555750Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1556320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1557020Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1558920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1560570Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1562290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1562530Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1562860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1562920Z     yield
2025-01-09T18:24:11.1563150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1563230Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1563450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1563510Z     yield
2025-01-09T18:24:11.1563740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1563790Z     return (yield)
2025-01-09T18:24:11.1564610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1564720Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1565320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1565450Z     yield
2025-01-09T18:24:11.1565700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1565780Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1565970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1566020Z     raise exc
2025-01-09T18:24:11.1566210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1566260Z     col.setup()
2025-01-09T18:24:11.1566450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1566520Z     self._request._fillfixtures()
2025-01-09T18:24:11.1566730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1566850Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1567060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1567160Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1567400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1567480Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1567670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1567780Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1568030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1568110Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1568320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1568490Z     raise exc
2025-01-09T18:24:11.1568680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1568750Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1568940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1569080Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1569320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1569480Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1569690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1569830Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1570100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1570190Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1570500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1570540Z     yield
2025-01-09T18:24:11.1570770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1570850Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1571050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1571110Z     yield
2025-01-09T18:24:11.1571330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1571380Z     return (yield)
2025-01-09T18:24:11.1571900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1572090Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1572420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1572470Z     yield
2025-01-09T18:24:11.1572690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1572770Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1572960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1573010Z     raise exc
2025-01-09T18:24:11.1573190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1573240Z     col.setup()
2025-01-09T18:24:11.1573420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1573490Z     self._request._fillfixtures()
2025-01-09T18:24:11.1573700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1573810Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1574040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1574140Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1574380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1574460Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1574650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1574700Z     raise exc
2025-01-09T18:24:11.1574890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1574960Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1575570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1575710Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1576080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1576300Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1576570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1576710Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1576990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1577080Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1577400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1577460Z     yield
2025-01-09T18:24:11.1577680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1577760Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1577960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1578010Z     yield
2025-01-09T18:24:11.1578230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1578300Z     return (yield)
2025-01-09T18:24:11.1578560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1578640Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1578910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1579150Z     yield
2025-01-09T18:24:11.1579390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1579540Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1579730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1579780Z     raise exc
2025-01-09T18:24:11.1579970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1580020Z     col.setup()
2025-01-09T18:24:11.1580210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1580270Z     self._request._fillfixtures()
2025-01-09T18:24:11.1580490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1580590Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1580810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1580910Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1581140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1581220Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1581410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1581460Z     raise exc
2025-01-09T18:24:11.1582960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1584780Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1585290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1585450Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1585660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1586100Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1586450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1586600Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1592500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1592760Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1593080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1593130Z     yield
2025-01-09T18:24:11.1593360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1593440Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1593650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1593700Z     yield
2025-01-09T18:24:11.1594120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1594180Z     return (yield)
2025-01-09T18:24:11.1594490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1594570Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1594850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1594900Z     yield
2025-01-09T18:24:11.1595130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1595210Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1595540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1595730Z     raise exc
2025-01-09T18:24:11.1595920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1595970Z     col.setup()
2025-01-09T18:24:11.1596150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1596220Z     self._request._fillfixtures()
2025-01-09T18:24:11.1596430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1596540Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1596750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1596850Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1597080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1597160Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1597360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1597410Z     raise exc
2025-01-09T18:24:11.1597600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1597670Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1597860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1597990Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1598170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1598330Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1598530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1598740Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1599020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1599120Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1599420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1599610Z     yield
2025-01-09T18:24:11.1599840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1599910Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1600120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1600170Z     yield
2025-01-09T18:24:11.1600400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1600450Z     return (yield)
2025-01-09T18:24:11.1600710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1600780Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1601060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1601120Z     yield
2025-01-09T18:24:11.1601350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1601420Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1601610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1601660Z     raise exc
2025-01-09T18:24:11.1601840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1601990Z     col.setup()
2025-01-09T18:24:11.1602210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1602280Z     self._request._fillfixtures()
2025-01-09T18:24:11.1602490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1602590Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1602810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1602900Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1603140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1603210Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1603410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1603460Z     raise exc
2025-01-09T18:24:11.1603670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1603740Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1603920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1604060Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1604240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1604400Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1604590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1604730Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1605430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1605730Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1606050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1606100Z     yield
2025-01-09T18:24:11.1606330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1606520Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1606850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1606900Z     yield
2025-01-09T18:24:11.1607470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1607580Z     return (yield)
2025-01-09T18:24:11.1608070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1608170Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1608890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1608960Z     yield
2025-01-09T18:24:11.1609190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1609270Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1610510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1610580Z     raise exc
2025-01-09T18:24:11.1614960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1615630Z     col.setup()
2025-01-09T18:24:11.1615860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1616160Z     self._request._fillfixtures()
2025-01-09T18:24:11.1616380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1616560Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1616780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1616880Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1617120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1617260Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1617580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1617640Z     raise exc
2025-01-09T18:24:11.1617830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1617900Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1618090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1618230Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1618410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1618570Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1618770Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1618910Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1619170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1619260Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1619560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1619820Z     yield
2025-01-09T18:24:11.1620540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1620890Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1622180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1622840Z     yield
2025-01-09T18:24:11.1623100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1623150Z     return (yield)
2025-01-09T18:24:11.1624650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1624750Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1625030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1625100Z     yield
2025-01-09T18:24:11.1625340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1625420Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1625610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1625660Z     raise exc
2025-01-09T18:24:11.1625860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1625930Z     col.setup()
2025-01-09T18:24:11.1626130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1626200Z     self._request._fillfixtures()
2025-01-09T18:24:11.1626420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1626530Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1626960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1627110Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1627350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1627420Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1627630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1627730Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1627960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1628040Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1628240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1628290Z     raise exc
2025-01-09T18:24:11.1628490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1628560Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1628750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1628890Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1629090Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1629250Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1629450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1629590Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1629860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1630030Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1630330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1630380Z     yield
2025-01-09T18:24:11.1630610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1630690Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1630930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1630980Z     yield
2025-01-09T18:24:11.1631210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1631260Z     return (yield)
2025-01-09T18:24:11.1631510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1631590Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1631870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1631920Z     yield
2025-01-09T18:24:11.1632150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1632220Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1632410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1632460Z     raise exc
2025-01-09T18:24:11.1632650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1632700Z     col.setup()
2025-01-09T18:24:11.1632890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1632970Z     self._request._fillfixtures()
2025-01-09T18:24:11.1633250Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1633360Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1633720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1633820Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1634070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1634140Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1634340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1634440Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1634690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1634760Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1634970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1635010Z     raise exc
2025-01-09T18:24:11.1635210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1635280Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1635470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1635610Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1635790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1635950Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1636140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1636280Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1636730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1636830Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1637130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1637180Z     yield
2025-01-09T18:24:11.1639790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1639920Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1640130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1640180Z     yield
2025-01-09T18:24:11.1640410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1640460Z     return (yield)
2025-01-09T18:24:11.1640720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1640800Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1641070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1641120Z     yield
2025-01-09T18:24:11.1641340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1641420Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1646790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1646870Z     raise exc
2025-01-09T18:24:11.1647070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1647130Z     col.setup()
2025-01-09T18:24:11.1647320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1647950Z     self._request._fillfixtures()
2025-01-09T18:24:11.1648950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1650360Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1650600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1650700Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1650950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1651030Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1651260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1651370Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1651610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1651700Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1651890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1651950Z     raise exc
2025-01-09T18:24:11.1652950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1653360Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1653700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1654170Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1654710Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1655140Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1655690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1656590Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1657330Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1659250Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1659610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1659810Z     yield
2025-01-09T18:24:11.1660050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1660130Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1660350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1660400Z     yield
2025-01-09T18:24:11.1660640Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1660720Z     return (yield)
2025-01-09T18:24:11.1660980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1661060Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1661350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1661410Z     yield
2025-01-09T18:24:11.1661630Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1661710Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1662190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1662260Z     raise exc
2025-01-09T18:24:11.1662440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1662670Z     col.setup()
2025-01-09T18:24:11.1662930Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1663020Z     self._request._fillfixtures()
2025-01-09T18:24:11.1663240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1663350Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1663570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1663660Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1663910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1663990Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1664800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1664950Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1665200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1665280Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1665480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1665540Z     raise exc
2025-01-09T18:24:11.1665730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1665810Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1666010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1666150Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1666350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1666750Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1666950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1667090Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1667360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1667510Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1667810Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1667860Z     yield
2025-01-09T18:24:11.1668100Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1668180Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1668400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1668450Z     yield
2025-01-09T18:24:11.1668690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1668740Z     return (yield)
2025-01-09T18:24:11.1668990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1669080Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1669370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1669430Z     yield
2025-01-09T18:24:11.1669650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1669730Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1670130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1670200Z     raise exc
2025-01-09T18:24:11.1670860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1670950Z     col.setup()
2025-01-09T18:24:11.1671170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1671240Z     self._request._fillfixtures()
2025-01-09T18:24:11.1671480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1671590Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1671820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1671910Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1672160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1672240Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1672460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1672580Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1672820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1672900Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1673110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1673170Z     raise exc
2025-01-09T18:24:11.1673360Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1673430Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1673620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1673750Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1674110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1674280Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1674480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1674620Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1674980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1675070Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1675380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1675420Z     yield
2025-01-09T18:24:11.1675660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1675740Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1675950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1675990Z     yield
2025-01-09T18:24:11.1676240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1676300Z     return (yield)
2025-01-09T18:24:11.1676550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1676650Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1676940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1677000Z     yield
2025-01-09T18:24:11.1677230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1677430Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1677780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1677850Z     raise exc
2025-01-09T18:24:11.1678040Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1678090Z     col.setup()
2025-01-09T18:24:11.1678300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1678370Z     self._request._fillfixtures()
2025-01-09T18:24:11.1678620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1678740Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1678960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1679060Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1679300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1679370Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1679570Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1679680Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1679940Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1680020Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1680210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1680270Z     raise exc
2025-01-09T18:24:11.1680480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1680550Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1680860Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1681020Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1681210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1681370Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1681750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1681890Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1682160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1682250Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1682560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1682620Z     yield
2025-01-09T18:24:11.1682850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1682920Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1683130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1683180Z     yield
2025-01-09T18:24:11.1683420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1683490Z     return (yield)
2025-01-09T18:24:11.1683760Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1683870Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1684150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1684300Z     yield
2025-01-09T18:24:11.1684540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1684690Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1684880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1684930Z     raise exc
2025-01-09T18:24:11.1685130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1685180Z     col.setup()
2025-01-09T18:24:11.1685380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1685460Z     self._request._fillfixtures()
2025-01-09T18:24:11.1685690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1685790Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1686210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1686310Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1686580Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1686670Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1687110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1687290Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1687550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1687630Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1688240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1688450Z     raise exc
2025-01-09T18:24:11.1688830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1689220Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1689420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1689560Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1689750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1689960Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1690160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1690770Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1691050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1691140Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1691460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1691510Z     yield
2025-01-09T18:24:11.1691740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1691820Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1692030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1692070Z     yield
2025-01-09T18:24:11.1692300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1692350Z     return (yield)
2025-01-09T18:24:11.1692620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1692830Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1693120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1693210Z     yield
2025-01-09T18:24:11.1693430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1693510Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1695490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1695560Z     raise exc
2025-01-09T18:24:11.1695750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1695800Z     col.setup()
2025-01-09T18:24:11.1695990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1696050Z     self._request._fillfixtures()
2025-01-09T18:24:11.1696310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1696430Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1696670Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1696770Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1697030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1697120Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1697320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1697430Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1697660Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1697730Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1698170Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1698220Z     raise exc
2025-01-09T18:24:11.1698440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1698520Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1698720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1698940Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1699140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1699300Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1699500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1699640Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1699910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1700020Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1703550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1703620Z     yield
2025-01-09T18:24:11.1703870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1703980Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1704210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1704260Z     yield
2025-01-09T18:24:11.1704490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1704820Z     return (yield)
2025-01-09T18:24:11.1708420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1708590Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1708870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1708920Z     yield
2025-01-09T18:24:11.1709140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1709220Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1709410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1709460Z     raise exc
2025-01-09T18:24:11.1709650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1709690Z     col.setup()
2025-01-09T18:24:11.1709890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1709950Z     self._request._fillfixtures()
2025-01-09T18:24:11.1710160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1710270Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1710500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1710590Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1710840Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1710920Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1711120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1711220Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1711470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1711680Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1711870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1711920Z     raise exc
2025-01-09T18:24:11.1712110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1712230Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1712430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1712590Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1712790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1713440Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1713690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1713830Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1714110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1714220Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1771350Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1771650Z     yield
2025-01-09T18:24:11.1771920Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1772000Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1772220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1772620Z     yield
2025-01-09T18:24:11.1772870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1773160Z     return (yield)
2025-01-09T18:24:11.1773410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1773500Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1773780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1773840Z     yield
2025-01-09T18:24:11.1774060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1774130Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1774320Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1774370Z     raise exc
2025-01-09T18:24:11.1774550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1774610Z     col.setup()
2025-01-09T18:24:11.1774800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1774860Z     self._request._fillfixtures()
2025-01-09T18:24:11.1775070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1775180Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1775400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1775500Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1775740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1775810Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1776010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1776230Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1776470Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1776540Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1776730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1776940Z     raise exc
2025-01-09T18:24:11.1777140Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1777210Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1777400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1777530Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1777720Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1777880Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1778080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1778220Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1778490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:85: in pytest_runtest_setup
2025-01-09T18:24:11.1778570Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1778880Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1778920Z     yield
2025-01-09T18:24:11.1779150Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:844: in pytest_runtest_setup
2025-01-09T18:24:11.1779230Z     yield from self._runtest_for(item, "setup")
2025-01-09T18:24:11.1779520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1779600Z     yield
2025-01-09T18:24:11.1779820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:873: in pytest_runtest_setup
2025-01-09T18:24:11.1779880Z     return (yield)
2025-01-09T18:24:11.1780120Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:82: in pytest_runtest_setup
2025-01-09T18:24:11.1780200Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1780480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1780520Z     yield
2025-01-09T18:24:11.1780740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:159: in pytest_runtest_setup
2025-01-09T18:24:11.1780820Z     item.session._setupstate.setup(item)
2025-01-09T18:24:11.1781000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:517: in setup
2025-01-09T18:24:11.1781050Z     raise exc
2025-01-09T18:24:11.1781240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:514: in setup
2025-01-09T18:24:11.1781290Z     col.setup()
2025-01-09T18:24:11.1781480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1635: in setup
2025-01-09T18:24:11.1781540Z     self._request._fillfixtures()
2025-01-09T18:24:11.1781750Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:686: in _fillfixtures
2025-01-09T18:24:11.1781860Z     item.funcargs[argname] = self.getfixturevalue(argname)
2025-01-09T18:24:11.1782080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1782170Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1782400Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1782540Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1782740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1782840Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1783070Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1783180Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1783370Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-09T18:24:11.1783500Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-09T18:24:11.1783690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1783850Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1784050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1784180Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1784420Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-09T18:24:11.1784460Z     return (yield)
2025-01-09T18:24:11.1784700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-09T18:24:11.1784800Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-09T18:24:11.1785020Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-09T18:24:11.1785090Z     fixture_result = fixturefunc(**kwargs)
2025-01-09T18:24:11.1785260Z tardis/transport/montecarlo/tests/conftest.py:43: in nb_simulation_verysimple
2025-01-09T18:24:11.1785320Z     sim.iterate(10)
2025-01-09T18:24:11.1785440Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:11.1785570Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:11.1785680Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1785690Z 
2025-01-09T18:24:11.1785900Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x163b39550>
2025-01-09T18:24:11.1786070Z simulation_state = <tardis.model.base.SimulationState object at 0x16368e240>
2025-01-09T18:24:11.1786260Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163ac4830>
2025-01-09T18:24:11.1786480Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1639722d0>
2025-01-09T18:24:11.1786600Z plasma = <tardis.plasma.base.BasePlasma object at 0x163973350>
2025-01-09T18:24:11.1786700Z no_of_packets = 10, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:11.1786710Z 
2025-01-09T18:24:11.1786770Z     def initialize_transport_state(
2025-01-09T18:24:11.1786820Z         self,
2025-01-09T18:24:11.1786880Z         simulation_state,
2025-01-09T18:24:11.1786930Z         opacity_state,
2025-01-09T18:24:11.1786980Z         macro_atom_state,
2025-01-09T18:24:11.1787030Z         plasma,
2025-01-09T18:24:11.1787080Z         no_of_packets,
2025-01-09T18:24:11.1787140Z         no_of_virtual_packets=0,
2025-01-09T18:24:11.1787190Z         iteration=0,
2025-01-09T18:24:11.1787240Z     ):
2025-01-09T18:24:11.1787330Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:11.1787410Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:11.1787450Z         else:
2025-01-09T18:24:11.1787510Z             gamma_shape = (0, 0)
2025-01-09T18:24:11.1787560Z     
2025-01-09T18:24:11.1787660Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:11.1787740Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:11.1787780Z         )
2025-01-09T18:24:11.1787830Z     
2025-01-09T18:24:11.1787930Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:11.1788220Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:11.1788620Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1788620Z 
2025-01-09T18:24:11.1788820Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:11.1789130Z _ test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker] _
2025-01-09T18:24:11.1789130Z 
2025-01-09T18:24:11.1789230Z expected = 'interaction_type_last_interaction_class'
2025-01-09T18:24:11.1789320Z obtained = 'last_interaction_type_rpacket_tracker'
2025-01-09T18:24:11.1789870Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker]>>
2025-01-09T18:24:11.1789870Z 
2025-01-09T18:24:11.1789940Z     @pytest.mark.parametrize(
2025-01-09T18:24:11.1790000Z         "expected,obtained",
2025-01-09T18:24:11.1790050Z         [
2025-01-09T18:24:11.1790100Z             (
2025-01-09T18:24:11.1790180Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:11.1790260Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:11.1790310Z             ),
2025-01-09T18:24:11.1790430Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:11.1790540Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:11.1790580Z         ],
2025-01-09T18:24:11.1790620Z     )
2025-01-09T18:24:11.1790750Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:11.1790840Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.1790850Z 
2025-01-09T18:24:11.1790980Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:11.1791260Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1791490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1791620Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1791850Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1791930Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1792130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1792230Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1792460Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1792530Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1792730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-09T18:24:11.1792870Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-09T18:24:11.1793060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1793220Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1793410Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1793550Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1793780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-09T18:24:11.1793830Z     return (yield)
2025-01-09T18:24:11.1794060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-09T18:24:11.1794170Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-09T18:24:11.1794390Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-09T18:24:11.1794520Z     fixture_result = fixturefunc(**kwargs)
2025-01-09T18:24:11.1794630Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:11.1794680Z     sim = run_tardis(
2025-01-09T18:24:11.1794750Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:11.1794810Z     simulation.run_convergence()
2025-01-09T18:24:11.1794900Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:11.1795040Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:11.1795110Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:11.1795230Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:11.1795320Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1795320Z 
2025-01-09T18:24:11.1795540Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:11.1795700Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:11.1795870Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:11.1796090Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:11.1796210Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:11.1796320Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:11.1796330Z 
2025-01-09T18:24:11.1796390Z     def initialize_transport_state(
2025-01-09T18:24:11.1796440Z         self,
2025-01-09T18:24:11.1796490Z         simulation_state,
2025-01-09T18:24:11.1796540Z         opacity_state,
2025-01-09T18:24:11.1796590Z         macro_atom_state,
2025-01-09T18:24:11.1796640Z         plasma,
2025-01-09T18:24:11.1796690Z         no_of_packets,
2025-01-09T18:24:11.1796750Z         no_of_virtual_packets=0,
2025-01-09T18:24:11.1796850Z         iteration=0,
2025-01-09T18:24:11.1796900Z     ):
2025-01-09T18:24:11.1797000Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:11.1797180Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:11.1797230Z         else:
2025-01-09T18:24:11.1797290Z             gamma_shape = (0, 0)
2025-01-09T18:24:11.1797330Z     
2025-01-09T18:24:11.1797430Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:11.1797510Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:11.1797550Z         )
2025-01-09T18:24:11.1797600Z     
2025-01-09T18:24:11.1797710Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:11.1797780Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:11.1798160Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1798170Z 
2025-01-09T18:24:11.1798260Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:11.1798390Z ----------------------------- Captured stdout call -----------------------------
2025-01-09T18:24:11.1798760Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:11.1799100Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:11.1799320Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:11.1799490Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:11.1799610Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:11.1799660Z 	
2025-01-09T18:24:11.1799780Z 	Starting iteration 1 of 3 ([1mbase.py[0m:444)
2025-01-09T18:24:11.1799900Z ------------------------------ Captured log call -------------------------------
2025-01-09T18:24:11.1800430Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:11.1800770Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:11.1800850Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:11.1800910Z 	Starting iteration 1 of 3
2025-01-09T18:24:11.1801120Z _ test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker] _
2025-01-09T18:24:11.1801240Z 
2025-01-09T18:24:11.1801330Z expected = 'shell_id_last_interaction_class'
2025-01-09T18:24:11.1801400Z obtained = 'shell_id_rpacket_tracker'
2025-01-09T18:24:11.1801680Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker]>>
2025-01-09T18:24:11.1801680Z 
2025-01-09T18:24:11.1801750Z     @pytest.mark.parametrize(
2025-01-09T18:24:11.1801810Z         "expected,obtained",
2025-01-09T18:24:11.1801860Z         [
2025-01-09T18:24:11.1801900Z             (
2025-01-09T18:24:11.1801990Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:11.1802080Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:11.1802130Z             ),
2025-01-09T18:24:11.1802250Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:11.1802350Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:11.1802400Z         ],
2025-01-09T18:24:11.1802440Z     )
2025-01-09T18:24:11.1802570Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:11.1802660Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.1802660Z 
2025-01-09T18:24:11.1802800Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:11.1802890Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1803110Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1803270Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1803540Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1803620Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1803820Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1803920Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1804160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1804240Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1804440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1804480Z     raise exc
2025-01-09T18:24:11.1804680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1804750Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1805180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1805320Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1805520Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1805680Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1805870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1806010Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1806260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:11.1806330Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1806680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1806730Z     yield
2025-01-09T18:24:11.1806990Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:11.1807070Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1807380Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1807460Z     yield
2025-01-09T18:24:11.1807680Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:11.1807760Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:11.1807960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1808020Z     yield
2025-01-09T18:24:11.1808240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:11.1808290Z     return (yield)
2025-01-09T18:24:11.1808510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:11.1808570Z     return (yield)
2025-01-09T18:24:11.1808790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:11.1808840Z     raise e
2025-01-09T18:24:11.1809060Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:11.1809110Z     item.runtest()
2025-01-09T18:24:11.1809450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:11.1809540Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:11.1809730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1809950Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1810210Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1810360Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1810600Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:11.1810670Z     result = testfunction(**testargs)
2025-01-09T18:24:11.1810890Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:11.1810980Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.1811190Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1811290Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1811530Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1811600Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1811800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1811900Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1812130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1812290Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1812490Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-09T18:24:11.1812780Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-09T18:24:11.1812970Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1813120Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1814690Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1816560Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1816870Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-09T18:24:11.1816920Z     return (yield)
2025-01-09T18:24:11.1817290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-09T18:24:11.1817580Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-09T18:24:11.1818220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-09T18:24:11.1818430Z     fixture_result = fixturefunc(**kwargs)
2025-01-09T18:24:11.1818550Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:11.1818600Z     sim = run_tardis(
2025-01-09T18:24:11.1818670Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:11.1818730Z     simulation.run_convergence()
2025-01-09T18:24:11.1818830Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:11.1818960Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:11.1819040Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:11.1819180Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:11.1820720Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1820730Z 
2025-01-09T18:24:11.1820960Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:11.1821130Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:11.1821300Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:11.1821520Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:11.1821900Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:11.1822070Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:11.1822080Z 
2025-01-09T18:24:11.1822140Z     def initialize_transport_state(
2025-01-09T18:24:11.1822190Z         self,
2025-01-09T18:24:11.1822240Z         simulation_state,
2025-01-09T18:24:11.1822290Z         opacity_state,
2025-01-09T18:24:11.1822350Z         macro_atom_state,
2025-01-09T18:24:11.1822400Z         plasma,
2025-01-09T18:24:11.1822450Z         no_of_packets,
2025-01-09T18:24:11.1822510Z         no_of_virtual_packets=0,
2025-01-09T18:24:11.1822560Z         iteration=0,
2025-01-09T18:24:11.1822600Z     ):
2025-01-09T18:24:11.1822700Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:11.1822770Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:11.1822820Z         else:
2025-01-09T18:24:11.1822880Z             gamma_shape = (0, 0)
2025-01-09T18:24:11.1822930Z     
2025-01-09T18:24:11.1823040Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:11.1823120Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:11.1823160Z         )
2025-01-09T18:24:11.1823210Z     
2025-01-09T18:24:11.1823310Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:11.1823380Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:11.1823770Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1823780Z 
2025-01-09T18:24:11.1823860Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:11.1824030Z _ test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker] _
2025-01-09T18:24:11.1824040Z 
2025-01-09T18:24:11.1824170Z expected = 'nu_from_packet_collection', obtained = 'nu_rpacket_tracker'
2025-01-09T18:24:11.1824510Z request = <FixtureRequest for <Function test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker]>>
2025-01-09T18:24:11.1824510Z 
2025-01-09T18:24:11.1824580Z     @pytest.mark.parametrize(
2025-01-09T18:24:11.1824650Z         "expected,obtained",
2025-01-09T18:24:11.1824690Z         [
2025-01-09T18:24:11.1824730Z             (
2025-01-09T18:24:11.1824820Z                 "interaction_type_last_interaction_class",
2025-01-09T18:24:11.1824930Z                 "last_interaction_type_rpacket_tracker",
2025-01-09T18:24:11.1824980Z             ),
2025-01-09T18:24:11.1825100Z             ("shell_id_last_interaction_class", "shell_id_rpacket_tracker"),
2025-01-09T18:24:11.1825200Z             ("nu_from_packet_collection", "nu_rpacket_tracker"),
2025-01-09T18:24:11.1825250Z         ],
2025-01-09T18:24:11.1825290Z     )
2025-01-09T18:24:11.1825420Z     def test_rpacket_tracker_properties(expected, obtained, request):
2025-01-09T18:24:11.1825520Z >       expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.1825520Z 
2025-01-09T18:24:11.1825650Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: 
2025-01-09T18:24:11.1825740Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1825960Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1826050Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1826290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1826360Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1826560Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1826660Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1826890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1827020Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1827340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1827390Z     raise exc
2025-01-09T18:24:11.1827590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1827680Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1827910Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1828050Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1828240Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1828400Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1828590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1828730Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1828980Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:11.1829060Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1829340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1829380Z     yield
2025-01-09T18:24:11.1829650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:11.1829730Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1830030Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1830080Z     yield
2025-01-09T18:24:11.1830300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:11.1830770Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:11.1831010Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1831060Z     yield
2025-01-09T18:24:11.1831300Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:11.1831520Z     return (yield)
2025-01-09T18:24:11.1831740Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:11.1831800Z     return (yield)
2025-01-09T18:24:11.1832050Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:11.1832120Z     raise e
2025-01-09T18:24:11.1832340Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:11.1832400Z     item.runtest()
2025-01-09T18:24:11.1832590Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:11.1832700Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:11.1832900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1833050Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1833270Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1833430Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1833650Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:11.1833710Z     result = testfunction(**testargs)
2025-01-09T18:24:11.1833960Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:11.1834170Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.1834430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1834530Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1834780Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1834880Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1835080Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1835200Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1835430Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1835510Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1835700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1056: in execute
2025-01-09T18:24:11.1835750Z     raise exc
2025-01-09T18:24:11.1835950Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:341: in from_call
2025-01-09T18:24:11.1836020Z     result: Optional[TResult] = func()
2025-01-09T18:24:11.1836220Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:241: in <lambda>
2025-01-09T18:24:11.1836360Z     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
2025-01-09T18:24:11.1836550Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1836700Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1836900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1837040Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1837290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:87: in pytest_runtest_call
2025-01-09T18:24:11.1837480Z     yield from thread_exception_runtest_hook()
2025-01-09T18:24:11.1837790Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/threadexception.py:63: in thread_exception_runtest_hook
2025-01-09T18:24:11.1837850Z     yield
2025-01-09T18:24:11.1838130Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:90: in pytest_runtest_call
2025-01-09T18:24:11.1838290Z     yield from unraisable_exception_runtest_hook()
2025-01-09T18:24:11.1838610Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/unraisableexception.py:65: in unraisable_exception_runtest_hook
2025-01-09T18:24:11.1838680Z     yield
2025-01-09T18:24:11.1838900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:850: in pytest_runtest_call
2025-01-09T18:24:11.1838970Z     yield from self._runtest_for(item, "call")
2025-01-09T18:24:11.1839180Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/logging.py:833: in _runtest_for
2025-01-09T18:24:11.1839230Z     yield
2025-01-09T18:24:11.1839450Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/capture.py:878: in pytest_runtest_call
2025-01-09T18:24:11.1839500Z     return (yield)
2025-01-09T18:24:11.1839730Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/skipping.py:257: in pytest_runtest_call
2025-01-09T18:24:11.1839780Z     return (yield)
2025-01-09T18:24:11.1840000Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:183: in pytest_runtest_call
2025-01-09T18:24:11.1840040Z     raise e
2025-01-09T18:24:11.1840260Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/runner.py:173: in pytest_runtest_call
2025-01-09T18:24:11.1840310Z     item.runtest()
2025-01-09T18:24:11.1840510Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:1632: in runtest
2025-01-09T18:24:11.1840700Z     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
2025-01-09T18:24:11.1840900Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1841110Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1841310Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1841450Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1841700Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/python.py:162: in pytest_pyfunc_call
2025-01-09T18:24:11.1841780Z     result = testfunction(**testargs)
2025-01-09T18:24:11.1841990Z tardis/transport/montecarlo/tests/test_rpacket_tracker.py:130: in test_rpacket_tracker_properties
2025-01-09T18:24:11.1842080Z     expected = request.getfixturevalue(expected)
2025-01-09T18:24:11.1842290Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:521: in getfixturevalue
2025-01-09T18:24:11.1842390Z     fixturedef = self._get_active_fixturedef(argname)
2025-01-09T18:24:11.1842620Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1842700Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1842890Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1038: in execute
2025-01-09T18:24:11.1842990Z     fixturedef = request._get_active_fixturedef(argname)
2025-01-09T18:24:11.1843230Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:606: in _get_active_fixturedef
2025-01-09T18:24:11.1843300Z     fixturedef.execute(request=subrequest)
2025-01-09T18:24:11.1843500Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1076: in execute
2025-01-09T18:24:11.1843630Z     result = ihook.pytest_fixture_setup(fixturedef=self, request=request)
2025-01-09T18:24:11.1843830Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__
2025-01-09T18:24:11.1844240Z     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
2025-01-09T18:24:11.1844440Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec
2025-01-09T18:24:11.1844570Z     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
2025-01-09T18:24:11.1844800Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup
2025-01-09T18:24:11.1844930Z     return (yield)
2025-01-09T18:24:11.1845160Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:1125: in pytest_fixture_setup
2025-01-09T18:24:11.1845270Z     result = call_fixture_func(fixturefunc, request, kwargs)
2025-01-09T18:24:11.1845480Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/_pytest/fixtures.py:887: in call_fixture_func
2025-01-09T18:24:11.1845570Z     fixture_result = fixturefunc(**kwargs)
2025-01-09T18:24:11.1845670Z tardis/conftest.py:269: in simulation_rpacket_tracking
2025-01-09T18:24:11.1845720Z     sim = run_tardis(
2025-01-09T18:24:11.1845790Z tardis/base.py:114: in run_tardis
2025-01-09T18:24:11.1845860Z     simulation.run_convergence()
2025-01-09T18:24:11.1845950Z tardis/simulation/base.py:531: in run_convergence
2025-01-09T18:24:11.1846060Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:11.1846140Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:11.1846260Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:11.1846360Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1846360Z 
2025-01-09T18:24:11.1846570Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x14a031790>
2025-01-09T18:24:11.1846740Z simulation_state = <tardis.model.base.SimulationState object at 0x1786b2ba0>
2025-01-09T18:24:11.1847090Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x163918770>
2025-01-09T18:24:11.1847370Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x1638d9340>
2025-01-09T18:24:11.1847490Z plasma = <tardis.plasma.base.BasePlasma object at 0x15c584770>
2025-01-09T18:24:11.1847600Z no_of_packets = 4000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:11.1847610Z 
2025-01-09T18:24:11.1847680Z     def initialize_transport_state(
2025-01-09T18:24:11.1847730Z         self,
2025-01-09T18:24:11.1847790Z         simulation_state,
2025-01-09T18:24:11.1847840Z         opacity_state,
2025-01-09T18:24:11.1847890Z         macro_atom_state,
2025-01-09T18:24:11.1847930Z         plasma,
2025-01-09T18:24:11.1847980Z         no_of_packets,
2025-01-09T18:24:11.1848050Z         no_of_virtual_packets=0,
2025-01-09T18:24:11.1848100Z         iteration=0,
2025-01-09T18:24:11.1848150Z     ):
2025-01-09T18:24:11.1848240Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:11.1848320Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:11.1848370Z         else:
2025-01-09T18:24:11.1853100Z             gamma_shape = (0, 0)
2025-01-09T18:24:11.1853240Z     
2025-01-09T18:24:11.1853360Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:11.1853440Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:11.1853480Z         )
2025-01-09T18:24:11.1853530Z     
2025-01-09T18:24:11.1853640Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:11.1853720Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:11.1854100Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1854110Z 
2025-01-09T18:24:11.1854210Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:11.1854330Z ______________________ test_montecarlo_main_loop_weighted ______________________
2025-01-09T18:24:11.1854660Z 
2025-01-09T18:24:11.1855200Z montecarlo_main_loop_config = {'tardis_config_version': 'v1.0', 'supernova': {'luminosity_requested': <Quantity 1.07688e+36 W>, 'time_explosion': <Q...able_biasing': False}, 'method': 'virtual', 'integrated': {'points': 1000, 'interpolate_shells': 0, 'compute': 'CPU'}}}
2025-01-09T18:24:11.1855420Z regression_data = <tardis.tests.fixtures.regression_data.RegressionData object at 0x149407470>
2025-01-09T18:24:11.1855790Z atomic_dataset = <Atomic Data UUID=6f7b09e887a311e7a06b246e96350010 MD5=864f1753714343c41f99cb065710cace Lines=29224 Levels=24806>
2025-01-09T18:24:11.1856170Z simple_weighted_packet_source = <tardis.transport.montecarlo.weighted_packet_source.BlackBodyWeightedSource object at 0x1529c0a70>
2025-01-09T18:24:11.1856170Z 
2025-01-09T18:24:11.1856250Z     def test_montecarlo_main_loop_weighted(
2025-01-09T18:24:11.1856320Z         montecarlo_main_loop_config,
2025-01-09T18:24:11.1856380Z         regression_data,
2025-01-09T18:24:11.1856430Z         atomic_dataset,
2025-01-09T18:24:11.1856500Z         simple_weighted_packet_source,
2025-01-09T18:24:11.1856540Z     ):
2025-01-09T18:24:11.1856630Z         atomic_dataset = deepcopy(atomic_dataset)
2025-01-09T18:24:11.1856780Z         montecarlo_main_loop_simulation_weighted = Simulation.from_config(
2025-01-09T18:24:11.1856840Z             montecarlo_main_loop_config,
2025-01-09T18:24:11.1856910Z             atom_data=atomic_dataset,
2025-01-09T18:24:11.1856970Z             virtual_packet_logging=False,
2025-01-09T18:24:11.1857040Z             legacy_mode_enabled=True,
2025-01-09T18:24:11.1857080Z         )
2025-01-09T18:24:11.1857200Z         montecarlo_main_loop_simulation_weighted.packet_source = (
2025-01-09T18:24:11.1857270Z             simple_weighted_packet_source
2025-01-09T18:24:11.1857310Z         )
2025-01-09T18:24:11.1857430Z         montecarlo_main_loop_simulation_weighted.run_convergence()
2025-01-09T18:24:11.1857650Z >       montecarlo_main_loop_simulation_weighted.run_final()
2025-01-09T18:24:11.1857660Z 
2025-01-09T18:24:11.1857840Z tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py:26: 
2025-01-09T18:24:11.1858090Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1858170Z tardis/simulation/base.py:558: in run_final
2025-01-09T18:24:11.1858280Z     emitted_luminosity, v_packets_energy_hist = self.iterate(
2025-01-09T18:24:11.1858350Z tardis/simulation/base.py:462: in iterate
2025-01-09T18:24:11.1858480Z     transport_state = self.transport.initialize_transport_state(
2025-01-09T18:24:11.1858570Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-01-09T18:24:11.1858570Z 
2025-01-09T18:24:11.1858780Z self = <tardis.transport.montecarlo.base.MonteCarloTransportSolver object at 0x15293c350>
2025-01-09T18:24:11.1858940Z simulation_state = <tardis.model.base.SimulationState object at 0x1528f17f0>
2025-01-09T18:24:11.1859110Z opacity_state = <tardis.opacities.opacity_state.OpacityState object at 0x1494732f0>
2025-01-09T18:24:11.1859330Z macro_atom_state = <tardis.opacities.macro_atom.macroatom_state.MacroAtomState object at 0x149472780>
2025-01-09T18:24:11.1859460Z plasma = <tardis.plasma.base.BasePlasma object at 0x1529c1f10>
2025-01-09T18:24:11.1859580Z no_of_packets = 100000, no_of_virtual_packets = 0, iteration = 0
2025-01-09T18:24:11.1859580Z 
2025-01-09T18:24:11.1859650Z     def initialize_transport_state(
2025-01-09T18:24:11.1859700Z         self,
2025-01-09T18:24:11.1859750Z         simulation_state,
2025-01-09T18:24:11.1859800Z         opacity_state,
2025-01-09T18:24:11.1859860Z         macro_atom_state,
2025-01-09T18:24:11.1859900Z         plasma,
2025-01-09T18:24:11.1859960Z         no_of_packets,
2025-01-09T18:24:11.1860020Z         no_of_virtual_packets=0,
2025-01-09T18:24:11.1860080Z         iteration=0,
2025-01-09T18:24:11.1860120Z     ):
2025-01-09T18:24:11.1860220Z         if not plasma.continuum_interaction_species.empty:
2025-01-09T18:24:11.1860370Z             gamma_shape = plasma.gamma.shape
2025-01-09T18:24:11.1860420Z         else:
2025-01-09T18:24:11.1860480Z             gamma_shape = (0, 0)
2025-01-09T18:24:11.1860530Z     
2025-01-09T18:24:11.1860630Z         packet_collection = self.packet_source.create_packets(
2025-01-09T18:24:11.1860710Z             no_of_packets, seed_offset=iteration
2025-01-09T18:24:11.1860750Z         )
2025-01-09T18:24:11.1860800Z     
2025-01-09T18:24:11.1861030Z         geometry_state = simulation_state.geometry.to_numba()
2025-01-09T18:24:11.1861110Z >       opacity_state_instance = OpacityState()
2025-01-09T18:24:11.1861490Z E       TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1861500Z 
2025-01-09T18:24:11.1861590Z tardis/transport/montecarlo/base.py:117: TypeError
2025-01-09T18:24:11.1861720Z ----------------------------- Captured stdout call -----------------------------
2025-01-09T18:24:11.1862080Z [[1mtardis.io.model.parse_density_configuration[0m][[1;33mWARNING[0m]  
2025-01-09T18:24:11.1862410Z 	Number of density points larger than number of shells. Assuming inner point irrelevant ([1mparse_density_configuration.py[0m:114)
2025-01-09T18:24:11.1862560Z [[1mtardis.model.matter.decay[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:11.1862720Z 	Decaying abundances for 1123200.0 seconds ([1mdecay.py[0m:101)
2025-01-09T18:24:11.1862850Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:11.1862900Z 	
2025-01-09T18:24:11.1862970Z 	Simulation finished in 0 iterations 
2025-01-09T18:24:11.1863030Z 	Simulation took 0.00 s
2025-01-09T18:24:11.1863100Z  ([1mbase.py[0m:542)
2025-01-09T18:24:11.1863230Z [[1mtardis.simulation.base[0m][[1;37mINFO[0m   ]  
2025-01-09T18:24:11.1863270Z 	
2025-01-09T18:24:11.1863380Z 	Starting iteration 1 of 1 ([1mbase.py[0m:444)
2025-01-09T18:24:11.1863610Z ------------------------------ Captured log call -------------------------------
2025-01-09T18:24:11.1864010Z WARNING  tardis.io.model.parse_density_configuration:parse_density_configuration.py:114 Number of density points larger than number of shells. Assuming inner point irrelevant
2025-01-09T18:24:11.1864220Z INFO     tardis.model.matter.decay:decay.py:101 Decaying abundances for 1123200.0 seconds
2025-01-09T18:24:11.1864300Z INFO     tardis.simulation.base:base.py:542 
2025-01-09T18:24:11.1864370Z 	Simulation finished in 0 iterations 
2025-01-09T18:24:11.1864430Z 	Simulation took 0.00 s
2025-01-09T18:24:11.1864440Z 
2025-01-09T18:24:11.1864510Z INFO     tardis.simulation.base:base.py:444 
2025-01-09T18:24:11.1864580Z 	Starting iteration 1 of 1
2025-01-09T18:24:11.1864670Z =============================== warnings summary ===============================
2025-01-09T18:24:11.1864750Z tardis/io/configuration/config_validator.py:6
2025-01-09T18:24:11.1864830Z tardis/io/configuration/config_validator.py:6
2025-01-09T18:24:11.1865080Z   /Users/runner/work/tardis/tardis/tardis/io/configuration/config_validator.py:6: DeprecationWarning:
2025-01-09T18:24:11.1865130Z   
2025-01-09T18:24:11.1866010Z   jsonschema.RefResolver is deprecated as of v4.18.0, in favor of the https://github.com/python-jsonschema/referencing library, which provides more compliant referencing behavior as well as more flexible APIs for customization. A future release will remove RefResolver. Please file a feature request (on referencing) if you are missing an API for the kind of customization you need.
2025-01-09T18:24:11.1866020Z 
2025-01-09T18:24:11.1866200Z ../../../micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22
2025-01-09T18:24:11.1866490Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/jupyter_client/connect.py:22: DeprecationWarning:
2025-01-09T18:24:11.1866530Z   
2025-01-09T18:24:11.1866640Z   Jupyter is migrating its paths to use standard platformdirs
2025-01-09T18:24:11.1866770Z   given by the platformdirs library.  To remove this warning and
2025-01-09T18:24:11.1866970Z   see the appropriate new directories, set the environment variable
2025-01-09T18:24:11.1867080Z   `JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.
2025-01-09T18:24:11.1867200Z   The use of platformdirs will be the default in `jupyter_core` v6
2025-01-09T18:24:11.1867210Z 
2025-01-09T18:24:11.1872730Z tardis/io/tests/test_HDFWriter.py::test_multi_index_write
2025-01-09T18:24:11.1872940Z   /Users/runner/work/tardis/tardis/tardis/io/util.py:276: PerformanceWarning:
2025-01-09T18:24:11.1873240Z   
2025-01-09T18:24:11.1873280Z   
2025-01-09T18:24:11.1873440Z   your performance may suffer as PyTables will pickle object types that it cannot
2025-01-09T18:24:11.1873650Z   map directly to c-types [inferred_type->mixed,key->block0_values] [items->Index([0], dtype='int64')]
2025-01-09T18:24:11.1873650Z 
2025-01-09T18:24:11.1873820Z tardis/io/tests/test_model_reader.py::test_read_cmfgen_isotope_abundances
2025-01-09T18:24:11.1873990Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-09T18:24:11.1874170Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-09T18:24:11.1874320Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-09T18:24:11.1874570Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:82: DeprecationWarning:
2025-01-09T18:24:11.1874620Z   
2025-01-09T18:24:11.1874710Z   The current CMFGEN model parser is deprecated
2025-01-09T18:24:11.1874710Z 
2025-01-09T18:24:11.1874790Z tardis/io/tests/test_model_reader.py: 1 warning
2025-01-09T18:24:11.1874930Z tardis/plasma/tests/test_tardis_model_density_config.py: 9 warnings
2025-01-09T18:24:11.1875170Z   /Users/runner/work/tardis/tardis/tardis/io/model/readers/cmfgen_deprecated.py:40: DeprecationWarning:
2025-01-09T18:24:11.1875220Z   
2025-01-09T18:24:11.1875300Z   The current CMFGEN model parser is deprecated
2025-01-09T18:24:11.1875310Z 
2025-01-09T18:24:11.1875620Z tardis/model/tests/test_csvy_model.py::test_compare_models[model_full]
2025-01-09T18:24:11.1875760Z tardis/model/tests/test_csvy_model.py::test_compare_models[radiative]
2025-01-09T18:24:11.1876000Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-09T18:24:11.1876180Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-09T18:24:11.1876320Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-09T18:24:11.1876530Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:50: DeprecationWarning:
2025-01-09T18:24:11.1876580Z   
2025-01-09T18:24:11.1876660Z   v_inner_boundary < 0, assuming default value
2025-01-09T18:24:11.1876660Z 
2025-01-09T18:24:11.1876800Z tardis/model/tests/test_csvy_model.py::test_compare_models[model_full]
2025-01-09T18:24:11.1876940Z tardis/model/tests/test_csvy_model.py::test_compare_models[radiative]
2025-01-09T18:24:11.1877110Z tardis/plasma/tests/test_tardis_model_density_config.py::test_electron_densities
2025-01-09T18:24:11.1877290Z tardis/plasma/tests/test_tardis_model_density_config.py::test_isotope_number_densities
2025-01-09T18:24:11.1877430Z tardis/plasma/tests/test_tardis_model_density_config.py::test_t_rad
2025-01-09T18:24:11.1877640Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:61: DeprecationWarning:
2025-01-09T18:24:11.1877690Z   
2025-01-09T18:24:11.1877760Z   v_outer_boundary < 0, assuming default value
2025-01-09T18:24:11.1877770Z 
2025-01-09T18:24:11.1878120Z tardis/plasma/equilibrium/tests/test_level_populations.py::TestLevelPopulationSolver::test_solve[collisional_rate_solver0-radiative_transitions0]
2025-01-09T18:24:11.1878360Z   /Users/runner/work/tardis/tardis/tardis/plasma/equilibrium/level_populations.py:65: FutureWarning:
2025-01-09T18:24:11.1878410Z   
2025-01-09T18:24:11.1878620Z   A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.
2025-01-09T18:24:11.1878970Z   The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.
2025-01-09T18:24:11.1879230Z   
2025-01-09T18:24:11.1879650Z   For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.
2025-01-09T18:24:11.1879650Z 
2025-01-09T18:24:11.1879820Z tardis/plasma/tests/test_complete_plasmas.py: 20 warnings
2025-01-09T18:24:11.1880040Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-09T18:24:11.1880080Z   
2025-01-09T18:24:11.1880150Z   Property "atomic_mass" not found
2025-01-09T18:24:11.1880160Z 
2025-01-09T18:24:11.1880500Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blues_norm_factor]
2025-01-09T18:24:11.1880800Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blues_norm_factor]
2025-01-09T18:24:11.1881020Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-09T18:24:11.1881070Z   
2025-01-09T18:24:11.1881140Z   Property "j_blues_norm_factor" not found
2025-01-09T18:24:11.1881150Z 
2025-01-09T18:24:11.1881470Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-j_blue_estimator]
2025-01-09T18:24:11.1881820Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-j_blue_estimator]
2025-01-09T18:24:11.1882050Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-09T18:24:11.1882100Z   
2025-01-09T18:24:11.1882180Z   Property "j_blue_estimator" not found
2025-01-09T18:24:11.1882190Z 
2025-01-09T18:24:11.1882740Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-volume]
2025-01-09T18:24:11.1883060Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-volume]
2025-01-09T18:24:11.1883280Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-09T18:24:11.1883330Z   
2025-01-09T18:24:11.1883390Z   Property "volume" not found
2025-01-09T18:24:11.1883400Z 
2025-01-09T18:24:11.1883700Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-w_epsilon:1e-10-r_inner]
2025-01-09T18:24:11.1883970Z tardis/plasma/tests/test_complete_plasmas.py::TestPlasma::test_plasma_properties[radiative_rates_type:detailed-r_inner]
2025-01-09T18:24:11.1884190Z   /Users/runner/work/tardis/tardis/tardis/plasma/tests/test_complete_plasmas.py:197: UserWarning:
2025-01-09T18:24:11.1884240Z   
2025-01-09T18:24:11.1884310Z   Property "r_inner" not found
2025-01-09T18:24:11.1884310Z 
2025-01-09T18:24:11.1884480Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3750]
2025-01-09T18:24:11.1884640Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3850]
2025-01-09T18:24:11.1884800Z tardis/plasma/tests/test_plasma_vboundary.py::test_plasma_vboundary[2900-3900]
2025-01-09T18:24:11.1885000Z   /Users/runner/work/tardis/tardis/tardis/model/geometry/radial1d.py:71: UserWarning:
2025-01-09T18:24:11.1885040Z   
2025-01-09T18:24:11.1885200Z   Requesting inner boundary below inner shell. Extrapolating the inner cell
2025-01-09T18:24:11.1885200Z 
2025-01-09T18:24:11.1885470Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-09T18:24:11.1885740Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-09T18:24:11.1886010Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-09T18:24:11.1886380Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-09T18:24:11.1886660Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-09T18:24:11.1886930Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-09T18:24:11.1887260Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-09T18:24:11.1887310Z   
2025-01-09T18:24:11.1887460Z   Passing unrecognized arguments to super(Checkbox).__init__(icon='lock').
2025-01-09T18:24:11.1887600Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-09T18:24:11.1887790Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-09T18:24:11.1887790Z 
2025-01-09T18:24:11.1888070Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-09T18:24:11.1888340Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-09T18:24:11.1888620Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-09T18:24:11.1888670Z   
2025-01-09T18:24:11.1888850Z   Passing unrecognized arguments to super(FloatText).__init__(min=0).
2025-01-09T18:24:11.1889000Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-09T18:24:11.1889180Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-09T18:24:11.1889180Z 
2025-01-09T18:24:11.1889460Z tardis/visualization/widgets/tests/test_custom_abundance.py::TestCustomAbundanceWidget::test_update_input_item_value
2025-01-09T18:24:11.1889870Z   /Users/runner/micromamba/envs/tardis/lib/python3.12/site-packages/traitlets/traitlets.py:1385: DeprecationWarning:
2025-01-09T18:24:11.1890080Z   
2025-01-09T18:24:11.1890220Z   Passing unrecognized arguments to super(HTML).__init__(indent=True).
2025-01-09T18:24:11.1890370Z   object.__init__() takes exactly one argument (the instance to initialize)
2025-01-09T18:24:11.1890560Z   This is deprecated in traitlets 4.2.This error will be raised in a future release of traitlets.
2025-01-09T18:24:11.1890570Z 
2025-01-09T18:24:11.1890730Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-01-09T18:24:11.1890730Z 
2025-01-09T18:24:11.1890860Z ---------- coverage: platform darwin, python 3.12.4-final-0 ----------
2025-01-09T18:24:11.1890950Z Coverage HTML written to dir coverage_html_report
2025-01-09T18:24:11.1891040Z Coverage XML written to file coverage.xml
2025-01-09T18:24:11.1891050Z 
2025-01-09T18:24:11.1891150Z =========================== short test summary info ============================
2025-01-09T18:24:11.1891840Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_photosphere[formal_integral_geometry0-0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1892510Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_photosphere[formal_integral_geometry0-0.5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1893180Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_photosphere[formal_integral_geometry0-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1893840Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_photosphere[formal_integral_geometry1-0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1894650Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_photosphere[formal_integral_geometry1-0.5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1895450Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_photosphere[formal_integral_geometry1-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1896110Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_shells[formal_integral_geometry0-1e-05] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1896760Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_shells[formal_integral_geometry0-0.5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1897400Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_shells[formal_integral_geometry0-0.99] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1898070Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_shells[formal_integral_geometry0-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1898920Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_shells[formal_integral_geometry1-1e-05] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1899560Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_shells[formal_integral_geometry1-0.5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1900210Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_shells[formal_integral_geometry1-0.99] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1901250Z FAILED tardis/spectrum/tests/test_numba_formal_integral.py::test_populate_z_shells[formal_integral_geometry1-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1901840Z FAILED tardis/tests/test_tardis_full.py::test_run_tardis_from_config_obj - Failed: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1902460Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1903340Z FAILED tardis/transport/montecarlo/tests/test_montecarlo_main_loop.py::test_montecarlo_main_loop_vpacket_log - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1904150Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[interaction_type_in_use-interaction_type_to_check] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1904960Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[shell_id_in_use-shell_id_to_check] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1905910Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[r_in_use-r_to_check] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1906660Z FAILED tardis/transport/montecarlo/tests/test_rpacket_last_interaction_tracker.py::test_last_interaction_properties[nu_packet_collection-nu_to_check] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1907480Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[interaction_type_last_interaction_class-last_interaction_type_rpacket_tracker] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1908400Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[shell_id_last_interaction_class-shell_id_rpacket_tracker] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1909160Z FAILED tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_tracker_properties[nu_from_packet_collection-nu_rpacket_tracker] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1910410Z FAILED tardis/transport/montecarlo/tests/test_weighted_packet_source_integration.py::test_montecarlo_main_loop_weighted - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1911090Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_abundances - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1911730Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_velocities - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1912330Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_densities - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1913230Z ERROR tardis/model/tests/test_base.py::TestModelFromPaper1Config::test_time_explosion - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1913820Z ERROR tardis/model/tests/test_base.py::TestModelFromASCIIDensity::test_velocities - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1914580Z ERROR tardis/model/tests/test_base.py::TestModelFromASCIIDensity::test_abundances - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1915170Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensity::test_velocities - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1915750Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensity::test_abundances - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1916380Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundances::test_velocities - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1917000Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundances::test_abundances - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1918770Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesVSlice::test_velocities - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1919950Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesVSlice::test_abundances - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1920880Z ERROR tardis/model/tests/test_base.py::TestModelFromUniformDensity::test_density - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1921520Z ERROR tardis/model/tests/test_base.py::TestModelFromInitialTinner::test_initial_temperature - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1922210Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_velocities - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1922900Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_abundances - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1923550Z ERROR tardis/model/tests/test_base.py::TestModelFromArtisDensityAbundancesAllAscii::test_densities - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1924380Z ERROR tardis/model/tests/test_base.py::test_ascii_reader_power_law - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1925350Z ERROR tardis/model/tests/test_base.py::test_ascii_reader_exponential_law - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1925960Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[0-1.00977478e+45] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1926560Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[10-1.98154804e+45] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1927150Z ERROR tardis/model/tests/test_base.py::test_radial_1D_geometry_volume[19-3.13361319e+45] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1927780Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index0-539428198] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1928410Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index1-409675383] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1929390Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index2-314387928] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1930020Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index3-56066111] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1930640Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index4-42580098] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1931250Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index5-32676283] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1931860Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index6-841032262] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1932700Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index7-638732300] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1934690Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index8-490167906] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1935350Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index9-269136275] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1936150Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index10-204398856] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1936770Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index11-156857199] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1937700Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index12-45482957] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1938380Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index13-34542591] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1939000Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index14-26508241] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1940980Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index15-34001569] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1941650Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index16-25822910] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1942500Z ERROR tardis/model/tests/test_base.py::test_composition_elemental_number_density[index17-19816693] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1943630Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index0-1.4471412e+31] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1944260Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index1-2.6820129e+30] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1944850Z ERROR tardis/model/tests/test_base.py::test_simulation_state_mass[index2-1.3464444e+29] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1949560Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index0-1.67378172e-24] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1953160Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index1-9.51707707e-23] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1955110Z ERROR tardis/model/tests/test_base.py::test_radial_1d_model_atomic_mass[index2-9.54725917e-23] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1956540Z ERROR tardis/model/tests/test_base.py::TestModelStateFromNonUniformAbundances::test_atomic_mass - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1957250Z ERROR tardis/model/tests/test_base.py::TestModelStateFromNonUniformAbundances::test_elemental_number_density - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1957820Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_scalars[t_inner] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1958400Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[dilution_factor] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1959150Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[v_inner] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1959810Z ERROR tardis/model/tests/test_base.py::test_hdf_simulation_state_nparray[v_outer] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1960330Z ERROR tardis/model/tests/test_density.py::test_hdf_density_0 - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1960840Z ERROR tardis/model/tests/test_density.py::test_hdf_time_0 - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1961430Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[scatter-False] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1962030Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[macroatom-False] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1962650Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[macroatom-True] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1963500Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[downbranch-False] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1964280Z ERROR tardis/opacities/tests/test_opacity_solver.py::test_opacity_solver[downbranch-True] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1964980Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[scatter-False] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1965600Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[macroatom-False] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1966230Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[macroatom-True] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1966850Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[downbranch-False] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1967470Z ERROR tardis/opacities/tests/test_opacity_state_numba.py::test_opacity_state_to_numba[downbranch-True] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1968390Z ERROR tardis/opacities/tests/test_tau_sobolev.py::test_calculate_sobolev_line_opacity - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1968960Z ERROR tardis/opacities/tests/test_tau_sobolev.py::test_calculate_beta_sobolevs - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1969520Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[number_density] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1971530Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_rad] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1972240Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[general_level_boltzmann_factor] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1972850Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[level_boltzmann_factor] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1973780Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[stimulated_emission_factor] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1974700Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[t_electrons] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1975270Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[wavelength_cm] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1975920Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_lower_level_index] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1976490Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[ionization_data] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1977050Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[density] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1977600Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[atomic_mass] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1978170Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[level_number_density] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1980060Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines_upper_level_index] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1980610Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1981650Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[beta_sobolev] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1982290Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[transition_probabilities] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1982830Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[phi] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1983410Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[electron_densities] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1983940Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[t_rad] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1984720Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[selected_atoms] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1985280Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[ion_number_density] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1985990Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[partition_function] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1986540Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[abundance] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1987090Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[g_electron] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1987680Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[g] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1988360Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[lines] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1989010Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[f_lu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1989610Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[tau_sobolevs] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1990150Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[j_blues] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1990710Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[metastability] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1991250Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[w] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1991810Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_plasma[excitation_energy] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1992340Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_levels - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1992900Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_scalars[time_explosion] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1993540Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_scalars[link_t_rad_t_electron] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1994470Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_hdf_helium_treatment - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1995200Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_atomic_data_uuid - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1995750Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_collection[t_rad] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1996280Z ERROR tardis/plasma/tests/test_hdf_plasma.py::test_collection[w] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1996890Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_w] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1998150Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_rad] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1999000Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_electron_densities] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.1999970Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_state_iterations[iterations_t_inner] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2000580Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[nu_bar_estimator] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2001500Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[j_estimator] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2002580Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[t_radiative] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2008850Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[dilution_factor] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2014310Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_nus] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2014930Z ERROR tardis/simulation/tests/test_simulation.py::test_plasma_estimates[output_energies] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2015670Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_initialization - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2016330Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2017260Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_spectrum_real_packets_reabsorbed - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2017860Z ERROR tardis/spectrum/tests/test_spectrum_solver.py::TestSpectrumSolver::test_solve - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2018460Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_j_blue_estimators - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2019290Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_spectrum - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2019970Z ERROR tardis/tests/test_tardis_full.py::TestTransportSimple::test_virtual_spectrum - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2020690Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[-1-downbranch] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2021400Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-downbranch] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2022080Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-downbranch] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2022790Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-downbranch] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2023550Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[-1-macroatom] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2024370Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[-1-macroatom] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2025080Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[-1-macroatom] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2025780Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[-1-macroatom] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2026490Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[30-macroatom] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2027210Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-macroatom] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2027890Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-macroatom] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2028840Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-macroatom] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2029530Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_simulation[30-downbranch] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2030230Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_j_blue_estimators[30-downbranch] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2030910Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum[30-downbranch] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2031650Z ERROR tardis/tests/test_tardis_full_formal_integral.py::TestTransportSimpleFormalIntegral::test_spectrum_integrated[30-downbranch] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2032260Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[output_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2034060Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[output_energy] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2034890Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[nu_bar_estimator] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2035500Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[j_estimator] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2036260Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[emitted_packet_mask] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2039300Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_type] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2041620Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_in_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2044390Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_interaction_in_r] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2046900Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_out_id] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2048730Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_in_id] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2050710Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[last_line_interaction_shell_id] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2052830Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_nus] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2055030Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_energies] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2057670Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_initial_rs] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2059590Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_initial_mus] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2061140Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_in_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2062570Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_in_r] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2063860Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_interaction_type] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2066370Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_in_id] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2068360Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_out_id] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2072460Z ERROR tardis/transport/montecarlo/tests/test_base.py::test_hdf_transport_state[virt_packet_last_line_interaction_shell_id] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2074250Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_thomson_scatter - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2076720Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2077900Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2079420Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_scatter[2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2081690Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet0-expected0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2083510Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet1-expected1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2086370Z ERROR tardis/transport/montecarlo/tests/test_interaction.py::test_line_emission[test_packet2-expected2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2088270Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[1963-10015] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2089900Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[1-9993] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2091600Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[2111963-17296] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2093320Z ERROR tardis/transport/montecarlo/tests/test_macro_atom.py::test_macro_atom[10000-9993] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2095240Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[scatter-False] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2097110Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[macroatom-False] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2099560Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[macroatom-True] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2101800Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[downbranch-False] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2103570Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_opacity_state_initialize[downbranch-True] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2104350Z ERROR tardis/transport/montecarlo/tests/test_numba_interface.py::test_VPacketCollection_add_packet - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2105040Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-11-132] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2105690Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-1-133] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2106620Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_emitted[132-2-133] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2107340Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--133-132] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2108010Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--133-133] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2108700Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_reabsorbed[132--1000000000.0-133] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2109660Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132--1-199] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2110320Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132-0-132] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2111120Z ERROR tardis/transport/montecarlo/tests/test_packet.py::test_move_packet_across_shell_boundary_increment[132-20-154] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2111910Z ERROR tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_boundary_interactions - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2112550Z ERROR tardis/transport/montecarlo/tests/test_rpacket_tracker.py::test_rpacket_trackers_to_dataframe - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2113320Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket_within_shell - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2113920Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_vpacket - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2114500Z ERROR tardis/transport/montecarlo/tests/test_vpacket.py::test_trace_bad_vpacket - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2115190Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_list] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2116070Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_keep_colour] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2116870Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_parse_species_list[_species_mapped] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2117580Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_data] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2118360Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-plot_colors] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2119080Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data0-new_bin_edges] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2119800Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_data] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2120720Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-plot_colors] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2121440Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data1-new_bin_edges] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2122140Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_data] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2122880Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-plot_colors] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2123590Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data2-new_bin_edges] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2124300Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_data] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2125110Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-plot_colors] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2125880Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data3-new_bin_edges] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2126590Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_data] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2127300Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-plot_colors] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2128010Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data4-new_bin_edges] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2128710Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_data] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2129580Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-plot_colors] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2130360Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data5-new_bin_edges] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2131080Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_data] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2131790Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-plot_colors] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2132500Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data6-new_bin_edges] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2133200Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_data] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2134150Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-plot_colors] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2134940Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_prepare_plot_data[plotter_prepare_plot_data7-new_bin_edges] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2135620Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2136330Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2137010Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2137690Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl3] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2138640Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl4] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2139330Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2140020Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl6] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2140710Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_mpl[plotter_generate_plot_mpl7] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2141370Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2142030Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2143070Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2144050Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl3] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2145650Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl4] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2146460Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2147250Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl6] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2148130Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_mpl_image[plotter_generate_plot_mpl7] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2151090Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2151950Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2153080Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2155330Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply3] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2156030Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply4] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2156730Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2157700Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply6] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2158370Z ERROR tardis/visualization/tools/tests/test_liv_plot.py::TestLIVPlotter::test_generate_plot_ply[plotter_generate_plot_ply7] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2159240Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_with_theta_init - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2160290Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2161070Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2162430Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_coordinates_multiple_packets[10] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2163760Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2170380Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2173620Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_equal_array_size[10] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2174910Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2175600Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2177690Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[light-10] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2179640Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2181480Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2182320Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_frames[dark-10] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2183430Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[10] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2185240Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[30] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2188000Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_get_slider_steps[50] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2189940Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2192440Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2194680Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[light-10] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2197640Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2198380Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2199050Z ERROR tardis/visualization/tools/tests/test_rpacket_plot.py::TestRPacketPlotter::test_generate_plot[dark-10] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2199740Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_full_species_list] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2200390Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_species_list] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2201550Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_parse_species_list[_keep_colour] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2202360Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2203150Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2203950Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2204710Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data3] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2205450Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data4] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2206810Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2207600Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data6] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2208380Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data7] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2209560Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data8] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2212040Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data9] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2212780Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data10] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2213820Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data11] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2214600Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data12] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2215330Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data13] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2216050Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data14] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2216790Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_calculate_plotting_data[plotter_calculate_plotting_data15] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2217600Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2218440Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2219140Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2219850Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply3] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2220540Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply4] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2221230Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2222010Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply6] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2222700Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply7] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2223500Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply8] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2224190Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply9] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2224900Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply10] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2225610Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply11] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2226400Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply12] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2227150Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply13] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2227840Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply14] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2228530Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_generate_plot_mpl[plotter_generate_plot_ply15] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2229210Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2229900Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2230590Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2231370Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl3] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2232110Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl4] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2232880Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl5] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2233580Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl6] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2234250Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl7] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2236330Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl8] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2237440Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl9] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2238450Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl10] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2239120Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl11] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2239790Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl12] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2240470Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl13] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2242120Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl14] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2244900Z ERROR tardis/visualization/tools/tests/test_sdec_plot.py::TestSDECPlotter::test_mpl_image[plotter_generate_plot_mpl15] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2247230Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range0-packet_out_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2249880Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range1-packet_in_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2253230Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[wavelength_range2-packet_out_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2255300Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_species_interactions[None-packet_in_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2257420Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range0-packet_out_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2260340Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range1-packet_in_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2262750Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-wavelength_range2-packet_out_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2263750Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[exc-None-packet_in_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2264920Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range0-packet_out_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2267110Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range1-packet_in_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2269770Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-wavelength_range2-packet_out_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2272810Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[de-exc-None-packet_in_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2275560Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range0-packet_out_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2278100Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range1-packet_in_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2281560Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-wavelength_range2-packet_out_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2283030Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetData::test_get_last_line_counts[both-None-packet_in_nu] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2285540Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[liw_with_selection0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2288500Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection0-0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2290960Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection0-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2293440Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[liw_with_selection0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2294220Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2294940Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2295930Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection0-2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2296880Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[liw_with_selection1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2297800Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection1-0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2298520Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[liw_with_selection1-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2300660Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[liw_with_selection1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2303140Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2306200Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2309190Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[liw_with_selection1-2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2311840Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_plot[None] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2313780Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[None-0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2314750Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_filter_mode_toggle[None-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2316720Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_selection_on_species_intrctn_table[None] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2318170Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-0] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2321300Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2322390Z ERROR tardis/visualization/widgets/tests/test_line_info.py::TestLineInfoWidgetEvents::test_group_mode_change[None-2] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2324360Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_shells_data - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2326210Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_element_count_data[1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2328840Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_element_count_data[20] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2332140Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_ion_count_data[12-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2334930Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_ion_count_data[20-20] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2337050Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_level_count_data[2-12-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2338890Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestBaseShellInfo::test_level_count_data[3-20-20] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2341920Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_shells_data - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2343520Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_element_count_data[1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2344220Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_element_count_data[20] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2345260Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_ion_count_data[12-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2345920Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_ion_count_data[20-20] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2346670Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_level_count_data[2-12-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2347340Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestSimulationShellInfo::test_level_count_data[3-20-20] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2347970Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_shells_data - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2348610Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_element_count_data[1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2349780Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_element_count_data[20] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2351210Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_ion_count_data[12-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2352050Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_ion_count_data[20-20] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2352750Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_level_count_data[2-12-1] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2353930Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestHDFShellInfo::test_level_count_data[3-20-20] - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2354940Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_shells_table - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2356400Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_element_count_table - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2358010Z ERROR tardis/visualization/widgets/tests/test_shell_info.py::TestShellInfoWidget::test_selection_on_ion_count_table - TypeError: OpacityState.__init__() missing 6 required positional arguments: 'electron_density', 't_electrons', 'line_list_nu', 'tau_sobolev', 'beta_sobolev', and 'continuum_state'
2025-01-09T18:24:11.2358950Z = 25 failed, 1038 passed, 329 skipped, 2 deselected, 23 xfailed, 4 xpassed, 69 warnings, 375 errors in 374.88s (0:06:14) =
2025-01-09T18:24:12.3216960Z ##[error]Process completed with exit code 1.
